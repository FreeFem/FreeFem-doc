const LUNR_DATA = {"version":"2.3.9","fields":["t","b"],"fieldVectors":[["t/0",[]],["b/0",[]],["t/1",[0,2.916]],["b/1",[]],["t/2",[1,5.135]],["b/2",[2,4.544,3,4.544,4,5.933,5,5.717,6,6.551,7,6.551,8,5.207,9,3.817,10,4.43,11,1.62,12,7.167,13,7.009,14,4.544,15,5.207,16,5.207,17,5.207,18,5.207,19,1.031,20,2.131,21,3.924,22,1.031,23,4.108,24,1.257,25,3.119,26,1.847,27,2.205,28,3.226,29,3.381,30,2.497,31,2.855,32,6.551,33,5.688,34,2.177,35,0.337,36,1.809,37,0.619,38,1.387,39,4.544,40,5.207,41,5.207,42,5.207,43,5.207,44,1.992,45,5.207,46,5.207,47,2.131,48,1.255,49,1.926,50,6.905,51,5.207,52,7.167,53,0.997,54,0.41,55,5.207,56,5.207,57,4.544,58,6.551,59,1.973,60,5.207,61,2.264,62,3.375,63,5.717,64,4.108,65,4.505,66,1.238,67,0.333,68,1.814,69,2.456,70,5.168,71,6.255,72,3.521,73,4.108,74,4.108,75,4.544,76,5.207,77,5.207,78,1.674,79,2.848,80,6.551,81,5.207,82,1.803,83,5.207,84,7.167,85,4.544,86,5.207,87,5.207,88,1.467,89,2.541,90,5.207,91,5.207,92,4.544,93,6.551,94,4.108,95,4.43,96,2.177,97,1.694,98,3.028,99,1.753,100,6.551,101,3.028,102,3.589,103,5.021,104,0.899,105,0.41,106,5.207,107,5.207,108,4.544,109,3.782,110,3.782,111,3.119,112,4.847,113,3.305,114,5.168,115,1.345,116,1.583,117,2.096,118,4.157,119,4.544,120,4.544,121,5.207,122,5.717,123,2.812,124,0.108,125,5.207,126,5.207,127,5.207,128,5.207,129,5.207,130,1.947,131,2.177,132,4.544,133,5.207,134,5.242,135,5.207,136,4.544,137,5.207,138,5.351,139,6.551,140,5.717,141,5.207,142,5.207,143,5.168,144,7.167,145,5.207,146,4.544,147,4.544,148,4.544,149,4.108,150,3.119,151,5.207,152,4.544,153,5.207,154,5.207,155,5.207,156,5.207,157,3.119,158,2.682,159,2.848,160,0.809,161,1.433,162,1.62,163,1.694,164,3.521,165,6.551,166,4.544,167,5.207,168,5.207,169,5.207,170,1.055,171,2.45,172,5.207,173,3.305,174,3.782,175,1.926,176,2.45,177,1.127,178,5.207,179,4.544,180,5.717,181,6.551,182,1.342,183,1.53,184,7.167,185,4.544,186,5.207,187,1.254,188,5.207,189,5.207,190,2.06,191,5.207,192,4.544,193,5.207,194,5.207,195,1.342,196,2.714,197,2.682,198,6.551,199,4.544,200,3.119,201,5.207,202,3.924,203,6.551,204,5.207,205,5.207,206,1.481,207,3.521,208,5.207,209,6.551,210,6.551,211,4.544,212,5.207,213,4.544,214,4.108,215,5.207,216,4.544,217,5.207,218,5.207,219,4.549,220,5.207,221,5.207,222,4.544,223,3.305,224,5.207,225,2.956,226,3.521,227,4.108,228,2.682,229,6.255,230,4.544,231,1.947,232,0.313,233,2.456,234,2.682,235,4.544,236,5.207,237,5.207,238,5.207,239,5.207,240,5.207,241,3.119,242,1.055,243,2.356,244,0.562,245,3.782,246,3.119,247,4.544,248,4.544,249,5.207,250,5.207,251,5.207,252,6.551,253,4.773,254,5.207,255,5.207,256,3.521,257,5.207,258,4.544,259,4.544,260,4.108,261,1.481,262,4.544,263,4.758,264,3.119,265,4.108,266,1.433,267,4.108,268,2.264,269,0.369,270,4.108,271,4.108,272,4.544,273,5.207,274,3.719,275,5.207,276,2.739,277,4.108,278,5.207,279,4.544,280,4.544,281,5.207,282,5.207,283,5.207,284,5.207,285,5.207,286,5.207,287,4.108,288,4.544,289,4.544,290,5.207,291,5.207,292,2.096,293,5.207,294,6.551,295,4.544,296,5.207,297,5.207,298,2.541,299,2.365,300,5.207,301,4.544,302,5.207,303,1.998,304,2.682,305,4.544,306,6.551,307,5.207,308,5.207,309,5.207,310,5.207,311,2.956,312,3.119,313,4.544,314,7.167,315,1.583,316,1.185,317,1.185,318,5.207,319,5.207,320,0.619,321,0.931,322,5.207,323,5.207,324,5.207,325,5.207,326,6.551,327,5.168,328,5.168,329,4.544,330,6.551,331,5.207,332,5.207,333,1.433,334,3.521,335,1.299,336,5.207,337,4.544,338,4.108,339,4.108,340,2.02,341,0.476,342,5.207,343,4.544,344,6.551,345,6.551,346,6.551,347,6.551,348,5.207,349,3.226,350,3.119,351,1.139,352,3.119,353,0.931,354,0.963,355,1.433,356,4.544,357,5.207,358,5.207,359,4.544,360,3.305,361,4.108,362,1.139,363,3.521,364,5.207,365,0.546,366,5.207,367,5.207,368,4.544,369,5.207,370,5.717,371,5.207,372,1.342,373,2.812,374,3.521,375,3.521,376,2.096,377,4.544,378,3.305,379,5.168,380,5.207,381,5.207,382,4.108,383,2.956,384,5.207,385,1.299,386,0.41,387,5.207,388,5.207,389,4.544,390,4.544,391,1.531,392,5.207,393,4.108,394,1.947,395,4.544,396,5.207,397,2.564,398,3.119,399,5.207,400,5.717,401,0.697,402,0.454,403,5.207,404,5.207,405,4.544,406,5.207,407,5.207,408,2.812,409,3.305,410,5.207,411,2.177,412,5.207,413,4.544,414,5.207,415,6.551,416,5.207,417,5.207,418,5.207,419,5.207,420,5.207,421,5.207,422,5.207,423,5.207,424,2.682,425,5.207,426,5.207,427,5.207,428,5.207,429,4.544,430,4.108,431,5.207,432,4.108,433,5.207,434,1.637,435,1.947,436,4.544,437,5.207,438,5.207,439,3.782,440,5.207,441,5.207,442,4.544,443,4.544,444,5.207,445,5.207,446,5.207,447,5.207,448,5.207,449,4.544,450,4.544,451,5.207,452,5.207,453,5.207,454,4.544,455,2.956,456,2.812,457,1.694,458,3.119,459,2.02,460,2.096,461,5.207,462,5.207,463,5.207,464,4.544,465,5.207,466,5.207,467,1.583,468,1.531,469,2.264,470,2.456,471,5.207,472,5.207,473,0.056,474,0.04,475,2.02]],["t/3",[26,0.89,124,0.048,476,3.452]],["b/3",[3,1.417,9,1.351,11,1.319,14,3.653,20,1.758,21,3.237,22,1.245,23,2.164,24,1.305,25,4.287,26,2.132,27,0.923,28,1.351,29,2.79,30,0.566,31,0.99,33,1.855,34,0.679,35,0.435,36,0.581,37,0.767,38,0.731,39,3.653,44,1.273,48,1.101,49,2.28,53,0.682,54,0.623,59,0.755,61,1.548,66,1.177,67,0.322,68,2.246,69,0.766,78,1.429,82,0.447,88,1.415,97,0.892,98,1.434,99,1.199,102,2.034,104,0.808,105,0.606,115,0.748,116,0.494,117,1.104,124,0.122,130,0.607,131,0.679,159,2.034,160,1.28,161,1.95,162,0.946,163,1.989,170,0.674,176,0.607,177,0.76,182,1.826,183,1.655,187,1.234,190,2.108,195,1.206,206,1.79,207,3.164,231,0.607,232,0.39,233,0.766,234,0.837,242,0.87,244,0.577,246,2.507,261,0.78,265,1.281,268,2.349,269,0.414,276,0.679,292,2.699,303,1.845,304,0.837,315,1.643,316,0.627,317,0.533,320,0.748,321,0.637,333,1.44,335,0.684,341,0.632,349,3.098,350,4.491,351,0.916,352,1.643,353,0.637,354,0.659,355,0.755,359,3.653,360,3.881,361,2.164,362,1.65,363,2.409,365,0.69,376,0.654,385,0.684,386,0.6,391,1.67,398,2.133,401,0.68,402,0.617,411,1.489,424,1.413,434,0.863,435,0.607,455,2.022,467,1.422,468,1.493,470,1.975,473,0.038,474,0.021,477,1.975,478,1.624,479,1.098,480,1.814,481,0.686,482,1.098,483,1.261,484,1.082,485,1.098,486,1.624,487,1.95,488,1.434,489,0.833,490,2.001,491,1.179,492,2.81,493,1.124,494,1.624,495,1.624,496,1.624,497,1.624,498,0.973,499,1.624,500,0.519,501,1.132,502,2.735,503,0.81,504,2.81,505,1.855,506,0.793,507,3.021,508,2.046,509,2.512,510,4.091,511,2.173,512,1.06,513,3.433,514,1.605,515,1.777,516,1.417,517,0.837,518,1.106,519,1.756,520,1.417,521,1.022,522,0.756,523,1.575,524,1.624,525,1.845,526,2.469,527,1.371,528,1.515,529,1.064,530,2.743,531,2.117,532,1.624,533,1.67,534,2.741,535,1.624,536,0.766,537,2.26,538,0.956,539,3.108,540,3.225,541,2.912,542,4.678,543,2.001,544,2.919,545,3.693,546,3.108,547,1.193,548,3.562,549,2.831,550,2.304,551,2.809,552,1.482,553,2.097,554,1.624,555,1.624,556,2.164,557,1.064,558,1.624,559,1.013,560,1.11,561,1.281,562,2.409,563,0.603,564,2.212,565,2.261,566,2.743,567,2.743,568,2.743,569,1.975,570,1.741,571,2.743,572,1.741,573,2.132,574,0.776,575,0.735,576,1.266,577,1.489,578,2.445,579,1.179,580,1.82,581,1.624,582,0.884,583,1.241,584,0.877,585,1.651,586,1.624,587,0.494,588,3.686,589,1.624,590,1.417,591,3.302,592,2.802,593,3.655,594,1.482,595,1.417,596,1.422,597,1.417,598,1.417,599,1.417,600,1.417,601,1.246,602,1.294,603,0.651,604,1.093,605,1.558,606,0.603,607,0.877,608,0.63,609,0.8,610,2.802,611,0.892,612,1.417,613,1.179,614,2.394,615,1.417,616,0.648,617,0.978,618,0.605,619,1.417,620,2.394,621,1.417,622,0.95,623,1.417,624,1.417,625,0.985,626,0.725,627,0.705,628,0.751,629,0.676,630,0.705,631,0.705,632,1.417,633,0.767,634,1.728,635,1.031,636,1.521,637,0.886,638,0.779,639,1.417,640,1.417,641,0.779,642,1.281,643,0.779,644,1.397,645,0.779,646,0.819,647,1.417,648,0.76,649,1.832,650,2.349,651,2.453,652,1.992,653,2.743,654,2.134,655,2.133,656,1.351,657,1.624,658,2.164,659,1.992,660,3.653,661,1.281,662,0.973,663,1.417,664,1.417,665,1.417,666,1.417,667,0.981,668,0.807,669,2.394,670,1.413,671,1.624,672,1.992,673,2.394,674,1.417,675,1.152,676,1.624,677,0.778,678,3.04,679,1.332,680,0.511,681,1.332,682,0.628,683,0.495,684,0.723,685,1.231,686,1.179,687,0.511,688,2.657,689,1.171,690,1.624,691,1.624,692,1.624,693,2.587,694,2.277,695,1.417,696,1.417,697,1.624,698,1.624,699,3.358,700,0.679,701,1.624,702,0.654,703,1.417,704,2.207,705,1.12,706,0.922,707,1.417,708,1.417,709,4.678,710,1.06,711,1.624,712,1.924,713,2.134,714,1.417,715,1.676,716,4.569,717,1.894,718,2.294,719,1.741,720,2.022,721,1.576,722,1.992,723,1.883,724,1.979,725,2.79,726,4.781,727,1.566,728,2.885,729,2.743,730,3.925,731,2.549,732,1.004,733,0.973,734,1.179,735,1.417,736,2.164,737,1.417,738,1.417,739,1.417,740,3.108,741,3.108,742,3.542,743,1.351,744,1.417,745,1.417,746,2.394,747,2.394,748,1.521,749,1.098,750,1.281,751,0.679,752,1.281,753,0.956,754,1.417,755,1.972,756,4.186,757,1.031,758,1.612,759,2.39,760,1.75,761,2.735,762,2.207,763,2.743,764,3.807,765,1.883,766,1.281,767,1.013,768,2.294,769,1.165,770,2.034,771,1.417,772,3.562,773,1.273,774,4.186,775,3.108,776,1.361,777,0.586,778,1.624,779,1.434,780,1.457,781,2.297,782,3.562,783,2.81,784,3.303,785,2.124,786,1.782,787,1.558,788,3.841,789,4.759,790,2.553,791,1.903,792,3.653,793,3.221,794,1.395,795,2.587,796,1.031,797,3.69,798,2.175,799,1.82,800,3.237,801,0.735,802,2.175,803,3.108,804,2.615,805,3.108,806,2.207,807,1.098,808,1.031,809,0.923,810,2.743,811,1.417,812,0.837,813,1.566,814,1.907,815,1.281,816,1.99,817,1.417,818,3.925,819,1.417,820,1.098,821,3.841,822,1.624,823,1.992,824,2.831,825,1.417,826,3.397,827,3.562,828,1.241,829,1.624,830,2.261,831,1.624,832,2.394,833,1.548,834,1.624,835,0.965,836,1.285,837,4.186,838,1.417,839,1.624,840,1.417,841,3.562,842,2.022,843,1.098,844,3.108,845,3.69,846,1.417,847,2.917,848,1.413,849,1.859,850,1.624,851,1.95,852,1.241,853,1.629,854,0.837,855,1.332,856,2.156,857,3.562,858,1.923,859,3.302,860,0.922,861,5.51,862,4.48,863,1.482,864,1.409,865,1.82,866,3.69,867,1.624,868,4.083,869,1.482,870,1.294,871,1.281,872,1.741,873,1.624,874,1.417,875,0.837,876,1.624,877,1.624,878,1.855,879,1.624,880,1.624,881,2.164,882,1.417,883,2.394,884,3.068,885,1.12,886,0.99,887,2.394,888,1.624,889,2.26,890,1.417,891,1.031,892,1.624,893,1.643,894,2.882,895,1.612,896,2.958,897,1.624,898,0.973,899,0.877,900,1.624,901,5.637,902,3.221,903,2.507,904,1.741,905,3.302,906,3.671,907,2.802,908,1.624,909,2.743,910,1.548,911,1.624,912,2.743,913,1.624,914,1.434,915,2.394,916,2.207,917,1.624,918,1.104,919,0.63,920,1.685,921,1.624,922,1.624,923,1.624,924,3.562,925,1.624,926,1.022,927,4.678,928,2.743,929,3.562,930,4.186,931,2.743,932,1.624,933,1.624,934,1.624,935,1.624,936,1.624,937,2.394,938,1.624,939,1.417,940,1.241,941,5.076,942,1.624,943,1.624,944,1.624,945,2.587,946,1.624,947,2.676,948,1.624,949,1.624,950,1.624,951,1.624,952,3.562,953,2.743,954,1.624,955,1.281,956,1.624,957,1.624,958,1.624,959,1.624,960,2.394,961,0.8,962,1.754,963,1.612,964,1.624,965,1.417,966,1.624,967,1.624,968,2.743,969,1.624,970,1.624,971,1.624,972,2.743,973,2.743,974,1.417,975,1.624,976,1.624,977,1.417,978,2.394,979,2.743,980,1.624,981,1.624,982,1.624,983,1.624,984,1.624,985,1.624,986,1.624,987,1.624,988,1.624,989,1.624,990,0.877,991,2.743,992,1.624,993,0.586,994,1.624,995,1.624,996,1.624,997,1.624,998,3.562,999,3.562,1000,1.179,1001,1.417,1002,1.417,1003,2.164,1004,1.624,1005,2.394,1006,1.281,1007,1.624,1008,1.179,1009,2.164,1010,1.624,1011,2.26,1012,1.855,1013,1.741,1014,1.281,1015,0.735,1016,1.624,1017,1.624,1018,1.548,1019,1.417,1020,1.624,1021,1.741,1022,1.031,1023,2.022,1024,1.241,1025,1.624,1026,1.624,1027,1.417,1028,1.624,1029,1.624,1030,1.624,1031,1.624,1032,1.624,1033,2.656,1034,1.855,1035,0.607,1036,0.735,1037,0.973,1038,1.624,1039,1.624,1040,1.624,1041,2.743,1042,0.877,1043,1.741,1044,2.507,1045,1.855,1046,0.837,1047,2.261,1048,1.179,1049,1.624,1050,0.63,1051,1.098,1052,2.394,1053,2.797,1054,1.417,1055,1.624,1056,1.098,1057,1.281,1058,1.82,1059,2.968,1060,1.956,1061,5.745,1062,4.969,1063,1.031,1064,0.837,1065,2.164,1066,1.913,1067,1.643,1068,1.624,1069,0.528,1070,1.624,1071,1.417,1072,1.624,1073,2.743,1074,1.417,1075,3.562,1076,1.624,1077,1.624,1078,1.624,1079,3.562,1080,1.624,1081,3.562,1082,1.624,1083,1.624,1084,1.624,1085,1.855,1086,2.5,1087,2.445,1088,1.624,1089,2.743,1090,1.417,1091,1.989,1092,0.63,1093,3.164,1094,1.285,1095,5.404,1096,5.404,1097,4.678,1098,0.679,1099,1.417,1100,1.558,1101,2.021,1102,2.743,1103,3.562,1104,1.409,1105,2.122,1106,1.281,1107,1.859,1108,1.754,1109,1.624,1110,1.612,1111,1.624,1112,2.802,1113,2.661,1114,2.743,1115,2.409,1116,1.992,1117,1.273,1118,1.624,1119,1.193,1120,3.653,1121,2.743,1122,1.624,1123,0.837,1124,1.281,1125,1.624,1126,1.624,1127,1.624,1128,3.402,1129,1.624,1130,1.624,1131,1.624,1132,1.624,1133,1.624,1134,1.643,1135,2.394,1136,3.562,1137,2.207,1138,1.624,1139,3.562,1140,5.745,1141,5.076,1142,1.281,1143,1.624,1144,1.643,1145,1.305,1146,1.992,1147,1.241,1148,6.306,1149,5.02,1150,5.161,1151,4.957,1152,1.624,1153,2.743,1154,1.624,1155,1.992,1156,1.624,1157,1.624,1158,1.624,1159,1.624,1160,1.624,1161,1.624,1162,1.115,1163,1.624,1164,1.624,1165,1.624,1166,1.624,1167,1.624,1168,1.624,1169,1.624,1170,1.624,1171,1.624,1172,1.992,1173,1.482,1174,0.735,1175,1.031,1176,1.064,1177,1.835,1178,1.098,1179,2.156,1180,1.026,1181,1.294,1182,3.302,1183,2.882,1184,3.562,1185,1.624,1186,0.877,1187,1.482,1188,0.766,1189,1.835,1190,1.281,1191,1.624,1192,1.992,1193,1.624,1194,1.979,1195,1.031,1196,1.819,1197,2.657,1198,1.624,1199,1.624,1200,1.624,1201,1.434,1202,1.624,1203,2.164,1204,1.031,1205,1.624,1206,1.417,1207,2.743,1208,1.031,1209,1.624,1210,1.624,1211,0.735,1212,2.133,1213,1.064,1214,3.108,1215,1.417,1216,1.624,1217,1.624,1218,1.624,1219,1.624,1220,1.624,1221,1.624,1222,1.624,1223,1.624,1224,1.624,1225,1.624,1226,1.624,1227,1.624,1228,1.624,1229,2.164,1230,1.624,1231,1.624,1232,1.624,1233,1.624,1234,1.193,1235,1.624,1236,1.624,1237,1.193,1238,1.624,1239,1.624,1240,0.973,1241,1.624,1242,1.624,1243,1.031,1244,0.607,1245,1.098,1246,2.164,1247,1.624,1248,1.548,1249,2.394,1250,0.973,1251,0.735,1252,1.624,1253,1.855,1254,1.281,1255,2.164,1256,2.164,1257,3.108,1258,1.63,1259,2.259,1260,1.241,1261,2.117,1262,1.612,1263,2.022,1264,2.743,1265,3.108,1266,2.743,1267,1.031,1268,1.624,1269,2.394,1270,1.413,1271,2.26,1272,1.179,1273,0.755,1274,1.624,1275,1.624,1276,1.624,1277,1.179,1278,1.281,1279,0.654,1280,1.417,1281,3.108,1282,4.665,1283,5.491,1284,3.993,1285,1.75,1286,1.855,1287,2.394,1288,1.026,1289,1.754,1290,1.459,1291,1.558,1292,1.855,1293,1.624,1294,3.108,1295,1.624,1296,1.624,1297,1.624,1298,1.281,1299,1.031,1300,1.031,1301,1.624,1302,1.179,1303,0.877,1304,1.031,1305,2.394,1306,1.179,1307,1.624,1308,1.624,1309,1.624,1310,1.281,1311,3.108,1312,1.624,1313,1.098,1314,1.624,1315,1.624,1316,1.158,1317,0.922,1318,1.624,1319,1.624,1320,0.837,1321,1.624,1322,1.624,1323,3.69,1324,2.743,1325,1.434,1326,3.562,1327,1.624,1328,1.624,1329,1.624,1330,1.281,1331,1.624,1332,2.587,1333,1.417,1334,1.098,1335,1.031,1336,1.558,1337,0.922,1338,1.624,1339,3.108,1340,1.624,1341,1.992,1342,1.624,1343,1.624,1344,0.922,1345,1.179,1346,1.624,1347,1.179,1348,1.064,1349,1.855,1350,1.643,1351,0.837,1352,1.417,1353,1.031,1354,1.835,1355,1.624,1356,1.624,1357,1.624,1358,1.624,1359,1.624,1360,2.743,1361,3.302,1362,0.462,1363,0.566,1364,2.207,1365,1.624,1366,1.471,1367,1.624,1368,1.624,1369,0.447,1370,1.281,1371,1.624,1372,0.575,1373,2.022,1374,0.65,1375,1.417,1376,1.011,1377,1.104,1378,0.892,1379,0.99,1380,2.394,1381,1.031,1382,0.643,1383,0.76,1384,0.877,1385,0.651,1386,0.847,1387,2.164,1388,1.281,1389,2.743,1390,2.743,1391,0.973,1392,2.743,1393,5.076,1394,2.743,1395,0.442,1396,0.607,1397,0.86,1398,2.743,1399,3.562,1400,2.743,1401,2.394,1402,4.678,1403,5.404,1404,2.743,1405,1.558,1406,2.743,1407,2.743,1408,2.743,1409,2.743,1410,2.743,1411,2.743,1412,2.394,1413,2.743,1414,2.743,1415,2.743,1416,3.562,1417,2.743,1418,2.743,1419,2.743,1420,2.743,1421,2.743,1422,2.743,1423,1.624,1424,2.394,1425,2.743,1426,1.558,1427,1.624,1428,0.566,1429,1.558,1430,3.302,1431,1.624,1432,3.302,1433,0.76,1434,3.562,1435,3.562,1436,2.192,1437,2.5,1438,1.031,1439,2.656,1440,1.241,1441,1.294,1442,1.624,1443,1.624,1444,0.753,1445,0.723,1446,1.417,1447,1.624,1448,0.659,1449,0.637,1450,0.682,1451,0.682,1452,0.99,1453,2.743,1454,2.743,1455,1.624,1456,1.835,1457,1.026,1458,2.164,1459,0.754,1460,2.156,1461,0.754,1462,1.558,1463,1.624,1464,0.754,1465,2.743,1466,0.805,1467,0.832,1468,0.581,1469,0.707,1470,4.186,1471,1.624,1472,0.684,1473,3.653,1474,1.624,1475,0.707,1476,2.743,1477,1.624,1478,0.731,1479,3.562,1480,2.743,1481,3.562,1482,2.743,1483,0.755,1484,3.562,1485,0.755,1486,4.186,1487,4.186,1488,0.949,1489,0.78,1490,1.624,1491,1.624,1492,0.78,1493,0.755,1494,0.807,1495,1.624,1496,1.413,1497,2.133,1498,0.834,1499,0.834,1500,1.624,1501,0.834,1502,0.834,1503,1.624,1504,0.863,1505,1.548,1506,1.624,1507,1.482,1508,1.281,1509,0.923,1510,0.923,1511,0.923,1512,0.99,1513,0.508,1514,1.294,1515,1.413,1516,1.115,1517,2.376,1518,2.661,1519,2.659,1520,1.417,1521,1.624,1522,1.624,1523,1.624,1524,1.624,1525,3.653,1526,1.624,1527,1.624,1528,4.282,1529,1.624,1530,3.562,1531,1.013,1532,1.624,1533,1.624,1534,0.978,1535,2.743,1536,2.743,1537,1.624,1538,1.179,1539,1.281,1540,1.281,1541,1.281,1542,1.098,1543,0.837,1544,2.912,1545,0.877,1546,2.587,1547,2.743,1548,1.741,1549,1.624,1550,1.624,1551,1.281,1552,1.741,1553,1.417,1554,1.624,1555,2.164,1556,1.624,1557,1.624,1558,2.743,1559,1.624,1560,1.624,1561,1.281,1562,1.624,1563,1.624,1564,2.743,1565,1.624,1566,3.562,1567,1.417,1568,3.562,1569,1.624,1570,1.624,1571,1.624,1572,1.624,1573,1.624,1574,5.076,1575,2.81,1576,2.164,1577,1.624,1578,1.624,1579,1.624,1580,1.281,1581,4.678,1582,1.624,1583,1.624,1584,1.417,1585,1.624,1586,2.164,1587,1.643,1588,3.562,1589,3.108,1590,2.743,1591,1.624,1592,0.877,1593,1.624,1594,1.624,1595,0.679,1596,0.922,1597,1.624,1598,1.104,1599,0.8,1600,0.837,1601,1.624,1602,3.562,1603,1.624,1604,1.624,1605,1.624,1606,1.624,1607,1.624,1608,0.922,1609,1.098,1610,1.624,1611,2.164,1612,1.624,1613,0.607,1614,1.281,1615,0.478,1616,0.922,1617,1.624,1618,1.624,1619,1.624,1620,1.624,1621,1.031,1622,1.624,1623,1.179,1624,1.624,1625,1.624,1626,1.624,1627,1.624,1628,1.624,1629,1.624,1630,1.624,1631,1.179,1632,1.179,1633,3.562,1634,1.031,1635,5.076,1636,2.743,1637,3.562,1638,1.624,1639,1.624,1640,1.624,1641,1.624,1642,1.098,1643,2.743,1644,1.992,1645,1.281,1646,1.417,1647,1.281,1648,3.562,1649,1.624,1650,2.743,1651,1.098,1652,0.706,1653,0.973,1654,1.624,1655,3.562,1656,2.26,1657,1.624,1658,1.624,1659,2.377,1660,1.624,1661,1.624,1662,1.548,1663,0.8,1664,1.489,1665,3.69,1666,0.837,1667,1.558,1668,1.417,1669,1.417,1670,1.417,1671,1.417,1672,3.108,1673,0.877,1674,1.992,1675,1.417,1676,1.417,1677,1.417,1678,2.394,1679,2.164,1680,0.78,1681,0.8,1682,1.417,1683,2.394,1684,1.026,1685,1.624,1686,1.179,1687,1.179,1688,2.81,1689,0.654,1690,1.624,1691,1.417,1692,2.394,1693,0.99,1694,1.992,1695,0.922,1696,1.624,1697,1.624,1698,4.083,1699,1.417,1700,1.417,1701,1.417,1702,1.417,1703,1.417,1704,1.417,1705,1.417,1706,3.108,1707,1.417,1708,1.417,1709,1.417,1710,1.417,1711,1.417,1712,0.679,1713,1.179,1714,1.031,1715,1.417,1716,1.417,1717,1.417,1718,1.417,1719,1.417,1720,1.417,1721,2.394,1722,1.031,1723,4.083,1724,2.394,1725,1.417,1726,1.417,1727,2.469,1728,1.417,1729,1.417,1730,1.417,1731,3.108,1732,1.281,1733,1.417,1734,1.417,1735,1.417,1736,1.417,1737,2.394,1738,1.417,1739,3.653,1740,3.108,1741,2.394,1742,2.394,1743,2.394,1744,1.417,1745,3.108,1746,2.394,1747,1.417,1748,2.394,1749,2.394,1750,1.417,1751,2.394,1752,1.417,1753,1.417,1754,1.417,1755,4.681,1756,1.417,1757,1.098,1758,1.624,1759,1.417,1760,0.586,1761,1.031,1762,3.108,1763,1.417,1764,2.394,1765,2.394,1766,2.394,1767,1.992,1768,2.394,1769,2.164,1770,1.855,1771,1.992,1772,1.098,1773,2.394,1774,1.417,1775,1.417,1776,1.417,1777,1.417,1778,1.417,1779,1.417,1780,1.417,1781,1.417,1782,1.417,1783,1.417,1784,1.417,1785,1.417,1786,1.417,1787,1.417,1788,1.417,1789,1.417,1790,1.417,1791,1.417,1792,1.417,1793,1.417,1794,1.417,1795,1.417,1796,1.417,1797,1.417,1798,1.417,1799,1.417,1800,1.417,1801,1.417,1802,1.417,1803,1.417,1804,1.417,1805,1.417,1806,1.417,1807,1.417,1808,1.417,1809,1.417,1810,1.417,1811,1.417,1812,3.108,1813,1.417,1814,1.417,1815,1.417,1816,1.417,1817,2.164,1818,1.098,1819,2.394,1820,1.417,1821,3.108,1822,3.108,1823,1.417,1824,1.417,1825,1.417,1826,1.417,1827,3.108,1828,2.394,1829,1.417,1830,1.417,1831,1.417,1832,1.179,1833,1.741,1834,1.179,1835,1.179,1836,1.624,1837,1.417,1838,1.417,1839,1.417,1840,1.417,1841,2.394,1842,1.281,1843,0.654,1844,1.624,1845,1.624,1846,1.624,1847,1.624,1848,1.417,1849,2.394,1850,1.417,1851,2.394,1852,1.417,1853,1.285,1854,3.108,1855,1.417,1856,2.394,1857,1.417,1858,1.417,1859,1.417,1860,2.394,1861,1.031,1862,1.417,1863,1.417,1864,1.417,1865,1.417,1866,1.417,1867,1.417,1868,1.417,1869,1.417,1870,1.417,1871,1.417,1872,2.164,1873,1.417,1874,1.417,1875,1.281,1876,1.417,1877,1.417,1878,1.417,1879,1.417,1880,1.417,1881,1.417,1882,1.417,1883,1.417,1884,1.417,1885,0.494,1886,1.624,1887,3.562,1888,1.179,1889,1.624,1890,1.624,1891,0.877,1892,1.417,1893,3.69,1894,0.607,1895,1.624,1896,1.624,1897,1.281,1898,1.281,1899,1.624,1900,1.417,1901,1.281,1902,1.624,1903,2.743,1904,1.624,1905,2.743,1906,1.624,1907,1.281,1908,1.281,1909,0.922,1910,1.417,1911,1.855,1912,1.624,1913,1.754,1914,1.741,1915,2.743,1916,1.417,1917,1.624,1918,1.417,1919,1.031,1920,1.624,1921,2.587,1922,2.394,1923,1.624,1924,3.562,1925,1.417,1926,3.562,1927,2.304,1928,0.973,1929,1.624,1930,2.587,1931,1.413,1932,1.417,1933,1.624,1934,1.624,1935,1.624,1936,1.624,1937,2.743,1938,1.624,1939,1.624,1940,4.186,1941,4.678,1942,1.624,1943,0.674,1944,2.743,1945,1.624,1946,0.78,1947,1.179,1948,2.743,1949,3.562,1950,1.098,1951,0.973,1952,1.624,1953,1.624,1954,1.098,1955,2.394,1956,1.624,1957,3.108,1958,1.031,1959,1.624,1960,1.624,1961,1.417,1962,0.973,1963,1.624,1964,0.973,1965,0.922,1966,0.735,1967,0.766,1968,1.624,1969,1.624,1970,2.394,1971,0.735,1972,1.624,1973,0.654,1974,1.624,1975,1.624,1976,1.624,1977,1.624,1978,4.083,1979,3.653,1980,4.083,1981,1.417,1982,3.562,1983,3.562,1984,1.417,1985,1.624,1986,1.417,1987,1.417,1988,1.417,1989,1.417,1990,1.417,1991,1.417,1992,1.924,1993,1.417,1994,1.924,1995,1.417,1996,1.417,1997,3.108,1998,1.417,1999,0.8,2000,1.417,2001,1.417,2002,1.417,2003,1.417,2004,1.417,2005,2.743,2006,2.743,2007,2.394,2008,1.417,2009,2.394,2010,1.417,2011,1.417,2012,1.417,2013,1.624,2014,1.098,2015,1.624,2016,1.624,2017,1.417,2018,1.624,2019,3.562,2020,1.624,2021,3.562,2022,1.624,2023,1.624,2024,1.624,2025,1.624,2026,3.653,2027,1.624,2028,2.587,2029,1.417,2030,2.394,2031,1.624,2032,0.607,2033,0.63,2034,4.186,2035,1.624,2036,1.624,2037,0.607,2038,2.743,2039,0.63,2040,0.63,2041,2.743,2042,0.63,2043,1.624,2044,0.63,2045,0.607,2046,0.63,2047,0.63,2048,1.624,2049,1.624,2050,0.654,2051,0.63,2052,0.679,2053,1.624,2054,2.743,2055,1.624,2056,0.706,2057,0.706,2058,0.706,2059,1.624,2060,0.706,2061,2.164,2062,0.706,2063,2.743,2064,0.654,2065,1.624,2066,3.108,2067,0.63,2068,1.624,2069,1.624,2070,3.108,2071,0.706,2072,0.706,2073,1.624,2074,0.706,2075,1.624,2076,4.186,2077,0.706,2078,0.735,2079,0.735,2080,1.624,2081,0.766,2082,1.624,2083,1.624,2084,0.766,2085,0.766,2086,0.766,2087,0.766,2088,0.8,2089,1.624,2090,1.624,2091,1.624,2092,0.8,2093,0.8,2094,0.766,2095,3.562,2096,0.8,2097,3.562,2098,0.766,2099,0.766,2100,0.8,2101,0.837,2102,0.837,2103,2.743,2104,0.837,2105,3.562,2106,0.837,2107,0.837,2108,0.837,2109,1.624,2110,0.837,2111,1.624,2112,0.837,2113,1.624,2114,0.837,2115,1.624,2116,0.837,2117,0.837,2118,0.877,2119,0.877,2120,3.397,2121,1.624,2122,0.922,2123,2.743,2124,0.922,2125,3.562,2126,3.562,2127,0.922,2128,2.743,2129,2.587,2130,0.922,2131,0.922,2132,1.624,2133,0.922,2134,0.877,2135,0.922,2136,2.743,2137,2.743,2138,0.922,2139,0.766,2140,0.922,2141,0.922,2142,1.624,2143,0.877,2144,0.922,2145,0.922,2146,3.653,2147,3.653,2148,0.973,2149,0.973,2150,0.973,2151,0.973,2152,0.973,2153,0.973,2154,0.973,2155,1.281,2156,0.8,2157,1.624,2158,1.179,2159,1.417,2160,1.098,2161,1.624,2162,1.098,2163,1.417,2164,1.624,2165,1.624,2166,1.417,2167,1.417,2168,2.022,2169,1.098,2170,1.098,2171,0.735,2172,0.017]],["t/4",[2173,4.482]],["b/4",[0,1.478,11,1.223,19,0.973,22,1.411,24,1.524,25,2.409,26,0.671,27,0.876,35,0.445,36,1.264,37,0.783,44,1.223,47,2.141,48,0.39,49,0.766,53,0.77,54,0.651,59,1.352,61,1.748,66,0.954,67,0.363,78,1.148,79,1.132,82,2.131,88,1.391,94,2.054,96,1.089,97,0.847,102,1.748,104,0.954,105,0.647,115,0.878,116,1.919,117,1.619,124,0.122,150,2.409,160,0.928,161,1.738,177,0.39,187,0.434,200,1.56,202,1.56,206,1.796,219,3.118,228,2.072,232,0.405,242,1.328,243,1.178,244,0.3,261,2.355,266,1.107,269,0.434,298,1.56,299,1.264,303,2.102,315,2.205,316,1.203,317,1.242,320,0.783,321,1.068,341,0.725,351,1.487,353,0.878,354,0.909,362,1.075,365,0.76,376,1.048,386,0.637,401,0.74,402,0.664,411,3.118,430,3.172,432,3.172,456,1.406,457,1.797,459,1.01,460,3.175,468,0.766,473,0.043,474,0.031,475,1.56,480,1.56,481,0.385,483,0.482,484,0.881,487,1.352,488,1.619,489,0.943,493,1.25,500,0.52,501,1.095,502,1.132,503,0.938,506,0.706,508,1.797,509,2.053,512,0.813,514,0.796,518,1.391,519,1.898,521,1.318,522,0.763,523,1.309,525,0.671,528,1.131,529,1.026,547,3.098,551,0.94,552,2.172,553,2.269,560,1.307,563,0.61,564,1.504,569,1.228,573,1.591,574,0.683,577,3.212,578,1.178,580,1.748,582,0.44,583,2.2,585,1.308,596,1.494,602,3.206,603,0.831,604,0.466,606,0.605,608,1.56,611,2.211,616,0.731,617,0.478,618,0.657,622,1.126,625,1.123,626,0.727,627,0.763,628,0.796,629,0.712,630,0.744,631,0.744,633,0.808,636,0.847,638,0.815,641,0.815,643,0.815,645,0.815,646,0.8,648,0.74,649,0.94,651,2.623,654,1.451,655,2.409,675,1.644,677,0.727,682,0.608,683,0.362,684,0.349,687,0.819,689,1.143,693,1.891,694,1.308,704,0.94,705,1.985,710,1.147,715,1.591,719,4.007,720,4.18,721,1.995,722,1.891,727,2.234,732,0.845,748,1.308,749,1.761,755,0.766,759,2.141,761,1.748,767,1.094,768,2.553,769,1.107,773,2.001,776,1.308,777,1.994,780,1.111,781,2.978,784,2.654,786,1.037,791,1.811,794,1.485,797,4.359,798,2.541,801,1.178,802,1.048,814,1.796,835,1.086,836,1.994,849,0.792,852,2.223,853,2.238,855,1.838,858,1.598,864,0.876,865,3.201,872,1.652,875,3.077,881,5.621,885,1.264,886,0.94,896,2.224,898,1.56,903,2.409,905,2.721,914,2.404,918,1.048,920,2.964,926,0.683,962,1.98,1012,1.761,1015,2.501,1033,2.283,1035,1.504,1042,1.406,1059,2.318,1066,0.792,1069,2.551,1091,1.598,1092,2.317,1094,2.657,1099,3.51,1101,2.361,1105,2.31,1107,1.737,1108,1.282,1113,1.98,1117,0.792,1119,2.136,1123,1.341,1147,0.907,1162,0.693,1180,1.504,1188,1.228,1194,0.907,1196,0.876,1197,1.652,1208,1.652,1211,2.223,1212,1.56,1244,0.974,1251,1.178,1258,2.369,1259,1.089,1260,1.401,1262,1.178,1271,1.652,1273,1.871,1279,1.619,1285,2.054,1290,2.483,1299,1.652,1316,1.308,1353,1.652,1369,1.107,1372,0.638,1374,0.625,1376,1.186,1382,0.657,1383,0.736,1385,0.683,1386,0.819,1405,1.478,1426,2.283,1428,0.907,1429,2.283,1433,0.538,1436,0.907,1437,1.01,1440,1.178,1441,1.228,1444,0.791,1445,0.849,1448,0.909,1449,0.988,1450,0.94,1451,0.77,1456,2.072,1457,2.542,1459,0.851,1460,1.341,1461,0.851,1464,0.551,1466,0.589,1468,0.551,1497,2.409,1518,1.282,1519,1.132,1524,1.01,1531,1.144,1534,0.939,1543,2.847,1544,1.282,1552,3.507,1561,2.054,1595,1.089,1598,2.736,1634,1.652,1664,1.089,1666,1.341,1680,0.862,1684,0.974,1761,1.652,1843,1.048,1888,1.891,1893,2.054,1913,3.436,1927,2.721,1931,2.847,1943,0.647,1946,1.796,1951,1.56,1971,1.178,1992,2.985,1994,2.172,2172,0.043,2174,3.291,2175,2.051,2176,3.41,2177,3.51,2178,4.021,2179,3.065,2180,5.973,2181,2.604,2182,2.604,2183,2.604,2184,5.526,2185,2.604,2186,2.604,2187,2.604,2188,2.604,2189,2.933,2190,4.021,2191,4.913,2192,4.913,2193,2.604,2194,2.604,2195,2.604,2196,2.604,2197,4.021,2198,2.604,2199,2.604,2200,2.604,2201,2.604,2202,4.359,2203,2.604,2204,2.604,2205,2.604,2206,2.604,2207,2.604,2208,2.604,2209,2.604,2210,4.021,2211,2.604,2212,5.333,2213,4.021,2214,5.973,2215,2.604,2216,2.604,2217,2.604,2218,2.604,2219,4.021,2220,2.604,2221,2.604,2222,2.604,2223,2.604,2224,2.604,2225,3.51,2226,2.604,2227,2.604,2228,2.604,2229,2.604,2230,1.282,2231,2.604,2232,2.604,2233,2.604,2234,2.604,2235,2.604,2236,2.604,2237,2.604,2238,4.913,2239,2.604,2240,2.604,2241,2.604,2242,2.604,2243,2.604,2244,4.021,2245,4.021,2246,2.604,2247,2.604,2248,2.604,2249,2.604,2250,2.604,2251,2.604,2252,2.604,2253,2.604,2254,2.604,2255,4.359,2256,2.054,2257,2.272,2258,2.604,2259,2.604,2260,2.604,2261,1.748,2262,4.913,2263,2.604,2264,2.604,2265,2.604,2266,2.604,2267,3.118,2268,2.604,2269,4.021,2270,2.604,2271,4.913,2272,2.604,2273,2.604,2274,2.604,2275,2.604,2276,2.604,2277,2.604,2278,2.604,2279,3.391,2280,3.172,2281,7.362,2282,2.604,2283,2.72,2284,2.604,2285,2.604,2286,4.021,2287,4.021,2288,2.604,2289,2.604,2290,2.604,2291,2.604,2292,2.604,2293,2.604,2294,2.604,2295,2.604,2296,2.604,2297,2.604,2298,1.652,2299,2.604,2300,2.604,2301,2.604,2302,2.604,2303,5.213,2304,2.604,2305,2.283,2306,1.56,2307,1.01,2308,1.478,2309,4.913,2310,4.913,2311,2.272,2312,6.33,2313,2.604,2314,2.604,2315,2.054,2316,2.604,2317,2.604,2318,2.604,2319,2.604,2320,2.604,2321,4.338,2322,3.344,2323,2.604,2324,4.359,2325,3.391,2326,5.526,2327,4.823,2328,4.021,2329,4.021,2330,5.973,2331,2.604,2332,2.604,2333,2.604,2334,4.021,2335,4.021,2336,3.172,2337,2.604,2338,4.913,2339,2.604,2340,2.604,2341,2.604,2342,2.604,2343,2.604,2344,2.604,2345,4.021,2346,2.604,2347,2.604,2348,2.604,2349,2.604,2350,2.604,2351,2.604,2352,2.604,2353,2.604,2354,2.604,2355,2.604,2356,4.021,2357,3.138,2358,3.51,2359,3.172,2360,3.961,2361,4.021,2362,2.604,2363,4.021,2364,2.604,2365,4.913,2366,2.604,2367,2.604,2368,2.604,2369,2.272,2370,4.913,2371,2.604,2372,2.604,2373,4.913,2374,4.913,2375,2.604,2376,4.913,2377,4.913,2378,4.913,2379,4.021,2380,2.054,2381,4.913,2382,2.604,2383,4.913,2384,4.913,2385,2.604,2386,2.604,2387,2.604,2388,2.604,2389,2.604,2390,2.604,2391,2.604,2392,2.604,2393,2.604,2394,2.604,2395,5.526,2396,5.526,2397,1.228,2398,2.604,2399,2.604,2400,2.054,2401,1.56,2402,2.272,2403,1.652,2404,2.272,2405,2.272,2406,2.272,2407,2.272,2408,2.604,2409,2.72,2410,2.604,2411,2.604,2412,2.272,2413,2.272,2414,2.272,2415,4.021,2416,2.604,2417,2.272,2418,2.604,2419,2.604,2420,2.604,2421,2.604,2422,2.604,2423,4.021,2424,1.56,2425,1.652,2426,1.897,2427,4.913,2428,2.604,2429,2.604,2430,2.604,2431,1.978,2432,2.318,2433,4.021,2434,5.526,2435,2.604,2436,2.604,2437,2.604,2438,1.226,2439,4.913,2440,2.054,2441,2.604,2442,1.891,2443,2.604,2444,4.913,2445,2.604,2446,2.604,2447,4.913,2448,4.021,2449,5.526,2450,5.526,2451,4.021,2452,3.51,2453,4.021,2454,4.021,2455,2.604,2456,2.272,2457,3.507,2458,2.604,2459,1.406,2460,2.272,2461,2.272,2462,2.272,2463,2.272,2464,2.272,2465,3.876,2466,1.761,2467,1.891,2468,2.272,2469,2.272,2470,2.272,2471,1.048,2472,1.652,2473,1.406,2474,2.409,2475,1.891,2476,2.272,2477,2.272,2478,2.604,2479,2.272,2480,2.272,2481,2.272,2482,2.272,2483,2.272,2484,2.272,2485,2.272,2486,2.272,2487,2.283,2488,2.604,2489,2.272,2490,2.604,2491,2.604,2492,2.604,2493,2.272,2494,2.604,2495,2.604,2496,2.604,2497,2.272,2498,2.604,2499,2.272,2500,2.272,2501,2.272,2502,2.604,2503,2.604,2504,2.604,2505,2.604,2506,2.604,2507,2.604,2508,2.604,2509,2.604,2510,2.604,2511,2.604,2512,2.604,2513,1.341,2514,2.604,2515,2.604,2516,2.604,2517,2.604,2518,1.178,2519,2.604,2520,4.021,2521,2.604,2522,4.718,2523,4.913,2524,2.604,2525,4.021,2526,4.021,2527,6.581,2528,3.51,2529,4.913,2530,4.913,2531,4.913,2532,2.604,2533,5.973,2534,6.581,2535,4.913,2536,5.526,2537,3.509,2538,2.604,2539,4.451,2540,2.2,2541,2.054,2542,4.021,2543,2.604,2544,1.82,2545,2.604,2546,6.008,2547,4.78,2548,2.604,2549,4.021,2550,2.604,2551,1.652,2552,2.604,2553,2.604,2554,2.604,2555,2.604,2556,2.604,2557,2.604,2558,2.604,2559,2.272,2560,2.604,2561,6.088,2562,2.604,2563,2.604,2564,4.021,2565,2.604,2566,2.604,2567,4.021,2568,4.021,2569,1.891,2570,2.272,2571,2.604,2572,4.269,2573,1.282,2574,2.604,2575,2.604,2576,1.897,2577,2.604,2578,2.604,2579,2.604,2580,2.604,2581,2.604,2582,2.604,2583,2.604,2584,2.604,2585,2.604,2586,2.604,2587,2.604,2588,4.021,2589,4.021,2590,4.913,2591,2.604,2592,2.604,2593,2.604,2594,2.604,2595,2.604,2596,2.604,2597,2.604,2598,2.604,2599,2.604,2600,2.604,2601,4.021,2602,2.604,2603,2.604,2604,2.604,2605,2.604,2606,2.604,2607,2.604,2608,2.604,2609,2.604,2610,4.712,2611,4.712,2612,2.272,2613,1.652,2614,2.604,2615,2.604,2616,2.604,2617,4.913,2618,2.604,2619,4.072,2620,2.604,2621,4.269,2622,2.604,2623,2.604,2624,4.913,2625,4.021,2626,2.604,2627,1.761,2628,2.604,2629,2.272,2630,2.604,2631,2.604,2632,2.604,2633,2.604,2634,2.604,2635,2.604,2636,2.604,2637,2.604,2638,2.604,2639,2.604,2640,2.604,2641,2.604,2642,4.021,2643,1.761,2644,2.604,2645,2.604,2646,2.604,2647,2.604,2648,2.604,2649,2.604,2650,2.604,2651,2.604,2652,2.604,2653,2.604,2654,2.604,2655,1.406,2656,2.604,2657,4.021,2658,2.604,2659,2.604,2660,1.699,2661,1.56,2662,5.526,2663,2.604,2664,2.604,2665,1.354,2666,4.021,2667,2.604,2668,1.891,2669,2.604,2670,2.604,2671,4.021,2672,4.021,2673,4.913,2674,2.272,2675,2.604,2676,2.054,2677,2.604,2678,4.021,2679,4.021,2680,2.604,2681,2.604,2682,1.341,2683,2.604,2684,4.021,2685,2.272,2686,2.272,2687,2.409,2688,1.478,2689,2.604,2690,2.604,2691,2.604,2692,2.604,2693,2.604,2694,2.604,2695,2.604,2696,2.604,2697,2.604,2698,2.604,2699,2.604,2700,2.604,2701,2.604,2702,2.604,2703,2.604,2704,2.604,2705,2.604,2706,2.604,2707,2.604,2708,2.604,2709,2.604,2710,4.021,2711,2.604,2712,2.604,2713,2.604,2714,2.604,2715,2.604,2716,2.604,2717,2.604,2718,2.604,2719,1.891,2720,2.272,2721,2.272,2722,2.604,2723,2.409,2724,2.604,2725,2.604,2726,2.604,2727,2.604,2728,2.272,2729,2.604,2730,2.604,2731,1.891,2732,2.604,2733,4.021,2734,3.876,2735,3.348,2736,4.013,2737,4.021,2738,2.604,2739,2.604,2740,1.341,2741,4.021,2742,2.604,2743,5.973,2744,2.272,2745,2.272,2746,2.272,2747,2.604,2748,2.604,2749,2.272,2750,1.282,2751,1.891,2752,2.272,2753,1.56,2754,2.604,2755,2.604,2756,3.323,2757,2.604,2758,2.604,2759,2.604,2760,2.604,2761,4.359,2762,4.913,2763,5.213,2764,1.341,2765,2.604,2766,2.604,2767,4.021,2768,2.531,2769,2.604,2770,4.913,2771,2.604,2772,2.604,2773,2.604,2774,2.054,2775,2.604,2776,2.604,2777,1.891,2778,2.604,2779,4.913,2780,4.913,2781,1.891,2782,2.604,2783,2.272,2784,2.604,2785,2.604,2786,2.604,2787,1.478,2788,2.604,2789,3.51,2790,4.021,2791,2.604,2792,2.604,2793,2.604,2794,2.604,2795,2.604,2796,2.604,2797,2.604,2798,2.272,2799,2.604,2800,2.604,2801,2.604,2802,2.054,2803,2.604,2804,2.604,2805,2.272,2806,1.01,2807,2.604,2808,2.604,2809,2.604,2810,4.021,2811,4.021,2812,4.021,2813,2.604,2814,2.604,2815,2.054,2816,1.761,2817,2.604,2818,2.272,2819,2.272,2820,2.604,2821,2.604,2822,1.891,2823,1.652,2824,2.054,2825,2.604,2826,2.054,2827,5.526,2828,2.604,2829,2.604,2830,2.272,2831,2.604,2832,2.272,2833,0.94,2834,2.604,2835,3.172,2836,4.021,2837,4.021,2838,2.604,2839,2.604,2840,2.604,2841,2.604,2842,2.604,2843,2.604,2844,2.604,2845,1.891,2846,1.761,2847,2.272,2848,2.604,2849,1.712,2850,2.072,2851,2.921,2852,3.51,2853,1.891,2854,2.604,2855,2.604,2856,1.478,2857,4.359,2858,2.604,2859,3.791,2860,4.288,2861,2.054,2862,4.913,2863,3.323,2864,2.604,2865,2.272,2866,2.604,2867,3.51,2868,2.604,2869,2.604,2870,2.604,2871,1.652,2872,1.891,2873,2.604,2874,2.604,2875,2.604,2876,1.891,2877,2.604,2878,1.891,2879,2.604,2880,2.604,2881,2.604,2882,2.604,2883,2.604,2884,2.604,2885,4.021,2886,2.604,2887,2.604,2888,2.604,2889,2.272,2890,4.021,2891,2.921,2892,2.604,2893,4.021,2894,2.604,2895,1.761,2896,2.604,2897,4.021,2898,4.021,2899,4.021,2900,1.761,2901,2.604,2902,2.604,2903,2.604,2904,2.604,2905,2.604,2906,2.604,2907,2.272,2908,2.272,2909,0.974,2910,1.228,2911,4.913,2912,1.891,2913,2.272,2914,2.272,2915,1.897,2916,1.652,2917,2.054,2918,1.891,2919,2.604,2920,2.272,2921,4.021,2922,2.604,2923,2.054,2924,2.72,2925,2.172,2926,1.891,2927,2.604,2928,2.604,2929,2.054,2930,2.604,2931,2.054,2932,2.604,2933,1.652,2934,1.761,2935,3.51,2936,2.604,2937,4.021,2938,2.604,2939,2.604,2940,2.604,2941,2.604,2942,4.937,2943,2.604,2944,2.604,2945,2.604,2946,2.604,2947,2.604,2948,2.054,2949,1.761,2950,2.604,2951,2.604,2952,2.604,2953,3.172,2954,4.021,2955,2.604,2956,2.604,2957,2.604,2958,2.604,2959,2.604,2960,4.021,2961,2.604,2962,4.021,2963,4.913,2964,4.013,2965,2.604,2966,2.604,2967,4.021,2968,2.604,2969,2.604,2970,1.891,2971,2.604,2972,2.604,2973,1.01,2974,1.891,2975,2.283,2976,2.272,2977,2.272,2978,2.054,2979,1.341,2980,2.604,2981,2.054,2982,2.604,2983,1.406]],["t/5",[0,2.344,2984,3.257]],["b/5",[0,3.918,11,1.642,20,1.911,22,0.951,24,0.944,26,0.648,27,1.316,28,2.67,31,0.907,35,0.436,36,0.532,37,0.465,44,2.371,47,0.817,48,1.093,49,1.412,54,0.512,67,0.369,78,1.973,82,0.691,99,2.755,105,0.49,115,0.969,116,1.189,117,1.011,123,2.112,124,0.121,158,3.931,160,1.25,161,1.899,162,1.407,170,1.205,171,3.062,177,0.812,182,1.514,183,1.612,187,1.12,195,1.514,206,0.715,232,0.349,241,1.505,242,0.946,243,2.94,244,0.63,246,2.343,266,1.077,269,0.37,276,1.05,292,1.933,316,1.269,317,1.274,320,0.465,333,1.706,341,0.439,351,1.421,362,1.597,365,0.503,383,1.426,386,0.463,391,1.15,398,1.505,401,0.336,402,0.419,411,1.05,457,1.911,467,2.456,468,0.739,469,1.7,470,3.906,473,0.052,474,0.03,481,0.759,483,0.889,484,0.786,487,1.899,490,1.46,493,1.232,500,0.465,501,1.096,502,1.092,503,0.942,506,0.811,507,1.05,508,1.763,509,2.113,512,0.865,514,1.482,515,0.828,518,1.668,519,1.732,521,1.096,522,0.526,525,1.604,526,2.554,527,1.568,528,1.658,529,0.865,531,1.137,534,1.357,536,1.845,541,1.237,543,1.648,545,1.237,547,1.7,550,3.308,551,1.957,553,0.817,557,2.519,560,1.051,563,0.529,565,1.357,569,1.185,573,1.042,574,0.644,575,2.453,577,1.05,578,2.174,579,1.824,580,1.092,582,0.772,584,3.173,596,1.975,601,0.669,603,0.754,604,0.859,606,0.46,616,0.439,618,0.398,626,0.482,627,0.526,628,0.548,629,0.503,630,0.526,631,0.526,633,0.571,634,1.857,638,0.484,641,0.484,643,0.484,644,1.322,645,0.484,646,0.524,648,0.336,650,3.705,651,2.261,667,1.192,671,2.736,677,0.721,680,0.79,684,0.726,689,1.541,694,2.565,700,1.635,702,2.365,704,2.424,710,1.281,713,1.957,715,2.063,717,1.77,718,0.974,721,1.008,724,2.795,725,1.845,728,2.266,731,3.9,732,1.044,743,2.365,748,2.656,751,1.05,755,1.91,759,0.817,761,1.7,765,1.363,767,1.337,768,0.974,769,1.313,776,0.817,779,3.157,780,1.922,785,0.94,786,1.852,789,2.482,791,2.009,794,0.983,798,1.011,799,3,802,1.011,804,2.793,809,2.375,813,2.028,814,1.963,816,1.977,828,1.363,833,1.092,835,0.719,836,0.907,842,1.426,847,1.137,849,1.189,851,1.957,854,2.015,858,0.817,860,2.727,863,1.357,864,2.186,869,4.042,870,3.064,885,2.042,889,3.048,894,3.688,895,1.77,896,2.938,899,4.042,902,2.482,905,1.237,910,1.7,914,1.933,916,1.185,918,2.704,919,0.974,920,1.011,926,0.349,962,3.064,963,1.137,1006,1.982,1011,1.594,1015,1.77,1024,1.137,1036,1.77,1037,3.519,1043,2.482,1045,1.699,1047,1.357,1050,0.974,1051,1.699,1053,2.365,1054,2.192,1056,2.645,1058,2.357,1060,1.05,1064,1.294,1066,1.648,1069,1.272,1091,1.562,1094,2.634,1098,1.05,1101,2.197,1108,1.926,1112,2.877,1123,1.294,1146,3.488,1149,1.824,1162,0.669,1173,3.36,1176,2.279,1179,1.294,1180,1.463,1181,2.771,1188,2.935,1189,2.015,1190,1.982,1194,1.363,1196,1.617,1201,1.574,1211,1.137,1213,3.042,1244,0.94,1248,1.092,1253,3.248,1258,1.889,1260,2.823,1270,2.474,1273,2.181,1277,1.824,1285,1.05,1289,1.237,1300,3.441,1303,1.357,1317,1.426,1320,1.294,1325,1.011,1330,1.982,1334,2.645,1348,2.606,1366,0.79,1372,0.496,1376,2.031,1377,1.011,1378,0.817,1379,0.907,1382,0.299,1383,0.376,1385,0.349,1386,0.419,1391,1.505,1395,0.404,1397,0.606,1428,2.341,1433,0.87,1444,0.404,1445,0.434,1449,0.449,1452,1.412,1457,2.8,1516,1.042,1531,1.113,1534,1.679,1540,5.566,1541,1.982,1546,1.824,1576,1.982,1595,2.716,1598,1.574,1600,2.015,1608,2.221,1615,1.15,1652,1.7,1653,1.505,1663,1.237,1667,1.426,1680,0.783,1684,2.639,1686,1.824,1689,2.504,1712,1.05,1818,1.699,1853,2.932,1891,2.594,1931,1.294,1943,1.002,1946,1.77,1951,4.805,1954,2.645,1965,1.426,1973,2.365,2139,1.185,2168,4.006,2169,2.645,2170,3.666,2172,0.042,2174,1.185,2175,1.412,2189,2.197,2230,3.064,2298,1.594,2307,2.413,2308,2.221,2431,2.182,2432,2.557,2438,2.069,2513,1.294,2522,1.699,2540,2.168,2569,1.824,2573,1.237,2665,1.316,2676,3.005,2740,2.015,2756,1.699,2781,4.519,2806,2.519,2833,1.412,2849,2.659,2859,4.123,2925,1.357,2985,5.062,2986,3.086,2987,3.248,2988,3.911,2989,3.414,2990,2.192,2991,2.795,2992,1.198,2993,1.594,2994,1.982,2995,4.277,2996,4.634,2997,3.789,2998,3.911,2999,2.343,3000,2.512,3001,2.877,3002,4.879,3003,3.911,3004,2.512,3005,2.512,3006,3.789,3007,3.911,3008,4.123,3009,5.759,3010,2.841,3011,3.911,3012,4.277,3013,5.421,3014,2.512,3015,2.512,3016,4.633,3017,2.512,3018,2.512,3019,2.512,3020,3.026,3021,2.512,3022,2.645,3023,5.669,3024,0.974,3025,6.004,3026,6.496,3027,5.669,3028,2.192,3029,4.934,3030,1.699,3031,1.982,3032,2.192,3033,5.43,3034,3.248,3035,5.127,3036,6.457,3037,4.192,3038,1.505,3039,4.612,3040,3.414,3041,6.496,3042,1.982,3043,5.421,3044,6.901,3045,1.982,3046,3.789,3047,3.911,3048,3.414,3049,2.512,3050,2.512,3051,4.478,3052,1.824,3053,2.512,3054,3.911,3055,3.911,3056,3.911,3057,3.911,3058,3.414,3059,2.512,3060,4.634,3061,2.512,3062,2.192,3063,2.512,3064,2.482,3065,5.127,3066,5.062,3067,3.789,3068,2.015,3069,1.763,3070,5.421,3071,3.789,3072,3.086,3073,2.512,3074,2.192,3075,2.192,3076,2.512,3077,4.634,3078,4.431,3079,4.803,3080,5.421,3081,5.421,3082,4.803,3083,4.192,3084,2.841,3085,1.982,3086,3.064,3087,4.305,3088,6.068,3089,5.836,3090,4.908,3091,4.519,3092,4.634,3093,3.911,3094,2.512,3095,4.803,3096,2.512,3097,2.512,3098,2.645,3099,5.127,3100,2.512,3101,1.357,3102,2.512,3103,2.512,3104,1.824,3105,3.789,3106,3.911,3107,2.512,3108,2.512,3109,4.803,3110,2.512,3111,2.512,3112,3.911,3113,2.512,3114,3.414,3115,3.911,3116,2.512,3117,2.512,3118,1.594,3119,1.824,3120,2.192,3121,2.512,3122,2.645,3123,2.512,3124,3.026,3125,3.086,3126,2.192,3127,2.512,3128,6.805,3129,5.669,3130,2.512,3131,5.219,3132,6.019,3133,5.127,3134,3.911,3135,3.911,3136,2.512,3137,1.505,3138,1.505,3139,1.426,3140,2.512,3141,2.512,3142,2.192,3143,2.512,3144,1.185,3145,2.512,3146,2.512,3147,4.803,3148,6.222,3149,3.911,3150,3.911,3151,4.803,3152,2.512,3153,2.512,3154,2.645,3155,2.512,3156,2.192,3157,2.512,3158,2.482,3159,2.512,3160,2.512,3161,1.982,3162,2.512,3163,2.512,3164,2.512,3165,3.911,3166,1.824,3167,2.512,3168,2.512,3169,2.512,3170,2.512,3171,3.248,3172,5.127,3173,5.669,3174,2.512,3175,5.875,3176,5.492,3177,4.267,3178,2.67,3179,3.519,3180,3.248,3181,4.192,3182,2.512,3183,5.421,3184,1.863,3185,4.803,3186,3.911,3187,3.36,3188,3.414,3189,5.444,3190,4.803,3191,2.512,3192,1.699,3193,1.505,3194,1.594,3195,1.699,3196,2.512,3197,3.911,3198,2.512,3199,6.901,3200,2.512,3201,3.414,3202,3.414,3203,3.086,3204,3.414,3205,2.512,3206,3.414,3207,4.267,3208,1.824,3209,5.759,3210,3.911,3211,3.911,3212,3.789,3213,2.512,3214,3.911,3215,2.645,3216,2.512,3217,1.982,3218,4.908,3219,6.457,3220,1.982,3221,1.824,3222,4.803,3223,2.841,3224,3.727,3225,4.192,3226,2.512,3227,2.192,3228,2.512,3229,1.824,3230,2.512,3231,4.803,3232,5.421,3233,2.512,3234,3.026,3235,2.512,3236,3.086,3237,4.267,3238,2.512,3239,2.512,3240,4.277,3241,2.512,3242,2.512,3243,3.414,3244,2.192,3245,3.414,3246,3.414,3247,2.192,3248,1.982,3249,2.512,3250,3.911,3251,1.982,3252,4.803,3253,2.512,3254,1.699,3255,2.512,3256,2.512,3257,2.192,3258,2.192,3259,1.824,3260,3.973,3261,4.634,3262,3.727,3263,4.634,3264,3.789,3265,1.982,3266,3.911,3267,1.926,3268,4.731,3269,3.336,3270,2.221,3271,2.645,3272,4.731,3273,4.803,3274,2.512,3275,2.512,3276,6.222,3277,2.512,3278,1.699,3279,5.124,3280,5.43,3281,3.789,3282,2.221,3283,2.482,3284,2.482,3285,3.519,3286,3.911,3287,5.669,3288,2.512,3289,6.496,3290,3.911,3291,4.803,3292,2.512,3293,4.803,3294,3.911,3295,4.803,3296,2.512,3297,2.512,3298,2.512,3299,2.512,3300,2.512,3301,2.512,3302,3.911,3303,2.192,3304,4.803,3305,3.911,3306,3.414,3307,3.414,3308,1.699,3309,1.982,3310,3.81,3311,1.926,3312,1.237,3313,1.505,3314,2.192,3315,2.112,3316,3.247,3317,1.505,3318,3.086,3319,1.505,3320,2.192,3321,2.512,3322,2.192,3323,2.343,3324,2.192,3325,2.192,3326,3.414,3327,2.192,3328,2.192,3329,2.512,3330,2.192,3331,2.512,3332,2.512,3333,1.505,3334,1.982,3335,1.824,3336,2.512,3337,2.512,3338,2.512,3339,2.192,3340,2.512,3341,1.05,3342,1.982,3343,2.512,3344,2.512,3345,4.803,3346,3.789,3347,2.512,3348,1.824,3349,2.512,3350,1.824,3351,2.512,3352,2.512,3353,2.512,3354,2.512,3355,2.512,3356,2.512,3357,2.512,3358,2.512,3359,2.512,3360,2.512,3361,2.512,3362,2.512,3363,2.512,3364,2.512,3365,2.512,3366,2.512,3367,2.512,3368,4.803,3369,2.512,3370,3.937,3371,3.911,3372,2.645,3373,2.512,3374,3.911,3375,3.414,3376,2.192,3377,2.192,3378,2.512,3379,2.512,3380,2.512,3381,2.192,3382,4.277,3383,2.192,3384,2.512,3385,2.512,3386,1.982,3387,2.482,3388,2.512,3389,2.192,3390,1.982,3391,2.482,3392,2.474,3393,2.594,3394,4.305,3395,1.824,3396,2.192,3397,3.414,3398,1.699,3399,2.192,3400,2.192,3401,1.824,3402,2.512,3403,2.512,3404,1.426,3405,2.512,3406,2.512,3407,2.512,3408,2.512,3409,2.192,3410,2.512,3411,2.512,3412,2.512,3413,2.512,3414,2.512,3415,2.512,3416,2.192,3417,2.512,3418,2.512,3419,2.512,3420,1.699,3421,2.512,3422,2.512,3423,2.512,3424,2.192,3425,1.357,3426,1.824,3427,2.192,3428,2.512,3429,2.512,3430,2.512,3431,2.512,3432,1.982,3433,1.982,3434,2.192,3435,2.512,3436,2.512,3437,2.512]],["t/6",[3438,3.73]],["b/6",[29,3.699,67,0.375,68,2.233,78,1.735,89,2.486,122,5.593,124,0.109,196,2.68,266,2.259,298,2.486,473,0.069,474,0.057,502,3.228,503,0.762,509,2.084,667,1.283,702,2.579,705,2.015,743,3.156,767,1.032,780,1.449,853,1.707,864,2.5,870,3.023,1098,2.679,1302,4.654,1516,2.266,1517,2.313,1943,1.196,1946,2.113,2172,0.069,3039,4.576,3176,4.654,3179,5.076,3180,5.773,3209,5.055,3224,5.05,3284,5.21,3285,3.838,3310,4.011,3339,5.593,3381,7.164,3382,5.055,3427,5.593,3439,6.408,3440,3.639,3441,5.12,3442,6.408,3443,6.408,3444,7.426,3445,7.426,3446,6.408,3447,6.408,3448,6.408,3449,3.461,3450,6.408,3451,6.408,3452,6.408,3453,6.408,3454,2.579,3455,5.593,3456,5.593,3457,2.786]],["t/7",[3458,5.135]],["b/7",[0,4.776,9,2.813,20,2.43,26,1.925,35,0.357,37,0.679,48,1.265,54,0.546,67,0.344,69,2.694,78,1.62,89,2.215,96,2.388,98,2.299,99,2.679,105,0.546,115,1.24,116,1.736,124,0.121,162,1.689,170,1.34,171,3.113,183,1.815,230,4.984,232,0.387,243,2.584,244,0.558,253,3.624,266,1.909,269,0.385,316,1.039,317,1.039,320,0.679,341,0.522,351,1.249,365,0.599,386,0.589,402,0.498,467,2.513,470,3.272,473,0.061,474,0.053,475,2.69,481,0.763,483,1.057,489,0.924,500,0.436,501,0.765,503,0.825,506,0.744,513,3.862,521,0.887,522,0.625,563,0.45,574,0.547,582,0.85,616,0.522,618,0.474,626,0.573,627,0.625,628,0.652,629,0.599,630,0.625,631,0.625,633,0.679,634,1.922,638,0.707,641,0.707,643,0.707,644,1.572,645,0.707,667,1.198,668,2.197,675,1.909,683,0.794,702,3.127,704,2.061,710,1.117,713,2.061,727,2.136,732,0.765,748,1.857,751,2.388,760,2.136,765,1.99,767,1.117,768,2.69,769,1.207,779,3.007,780,1.689,781,2.584,785,2.136,786,1.472,790,2.215,799,2.483,801,2.584,828,2.82,830,3.746,833,2.483,836,2.061,848,2.942,853,1.847,856,2.942,858,2.256,864,1.922,870,2.694,886,2.061,894,4.241,945,4.148,961,2.813,1018,2.483,1053,2.813,1064,2.942,1066,1.736,1069,1.857,1085,3.862,1098,3.328,1108,2.813,1134,3.421,1147,1.99,1162,1.521,1176,2.215,1177,2.942,1186,3.084,1229,4.505,1248,2.483,1304,4.402,1348,2.215,1372,0.634,1376,1.922,1377,2.299,1378,1.857,1379,2.061,1428,1.99,1516,1.521,1534,1.62,1580,5.472,1599,2.813,1613,2.136,1623,4.148,1667,3.243,1722,3.624,1967,2.694,1971,2.584,2139,2.694,2169,3.862,2172,0.074,2175,1.679,2279,3.243,2472,3.624,2540,2.417,2660,1.625,2676,2.388,2740,2.942,2768,3.573,2806,2.215,2872,4.148,2985,5.383,2986,4.505,2994,4.505,2995,4.505,2996,4.505,2997,4.505,2999,3.421,3002,4.148,3006,4.505,3008,3.624,3009,4.505,3012,4.505,3016,4.741,3020,3.573,3022,3.862,3039,4.196,3071,4.505,3072,4.505,3124,3.848,3178,2.813,3194,3.624,3207,4.148,3212,4.505,3223,4.148,3224,4.474,3310,4.034,3312,2.813,3315,3.084,3316,4.154,3317,3.421,3318,4.505,3323,4.653,3330,6.053,3333,3.421,3334,5.472,3335,4.148,3372,3.862,3386,4.505,3387,4.402,3391,4.402,3395,5.425,3425,3.084,3459,5.711,3460,4.984,3461,5.711,3462,5.893,3463,5.711,3464,4.984,3465,5.037,3466,5.711,3467,4.984,3468,5.711,3469,6.519,3470,5.711,3471,5.711,3472,3.862,3473,4.984,3474,3.421,3475,2.942,3476,6.053,3477,5.711,3478,4.148,3479,2.813,3480,4.984,3481,5.711,3482,4.984,3483,2.942,3484,5.711,3485,4.148,3486,4.148,3487,4.984,3488,5.711,3489,3.624,3490,5.711,3491,4.984,3492,4.984,3493,6.053,3494,4.984,3495,4.984,3496,4.984,3497,4.148,3498,2.694]],["t/8",[170,0.556,171,1.291,3499,3.452]],["b/8",[0,4.107,9,2.067,11,1.48,20,2.352,22,1.126,26,1.082,27,2.434,31,2.329,35,0.424,48,1.262,49,1.234,50,3.663,61,1.824,67,0.352,78,1.889,88,0.859,97,1.85,98,2.785,99,2.567,115,1.237,116,1.962,117,2.29,124,0.12,150,2.514,158,3.929,159,2.473,160,1.3,161,1.566,162,1.754,170,1.266,171,3.076,175,1.673,176,2.128,177,1.162,182,1.864,183,1.813,196,1.515,232,0.201,242,1.114,243,3.131,244,0.625,245,3.048,253,2.663,261,1.194,269,0.216,276,2.893,292,1.689,303,1.784,315,1.276,316,1.191,317,1.219,333,1.514,351,1.582,362,1.514,372,1.466,378,2.663,394,1.57,398,3.408,411,2.699,439,3.048,455,3.23,457,2.425,467,2.267,468,1.234,469,1.824,470,3.879,473,0.045,474,0.043,475,1.628,477,1.98,481,0.731,489,0.499,493,1.432,501,0.864,506,0.693,507,1.755,512,0.54,518,1.725,519,1.082,521,1.185,526,3.008,527,1.558,528,1.416,529,0.931,531,1.899,537,4.84,550,2.067,560,1.582,564,2.128,574,0.402,577,1.755,582,0.791,584,4.367,603,0.584,604,0.75,611,1.365,617,0.768,618,0.472,650,3.604,667,1.358,670,2.162,671,2.503,675,1.155,684,0.562,687,2.029,689,1.089,694,2.251,700,2.699,702,2.29,704,1.515,705,2.176,706,2.383,710,1.249,713,1.515,715,2.031,723,1.689,724,2.703,725,1.98,731,3.045,732,0.998,748,2.63,755,1.898,758,1.899,762,1.824,765,1.982,767,1.039,769,1.185,776,1.365,779,3.294,780,1.85,785,2.705,786,1.784,787,2.383,790,1.628,791,2.053,794,1.527,802,1.689,809,2.172,814,2.207,815,3.311,816,1.915,818,3.048,821,2.838,828,1.462,835,1.267,836,1.515,843,2.838,845,4.488,847,3.511,854,2.931,855,1.57,864,2.434,866,4.488,869,2.267,870,1.98,886,2.691,894,4.107,895,1.899,899,3.737,906,3.412,907,2.514,916,3.264,920,2.29,926,1.006,993,1.515,1000,3.048,1024,1.899,1035,2.588,1036,2.575,1037,2.514,1046,3.325,1048,3.048,1050,1.628,1056,3.847,1058,1.824,1060,1.755,1066,1.962,1067,3.866,1086,2.802,1087,2.921,1091,2.099,1094,2.329,1101,2.414,1105,1.755,1108,2.067,1110,1.899,1117,1.73,1119,1.824,1145,1.558,1175,2.663,1176,1.628,1179,3.325,1194,1.462,1196,2.172,1213,2.207,1244,2.128,1260,2.598,1261,1.899,1269,3.663,1270,2.162,1273,1.566,1278,3.311,1288,2.128,1304,4.096,1306,3.048,1320,2.162,1325,1.689,1333,4.965,1337,2.383,1348,2.503,1350,2.514,1354,3.325,1372,0.59,1428,1.982,1457,1.57,1524,1.628,1531,1.836,1534,1.782,1576,3.311,1608,2.383,1615,2.193,1623,3.048,1644,3.048,1651,2.838,1652,1.824,1653,2.514,1695,2.383,1834,4.132,1907,3.311,1927,2.802,1943,1.039,1946,1.968,1947,4.132,1951,3.866,1957,3.663,1962,2.514,1964,3.866,1965,2.383,2158,3.048,2162,2.838,2168,2.383,2172,0.045,2175,2.127,2230,3.408,2307,3.009,2322,2.379,2397,1.98,2431,2.29,2432,2.684,2438,1.86,2537,2.067,2576,1.98,2660,1.194,2676,2.379,2682,2.162,2750,2.067,2781,3.048,2787,3.23,2805,3.663,2833,1.515,2849,2.411,2859,4.733,2909,2.588,2912,4.688,2920,3.663,2987,2.838,2991,2.411,3020,2.931,3025,3.048,3029,4.966,3039,4.461,3051,2.663,3060,6.017,3069,1.365,3078,4.568,3086,1.98,3088,6.121,3089,6.488,3090,5.706,3092,6.121,3119,3.048,3125,3.311,3126,5.633,3129,4.488,3158,2.663,3171,2.838,3177,3.048,3178,3.562,3179,4.332,3180,4.365,3184,1.628,3187,3.737,3189,6.204,3215,2.838,3218,3.311,3220,3.311,3221,3.048,3224,4.145,3237,5.026,3248,3.311,3259,3.048,3260,3.847,3261,4.488,3262,2.267,3263,4.488,3264,5.092,3269,2.383,3270,2.383,3271,2.838,3282,2.383,3283,2.663,3284,2.663,3285,2.514,3309,3.311,3311,2.067,3312,3.179,3313,2.514,3316,4.332,3342,3.311,3375,4.965,3376,3.663,3387,2.663,3391,2.663,3393,3.486,3394,2.514,3395,4.688,3398,2.838,3399,4.965,3401,3.048,3425,3.737,3433,3.311,3449,2.267,3467,3.663,3474,3.408,3500,4.197,3501,4.965,3502,6.312,3503,4.197,3504,3.311,3505,4.965,3506,5.689,3507,5.689,3508,4.197,3509,2.838,3510,4.197,3511,3.408,3512,6.312,3513,7.056,3514,3.663,3515,3.663,3516,6.508,3517,5.092,3518,6.718,3519,3.663,3520,6.508,3521,6.92,3522,5.689,3523,4.197,3524,4.197,3525,4.197,3526,1.689,3527,4.197,3528,5.539,3529,3.663,3530,3.663,3531,4.197,3532,4.965,3533,4.568,3534,4.197,3535,4.197,3536,5.689,3537,4.197,3538,4.965,3539,3.663,3540,4.197,3541,4.197,3542,4.197,3543,4.197,3544,4.197,3545,4.197,3546,5.459,3547,4.197,3548,6.92,3549,4.197,3550,3.663,3551,4.965,3552,4.197,3553,4.197,3554,6.454,3555,5.689,3556,3.663,3557,4.197,3558,4.965,3559,6.92,3560,4.488,3561,5.633,3562,3.663,3563,4.965,3564,3.663,3565,7.865,3566,4.197,3567,2.684,3568,4.197,3569,4.197,3570,4.197,3571,4.197,3572,4.197,3573,3.048,3574,4.965,3575,4.365,3576,4.392,3577,4.197,3578,3.048,3579,3.663,3580,3.048,3581,3.663,3582,4.197,3583,4.197,3584,3.663,3585,3.663,3586,4.197,3587,3.663,3588,3.048,3589,4.965,3590,2.514,3591,3.311,3592,4.197,3593,4.197,3594,4.197,3595,6.454,3596,7.457,3597,5.689,3598,2.838,3599,4.197,3600,6.92,3601,4.197,3602,5.689,3603,5.689,3604,4.197,3605,4.197,3606,6.92,3607,4.197,3608,3.048,3609,4.197,3610,5.689,3611,3.048,3612,3.663,3613,3.048,3614,2.838,3615,4.197,3616,2.838,3617,4.197,3618,4.197,3619,3.663,3620,4.197,3621,2.067,3622,4.197,3623,4.132,3624,2.514,3625,3.663,3626,4.197,3627,4.197,3628,5.689,3629,4.197,3630,5.689,3631,4.197,3632,2.514,3633,3.663,3634,2.267,3635,4.197,3636,3.311,3637,3.663,3638,4.197,3639,4.197,3640,3.311,3641,2.383,3642,4.197,3643,3.048,3644,4.197,3645,5.689,3646,4.197,3647,3.663,3648,4.197,3649,6.454,3650,4.197,3651,4.197,3652,4.197,3653,2.514,3654,3.311,3655,2.663,3656,4.197,3657,4.197,3658,4.197,3659,4.197,3660,4.197,3661,4.197]],["t/9",[3662,5.135]],["b/9",[0,4.298,11,1.356,24,2.035,27,2.23,35,0.434,48,1.208,49,2.291,61,2.88,67,0.368,68,2.638,78,1.548,82,1.459,98,2.134,99,2.853,115,1.421,123,3.903,124,0.11,157,3.969,158,3.723,161,1.459,170,1.219,171,2.703,232,0.373,242,1.067,243,3.426,244,0.625,269,0.372,315,2.302,317,1.134,376,2.667,391,2.226,411,3.022,457,2.155,467,1.612,468,2.125,470,3.927,473,0.057,474,0.05,480,2.057,481,0.773,493,1.05,500,0.499,503,0.788,506,0.805,512,1.024,519,1.708,521,1.235,522,0.725,525,2.195,526,3.142,534,3.578,551,3.097,563,0.418,575,2.399,603,0.921,604,1.185,650,3.637,680,2.083,682,0.82,684,0.71,702,2.667,704,2.812,710,1.324,713,2.391,715,1.765,724,1.848,731,3.125,732,0.887,748,2.651,761,3.637,767,1.371,769,1.029,776,2.155,785,1.983,786,2.009,790,2.057,799,3.599,809,2.623,814,2.154,818,3.851,828,1.848,835,1.282,849,2.014,869,3.578,885,2.083,886,1.914,899,4.355,914,2.667,1022,3.365,1045,3.586,1050,2.803,1091,1.725,1115,3.586,1188,2.501,1196,1.785,1273,1.824,1303,4.089,1366,2.083,1369,1.824,1376,1.28,1391,3.176,1395,0.854,1540,5.227,1688,4.183,1689,2.134,1928,3.176,1946,1.508,1954,4.481,2156,2.611,2172,0.057,2230,4.077,2665,2.837,2676,3.165,2740,2.731,2992,1.323,3002,4.812,3020,3.723,3023,6.307,3025,3.851,3028,5.782,3029,4.987,3030,4.481,3031,5.227,3032,6.307,3033,5.782,3035,5.782,3036,4.627,3039,4.536,3040,4.627,3048,4.627,3051,4.205,3052,4.812,3062,4.627,3114,4.627,3142,5.782,3172,5.782,3176,4.812,3177,4.812,3178,4.014,3179,4.535,3180,4.887,3181,5.782,3195,3.586,3207,4.812,3223,4.812,3224,4.535,3227,5.782,3234,3.9,3236,5.972,3237,5.92,3240,6.27,3243,6.607,3244,5.782,3245,5.782,3246,5.782,3247,5.782,3262,4.089,3268,5.782,3269,3.762,3271,4.481,3272,6.607,3278,3.586,3392,3.413,3404,3.011,3424,5.782,3457,2.305,3634,4.089,3663,6.626,3664,4.183,3665,6.626,3666,4.205,3667,6.626,3668,6.626,3669,6.626,3670,4.627,3671,6.626,3672,6.626,3673,7.57,3674,6.626,3675,6.626,3676,6.626,3677,5.782,3678,3.851,3679,5.227,3680,5.302,3681,4.183,3682,5.302]],["t/10",[3683,5.135]],["b/10",[0,4.552,11,1.027,20,2.202,22,0.993,24,0.846,26,0.903,27,1.689,28,1.726,35,0.442,37,0.805,44,1.782,48,1.148,54,0.623,59,0.964,66,1.105,67,0.375,78,1.94,89,1.359,95,2.37,99,2.714,105,0.604,115,0.626,116,1.065,124,0.122,143,3.958,150,2.099,158,3.019,159,1.523,160,1.094,161,0.964,162,1.708,163,1.14,170,0.943,171,2.533,177,0.878,182,0.903,183,1.831,187,1.175,195,0.903,196,1.811,228,2.585,232,0.403,243,2.27,244,0.617,266,1.939,269,0.424,276,2.45,292,2.019,316,1.162,317,1.162,320,0.805,333,1.4,341,0.644,362,1.282,365,0.71,372,0.903,383,2.849,386,0.595,394,1.876,401,0.785,402,0.59,457,1.632,467,2.142,468,1.03,470,3.729,473,0.038,474,0.038,481,0.786,483,1.253,484,0.785,489,0.697,490,1.525,492,2.764,493,0.694,500,0.475,501,0.672,503,0.838,506,0.734,508,1.14,512,0.646,514,1.16,518,1.485,519,1.293,521,0.544,522,0.741,525,1.511,526,2.782,527,1.415,528,1.027,529,0.646,531,1.586,534,1.892,543,1.525,551,2.309,563,0.604,565,1.892,574,0.734,575,1.586,578,1.586,580,1.523,582,0.916,584,3.805,596,1.525,606,0.336,616,0.644,617,0.697,618,0.584,626,0.679,627,0.741,628,0.773,629,0.76,630,0.741,631,0.741,633,0.805,634,2.022,638,0.838,641,0.838,643,0.838,644,1.864,645,0.838,646,0.785,648,0.785,649,1.265,650,3.332,667,1.217,671,1.359,677,0.351,684,0.672,689,1.122,702,2.92,704,1.265,710,0.943,713,1.811,717,1.586,724,2.229,725,1.653,731,3.194,732,1.011,743,1.726,748,2.457,751,2.45,755,1.475,761,1.523,767,1.282,768,1.359,769,1.293,779,3.123,780,1.832,785,2.979,786,0.903,789,2.224,791,1.761,799,2.181,809,1.689,813,1.311,814,1.82,816,1.179,828,2.933,835,1.174,836,2.543,843,2.37,851,1.265,853,1.336,854,2.585,858,1.906,864,2.154,869,1.892,870,2.764,871,2.764,889,2.224,899,3.165,914,2.019,926,0.942,961,1.726,963,1.586,1018,1.523,1024,1.586,1036,1.586,1037,4.525,1047,1.892,1050,1.359,1056,2.37,1064,1.805,1069,2.291,1091,1.14,1094,1.811,1098,2.45,1101,2.192,1108,2.471,1112,2.099,1119,1.523,1162,1.976,1176,2.273,1177,1.805,1188,1.653,1189,1.805,1204,2.224,1248,2.181,1260,2.042,1270,1.805,1273,2.135,1304,2.224,1320,1.805,1325,1.41,1337,1.99,1348,1.359,1372,0.585,1374,0.544,1376,2.05,1377,2.576,1378,2.081,1379,2.309,1382,0.417,1428,1.221,1433,0.785,1457,1.311,1516,1.976,1520,3.058,1531,1.926,1534,1.765,1613,1.311,1667,1.99,1680,0.724,1722,2.224,1894,1.876,1921,5.741,1927,1.726,1943,0.808,1946,0.997,1951,3.005,1965,1.99,1973,1.41,2077,1.523,2139,2.764,2158,2.545,2168,2.849,2169,4.906,2170,3.393,2172,0.038,2175,1.723,2189,1.311,2230,2.471,2279,2.849,2438,1.935,2513,1.805,2522,2.37,2540,2.869,2665,1.179,2676,2.45,2806,2.973,2833,1.811,2849,2.229,2859,4.297,2985,5.708,2986,5.558,2987,2.37,2989,6.951,2991,1.221,2994,5.558,2995,5.558,2996,5.558,2997,5.558,2999,4.056,3002,5.269,3006,5.853,3008,4.864,3009,5.723,3012,5.048,3016,5.017,3020,3.488,3022,5.018,3024,1.359,3027,5.115,3029,4.056,3031,2.764,3039,4.485,3051,2.224,3058,4.378,3060,5.558,3064,3.184,3065,5.115,3066,3.963,3067,4.623,3069,1.906,3071,5.853,3072,5.853,3074,3.058,3075,3.058,3078,3.005,3083,4.378,3084,2.545,3088,6.283,3089,6.236,3090,5.342,3092,5.048,3099,3.058,3118,3.719,3119,2.545,3124,4.103,3125,3.958,3128,5.909,3129,5.959,3131,2.545,3133,3.058,3144,1.653,3154,2.37,3158,2.224,3173,3.058,3176,4.256,3178,2.886,3179,2.099,3180,3.393,3184,1.359,3187,3.657,3188,3.058,3189,6.182,3194,2.224,3201,3.058,3204,3.058,3207,4.647,3209,2.764,3212,5.342,3215,2.37,3217,2.764,3218,5.558,3220,3.958,3221,2.545,3223,3.644,3224,4.22,3225,4.378,3234,1.805,3257,3.058,3258,3.058,3259,3.644,3261,4.623,3262,1.892,3263,3.958,3264,3.958,3269,1.99,3270,1.99,3271,2.37,3278,2.37,3279,5.342,3280,5.115,3281,3.958,3282,1.99,3283,2.224,3284,2.224,3285,3.005,3287,5.115,3306,4.378,3307,4.378,3308,2.37,3310,4.19,3311,1.726,3312,2.471,3314,3.058,3315,2.71,3316,3.833,3317,3.005,3318,3.958,3319,2.099,3320,3.058,3322,3.058,3323,4.771,3324,3.058,3325,3.058,3326,3.058,3327,3.058,3328,3.058,3333,2.099,3334,3.958,3335,2.545,3350,2.545,3382,2.764,3386,3.958,3387,2.224,3391,4.794,3393,1.892,3394,2.099,3409,3.058,3416,3.058,3432,2.764,3457,2.181,3462,3.958,3464,5.584,3465,2.545,3476,3.058,3482,3.058,3485,3.644,3486,2.545,3491,5.909,3492,5.584,3493,6.475,3494,5.115,3495,5.115,3496,3.058,3497,2.545,3498,1.653,3502,4.378,3505,3.058,3511,1.726,3512,5.584,3513,6.592,3514,3.058,3515,3.058,3516,5.584,3517,4.623,3518,6.449,3519,3.058,3520,3.058,3529,6.331,3530,3.058,3532,3.058,3533,2.099,3546,3.958,3558,5.909,3560,2.764,3561,4.378,3562,3.058,3564,3.058,3636,2.764,3637,5.115,3640,2.764,3641,1.99,3643,4.256,3653,2.099,3654,3.958,3666,2.224,3684,2.224,3685,3.058,3686,2.764,3687,3.058,3688,2.764,3689,2.764,3690,3.504,3691,3.504,3692,2.545,3693,3.504,3694,3.504,3695,3.504,3696,7.42,3697,3.504,3698,5.861,3699,3.504,3700,2.764,3701,3.504,3702,4.22,3703,3.504,3704,6.771,3705,5.017,3706,3.504,3707,3.504,3708,3.504,3709,3.504,3710,3.504,3711,3.504,3712,3.504,3713,3.504,3714,3.504,3715,3.504,3716,2.764,3717,3.058,3718,2.764,3719,3.504,3720,3.504,3721,3.504,3722,5.017,3723,5.861,3724,3.504,3725,3.504,3726,3.504,3727,3.504,3728,3.058,3729,3.504,3730,3.504,3731,3.504,3732,7.254,3733,5.017,3734,4.378,3735,6.398,3736,2.545,3737,3.504,3738,3.504,3739,3.504,3740,3.504,3741,5.861,3742,2.764,3743,6.771,3744,4.378,3745,5.017,3746,3.005,3747,3.058,3748,4.378,3749,3.504,3750,3.644,3751,2.099,3752,3.504,3753,3.504,3754,3.504,3755,3.504,3756,5.017,3757,3.504,3758,3.504,3759,3.504,3760,3.504]],["t/11",[316,0.618,3761,3.603]],["b/11",[11,1.123,19,1.399,20,1.37,22,1.537,24,1.561,25,1.871,26,1.47,27,0.459,31,0.492,34,0.987,35,0.439,36,1.543,37,0.623,38,0.363,44,0.718,47,1.611,48,0.742,49,1.456,53,0.452,54,0.639,59,1.668,61,1.026,62,2.17,66,1.319,67,0.361,68,0.475,78,0.73,79,0.592,82,1.026,88,0.862,97,1.501,101,0.95,102,1.358,104,0.54,105,0.61,114,1.075,115,0.825,116,1.888,117,1.994,118,0.865,124,0.122,130,0.51,131,0.987,134,0.922,140,1.189,149,1.075,158,0.702,159,2.48,160,1.245,161,1.78,162,0.534,163,0.443,170,1.041,171,0.51,175,1.239,176,1.576,177,0.691,182,1.277,183,1.601,187,1.239,190,1.953,195,1.351,200,2.523,202,2.232,206,1.84,219,0.865,228,1.919,231,0.51,232,0.403,242,0.678,244,0.561,261,2.336,266,2.19,268,1.026,269,0.422,274,1.341,276,0.57,277,2.464,303,1.415,304,1.919,315,1.133,316,1.24,317,1.259,320,0.589,321,0.559,333,1.359,335,0.34,341,0.64,351,0.815,352,0.816,353,0.559,354,0.437,355,0.375,360,0.865,362,1.615,363,2.52,365,0.651,372,1.636,376,0.95,385,0.34,386,0.588,394,0.883,401,0.499,402,0.564,408,3.274,411,2.191,413,1.189,424,0.702,429,1.189,432,1.075,434,0.428,435,0.883,436,2.061,442,1.189,443,1.189,449,2.061,456,4.09,457,2.254,458,3.417,459,2.409,460,3.203,468,1.239,469,1.358,470,1.114,473,0.025,474,0.018,480,0.529,481,0.608,483,1.055,484,1.018,487,0.375,488,2.819,489,0.721,490,1.734,493,1.34,498,0.816,500,0.525,501,1.122,503,0.815,505,1.597,506,0.726,507,0.57,508,2.463,509,1.972,511,2.223,512,0.847,513,1.597,514,0.834,515,1.509,517,1.919,518,1.482,519,1.695,521,1.147,522,0.68,523,1.229,525,0.351,526,1.62,527,0.329,528,1.386,529,0.979,531,1.068,533,1.239,534,2.012,536,2.336,538,2.388,540,1.341,543,0.718,545,2.439,547,2.386,551,2.242,553,2.103,557,1.445,559,0.889,560,1.595,561,1.863,562,3.544,563,0.62,564,2.053,569,1.474,573,0.363,574,0.712,575,2.088,576,0.589,577,1.761,582,0.894,583,1.988,585,1.016,587,1.281,592,3.287,594,0.736,596,1.888,601,1.122,603,1.069,604,1.304,605,0.774,606,0.764,608,2.409,609,2.075,610,1.831,611,1.016,613,2.706,616,0.671,617,0.931,618,0.596,622,1.051,625,1.09,626,0.649,627,0.694,628,0.692,629,0.598,630,0.573,631,0.573,633,0.589,634,1.654,636,2.02,637,1.112,638,0.649,641,0.613,643,0.706,644,1.026,645,0.571,646,0.618,648,0.564,649,1.891,650,1.026,651,2.247,654,2.785,655,2.523,656,1.163,667,0.948,668,1.456,670,2.551,671,1.212,675,0.65,677,0.715,679,1.168,682,0.522,683,0.586,684,0.764,685,0.694,687,1.325,688,1.498,689,1.376,693,0.99,694,2.064,700,0.57,702,1.696,704,1.127,705,1.953,707,4.573,710,1.09,715,1.519,718,0.916,721,1.867,723,1.257,724,1.298,728,1.474,732,0.937,742,1.414,743,2.581,748,0.768,755,1.614,758,1.414,759,1.501,761,0.592,765,0.475,767,1.022,768,0.529,769,1.051,773,0.95,777,2.127,779,0.549,780,1.688,781,0.617,786,0.609,787,0.774,789,1.498,790,0.529,791,1.442,793,0.865,794,1.241,798,1.257,800,0.816,802,1.257,806,2.006,808,1.498,813,0.883,814,1.992,816,1.254,823,0.99,824,1.597,828,1.912,830,0.736,833,0.592,835,1.139,836,0.852,842,2.62,848,0.702,849,1.403,855,0.51,858,0.443,859,1.075,864,0.795,886,1.127,889,1.498,893,1.414,895,0.617,896,1.858,903,2.967,904,3.143,905,0.671,906,0.643,910,1.358,914,0.549,916,1.758,918,0.549,919,1.79,920,0.549,926,1.156,940,3.199,962,1.835,963,1.414,990,1.687,993,0.852,1018,1.026,1021,0.865,1022,1.498,1024,2.241,1033,2.392,1034,0.922,1035,1.168,1036,1.686,1037,1.871,1042,1.275,1047,1.275,1050,0.529,1058,0.592,1059,2.691,1060,1.306,1063,1.498,1066,1.593,1071,2.061,1085,2.113,1091,1.016,1092,1.212,1094,2.127,1100,1.341,1101,1.394,1104,0.459,1107,1.648,1108,1.539,1112,0.816,1117,0.95,1119,0.592,1128,2.967,1134,0.816,1140,2.061,1142,1.075,1145,1.5,1147,0.475,1162,1.752,1174,1.414,1175,0.865,1176,0.529,1177,0.702,1178,0.922,1179,1.609,1180,0.883,1181,2.589,1188,1.114,1189,1.609,1192,3.806,1195,1.983,1196,1.847,1208,2.674,1211,1.906,1212,0.816,1213,1.212,1234,1.358,1237,1.026,1244,1.168,1245,2.52,1249,1.189,1258,2.485,1260,1.298,1261,0.617,1262,1.068,1263,1.774,1267,0.865,1272,0.99,1273,1.747,1278,1.075,1279,0.95,1288,0.51,1289,0.671,1299,1.983,1303,0.736,1316,0.768,1320,1.919,1325,0.95,1332,2.706,1336,1.341,1341,2.706,1344,0.774,1348,1.634,1350,0.816,1361,1.075,1362,0.672,1363,2.292,1364,1.358,1366,0.428,1369,1.57,1372,0.675,1373,0.774,1374,1.147,1376,1.017,1377,0.95,1378,0.768,1379,0.852,1381,0.865,1382,0.589,1383,0.558,1384,2.493,1385,0.518,1386,0.521,1395,0.949,1396,1.394,1397,1.265,1401,2.061,1405,0.774,1428,1.298,1430,1.075,1432,1.075,1433,1.04,1436,1.726,1437,1.212,1438,1.983,1439,2.62,1441,0.643,1444,0.503,1445,0.54,1448,0.578,1449,0.422,1450,0.452,1451,0.452,1452,1.345,1457,2.806,1458,2.939,1459,0.5,1461,0.5,1464,0.5,1466,0.534,1467,0.552,1468,0.5,1469,0.351,1472,0.34,1473,2.726,1475,0.351,1478,0.363,1483,0.375,1485,0.375,1488,0.363,1489,0.388,1492,0.388,1493,0.375,1494,0.401,1498,0.414,1499,0.414,1501,0.414,1502,0.414,1504,0.428,1505,0.592,1509,0.459,1510,0.459,1511,0.459,1512,0.492,1513,1.33,1514,0.643,1516,2.008,1517,2.374,1518,2.985,1528,0.774,1531,2.311,1534,1.56,1538,3.06,1544,2.075,1567,5.538,1584,1.189,1587,0.816,1592,2.493,1595,0.57,1598,0.95,1600,0.702,1608,0.774,1613,0.51,1615,1.866,1621,1.983,1632,0.99,1634,4.486,1651,0.922,1659,1.341,1662,2.759,1666,0.702,1673,0.736,1680,1.131,1681,1.835,1684,1.726,1689,0.549,1693,0.492,1712,0.987,1760,0.852,1832,1.715,1842,1.075,1843,2.603,1853,0.492,1885,0.718,1888,2.706,1894,0.51,1909,0.774,1918,2.061,1919,0.865,1921,3.06,1927,1.835,1931,3.388,1943,0.797,1946,0.889,1950,1.597,1958,1.498,1961,1.189,1964,2.232,1965,0.774,1966,0.617,1967,0.643,1973,2.109,1992,2.275,1994,1.275,1999,3.185,2032,0.51,2033,0.916,2037,0.51,2039,0.529,2040,0.529,2042,0.916,2044,0.529,2045,0.51,2046,0.916,2047,0.529,2050,0.549,2051,0.529,2052,0.57,2056,1.026,2057,0.592,2058,0.592,2060,0.592,2062,0.592,2064,1.858,2067,1.634,2071,1.026,2072,1.62,2074,1.358,2077,1.026,2078,1.068,2079,1.068,2081,0.643,2084,0.643,2098,0.643,2156,1.163,2160,1.597,2162,0.922,2163,1.189,2171,0.617,2172,0.015,2175,0.694,2176,2.275,2179,2.647,2189,2.806,2202,1.075,2212,4.374,2255,1.075,2261,0.592,2280,1.075,2303,3.677,2305,0.774,2307,1.79,2325,0.774,2369,3.252,2400,3.324,2403,0.865,2426,1.114,2431,3.135,2432,3.391,2438,1.369,2440,1.075,2442,3.352,2452,1.189,2457,2.674,2459,3.274,2461,5.827,2462,4.322,2463,1.189,2464,1.189,2465,2.939,2466,0.922,2467,0.99,2468,1.189,2469,1.189,2470,1.189,2471,1.257,2472,0.865,2473,1.275,2474,1.871,2475,0.99,2476,1.189,2477,1.189,2479,1.189,2480,1.189,2481,2.061,2482,1.189,2483,1.189,2484,1.189,2485,1.189,2486,1.189,2487,3.442,2489,1.189,2493,1.189,2497,1.189,2499,1.189,2500,1.189,2501,1.189,2513,0.702,2518,1.414,2540,2.638,2559,2.726,2573,1.163,2576,1.758,2619,0.816,2621,0.922,2655,2.012,2660,1.313,2665,0.459,2676,1.306,2740,0.702,2764,1.216,2806,0.529,2822,0.99,2826,1.075,2833,1.127,2849,1.089,2850,1.609,2856,0.774,2859,0.865,2871,0.865,2878,3.352,2891,0.99,2909,1.576,2924,1.597,2925,0.736,2926,4.143,2929,5.268,2933,0.865,2934,0.922,2953,1.075,2964,2.269,2973,1.212,2974,0.99,2975,0.774,2981,2.464,2983,0.736,2991,1.468,2992,1.549,2993,0.865,3008,2.365,3020,0.702,3024,2.129,3066,2.113,3068,0.702,3069,1.016,3077,2.464,3086,1.474,3087,2.232,3091,0.99,3098,0.922,3104,3.06,3105,1.075,3124,1.216,3178,1.163,3184,2.033,3187,2.675,3193,1.414,3195,2.52,3206,1.189,3234,2.17,3254,1.597,3269,0.774,3309,1.075,3311,1.539,3312,1.163,3377,1.189,3387,0.865,3391,0.865,3404,2.116,3457,0.592,3472,1.597,3479,0.671,3509,1.597,3511,1.539,3526,1.257,3533,3.287,3551,2.061,3573,2.706,3576,0.865,3578,0.99,3590,2.967,3591,1.075,3598,0.922,3608,0.99,3621,2.581,3624,0.816,3632,0.816,3634,0.736,3641,2.975,3643,1.715,3654,1.863,3655,0.865,3716,1.075,3747,3.677,3762,0.702,3763,1.363,3764,1.363,3765,2.361,3766,1.363,3767,2.361,3768,1.189,3769,1.189,3770,1.363,3771,1.363,3772,1.363,3773,1.363,3774,1.363,3775,0.774,3776,2.361,3777,1.189,3778,3.124,3779,3.124,3780,3.124,3781,3.124,3782,3.124,3783,3.124,3784,3.124,3785,1.363,3786,2.361,3787,2.361,3788,2.361,3789,2.361,3790,1.363,3791,1.363,3792,2.361,3793,1.363,3794,1.363,3795,1.363,3796,1.363,3797,4.615,3798,4.615,3799,4.615,3800,4.615,3801,1.498,3802,2.061,3803,0.57,3804,3.124,3805,3.124,3806,2.464,3807,1.863,3808,0.643,3809,1.189,3810,4.028,3811,1.363,3812,2.365,3813,1.075,3814,1.363,3815,1.363,3816,6.049,3817,6.169,3818,1.363,3819,5.24,3820,4.134,3821,0.774,3822,1.363,3823,1.363,3824,2.691,3825,2.361,3826,3.352,3827,4.573,3828,1.363,3829,3.726,3830,3.726,3831,3.726,3832,3.726,3833,3.726,3834,1.363,3835,2.361,3836,1.363,3837,1.363,3838,4.213,3839,1.363,3840,1.363,3841,1.189,3842,4.9,3843,3.124,3844,5.24,3845,1.189,3846,1.363,3847,1.363,3848,2.464,3849,1.363,3850,3.124,3851,1.189,3852,0.922,3853,2.061,3854,5.894,3855,1.075,3856,1.363,3857,1.189,3858,1.189,3859,1.363,3860,1.189,3861,4.615,3862,1.189,3863,1.363,3864,1.189,3865,1.189,3866,1.363,3867,1.189,3868,1.363,3869,1.189,3870,3.677,3871,2.849,3872,1.189,3873,2.726,3874,1.189,3875,2.361,3876,1.189,3877,1.363,3878,1.189,3879,1.363,3880,1.363,3881,2.061,3882,1.863,3883,1.363,3884,1.363,3885,3.143,3886,1.363,3887,1.363,3888,2.361,3889,2.361,3890,2.361,3891,1.363,3892,0.816,3893,1.774,3894,1.871,3895,2.061,3896,2.061,3897,2.361,3898,1.363,3899,1.363,3900,1.363,3901,1.363,3902,1.189,3903,1.363,3904,1.363,3905,1.863,3906,2.361,3907,1.363,3908,1.363,3909,5.524,3910,1.363,3911,1.363,3912,1.363,3913,2.061,3914,1.363,3915,4.615,3916,4.615,3917,3.124,3918,1.363,3919,3.124,3920,2.361,3921,1.363,3922,1.363,3923,2.52,3924,1.363,3925,1.363,3926,2.361,3927,2.464,3928,2.361,3929,1.363,3930,1.863,3931,1.363,3932,4.213,3933,4.213,3934,1.363,3935,4.213,3936,1.189,3937,1.363,3938,4.615,3939,3.124,3940,3.124,3941,1.363,3942,4.953,3943,1.363,3944,1.363,3945,1.363,3946,1.363,3947,2.361,3948,1.189,3949,2.361,3950,1.363,3951,1.863,3952,2.361,3953,1.363,3954,1.075,3955,1.363,3956,1.363,3957,1.363,3958,1.189,3959,2.061,3960,1.189,3961,3.641,3962,1.363,3963,1.189,3964,1.363,3965,1.189,3966,4.028,3967,1.363,3968,2.361,3969,1.189,3970,1.363,3971,1.189,3972,1.363,3973,2.361,3974,1.189,3975,1.363,3976,1.189,3977,2.361,3978,2.361,3979,2.361,3980,1.363,3981,2.361,3982,2.361,3983,1.189,3984,1.363,3985,1.189,3986,1.189,3987,2.726,3988,2.726,3989,1.363,3990,1.363,3991,2.061,3992,1.363,3993,1.863,3994,1.363,3995,1.363,3996,2.061,3997,1.363,3998,2.061,3999,1.363,4000,2.061,4001,1.363,4002,2.061,4003,1.363,4004,1.498,4005,4.573,4006,2.061,4007,4.322,4008,2.361,4009,1.363,4010,1.363,4011,1.363,4012,1.363,4013,3.677,4014,4.213,4015,1.363,4016,2.929,4017,3.124,4018,2.061,4019,2.52,4020,1.363,4021,2.061,4022,2.361,4023,3.74,4024,2.706,4025,2.726,4026,2.361,4027,2.361,4028,4.615,4029,3.124,4030,2.361,4031,1.863,4032,2.361,4033,2.061,4034,5.24,4035,4.953,4036,2.361,4037,2.361,4038,3.124,4039,3.124,4040,2.361,4041,1.363,4042,1.363,4043,1.363,4044,3.726,4045,2.361,4046,4.213,4047,4.213,4048,1.363,4049,2.061,4050,1.363,4051,3.124,4052,1.363,4053,1.363,4054,1.363,4055,1.363,4056,1.363,4057,1.363,4058,1.363,4059,1.363,4060,1.363,4061,0.99,4062,0.99,4063,1.363,4064,1.363,4065,0.865,4066,1.189,4067,1.075,4068,0.922,4069,0.922,4070,0.922,4071,0.922,4072,0.99,4073,1.363,4074,1.363,4075,1.363,4076,1.363,4077,1.363,4078,1.363,4079,1.363,4080,1.363,4081,1.363,4082,1.363,4083,1.189,4084,1.983,4085,1.075,4086,1.189,4087,1.189,4088,1.075,4089,1.189,4090,1.863,4091,1.863,4092,1.863,4093,1.075,4094,1.075,4095,5.625,4096,2.726,4097,1.363,4098,1.863,4099,2.706,4100,1.363,4101,1.363,4102,4.402,4103,2.361,4104,1.363,4105,4.213,4106,1.189,4107,1.363,4108,1.363,4109,3.677,4110,3.677,4111,1.189,4112,1.363,4113,2.269,4114,2.939,4115,2.361,4116,1.363,4117,2.706,4118,2.361,4119,3.124,4120,2.361,4121,4.028,4122,2.361,4123,3.726,4124,2.061,4125,1.363,4126,1.363,4127,1.363,4128,1.363,4129,1.363,4130,1.363,4131,1.363,4132,1.363,4133,1.189,4134,1.363,4135,2.361,4136,1.363,4137,1.363,4138,1.363,4139,1.363,4140,3.124,4141,1.363,4142,2.361,4143,2.361,4144,2.523,4145,5.981,4146,1.363,4147,4.65,4148,1.363,4149,4.213,4150,3.124,4151,1.363,4152,2.361,4153,3.124,4154,2.361,4155,1.363,4156,1.363,4157,4.79,4158,4.79,4159,1.363,4160,1.363,4161,2.061,4162,1.363,4163,1.363,4164,2.061,4165,6.467,4166,6.062,4167,4.978,4168,4.953,4169,4.213,4170,1.363,4171,1.363,4172,1.189,4173,1.363,4174,1.363,4175,2.269,4176,2.523,4177,1.363,4178,3.677,4179,3.124,4180,3.252,4181,2.361,4182,0.922,4183,1.363,4184,1.414,4185,1.363,4186,1.363,4187,2.361,4188,1.363,4189,1.363,4190,1.363,4191,1.189,4192,1.363,4193,1.363,4194,1.863,4195,1.189,4196,1.363,4197,1.363,4198,0.99,4199,6.777,4200,2.361,4201,2.726,4202,1.363,4203,1.363,4204,1.363,4205,3.124,4206,1.189,4207,1.363,4208,1.363,4209,1.363,4210,2.361,4211,1.363,4212,1.189,4213,2.269,4214,3.726,4215,2.361,4216,2.361,4217,1.363,4218,1.363,4219,2.361,4220,1.363,4221,1.363,4222,2.361,4223,1.363,4224,1.363,4225,4.213,4226,1.363,4227,1.363,4228,0.702,4229,3.124,4230,1.363,4231,1.363,4232,2.361,4233,1.363,4234,1.363,4235,1.189,4236,2.361,4237,1.363,4238,3.124,4239,1.363,4240,1.363,4241,1.363,4242,1.363,4243,3.124,4244,1.363,4245,1.363,4246,2.361,4247,1.363,4248,0.99,4249,1.363,4250,3.726,4251,1.189,4252,1.363,4253,1.363,4254,1.363,4255,1.363,4256,1.363,4257,1.363,4258,1.189,4259,1.189,4260,1.363,4261,1.363,4262,2.764,4263,1.363,4264,1.363,4265,1.363,4266,1.189,4267,1.363,4268,1.363,4269,1.363,4270,1.363,4271,1.363,4272,2.361,4273,1.363,4274,1.363,4275,1.189,4276,1.715,4277,1.363,4278,1.363,4279,1.363,4280,2.061,4281,1.075,4282,1.363,4283,1.363,4284,1.363,4285,1.363,4286,1.363,4287,1.363,4288,1.363,4289,1.189,4290,0.736,4291,1.363,4292,1.189,4293,2.361,4294,1.189,4295,1.363,4296,1.363,4297,1.363,4298,1.363,4299,2.361,4300,1.363,4301,0.922,4302,1.363,4303,1.363,4304,1.363,4305,1.363,4306,1.363,4307,1.363,4308,1.363,4309,1.189,4310,1.363,4311,1.363,4312,1.363,4313,1.363,4314,1.363,4315,2.361,4316,1.363,4317,1.363,4318,1.363,4319,1.363,4320,1.363,4321,1.363,4322,1.363,4323,1.363,4324,1.363,4325,1.363,4326,1.363,4327,1.363,4328,1.363,4329,1.363,4330,1.363,4331,1.363,4332,1.363,4333,1.363,4334,2.361,4335,1.363,4336,1.363,4337,1.363,4338,1.363,4339,1.363,4340,2.269,4341,1.341,4342,1.687,4343,0.99,4344,1.363,4345,2.361,4346,1.189,4347,1.363,4348,2.361,4349,1.363,4350,1.414,4351,1.363,4352,1.363,4353,1.189,4354,1.498,4355,1.363,4356,1.189,4357,1.363,4358,1.363,4359,2.361,4360,1.363,4361,1.363,4362,1.363,4363,1.363,4364,1.363,4365,1.363,4366,1.363,4367,1.075,4368,1.189,4369,3.907,4370,4.213,4371,2.361,4372,1.363,4373,4.213,4374,1.363,4375,1.363,4376,1.363,4377,1.363,4378,1.363,4379,1.189,4380,2.361,4381,1.189,4382,1.363,4383,1.363,4384,1.363,4385,1.363,4386,1.363,4387,1.363,4388,1.363,4389,1.363,4390,2.061,4391,3.124,4392,3.677,4393,2.061,4394,2.361,4395,1.363,4396,1.363,4397,3.726,4398,2.269,4399,1.363,4400,1.363,4401,2.361,4402,1.363,4403,1.363,4404,2.361,4405,1.363,4406,1.363,4407,1.363,4408,1.075,4409,1.363,4410,1.498,4411,1.363,4412,1.363,4413,2.361,4414,1.363,4415,1.075,4416,1.363,4417,1.715,4418,1.363,4419,1.189,4420,0.99,4421,1.363,4422,0.865,4423,0.99,4424,0.99,4425,2.939,4426,2.361,4427,1.216,4428,0.99,4429,1.363,4430,1.075,4431,2.061,4432,2.061,4433,1.363,4434,1.363,4435,1.363,4436,1.363,4437,2.361,4438,1.363,4439,1.363,4440,2.061,4441,1.363,4442,2.361,4443,2.361,4444,0.99,4445,1.597,4446,1.075,4447,1.363,4448,1.341,4449,1.687,4450,1.363,4451,1.075,4452,2.361,4453,3.53,4454,4.33,4455,5.538,4456,2.361,4457,4.609,4458,2.361,4459,2.361,4460,4.213,4461,2.361,4462,3.324,4463,1.363,4464,3.124,4465,3.641,4466,3.349,4467,1.863,4468,2.361,4469,0.816,4470,1.363,4471,0.774,4472,4.134,4473,3.124,4474,1.363,4475,1.863,4476,4.213,4477,2.361,4478,4.213,4479,2.361,4480,2.361,4481,1.363,4482,1.189,4483,4.213,4484,1.363,4485,1.363,4486,2.464,4487,1.363,4488,1.363,4489,1.189,4490,1.189,4491,1.363,4492,3.677,4493,1.363,4494,2.361,4495,3.726,4496,1.363,4497,0.987,4498,2.473,4499,4.615,4500,3.726,4501,1.597,4502,2.361,4503,2.061,4504,2.975,4505,1.363,4506,0.702,4507,1.363,4508,0.816,4509,0.922,4510,1.363,4511,2.967,4512,2.275,4513,3.183,4514,4.615,4515,2.361,4516,1.863,4517,2.706,4518,1.863,4519,1.363,4520,2.061,4521,1.341,4522,1.363,4523,1.189,4524,1.363,4525,1.363,4526,1.363,4527,3.726,4528,7.069,4529,4.615,4530,5.488,4531,3.726,4532,5.74,4533,5.24,4534,3.726,4535,2.361,4536,3.726,4537,4.615,4538,4.615,4539,2.62,4540,4.615,4541,3.726,4542,3.124,4543,1.363,4544,3.726,4545,1.363,4546,2.361,4547,2.361,4548,1.863,4549,1.597,4550,2.361,4551,1.363,4552,2.706,4553,1.363,4554,6.062,4555,2.361,4556,2.361,4557,5.24,4558,2.361,4559,2.361,4560,1.363,4561,2.361,4562,1.363,4563,1.363,4564,1.363,4565,2.726,4566,1.189,4567,1.189,4568,3.806,4569,4.573,4570,4.213,4571,1.363,4572,1.363,4573,2.361,4574,2.361,4575,2.361,4576,1.363,4577,1.363,4578,1.363,4579,1.363,4580,1.363,4581,3.726,4582,2.361,4583,1.189,4584,1.189,4585,1.189,4586,2.361,4587,1.363,4588,1.363,4589,1.363,4590,1.363,4591,1.363,4592,1.363,4593,1.363,4594,1.363,4595,1.075,4596,1.189,4597,0.922,4598,1.363,4599,1.363,4600,1.363,4601,1.363,4602,2.061,4603,2.361,4604,1.363,4605,2.361,4606,1.189,4607,1.363,4608,3.726,4609,1.363,4610,1.075,4611,0.865,4612,2.674,4613,2.726,4614,1.363,4615,1.363,4616,1.189,4617,0.99,4618,3.06,4619,2.464,4620,1.863,4621,1.363,4622,1.363,4623,1.363,4624,3.324,4625,2.523,4626,1.189,4627,2.439,4628,1.189,4629,1.189,4630,1.363,4631,3.124,4632,1.189,4633,1.363,4634,1.363,4635,1.363,4636,1.189,4637,1.363,4638,1.363,4639,1.363,4640,1.363,4641,1.363,4642,1.363,4643,1.189,4644,1.363,4645,1.363,4646,1.363,4647,1.363,4648,1.363,4649,1.363,4650,1.363,4651,1.189,4652,1.363,4653,1.687,4654,1.363,4655,1.363,4656,1.363,4657,1.189,4658,1.363,4659,1.363,4660,1.363,4661,1.363,4662,1.363,4663,1.363,4664,3.726,4665,3.124,4666,3.124,4667,3.124,4668,1.363,4669,1.363,4670,3.124,4671,1.363,4672,1.363,4673,1.363,4674,2.061,4675,1.363,4676,1.363,4677,1.363,4678,2.361,4679,1.189,4680,3.252,4681,2.361,4682,1.363,4683,1.363,4684,1.363,4685,4.615,4686,2.361,4687,1.363,4688,2.361,4689,1.363,4690,1.363,4691,1.363,4692,1.363,4693,1.363,4694,1.363,4695,1.363,4696,1.363,4697,3.124,4698,3.124,4699,3.124,4700,1.189,4701,1.363,4702,1.363,4703,1.363,4704,1.189,4705,1.363,4706,1.363,4707,1.363,4708,1.363,4709,1.363,4710,1.363,4711,1.363,4712,1.363,4713,1.363,4714,4.615,4715,3.124,4716,1.363,4717,1.363,4718,1.363,4719,1.363,4720,1.363,4721,1.363,4722,1.363,4723,2.361,4724,1.363,4725,1.363,4726,1.363,4727,1.363,4728,1.363,4729,1.363,4730,1.189,4731,1.363,4732,1.363,4733,1.363,4734,1.363,4735,1.363,4736,1.363,4737,1.363,4738,1.363,4739,1.363,4740,2.061,4741,1.363,4742,1.363,4743,1.363,4744,1.363,4745,2.361,4746,1.363,4747,1.363,4748,2.361,4749,2.361,4750,1.363,4751,3.124,4752,2.361,4753,3.124,4754,2.361,4755,1.363,4756,2.361,4757,3.726,4758,2.361,4759,1.363,4760,1.075,4761,2.061,4762,1.363,4763,3.124,4764,1.363,4765,2.361,4766,1.363,4767,3.124,4768,1.363,4769,1.363,4770,1.363,4771,2.361,4772,2.361,4773,0.774,4774,0.922,4775,1.075,4776,0.774,4777,0.99,4778,1.414,4779,1.189,4780,0.816,4781,1.189,4782,1.597,4783,1.075,4784,1.363,4785,1.363,4786,1.075,4787,1.189,4788,0.99,4789,1.189,4790,1.414,4791,1.863,4792,2.061,4793,1.189,4794,2.726,4795,3.907,4796,1.189,4797,1.189,4798,1.189,4799,1.363,4800,2.269,4801,4.028,4802,1.189,4803,2.464,4804,3.124,4805,1.363,4806,1.189,4807,2.061,4808,2.361,4809,3.252,4810,1.62,4811,2.061,4812,2.361,4813,2.361,4814,1.189,4815,1.189,4816,1.189,4817,1.189,4818,2.061,4819,1.363,4820,1.189,4821,0.592,4822,0.865,4823,1.189,4824,2.232,4825,1.189,4826,1.189,4827,1.863,4828,1.189,4829,1.863,4830,1.068,4831,1.189,4832,1.075,4833,0.99,4834,0.865,4835,1.189,4836,0.99,4837,3.252,4838,1.363,4839,3.252,4840,1.363,4841,1.363,4842,2.061,4843,1.863,4844,1.189,4845,1.075,4846,1.075,4847,0.592,4848,1.189,4849,1.075,4850,1.075,4851,1.189,4852,0.865,4853,1.189,4854,1.363,4855,1.363,4856,1.363,4857,1.363,4858,1.363,4859,1.363,4860,1.363,4861,1.363,4862,1.363,4863,0.99,4864,1.363,4865,1.189,4866,2.061,4867,2.726,4868,1.363,4869,1.363,4870,2.061,4871,1.363,4872,2.726,4873,1.363,4874,1.363,4875,1.363,4876,1.363,4877,0.736,4878,1.189,4879,1.189,4880,2.061,4881,1.189,4882,1.189,4883,1.189,4884,1.075,4885,1.189,4886,1.189,4887,1.189,4888,1.363,4889,1.363,4890,1.363,4891,1.363,4892,1.363,4893,2.361,4894,0.774,4895,1.363,4896,1.363,4897,1.075,4898,0.922,4899,1.075,4900,1.363,4901,1.189,4902,1.189,4903,1.189,4904,1.075,4905,1.075,4906,1.363,4907,0.922,4908,0.922,4909,0.922,4910,1.075,4911,1.863,4912,4.213,4913,1.189,4914,2.061,4915,0.922,4916,1.715,4917,1.189,4918,1.715,4919,2.269,4920,5.24,4921,1.363,4922,1.363,4923,1.363,4924,2.361,4925,1.363,4926,3.252,4927,1.363,4928,1.983,4929,1.363,4930,1.363,4931,1.363,4932,1.363,4933,3.124,4934,2.361,4935,1.363,4936,1.189,4937,1.863,4938,1.363,4939,2.061,4940,1.363,4941,1.363,4942,1.696,4943,1.363,4944,4.953,4945,1.863,4946,0.922,4947,1.363,4948,2.361,4949,1.363,4950,1.715,4951,2.361,4952,2.361,4953,2.361,4954,1.363,4955,2.361,4956,1.363,4957,1.363,4958,3.124,4959,2.361,4960,2.361,4961,1.363,4962,2.361,4963,1.189,4964,1.363,4965,3.124,4966,1.341,4967,2.361,4968,1.363,4969,2.361,4970,1.363,4971,1.363,4972,1.363,4973,1.363,4974,1.363,4975,1.363,4976,0.617,4977,1.363,4978,1.363,4979,1.363,4980,0.736,4981,0.99,4982,1.189,4983,1.363,4984,1.363,4985,1.363,4986,2.361,4987,1.363,4988,1.363,4989,2.361,4990,1.414,4991,1.363,4992,1.363,4993,1.075,4994,1.363,4995,1.363,4996,1.363,4997,1.363,4998,1.363,4999,2.061,5000,1.075,5001,1.189,5002,1.363,5003,0.99,5004,1.686,5005,0.99,5006,0.671,5007,0.922,5008,0.922,5009,0.99,5010,1.026,5011,1.189,5012,0.702,5013,1.363,5014,2.061,5015,2.361,5016,1.863,5017,2.361,5018,2.361,5019,2.061,5020,1.363,5021,1.363,5022,1.363,5023,2.361,5024,1.363,5025,1.363,5026,1.363,5027,1.189,5028,1.363,5029,1.363,5030,3.677,5031,1.363,5032,3.06,5033,2.361,5034,1.363,5035,3.726,5036,2.361,5037,1.363,5038,1.363,5039,1.363,5040,1.363,5041,2.361,5042,1.363,5043,1.363,5044,1.363,5045,1.363,5046,1.363,5047,1.363,5048,1.363,5049,1.363,5050,0.99,5051,1.189,5052,1.363,5053,1.363,5054,1.189,5055,2.361,5056,1.363,5057,1.363,5058,2.361,5059,1.363,5060,1.363,5061,1.363,5062,1.189,5063,1.363,5064,1.363,5065,2.361,5066,1.363,5067,1.363,5068,1.363,5069,1.189,5070,1.163,5071,1.363,5072,1.363,5073,1.363,5074,2.361,5075,3.124,5076,2.361,5077,1.363,5078,1.075,5079,2.361]],["t/12",[2984,4.051]],["b/12",[9,2.798,11,1.163,20,1.848,22,1.475,24,1.371,26,1.999,27,2.327,29,2.68,30,2.597,31,2.05,48,1.211,49,1.671,57,4.958,61,3.371,64,4.482,67,0.37,68,2.702,69,3.515,72,3.842,82,1.564,88,1.163,89,2.891,96,2.891,98,3.122,99,2.72,101,2.287,102,3.006,113,3.605,115,1.386,116,2.102,117,3,118,3.605,124,0.108,150,3.403,162,1.753,163,1.848,170,1.113,171,2.586,173,4.388,174,5.021,175,2.337,176,2.901,177,1.211,182,1.921,183,1.812,195,1.464,196,2.05,200,3.403,202,3.403,206,1.616,243,3.129,244,0.617,269,0.293,287,4.482,298,2.203,299,1.786,316,1.246,317,1.272,333,1.512,340,2.203,362,1.243,394,2.586,408,4.025,409,3.605,455,4.403,458,3.403,459,2.682,467,1.727,468,1.671,473,0.061,474,0.053,475,2.203,481,0.714,487,1.903,489,0.995,493,1.369,501,0.998,503,0.676,506,0.544,508,1.848,509,1.848,518,1.163,519,1.782,526,2.47,529,0.732,533,1.671,553,1.848,557,2.203,563,0.545,574,0.544,603,1.036,608,2.203,616,0.52,618,0.471,667,1.287,668,1.671,670,2.927,682,0.703,688,3.605,700,2.375,702,2.287,704,2.05,710,0.915,712,3.068,713,2.05,717,2.571,723,2.287,724,2.409,728,2.68,731,2.68,732,0.998,759,1.848,760,2.125,767,0.915,769,0.882,780,1.284,785,2.125,786,1.464,799,2.47,802,3,809,1.912,816,2.508,836,2.05,844,4.958,848,2.927,853,1.513,856,2.927,860,4.232,864,1.912,865,2.47,870,3.261,884,3.926,907,4.464,920,2.287,961,2.798,1021,3.605,1047,3.068,1051,3.842,1058,3.24,1062,3.842,1064,3.995,1066,2.102,1069,2.249,1092,2.203,1094,2.05,1105,2.891,1128,3.403,1144,3.403,1145,1.371,1174,2.571,1176,2.682,1248,3.006,1251,2.571,1255,5.454,1270,2.927,1289,2.798,1299,3.605,1316,1.848,1353,3.605,1433,0.761,1457,2.787,1516,1.513,1517,2.05,1552,4.388,1595,2.891,1599,2.798,1693,2.05,1695,3.226,1833,3.605,1894,2.125,1909,3.226,1943,0.915,1946,1.616,1954,3.842,1966,2.571,2120,4.126,2172,0.061,2175,2.192,2176,3.068,2307,2.203,2397,2.68,2426,2.68,2431,2.287,2472,3.605,2537,2.798,2687,3.403,2735,2.798,2736,4.126,2740,2.927,2750,2.798,2753,3.403,2756,3.842,2850,2.927,2907,4.958,2909,2.586,2925,3.068,3038,3.403,3069,2.249,3124,3.562,3178,2.798,3184,2.203,3262,3.068,3312,2.798,3315,3.068,3341,2.375,3390,4.482,3392,2.927,3449,4.188,3457,2.47,3475,2.927,3487,6.034,3498,2.68,3509,3.842,3575,3.842,3612,4.958,3614,4.675,3616,4.675,3634,3.068,3636,4.482,3653,4.141,3655,3.605,3692,5.413,3821,3.226,3848,4.482,4427,2.927,4506,2.927,4511,3.403,4513,3.734,4597,4.675,4877,3.734,4993,5.454,5080,5.681,5081,5.681,5082,5.681,5083,4.958,5084,5.681,5085,5.681,5086,4.958,5087,5.681,5088,4.675,5089,5.454,5090,3.842,5091,5.681,5092,5.681,5093,3.226,5094,3.403,5095,3.842,5096,5.681,5097,5.413,5098,5.681,5099,4.126,5100,5.681,5101,5.681,5102,3.842,5103,5.681,5104,4.482,5105,5.681,5106,5.681,5107,4.958,5108,2.682,5109,5.681,5110,5.681,5111,4.958,5112,5.681,5113,5.681,5114,4.958,5115,4.675,5116,5.681,5117,4.958,5118,3.842,5119,4.958,5120,4.958,5121,4.126,5122,4.482,5123,5.681,5124,2.927,5125,5.681,5126,3.403,5127,5.681,5128,3.605,5129,4.126]],["t/13",[67,0.183,5130,3.603]],["b/13",[11,0.935,19,1.521,21,1.392,22,1.504,24,1.656,26,0.481,28,0.659,30,0.466,31,0.261,33,1.262,34,0.559,35,0.446,36,0.967,37,0.725,38,1.346,44,1.655,47,1.807,48,0.954,49,1.395,53,0.874,54,0.649,59,1.785,61,1.599,62,3.059,64,0.571,65,0.434,66,0.789,67,0.383,68,2.175,69,2.064,70,1.472,72,0.489,78,1.387,79,0.811,82,1.888,88,1.035,96,1.139,97,1.644,98,0.291,99,1.832,101,0.291,103,0.459,104,0.847,105,0.642,108,2.964,109,0.972,110,0.972,111,3.815,113,1.475,114,3.286,115,1.212,116,1.854,117,2.39,118,2.335,119,0.632,120,1.168,123,1.255,124,0.122,130,0.698,131,1.139,132,0.632,148,0.632,149,0.571,150,2.034,157,0.434,160,0.112,161,0.848,162,0.164,163,0.607,164,2.083,170,1.185,171,0.5,175,0.906,177,0.2,182,0.948,183,0.436,187,1.091,195,0.345,196,0.261,197,1.587,206,0.661,213,1.168,226,1.262,228,2.146,231,0.698,232,0.404,233,0.341,242,1.015,244,0.456,256,0.489,261,1.845,262,1.168,264,0.801,266,1.854,268,1.902,269,0.427,274,2.785,276,0.972,292,2.091,303,1.014,304,0.373,315,1.689,316,0.655,317,1.189,320,0.716,321,0.877,333,0.408,334,0.489,335,1.139,341,0.682,351,0.861,352,0.434,353,0.952,354,0.908,355,0.935,362,1.619,365,0.738,370,0.632,372,1.339,373,0.391,376,1.097,385,1.039,386,0.63,391,1.967,394,0.698,397,2.249,398,0.801,401,0.758,402,0.631,411,1.829,424,0.373,434,0.731,435,0.698,455,0.76,457,0.235,460,3.268,467,1.033,468,0.393,473,0.033,474,0.01,475,0.901,477,0.341,479,0.489,480,1.317,481,0.399,483,0.728,484,1.027,487,0.848,488,2.39,489,0.816,490,0.706,493,1.078,498,0.434,500,0.54,501,1.069,502,0.582,503,0.858,505,1.571,506,0.728,507,0.303,508,0.435,509,1.485,512,1.03,514,1.584,515,1.335,517,1.587,518,1.549,519,1.459,521,1.264,522,0.742,523,1.96,525,1.552,526,1.01,527,0.658,528,1.482,529,0.888,531,1.98,533,1.395,534,1.008,536,1.096,537,0.459,538,1.073,543,0.829,545,0.356,547,2.503,549,0.489,550,0.919,551,2.89,553,1.197,557,0.724,559,1.047,560,1.073,562,0.905,563,0.615,564,0.869,565,1.472,569,2.567,570,0.459,573,1.534,574,0.777,575,0.605,576,0.918,577,0.559,578,0.844,580,0.315,582,0.783,583,0.65,585,1.983,587,0.22,593,0.489,596,1.119,601,0.619,602,0.341,603,1.091,604,0.607,606,0.668,607,0.391,608,1.057,609,0.356,610,0.582,611,1.002,616,0.725,617,0.601,618,0.633,622,1.149,625,1.198,626,0.731,627,0.767,628,0.774,629,0.715,630,0.727,631,0.71,633,0.771,636,0.886,637,0.348,638,0.781,641,0.773,643,0.755,644,0.75,645,0.713,646,0.771,648,0.771,649,0.984,650,0.811,651,2.183,654,0.839,667,0.471,668,0.683,675,0.64,677,0.81,679,1.019,680,1.491,681,0.271,682,0.643,683,0.902,684,0.962,685,0.801,687,0.857,689,0.445,694,1.931,699,1.319,700,0.303,704,0.673,705,1.711,706,0.411,708,0.632,710,1.138,713,0.673,715,1.48,717,0.844,718,1.057,720,0.76,721,1.954,722,0.526,723,0.935,732,0.806,736,0.571,748,1.423,749,0.489,751,0.559,753,1.591,755,1.395,758,1.233,759,0.756,760,0.5,761,2.062,762,1.185,764,1.319,765,0.252,766,0.571,767,0.942,769,1.189,770,1.339,773,1.389,775,0.632,776,0.756,777,1.112,779,0.291,780,1.109,781,0.605,783,3.87,784,1.255,785,0.271,786,1.014,787,0.76,791,1.854,792,0.632,794,1.277,798,2.893,799,1.01,801,1.78,802,0.935,805,1.168,806,0.315,808,0.459,809,1.143,812,1.197,813,2.644,814,1.689,816,1.238,818,0.972,819,1.168,820,0.905,821,0.489,826,3.178,828,0.252,830,0.391,833,1.01,835,1.092,836,1.579,848,0.689,849,1.119,851,1.328,852,1.78,853,1.827,854,1.404,855,0.869,856,0.689,858,0.756,860,1.928,862,1.472,864,0.45,875,0.373,878,0.489,884,1.547,885,1.674,886,0.483,891,3.526,894,0.411,895,0.328,896,2.318,898,0.801,901,2.488,903,3.557,904,3.113,905,0.919,906,1.856,907,1.117,914,0.935,915,1.628,918,0.291,919,2.818,920,1.367,926,0.703,940,0.328,945,0.526,947,0.605,961,0.659,962,0.356,963,0.328,977,1.168,978,5.447,990,0.391,993,0.261,1006,0.571,1008,0.526,1011,0.459,1013,0.459,1014,0.571,1015,0.328,1018,1.01,1022,0.459,1023,0.76,1033,0.411,1034,0.489,1035,1.471,1036,0.844,1042,0.723,1043,0.459,1046,1.197,1050,3.022,1053,0.919,1058,0.315,1059,1.453,1060,0.78,1062,1.571,1066,1.119,1069,1.002,1086,2.155,1087,1.394,1091,1.105,1092,2.421,1093,0.489,1094,1.112,1098,0.303,1101,1.708,1104,0.628,1105,2.408,1107,0.731,1108,0.356,1110,0.844,1112,0.801,1115,1.571,1116,0.526,1117,0.829,1119,1.811,1128,0.434,1134,2.034,1137,0.315,1145,0.95,1146,1.355,1147,1.371,1162,0.497,1174,0.328,1176,0.724,1180,0.271,1183,1.059,1187,1.255,1188,0.341,1189,1.75,1194,0.466,1196,1.037,1201,2.318,1203,0.571,1208,0.849,1211,2.724,1212,1.845,1213,0.724,1234,0.811,1237,0.582,1244,0.698,1250,0.434,1251,0.328,1253,0.905,1257,0.632,1258,1.371,1259,1.829,1260,1.81,1261,0.605,1262,2.854,1271,1.184,1273,2.006,1279,0.935,1285,0.78,1286,1.571,1288,0.271,1289,1.144,1290,1.073,1300,0.459,1305,1.168,1310,1.833,1316,0.886,1317,0.76,1323,0.571,1325,0.291,1334,0.489,1336,0.411,1337,0.76,1344,3.022,1348,0.724,1350,0.801,1351,0.373,1353,0.849,1354,1.75,1362,0.775,1363,1.524,1364,2.415,1366,1.542,1369,2.122,1370,0.571,1372,0.751,1373,0.76,1374,0.571,1376,0.888,1377,0.751,1378,0.435,1379,0.483,1382,0.734,1383,0.797,1384,0.723,1385,0.722,1386,0.866,1395,1.344,1396,0.869,1397,1.314,1405,0.76,1426,2.593,1428,0.95,1429,1.749,1433,0.729,1436,0.81,1440,0.605,1444,0.814,1445,0.897,1446,0.632,1448,0.908,1449,0.993,1450,0.968,1451,0.874,1452,2.563,1456,1.404,1457,0.5,1459,1.176,1460,1.404,1461,0.967,1462,0.411,1464,0.967,1466,1.032,1467,1.067,1468,0.967,1469,1.177,1472,1.183,1475,1.074,1478,1.165,1483,1.257,1485,1.204,1488,1.165,1489,1.119,1492,0.966,1493,1.013,1494,0.801,1498,0.706,1499,0.567,1501,0.567,1502,0.567,1504,0.731,1505,1.71,1507,1.664,1508,0.571,1509,0.628,1510,0.628,1511,0.628,1512,0.673,1513,1.33,1514,0.631,1515,0.373,1516,1.941,1517,2.782,1518,2.49,1519,2.742,1524,1.526,1531,0.966,1534,0.86,1539,1.055,1543,0.373,1544,2.249,1545,1.255,1548,3.821,1552,4.746,1580,0.571,1592,1.008,1595,0.972,1596,1.547,1598,1.481,1609,0.489,1614,1.055,1621,0.849,1634,1.475,1642,2.817,1646,0.632,1652,0.315,1656,3.454,1659,2.484,1662,1.599,1663,3.003,1664,2.663,1666,0.373,1673,0.723,1674,0.526,1680,1.203,1681,0.356,1684,1.558,1689,1.909,1693,0.673,1694,2.672,1695,1.059,1712,3.127,1713,0.972,1714,3.713,1727,1.01,1760,0.839,1761,1.184,1767,0.972,1770,0.489,1833,0.459,1835,0.526,1842,0.571,1843,0.935,1853,1.226,1861,3.01,1872,0.571,1885,1.972,1894,0.271,1901,0.571,1908,1.833,1910,0.632,1911,0.905,1913,1.342,1914,2.335,1919,0.459,1927,0.659,1930,1.355,1943,0.592,1946,0.206,1950,0.489,1951,0.434,1955,0.632,1958,0.459,1962,2.204,1966,0.328,1967,0.341,2032,0.698,2033,0.724,2037,0.698,2039,0.724,2040,0.724,2042,0.724,2044,0.724,2045,0.698,2046,0.724,2047,0.724,2050,0.751,2051,1.057,2052,0.78,2056,0.811,2057,0.811,2058,0.811,2060,0.811,2061,1.472,2062,0.811,2064,1.097,2067,1.057,2071,0.582,2072,0.582,2074,0.582,2077,0.582,2078,0.605,2079,0.605,2081,0.88,2084,0.341,2085,0.631,2086,0.341,2087,0.341,2088,0.356,2092,0.356,2093,0.356,2094,0.341,2096,0.356,2098,1.735,2099,0.341,2100,0.356,2101,0.373,2102,0.373,2104,0.373,2106,0.373,2107,0.373,2108,0.373,2110,0.373,2112,0.373,2114,0.373,2116,0.373,2117,0.373,2129,1.688,2134,0.723,2156,1.342,2158,0.972,2168,0.411,2171,0.328,2172,0.025,2174,3.349,2175,1.993,2176,3,2177,0.632,2179,2.979,2189,2.717,2202,0.571,2212,4.016,2230,0.356,2255,2.679,2257,0.632,2261,1.339,2279,0.76,2283,2.959,2298,1.184,2305,1.059,2306,1.392,2311,2.964,2322,1.645,2325,3.27,2336,3.451,2357,0.411,2358,0.632,2359,0.571,2360,2.484,2397,2.237,2400,1.055,2402,0.632,2404,0.632,2405,1.628,2406,2.028,2407,1.628,2409,4.423,2412,1.628,2413,1.628,2414,1.628,2424,1.392,2425,0.849,2426,0.88,2431,0.935,2432,0.341,2438,1.296,2457,1.73,2471,1.909,2472,1.184,2473,4.029,2474,0.434,2475,0.526,2487,0.411,2513,0.961,2518,1.233,2539,1.843,2540,0.466,2541,0.571,2544,1.665,2547,0.972,2551,0.459,2570,0.632,2572,1.571,2576,0.631,2627,0.489,2655,0.391,2660,0.531,2665,2.688,2668,1.355,2676,0.972,2682,0.689,2688,1.059,2723,2.204,2731,2.466,2735,0.919,2740,0.961,2750,0.919,2751,0.526,2764,0.961,2768,1.197,2777,1.355,2787,0.411,2802,0.571,2806,0.519,2823,0.459,2833,2.005,2846,0.489,2849,1.591,2856,0.76,2861,0.571,2865,1.168,2871,1.184,2876,2.466,2878,1.355,2889,2.028,2900,2.661,2934,0.489,2942,0.972,2948,1.055,2949,1.262,2973,0.901,2975,0.411,2979,0.689,2983,0.723,2985,1.571,2987,0.905,2990,0.632,2991,2.15,2992,2.114,2993,0.459,2999,0.434,3001,0.801,3010,0.972,3022,0.489,3024,0.901,3030,1.843,3034,0.905,3051,0.849,3052,0.526,3064,1.475,3069,0.607,3086,0.631,3137,1.117,3139,0.411,3166,0.972,3171,0.489,3192,0.905,3193,0.801,3254,0.905,3269,1.059,3270,0.411,3278,0.489,3319,3.653,3341,2.276,3350,0.972,3370,1.688,3372,1.571,3389,1.168,3390,1.055,3392,1.895,3393,1.008,3398,0.489,3404,3.895,3449,0.723,3456,0.632,3465,0.972,3474,0.434,3475,0.373,3479,0.356,3489,0.459,3509,1.571,3511,1.144,3517,3.104,3526,1.097,3556,0.632,3576,0.849,3578,1.355,3588,1.688,3589,0.632,3590,0.434,3611,0.526,3623,2.237,3624,1.392,3632,1.632,3653,2.034,3655,0.459,3679,3.451,3681,0.571,3692,0.526,3718,1.833,3762,0.373,3775,0.411,3803,2.517,3807,0.571,3808,1.096,3810,0.632,3813,0.571,3824,0.88,3871,0.489,3882,1.055,3892,2.034,3909,0.571,3963,1.168,4016,1.184,4061,1.355,4062,0.972,4065,2.335,4066,1.168,4067,2.679,4068,2.083,4069,0.489,4070,2.083,4071,0.489,4072,1.688,4084,4.116,4085,1.472,4088,0.571,4090,0.571,4092,0.571,4094,1.055,4095,1.833,4098,0.571,4102,1.688,4113,1.355,4124,1.628,4144,0.434,4147,0.571,4161,0.632,4175,0.526,4176,0.801,4184,1.117,4191,0.632,4194,1.472,4228,2.254,4276,0.526,4294,1.628,4340,0.972,4341,0.76,4342,0.723,4343,0.972,4353,1.168,4354,2.777,4356,0.632,4367,1.472,4392,0.632,4398,3.317,4408,0.571,4410,3.378,4419,2.028,4420,0.526,4422,0.459,4423,0.972,4427,0.373,4449,1.008,4466,0.905,4469,1.845,4471,0.76,4497,0.559,4501,0.489,4504,1.059,4506,0.373,4508,0.434,4512,0.391,4516,0.571,4532,2.028,4539,0.76,4549,1.571,4595,4.923,4610,1.472,4611,0.459,4612,2.155,4617,0.972,4618,0.972,4653,0.723,4761,2.688,4800,0.972,4810,0.315,4821,1.71,4847,0.315,4877,0.391,4894,0.411,4897,0.571,4898,0.905,4910,1.055,4911,0.571,4915,0.489,4939,0.632,4942,1.097,4966,2.089,4980,0.391,5001,0.632,5004,3.227,5006,1.673,5008,1.262,5009,0.526,5010,1.599,5012,1.197,5016,0.571,5027,2.028,5032,0.526,5070,1.812,5078,1.472,5090,0.489,5095,0.489,5097,0.972,5104,0.571,5108,0.281,5115,0.489,5118,0.489,5124,0.373,5126,0.434,5131,1.628,5132,0.724,5133,1.185,5134,1.184,5135,0.724,5136,0.724,5137,0.632,5138,1.355,5139,2.378,5140,0.972,5141,1.262,5142,1.055,5143,1.628,5144,1.628,5145,1.628,5146,2.028,5147,1.866,5148,1.628,5149,0.724,5150,2.083,5151,2.083,5152,0.724,5153,0.724,5154,2.324,5155,1.168,5156,1.055,5157,1.168,5158,2.237,5159,1.168,5160,3.208,5161,1.168,5162,1.168,5163,1.168,5164,1.168,5165,0.632,5166,2.688,5167,0.632,5168,2.028,5169,1.055,5170,1.055,5171,1.055,5172,0.632,5173,1.168,5174,1.168,5175,1.168,5176,1.168,5177,1.168,5178,1.168,5179,1.168,5180,0.632,5181,0.632,5182,1.168,5183,0.632,5184,0.632,5185,1.472,5186,0.724,5187,0.724,5188,0.724,5189,0.724,5190,0.724,5191,0.724,5192,0.724,5193,0.724,5194,1.338,5195,0.724,5196,0.724,5197,0.724,5198,0.724,5199,0.724,5200,1.338,5201,0.724,5202,0.724,5203,0.724,5204,0.724,5205,0.632,5206,0.76,5207,0.571,5208,0.571,5209,1.75,5210,2.146,5211,2.409,5212,1.673,5213,1.673,5214,1.673,5215,0.632,5216,0.571,5217,0.571,5218,1.168,5219,0.632,5220,1.472,5221,1.168,5222,0.632,5223,2.76,5224,0.724,5225,0.632,5226,0.724,5227,0.411,5228,0.724,5229,0.724,5230,0.489,5231,0.632,5232,0.632,5233,1.055,5234,1.055,5235,0.632,5236,2.083,5237,0.724,5238,0.632,5239,0.724,5240,0.724,5241,0.391,5242,0.724,5243,0.724,5244,0.724,5245,0.724,5246,1.547,5247,0.724,5248,2.237,5249,0.724,5250,0.724,5251,0.724,5252,0.972,5253,0.724,5254,0.972,5255,0.724,5256,0.724,5257,0.724,5258,0.724,5259,0.972,5260,0.724,5261,0.724,5262,0.724,5263,0.724,5264,0.724,5265,1.338,5266,0.724,5267,0.459,5268,3.679,5269,1.472,5270,1.338,5271,1.472,5272,1.338,5273,1.055,5274,0.724,5275,0.724,5276,0.724,5277,2.028,5278,0.724,5279,6.171,5280,0.632,5281,0.632,5282,0.724,5283,2.324,5284,1.338,5285,1.628,5286,1.866,5287,0.724,5288,2.324,5289,1.168,5290,0.724,5291,0.724,5292,0.724,5293,0.632,5294,0.724,5295,0.724,5296,1.338,5297,3.934,5298,1.866,5299,1.338,5300,1.338,5301,0.724,5302,3.08,5303,2.237,5304,1.338,5305,0.724,5306,1.866,5307,0.724,5308,1.338,5309,0.724,5310,0.724,5311,1.338,5312,0.724,5313,1.866,5314,0.724,5315,1.338,5316,0.724,5317,1.338,5318,0.724,5319,2.324,5320,1.338,5321,0.724,5322,0.724,5323,0.724,5324,0.724,5325,0.724,5326,0.724,5327,1.338,5328,1.628,5329,0.724,5330,0.724,5331,0.724,5332,0.724,5333,0.724,5334,2.028,5335,5.386,5336,0.724,5337,0.724,5338,0.724,5339,0.724,5340,0.724,5341,0.724,5342,1.055,5343,0.724,5344,1.168,5345,2.324,5346,1.168,5347,1.866,5348,1.338,5349,2.324,5350,1.338,5351,2.725,5352,1.338,5353,0.724,5354,0.724,5355,0.724,5356,0.724,5357,0.724,5358,0.724,5359,0.724,5360,0.724,5361,0.724,5362,0.724,5363,1.338,5364,0.632,5365,0.724,5366,0.724,5367,0.724,5368,0.724,5369,0.724,5370,0.724,5371,0.724,5372,0.724,5373,0.724,5374,0.724,5375,0.724,5376,0.724,5377,0.724,5378,0.724,5379,0.724,5380,0.724,5381,0.724,5382,0.724,5383,0.724,5384,1.843,5385,0.724,5386,0.724,5387,1.338,5388,1.168,5389,0.724,5390,0.724,5391,0.724,5392,0.724,5393,1.338,5394,2.324,5395,1.168,5396,0.905,5397,0.724,5398,0.724,5399,0.724,5400,0.571,5401,0.724,5402,0.724,5403,0.724,5404,0.724,5405,0.724,5406,0.632,5407,0.632,5408,1.168,5409,1.472,5410,0.632,5411,1.472,5412,0.724,5413,1.168,5414,1.168,5415,1.168,5416,0.632,5417,0.632,5418,0.632,5419,0.571,5420,2.964,5421,0.632,5422,2.378,5423,0.632,5424,0.632,5425,0.632,5426,0.632,5427,2.356,5428,0.724,5429,2.43,5430,2.73,5431,1.319,5432,0.571,5433,0.724,5434,0.724,5435,0.724,5436,0.724,5437,0.724,5438,0.724,5439,1.338,5440,0.724,5441,1.168,5442,0.724,5443,0.724,5444,0.724,5445,0.724,5446,1.055,5447,0.724,5448,2.335,5449,1.78,5450,1.184,5451,1.688,5452,1.168,5453,1.168,5454,1.168,5455,1.168,5456,1.168,5457,1.168,5458,0.724,5459,0.356,5460,0.724,5461,0.724,5462,0.724,5463,1.472,5464,0.571,5465,1.055,5466,1.338,5467,1.338,5468,0.724,5469,0.434,5470,1.928,5471,0.724,5472,1.184,5473,1.168,5474,0.724,5475,0.724,5476,1.866,5477,1.338,5478,0.724,5479,0.724,5480,0.724,5481,0.724,5482,1.688,5483,0.724,5484,0.724,5485,0.724,5486,0.724,5487,0.724,5488,0.724,5489,0.724,5490,0.724,5491,0.724,5492,0.724,5493,0.724,5494,0.724,5495,0.724,5496,1.055,5497,1.928,5498,0.724,5499,0.724,5500,0.724,5501,1.355,5502,1.338,5503,1.055,5504,0.724,5505,2.857,5506,0.632,5507,0.571,5508,0.632,5509,0.632,5510,0.632,5511,0.632,5512,0.632,5513,0.632,5514,0.724,5515,1.055,5516,0.724,5517,2.43,5518,2.688,5519,1.168,5520,1.008,5521,0.723,5522,0.571,5523,0.724,5524,1.338,5525,0.571,5526,0.571,5527,0.571,5528,0.571,5529,0.571,5530,0.571,5531,0.571,5532,0.571,5533,0.571,5534,0.571,5535,0.571,5536,0.659,5537,0.571,5538,0.632,5539,0.724,5540,0.571,5541,1.866,5542,0.724,5543,2.028,5544,1.866,5545,0.724,5546,1.338,5547,2.378,5548,0.571,5549,0.724,5550,0.724,5551,0.632,5552,0.526,5553,0.526,5554,0.724,5555,1.472,5556,0.724,5557,0.489,5558,0.489,5559,1.338,5560,0.724,5561,0.724,5562,1.338,5563,0.724,5564,0.724,5565,1.338,5566,0.724,5567,0.724,5568,0.724,5569,0.724,5570,0.724,5571,0.972,5572,0.571,5573,0.632,5574,0.724,5575,0.724,5576,0.905,5577,0.434,5578,0.724,5579,0.905,5580,0.724,5581,0.724,5582,0.724,5583,0.632,5584,0.724,5585,0.724,5586,0.724,5587,0.724,5588,0.724,5589,1.338,5590,1.338,5591,0.632,5592,0.724,5593,0.632,5594,1.845,5595,0.724,5596,0.724,5597,0.724,5598,0.571,5599,0.632,5600,0.724,5601,0.724,5602,0.724,5603,0.724,5604,0.356,5605,0.724,5606,0.632,5607,1.866,5608,0.724,5609,0.632,5610,0.459,5611,0.724,5612,0.724,5613,1.628,5614,0.724,5615,0.632,5616,0.724,5617,2.661,5618,1.688,5619,0.724,5620,0.724,5621,0.724,5622,0.724,5623,0.724,5624,1.338,5625,1.338,5626,0.724,5627,0.724,5628,0.526,5629,1.338,5630,0.724,5631,0.724,5632,0.724,5633,1.833,5634,2.028,5635,1.338,5636,0.724,5637,4.165,5638,2.324,5639,0.724,5640,3.679,5641,3.679,5642,3.679,5643,2.324,5644,2.94,5645,3.454,5646,0.434,5647,1.055,5648,2.43,5649,1.168,5650,1.319,5651,1.168,5652,0.76,5653,0.972,5654,1.338,5655,1.338,5656,1.338,5657,1.338,5658,1.338,5659,1.628,5660,0.724,5661,0.724,5662,0.724,5663,1.055,5664,0.724,5665,0.724,5666,0.724,5667,0.724,5668,0.724,5669,1.055,5670,0.632,5671,0.724,5672,0.571,5673,0.724,5674,0.724,5675,0.724,5676,0.724,5677,0.724,5678,0.724,5679,1.055,5680,1.168,5681,0.632,5682,1.055,5683,1.055,5684,1.055,5685,1.055,5686,1.055,5687,0.632,5688,0.724,5689,0.632,5690,0.632,5691,0.632,5692,0.632,5693,0.724,5694,2.661,5695,1.338,5696,0.632,5697,0.724,5698,0.632,5699,0.724,5700,0.972,5701,0.724,5702,1.338,5703,1.338,5704,0.724,5705,0.724,5706,0.724,5707,1.628,5708,0.632,5709,0.632,5710,0.632,5711,0.632,5712,0.632,5713,0.632,5714,0.632,5715,0.632,5716,0.632,5717,0.632,5718,0.632,5719,0.632,5720,0.632,5721,0.632,5722,0.632,5723,0.632,5724,0.571,5725,0.632,5726,0.632,5727,0.632,5728,0.434,5729,0.632,5730,0.632,5731,0.632,5732,0.632,5733,0.632,5734,0.632,5735,0.632,5736,0.632,5737,0.632,5738,0.632,5739,0.632,5740,0.632,5741,0.632,5742,0.632,5743,0.632,5744,0.632,5745,0.632,5746,0.632,5747,0.632,5748,0.632,5749,0.632,5750,0.632,5751,0.632,5752,0.632,5753,0.632,5754,0.632,5755,0.632,5756,0.632,5757,0.632,5758,0.632,5759,0.632,5760,0.632,5761,0.632,5762,0.632,5763,0.632,5764,0.632,5765,0.632,5766,0.632,5767,0.632,5768,0.632,5769,0.632,5770,0.632,5771,0.632,5772,0.724,5773,0.632,5774,1.168,5775,0.724,5776,0.724,5777,1.168,5778,0.724,5779,0.724,5780,1.338,5781,0.724,5782,0.724,5783,0.724,5784,0.972,5785,0.724,5786,1.055,5787,0.724,5788,0.724,5789,0.724,5790,0.724,5791,0.724,5792,0.724,5793,0.724,5794,0.724,5795,0.724,5796,0.724,5797,0.724,5798,0.724,5799,0.724,5800,0.724,5801,0.724,5802,0.724,5803,0.724,5804,0.724,5805,0.724,5806,1.055,5807,1.168,5808,1.055,5809,0.632,5810,1.055,5811,0.632,5812,0.632,5813,0.632,5814,0.632,5815,1.338,5816,0.632,5817,0.632,5818,0.632,5819,1.338,5820,1.117,5821,2.725,5822,0.526,5823,0.724,5824,0.724,5825,0.724,5826,0.724,5827,0.724,5828,0.724,5829,0.724,5830,0.724,5831,0.724,5832,0.724,5833,0.724,5834,0.724,5835,0.724,5836,0.724,5837,0.724,5838,0.724,5839,0.724,5840,0.724,5841,0.724,5842,0.724,5843,0.724,5844,0.724,5845,0.724,5846,1.338,5847,0.632,5848,0.632,5849,1.055,5850,0.724,5851,1.338,5852,0.724,5853,0.724,5854,0.724,5855,0.724,5856,1.184,5857,0.724,5858,0.724,5859,0.724,5860,0.724,5861,0.724,5862,0.724,5863,0.571,5864,0.724,5865,0.724,5866,0.724,5867,0.724,5868,0.724,5869,0.724,5870,0.724,5871,0.724,5872,0.724,5873,0.724,5874,1.338,5875,0.632,5876,0.724,5877,0.724,5878,0.724,5879,1.472,5880,0.632,5881,0.632,5882,0.632,5883,0.632,5884,1.168,5885,1.168,5886,0.632,5887,1.833,5888,2.028,5889,0.632,5890,0.632,5891,2.028,5892,1.168,5893,0.632,5894,1.168,5895,0.632,5896,0.632,5897,1.168,5898,0.632,5899,0.632,5900,0.632,5901,0.632,5902,0.632,5903,0.632,5904,0.632,5905,0.632,5906,0.632,5907,0.632,5908,1.168,5909,0.632,5910,0.632,5911,0.632,5912,0.724,5913,1.866,5914,3.454,5915,1.338,5916,0.724,5917,0.724,5918,1.168,5919,1.168,5920,1.628,5921,1.168,5922,1.168,5923,1.168,5924,0.632,5925,0.632,5926,0.632,5927,0.632,5928,0.571,5929,0.632,5930,0.571,5931,0.632,5932,0.632,5933,0.632,5934,0.632,5935,0.632,5936,0.632,5937,0.632,5938,0.632,5939,0.972,5940,1.168,5941,0.632,5942,0.632,5943,0.571,5944,1.338,5945,0.724,5946,0.526,5947,0.459,5948,0.724,5949,0.724,5950,0.571,5951,0.724,5952,0.459,5953,2.365,5954,2.324,5955,1.866,5956,3.419,5957,3.419,5958,4.375,5959,0.724,5960,1.338,5961,1.338,5962,1.168,5963,2.378,5964,0.724,5965,1.338,5966,0.724,5967,0.724,5968,1.338,5969,1.338,5970,0.724,5971,1.338,5972,0.724,5973,0.724,5974,0.724,5975,1.866,5976,0.724,5977,0.724,5978,0.724,5979,0.724,5980,0.724,5981,0.724,5982,0.724,5983,0.724,5984,0.724,5985,0.724,5986,0.724,5987,1.338,5988,0.724,5989,0.724,5990,0.724,5991,0.724,5992,0.724,5993,0.724,5994,0.724,5995,0.724,5996,4.249,5997,1.866,5998,1.866,5999,5.072,6000,1.628,6001,0.724,6002,0.724,6003,0.724,6004,2.324,6005,2.324,6006,2.688,6007,0.724,6008,2.688,6009,0.724,6010,0.489,6011,2.028,6012,3.211,6013,0.724,6014,2.028,6015,0.724,6016,0.724,6017,0.724,6018,0.724,6019,1.168,6020,0.724,6021,0.632,6022,0.724,6023,3.286,6024,0.724,6025,2.679,6026,0.724,6027,1.055,6028,0.724,6029,1.168,6030,0.724,6031,0.724,6032,0.724,6033,0.724,6034,0.724,6035,0.724,6036,0.724,6037,0.724,6038,0.724,6039,0.724,6040,2.527,6041,1.338,6042,1.338,6043,1.338,6044,1.338,6045,0.724,6046,1.338,6047,0.724,6048,2.43,6049,0.724,6050,0.724,6051,0.724,6052,0.724,6053,0.724,6054,0.724,6055,0.632,6056,0.724,6057,0.724,6058,0.724,6059,1.168,6060,1.338,6061,1.866,6062,0.724,6063,1.338,6064,1.338,6065,0.905,6066,0.972,6067,0.724,6068,1.055,6069,0.724,6070,1.338,6071,1.338,6072,1.338,6073,0.724,6074,0.724,6075,0.571,6076,0.459,6077,1.338,6078,0.724,6079,0.724,6080,0.724,6081,1.338,6082,1.628,6083,0.724,6084,0.724,6085,1.632,6086,2.028,6087,0.632,6088,0.849,6089,1.168,6090,1.392,6091,0.571,6092,0.526,6093,0.632,6094,0.526,6095,0.571,6096,0.571,6097,0.632,6098,1.168,6099,1.168,6100,1.168,6101,1.168,6102,1.168,6103,1.168,6104,1.168,6105,1.168,6106,0.571,6107,0.632,6108,0.632,6109,2.028,6110,1.168,6111,1.168,6112,0.632,6113,1.168,6114,0.724,6115,1.168,6116,1.055,6117,1.168,6118,2.378,6119,0.632,6120,2.378,6121,0.632,6122,1.168,6123,1.472,6124,1.255,6125,0.632,6126,1.628,6127,0.571,6128,2.661,6129,3.513,6130,1.628,6131,1.833,6132,1.338,6133,0.724,6134,0.724,6135,0.724,6136,1.866,6137,0.724,6138,0.724,6139,0.724,6140,0.724,6141,0.724,6142,0.724,6143,0.724,6144,0.724,6145,0.724,6146,1.866,6147,2.324,6148,2.324,6149,2.324,6150,2.324,6151,0.724,6152,0.632,6153,0.724,6154,0.724,6155,2.725,6156,2.964,6157,1.866,6158,1.866,6159,3.679,6160,3.934,6161,1.168,6162,0.724,6163,2.688,6164,1.628,6165,0.724,6166,1.628,6167,0.724,6168,0.632,6169,0.571,6170,0.571,6171,0.571,6172,0.571,6173,0.526,6174,0.526,6175,0.724,6176,0.724,6177,0.724,6178,0.724,6179,0.724,6180,0.724,6181,0.632,6182,0.724,6183,0.724,6184,0.724,6185,0.571,6186,0.724,6187,0.632,6188,0.724,6189,0.724,6190,0.724,6191,0.632,6192,0.571,6193,0.632,6194,2.028,6195,0.724,6196,1.628,6197,0.724,6198,0.724,6199,0.724,6200,0.632,6201,0.724,6202,0.724,6203,0.724,6204,0.571,6205,1.688,6206,0.724,6207,2.672,6208,0.724,6209,1.338,6210,0.724,6211,2.324,6212,0.724,6213,1.628,6214,1.866,6215,1.866,6216,1.866,6217,1.866,6218,1.338,6219,1.472,6220,2.378,6221,0.724,6222,0.724,6223,0.724,6224,0.724,6225,0.571,6226,1.338,6227,1.338,6228,0.724,6229,0.724,6230,0.724,6231,0.724,6232,1.866,6233,1.866,6234,1.338,6235,1.338,6236,0.724,6237,0.724,6238,0.724,6239,0.724,6240,1.338,6241,1.338,6242,1.866,6243,1.866,6244,0.724,6245,0.724,6246,0.724,6247,0.724,6248,0.724,6249,0.724,6250,0.724,6251,0.724,6252,0.724,6253,0.724,6254,0.724,6255,0.724,6256,0.724,6257,0.724,6258,0.724,6259,0.724,6260,1.338,6261,1.338,6262,1.338,6263,1.338,6264,1.338,6265,1.338,6266,1.338,6267,1.338,6268,1.338,6269,1.338,6270,0.724,6271,0.724,6272,0.724,6273,0.632,6274,1.338,6275,0.724,6276,0.724,6277,0.724,6278,0.571,6279,1.472,6280,1.338,6281,1.338,6282,1.338,6283,1.338,6284,0.724,6285,0.724,6286,2.725,6287,0.724,6288,1.168,6289,0.724,6290,0.571,6291,0.724,6292,0.724,6293,0.724,6294,0.571,6295,0.526,6296,0.632,6297,1.833,6298,1.833,6299,1.472,6300,1.472,6301,1.472,6302,1.472,6303,1.055,6304,1.472,6305,1.472,6306,1.472,6307,1.628,6308,1.472,6309,0.571,6310,0.571,6311,0.571,6312,1.472,6313,0.571,6314,0.571,6315,0.571,6316,1.472,6317,0.571,6318,0.571,6319,0.571,6320,3.451,6321,1.472,6322,1.055,6323,1.055,6324,1.055,6325,1.338,6326,1.866,6327,1.338,6328,1.866,6329,1.338,6330,1.866,6331,1.338,6332,1.338,6333,0.724,6334,1.338,6335,0.724,6336,1.338,6337,0.724,6338,1.338,6339,0.724,6340,1.338,6341,1.338,6342,1.338,6343,1.338,6344,1.338,6345,0.724,6346,1.338,6347,2.028,6348,2.378,6349,0.632,6350,1.628,6351,2.378,6352,3.211,6353,1.628,6354,0.632,6355,0.724,6356,2.964,6357,1.168,6358,1.168,6359,1.168,6360,0.724,6361,1.866,6362,0.632,6363,0.724,6364,0.724,6365,1.338,6366,2.725,6367,0.724,6368,1.338,6369,0.724,6370,0.724,6371,0.724,6372,2.725,6373,1.866,6374,1.866,6375,1.866,6376,1.866,6377,1.866,6378,1.866,6379,0.724,6380,0.724,6381,2.902,6382,0.724,6383,0.724,6384,0.724,6385,0.724,6386,1.338,6387,1.338,6388,1.338,6389,2.324,6390,2.324,6391,2.028,6392,1.338,6393,1.338,6394,0.724,6395,0.724,6396,0.724,6397,0.724,6398,0.724,6399,0.724,6400,0.724,6401,0.724,6402,0.724,6403,0.724,6404,0.724,6405,1.866,6406,0.724,6407,0.724,6408,0.724,6409,0.724,6410,0.632,6411,1.866,6412,0.724,6413,0.724,6414,0.724,6415,0.724,6416,0.724,6417,0.724,6418,0.724,6419,0.724,6420,0.724,6421,0.724,6422,0.724,6423,1.338,6424,0.571,6425,0.724,6426,0.724,6427,0.724,6428,0.724,6429,0.724,6430,1.866,6431,0.724,6432,0.724,6433,1.628,6434,1.866,6435,0.724,6436,0.724,6437,0.724,6438,1.866,6439,0.724,6440,0.724,6441,0.724,6442,1.338,6443,0.724,6444,3.08,6445,0.724,6446,0.724,6447,0.724,6448,1.338,6449,0.724,6450,0.724,6451,0.724,6452,0.724,6453,1.338,6454,0.724,6455,0.724,6456,0.724,6457,0.724,6458,1.338,6459,1.338,6460,1.338,6461,2.324,6462,1.338,6463,1.338,6464,1.338,6465,1.338,6466,1.338,6467,1.338,6468,1.338,6469,1.338,6470,0.724,6471,0.724,6472,0.724,6473,0.724,6474,0.724,6475,0.724,6476,0.724,6477,0.724,6478,1.338,6479,1.338,6480,1.338,6481,3.08,6482,3.08,6483,1.338,6484,0.724,6485,1.866,6486,0.724,6487,0.724,6488,0.724,6489,0.724,6490,0.724,6491,0.724,6492,1.338,6493,0.724,6494,0.724,6495,1.168,6496,1.338,6497,1.338,6498,1.338,6499,0.972,6500,0.724,6501,0.632,6502,0.724,6503,0.724,6504,0.724,6505,0.724,6506,1.055,6507,0.724,6508,0.724,6509,0.724,6510,0.724,6511,2.466,6512,1.338,6513,0.724,6514,0.724,6515,1.338,6516,1.338,6517,0.724,6518,0.724,6519,0.632,6520,1.866,6521,1.338,6522,1.866,6523,1.866,6524,1.338,6525,0.724,6526,0.489,6527,0.526,6528,0.724,6529,0.724,6530,0.724,6531,0.489,6532,0.571,6533,0.459,6534,0.724,6535,0.632,6536,1.472,6537,0.724,6538,1.338,6539,0.724,6540,0.724,6541,0.724,6542,0.724,6543,0.724,6544,0.724,6545,1.168,6546,1.338,6547,1.628,6548,0.724,6549,2.324,6550,0.724,6551,0.526,6552,0.724,6553,0.724,6554,0.724,6555,0.724,6556,0.724,6557,0.724,6558,0.724,6559,1.338,6560,0.724,6561,0.724,6562,0.724,6563,0.724,6564,0.724,6565,0.724,6566,0.724,6567,0.724,6568,1.168,6569,1.338,6570,0.724,6571,0.724,6572,0.724,6573,0.724,6574,0.724,6575,0.724,6576,0.724,6577,0.724,6578,0.724,6579,0.724,6580,0.724,6581,2.324,6582,1.338,6583,1.338,6584,0.724,6585,0.724,6586,1.866,6587,2.324,6588,2.324,6589,2.324,6590,0.724,6591,0.724,6592,0.724,6593,0.724,6594,0.724,6595,0.724,6596,0.724,6597,0.724,6598,0.724,6599,0.724,6600,0.724,6601,0.724,6602,3.679,6603,0.724,6604,0.724,6605,0.724,6606,0.724,6607,0.724,6608,0.724,6609,0.724,6610,0.724,6611,0.724,6612,0.724,6613,0.724,6614,0.724,6615,0.724,6616,0.724,6617,0.724,6618,0.724,6619,0.724,6620,0.724,6621,0.724,6622,0.632,6623,0.724,6624,0.724,6625,1.338,6626,0.724,6627,0.489,6628,0.724,6629,0.724,6630,0.724,6631,0.724,6632,0.724,6633,0.724,6634,0.724,6635,0.724,6636,0.724,6637,0.724,6638,1.168,6639,0.724,6640,0.724,6641,0.724,6642,0.724,6643,0.724,6644,0.724,6645,1.338,6646,0.724,6647,0.724,6648,0.632,6649,0.724,6650,0.724,6651,0.724,6652,0.724,6653,0.724,6654,0.724,6655,0.571,6656,0.724,6657,1.055,6658,0.632,6659,0.724,6660,0.724,6661,0.632,6662,0.724,6663,0.724,6664,1.866,6665,1.168,6666,0.434,6667,0.724,6668,0.724,6669,3.08,6670,1.338,6671,3.08,6672,1.168,6673,1.866,6674,0.724,6675,0.724,6676,0.724,6677,0.724,6678,0.724,6679,0.724,6680,0.724,6681,0.724,6682,1.338,6683,1.866,6684,0.724,6685,0.724,6686,0.724,6687,1.338,6688,1.338,6689,0.724,6690,0.724,6691,1.338,6692,1.338,6693,1.338,6694,0.724,6695,0.724,6696,1.628,6697,2.378,6698,0.724,6699,0.724,6700,0.724,6701,0.724,6702,0.724,6703,0.724,6704,0.724,6705,0.724,6706,0.724,6707,0.724,6708,0.724,6709,0.724,6710,0.373,6711,0.724,6712,1.168,6713,0.972,6714,1.866,6715,0.724,6716,0.571,6717,0.724,6718,1.338,6719,0.724,6720,1.628,6721,0.724,6722,0.724,6723,0.724,6724,0.632,6725,0.724,6726,0.632,6727,0.724,6728,0.724,6729,0.724,6730,0.724,6731,0.724,6732,1.866,6733,0.724,6734,0.724,6735,1.866,6736,0.724,6737,0.724,6738,0.724,6739,0.724,6740,0.632,6741,0.724,6742,0.724,6743,0.724,6744,0.724,6745,1.338,6746,0.724,6747,0.724,6748,0.724,6749,0.724,6750,0.724,6751,1.338,6752,1.338,6753,0.724,6754,0.724,6755,0.724,6756,0.724,6757,1.338,6758,0.724,6759,0.724,6760,0.724,6761,0.724,6762,0.724,6763,0.724,6764,0.724,6765,0.724,6766,0.724,6767,0.724,6768,0.724,6769,0.724,6770,0.724,6771,0.724,6772,0.724,6773,0.571,6774,1.338,6775,0.724,6776,1.338,6777,0.724,6778,0.724,6779,0.724,6780,2.43,6781,0.972,6782,1.338,6783,1.866,6784,0.724,6785,0.632,6786,1.866,6787,0.972,6788,1.866,6789,0.724,6790,0.724,6791,0.724,6792,2.725,6793,2.725,6794,0.724,6795,1.338,6796,0.724,6797,1.866,6798,0.724,6799,0.724,6800,0.724,6801,1.338,6802,0.724,6803,0.724,6804,0.724,6805,0.724,6806,0.571,6807,0.571,6808,0.724,6809,0.724,6810,0.632,6811,0.724,6812,0.724,6813,0.724,6814,0.724,6815,0.724,6816,0.724,6817,1.338,6818,1.338,6819,0.724,6820,1.338,6821,1.338,6822,0.724,6823,0.724,6824,0.724,6825,0.724,6826,0.724,6827,0.724,6828,0.724,6829,1.866,6830,0.632,6831,0.571,6832,0.632,6833,0.724,6834,0.724,6835,0.724,6836,0.724,6837,0.724,6838,1.338,6839,1.338,6840,1.338,6841,1.168,6842,1.168,6843,1.338,6844,1.338,6845,1.168,6846,1.168,6847,0.724,6848,0.571,6849,0.724,6850,1.055,6851,1.338,6852,0.632,6853,1.866,6854,1.628,6855,1.866,6856,0.724,6857,0.724,6858,0.724,6859,2.43,6860,2.324,6861,0.724,6862,0.724,6863,0.632,6864,0.724,6865,0.724,6866,0.724,6867,0.724,6868,0.724,6869,0.724,6870,2.028,6871,2.237,6872,1.845,6873,1.866,6874,2.688,6875,0.724,6876,2.028,6877,1.866,6878,3.08,6879,2.43,6880,0.724,6881,2.688,6882,1.338,6883,1.338,6884,1.866,6885,2.324,6886,1.338,6887,1.338,6888,1.338,6889,1.338,6890,1.338,6891,1.338,6892,1.338,6893,1.338,6894,1.338,6895,2.324,6896,2.324,6897,1.866,6898,0.724,6899,2.324,6900,2.324,6901,1.866,6902,0.724,6903,0.724,6904,0.724,6905,0.724,6906,0.724,6907,0.724,6908,1.338,6909,1.338,6910,1.338,6911,1.338,6912,1.338,6913,0.724,6914,1.338,6915,1.338,6916,1.338,6917,0.724,6918,3.679,6919,3.679,6920,3.08,6921,1.338,6922,1.628,6923,0.724,6924,1.338,6925,0.724,6926,0.724,6927,0.724,6928,0.724,6929,1.168,6930,0.724,6931,1.168,6932,0.724,6933,0.724,6934,0.724,6935,0.724,6936,0.724,6937,0.724,6938,0.724,6939,0.724,6940,0.724,6941,0.724,6942,0.724,6943,0.724,6944,0.724,6945,0.724,6946,0.724,6947,0.724,6948,0.724,6949,0.724,6950,0.724,6951,0.724,6952,0.724,6953,0.724,6954,0.571,6955,0.724,6956,0.632,6957,1.338,6958,0.724,6959,1.338,6960,0.724,6961,1.338,6962,0.724,6963,0.724,6964,0.724,6965,0.724,6966,1.168,6967,1.338,6968,0.724,6969,0.489,6970,1.168,6971,0.724,6972,0.724,6973,0.526,6974,0.724,6975,0.724,6976,0.526,6977,0.724,6978,0.632,6979,0.724,6980,0.724,6981,0.632,6982,0.724,6983,0.632,6984,0.724,6985,1.338,6986,1.338,6987,0.724,6988,1.338,6989,1.055,6990,0.724,6991,0.724,6992,0.724,6993,0.724,6994,4.097,6995,1.472,6996,0.632,6997,0.724,6998,1.338,6999,0.632,7000,0.724,7001,2.028,7002,1.338,7003,1.338,7004,0.724,7005,0.724,7006,1.338,7007,0.724,7008,1.338,7009,1.338,7010,3.679,7011,1.338,7012,1.338,7013,1.688,7014,1.866,7015,1.338,7016,1.338,7017,1.338,7018,1.338,7019,0.724,7020,1.338,7021,1.338,7022,1.866,7023,0.724,7024,0.724,7025,1.338,7026,1.338,7027,1.338,7028,0.724,7029,1.338,7030,3.08,7031,3.08,7032,3.08,7033,1.338,7034,1.338,7035,1.338,7036,1.338,7037,1.338,7038,0.632,7039,0.724,7040,0.724,7041,1.472,7042,1.262,7043,0.724,7044,0.724,7045,1.866,7046,0.724,7047,2.028,7048,0.724,7049,0.724,7050,0.724,7051,0.724,7052,0.632,7053,0.724,7054,0.724,7055,0.724,7056,0.724,7057,0.724,7058,1.866,7059,0.724,7060,0.724,7061,0.724,7062,4.097,7063,1.338,7064,0.724,7065,0.724,7066,2.378,7067,2.725,7068,0.724,7069,0.724,7070,0.724,7071,0.724,7072,0.632,7073,1.338,7074,1.338,7075,2.324,7076,1.055,7077,1.866,7078,0.724,7079,0.724,7080,0.724,7081,0.724,7082,0.724,7083,1.338,7084,0.724,7085,1.168,7086,0.724,7087,0.724,7088,0.724,7089,0.724,7090,0.724,7091,0.724,7092,1.866,7093,0.724,7094,0.724,7095,0.724,7096,0.724,7097,0.724,7098,0.724,7099,0.724,7100,0.724,7101,0.724,7102,0.724,7103,0.724,7104,0.724,7105,0.724,7106,0.724,7107,0.724,7108,0.724,7109,0.724,7110,0.724,7111,0.724,7112,0.724,7113,0.724,7114,0.526,7115,0.724,7116,0.724,7117,3.433,7118,0.632,7119,0.724,7120,0.632,7121,0.724,7122,0.571,7123,0.724,7124,0.571,7125,0.724,7126,0.526,7127,1.338,7128,0.724,7129,0.724,7130,0.632,7131,0.724,7132,0.724,7133,0.571,7134,1.338,7135,0.724,7136,0.724,7137,0.724,7138,1.628,7139,0.724,7140,0.724,7141,0.724,7142,2.43,7143,0.724,7144,1.168,7145,0.724,7146,1.338,7147,1.338,7148,0.76,7149,1.866,7150,0.571,7151,0.724,7152,0.724,7153,0.724,7154,0.632,7155,0.632,7156,0.724,7157,0.724,7158,0.724,7159,0.724,7160,0.526,7161,1.338,7162,1.866,7163,1.338,7164,1.866,7165,0.724,7166,0.724,7167,0.724,7168,0.571,7169,0.571,7170,0.526,7171,0.459,7172,0.724,7173,0.632,7174,0.724,7175,0.724,7176,0.724,7177,0.724,7178,0.724,7179,0.571,7180,0.724,7181,3.742,7182,0.724,7183,0.724,7184,1.866,7185,0.724,7186,1.475,7187,0.724,7188,1.866,7189,1.168,7190,1.628,7191,0.724,7192,0.459,7193,0.724,7194,1.866,7195,1.338,7196,0.724,7197,0.724,7198,1.338,7199,0.724,7200,0.632,7201,0.724,7202,0.724,7203,0.526,7204,1.338,7205,3.08,7206,1.866,7207,1.866,7208,0.724,7209,1.338,7210,0.724,7211,1.338,7212,0.724,7213,0.724,7214,1.338,7215,0.724,7216,0.724,7217,0.724,7218,0.571,7219,1.338,7220,0.724,7221,1.055,7222,0.632,7223,1.866,7224,0.724,7225,1.338,7226,0.724,7227,1.866,7228,0.724,7229,0.724,7230,0.724,7231,0.724,7232,0.724,7233,0.724,7234,0.632,7235,0.632,7236,0.724,7237,0.632,7238,0.724,7239,0.724,7240,1.338,7241,0.724,7242,1.338,7243,0.724,7244,1.338,7245,1.338,7246,0.724,7247,0.724,7248,0.632,7249,0.724,7250,0.724,7251,0.724,7252,0.724,7253,0.724,7254,0.724,7255,0.724,7256,0.724,7257,0.724,7258,0.724,7259,0.724,7260,1.338,7261,0.724]],["t/14",[7262,5.135]],["b/14",[31,1.987,35,0.349,36,1.435,44,2.565,47,1.791,62,2.836,66,1.492,67,0.348,115,1.314,116,1.674,117,2.216,124,0.12,160,1.053,170,1.183,175,2.39,176,2.537,177,0.825,187,1.279,206,2.241,303,1.748,316,1.101,317,1.217,362,1.857,372,1.419,460,2.959,468,1.619,473,0.059,474,0.052,483,1.019,484,1.055,488,2.216,489,0.912,491,5.903,500,0.346,501,1.027,504,6.412,507,2.302,511,2.132,514,1.09,518,1.57,521,1.262,531,2.491,552,2.973,557,3.056,574,0.704,582,0.602,603,1.067,604,0.984,605,3.126,606,0.65,610,2.948,617,0.807,622,0.855,625,0.886,654,2.448,655,4.403,677,0.737,689,1.054,699,3.126,710,0.886,724,1.918,759,1.791,767,1.235,769,0.855,780,1.734,785,2.059,791,2.023,798,2.73,801,2.491,835,0.825,842,3.126,849,1.674,864,1.853,899,2.973,920,2.959,926,1.13,1035,3,1059,2.597,1085,3.723,1092,2.631,1162,1.466,1172,5.722,1258,2.561,1260,1.918,1267,3.494,1337,4.356,1347,3.999,1354,2.836,1362,2.091,1363,2.363,1372,0.504,1374,1.053,1395,1.183,1397,1.902,1518,3.34,1519,2.393,1531,1.566,1596,4.173,1600,2.836,1611,4.343,1680,1.061,1684,2.059,1843,2.216,1894,2.537,1909,3.126,2061,4.343,2172,0.059,2179,2.73,2189,2.537,2307,2.851,2426,2.597,2518,2.491,2540,1.918,2665,1.853,2768,2.836,2871,3.494,2917,4.343,3069,2.206,3511,3.62,3526,2.73,3624,4.062,3808,2.597,3812,4.304,3824,3.199,4016,5.21,4095,5.35,4113,3.999,4121,4.805,4144,3.298,4262,4.062,4281,4.343,4301,3.723,4342,2.973,4467,5.35,4469,3.298,4569,5.919,4611,4.304,4612,3.494,4613,4.805,4618,5.826,4619,4.343,4620,5.35,4626,4.805,4790,4.062,4990,3.298,5070,2.711,5133,2.393,5267,3.494,5269,4.343,5271,4.343,5273,4.343,5277,5.919,5289,4.805,5518,6.695,5520,2.973,6532,5.35,6780,4.343,6781,3.999,7234,4.805,7263,3.999,7264,4.343,7265,6.782,7266,7.35,7267,5.506,7268,5.506,7269,5.506,7270,5.506,7271,4.805,7272,5.35,7273,4.805,7274,5.506,7275,6.782,7276,6.782,7277,5.506,7278,5.506,7279,5.506,7280,7.35,7281,6.782,7282,5.506,7283,5.506,7284,7.35,7285,6.782,7286,5.919,7287,5.506,7288,5.506,7289,5.506,7290,5.506,7291,5.506,7292,6.782,7293,5.506,7294,5.506,7295,5.506,7296,3.999,7297,5.506,7298,7.672,7299,5.506,7300,6.782,7301,5.506,7302,5.506,7303,6.782,7304,5.919,7305,5.506,7306,5.506,7307,5.506,7308,5.506,7309,6.782,7310,5.506,7311,5.506,7312,5.506,7313,5.506,7314,5.506,7315,3.723,7316,5.506,7317,5.506,7318,5.506,7319,5.506,7320,4.805,7321,3.999,7322,5.506,7323,5.506,7324,5.506,7325,5.506,7326,5.506,7327,5.506,7328,5.506,7329,5.506,7330,6.782,7331,5.506,7332,5.506,7333,5.506,7334,5.506,7335,5.506,7336,5.506,7337,5.506,7338,6.415,7339,5.506,7340,5.506,7341,5.506,7342,5.506,7343,6.782,7344,4.343,7345,5.506,7346,6.782,7347,5.919,7348,5.506,7349,6.782,7350,5.506,7351,5.506,7352,5.506,7353,5.506,7354,5.506,7355,5.506,7356,5.506,7357,5.506,7358,5.506,7359,5.506,7360,5.506,7361,5.506,7362,5.506,7363,5.506,7364,5.506,7365,5.506,7366,5.506,7367,5.506,7368,5.506,7369,5.506,7370,5.506,7371,5.506,7372,5.506,7373,4.805,7374,5.506,7375,4.805,7376,5.506,7377,5.506,7378,5.506,7379,5.506,7380,5.506]],["t/15",[7381,4.482]],["b/15",[9,0.688,10,2.563,11,0.652,19,0.993,20,1.99,21,3.005,22,1.05,23,1.903,24,1.665,26,1.534,27,0.812,28,3.21,30,0.841,35,0.44,36,1.122,37,0.708,38,1.009,44,0.968,48,1.183,49,0.411,53,0.725,54,0.621,59,0.876,66,0.995,67,0.324,69,2.208,72,2.153,78,1.093,82,1.46,88,1.027,89,0.936,96,0.584,97,1.875,98,2.707,99,2.109,102,2.035,103,0.887,104,0.808,105,0.608,112,2.893,113,1.531,115,1.03,116,0.425,123,1.303,124,0.122,130,0.902,134,0.945,152,1.219,157,1.907,158,3.152,159,3.26,160,1.308,161,1.381,162,1.621,163,0.785,166,2.779,170,1.194,171,1.417,175,0.709,176,0.523,177,0.976,179,2.106,180,1.219,182,1.996,183,1.743,185,1.219,187,1.343,195,1.293,206,1.427,207,0.945,231,1.191,232,0.4,242,0.928,244,0.531,261,1.217,264,4.555,266,0.664,268,2.035,269,0.412,274,2.657,276,1.957,292,2.576,298,0.936,299,1.001,303,1.848,305,4.628,311,0.793,315,1.612,316,0.794,317,0.939,320,0.685,321,0.765,335,0.945,341,0.67,351,1.261,353,0.897,354,0.792,355,0.876,362,1.581,363,3.393,365,0.745,372,1.778,373,1.303,376,1.282,383,0.793,385,0.945,386,0.61,391,0.709,394,1.191,401,0.672,402,0.635,411,2.85,434,0.759,435,0.902,455,2.152,464,1.219,467,2.406,468,1.376,469,2.305,470,3.826,473,0.074,474,0.018,475,1.659,479,0.945,480,1.47,481,0.765,483,1.027,484,0.934,487,0.876,489,0.963,490,0.968,493,0.847,498,0.837,500,0.539,501,1.014,502,0.607,503,0.9,506,0.795,508,1.875,509,0.785,510,0.887,511,0.759,512,1.086,514,1.267,515,1.654,517,3.358,518,1.55,519,1.923,521,1.176,522,0.763,523,1.336,525,0.821,526,3.448,527,0.915,528,1.377,529,1.049,531,2.511,533,1.475,534,2.71,538,0.841,540,1.37,541,1.568,545,1.188,547,2.587,551,3.026,553,0.785,557,0.936,559,0.906,560,1.302,563,0.633,564,1.417,565,1.303,572,2.021,573,1.894,574,0.74,575,0.632,576,0.794,577,1.585,580,1.648,582,0.887,583,1.631,585,1.936,587,0.425,594,2.047,596,0.968,601,0.643,602,1.138,603,0.851,604,0.569,606,0.6,611,0.454,616,0.695,617,0.685,618,0.625,622,1.199,625,1.243,626,0.725,627,0.771,628,0.796,629,0.738,630,0.725,631,0.736,633,0.761,634,1.033,636,0.785,637,0.641,638,0.714,641,0.833,643,0.687,644,1.043,645,0.657,646,0.672,648,0.672,649,1.149,650,3.117,651,1.785,654,1.914,655,1.445,667,1.461,668,0.411,670,0.72,671,2.608,672,4.443,675,0.385,677,0.814,679,0.902,680,1.345,681,0.523,682,0.394,683,0.443,684,0.507,685,0.936,687,1.923,689,1.139,694,1.936,700,1.789,702,2.887,704,1.149,706,0.793,710,1.083,712,2.864,713,2.427,715,1.815,717,0.632,718,1.235,719,2.715,721,1.901,723,1.282,724,1.109,725,2.367,727,2.609,731,3.587,732,0.819,742,1.907,748,1.99,753,1.321,755,1.632,760,1.417,761,2.035,762,2.881,764,1.808,767,1.009,768,0.542,769,1.19,770,0.607,773,1.982,776,1.805,777,0.871,779,2.576,780,1.134,785,0.902,786,0.977,787,1.37,788,0.945,790,0.542,791,1.851,794,1.377,798,2.396,799,2.963,800,0.837,801,1.715,802,2.02,809,1.575,813,1.417,814,1.74,815,5.442,816,2.347,821,1.632,824,0.945,826,1.752,828,1.848,830,3.384,833,2.506,835,0.891,836,1.914,845,1.102,847,2.693,849,1.687,851,1.149,853,1.952,854,1.243,855,1.6,856,1.243,858,1.391,860,3.379,862,1.102,864,2.23,868,2.779,869,1.72,870,3.854,875,1.243,884,0.793,885,1.192,886,0.504,891,2.405,895,1.092,896,0.562,899,2.311,902,2.021,905,1.866,910,0.607,914,0.971,916,0.659,919,0.936,920,2.135,926,1.038,940,0.632,961,1.188,962,0.688,1008,1.752,1011,2.405,1013,0.887,1022,0.887,1023,0.793,1024,0.632,1033,0.793,1035,1.417,1036,2.118,1037,2.563,1044,0.837,1046,1.243,1048,1.015,1059,0.659,1063,0.887,1064,1.64,1065,1.102,1066,0.425,1069,1.522,1074,1.219,1091,1.036,1092,1.235,1098,2.32,1100,0.793,1101,0.902,1104,0.812,1105,1.585,1107,1.577,1112,2.563,1113,0.688,1115,3.165,1117,1.152,1123,0.72,1124,1.102,1134,0.837,1142,1.102,1144,1.445,1145,0.769,1147,0.841,1162,1.478,1172,1.752,1174,0.632,1176,1.659,1180,0.902,1181,1.138,1182,2.512,1183,0.793,1194,1.631,1195,0.887,1196,1.94,1201,1.526,1204,2.021,1208,1.531,1212,4.555,1243,0.887,1244,0.523,1248,0.607,1259,0.584,1260,2.343,1261,1.441,1262,0.632,1270,0.72,1273,1.528,1279,0.971,1284,0.887,1285,1.009,1286,1.632,1288,1.191,1289,1.188,1290,0.841,1299,0.887,1303,1.303,1310,1.903,1316,0.785,1317,3.011,1320,0.72,1325,0.562,1332,3.399,1348,0.542,1350,1.445,1354,1.64,1362,0.686,1363,1.748,1364,1.648,1366,1.001,1372,0.428,1373,0.793,1374,0.495,1376,1.13,1378,0.785,1379,0.504,1381,0.887,1382,0.66,1383,0.701,1384,1.72,1385,0.851,1386,0.781,1391,0.837,1395,0.808,1396,1.191,1397,1.033,1405,1.808,1428,1.109,1433,0.573,1436,0.841,1444,0.753,1445,0.808,1448,0.866,1449,0.948,1450,0.819,1451,0.819,1452,2.352,1456,0.72,1457,1.751,1459,1.062,1460,2.411,1461,0.802,1462,4.162,1464,0.802,1466,0.857,1467,0.885,1468,1.062,1469,0.977,1472,0.945,1475,0.977,1478,1.009,1483,0.876,1485,0.876,1488,0.848,1489,0.906,1492,1.217,1493,1.381,1494,0.936,1496,0.72,1497,1.445,1498,0.968,1499,0.968,1501,0.968,1502,0.968,1504,1.001,1509,0.812,1510,0.812,1511,0.812,1512,0.871,1516,1.336,1519,0.607,1531,1.217,1534,1.093,1543,0.72,1545,1.303,1551,1.102,1553,1.219,1586,1.903,1595,0.584,1599,0.688,1600,0.72,1609,0.945,1613,0.902,1615,0.936,1652,0.607,1653,1.445,1663,1.188,1666,0.72,1667,2.657,1673,0.755,1680,0.724,1684,1.877,1712,2.217,1760,0.504,1761,3.366,1817,1.102,1834,1.015,1835,2.313,1843,0.562,1853,0.504,1891,1.72,1893,2.99,1894,0.902,1909,0.793,1913,0.688,1919,3.184,1927,2.305,1930,3.852,1932,1.219,1943,1.145,1946,1.331,1958,0.887,1962,1.445,1965,2.152,1966,0.632,1967,0.659,2032,0.902,2033,0.936,2037,0.902,2039,0.936,2040,1.235,2042,0.936,2044,0.936,2045,0.902,2046,0.542,2047,0.542,2050,0.562,2051,0.542,2094,0.659,2098,0.659,2156,1.568,2160,0.945,2162,1.632,2168,4.45,2169,0.945,2170,5.375,2172,0.026,2174,2.367,2175,2.342,2176,1.303,2230,3.013,2261,1.049,2279,2.152,2298,2.405,2305,0.793,2306,1.445,2307,0.936,2308,1.37,2321,1.015,2322,1.585,2324,4.184,2357,0.793,2397,1.788,2431,1.526,2432,1.788,2438,1.323,2457,2.021,2487,0.793,2513,0.72,2522,2.563,2537,1.188,2540,0.487,2546,2.99,2551,1.531,2573,1.568,2576,0.659,2613,2.021,2660,1.217,2661,2.803,2665,1.276,2682,0.72,2687,0.837,2719,1.015,2735,0.688,2740,1.243,2753,0.837,2768,1.64,2783,1.219,2787,1.37,2802,4.184,2806,0.542,2833,1.368,2845,5.117,2849,1.631,2871,4.137,2912,1.015,2918,1.015,2925,1.303,2933,2.715,2973,0.542,2975,0.793,2992,1.438,2993,0.887,3001,1.907,3016,0.887,3020,3.152,3025,4.813,3029,3.452,3039,3.214,3042,1.903,3045,3.375,3046,6.046,3051,3.522,3052,1.015,3066,1.632,3068,0.72,3069,2.268,3078,2.27,3084,3.399,3087,1.445,3091,1.752,3101,1.303,3118,0.887,3122,3.165,3124,2.411,3131,1.015,3137,1.445,3138,0.837,3139,0.793,3156,1.219,3158,2.021,3161,3.375,3171,0.945,3178,2.839,3179,0.837,3184,1.659,3187,1.303,3192,4.237,3193,0.837,3215,1.632,3217,1.102,3236,1.903,3237,2.313,3248,1.102,3251,2.512,3267,1.188,3271,4.327,3278,0.945,3312,2.305,3316,4.22,3317,3.833,3323,1.445,3333,1.445,3341,1.331,3348,1.015,3387,2.405,3392,2.585,3393,0.755,3394,1.445,3395,5.761,3396,4.085,3401,3.852,3404,1.808,3425,1.303,3426,1.015,3462,1.102,3474,1.907,3478,1.015,3486,1.015,3498,2.367,3504,1.102,3511,1.188,3526,0.971,3539,1.219,3560,1.102,3575,0.945,3579,2.106,3585,2.106,3587,4.085,3591,1.102,3598,1.632,3621,0.688,3623,1.015,3624,3.753,3632,3.177,3633,3.308,3634,2.71,3641,0.793,3666,2.021,3677,1.219,3678,1.752,3686,1.903,3688,1.102,3700,1.102,3702,1.907,3728,1.219,3734,2.779,3775,0.793,3777,1.219,3801,0.887,3808,0.659,3812,1.531,3824,3.215,3885,3.184,3893,0.793,3905,1.903,4016,2.97,4065,0.887,4068,1.632,4069,0.945,4070,1.632,4071,0.945,4072,1.752,4091,5.228,4111,1.219,4164,1.219,4248,1.015,4276,1.015,4290,0.755,4422,1.531,4423,1.015,4430,1.903,4449,1.72,4466,0.945,4471,0.793,4497,1.009,4501,0.945,4504,1.37,4506,0.72,4512,3.214,4513,0.755,4521,3.011,4548,1.102,4611,1.531,4800,1.015,4803,1.102,4822,2.021,4823,1.219,4852,3.366,4928,1.531,4942,0.562,4946,0.945,5000,1.903,5004,0.632,5006,0.688,5010,1.049,5012,0.72,5050,1.015,5054,2.106,5062,2.106,5070,0.688,5088,1.632,5093,3.474,5099,1.015,5124,0.72,5148,1.219,5151,0.945,5156,1.903,5210,0.72,5211,1.092,5212,1.568,5213,1.568,5214,0.688,5231,2.106,5449,1.092,5450,0.887,5515,1.102,5520,0.755,5536,1.188,5617,1.632,5645,0.887,5672,1.102,5849,1.102,5856,0.887,5939,0.584,5946,1.015,5956,1.632,5957,1.632,5996,1.015,6075,1.102,6082,1.219,6085,1.907,6279,3.375,6410,1.219,6424,1.903,6506,1.903,6526,4.408,6527,3.107,6533,0.887,6658,2.779,6665,1.219,6666,3.177,6710,1.952,6807,1.102,6831,1.102,6848,1.102,7076,1.102,7114,1.015,7148,1.808,7160,3.107,7315,3.165,7382,1.219,7383,1.219,7384,2.106,7385,4.278,7386,4.551,7387,3.79,7388,2.779,7389,1.397,7390,1.397,7391,1.397,7392,1.397,7393,6.266,7394,3.184,7395,3.308,7396,2.413,7397,2.779,7398,2.413,7399,2.413,7400,2.413,7401,2.413,7402,2.413,7403,2.413,7404,2.413,7405,1.397,7406,3.79,7407,4.278,7408,1.397,7409,3.184,7410,3.79,7411,1.397,7412,1.397,7413,2.413,7414,1.397,7415,1.397,7416,1.397,7417,3.184,7418,3.79,7419,3.184,7420,1.397,7421,3.184,7422,5.303,7423,1.397,7424,4.68,7425,3.79,7426,1.397,7427,1.397,7428,2.413,7429,1.397,7430,1.397,7431,1.397,7432,1.397,7433,1.397,7434,2.106,7435,1.219,7436,2.413,7437,1.397,7438,5.869,7439,1.219,7440,5.017,7441,4.278,7442,5.03,7443,3.184,7444,3.79,7445,1.397,7446,1.397,7447,1.397,7448,2.413,7449,2.413,7450,4.085,7451,1.397,7452,1.397,7453,1.397,7454,1.015,7455,1.397,7456,1.397,7457,1.397,7458,1.397,7459,1.397,7460,1.397,7461,1.397,7462,1.219,7463,1.397,7464,1.397,7465,1.015,7466,2.413,7467,1.397,7468,1.397,7469,1.219,7470,1.397,7471,1.219,7472,1.219,7473,1.219,7474,1.219,7475,1.219,7476,2.106,7477,1.397,7478,1.397,7479,1.397,7480,1.397,7481,2.413,7482,1.397,7483,1.397,7484,3.692,7485,4.68,7486,1.397,7487,1.397,7488,1.397,7489,1.397,7490,1.397,7491,3.184,7492,5.03,7493,1.397,7494,1.397,7495,3.184,7496,2.752,7497,1.397,7498,1.219,7499,1.397,7500,1.397,7501,1.397,7502,3.79,7503,1.397,7504,1.219,7505,1.397,7506,3.184,7507,5.017,7508,1.397,7509,1.397,7510,3.79,7511,2.413,7512,1.397,7513,1.397,7514,1.397,7515,1.397,7516,1.015,7517,1.397,7518,1.219,7519,2.413,7520,1.397,7521,1.397,7522,1.397,7523,1.397,7524,2.413,7525,1.397,7526,1.397,7527,2.413,7528,2.413,7529,1.397,7530,1.397,7531,1.397,7532,4.843,7533,1.397,7534,1.397,7535,1.397,7536,1.219,7537,2.106,7538,2.413,7539,1.903,7540,1.219,7541,5.03,7542,1.219,7543,1.219,7544,1.397,7545,1.397,7546,4.843,7547,4.278,7548,2.106,7549,1.397,7550,1.397,7551,1.397,7552,1.397,7553,2.413,7554,1.397,7555,1.219,7556,1.219,7557,1.397,7558,1.397,7559,1.397,7560,1.397,7561,1.397,7562,1.397,7563,1.397,7564,1.397,7565,1.397,7566,1.219,7567,1.219,7568,3.375,7569,2.106,7570,4.379,7571,3.308,7572,2.106,7573,1.219,7574,1.219,7575,1.397,7576,1.219,7577,0.887,7578,1.397,7579,1.397,7580,1.397,7581,1.397,7582,1.397,7583,1.219,7584,3.308,7585,3.308,7586,1.397,7587,1.219,7588,1.219,7589,1.397,7590,1.397,7591,1.397,7592,1.397,7593,1.397,7594,1.397,7595,1.219,7596,1.219,7597,1.397,7598,2.106,7599,2.106,7600,2.106,7601,1.219,7602,2.106,7603,1.219,7604,1.219,7605,1.397,7606,1.219,7607,1.219,7608,1.219,7609,1.219,7610,1.219,7611,1.219,7612,1.219,7613,2.106,7614,1.397,7615,2.413,7616,1.397,7617,1.397,7618,1.397,7619,1.397,7620,1.397,7621,2.413,7622,2.779,7623,2.106,7624,1.219,7625,1.219,7626,3.308,7627,3.308,7628,1.219,7629,2.313,7630,3.184,7631,2.106,7632,1.102,7633,1.219,7634,1.219,7635,3.79,7636,1.397,7637,1.219,7638,2.413,7639,1.397,7640,1.397,7641,2.413,7642,1.219,7643,1.102,7644,1.397,7645,1.397,7646,1.397,7647,1.397,7648,1.397,7649,1.397,7650,1.397,7651,1.397,7652,1.903,7653,4.379,7654,2.413,7655,1.219,7656,1.219,7657,1.397,7658,2.779,7659,1.219,7660,3.308,7661,1.219,7662,1.219,7663,1.397,7664,2.106,7665,1.397,7666,1.219,7667,1.219,7668,1.397,7669,4.085,7670,2.106,7671,1.219,7672,1.219,7673,2.413,7674,1.397,7675,1.397,7676,1.397,7677,1.219,7678,2.106,7679,1.219,7680,1.219,7681,1.397,7682,1.219,7683,2.106,7684,1.219,7685,1.219,7686,1.219,7687,1.397,7688,1.102,7689,4.184,7690,1.219,7691,1.219,7692,1.219,7693,1.219,7694,1.219,7695,1.219,7696,1.219,7697,2.106,7698,3.308,7699,1.015,7700,4.547,7701,4.843,7702,4.085,7703,3.692,7704,3.184,7705,3.79,7706,3.184,7707,3.184,7708,3.184,7709,1.397,7710,3.308,7711,2.752,7712,2.106,7713,6.476,7714,2.413,7715,2.106,7716,6.02,7717,1.397,7718,2.413,7719,6.205,7720,1.397,7721,5.869,7722,3.184,7723,6.815,7724,2.106,7725,2.106,7726,1.397,7727,1.397,7728,1.397,7729,1.397,7730,1.397,7731,1.397,7732,2.779,7733,2.512,7734,2.779,7735,2.779,7736,2.153,7737,2.106,7738,2.779,7739,2.779,7740,2.779,7741,2.779,7742,3.308,7743,1.219,7744,1.219,7745,3.308,7746,1.397,7747,0.887,7748,1.015,7749,1.397,7750,1.219,7751,4.085,7752,2.413,7753,3.308,7754,2.779,7755,2.779,7756,3.79,7757,1.397,7758,2.413,7759,1.397,7760,4.68,7761,1.397,7762,1.397,7763,3.184,7764,4.68,7765,3.184,7766,4.278,7767,1.397,7768,2.413,7769,2.413,7770,2.413,7771,1.397,7772,1.397,7773,1.397,7774,1.397,7775,1.397,7776,1.397,7777,1.397,7778,1.397,7779,1.397,7780,1.397,7781,1.397,7782,1.397,7783,2.413,7784,1.397,7785,1.397,7786,1.397,7787,1.015,7788,1.397,7789,2.413,7790,1.397,7791,1.397,7792,3.734,7793,1.397,7794,1.397,7795,1.397,7796,1.397,7797,2.413,7798,1.397,7799,1.397,7800,1.397,7801,1.397,7802,1.397,7803,1.397,7804,1.397,7805,1.397,7806,2.413,7807,6.148,7808,1.397,7809,1.397,7810,1.397,7811,1.397,7812,1.397,7813,1.219,7814,1.397,7815,1.397,7816,1.752,7817,1.397,7818,1.397,7819,1.397,7820,1.397,7821,1.397,7822,1.219,7823,1.397,7824,1.397,7825,1.397,7826,1.397,7827,1.397,7828,1.397,7829,1.397,7830,1.397,7831,1.397,7832,1.397,7833,1.397,7834,1.397,7835,1.397,7836,1.219,7837,1.397,7838,1.397,7839,1.397,7840,1.397,7841,1.397,7842,1.397,7843,1.397,7844,1.397,7845,1.397,7846,1.397,7847,1.397,7848,1.397,7849,1.397,7850,1.397,7851,1.397,7852,1.397,7853,1.397,7854,1.632,7855,2.106,7856,3.79,7857,3.79,7858,2.413,7859,3.184,7860,1.397,7861,3.308,7862,1.397,7863,1.397,7864,2.413,7865,1.397,7866,1.397,7867,1.397,7868,3.184,7869,3.184,7870,3.184,7871,1.397,7872,3.184,7873,2.106,7874,1.397,7875,1.397,7876,1.397,7877,3.184,7878,2.413,7879,2.413,7880,3.184,7881,3.184,7882,2.413,7883,2.413,7884,3.184,7885,2.413,7886,2.413,7887,3.184,7888,1.397,7889,1.397,7890,5.305,7891,1.397,7892,1.397,7893,1.397,7894,1.397,7895,1.397,7896,1.397,7897,2.512,7898,1.397,7899,1.219,7900,1.397,7901,1.397,7902,2.413,7903,1.397,7904,6.399,7905,6.266,7906,1.397,7907,1.397,7908,1.397,7909,1.397,7910,1.397,7911,1.397,7912,5.303,7913,4.68,7914,1.397,7915,4.278,7916,4.278,7917,1.397,7918,1.397,7919,1.397,7920,2.413,7921,6.975,7922,2.106,7923,3.308,7924,1.397,7925,2.512,7926,1.397,7927,1.397,7928,3.184,7929,2.413,7930,1.397,7931,1.397,7932,1.397,7933,1.397,7934,1.397,7935,1.903,7936,1.397,7937,1.397,7938,1.102,7939,1.397,7940,1.397,7941,3.184,7942,2.413,7943,1.397,7944,1.397,7945,1.397,7946,1.397,7947,5.194,7948,5.017,7949,5.303,7950,1.397,7951,2.97,7952,1.102,7953,1.015,7954,1.219,7955,2.413,7956,1.397,7957,2.413,7958,3.79,7959,1.397,7960,1.397,7961,1.531,7962,1.397,7963,1.397,7964,1.397,7965,1.397,7966,1.397,7967,1.397,7968,1.397,7969,1.397,7970,1.397,7971,1.397,7972,1.397,7973,1.397,7974,1.397,7975,1.397,7976,1.397,7977,2.779,7978,1.397,7979,1.397,7980,1.397,7981,3.184,7982,3.184,7983,3.184,7984,1.397,7985,3.308,7986,2.413,7987,3.79,7988,2.413,7989,1.397,7990,1.397,7991,4.278,7992,1.015,7993,1.397,7994,1.397,7995,1.015,7996,1.397,7997,1.397,7998,1.102,7999,1.397,8000,1.397,8001,1.102,8002,1.397,8003,1.397,8004,2.413,8005,3.79,8006,1.397,8007,4.68,8008,2.413,8009,2.413,8010,3.184,8011,3.184,8012,2.413,8013,3.184,8014,1.397,8015,2.413,8016,1.397,8017,3.79,8018,3.184,8019,2.413,8020,1.397,8021,2.413,8022,2.413,8023,2.413,8024,2.413,8025,1.397,8026,2.413,8027,1.397,8028,2.413,8029,3.79,8030,2.413,8031,2.779,8032,1.397,8033,2.413,8034,2.413,8035,2.413,8036,3.79,8037,1.397,8038,1.397,8039,1.397,8040,1.219,8041,4.68,8042,1.397,8043,5.339,8044,2.413,8045,2.413,8046,3.79,8047,1.397,8048,1.397,8049,1.397,8050,1.397,8051,1.397,8052,1.219,8053,1.397,8054,1.397,8055,1.397,8056,1.397,8057,1.397,8058,1.397,8059,1.397,8060,1.397,8061,1.219,8062,1.219,8063,2.106,8064,1.102,8065,1.219,8066,1.397,8067,1.397,8068,1.397,8069,1.397,8070,1.397,8071,1.219,8072,1.397,8073,1.397,8074,1.397,8075,1.219,8076,2.413,8077,1.397,8078,0.837,8079,1.397,8080,0.837,8081,1.397,8082,0.837,8083,1.397,8084,1.397,8085,1.397,8086,1.397,8087,1.397,8088,1.397,8089,1.397,8090,1.397,8091,1.397,8092,1.397,8093,3.734,8094,1.397,8095,1.397,8096,1.397,8097,1.397,8098,1.219,8099,1.397,8100,1.397,8101,1.397,8102,6.898,8103,4.278,8104,1.397,8105,1.397,8106,1.397,8107,1.397,8108,1.397,8109,1.397,8110,1.397,8111,1.397,8112,1.397,8113,1.397,8114,1.397,8115,1.397,8116,1.397,8117,3.79,8118,1.397,8119,1.397,8120,2.413,8121,2.413,8122,1.397,8123,1.397,8124,1.397,8125,1.219,8126,1.397,8127,0.945,8128,1.397,8129,1.397,8130,1.397,8131,3.79,8132,3.79,8133,1.397,8134,2.413,8135,1.397,8136,1.397,8137,1.219,8138,1.397,8139,1.397,8140,1.397,8141,1.397,8142,1.397,8143,1.397,8144,2.413,8145,1.397,8146,1.397,8147,1.397,8148,2.413,8149,3.184,8150,2.413,8151,2.413,8152,2.413,8153,1.397,8154,1.219,8155,3.184,8156,1.219,8157,1.219,8158,1.397,8159,1.397,8160,1.397,8161,1.397,8162,1.397,8163,1.397,8164,1.219,8165,1.397,8166,0.887,8167,1.219,8168,0.945,8169,1.102,8170,1.397,8171,1.219,8172,1.397,8173,1.397,8174,2.413,8175,1.397,8176,1.397,8177,1.397,8178,4.278,8179,1.397,8180,2.413,8181,1.397,8182,1.397,8183,3.184,8184,1.397,8185,1.397,8186,2.413,8187,2.413,8188,2.413,8189,1.397,8190,1.397,8191,1.397,8192,2.413,8193,3.184,8194,1.397,8195,1.397,8196,1.397,8197,1.397,8198,2.413,8199,2.413,8200,1.397,8201,1.397,8202,7.536,8203,1.397,8204,1.397,8205,3.79,8206,2.413,8207,1.397,8208,1.219,8209,1.397,8210,1.397,8211,2.106,8212,1.397,8213,4.68,8214,3.184,8215,2.413,8216,1.397,8217,1.397,8218,2.413,8219,1.397,8220,2.413,8221,2.413,8222,1.397,8223,1.397,8224,2.413,8225,2.413,8226,1.397,8227,1.397,8228,1.397,8229,1.397,8230,1.397,8231,1.397,8232,1.397,8233,0.793,8234,0.945]],["t/16",[3438,3.73]],["b/16",[11,1.352,24,1.74,27,1.775,28,2.597,29,3.564,36,1.397,47,2.53,48,1.269,49,1.942,67,0.36,68,2.837,88,1.079,97,2.148,98,2.658,102,3.382,103,4.575,116,2.297,117,3.041,124,0.108,158,3.892,160,1.026,162,1.493,170,1.252,171,2.91,177,1.206,183,1.765,195,1.702,196,2.727,243,3.521,244,0.631,246,3.158,266,2.394,298,2.561,299,2.601,316,0.989,317,0.989,333,1.577,349,4.045,350,4.318,394,2.696,439,3.83,458,3.158,467,2.007,470,3.959,473,0.057,474,0.05,481,0.633,484,0.706,489,0.627,500,0.331,501,0.965,502,2.87,503,0.785,506,0.761,584,2.848,594,2.848,603,0.918,604,1.18,710,1.16,713,1.903,715,1.404,717,2.386,721,2.005,724,2.512,725,2.487,728,3.115,731,2.487,732,0.706,743,2.597,755,1.942,760,1.972,765,2.301,769,1.026,779,3.306,780,1.493,802,2.122,816,2.222,836,1.903,855,1.972,864,1.775,869,2.848,899,3.566,901,4.465,962,2.597,1022,3.346,1043,3.346,1056,4.465,1098,3.367,1107,1.658,1128,3.158,1137,2.292,1176,2.045,1186,2.848,1277,3.83,1335,4.795,1388,4.16,1405,2.994,1457,2.47,1516,2.244,1517,2.727,1525,4.602,1600,3.401,1662,3.134,1689,2.658,1760,1.903,1891,2.848,1925,4.602,1931,3.401,1943,0.849,1971,3.765,2168,2.994,2172,0.057,2174,2.487,2176,4.081,2438,1.315,2619,3.158,2621,3.566,2833,1.903,2849,1.837,2856,4.093,2913,4.602,2914,4.602,2915,2.487,2981,4.16,2983,3.566,3020,2.716,3039,3.566,3078,3.158,3178,3.252,3194,3.346,3224,3.955,3240,5.687,3251,4.16,3284,5.111,3285,4.318,3310,2.848,3315,2.848,3316,3.158,3391,3.346,3393,2.848,3397,5.762,3434,6.291,3440,4.417,3441,5.213,3454,2.902,3455,4.602,3475,2.716,3479,2.597,3632,3.955,3702,4.318,3744,4.602,3762,2.716,3803,2.205,4004,3.346,4627,2.597,5070,2.597,5230,5.261,5241,2.848,5497,3.749,5604,2.597,6526,4.465,6536,4.16,6830,4.602,7076,4.16,7807,5.762,7922,5.762,7923,5.762,7925,6.525,8233,4.697,8234,5.368,8235,4.754,8236,8.707,8237,7.209,8238,8.36,8239,3.566,8240,5.273,8241,7.555,8242,5.273,8243,8.143,8244,4.602,8245,4.16,8246,5.209,8247,5.762,8248,5.273,8249,5.273,8250,5.762,8251,6.291,8252,5.762,8253,5.273,8254,5.273,8255,5.273,8256,5.273,8257,6.603,8258,5.273,8259,5.273,8260,3.566,8261,3.566,8262,3.346,8263,5.762,8264,4.602,8265,5.273,8266,7.209,8267,7.209,8268,5.273,8269,5.273,8270,8.319,8271,7.555,8272,4.602,8273,6.603,8274,6.603,8275,6.603,8276,5.273,8277,5.273,8278,5.273,8279,5.273,8280,5.273,8281,5.273,8282,5.273,8283,5.273,8284,5.273,8285,5.273,8286,5.273,8287,5.273,8288,5.273,8289,5.273,8290,5.273,8291,5.273,8292,5.273,8293,5.273,8294,5.273,8295,5.273,8296,5.273,8297,5.273,8298,5.273,8299,5.273,8300,3.566,8301,5.273,8302,5.273,8303,5.273,8304,5.273,8305,5.235,8306,5.235,8307,5.273,8308,5.273,8309,5.273]],["t/17",[8233,2.344,8310,4.129]],["b/17",[9,3.684,11,1.531,29,3.061,48,0.972,49,1.909,67,0.331,96,2.714,98,2.612,115,1.16,158,3.343,160,1.008,170,1.045,171,2.427,177,0.972,183,1.516,266,1.786,268,3.252,467,2.396,473,0.07,474,0.057,489,0.937,493,1.285,503,0.772,506,0.717,521,1.008,523,1.729,525,1.673,526,2.821,547,2.821,667,1.399,704,2.342,705,2.041,713,2.342,721,1.673,725,3.061,760,2.427,779,3.011,794,1.329,804,3.343,833,2.821,855,2.427,858,2.111,864,2.184,869,4.04,870,3.061,893,3.888,1067,3.888,1098,2.714,1116,4.714,1123,3.343,1147,2.261,1187,3.505,1211,2.937,1213,2.517,1516,1.729,1653,3.888,1695,3.685,1892,5.664,1943,1.045,2172,0.07,2849,2.261,3098,4.389,3177,4.714,3193,3.888,3208,4.714,3215,4.389,3310,3.505,3315,3.505,3398,4.389,3457,2.821,3475,3.343,5070,3.196,5088,4.389,5520,3.505,7721,5.664,7925,5.12,8233,4.599,8234,5.059,8263,5.664,8264,5.664,8311,6.49,8312,3.888,8313,6.49,8314,6.49,8315,6.49,8316,5.664,8317,6.49,8318,6.49,8319,6.49,8320,6.49,8321,6.49,8322,6.49]],["t/18",[8323,5.135]],["b/18",[19,1.541,22,1.138,30,1.485,35,0.439,36,1.648,37,0.828,38,1.531,53,1.245,54,0.628,67,0.254,82,1.791,88,1.332,89,1.653,104,1.124,105,0.603,115,0.762,124,0.122,182,2.17,206,1.212,219,2.705,232,0.377,244,0.429,268,1.853,269,0.406,320,0.828,321,1.163,335,1.434,341,0.722,351,0.932,352,2.553,353,1.163,354,1.204,362,1.257,365,0.803,372,1.677,385,1.434,386,0.603,394,1.594,401,0.871,402,0.667,454,6.077,473,0.046,474,0.044,475,1.653,481,0.408,487,1.582,489,0.911,500,0.525,501,1.085,503,0.828,506,0.667,509,2.116,512,0.549,515,0.902,517,2.961,519,1.677,522,0.762,523,1.531,526,1.853,528,0.872,529,1.027,538,2.533,550,2.099,551,1.538,553,1.386,563,0.628,573,1.135,574,0.734,578,3.29,582,0.712,583,1.485,602,2.01,606,0.551,611,2.116,616,0.7,617,0.507,618,0.661,622,1.285,625,1.32,626,0.768,627,0.838,628,0.874,629,0.827,630,0.838,631,0.838,633,0.911,637,0.861,638,0.862,641,0.862,643,0.862,645,0.862,646,0.932,648,0.871,649,1.538,675,1.791,677,0.781,679,1.594,680,2.189,681,1.594,683,1.162,684,0.571,705,1.34,710,0.686,713,2.348,715,2.039,718,2.23,721,1.677,723,1.715,727,2.15,732,0.77,749,2.882,755,1.253,759,1.87,760,2.15,768,3.326,769,1.129,781,1.929,784,3.513,791,1.791,795,4.175,796,5.061,798,1.715,813,2.15,835,1.182,851,1.538,853,1.995,858,1.386,871,4.535,878,3.888,887,3.719,894,2.42,902,2.705,910,1.853,919,1.653,926,0.905,955,3.362,1069,2.265,1098,3.04,1105,3.255,1110,1.929,1117,2.211,1147,1.485,1177,2.195,1194,1.485,1211,1.929,1213,1.653,1260,1.485,1273,1.582,1279,1.715,1288,1.594,1290,2.426,1306,4.175,1316,1.386,1344,2.42,1372,0.39,1374,0.662,1376,1.388,1377,1.715,1378,1.386,1379,1.538,1381,2.705,1382,0.774,1383,0.974,1385,0.968,1386,1.085,1433,0.571,1444,1.047,1445,1.124,1448,1.204,1449,1.163,1450,1.245,1451,1.245,1452,1.538,1459,1.377,1461,1.217,1462,3.954,1464,1.217,1466,1.3,1467,1.343,1468,1.217,1469,1.482,1472,1.434,1475,1.482,1478,1.531,1483,1.173,1524,2.23,1596,3.264,1631,3.095,1684,2.604,1909,4.528,1943,0.686,1954,4.399,1962,4.586,2168,2.42,2172,0.046,2175,2.442,2267,2.705,2322,2.404,2324,6.347,2438,1.434,2546,4.535,2561,6.96,2665,1.434,2676,2.404,2682,2.195,2734,4.535,2735,2.099,2740,2.195,2768,2.195,2774,4.535,2781,4.175,2789,5.017,2798,5.017,2806,1.653,2815,3.362,2830,6.682,2970,3.095,2973,1.653,2983,3.105,3084,4.175,3086,2.01,3119,4.175,3132,3.362,3254,2.882,3323,3.443,3526,1.715,3775,2.42,4417,5.441,4430,5.91,4469,4.171,4509,4.709,4966,3.264,5124,2.195,5151,2.882,5230,2.882,5939,1.782,6832,5.677,7013,5.057,7138,3.719,7218,3.362,7518,3.719,7816,4.175,8166,4.614,8312,3.443,8324,5.281,8325,7.271,8326,4.262,8327,4.262,8328,4.262,8329,4.262,8330,4.262,8331,4.262,8332,4.262,8333,4.262,8334,3.362,8335,4.262,8336,4.262,8337,4.262,8338,5.749,8339,6.505,8340,7.271,8341,4.262,8342,5.749,8343,7.491,8344,4.262,8345,4.262,8346,4.262,8347,6.505,8348,4.262,8349,4.262,8350,4.262,8351,5.017,8352,5.749,8353,5.749,8354,5.749,8355,5.749,8356,5.749,8357,4.262,8358,3.719,8359,4.535,8360,3.719,8361,3.362,8362,4.262,8363,5.749,8364,4.262,8365,4.262,8366,7.192,8367,7.376,8368,4.262,8369,4.262,8370,7.271,8371,5.749,8372,5.749,8373,4.535,8374,6.345,8375,4.725,8376,4.262,8377,3.719,8378,6.505,8379,3.095,8380,4.262,8381,6.964,8382,6.505,8383,5.749,8384,4.262,8385,7.786,8386,4.262,8387,4.262,8388,4.262,8389,4.262,8390,6.964,8391,5.749,8392,4.262,8393,4.262,8394,4.262,8395,5.749,8396,4.262,8397,5.749,8398,5.017,8399,5.749,8400,4.535,8401,4.262,8402,4.262,8403,4.262,8404,5.749,8405,5.749,8406,4.262,8407,4.262,8408,4.262,8409,4.262,8410,4.535,8411,3.719,8412,4.262,8413,4.262,8414,3.362,8415,4.262,8416,4.262,8417,4.262,8418,6.964,8419,4.262,8420,5.749,8421,4.262,8422,6.505,8423,3.719,8424,6.505,8425,5.749,8426,5.749,8427,5.749,8428,4.262,8429,4.262,8430,6.505,8431,6.505,8432,6.964,8433,5.749,8434,5.749,8435,4.262,8436,4.262,8437,4.262,8438,5.749,8439,5.749,8440,4.262,8441,4.262,8442,5.749,8443,3.362,8444,5.749,8445,7.657,8446,8.333,8447,4.262,8448,4.262,8449,4.262,8450,5.749,8451,4.262,8452,5.749,8453,4.262,8454,6.505,8455,5.749,8456,4.262,8457,4.262,8458,4.262,8459,5.749,8460,4.262,8461,4.262,8462,4.262,8463,6.505,8464,5.749,8465,4.262,8466,4.262,8467,6.505,8468,6.505,8469,4.262,8470,4.262,8471,5.749,8472,4.262,8473,4.262,8474,4.262,8475,4.262,8476,4.262,8477,4.262,8478,4.262,8479,4.262,8480,4.262,8481,4.262,8482,4.262,8483,4.262,8484,4.262,8485,6.505,8486,4.262,8487,5.749,8488,4.262,8489,4.262,8490,5.749,8491,4.262,8492,4.262,8493,4.262,8494,4.262,8495,5.749,8496,5.749,8497,5.749,8498,5.749,8499,5.749,8500,5.749,8501,5.749,8502,5.749,8503,5.749,8504,5.749]],["t/19",[8505,4.482]],["b/19",[11,1.249,22,1.208,24,1.473,26,1.201,28,2.295,35,0.442,36,0.986,37,0.554,48,0.914,49,1.37,54,0.626,59,1.679,66,0.805,67,0.369,69,2.198,78,1.089,96,1.948,101,2.455,102,2.026,105,0.647,115,1.091,116,1.417,123,2.517,124,0.122,161,2.115,162,1.053,163,1.984,187,1.017,190,1.918,206,1.326,232,0.4,261,1.326,269,0.414,303,1.753,315,1.417,316,1.081,317,1.081,320,0.554,341,0.703,362,1.488,365,0.713,373,3.294,383,2.646,386,0.626,401,0.624,402,0.593,424,3.717,473,0.073,474,0.046,483,1.129,484,0.817,485,3.151,487,1.283,489,0.914,493,0.922,500,0.499,501,1.048,503,0.971,506,0.718,508,1.515,509,1.515,512,0.876,515,1.439,518,1.533,519,1.572,521,0.724,522,0.667,523,1.625,526,2.652,527,1.473,529,1.034,551,1.682,557,1.807,559,1.935,560,1.712,563,0.643,569,2.198,574,0.652,577,1.948,578,2.76,582,0.887,602,2.198,606,0.736,608,1.807,611,1.515,616,0.716,617,0.964,618,0.649,625,0.982,626,0.682,627,0.744,628,0.776,629,0.713,630,0.744,631,0.667,633,0.725,636,2.612,638,0.755,641,0.755,643,0.577,645,0.577,646,0.624,648,0.624,649,1.682,651,2.521,675,1.283,677,0.724,682,1.061,683,1.041,684,1.085,705,1.918,710,1.162,712,2.517,715,1.625,720,4.097,721,1.572,727,2.281,732,0.91,755,1.37,765,1.624,767,1.26,769,1.056,776,1.515,777,1.682,780,1.537,781,2.109,786,1.753,791,1.679,794,0.954,809,2.635,830,3.673,835,1.173,849,1.417,851,1.682,852,2.109,853,2.188,858,2.347,875,2.4,885,2.416,886,1.682,906,2.877,926,0.648,990,2.517,1011,4.316,1018,2.026,1043,2.957,1051,3.151,1060,1.948,1069,1.984,1087,2.109,1091,1.984,1094,2.201,1104,2.289,1116,3.384,1123,2.4,1145,1.473,1194,1.624,1201,1.876,1211,2.76,1212,3.654,1213,1.807,1244,2.281,1248,2.026,1255,3.676,1258,1.624,1263,2.646,1273,1.283,1286,3.151,1288,1.743,1313,3.151,1316,1.515,1325,1.876,1351,2.4,1366,1.465,1369,1.872,1372,0.726,1374,1.193,1395,0.75,1433,1.048,1452,1.682,1513,1.486,1524,2.366,1531,1.735,1534,1.589,1595,1.948,1598,2.737,1599,2.295,1613,1.743,1615,1.794,1664,3.358,1680,0.881,1684,2.281,1689,2.904,1691,4.066,1693,2.201,1760,2.866,1885,1.417,1897,3.676,1913,2.295,1931,2.4,1943,0.75,1967,2.198,2085,2.198,2086,2.198,2087,2.198,2088,2.295,2092,2.295,2093,2.295,2094,2.198,2096,2.295,2099,2.198,2156,2.295,2171,2.76,2172,0.065,2174,2.198,2175,2.202,2261,2.026,2518,2.109,2540,2.514,2660,1.326,2661,3.654,2665,2.703,2735,3.004,2753,4.074,2768,3.142,2822,3.384,2846,3.151,2847,4.066,2895,3.151,2900,3.151,2973,2.905,2979,3.858,2991,1.624,3038,2.791,3069,1.515,3270,2.646,3313,4.074,3319,4.757,3457,2.026,3472,3.151,3498,2.198,3580,3.384,3590,2.791,3632,2.791,3803,1.948,4062,3.384,4182,3.151,4350,3.654,4354,4.579,4422,2.957,4509,3.151,4821,2.026,4847,2.652,4966,2.646,5070,2.295,5093,4.731,5094,4.486,5095,4.599,5102,3.151,5104,3.676,5124,2.4,5128,4.876,5129,5.58,5150,3.151,5223,3.208,5303,3.384,5427,2.791,5431,2.646,5628,3.384,5663,5.908,5820,4.074,6010,3.151,6040,2.4,6205,3.384,6290,3.676,6672,4.066,6871,3.384,6872,2.791,6954,3.676,6956,4.066,6995,3.676,7179,3.676,7186,2.957,7192,5.182,7221,3.676,8305,3.384,8312,4.074,8506,4.66,8507,4.66,8508,4.66,8509,6.705,8510,4.66,8511,4.812,8512,4.066,8513,3.384,8514,4.066,8515,4.066,8516,4.66,8517,4.66,8518,4.66,8519,4.66,8520,6.1,8521,4.66,8522,4.66,8523,4.66,8524,4.066,8525,4.66,8526,6.801,8527,4.66,8528,5.324,8529,4.66,8530,4.66,8531,4.66,8532,4.66,8533,4.066,8534,4.66,8535,3.676,8536,4.066,8537,5.365,8538,4.812,8539,4.066,8540,4.66,8541,4.66,8542,4.66,8543,4.66,8544,4.66,8545,4.066,8546,4.066,8547,4.066,8548,4.66,8549,4.066,8550,4.066,8551,4.66,8552,5.692,8553,4.43,8554,4.43,8555,3.676,8556,4.66,8557,4.66,8558,4.66,8559,6.176,8560,5.324,8561,5.935,8562,4.066,8563,4.066,8564,5.935,8565,5.935,8566,4.066,8567,3.151,8568,4.066,8569,4.066,8570,4.066,8571,5.439,8572,5.439,8573,6.536,8574,5.324,8575,5.324,8576,4.066,8577,4.066,8578,4.066,8579,4.066,8580,3.676,8581,3.676,8582,4.066,8583,4.066,8584,3.676,8585,4.812,8586,4.066,8587,4.066,8588,4.066,8589,4.066,8590,4.066,8591,4.066,8592,4.066,8593,3.676,8594,4.66,8595,4.066,8596,5.324,8597,5.324,8598,5.324,8599,4.066,8600,5.324,8601,4.066,8602,4.066,8603,4.066,8604,5.365,8605,4.066,8606,4.066,8607,4.66,8608,4.66,8609,4.66,8610,5.935,8611,4.66,8612,4.66,8613,4.66,8614,4.66,8615,4.66,8616,4.66]],["t/20",[26,0.89,124,0.048,8617,3.452]],["b/20",[11,0.859,22,0.544,25,3.406,26,1.466,33,2.836,34,2.378,35,0.436,37,0.676,38,1.515,44,1.275,49,0.809,53,1.088,54,0.587,66,0.724,67,0.348,68,2.47,82,0.757,88,0.563,99,1.412,104,0.982,105,0.611,124,0.122,130,2.127,131,2.378,160,1.172,163,0.894,182,1.965,183,1.329,187,1.332,190,2.398,195,0.709,206,1.446,207,4.89,231,2.127,232,0.361,233,1.978,234,2.161,242,0.443,244,0.38,246,1.647,269,0.389,303,1.922,311,2.381,312,2.512,315,1.729,316,0.852,317,0.852,320,0.676,321,1.017,333,0.917,335,1.419,341,0.52,350,2.512,353,1.017,354,1.052,355,1.565,362,0.917,365,0.596,385,1.419,386,0.579,391,2.034,401,0.761,402,0.496,434,1.788,435,2.127,467,0.836,473,0.045,474,0.032,480,1.067,481,0.487,484,1.074,487,1.399,489,0.327,500,0.533,501,0.984,502,1.823,506,0.487,507,1.15,510,3.886,512,0.789,514,1.664,515,1.803,518,1.164,519,1.31,522,0.834,525,1.31,527,1.373,529,0.789,533,1.233,539,3.66,540,3.81,541,3.407,543,2.235,545,3.015,553,1.364,559,1.618,563,0.545,572,1.745,573,2.216,574,0.81,576,1.419,580,1.823,582,0.929,588,5.675,591,3.309,606,0.693,607,1.485,608,1.067,609,1.354,610,2.917,611,0.894,612,2.4,613,1.997,614,3.66,615,2.4,616,0.56,617,1.01,618,0.472,619,2.4,620,3.66,621,2.4,622,1.251,623,2.4,624,2.4,625,1.297,626,0.647,627,0.622,628,0.736,629,0.596,630,0.622,631,0.622,632,2.4,633,0.676,634,1.858,635,1.745,636,1.991,637,1.005,638,0.704,639,2.4,640,2.4,641,0.704,642,2.17,643,0.704,644,1.685,645,0.704,646,0.761,647,2.4,648,0.761,649,1.835,650,1.823,651,1.412,658,4.486,659,4.13,660,4.963,661,2.17,662,1.647,663,2.4,664,2.4,665,2.4,666,2.4,667,0.878,668,0.809,669,3.66,670,2.161,671,1.627,672,3.046,673,2.4,674,2.4,677,0.838,678,4.13,679,1.569,680,2.175,681,1.029,682,0.758,683,0.583,684,0.864,685,1.8,686,3.046,703,2.4,710,0.915,715,0.733,716,3.046,721,1.578,723,1.107,730,4.13,731,1.978,734,1.997,735,2.4,736,4.83,737,2.4,738,2.4,739,3.66,740,6.416,741,6.416,742,3.406,743,2.065,744,3.66,745,3.66,746,4.437,747,6.311,748,1.364,749,2.836,750,2.17,751,2.964,752,2.17,753,2.338,754,5.856,768,1.972,771,2.4,773,2.235,780,1.286,781,1.245,790,2.603,791,0.757,797,5.457,803,3.66,806,1.196,825,3.66,832,3.66,835,0.412,849,0.836,851,0.993,861,3.846,901,1.86,903,1.647,906,1.297,910,1.196,926,1.06,1053,1.354,1062,3.438,1066,0.836,1093,1.86,1104,2.172,1120,2.4,1128,1.647,1137,1.196,1144,1.647,1145,0.664,1148,5.856,1149,3.692,1150,4.437,1151,4.437,1181,1.297,1196,1.412,1234,2.472,1237,2.472,1240,3.045,1262,1.245,1265,2.4,1271,1.745,1273,0.757,1281,2.4,1282,4.01,1283,5.343,1284,3.886,1291,1.562,1292,1.86,1311,2.4,1348,1.067,1349,1.86,1364,2.472,1366,2.029,1369,0.757,1370,2.17,1372,0.648,1373,2.381,1374,0.883,1375,2.4,1382,0.798,1383,0.852,1385,0.791,1386,0.948,1426,2.381,1428,0.958,1429,2.381,1430,3.309,1432,3.309,1433,0.82,1436,1.461,1437,2.503,1444,0.915,1445,0.982,1448,1.052,1449,1.017,1450,1.088,1451,1.088,1452,0.993,1456,2.161,1459,1.203,1460,2.161,1461,1.203,1464,1.203,1466,1.286,1467,1.329,1468,1.203,1469,1.466,1472,1.419,1475,1.466,1478,1.515,1483,1.565,1485,1.565,1488,1.515,1489,1.618,1492,1.618,1493,1.565,1494,1.672,1496,2.161,1497,3.045,1498,1.729,1499,1.729,1501,1.729,1502,1.729,1504,1.788,1505,2.21,1507,1.485,1509,1.914,1510,1.914,1511,1.914,1512,2.052,1513,1.133,1514,1.978,1515,2.161,1516,0.733,1517,1.835,1518,1.354,1519,2.662,1528,4.405,1534,0.643,1544,2.065,1548,2.662,1616,1.562,1656,2.662,1662,1.823,1663,1.354,1664,1.754,1665,5.294,1666,1.417,1667,2.886,1668,3.66,1669,2.4,1670,2.4,1671,2.4,1672,4.437,1673,1.485,1674,3.046,1675,2.4,1676,2.4,1677,2.4,1678,3.66,1679,3.309,1680,0.999,1681,1.354,1682,2.4,1683,4.437,1684,1.569,1692,2.4,1693,0.993,1694,1.997,1698,5.343,1699,2.4,1700,2.4,1701,2.4,1702,2.4,1703,2.4,1704,2.4,1705,2.4,1706,4.437,1707,2.4,1708,2.4,1709,2.4,1710,2.4,1711,2.4,1712,1.15,1713,1.997,1714,1.745,1715,2.4,1716,2.4,1717,2.4,1718,2.4,1719,2.4,1720,2.4,1721,2.4,1722,1.745,1723,5.343,1724,3.66,1725,2.4,1726,2.4,1727,3.007,1728,2.4,1729,2.4,1730,2.4,1731,4.437,1732,2.17,1733,2.4,1734,2.4,1735,2.4,1736,2.4,1737,3.66,1738,2.4,1739,4.963,1740,4.437,1741,3.66,1742,3.66,1743,3.66,1744,2.4,1745,4.437,1746,3.66,1747,2.4,1748,3.66,1749,3.66,1750,2.4,1751,3.66,1752,2.4,1753,2.4,1754,2.4,1755,4.13,1756,2.4,1762,4.437,1763,2.4,1764,3.66,1765,3.66,1766,3.66,1767,3.046,1768,3.66,1769,3.309,1770,2.836,1771,3.046,1772,1.86,1773,3.66,1774,2.4,1775,2.4,1776,2.4,1777,2.4,1778,2.4,1779,2.4,1780,2.4,1781,2.4,1782,2.4,1783,2.4,1784,2.4,1785,2.4,1786,2.4,1787,2.4,1788,2.4,1789,2.4,1790,2.4,1791,2.4,1792,2.4,1793,2.4,1794,2.4,1795,2.4,1796,2.4,1797,2.4,1798,2.4,1799,2.4,1800,2.4,1801,2.4,1802,2.4,1803,2.4,1804,2.4,1805,2.4,1806,2.4,1807,2.4,1808,3.66,1809,2.4,1810,2.4,1811,2.4,1812,4.437,1813,2.4,1814,2.4,1815,2.4,1816,2.4,1817,3.309,1818,1.86,1819,3.66,1820,2.4,1821,4.437,1822,3.66,1823,2.4,1824,2.4,1825,2.4,1826,2.4,1827,4.437,1828,3.66,1829,2.4,1830,2.4,1831,2.4,1837,2.4,1838,2.4,1839,2.4,1840,2.4,1841,2.4,1848,2.4,1849,3.66,1850,2.4,1851,3.66,1852,2.4,1853,1.835,1854,4.437,1855,2.4,1856,3.66,1857,2.4,1858,2.4,1859,2.4,1860,3.66,1861,1.745,1862,2.4,1863,2.4,1864,2.4,1865,2.4,1866,2.4,1867,2.4,1868,2.4,1869,2.4,1870,2.4,1871,2.4,1872,4.01,1873,2.4,1874,2.4,1875,2.17,1876,2.4,1877,2.4,1878,2.4,1879,2.4,1881,2.4,1882,2.4,1883,2.4,1884,2.4,1885,0.836,1964,1.647,1979,3.66,1980,3.66,1981,3.66,1984,3.66,1986,3.66,1987,3.66,1988,3.66,1989,3.66,1990,3.66,1991,3.66,1992,3.071,1993,3.66,1994,3.071,1995,3.66,1996,3.66,1997,5.631,1998,3.66,1999,2.065,2000,3.66,2001,3.66,2002,3.66,2003,3.66,2004,3.66,2007,4.963,2008,3.66,2009,4.963,2010,3.66,2011,3.66,2012,3.66,2014,2.836,2026,3.66,2028,4.13,2029,6.037,2030,3.66,2032,2.127,2033,2.206,2037,2.127,2039,2.206,2040,2.206,2042,2.206,2044,2.206,2045,2.127,2046,2.206,2047,2.206,2050,2.289,2051,2.206,2052,2.378,2056,2.472,2057,2.472,2058,2.472,2060,2.472,2062,2.472,2064,2.289,2066,3.66,2067,2.206,2070,3.66,2071,2.472,2072,2.472,2074,2.472,2077,2.472,2078,2.573,2079,2.573,2081,2.682,2084,2.682,2085,2.682,2086,2.682,2087,2.682,2088,2.801,2092,2.801,2093,2.504,2094,2.398,2096,2.504,2099,1.978,2100,2.065,2101,2.161,2102,2.161,2104,2.161,2106,2.161,2107,2.161,2108,2.161,2110,2.161,2112,2.161,2114,2.161,2116,2.161,2117,2.161,2118,2.265,2119,2.265,2120,3.046,2122,2.381,2124,2.381,2127,2.381,2130,2.381,2131,2.381,2133,2.381,2134,2.265,2135,2.381,2138,2.381,2139,1.978,2140,2.381,2141,2.381,2143,2.265,2144,2.381,2145,2.381,2146,5.631,2147,6.037,2148,2.512,2149,2.512,2150,2.512,2151,2.512,2152,2.512,2153,2.512,2154,2.512,2166,2.4,2171,1.245,2172,0.03,2357,3.81,2665,0.926,2774,2.17,3333,1.647,3404,1.562,3621,1.354,3751,2.512,4568,1.997,4918,1.997,5646,1.647,5947,1.745,5952,1.745,6124,1.485,6535,2.4,7160,3.046,7171,1.745,7583,3.66,7588,2.4,7952,2.17,7953,1.997,7992,1.997,8078,2.512,8080,2.512,8082,2.512,8618,6.71,8619,3.66,8620,2.75,8621,4.194,8622,2.75,8623,2.75,8624,5.084,8625,2.75,8626,2.75,8627,2.75,8628,6.71,8629,5.856,8630,2.75,8631,4.194,8632,5.084,8633,6.452,8634,6.71,8635,2.75,8636,2.4,8637,2.75,8638,2.4,8639,2.75,8640,2.75,8641,4.194,8642,2.17,8643,2.75,8644,2.75,8645,2.75,8646,2.75,8647,2.75,8648,2.75,8649,2.75,8650,2.75,8651,2.75,8652,2.75,8653,2.75,8654,2.75,8655,2.75,8656,2.75,8657,2.662,8658,2.662,8659,2.662,8660,2.662,8661,2.662,8662,2.662,8663,2.662,8664,2.662,8665,2.662,8666,2.662,8667,2.662,8668,2.662,8669,2.662,8670,2.662,8671,2.662,8672,2.662,8673,2.662,8674,2.662,8675,2.662,8676,2.662,8677,2.662,8678,2.662,8679,2.662,8680,2.512,8681,2.662,8682,2.662,8683,2.662,8684,2.662,8685,2.662,8686,2.662,8687,2.662,8688,2.662,8689,2.662,8690,2.662,8691,2.662,8692,2.836,8693,4.194,8694,2.836,8695,2.836,8696,2.836,8697,2.836,8698,3.309,8699,3.309,8700,4.963,8701,5.687,8702,6.452,8703,4.194,8704,4.194,8705,5.687,8706,5.687,8707,5.687,8708,6.918,8709,5.687,8710,5.687,8711,6.452,8712,5.687,8713,6.452,8714,4.194,8715,4.194,8716,4.194,8717,4.194,8718,4.194,8719,4.194,8720,4.194,8721,2.75,8722,4.194,8723,4.194,8724,4.194,8725,4.194,8726,4.194,8727,2.75,8728,4.194,8729,4.194,8730,3.309,8731,2.75,8732,2.75,8733,4.194,8734,2.75,8735,2.75,8736,4.194,8737,1.997,8738,2.75,8739,1.86,8740,1.86,8741,1.86,8742,1.86,8743,1.997,8744,3.309,8745,3.309,8746,2.17,8747,1.997,8748,1.997,8749,1.997,8750,1.997,8751,1.997,8752,2.17,8753,2.17,8754,2.17,8755,2.17,8756,2.17,8757,2.17,8758,2.17,8759,2.17,8760,2.17,8761,2.75,8762,2.17,8763,2.75,8764,2.75,8765,2.75]],["t/21",[2173,4.482]],["b/21",[2,1.539,19,0.582,24,1.76,34,1.581,35,0.447,37,0.85,38,1.679,48,0.264,53,1.334,54,0.67,66,1.29,67,0.308,78,1.512,82,0.485,88,1.704,104,1.234,105,0.675,109,3.56,115,0.315,124,0.122,130,1.414,131,1.581,138,1.988,159,2.74,160,1.205,161,0.485,162,0.399,187,1.405,190,1.541,206,1.738,231,2.1,232,0.412,233,1.387,234,1.514,242,0.609,244,0.456,261,1.506,269,0.441,274,3.579,303,2.121,311,1.001,312,1.056,315,1.341,316,0.44,317,0.44,320,0.894,321,1.183,335,1.572,341,0.739,351,1.287,353,1.207,354,1.225,355,1.546,362,1.448,365,0.788,372,1.961,376,0.71,385,1.572,386,0.668,391,0.519,393,2.319,401,0.933,402,0.663,434,1.665,435,1.65,457,0.956,467,0.894,469,1.643,473,0.019,474,0.022,475,0.684,477,1.387,481,0.507,484,0.394,487,0.809,488,1.183,489,0.45,500,0.544,501,0.709,502,0.767,503,0.21,506,0.423,512,0.787,514,1.398,515,1.512,517,2.525,521,0.685,522,0.845,523,0.47,527,1.065,528,0.361,529,0.682,533,1.557,543,1.61,559,1.597,563,0.657,564,1.1,573,1.306,574,0.743,576,0.733,582,0.817,583,1.024,585,0.574,603,0.245,604,0.676,606,0.647,611,0.956,616,0.74,617,0.829,618,0.676,622,1.333,625,1.383,626,0.784,627,0.837,628,0.852,629,0.819,630,0.889,631,0.823,633,0.867,634,1.065,636,0.956,637,0.881,638,0.903,641,0.931,643,0.885,644,1.349,645,0.874,646,0.933,648,0.933,649,1.592,651,2.6,662,1.056,667,0.508,670,2.893,677,0.799,681,1.414,682,0.607,683,0.613,684,0.236,685,1.297,694,1.594,721,0.974,723,1.183,727,0.66,732,0.236,734,1.281,753,1.317,755,0.865,758,0.798,761,1.643,768,2.282,770,2.131,773,1.789,780,0.399,781,1.996,790,1.466,791,0.809,798,0.71,801,0.798,804,1.514,809,0.594,812,0.908,814,1.506,835,1.152,851,2.275,853,1.975,858,2.153,865,1.278,903,1.056,904,1.866,926,0.939,940,0.798,961,1.448,1014,1.391,1018,1.278,1036,2.218,1037,3.171,1069,1.23,1093,1.988,1098,1.581,1113,2.897,1117,0.894,1145,1.522,1147,1.024,1162,0.783,1174,1.33,1180,0.66,1194,0.614,1204,1.119,1234,1.643,1237,1.643,1240,1.056,1259,1.229,1262,0.798,1267,3.36,1303,1.588,1316,2.195,1336,1.669,1348,1.14,1349,3.978,1351,0.908,1352,1.539,1362,0.502,1364,1.918,1366,0.924,1369,1.967,1372,0.514,1373,1.001,1374,0.761,1376,1.918,1377,1.973,1378,1.23,1379,1.364,1382,0.829,1383,1.028,1384,0.952,1385,0.969,1386,1.145,1395,0.284,1426,3.006,1428,1.024,1429,1.001,1433,0.752,1436,1.024,1437,1.466,1444,1.105,1445,1.203,1448,1.249,1449,1.262,1450,1.292,1451,1.239,1452,1.769,1459,1.37,1461,1.37,1462,2.783,1464,1.37,1466,1.526,1467,1.512,1468,1.453,1469,1.625,1472,1.572,1475,1.625,1478,1.679,1483,1.735,1485,1.781,1488,1.567,1489,1.597,1492,1.597,1493,1.546,1494,1.651,1498,1.707,1499,1.61,1501,1.61,1502,1.61,1504,1.665,1509,1.782,1510,1.782,1511,1.65,1512,1.769,1513,0.907,1514,1.387,1515,1.514,1524,1.14,1534,0.687,1596,1.669,1600,0.908,1615,0.519,1662,0.767,1673,3.405,1680,0.546,1693,1.061,1885,0.536,1927,0.869,1964,2.642,1971,1.33,2014,1.193,2032,1.833,2033,1.711,2037,1.98,2039,1.711,2040,1.711,2042,1.711,2044,1.711,2045,1.65,2046,1.466,2047,1.466,2050,1.522,2051,1.466,2052,1.581,2056,1.643,2057,1.643,2058,1.643,2060,1.643,2062,1.643,2064,1.522,2067,1.466,2071,1.643,2072,1.643,2074,1.643,2077,1.643,2078,1.711,2079,1.711,2081,1.783,2084,1.783,2085,1.783,2086,1.387,2087,1.387,2088,1.448,2092,1.448,2093,1.448,2094,1.387,2096,1.448,2099,2.081,2100,1.448,2101,1.514,2102,1.514,2104,1.514,2106,1.514,2107,1.514,2108,1.514,2110,1.514,2112,1.514,2114,1.514,2116,1.514,2117,1.514,2118,1.588,2119,1.588,2122,1.669,2124,1.669,2127,1.669,2130,1.669,2131,1.669,2133,1.669,2134,1.588,2135,1.669,2138,1.669,2139,1.783,2140,1.669,2141,1.669,2143,2.382,2144,1.669,2145,1.669,2148,1.761,2149,1.761,2150,1.761,2151,1.761,2152,1.056,2153,1.056,2154,1.056,2172,0.019,2179,0.71,2306,1.761,2307,2.663,2321,1.281,2327,4.62,2357,2.147,2401,1.761,2438,1.223,2471,0.71,2528,1.539,2539,1.988,2540,1.024,2544,1.33,2569,2.746,2576,0.832,2619,3.965,2621,1.193,2665,1.485,2752,3.299,2764,0.908,2823,1.119,2826,1.391,2833,1.061,2851,1.281,2852,3.85,2857,2.319,2871,2.399,2872,1.281,2933,4.001,2964,1.281,2973,1.14,2983,0.952,2991,1.024,2999,1.761,3008,1.866,3016,1.119,3069,1.913,3124,2.525,3137,1.056,3166,2.746,3270,1.001,3323,1.761,3420,2.557,3425,0.952,3440,3.006,3474,1.056,3526,1.183,3624,2.642,3702,2.264,3751,1.056,3893,1.669,3894,1.761,4340,2.746,4350,1.056,4449,2.382,4497,0.737,4508,1.056,4512,0.952,4518,1.391,4568,2.746,4627,1.448,4821,2.934,4822,1.866,4847,1.643,4914,3.299,4915,1.988,4916,4.273,4917,1.539,4918,2.135,4919,3.845,4942,1.183,4946,1.193,4950,1.281,4963,4.62,5014,1.539,5051,1.539,5102,1.988,5160,2.799,5211,0.798,5241,0.952,5254,3.204,5334,1.539,5396,2.557,5400,1.391,5449,0.798,5464,1.391,5482,2.135,5536,0.869,5571,1.281,5609,1.539,5644,0.952,5645,1.866,5646,1.056,5649,2.566,5650,1.001,5653,2.135,5696,1.539,5698,1.539,5700,1.281,5728,2.936,5822,5.342,5887,1.391,5939,2.213,5943,1.391,6021,2.566,6023,2.319,6025,5.106,6029,1.539,6088,3.877,6511,2.135,6533,1.119,6710,2.727,6713,1.281,6845,2.566,6850,2.319,6989,2.319,7122,2.319,7148,1.669,7203,3.204,7237,1.539,7296,1.281,7315,1.193,7382,3.299,7450,3.85,7454,1.281,7568,1.391,7577,1.119,7688,1.391,7689,2.982,7699,2.135,7733,1.391,7748,2.135,7787,1.281,7951,1.119,7954,2.566,7995,2.135,8078,1.056,8080,1.056,8082,1.056,8157,4.62,8208,1.539,8567,1.193,8571,1.281,8572,1.281,8657,2.399,8658,1.119,8659,1.119,8660,1.119,8661,1.119,8662,1.119,8663,1.119,8664,1.119,8665,1.119,8666,1.119,8667,1.119,8668,1.119,8669,1.119,8670,1.119,8671,1.119,8672,1.119,8673,1.119,8674,1.119,8675,1.119,8676,1.119,8677,1.119,8678,1.119,8679,1.119,8680,1.056,8681,1.119,8682,1.119,8683,1.119,8684,1.119,8685,1.119,8686,1.119,8687,1.119,8688,1.119,8689,1.119,8690,1.119,8691,1.119,8747,1.281,8748,1.281,8749,1.281,8750,1.281,8751,1.281,8766,1.764,8767,1.764,8768,1.764,8769,1.764,8770,1.764,8771,3.56,8772,4.902,8773,1.764,8774,1.764,8775,1.764,8776,2.94,8777,2.94,8778,1.764,8779,3.78,8780,2.566,8781,1.764,8782,1.539,8783,1.391,8784,1.764,8785,1.764,8786,1.764,8787,1.764,8788,1.764,8789,4.411,8790,4.411,8791,1.764,8792,2.94,8793,2.94,8794,1.764,8795,1.764,8796,1.764,8797,1.764,8798,1.764,8799,2.94,8800,2.319,8801,1.764,8802,1.764,8803,1.764,8804,1.764,8805,2.94,8806,2.94,8807,1.764,8808,1.764,8809,1.764,8810,1.764,8811,3.78,8812,2.94,8813,1.764,8814,2.94,8815,1.764,8816,1.764,8817,1.764,8818,2.94,8819,1.764,8820,1.764,8821,1.391,8822,2.94,8823,1.764,8824,6.304,8825,5.883,8826,1.764,8827,1.764,8828,1.764,8829,1.764,8830,2.264,8831,1.764,8832,1.764,8833,2.746,8834,1.764,8835,2.94,8836,1.764,8837,1.764,8838,2.94,8839,1.764,8840,1.764,8841,1.764,8842,5.883,8843,1.764,8844,5.883,8845,1.764,8846,1.764,8847,1.764,8848,1.764,8849,1.764,8850,1.764,8851,1.764,8852,1.764,8853,1.764,8854,1.764,8855,1.764,8856,1.764,8857,5.332,8858,1.764,8859,1.764,8860,1.764,8861,2.94,8862,4.411,8863,1.764,8864,4.411,8865,1.764,8866,2.94,8867,1.764,8868,1.764,8869,2.94,8870,1.764,8871,3.78,8872,1.764,8873,1.764,8874,1.764,8875,1.764,8876,1.764,8877,1.764,8878,1.764,8879,1.764,8880,1.764,8881,1.764,8882,1.764,8883,1.764,8884,6.472,8885,7.789,8886,1.764,8887,4.902,8888,1.764,8889,1.764,8890,1.764,8891,1.764,8892,1.764,8893,4.902,8894,1.764,8895,1.539,8896,1.764,8897,2.94,8898,1.391,8899,1.391,8900,1.764,8901,1.764,8902,4.411,8903,2.94,8904,1.764,8905,1.764,8906,1.764,8907,5.294,8908,5.294,8909,3.78,8910,3.78,8911,3.78,8912,3.78,8913,3.78,8914,3.78,8915,2.566,8916,1.764,8917,1.764,8918,5.294,8919,4.411,8920,5.883,8921,2.94,8922,1.764,8923,2.94,8924,1.764,8925,2.94,8926,1.764,8927,1.764,8928,2.94,8929,2.94,8930,1.764,8931,2.94,8932,2.94,8933,1.764,8934,1.764,8935,2.566,8936,1.764,8937,1.764,8938,3.78,8939,1.764,8940,2.94,8941,2.94,8942,1.539,8943,1.764,8944,3.48,8945,1.764,8946,1.764,8947,1.764,8948,1.764,8949,1.764,8950,1.764,8951,1.764,8952,1.764,8953,4.902,8954,1.764,8955,3.78,8956,2.94,8957,1.764,8958,2.94,8959,3.78,8960,1.764,8961,1.764,8962,3.78,8963,3.78,8964,4.411,8965,1.764,8966,1.764,8967,1.764,8968,1.764,8969,1.764,8970,1.764,8971,1.764,8972,1.764,8973,2.94,8974,1.764,8975,1.764,8976,2.94,8977,1.764,8978,1.764,8979,1.764,8980,1.281,8981,1.391,8982,1.539,8983,1.764,8984,1.764,8985,5.294,8986,5.294,8987,5.294,8988,5.294,8989,1.539,8990,1.764,8991,3.78,8992,1.764,8993,3.78,8994,1.764,8995,1.764,8996,2.982,8997,2.94,8998,1.764,8999,2.94,9000,1.764,9001,2.94,9002,1.764,9003,2.94,9004,1.764,9005,1.764,9006,2.94,9007,1.764,9008,1.539,9009,2.319,9010,1.764,9011,1.764,9012,1.539,9013,2.94,9014,1.764,9015,2.94,9016,2.94,9017,1.764,9018,1.764,9019,1.764,9020,1.764,9021,4.902,9022,1.764,9023,4.902,9024,1.764,9025,4.278,9026,1.764,9027,4.902,9028,1.764,9029,1.764,9030,4.411,9031,1.764,9032,1.764,9033,1.764,9034,1.764,9035,4.411,9036,2.319,9037,1.764,9038,1.764,9039,1.764,9040,4.902,9041,5.294,9042,5.883,9043,4.411,9044,2.94,9045,2.94,9046,2.94,9047,2.94,9048,1.764,9049,1.764,9050,1.764,9051,4.411,9052,4.902,9053,2.94,9054,2.94,9055,2.94,9056,2.94,9057,2.94,9058,4.411,9059,2.94,9060,2.94,9061,2.94,9062,2.94,9063,2.94,9064,3.48,9065,3.299,9066,1.764,9067,1.539,9068,1.764,9069,1.764,9070,4.902,9071,2.94,9072,4.411,9073,4.902,9074,2.94,9075,1.764,9076,1.764,9077,1.764,9078,1.764,9079,1.764,9080,2.94,9081,2.94,9082,2.94,9083,1.539,9084,1.539,9085,1.391,9086,1.539,9087,1.539,9088,1.539,9089,1.539,9090,1.539,9091,1.764,9092,2.982,9093,4.901,9094,1.764,9095,1.764,9096,1.764,9097,4.902,9098,1.764,9099,1.764,9100,1.764,9101,1.764,9102,1.764,9103,1.764,9104,1.764,9105,1.764,9106,1.764,9107,1.764,9108,2.94,9109,2.94,9110,2.94,9111,4.411,9112,1.193,9113,1.539,9114,3.78,9115,2.94,9116,2.94,9117,1.764,9118,1.764,9119,1.764,9120,1.764,9121,1.539,9122,1.391,9123,1.764,9124,1.764,9125,1.764,9126,1.764,9127,1.539,9128,1.764,9129,1.764,9130,1.764,9131,1.764,9132,2.94,9133,2.94,9134,1.764,9135,1.764,9136,1.764,9137,1.539,9138,1.764,9139,1.764,9140,1.391,9141,1.391,9142,2.94,9143,1.764,9144,2.94,9145,2.94,9146,2.94,9147,1.764,9148,4.411,9149,4.411,9150,2.94,9151,2.94,9152,2.94,9153,1.764,9154,1.764,9155,4.411,9156,4.411,9157,2.94,9158,2.94,9159,2.94,9160,1.764,9161,2.94,9162,1.764,9163,2.94,9164,1.764,9165,1.764,9166,1.764,9167,2.566,9168,2.94,9169,2.94,9170,1.764,9171,1.764,9172,1.764,9173,1.764,9174,3.299,9175,3.299,9176,1.764,9177,1.764,9178,2.566,9179,4.278,9180,3.78,9181,1.764,9182,1.764,9183,2.94,9184,1.539,9185,1.764,9186,1.764,9187,2.94,9188,1.764,9189,1.764,9190,1.764,9191,1.764,9192,1.764,9193,1.764,9194,1.764,9195,1.764,9196,1.764,9197,1.764,9198,1.764,9199,1.764,9200,1.764,9201,1.764,9202,1.764,9203,1.764,9204,1.764,9205,1.764,9206,1.764,9207,1.764,9208,1.764,9209,1.764,9210,1.764,9211,1.764,9212,1.764,9213,1.764,9214,1.764,9215,1.764,9216,1.764,9217,1.764,9218,1.764,9219,1.764,9220,1.764,9221,1.764,9222,1.764,9223,1.764,9224,1.764,9225,1.764,9226,1.764,9227,1.764,9228,1.764,9229,1.764,9230,1.764,9231,1.764,9232,2.566,9233,2.566,9234,1.764,9235,1.539,9236,1.764,9237,1.764,9238,1.764,9239,1.764,9240,1.764,9241,1.764,9242,1.764,9243,1.764,9244,2.94,9245,1.764,9246,2.566,9247,1.281,9248,1.391,9249,1.539,9250,1.764,9251,3.299,9252,1.764,9253,1.764,9254,1.539,9255,1.764,9256,1.764,9257,1.764,9258,1.764]],["t/22",[316,0.618,3761,3.603]],["b/22",[35,0.438,37,0.809,47,2.212,53,1.302,54,0.633,59,1.523,66,0.955,67,0.36,104,1.175,105,0.605,115,0.989,124,0.122,160,1.144,187,1.316,232,0.384,244,0.413,266,1.523,269,0.419,316,0.829,317,0.829,320,0.809,321,1.216,341,0.622,353,1.216,354,1.363,362,1.21,365,0.713,372,1.426,386,0.622,401,0.911,402,0.593,469,2.405,473,0.059,474,0.052,481,0.53,484,1.075,500,0.511,512,0.876,514,1.458,515,1.559,517,3.504,522,0.744,527,1.335,529,0.712,563,0.605,574,0.53,606,0.756,616,0.735,617,0.977,618,0.564,622,1.056,625,1.095,626,0.682,627,0.744,628,0.776,629,0.713,630,0.744,631,0.744,633,0.809,634,1.778,636,2.499,637,0.829,638,0.842,641,0.842,643,0.842,645,0.842,646,0.911,648,0.911,662,3.314,667,0.955,677,0.791,679,2.069,682,0.685,683,0.946,684,0.911,685,1.627,721,1.753,786,1.426,835,0.829,962,2.724,963,2.503,1098,2.844,1162,1.473,1272,4.018,1273,1.523,1348,2.146,1369,2.211,1372,0.674,1374,0.859,1382,0.809,1383,1.019,1385,0.946,1386,1.134,1395,1.27,1428,1.928,1433,0.986,1444,1.095,1445,1.175,1448,1.258,1449,1.216,1450,1.302,1451,1.302,1452,2.658,1459,1.439,1461,1.439,1464,1.171,1513,1.258,1516,1.812,1534,1.292,1662,3.202,1663,2.724,1664,2.313,1680,1.209,1693,1.996,1712,2.313,1962,3.314,1992,3.674,1994,2.988,2028,4.018,2171,2.503,2172,0.059,2261,2.957,2409,4.6,2973,2.146,2974,4.94,2975,3.862,2991,2.678,2992,1.968,3267,3.628,4065,3.511,4068,4.6,4069,3.741,4070,4.6,4071,3.741,4086,4.828,4087,5.936,4089,4.828,4090,5.366,4091,4.364,4092,5.366,4093,4.364,4094,4.364,4350,3.314,4425,4.364,4509,3.741,4512,2.988,5007,3.741,5448,4.877,5540,4.364,5784,5.581,5956,4.6,5957,4.6,6027,5.366,6116,4.364,6131,4.364,6288,5.936,6710,3.504,7114,4.018,7168,4.364,7632,4.364,7977,4.828,8064,4.364,8071,4.828,8696,3.741,8697,3.741,9067,4.828,9247,4.018,9259,4.828,9260,7.366,9261,4.364,9262,7.684,9263,4.018,9264,4.018,9265,4.364,9266,4.828,9267,3.314,9268,5.532,9269,5.532,9270,5.532,9271,5.532,9272,5.532,9273,5.532,9274,6.802,9275,4.828,9276,6.802,9277,5.532,9278,5.532,9279,4.364,9280,5.532,9281,5.532,9282,5.532,9283,5.532,9284,5.532,9285,5.532,9286,5.532,9287,5.532,9288,5.532,9289,5.532,9290,5.532,9291,5.532,9292,5.532,9293,5.532,9294,4.828,9295,5.532]],["t/23",[3438,3.73]],["b/23",[374,4.576,375,4.576,376,2.724,473,0.073,474,0.058,503,0.805,2172,0.073,9296,5.338]],["t/24",[67,0.183,5130,3.603]],["b/24",[19,1.649,22,1.309,35,0.444,37,0.868,38,1.28,44,1.004,47,1.074,53,0.92,54,0.644,66,1.075,67,0.379,68,2.7,78,1.545,88,1.16,97,1.563,104,1.075,105,0.652,111,2.879,115,1.013,116,1.004,124,0.122,170,0.774,175,0.971,187,1.242,232,0.398,242,0.531,244,0.423,266,1.713,269,0.424,274,3.218,315,1.461,316,0.495,317,0.495,320,0.847,321,1.013,335,0.824,341,0.709,353,1.183,354,1.048,355,0.909,365,0.812,385,0.824,386,0.621,391,1.666,401,0.924,402,0.687,460,2.662,473,0.035,474,0.037,481,0.316,484,0.997,500,0.543,501,0.442,512,0.802,514,1.634,515,1.4,517,1.701,521,0.88,522,0.839,523,1.762,525,1.705,527,0.797,529,0.425,533,1.666,543,1.461,553,2.024,559,0.939,563,0.636,573,0.879,574,0.789,576,0.824,582,0.724,596,1.004,604,0.59,606,0.634,608,1.281,616,0.709,617,0.674,618,0.649,622,1.134,625,1.175,626,0.791,627,0.848,628,0.875,629,0.803,630,0.839,631,0.828,633,0.885,637,0.932,638,0.904,641,0.882,643,0.882,644,1.323,645,0.882,646,0.954,648,0.954,667,0.57,668,0.971,677,0.823,679,1.798,680,1.038,682,0.702,683,1.078,684,1.037,685,0.971,710,1.065,721,1.779,732,0.643,751,1.38,753,2.405,755,0.971,759,1.074,762,1.435,767,0.531,770,1.435,773,1.004,786,0.851,812,2.476,835,1.19,851,1.192,906,1.557,926,0.92,993,1.192,1018,1.435,1050,2.933,1086,3.257,1087,1.494,1104,1.111,1145,1.16,1147,1.15,1189,1.701,1196,1.111,1240,1.978,1261,1.494,1273,1.713,1366,2.08,1369,2.109,1372,0.759,1374,0.746,1376,1.16,1377,1.329,1381,2.095,1382,0.868,1383,1.034,1384,1.783,1385,0.92,1386,1.103,1395,1.375,1396,1.798,1426,2.729,1429,2.729,1433,0.759,1444,1.065,1445,1.075,1448,1.048,1449,1.013,1450,1.085,1451,0.92,1452,2.635,1456,3.407,1459,1.4,1460,3.407,1461,1.017,1464,0.699,1466,0.746,1467,0.771,1468,0.699,1469,0.851,1472,0.824,1475,0.851,1478,1.28,1483,0.909,1485,0.909,1488,0.879,1489,0.939,1492,0.939,1505,3.236,1507,3.061,1513,1.507,1517,1.734,1518,1.626,1519,2.089,1642,3.25,1656,4.522,1662,2.875,1663,2.367,1664,1.38,1666,1.701,1680,1.233,1712,2.602,1713,2.398,1714,3.05,1767,3.49,1770,2.233,1861,3.95,1885,2.33,1914,3.95,1943,0.531,2064,2.281,2067,2.198,2129,4.116,2139,1.557,2172,0.035,2189,2.119,2279,1.875,2325,1.875,2409,4.209,2539,3.25,2547,4.52,2572,3.25,2723,3.394,2777,2.398,2823,2.095,2833,2.246,2942,2.398,2948,2.605,2949,2.233,2973,2.414,2991,1.15,2992,2.123,3319,1.978,3370,2.398,3392,3.206,3504,2.605,3679,3.791,3751,1.978,3803,1.38,3892,4.268,4061,2.398,4065,2.095,4067,2.605,4084,3.596,4102,4.52,4340,2.398,4343,2.398,4410,4.198,4449,2.596,4466,2.233,4469,3.728,4497,1.38,4910,2.605,4911,2.605,4942,1.329,4966,1.875,5004,3.54,5006,3.065,5070,1.626,5078,2.605,5138,2.398,5139,5.432,5140,2.398,5141,2.233,5142,2.605,5143,2.881,5144,2.881,5145,2.881,5146,2.881,5151,3.832,5157,4.194,5158,2.398,5159,4.194,5160,3.596,5161,2.881,5162,4.194,5163,4.194,5164,2.881,5165,2.881,5166,4.945,5167,2.881,5168,4.194,5169,3.791,5170,3.791,5171,3.791,5172,2.881,5173,4.194,5174,4.194,5175,4.194,5176,4.194,5177,4.194,5178,4.194,5179,4.194,5180,2.881,5181,2.881,5182,4.194,5183,2.881,5184,2.881,5209,1.701,5210,2.919,5211,2.993,5212,2.367,5213,2.367,5214,2.367,5215,2.881,5216,2.605,5217,2.605,5218,4.194,5219,2.881,5220,4.47,5221,4.194,5222,2.881,5225,2.881,5233,3.791,5234,3.791,5236,2.233,5246,1.875,5252,2.398,5254,2.398,5271,3.791,5273,2.605,5342,2.605,5408,2.881,5409,3.791,5411,2.605,5413,2.881,5414,2.881,5415,2.881,5416,2.881,5417,2.881,5418,2.881,5419,2.605,5420,5.773,5421,2.881,5422,5.432,5423,2.881,5424,2.881,5425,2.881,5426,2.881,5448,3.05,5482,2.398,5497,2.729,5501,2.398,5505,2.398,5506,2.881,5507,2.605,5508,2.881,5509,2.881,5510,2.881,5511,2.881,5512,2.881,5513,2.881,5521,1.783,5525,2.605,5526,2.605,5527,2.605,5528,2.605,5529,2.605,5530,2.605,5531,2.605,5532,2.605,5533,2.605,5534,2.605,5535,2.605,5536,1.626,5537,2.605,5555,2.605,5576,2.233,5579,2.233,5610,3.05,5613,4.945,5644,3.572,5645,4.198,5646,1.978,5647,2.605,5648,4.91,5650,2.729,5651,2.881,5694,3.25,5707,4.945,5708,2.881,5709,2.881,5710,2.881,5711,2.881,5712,2.881,5713,2.881,5714,2.881,5715,2.881,5716,2.881,5717,2.881,5718,2.881,5719,2.881,5720,2.881,5721,2.881,5722,2.881,5723,2.881,5724,2.605,5725,2.881,5726,2.881,5727,2.881,5728,1.978,5729,2.881,5730,2.881,5731,2.881,5732,2.881,5733,2.881,5734,2.881,5735,2.881,5736,2.881,5737,2.881,5738,2.881,5739,2.881,5740,2.881,5741,2.881,5742,2.881,5743,2.881,5744,2.881,5745,2.881,5746,2.881,5747,2.881,5748,2.881,5749,2.881,5750,2.881,5751,2.881,5752,2.881,5753,2.881,5754,2.881,5755,2.881,5756,2.881,5757,2.881,5758,2.881,5759,2.881,5760,2.881,5761,2.881,5762,2.881,5763,2.881,5764,2.881,5765,2.881,5766,2.881,5767,2.881,5768,2.881,5769,2.881,5770,2.881,5771,2.881,5786,2.605,5856,3.05,5879,2.605,5880,2.881,5881,2.881,5882,2.881,5883,2.881,5884,2.881,5885,4.194,5886,2.881,5887,4.91,5888,5.432,5889,2.881,5890,2.881,5891,5.432,5892,4.194,5893,2.881,5894,4.194,5895,2.881,5896,2.881,5897,2.881,5898,2.881,5899,2.881,5900,2.881,5901,2.881,5902,2.881,5903,2.881,5904,2.881,5905,2.881,5906,2.881,5907,2.881,5908,2.881,5909,2.881,5910,2.881,5911,2.881,5914,3.05,5918,2.881,5919,2.881,5920,4.194,5921,4.194,5922,4.194,5923,2.881,5924,2.881,5925,2.881,5926,2.881,5927,2.881,5928,2.605,5929,2.881,5930,2.605,5931,2.881,5932,2.881,5933,2.881,5934,2.881,5935,2.881,5936,2.881,5937,2.881,5938,2.881,5939,1.38,5940,4.194,5941,2.881,5942,2.881,5943,2.605,5956,3.25,5957,3.25,6006,2.881,6008,2.881,6040,2.476,6048,2.605,6059,2.881,6085,3.394,6086,5.432,6087,2.881,6088,3.05,6089,4.194,6090,3.728,6091,2.605,6092,2.398,6093,2.881,6094,2.398,6095,2.605,6096,2.605,6097,2.881,6098,4.194,6099,4.194,6100,4.194,6101,4.194,6102,4.194,6103,4.194,6104,4.194,6105,4.194,6106,2.605,6107,2.881,6108,2.881,6109,4.194,6110,2.881,6111,2.881,6112,2.881,6113,4.194,6115,4.194,6116,2.605,6117,2.881,6118,4.194,6119,2.881,6120,4.194,6121,2.881,6122,4.194,6123,3.791,6124,1.783,6125,2.881,6126,4.194,6127,2.605,6128,2.233,6129,2.233,6130,2.881,6219,2.605,6294,2.605,6295,2.398,6297,3.791,6298,3.791,6299,3.791,6300,2.605,6301,2.605,6302,2.605,6303,2.605,6304,2.605,6305,2.605,6306,2.605,6307,2.881,6308,2.605,6309,2.605,6310,2.605,6311,2.605,6312,2.605,6313,2.605,6314,2.605,6315,2.605,6316,2.605,6317,2.605,6318,2.605,6319,2.605,6320,5.218,6321,2.605,6322,4.91,6323,4.91,6324,4.91,8078,1.978,8080,1.978,8082,1.978,8681,2.095,8682,2.095,8683,2.095,8684,2.095,8685,2.095,8686,2.095,8687,2.095,8688,2.095,8689,2.095,8690,2.095,8691,2.095,8692,2.233,8694,2.233,8695,2.233,9279,3.791,9296,2.605,9297,2.398,9298,3.302,9299,3.302,9300,3.302,9301,3.302,9302,2.605,9303,3.302,9304,3.302,9305,6.224,9306,3.302,9307,3.302]],["t/25",[9308,5.135]],["b/25",[19,1.595,35,0.44,36,1.69,37,0.831,38,1.739,47,2.495,53,1.337,54,0.614,59,2.28,66,1.206,67,0.365,68,2.275,78,1.003,96,1.795,104,1.206,105,0.574,111,2.572,115,0.768,124,0.122,170,0.93,177,0.978,182,1.107,206,1.644,232,0.378,242,1.051,244,0.545,266,1.59,269,0.411,299,1.816,303,1.8,311,2.438,312,2.572,316,0.643,317,0.643,320,0.831,321,1.249,335,1.742,341,0.639,353,1.249,354,1.292,355,1.59,365,0.732,372,1.107,385,1.629,386,0.574,401,0.935,402,0.609,434,1.816,473,0.046,474,0.044,481,0.699,484,1.005,500,0.539,503,0.511,512,0.9,514,1.656,515,1.223,522,0.821,523,1.143,525,1.107,533,2.143,543,1.756,553,1.396,563,0.623,574,0.804,576,1.071,582,0.888,606,0.757,609,3.216,616,0.639,617,0.831,618,0.605,622,1.166,625,1.209,626,0.7,627,0.764,628,0.797,629,0.732,630,0.764,631,0.798,633,0.831,634,1.036,636,1.879,637,1.046,638,0.865,641,0.865,643,0.865,644,1.182,645,0.865,646,0.935,648,0.935,667,1.128,668,1.699,677,0.731,679,2.161,682,0.902,683,0.971,684,0.773,685,1.699,717,1.943,719,2.725,721,1.8,751,1.795,753,2.434,767,0.691,770,2.839,773,1.985,801,2.614,926,1.044,947,2.614,1101,1.606,1162,2.127,1284,4.144,1364,3.036,1366,2.196,1369,1.59,1372,0.713,1373,2.438,1374,0.667,1376,1.945,1377,2.934,1378,2.272,1379,2.521,1382,0.831,1383,1.046,1385,0.971,1386,1.165,1395,1.297,1426,3.28,1429,3.28,1433,0.874,1436,2.434,1437,3.065,1440,2.614,1441,3.08,1444,1.124,1445,1.206,1448,1.292,1449,1.249,1450,1.337,1451,1.337,1452,2.631,1457,1.606,1459,1.478,1461,1.478,1464,1.478,1466,1.579,1467,1.632,1468,1.543,1469,1.8,1472,1.742,1475,1.8,1478,1.739,1483,1.59,1485,1.59,1488,1.539,1489,1.644,1492,1.644,1493,1.59,1494,1.699,1496,2.212,1498,1.756,1499,1.756,1501,1.756,1502,1.756,1504,1.816,1505,2.839,1509,1.944,1510,1.944,1511,1.445,1512,1.549,1513,1.349,1516,1.941,1517,1.549,1528,2.438,1662,2.512,1663,2.114,1664,2.416,1665,4.558,1680,1.185,1712,2.416,1714,2.725,1853,2.521,1885,1.756,1901,3.387,1943,0.93,1994,2.319,2032,1.606,2098,2.025,2171,2.614,2172,0.046,2267,3.667,2409,2.903,2544,2.614,2777,3.118,2910,2.025,2915,2.025,2973,1.665,2975,3.28,2992,1.818,2993,3.667,2999,2.572,3067,3.387,3746,2.572,3808,2.025,3892,3.461,3893,4.487,3894,4.595,4031,5.922,4065,2.725,4068,3.907,4069,2.903,4070,3.907,4071,2.903,4072,4.196,4176,2.572,4343,3.118,4354,2.725,4449,3.527,4504,2.438,4512,2.319,4625,2.572,4810,2.839,4822,4.764,4830,1.943,4937,3.387,4942,1.728,4950,3.118,4966,3.28,5007,2.903,5008,2.903,5010,2.512,5211,1.943,5212,2.114,5213,2.114,5259,3.118,5497,2.438,5521,3.12,5576,2.903,5645,2.725,5808,3.387,5810,3.387,5820,3.461,5856,3.667,5863,3.387,5914,2.725,5939,2.416,5956,3.907,5957,3.907,6048,3.387,6066,4.196,6068,4.558,6123,3.387,6127,3.387,6128,2.903,6129,2.903,6181,3.747,6294,3.387,6295,3.118,6296,3.747,6297,4.558,6298,4.558,6299,4.558,6300,3.387,6301,3.387,6302,3.387,6303,3.387,6304,3.387,6305,3.387,6306,3.387,6308,3.387,6309,3.387,6310,3.387,6311,3.387,6312,3.387,6313,3.387,6314,3.387,6315,3.387,6316,3.387,6317,3.387,6318,3.387,6319,3.387,6320,5.151,6321,3.387,6322,4.558,6323,4.558,6324,4.558,6499,4.196,6848,3.387,7041,5.75,7042,4.416,7047,5.042,7052,3.747,7114,3.118,7126,3.118,7148,2.438,7168,3.387,7171,2.725,7181,3.387,7951,4.626,8061,3.747,8062,3.747,8063,5.042,8065,3.747,8552,3.387,8678,2.725,8679,2.725,8680,2.572,8996,3.387,9263,3.118,9264,3.118,9265,3.387,9279,3.387,9296,3.387,9297,3.118,9309,4.558,9310,3.747,9311,3.747,9312,4.293,9313,4.293,9314,4.293,9315,4.293,9316,4.293,9317,4.293,9318,3.747,9319,3.387,9320,4.293,9321,3.747,9322,4.293,9323,4.293,9324,4.293,9325,4.293,9326,4.293,9327,4.293,9328,4.293,9329,3.747,9330,4.293,9331,5.777,9332,4.293,9333,4.293,9334,4.293,9335,4.293,9336,4.293,9337,5.777,9338,4.293,9339,4.293,9340,4.293,9341,4.293,9342,4.293,9343,5.777,9344,2.725,9345,2.725,9346,3.747,9347,4.293,9348,4.293,9349,3.747,9350,4.293,9351,4.293,9352,4.293,9353,4.293,9354,3.118,9355,4.293,9356,3.118,9357,4.293,9358,4.293,9359,4.293,9360,3.747,9361,5.777,9362,4.293,9363,3.118,9364,4.558,9365,3.747,9366,3.747,9367,3.387,9368,3.387,9369,5.777,9370,4.293,9371,4.293,9372,4.293,9373,4.293,9374,3.747,9375,7.289,9376,7.289,9377,5.699,9378,6.361,9379,3.461,9380,4.293,9381,5.777,9382,4.293,9383,4.293,9384,4.293,9385,5.777,9386,4.293,9387,4.293,9388,4.293,9389,6.53,9390,5.777,9391,3.387,9392,4.293]],["t/26",[7381,4.482]],["b/26",[11,1.148,19,0.53,22,0.53,24,1.354,26,0.69,34,1.12,35,0.442,36,0.567,37,0.595,38,1.332,49,0.788,53,0.957,54,0.477,66,0.463,67,0.35,73,2.113,74,2.113,78,0.96,97,1.968,104,0.864,105,0.477,123,1.447,124,0.122,130,1.871,131,1.718,158,3.818,159,1.787,160,1.189,161,0.737,170,0.431,182,1.56,187,1.379,195,0.69,206,1.423,231,1.871,232,0.396,233,1.263,234,1.38,242,0.431,244,0.452,261,1.952,266,0.737,269,0.362,270,2.113,271,2.113,274,2.84,303,2.119,311,1.521,312,1.604,317,0.401,320,0.595,321,0.894,327,2.113,328,2.113,335,1.248,341,0.513,353,0.894,354,0.925,355,1.377,360,1.7,362,1.094,365,0.524,372,1.714,385,1.248,386,0.575,391,1.209,401,0.67,402,0.489,411,1.718,434,1.572,435,1.871,467,1.25,473,0.029,474,0.031,475,1.039,480,1.039,481,0.7,483,0.925,484,1.083,490,1.25,493,0.814,500,0.545,501,0.67,503,0.319,506,0.394,508,0.871,510,1.7,512,0.856,514,1.421,515,1.74,517,4.166,521,0.94,522,0.699,526,1.164,527,0.647,528,0.548,529,0.779,536,1.263,538,1.432,540,2.334,541,2.463,551,2.305,559,1.721,563,0.641,564,1.002,572,3.174,573,1.701,574,0.74,575,1.86,580,2.776,582,0.926,583,0.933,603,0.372,606,0.7,608,1.594,616,0.627,617,0.319,618,0.465,622,1.322,625,1.364,626,0.732,627,0.547,628,0.571,629,0.524,630,0.547,631,0.547,633,0.595,634,1.461,638,0.619,641,0.929,643,0.619,644,1.665,645,0.619,646,0.67,648,0.67,649,0.967,650,2.438,651,1.383,667,1.368,672,1.945,675,0.737,677,0.822,679,2.566,680,2.008,681,1.002,683,0.954,684,0.359,685,2.017,687,0.842,694,0.871,700,1.12,702,3.082,713,1.805,721,1.714,731,2.854,732,0.67,733,1.604,748,0.871,753,1.743,761,1.787,765,0.933,767,0.662,768,2.579,770,1.164,773,2.086,786,0.69,787,1.521,791,0.737,798,1.078,835,1.054,851,2.024,853,1.095,855,1.537,858,1.337,864,0.901,870,3.578,886,0.967,898,1.604,926,1.128,1000,2.985,1069,1.824,1100,1.521,1101,1.002,1104,1.683,1117,0.814,1145,1.541,1147,1.432,1162,1.095,1180,1.002,1182,3.945,1183,2.334,1196,0.901,1211,1.212,1234,1.164,1237,1.164,1240,1.604,1259,1.12,1262,2.263,1267,1.7,1272,1.945,1273,1.976,1285,1.718,1290,2.108,1299,1.7,1344,1.521,1366,0.842,1369,0.737,1372,0.457,1376,0.992,1377,1.078,1382,0.595,1383,0.749,1385,0.954,1386,0.834,1433,0.751,1444,0.805,1445,0.864,1448,0.925,1449,1.258,1450,0.957,1451,0.957,1452,2.184,1456,1.38,1459,1.52,1460,2.117,1461,1.058,1464,1.058,1466,1.131,1467,1.168,1468,1.407,1469,1.289,1472,1.248,1475,1.289,1478,1.332,1483,1.377,1485,1.377,1488,1.332,1489,1.423,1492,1.423,1493,1.377,1494,1.471,1496,1.38,1497,2.462,1498,1.52,1499,1.52,1501,1.52,1502,1.52,1504,1.572,1509,1.683,1510,1.683,1511,1.683,1512,1.805,1513,0.496,1514,1.263,1515,1.38,1516,0.713,1664,1.12,1667,1.521,1913,1.319,1919,1.7,1964,3.36,1967,1.263,1999,2.024,2032,1.871,2033,1.94,2037,1.871,2039,1.94,2040,1.94,2042,1.94,2044,1.94,2045,1.871,2046,1.94,2047,1.94,2050,2.013,2051,1.94,2052,2.091,2056,1.787,2057,1.787,2058,1.787,2060,1.787,2062,1.787,2064,1.654,2067,1.594,2071,1.164,2072,1.164,2074,1.164,2077,1.164,2078,1.212,2079,1.212,2081,1.263,2084,1.263,2085,1.263,2086,1.263,2087,1.263,2088,1.319,2092,1.319,2093,1.319,2094,1.263,2096,1.319,2099,1.263,2100,1.319,2101,1.38,2102,1.38,2104,1.38,2106,1.38,2107,1.38,2108,1.38,2110,1.38,2112,1.38,2114,1.38,2116,1.38,2117,1.38,2118,1.447,2119,1.447,2122,1.521,2124,1.521,2127,1.521,2130,1.521,2131,1.521,2133,1.521,2134,1.447,2135,1.521,2138,1.521,2139,1.263,2140,1.521,2141,1.521,2143,1.447,2144,1.521,2145,1.521,2148,1.604,2149,1.604,2150,1.604,2151,1.604,2152,1.604,2153,1.604,2154,1.604,2160,1.811,2170,5.075,2172,0.029,2175,1.649,2261,1.787,2267,2.608,2322,1.12,2471,2.258,2540,0.933,2613,3.84,2682,1.38,2723,1.604,2806,1.039,2832,2.338,2845,5.649,2846,1.811,2992,1.791,3016,2.608,3020,3.425,3029,1.604,3039,3.029,3042,2.113,3045,3.945,3046,3.242,3066,3.793,3069,1.968,3078,2.462,3101,1.447,3122,4.318,3124,3.289,3139,3.185,3161,3.945,3178,2.024,3179,2.462,3279,2.113,3333,2.462,3341,1.12,3342,2.113,3394,1.604,3404,3.435,3420,1.811,3425,1.447,3460,3.587,3623,2.985,3632,1.604,3653,3.624,3666,1.7,3670,2.338,3702,3.36,3742,2.113,3751,1.604,3806,2.113,4114,3.945,4201,2.338,4248,1.945,4289,3.587,4425,2.113,4428,1.945,4431,3.587,4462,3.242,4466,2.78,4469,1.604,4506,1.38,4508,2.462,4512,3.591,4521,2.334,4627,1.319,4760,2.113,4821,1.164,4847,1.164,4852,4.557,4942,1.078,5000,2.113,5050,2.985,5344,4.365,5346,2.338,5396,1.811,5515,2.113,5548,4.773,5914,1.7,5939,1.12,5947,1.7,5950,2.113,5952,1.7,6076,1.7,6124,2.22,6424,5.549,6710,2.117,6716,4.425,7013,1.945,7142,2.113,7148,3.185,7150,2.113,7171,2.608,7388,4.365,7395,3.587,7397,2.338,7434,2.338,7438,3.587,7439,3.587,7442,2.338,7476,4.365,7492,2.338,7532,5.802,7536,2.338,7537,2.338,7539,3.945,7540,2.338,7541,6.738,7542,2.338,7543,2.338,7546,6.683,7548,5.28,7555,2.338,7556,2.338,7566,2.338,7567,2.338,7569,3.587,7570,5.28,7571,4.895,7572,3.587,7573,3.587,7574,3.587,7576,2.338,7584,4.895,7585,5.28,7587,2.338,7595,5.802,7596,2.338,7598,3.587,7599,3.587,7600,3.587,7601,2.338,7602,3.587,7603,2.338,7604,2.338,7606,2.338,7607,2.338,7608,2.338,7609,2.338,7610,2.338,7611,2.338,7612,2.338,7613,3.587,7622,3.587,7623,2.338,7624,2.338,7625,2.338,7626,5.573,7627,4.895,7628,2.338,7629,3.632,7631,3.587,7632,4.773,7633,2.338,7634,2.338,7637,5.28,7643,3.242,7652,3.242,7653,6.468,7655,2.338,7656,2.338,7658,4.895,7659,2.338,7660,5.802,7661,5.28,7662,6.834,7664,3.587,7666,2.338,7667,2.338,7669,6.375,7670,4.365,7671,3.587,7672,2.338,7677,2.338,7678,3.587,7679,2.338,7680,2.338,7682,2.338,7683,3.587,7684,2.338,7685,2.338,7686,2.338,7688,2.113,7689,5.412,7690,4.895,7691,5.987,7692,6.139,7693,4.895,7694,3.587,7695,2.338,7696,2.338,7697,3.587,7698,3.587,7700,2.113,7703,4.425,7710,3.587,7712,2.338,7713,5.28,7715,2.338,7716,4.895,7724,2.338,7725,2.338,7732,5.28,7733,4.773,7734,5.28,7735,5.28,7736,4.092,7737,2.338,7738,5.28,7739,5.28,7740,5.28,7741,5.28,7742,2.338,7743,4.365,7745,2.338,7751,4.365,7753,2.338,7754,5.28,7816,1.945,7836,2.338,7861,2.338,7952,3.242,7953,2.985,7992,1.945,7995,1.945,7998,2.113,8001,2.113,8043,4.365,8078,1.604,8080,1.604,8082,1.604,8443,2.113,8539,2.338,8567,1.811,8619,5.28,8657,1.7,8658,1.7,8659,1.7,8660,1.7,8661,1.7,8662,1.7,8663,1.7,8664,1.7,8665,1.7,8666,1.7,8667,1.7,8668,1.7,8669,1.7,8670,1.7,8671,1.7,8672,1.7,8673,1.7,8674,1.7,8675,1.7,8676,1.7,8677,1.7,8678,1.7,8679,1.7,8680,1.604,8681,1.7,8682,1.7,8683,1.7,8684,1.7,8685,1.7,8686,1.7,8687,1.7,8688,1.7,8689,1.7,8690,1.7,8691,1.7,8692,1.811,8694,1.811,8695,1.811,8696,1.811,8697,1.811,8698,2.113,8699,2.113,8730,2.113,8739,1.811,8740,1.811,8741,1.811,8742,1.811,8743,1.945,8744,2.113,8745,2.113,8746,3.242,8747,1.945,8748,1.945,8749,1.945,8750,1.945,8751,1.945,8752,2.113,8753,2.113,8754,2.113,8755,2.113,8756,2.113,8757,2.113,8758,2.113,8759,2.113,8760,2.113,8762,2.113,8980,1.945,8981,2.113,8982,2.338,9127,4.365,9140,2.113,9141,2.113,9259,2.338,9302,2.113,9393,4.11,9394,2.678,9395,2.678,9396,2.678,9397,2.678,9398,4.11,9399,2.678,9400,2.678,9401,2.678,9402,2.678,9403,5.001,9404,6.648,9405,5.001,9406,2.678,9407,2.678,9408,4.11,9409,2.678,9410,4.11,9411,2.678,9412,6.385,9413,5.001,9414,6.385,9415,2.678,9416,2.678,9417,4.11,9418,2.678,9419,2.678,9420,2.678,9421,2.678,9422,4.365,9423,2.678,9424,2.678,9425,4.11,9426,2.678,9427,2.678,9428,5.609,9429,2.678,9430,2.678,9431,2.678,9432,4.11,9433,2.678,9434,2.678,9435,2.678,9436,2.678,9437,2.678,9438,5.001,9439,2.678,9440,5.001,9441,2.678,9442,6.05,9443,2.678,9444,2.678,9445,2.678,9446,2.678,9447,2.678,9448,2.678,9449,2.678,9450,2.678,9451,4.11,9452,2.678,9453,2.678,9454,2.678,9455,2.678,9456,2.678,9457,2.678,9458,5.001,9459,5.609,9460,2.678,9461,2.678,9462,2.678,9463,6.05,9464,2.678,9465,4.11,9466,5.001,9467,2.678,9468,4.11,9469,2.678,9470,4.11,9471,2.678,9472,2.678,9473,2.678,9474,2.678,9475,4.11,9476,2.678,9477,2.678,9478,2.678,9479,2.678,9480,2.678,9481,2.678,9482,2.678,9483,2.678,9484,2.678,9485,2.678,9486,4.11,9487,2.678,9488,2.678,9489,4.11,9490,2.678,9491,2.678,9492,2.678,9493,5.001,9494,2.678,9495,2.338,9496,2.338,9497,2.338,9498,2.338,9499,2.338,9500,2.338,9501,2.678,9502,2.338,9503,2.338,9504,2.338,9505,2.338,9506,2.113,9507,2.338,9508,4.11,9509,2.338,9510,2.338,9511,2.338,9512,2.338,9513,2.338,9514,2.338,9515,2.338,9516,4.11,9517,2.338,9518,3.587,9519,2.678,9520,4.11,9521,4.11,9522,2.113,9523,2.678,9524,2.113,9525,2.338,9526,2.338,9527,2.338,9528,2.338,9529,2.338,9530,2.338,9531,2.338,9532,2.338,9533,2.338,9534,2.338,9535,2.678,9536,2.338,9537,2.338,9538,2.338,9539,2.338,9540,2.678,9541,2.338,9542,2.338,9543,2.338,9544,2.678,9545,2.338,9546,2.338,9547,2.338,9548,2.338,9549,2.338,9550,2.338,9551,2.338,9552,2.338,9553,2.678,9554,2.338,9555,2.338,9556,2.338,9557,2.678,9558,2.338,9559,2.678,9560,2.678,9561,2.678,9562,2.678,9563,2.338,9564,2.338,9565,2.678,9566,2.338,9567,2.338,9568,2.678,9569,2.338,9570,2.338,9571,2.338,9572,2.338,9573,2.338,9574,2.338,9575,2.338,9576,5.609,9577,2.678,9578,2.338,9579,2.338,9580,2.338,9581,2.338,9582,2.678,9583,2.338,9584,2.338,9585,2.338,9586,2.338,9587,2.338,9588,2.338,9589,2.338,9590,2.338,9591,2.338,9592,2.338,9593,2.338,9594,2.338,9595,2.338,9596,2.338,9597,2.338,9598,2.338,9599,2.338,9600,2.338,9601,2.338,9602,2.338,9603,2.338,9604,2.338,9605,2.338,9606,2.338,9607,2.338,9608,2.338,9609,2.338,9610,2.338,9611,2.338,9612,2.338,9613,2.338,9614,2.338,9615,2.338,9616,2.338,9617,2.338,9618,2.338,9619,2.338,9620,2.338,9621,2.338,9622,2.678,9623,2.338,9624,2.338,9625,2.338,9626,2.338,9627,2.338,9628,2.338,9629,2.338,9630,2.338,9631,2.338,9632,2.338,9633,2.338,9634,2.338,9635,2.338,9636,2.678,9637,2.678,9638,2.678,9639,2.678,9640,2.678,9641,2.678,9642,2.678,9643,2.678,9644,2.678,9645,2.678,9646,2.678,9647,2.678,9648,2.678,9649,2.678,9650,2.678,9651,2.678,9652,2.678,9653,2.678,9654,2.678,9655,2.678,9656,2.678,9657,2.678,9658,2.678,9659,2.678,9660,2.678,9661,2.678,9662,2.678,9663,2.678,9664,2.678,9665,2.678,9666,2.678,9667,2.678,9668,2.678,9669,2.678,9670,2.678,9671,2.678,9672,2.678,9673,2.678,9674,4.11,9675,2.678,9676,2.678,9677,5.609,9678,2.678,9679,2.678,9680,2.678,9681,2.678,9682,2.338,9683,2.678,9684,2.678,9685,2.678,9686,2.678,9687,2.678,9688,2.678,9689,2.678,9690,2.678,9691,2.678,9692,2.678,9693,2.678,9694,2.678,9695,2.678,9696,2.678,9697,2.678,9698,2.678,9699,2.678,9700,2.678,9701,2.678,9702,2.678,9703,2.678,9704,2.678,9705,2.678,9706,2.678,9707,2.678,9708,5.609,9709,2.678,9710,4.11,9711,3.587,9712,2.678,9713,2.678,9714,2.678,9715,2.678,9716,2.678,9717,2.678,9718,2.678,9719,2.678,9720,2.678,9721,2.678,9722,2.678,9723,2.678,9724,2.678,9725,2.678,9726,2.678,9727,2.678,9728,2.678,9729,2.678,9730,2.678,9731,2.678,9732,2.678,9733,2.678,9734,2.678,9735,2.678,9736,2.678,9737,2.678,9738,2.678,9739,2.678,9740,2.678,9741,2.678,9742,2.678]],["t/27",[8505,4.482]],["b/27",[11,1.127,22,1.343,26,1.419,35,0.444,37,0.807,49,1.619,54,0.604,59,1.515,67,0.339,101,2.73,105,0.632,115,0.984,116,1.674,124,0.122,161,2.023,190,1.731,232,0.396,266,1.515,269,0.395,303,1.895,316,0.825,317,0.825,320,0.807,341,0.702,351,1.204,362,1.484,365,0.77,386,0.604,401,0.908,402,0.641,473,0.059,474,0.052,483,1.019,484,0.908,493,1.09,500,0.516,501,0.737,515,1.555,519,1.419,522,0.804,527,1.637,529,1.033,559,2.091,563,0.647,582,0.889,606,0.735,616,0.702,617,0.967,618,0.636,625,1.092,626,0.737,627,0.804,628,0.839,629,0.77,630,0.804,631,0.804,633,0.874,636,2.644,638,0.91,641,0.91,643,0.84,645,0.84,646,0.908,648,0.908,677,0.79,682,1.024,683,1.096,684,1.115,710,0.886,715,1.806,721,1.748,769,1.053,777,1.987,780,1.533,786,1.748,835,1.239,851,1.987,853,2.137,990,2.973,1087,2.491,1091,1.791,1094,1.987,1104,2.283,1194,2.363,1258,1.918,1273,1.515,1316,1.791,1366,1.731,1369,2.023,1372,0.734,1374,1.192,1382,0.655,1433,1.027,1452,1.987,1513,1.504,1595,2.302,1615,1.994,1664,3.294,1680,0.979,1689,2.216,1885,1.674,1931,2.836,2156,2.711,2171,2.491,2172,0.059,2261,2.393,2325,3.126,2540,1.918,2665,2.283,2753,4.062,2822,3.999,2973,2.851,4350,4.062,4509,3.723,4821,2.393,4847,2.948,4966,3.126,5093,4.698,5094,3.298,5095,4.587,5102,3.723,5150,3.723,5303,3.999,5427,3.298,5663,5.798,5820,3.298,5947,3.494,5952,3.494,6040,2.836,6290,4.343,6872,3.298,7179,4.343,7186,3.494,7192,4.869,7221,4.343,8312,4.403,8509,4.805,8537,4.343,8538,4.343,8545,4.805,8546,4.805,8547,4.805,8549,4.805,8550,4.805,8552,5.35,8553,4.926,8554,4.926,8555,4.343,8559,6.215,8560,5.919,8561,6.415,8562,4.805,8563,4.805,8564,6.415,8565,6.415,8566,4.805,8567,3.723,8568,4.805,8569,4.805,8570,4.805,8571,5.338,8572,5.338,8573,6.415,8574,5.919,8575,5.919,8576,4.805,8577,4.805,8578,4.805,8579,4.805,8580,4.343,8581,4.343,8582,4.805,8583,4.805,8585,4.343,8586,4.805,8587,4.805,8588,4.805,8589,4.805,8590,4.805,8591,4.805,8592,4.805,8595,4.805,8596,5.919,8597,5.919,8598,5.919,8599,4.805,8600,5.919,8601,4.805,8602,4.805,8603,4.805,8604,5.798,8605,4.805,8739,3.723,8740,3.723,8741,3.723,8742,3.723,8743,3.999,9743,6.782,9744,5.506,9745,4.805]],["t/28",[489,0.41,2984,2.723,9746,2.723]],["b/28",[9,3.336,474,0.052,489,0.806,785,2.534,2172,0.073,9746,5.345]],["t/29",[9747,5.135]],["b/29",[4,5.002,5,5.534,10,4.991,11,1.511,48,0.95,49,1.864,65,3.798,67,0.28,69,2.991,95,4.991,101,2.552,102,3.209,103,4.024,115,1.134,116,2.244,124,0.103,138,4.991,143,5.823,146,5.534,214,6.343,260,5.002,267,5.002,287,5.002,373,3.424,378,4.024,394,2.371,439,4.605,467,1.928,473,0.068,474,0.056,475,2.459,713,2.664,719,4.024,726,4.605,730,4.605,731,2.991,836,2.288,861,4.288,893,3.798,1179,3.266,1387,5.002,1595,2.651,1664,2.651,2171,2.869,2172,0.068,2668,4.605,3037,5.534,3310,3.424,3432,5.002,3533,3.798,3684,4.024,3685,5.534,3686,5.002,3687,5.534,3692,5.839,3702,3.798,5097,5.946,5108,2.459,6010,4.288,6661,5.534,7384,5.534,7462,5.534,7938,6.458,8233,3.6,8305,4.605,9748,7.808,9749,7.017,9750,7.145,9751,7.017,9752,6.343,9753,7.232,9754,6.814,9755,6.341,9756,6.341,9757,6.341,9758,6.341,9759,6.341,9760,7.381,9761,6.341,9762,6.341,9763,6.341,9764,7.381,9765,6.341,9766,6.341,9767,5.534,9768,6.341,9769,8.04,9770,6.341,9771,6.341,9772,5.534,9773,6.341,9774,6.341,9775,6.341,9776,7.381,9777,6.341,9778,6.341,9779,6.341,9780,6.341,9781,6.341,9782,6.341,9783,6.341,9784,6.341,9785,6.341,9786,7.808,9787,6.341,9788,6.341,9789,6.341,9790,7.381,9791,6.341,9792,6.341,9793,6.341,9794,5.002,9795,6.341,9796,5.534,9797,5.002]],["t/30",[9798,5.135]],["b/30",[31,2.919,33,4.368,35,0.417,36,1.367,54,0.648,65,4.844,66,1.289,82,2.226,95,5.045,102,3.576,105,0.509,124,0.119,229,7.179,232,0.309,269,0.405,277,5.096,303,1.665,341,0.591,386,0.509,400,7.058,402,0.563,473,0.069,474,0.057,475,3.137,489,0.978,506,0.619,521,1.003,522,0.816,563,0.509,616,0.591,618,0.536,626,0.648,705,2.031,776,2.101,794,1.322,1519,2.808,2172,0.069,3684,4.735,8410,5.096,9506,6.38,9522,5.096,9524,6.206,9797,5.096,9799,5.637,9800,6.459,9801,6.459,9802,6.459,9803,5.637,9804,6.459,9805,5.637,9806,6.459,9807,6.459,9808,6.459,9809,6.459,9810,6.459,9811,6.459,9812,6.459,9813,6.459,9814,6.459,9815,6.459,9816,6.459,9817,6.459,9818,6.459,9819,6.459,9820,5.096]],["t/31",[9821,5.135]],["b/31",[72,4.523,473,0.072,474,0.058,489,0.972,503,0.795,675,1.841,732,0.895,733,4.006,785,2.502,843,4.523,865,2.908,1179,3.445,1229,6.004,1543,3.921,1586,6.004,1891,3.612,2172,0.072,3475,3.445,3483,3.445,3684,4.245,4508,4.006,6666,4.006,6806,5.276,8306,5.528,9767,5.837,9796,5.837,9822,5.276,9823,6.688,9824,6.688]],["t/32",[9825,5.135]],["b/32",[89,2.51,112,4.377,124,0.104,162,1.463,163,2.429,232,0.31,264,4.474,402,0.564,473,0.08,474,0.057,489,0.979,519,1.668,560,1.416,602,3.523,712,4.034,718,2.51,791,1.781,812,3.848,855,2.421,872,4.107,875,3.334,884,3.675,1110,2.929,1290,2.255,1304,4.107,1366,2.035,1385,0.9,1493,2.056,1645,5.892,1757,5.325,1891,4.034,1913,3.187,2172,0.069,2401,3.877,2438,1.614,2735,3.878,2736,5.425,2816,4.377,3001,4.716,3498,3.053,6090,3.877,6511,4.7,7072,7.182,8305,4.7,8306,4.7,8680,3.877,8741,4.377,9682,5.648,9820,5.106,9826,5.648,9827,6.472,9828,6.519,9829,5.648,9830,6.472,9831,8.23,9832,5.648,9833,8.23,9834,8.093,9835,8.093,9836,6.472,9837,6.472,9838,6.472,9839,5.648,9840,6.472,9841,5.648,9842,5.648,9843,5.648,9844,6.472,9845,5.648,9846,6.472,9847,5.892,9848,4.7,9849,6.472,9850,6.472,9851,6.472,9852,6.472]],["t/33",[9853,5.135]],["b/33",[4,6.235,11,1.231,13,5.246,20,2.484,22,1.19,30,2.492,31,2.17,48,0.9,63,5.246,65,3.601,66,1.038,67,0.371,68,2.492,69,3.374,70,4.742,75,5.246,79,2.613,82,2.278,85,5.246,88,1.694,89,3.065,94,4.742,96,2.513,98,2.879,99,2.023,115,1.075,124,0.114,147,5.246,160,0.934,162,1.617,163,2.691,170,0.968,175,1.768,176,2.248,177,0.9,195,1.549,200,3.601,202,3.601,219,5.016,244,0.57,258,5.246,264,3.601,316,1.184,317,1.257,351,1.315,372,1.844,391,1.768,394,2.248,408,3.863,430,5.643,460,2.42,467,2.322,473,0.065,474,0.055,475,2.332,489,1.022,490,1.828,501,0.958,503,0.715,506,0.774,519,1.549,521,1.186,527,1.451,538,2.095,675,1.655,688,3.815,689,1.151,699,3.413,704,2.17,718,2.332,727,2.248,732,1.096,733,3.601,757,3.815,760,2.248,767,0.968,769,0.934,776,1.955,786,2.037,787,3.413,788,4.065,791,1.655,800,3.601,802,2.879,813,2.248,814,1.71,835,0.9,860,3.413,865,2.613,872,3.815,884,3.413,893,3.601,919,2.332,961,2.961,1024,2.72,1044,3.601,1053,2.961,1064,3.097,1069,2.326,1110,3.237,1128,3.601,1176,2.332,1188,2.836,1244,2.248,1246,6.024,1250,3.601,1289,2.961,1345,4.366,1348,2.332,1351,3.097,1382,0.715,1457,2.675,1516,1.905,1517,2.17,1599,2.961,1613,2.675,1652,2.613,1686,4.366,1727,2.613,1843,2.42,1894,2.248,1914,3.815,1943,0.968,2155,4.742,2172,0.065,2325,3.413,2438,1.5,2576,2.836,2660,1.71,2850,3.097,3024,2.332,3312,2.961,3398,4.065,3441,3.815,3465,4.366,3717,6.243,3827,5.246,3871,4.837,3873,5.246,4083,5.246,4390,5.246,4415,4.742,4489,6.243,4945,4.742,5114,5.246,5119,5.246,6954,5.643,7042,4.065,7465,5.74,7897,4.742,8127,4.065,9797,4.742,9805,6.243,9820,4.742,9854,5.246,9855,6.012,9856,6.012,9857,6.012,9858,7.153,9859,6.012,9860,6.012,9861,5.246,9862,4.366,9863,6.012,9864,6.012,9865,6.024,9866,6.012,9867,5.246,9868,6.012,9869,6.012,9870,6.012,9871,6.012,9872,6.012,9873,6.012,9874,6.012,9875,6.012,9876,7.153,9877,7.153,9878,6.012,9879,6.012,9880,6.012,9881,6.012,9882,6.012,9883,5.246,9884,6.012,9885,6.012,9886,6.012,9887,6.012,9888,6.012,9889,6.012,9890,6.012,9891,6.012]],["t/34",[9892,5.135]],["b/34",[9,3.162,26,1.655,30,2.237,65,3.846,67,0.329,82,1.767,88,1.522,89,2.884,95,4.342,98,2.585,111,3.846,124,0.089,162,1.452,163,2.703,170,1.034,175,2.186,176,2.781,177,1.114,183,1.5,195,1.655,214,5.065,241,3.846,244,0.48,260,5.065,266,1.767,455,4.222,473,0.069,474,0.057,489,0.997,493,1.271,583,2.237,667,1.109,713,2.317,718,2.49,726,4.663,727,2.402,732,0.86,785,2.402,794,1.314,861,4.342,870,3.029,1047,3.468,1058,2.791,1060,2.685,1069,2.088,1105,2.685,1176,2.49,1214,5.604,1248,2.791,1270,3.308,1395,1.034,1457,2.781,1516,1.98,1517,2.317,1613,2.402,1833,4.075,2172,0.069,2175,2.186,2816,4.342,2850,3.308,2853,4.663,2856,3.646,3310,3.468,3449,3.468,3614,5.028,3616,4.342,3666,4.075,3678,4.663,3803,2.685,5088,4.342,5108,2.49,5126,4.453,6090,3.846,6994,5.065,7042,4.342,7062,5.065,7748,4.663,7750,5.604,7873,5.604,7938,5.065,8233,3.646,8234,4.342,8244,5.604,8246,5.065,8252,5.604,9746,5.065,9749,5.604,9750,5.604,9751,5.604,9752,5.065,9754,5.604,9772,5.604,9893,5.604,9894,5.604,9895,6.421,9896,5.604,9897,6.421,9898,5.604,9899,6.421,9900,6.421,9901,6.421,9902,6.421,9903,6.421,9904,6.421,9905,5.065,9906,5.604,9907,5.604,9908,5.604,9909,6.421,9910,5.604,9911,6.421,9912,6.421,9913,5.604,9914,6.421]],["t/35",[875,2.127,9915,4.129]],["b/35",[11,1.488,24,1.421,25,3.021,30,1.23,35,0.443,48,1.089,49,1.888,54,0.647,59,1.388,69,1.665,71,3.081,82,1.388,88,0.723,89,1.956,96,2.953,98,2.03,99,1.188,105,0.628,109,2.564,112,3.411,115,1.148,124,0.121,161,1.388,162,1.644,163,2.735,170,1.093,171,2.54,206,1.435,219,2.24,228,1.818,232,0.405,241,2.114,246,2.114,264,4.067,268,1.535,269,0.426,292,3.046,341,0.729,351,1.404,365,0.37,376,1.421,386,0.624,391,1.73,402,0.308,424,1.818,459,1.956,467,2.386,473,0.038,474,0.038,475,2.739,480,2.884,483,1.4,484,0.675,485,2.387,487,1.869,489,1.03,500,0.222,502,1.535,503,0.84,506,0.804,508,1.148,509,1.148,519,1.82,523,1.343,525,0.91,527,0.852,528,0.723,529,0.455,533,1.483,536,1.665,551,2.549,559,1.004,560,1.839,563,0.464,569,2.379,573,0.94,577,2.839,578,1.597,583,1.23,602,3.621,616,0.711,618,0.628,626,0.354,627,0.386,629,0.37,649,2.451,675,2.324,680,2.018,694,1.148,710,0.947,712,4.498,717,2.905,718,2.884,720,2.004,721,2.002,725,2.379,727,2.641,731,3.331,732,0.788,733,2.114,748,1.148,755,1.038,762,1.535,766,2.785,767,1.033,768,1.369,779,2.03,793,2.24,794,1.643,809,1.188,816,1.188,828,1.23,835,0.529,842,2.004,849,1.073,853,2.187,855,2.401,858,1.914,859,4.642,865,3.543,866,6.244,869,2.724,872,5.286,875,4.454,881,6.056,882,3.081,885,1.11,894,3.856,895,2.282,902,2.24,907,2.114,918,1.421,919,1.369,940,1.597,1018,1.535,1044,2.114,1047,1.906,1053,2.898,1057,2.785,1058,2.791,1060,2.109,1064,3.498,1066,1.789,1069,1.148,1087,1.597,1108,1.738,1110,3.424,1119,3.441,1123,3.031,1144,2.114,1146,4.274,1147,1.757,1173,2.724,1175,3.201,1177,2.598,1186,1.906,1187,1.906,1211,2.663,1246,2.785,1251,3.688,1260,1.23,1271,2.24,1273,2.113,1288,2.201,1289,3.162,1290,1.757,1294,3.081,1300,2.24,1304,2.24,1306,2.564,1316,1.64,1317,2.004,1325,1.421,1339,3.081,1385,0.893,1388,2.785,1462,3.645,1468,0.747,1493,1.62,1524,1.369,1534,0.825,1543,2.598,1595,2.953,1623,2.564,1652,2.791,1653,2.114,1757,4.917,1760,1.274,1761,2.24,1818,2.387,1891,4.36,1898,2.785,1900,3.081,1913,2.898,1943,0.812,1946,1.674,1950,5.117,1951,4.453,2172,0.038,2230,2.484,2321,3.663,2322,2.109,2325,3.645,2401,4.23,2474,3.021,2573,1.738,2660,1.674,2661,2.114,2665,2.615,2682,1.818,2685,6.345,2686,6.7,2688,2.004,2720,6.488,2721,5.926,2734,5.865,2735,4.014,2736,5.575,2744,6.908,2745,5.136,2746,3.081,2749,7.08,2751,5.28,2753,2.114,2756,3.98,2761,5.735,2763,3.081,2768,3.307,2806,2.49,2815,2.785,2816,3.411,2846,4.592,2853,2.564,2900,4.342,2978,2.785,2983,3.467,3120,3.081,3137,3.845,3194,2.24,3310,3.667,3333,3.525,3341,1.476,3346,2.785,3440,2.004,3469,3.081,3474,2.114,3475,3.031,3486,3.663,3497,2.564,3498,3.028,3526,1.421,4422,2.24,4428,2.564,4508,2.114,4945,3.979,5086,3.081,5093,3.341,5102,2.387,5107,3.081,5230,2.387,5395,5.603,6040,1.818,6088,2.24,6090,3.845,6200,3.081,6205,2.564,6207,2.564,6551,4.274,6655,5.065,6807,2.785,6842,3.081,7192,2.24,7386,2.564,7435,3.081,7719,3.081,7744,5.603,7748,2.564,7755,3.081,7890,2.785,8040,5.603,8125,3.081,8166,2.24,8171,5.603,8233,4.494,8234,4.592,8306,5.129,8324,5.28,8374,4.402,8410,3.979,8411,3.081,8513,2.564,8515,3.081,8528,4.402,8593,2.785,9064,3.979,9794,2.785,9803,3.081,9822,2.785,9826,4.402,9828,5.603,9829,3.081,9832,4.402,9839,4.402,9841,4.402,9842,3.081,9843,5.136,9845,5.136,9847,5.735,9848,3.663,9861,3.081,9867,6.163,9894,4.402,9896,3.081,9905,3.979,9907,4.402,9908,4.402,9910,3.081,9913,5.136,9916,3.53,9917,5.044,9918,5.044,9919,6.791,9920,3.53,9921,3.53,9922,3.53,9923,3.53,9924,5.044,9925,3.53,9926,3.53,9927,5.885,9928,5.044,9929,5.044,9930,3.53,9931,3.53,9932,4.274,9933,5.044,9934,5.044,9935,3.53,9936,3.53,9937,3.53,9938,3.53,9939,3.53,9940,3.53,9941,3.53,9942,5.044,9943,3.53,9944,3.53,9945,3.53,9946,3.53,9947,3.53,9948,5.885,9949,5.885,9950,3.53,9951,3.53,9952,3.53,9953,3.53,9954,3.53,9955,3.53,9956,3.53,9957,3.53,9958,3.53,9959,3.53,9960,7.062,9961,8.329,9962,5.885,9963,7.848,9964,5.044,9965,5.044,9966,3.53,9967,5.044,9968,3.53,9969,3.53,9970,3.53,9971,6.42,9972,3.53,9973,3.53,9974,8.183,9975,7.062,9976,3.53,9977,3.53,9978,7.141,9979,3.53,9980,3.53,9981,3.53,9982,6.42,9983,3.53,9984,3.53,9985,7.434,9986,3.53,9987,7.848,9988,7.915,9989,5.044,9990,7.974,9991,3.53,9992,5.044,9993,3.53,9994,3.53,9995,6.42,9996,3.53,9997,3.53,9998,8.113,9999,7.567,10000,3.53,10001,6.42,10002,3.53,10003,3.53,10004,3.53,10005,5.044,10006,7.434,10007,5.044,10008,5.044,10009,3.53,10010,5.044,10011,7.141,10012,7.062,10013,6.42,10014,6.42,10015,6.42,10016,7.434,10017,5.044,10018,7.677,10019,6.42,10020,6.791,10021,6.791,10022,7.062,10023,6.791,10024,3.53,10025,5.044,10026,6.42,10027,6.791,10028,6.42,10029,5.885,10030,7.434,10031,6.791,10032,7.27,10033,6.791,10034,5.885,10035,3.53,10036,5.885,10037,5.885,10038,3.081,10039,3.53,10040,5.603,10041,5.885,10042,6.42,10043,5.885,10044,7.062,10045,3.53,10046,6.42,10047,3.53,10048,3.53,10049,3.53,10050,3.53,10051,3.53,10052,3.53,10053,7.434,10054,3.53,10055,6.42,10056,3.53,10057,3.53,10058,3.53,10059,7.062,10060,3.53,10061,3.53,10062,7.567,10063,3.53,10064,3.53,10065,3.081,10066,3.53,10067,3.53,10068,5.044,10069,5.044,10070,3.081,10071,5.044,10072,5.044,10073,3.53,10074,3.53,10075,3.53,10076,3.53,10077,3.081,10078,3.53,10079,3.53,10080,7.915,10081,5.044,10082,5.044,10083,5.044,10084,5.044,10085,5.044,10086,3.53,10087,3.53,10088,3.53,10089,3.53,10090,3.53,10091,3.53,10092,3.53,10093,3.53,10094,3.53,10095,3.53,10096,3.53,10097,3.53,10098,3.53,10099,3.53,10100,3.53,10101,3.53,10102,3.53,10103,6.791,10104,3.53,10105,3.53,10106,3.53,10107,3.53,10108,3.53,10109,3.53,10110,3.53,10111,3.53,10112,3.53,10113,3.53,10114,5.885,10115,3.53,10116,3.53,10117,3.53,10118,3.53,10119,3.53,10120,3.53,10121,3.53,10122,3.53,10123,5.885,10124,6.42,10125,6.42,10126,3.53,10127,3.53,10128,3.53,10129,3.53,10130,3.53,10131,3.081,10132,3.53,10133,3.53,10134,2.785,10135,5.044,10136,3.53,10137,3.53,10138,3.53,10139,3.53,10140,3.53,10141,3.53,10142,5.044,10143,3.53,10144,3.53,10145,3.53,10146,3.53,10147,5.044,10148,3.53,10149,3.53,10150,3.53,10151,5.926,10152,3.53,10153,3.53,10154,5.044,10155,5.044,10156,5.044,10157,5.044,10158,3.53,10159,3.53,10160,3.53,10161,3.53]],["t/36",[82,0.816,163,0.965,6090,1.776,10162,2.966]],["b/36",[9,3.02,19,1.214,24,1.747,36,1.298,48,1.084,67,0.378,82,2.287,96,2.564,97,1.994,112,4.147,115,1.377,124,0.101,160,0.952,163,2.354,170,1.165,197,3.159,228,3.159,232,0.293,242,1.281,244,0.594,264,3.673,266,1.992,269,0.316,292,2.468,316,1.191,317,1.232,333,1.341,473,0.066,474,0.055,475,2.378,481,0.588,489,0.946,493,1.214,501,1.031,506,0.694,518,1.255,519,2.12,523,1.633,577,2.564,603,1.071,604,1.096,606,0.588,608,2.807,634,1.48,682,0.896,694,1.994,705,1.928,712,3.909,713,2.213,718,2.378,721,2.05,725,2.892,727,2.293,743,3.02,769,1.236,777,2.213,780,1.386,785,2.293,804,3.159,813,2.707,836,2.213,853,1.928,865,2.666,875,3.159,885,1.928,889,3.892,903,3.673,962,3.02,1015,2.775,1023,3.482,1047,3.312,1066,2.341,1092,2.378,1101,2.88,1162,1.928,1187,3.312,1273,1.992,1363,2.137,1372,0.704,1395,1.165,1433,0.969,1516,2.161,1517,2.871,1652,2.666,1663,3.02,1664,3.026,1689,2.468,1894,2.293,2171,2.775,2172,0.066,2174,3.752,2175,2.128,2336,5.71,2357,3.482,2397,2.892,2401,4.335,2438,1.805,2540,2.137,2576,3.414,2660,1.744,2665,2.064,2856,3.482,2909,2.293,2983,3.909,3131,4.453,3234,3.159,3313,3.673,3449,3.312,3475,3.159,3578,5.256,3762,4.181,3803,3.026,3808,2.892,3821,4.109,4595,6.672,4612,3.892,5430,3.312,5617,4.147,6090,4.335,6207,5.256,6545,5.352,6547,5.352,6568,5.352,6638,5.352,6648,5.352,6655,4.837,6657,4.837,6863,5.352,6871,4.453,6872,3.673,6879,5.71,6995,4.837,7953,4.453,8233,3.482,8246,4.837,8251,5.352,9753,5.352,10163,5.352,10164,6.132,10165,4.837,10166,6.132,10167,6.132,10168,5.352,10169,5.352,10170,6.132,10171,4.453]],["t/37",[223,1.882,8260,2.006,8261,2.006,10172,2.966]],["b/37",[19,0.658,20,1.85,29,1.568,31,1.2,34,1.39,35,0.41,36,1.748,37,0.395,38,0.885,48,0.852,53,0.636,54,0.448,66,0.834,67,0.252,73,2.622,74,2.622,78,1.128,103,2.109,104,0.574,105,0.262,115,0.594,124,0.122,130,1.243,131,1.39,160,0.97,164,3.266,173,2.109,175,1.42,182,0.857,183,1.128,190,1.789,192,2.901,195,0.857,196,2.053,197,3.841,199,2.901,216,2.901,222,2.901,223,3.61,225,2.742,228,1.712,231,1.243,232,0.35,233,1.568,234,1.712,244,0.425,253,2.109,256,3.266,263,2.414,269,0.249,270,2.622,271,2.622,303,1.783,311,1.887,312,1.991,316,0.498,317,0.723,320,0.395,321,0.594,327,2.622,328,2.622,333,1.056,335,0.829,341,0.304,349,2.378,353,0.594,354,0.615,355,0.915,365,0.348,372,0.857,374,2.248,375,2.248,376,1.338,385,0.829,386,0.262,391,0.977,397,3.266,398,1.991,401,0.445,402,0.29,434,1.045,435,1.243,457,1.081,459,1.873,467,1.011,468,1.42,469,2.473,473,0.036,474,0.037,481,0.463,483,0.894,487,0.915,489,0.574,500,0.496,501,0.836,506,0.463,507,3.058,512,0.428,518,1.164,522,0.528,525,0.857,528,1.164,529,0.622,534,1.795,550,1.637,552,2.608,553,1.571,559,0.946,560,0.727,563,0.262,574,0.735,576,0.829,594,1.795,596,2.303,603,0.993,604,0.594,606,0.598,616,0.304,617,0.823,618,0.276,622,0.884,625,0.916,626,0.484,627,0.364,628,0.379,629,0.348,630,0.364,631,0.364,633,0.395,634,1.166,637,0.852,638,0.412,641,0.412,643,0.412,645,0.412,646,0.445,648,0.445,667,0.982,668,1.42,677,0.626,682,0.704,683,0.672,684,0.647,685,0.977,687,1.045,689,0.924,694,1.081,700,2.019,705,1.789,710,0.916,721,1.609,725,1.568,732,0.647,751,1.39,765,1.158,767,0.916,769,0.516,777,1.2,794,0.989,804,2.488,813,2.128,814,0.946,835,0.498,849,1.468,851,1.2,852,1.504,855,1.806,856,1.712,864,1.119,885,1.045,889,2.109,898,2.893,910,1.445,918,1.338,920,1.338,947,3.573,955,2.622,993,1.2,1001,2.901,1002,2.901,1009,2.622,1012,2.248,1035,2.481,1046,2.488,1086,1.637,1113,1.637,1117,1.011,1183,3.929,1186,1.795,1201,1.338,1206,2.901,1234,1.445,1237,1.445,1240,1.991,1258,1.982,1260,1.158,1270,2.488,1288,1.243,1290,1.683,1291,3.23,1320,1.712,1325,1.338,1354,1.712,1362,2.336,1372,0.304,1374,0.516,1376,2.083,1382,0.395,1383,0.498,1385,0.462,1386,0.554,1395,0.777,1397,0.802,1433,0.762,1436,2.945,1437,3.382,1438,2.109,1440,1.504,1441,1.568,1444,0.535,1445,0.574,1448,0.615,1449,0.863,1450,0.636,1451,0.636,1459,1.022,1461,0.703,1464,0.703,1466,0.751,1467,0.777,1468,0.703,1469,0.857,1472,0.829,1475,0.857,1478,0.885,1483,0.915,1485,0.915,1488,0.885,1489,0.946,1492,0.946,1493,0.915,1494,0.977,1498,1.011,1499,1.011,1501,1.011,1502,1.011,1504,1.045,1509,1.119,1510,1.119,1511,1.119,1512,1.2,1514,1.568,1515,1.712,1519,1.445,1531,1.968,1534,1.616,1545,1.795,1598,2.29,1600,1.712,1609,2.248,1615,0.977,1680,0.697,1727,2.714,1755,4.817,1853,1.2,1885,1.468,1922,2.901,1930,3.508,2032,1.243,2033,1.289,2037,1.243,2039,1.289,2040,1.289,2042,1.289,2044,1.289,2045,1.243,2046,1.289,2047,1.289,2050,1.338,2051,1.289,2052,1.39,2056,1.445,2057,1.445,2058,1.445,2060,1.445,2062,1.445,2064,1.338,2067,1.289,2071,1.445,2072,1.445,2074,1.445,2077,1.445,2078,1.504,2079,1.504,2081,1.568,2084,1.568,2085,1.568,2086,1.568,2087,1.568,2088,1.637,2092,1.637,2093,1.637,2094,1.568,2096,1.637,2098,1.568,2099,1.568,2100,1.637,2101,1.712,2102,1.712,2104,1.712,2106,1.712,2107,1.712,2108,1.712,2110,1.712,2112,1.712,2114,1.712,2116,1.712,2117,1.712,2118,1.795,2119,1.795,2122,1.887,2124,1.887,2127,1.887,2130,1.887,2131,1.887,2133,1.887,2134,1.795,2135,1.887,2138,1.887,2139,1.568,2140,1.887,2141,1.887,2143,1.795,2144,1.887,2145,1.887,2148,1.991,2149,1.991,2150,1.991,2151,1.991,2152,1.991,2153,1.991,2154,1.991,2172,0.036,2261,2.473,2305,2.742,2308,1.887,2322,1.39,2360,4.677,2426,2.945,2471,1.338,2487,1.887,2551,3.963,2676,1.39,2687,3.973,2728,2.901,2833,1.2,2872,3.508,2909,2.128,2933,2.109,2992,1.205,3001,4.381,3024,3.009,3068,1.712,3101,1.795,3184,1.289,3194,2.109,3312,1.637,3315,1.795,3348,3.508,3392,2.488,3485,2.414,3550,2.901,3567,2.278,3619,4.965,3664,5.458,3684,2.109,3688,2.622,3742,2.622,3751,1.991,3821,1.887,3923,4.828,4175,4.535,4180,2.901,4194,2.622,4290,3.072,4422,2.109,4427,1.712,4448,3.545,4453,4.467,4498,1.743,4611,3.065,4625,2.893,4777,2.414,4830,1.504,4833,2.414,4836,3.508,4877,1.795,5090,2.248,5209,1.712,5236,3.266,5388,2.901,5430,1.795,5470,1.887,5644,1.795,5650,1.887,5652,1.887,5947,2.109,5950,2.622,5952,2.109,5953,2.742,5963,5.449,6506,2.622,7142,2.622,7148,1.887,7150,2.622,7273,2.901,7854,4.679,7992,2.414,7995,2.414,7998,2.622,8001,2.622,8078,1.991,8080,1.991,8082,1.991,8154,2.901,8168,2.248,8260,3.266,8261,3.266,8375,3.508,8398,2.901,8567,2.248,8657,2.109,8658,2.109,8659,2.109,8660,2.109,8661,2.109,8662,2.109,8663,2.109,8664,2.109,8665,2.109,8666,2.109,8667,2.109,8668,2.109,8669,2.109,8670,2.109,8671,2.109,8672,2.109,8673,2.109,8674,2.109,8675,2.109,8676,2.109,8677,2.109,8678,2.109,8679,2.109,8680,1.991,8681,2.109,8682,2.109,8683,2.109,8684,2.109,8685,2.109,8686,2.109,8687,2.109,8688,2.109,8689,2.109,8690,2.109,8691,2.109,8692,2.248,8694,2.248,8695,2.248,8696,2.248,8697,2.248,8698,2.622,8699,2.622,8730,2.622,8739,2.248,8740,2.248,8741,2.248,8742,2.248,8743,2.414,8744,2.622,8745,2.622,8746,2.622,8747,2.414,8748,2.414,8749,2.414,8750,2.414,8751,2.414,8752,2.622,8753,2.622,8754,2.622,8755,2.622,8756,2.622,8757,2.622,8758,2.622,8759,2.622,8760,2.622,8762,2.622,8981,2.622,9267,2.893,9344,2.109,9345,2.109,9495,2.901,9496,2.901,9497,2.901,9498,2.901,9499,2.901,9500,2.901,9502,2.901,9503,2.901,9504,2.901,9505,2.901,9506,2.622,9507,2.901,9509,2.901,9510,2.901,9511,2.901,9512,2.901,9513,2.901,9514,2.901,9515,2.901,9517,2.901,9522,2.622,9524,2.622,9525,2.901,9526,2.901,9527,2.901,9528,2.901,9529,2.901,9530,2.901,9531,2.901,9532,2.901,9533,2.901,9534,2.901,9536,2.901,9537,2.901,9538,2.901,9539,2.901,9541,2.901,9542,2.901,9543,2.901,9545,2.901,9546,2.901,9547,2.901,9548,2.901,9549,2.901,9550,2.901,9551,2.901,9552,2.901,9554,2.901,9555,2.901,9556,2.901,9558,2.901,9563,2.901,9564,2.901,9566,2.901,9567,2.901,9569,2.901,9570,2.901,9571,2.901,9572,2.901,9573,2.901,9574,2.901,9575,2.901,9578,2.901,9579,2.901,9580,2.901,9581,2.901,9583,2.901,9584,2.901,9585,2.901,9586,2.901,9587,2.901,9588,2.901,9589,2.901,9590,2.901,9591,2.901,9592,2.901,9593,2.901,9594,2.901,9595,2.901,9596,2.901,9597,2.901,9598,2.901,9599,2.901,9600,2.901,9601,2.901,9602,2.901,9603,2.901,9604,2.901,9605,2.901,9606,2.901,9607,2.901,9608,2.901,9609,2.901,9610,2.901,9611,2.901,9612,2.901,9613,2.901,9614,2.901,9615,2.901,9616,2.901,9617,2.901,9618,2.901,9619,2.901,9620,2.901,9621,2.901,9623,2.901,9624,2.901,9625,2.901,9626,2.901,9627,2.901,9628,2.901,9629,2.901,9630,2.901,9631,2.901,9632,2.901,9633,2.901,9634,2.901,9635,2.901,10011,4.215,10173,3.324,10174,3.324,10175,5.633,10176,5.492,10177,5.788,10178,4.965,10179,4.926,10180,4.83,10181,4.215,10182,3.324,10183,4.83,10184,4.215,10185,4.83,10186,4.83,10187,3.324,10188,7.457,10189,3.324,10190,3.324,10191,4.83,10192,4.83,10193,3.324,10194,3.324,10195,7.832,10196,3.324,10197,3.324,10198,7.759,10199,4.83,10200,4.83,10201,5.689,10202,2.901,10203,5.689,10204,3.324,10205,2.901,10206,4.131,10207,3.324,10208,4.83,10209,5.689,10210,6.244,10211,3.324,10212,7.575,10213,4.83,10214,4.83,10215,3.324,10216,3.324,10217,3.324,10218,6.244,10219,3.324,10220,5.689,10221,6.919,10222,3.324,10223,4.965,10224,4.83,10225,5.689,10226,5.689,10227,4.83,10228,4.83,10229,3.324,10230,3.324,10231,4.83,10232,4.215,10233,3.324,10234,3.324,10235,3.324,10236,3.324,10237,2.622,10238,5.689,10239,3.324,10240,4.83,10241,4.83,10242,4.83,10243,4.83,10244,3.324,10245,4.83,10246,5.689,10247,3.324,10248,4.83,10249,5.689,10250,4.83,10251,4.83,10252,4.83,10253,4.83,10254,4.83,10255,4.83,10256,4.83,10257,4.83,10258,4.83,10259,4.83,10260,3.324,10261,4.83,10262,3.324,10263,4.83,10264,4.83,10265,2.414,10266,4.83,10267,2.901,10268,4.83,10269,7.315,10270,7.315,10271,6.632,10272,6.632,10273,7.457,10274,8.657,10275,3.324,10276,7.457,10277,3.324,10278,7.457,10279,3.324,10280,7.457,10281,3.324,10282,6.632,10283,5.689,10284,5.689,10285,3.324,10286,3.324,10287,3.324,10288,3.324,10289,3.324,10290,6.244,10291,6.919,10292,6.919,10293,4.83,10294,3.324,10295,4.83,10296,6.919,10297,3.324,10298,6.244,10299,3.324,10300,5.689,10301,5.689,10302,5.689,10303,5.689,10304,4.83,10305,4.83,10306,4.83,10307,4.83,10308,6.244,10309,5.689,10310,4.965,10311,3.324,10312,3.324,10313,4.83,10314,8.516,10315,4.83,10316,4.83,10317,4.83,10318,3.324,10319,3.324,10320,3.324,10321,4.83,10322,3.324,10323,3.324,10324,3.324,10325,6.939,10326,6.723,10327,6.244,10328,6.244,10329,6.244,10330,6.244,10331,6.244,10332,6.244,10333,3.324,10334,6.244,10335,6.244,10336,3.324,10337,3.324,10338,4.83,10339,4.83,10340,3.324,10341,4.83,10342,4.83,10343,3.324,10344,3.324,10345,3.324,10346,3.324,10347,3.324,10348,3.324,10349,3.324,10350,3.324,10351,3.324,10352,3.324,10353,3.324,10354,3.324,10355,3.324,10356,2.901,10357,3.324,10358,4.926,10359,3.324,10360,3.324,10361,4.83,10362,3.324,10363,3.324,10364,3.324,10365,3.324,10366,3.324,10367,3.324,10368,3.324,10369,3.324,10370,3.324,10371,3.324,10372,3.324,10373,3.324,10374,3.324,10375,4.83,10376,4.83,10377,4.83,10378,4.83,10379,3.324,10380,3.324,10381,3.324,10382,3.324,10383,2.901,10384,3.963,10385,3.81,10386,3.324,10387,3.324,10388,3.324,10389,3.324,10390,3.324,10391,3.324,10392,4.83,10393,3.324,10394,6.244,10395,3.324,10396,2.901,10397,2.622,10398,2.414,10399,4.83,10400,4.83,10401,4.83,10402,4.83,10403,8.211,10404,8.281,10405,3.324,10406,4.83,10407,3.324,10408,4.83,10409,3.324,10410,4.83,10411,3.324,10412,4.83,10413,4.83,10414,3.324,10415,4.83,10416,3.324,10417,4.83,10418,3.324,10419,3.324,10420,3.324,10421,3.324,10422,3.324,10423,3.324,10424,2.901,10425,3.324,10426,6.244,10427,4.83,10428,3.324,10429,3.324,10430,4.83,10431,3.324,10432,3.324]],["t/38",[170,0.665,10433,4.129]],["b/38",[11,0.907,19,1.651,26,1.953,35,0.438,36,1.248,37,0.789,38,1.571,48,0.663,53,1.129,54,0.633,59,1.826,66,0.765,67,0.361,97,1.441,104,1.019,105,0.609,116,1.347,124,0.122,160,0.916,163,1.441,170,1.245,171,2.645,175,1.735,182,1.899,187,0.739,195,1.521,232,0.401,242,1.245,244,0.627,269,0.398,276,1.852,316,0.993,317,0.993,320,0.789,321,1.055,333,0.969,335,1.472,341,0.707,350,2.653,351,1.29,353,1.055,354,1.091,355,1.219,365,0.695,383,2.515,385,1.472,386,0.619,394,1.657,401,0.79,402,0.616,473,0.048,474,0.045,477,3.129,481,0.77,483,0.819,490,1.794,493,1.313,500,0.538,501,1.051,503,0.702,506,0.565,507,2.957,512,0.854,514,0.877,515,1.248,518,0.907,522,0.726,541,2.181,543,1.347,559,1.26,560,1.29,563,0.609,573,1.18,574,0.424,576,1.472,582,0.924,585,2.157,587,1.347,596,1.794,601,1.18,603,1.106,604,0.792,606,0.762,616,0.707,617,0.876,618,0.641,622,0.688,625,0.713,626,0.709,627,0.726,628,0.757,629,0.695,630,0.726,631,0.726,633,0.789,634,1.069,637,1.176,638,0.821,641,0.821,643,0.821,645,0.821,646,0.888,648,0.79,667,1.356,668,1.95,670,3.902,675,1.624,677,0.812,682,0.876,683,0.922,684,0.947,689,0.848,710,1.139,715,1.18,751,1.852,767,0.713,769,1.099,776,1.441,780,1.001,790,1.718,794,1.208,801,2.67,809,1.491,816,1.491,835,0.993,847,2.004,926,1.134,1015,2.004,1044,2.653,1046,3.039,1105,1.852,1117,2.017,1137,3.638,1145,1.069,1147,2.567,1180,1.657,1194,1.543,1285,1.852,1289,2.181,1303,3.186,1325,1.783,1362,2.2,1372,0.735,1374,1.099,1382,0.702,1383,0.884,1385,0.82,1386,0.984,1395,1.351,1396,2.206,1433,0.986,1436,2.567,1437,2.938,1440,3.598,1441,3.336,1444,0.95,1445,1.019,1448,1.091,1449,1.055,1450,1.129,1451,1.129,1459,1.248,1461,1.248,1464,1.248,1466,1.334,1467,1.378,1468,1.248,1469,1.521,1472,1.472,1475,1.521,1478,1.571,1483,1.624,1485,1.219,1488,1.18,1489,1.26,1492,1.26,1493,1.219,1513,1.402,1534,1.035,1680,1.204,1681,4.094,1693,1.599,1760,1.599,1885,1.794,1943,0.713,1971,2.67,2014,2.995,2156,2.181,2172,0.048,2426,2.089,2467,3.217,2487,2.515,2540,1.543,2655,2.392,2660,1.26,2806,2.938,2931,3.494,2975,2.515,2979,3.644,2992,2.081,3020,4.226,3087,4.412,3178,4.04,3192,4.486,3323,4.704,3498,3.129,3621,2.181,3801,3.744,3824,3.889,4346,3.866,4367,5.811,4368,5.789,4497,2.957,4498,2.129,4980,2.392,5004,3.201,5006,3.267,5010,3.293,5012,3.039,5032,5.35,5108,1.718,5120,3.866,5206,2.515,5210,3.039,5211,3.002,5212,3.483,5213,3.483,5214,2.905,5449,2.67,5450,3.744,5521,2.392,5536,3.483,5644,2.392,5645,3.744,5650,2.515,5672,4.654,5849,4.654,5856,4.21,6526,4.486,6850,4.654,6852,3.866,6973,3.217,6976,3.217,6983,3.866,6989,4.654,7469,3.866,7471,5.148,7472,5.148,7473,5.148,7474,5.148,7475,5.148,7496,5.35,7504,5.148,7951,4.21,8235,2.653,8375,3.217,8662,2.811,8663,2.811,8664,2.811,8665,2.811,8666,2.811,8667,2.811,10038,3.866,10434,6.633,10435,4.429,10436,6.633,10437,5.789,10438,4.429,10439,4.429,10440,4.429,10441,4.429,10442,4.429,10443,4.429,10444,4.429,10445,4.429,10446,4.429,10447,5.899,10448,7.575,10449,4.429,10450,5.899,10451,5.899,10452,5.899,10453,5.899,10454,5.899,10455,5.899,10456,4.654,10457,4.429,10458,4.429,10459,5.899,10460,4.429,10461,4.429,10462,3.866,10463,4.429,10464,4.429,10465,4.429,10466,4.429,10467,4.429,10468,4.429,10469,4.429,10470,4.429,10471,4.429,10472,4.429,10473,4.429,10474,4.429,10475,5.899,10476,3.866,10477,3.866,10478,5.899,10479,4.429,10480,5.899,10481,3.866,10482,3.866,10483,4.429,10484,4.429,10485,4.429,10486,4.429,10487,4.429,10488,3.217,10489,4.429,10490,4.429,10491,4.429,10492,4.429,10493,4.429,10494,4.429,10495,4.429]],["t/39",[529,0.445,10496,2.191,10497,2.334]],["b/39",[11,1.573,24,1.126,35,0.431,37,0.555,48,1.019,53,0.893,54,0.536,67,0.27,96,2.552,104,0.806,105,0.481,115,1.217,124,0.122,136,4.071,160,1.283,163,1.517,182,1.573,183,1.09,187,1.418,190,1.919,195,1.573,232,0.375,235,5.328,241,4.811,243,3.846,244,0.61,247,4.071,261,2.26,269,0.403,292,1.878,316,0.699,317,0.699,320,0.555,321,0.834,333,1.335,341,0.558,351,1.02,353,0.834,354,0.863,365,0.713,376,3.386,386,0.481,401,0.624,402,0.707,411,2.552,469,2.654,473,0.05,474,0.047,477,2.88,480,2.368,481,0.737,489,0.809,490,1.856,500,0.471,501,1.063,503,0.726,506,0.692,508,1.985,511,2.139,512,0.786,514,1.208,515,1.585,518,1.603,519,1.202,521,1.194,522,0.869,528,0.955,529,1.069,531,2.111,536,3.21,543,1.418,551,2.203,560,1.02,563,0.643,564,1.745,565,2.519,573,1.812,574,0.75,575,2.762,582,0.894,585,1.517,596,1.418,603,1.136,604,1.449,606,0.585,611,2.5,616,0.558,617,0.809,618,0.506,622,0.725,625,0.751,626,0.751,627,0.745,628,0.697,629,0.64,630,0.668,631,0.668,633,0.726,634,1.474,635,4.581,637,0.699,638,0.578,641,0.578,643,0.578,644,1.284,645,0.578,646,0.624,648,0.624,651,2.43,654,1.684,656,3.006,667,1.247,668,1.372,671,1.809,675,1.68,677,0.806,680,1.467,682,0.578,683,0.649,684,0.911,685,1.372,689,1.168,694,1.517,706,2.649,710,0.751,712,2.519,713,1.684,718,1.809,721,1.573,727,1.745,732,0.624,753,2.951,757,2.961,762,2.028,764,2.649,765,2.127,767,1.206,769,1.194,773,1.856,776,1.985,785,1.745,789,3.874,791,1.284,799,2.654,802,1.878,806,3.666,813,1.745,814,1.327,817,5.328,835,0.914,847,2.111,849,2.069,853,1.242,865,2.028,875,2.403,885,1.467,895,2.111,919,1.809,926,1.004,990,2.519,1018,2.028,1036,2.762,1092,1.809,1093,3.155,1101,2.283,1137,3.404,1145,1.743,1162,1.242,1173,2.519,1180,2.283,1188,3.21,1213,1.809,1260,1.625,1279,2.457,1282,3.68,1290,1.625,1291,3.466,1292,4.128,1316,1.517,1372,0.427,1374,0.725,1382,0.726,1383,0.699,1385,0.649,1386,0.778,1397,1.126,1436,2.61,1437,2.639,1444,0.751,1445,0.806,1448,0.863,1449,0.834,1450,0.893,1451,0.893,1459,0.987,1461,0.987,1464,0.987,1466,1.055,1467,1.09,1468,0.987,1513,1.129,1524,2.639,1615,1.795,1652,2.028,1679,3.68,1687,3.388,1693,1.684,1761,2.961,1928,2.794,1946,1.327,1958,2.961,1967,2.2,1971,2.111,1973,3.016,1992,3.297,1999,3.006,2152,2.794,2153,2.794,2172,0.05,2307,2.8,2431,2.457,2432,2.88,2438,1.697,2473,2.519,2537,2.297,2540,1.625,2619,3.657,2660,1.327,2661,2.794,2816,3.155,2818,4.071,2819,4.071,2824,3.68,2833,1.684,2979,3.145,3024,1.809,3068,2.403,3069,2.348,3262,4.378,3265,4.816,3312,3.006,3383,5.328,3425,2.519,3472,3.155,3511,3.006,3624,2.794,3640,3.68,3681,3.68,4417,5.441,4471,3.466,4511,3.657,4517,3.388,4521,3.466,4627,3.351,4834,3.874,4845,4.816,4907,3.155,4908,3.155,4928,5.144,4990,3.657,5646,2.794,6156,5.328,6666,3.657,7577,2.961,8379,3.388,8830,3.657,9009,3.68,10496,4.581,10498,4.071,10499,4.665,10500,5.834,10501,6.074,10502,4.816,10503,7.218,10504,6.805,10505,7.492,10506,4.665,10507,4.665,10508,4.665,10509,4.665,10510,4.665,10511,4.665,10512,7.218,10513,6.105,10514,4.665,10515,4.665,10516,4.071,10517,4.665,10518,4.816,10519,4.665,10520,4.665,10521,4.071,10522,4.665,10523,4.665,10524,4.665,10525,4.665,10526,4.665,10527,4.816,10528,4.665,10529,6.105,10530,4.665,10531,4.665,10532,4.665,10533,4.665,10534,4.665,10535,4.665,10536,4.665,10537,4.665,10538,4.071,10539,4.665,10540,3.68,10541,3.68,10542,4.665,10543,4.816,10544,4.816,10545,6.805,10546,6.105,10547,6.105,10548,4.665,10549,4.665,10550,4.665,10551,4.665,10552,4.665,10553,4.665,10554,4.665,10555,4.665,10556,4.665,10557,4.665,10558,4.665,10559,6.105,10560,4.665,10561,4.665,10562,4.665,10563,4.665,10564,4.665,10565,4.665,10566,4.665,10567,4.665,10568,4.665,10569,4.665,10570,4.665,10571,4.665,10572,4.665,10573,4.665,10574,4.665,10575,4.665,10576,4.665,10577,4.665,10578,4.665,10579,6.105,10580,4.665,10581,4.665,10582,4.665,10583,4.665,10584,4.665,10585,4.665,10586,4.665,10587,4.665,10588,4.665,10589,4.665,10590,6.105,10591,4.665,10592,4.665,10593,4.665,10594,4.665,10595,4.665,10596,4.665,10597,4.665,10598,4.665,10599,4.665,10600,4.665,10601,4.665,10602,4.665,10603,4.665,10604,4.665,10605,4.665,10606,4.665,10607,4.665,10608,4.665,10609,4.665,10610,4.665,10611,4.665,10612,4.665,10613,4.665]],["t/40",[10614,4.051]],["b/40",[19,1.614,22,0.68,24,0.829,27,1.156,28,1.691,35,0.437,37,0.754,38,1.317,44,1.927,47,1.885,53,1.109,54,0.499,59,0.945,67,0.365,68,2.341,104,1.095,105,0.609,115,0.614,116,1.044,124,0.122,162,0.776,170,0.553,175,1.976,177,0.868,183,1.354,187,0.966,190,2.2,195,0.885,196,2.788,197,3.872,225,2.808,232,0.382,244,0.57,248,4.316,256,4.732,259,2.997,261,1.407,263,2.494,267,4.572,269,0.387,274,2.808,315,1.503,316,0.741,317,0.514,320,0.754,321,1.133,333,0.751,334,3.344,335,1.446,341,0.58,351,1.47,353,1.133,354,1.173,355,1.361,365,0.664,372,1.991,376,2.903,383,2.808,385,1.234,386,0.499,391,2.058,397,3.635,401,0.849,402,0.553,411,1.436,434,1.555,468,1.454,473,0.037,474,0.038,479,2.323,481,0.671,483,0.915,484,0.776,488,1.382,489,0.408,491,2.494,493,0.979,500,0.538,501,0.662,502,1.493,503,0.754,506,0.608,512,0.865,518,1.298,522,0.735,523,0.915,528,1.432,529,0.746,537,4.264,549,2.323,550,1.691,563,0.568,574,0.8,576,1.234,582,0.845,585,2.562,587,1.044,596,1.503,601,1.317,603,0.806,604,0.614,605,2.808,606,0.74,616,0.58,617,0.858,618,0.526,622,0.533,625,0.553,626,0.636,627,0.694,628,0.724,629,0.664,630,0.694,631,0.694,633,0.754,637,1.006,638,0.785,641,0.785,643,0.785,644,1.361,645,0.785,646,0.849,648,0.849,654,1.239,656,2.435,671,1.332,675,1.361,677,0.754,681,1.85,682,0.612,683,1.026,684,0.988,685,1.01,687,2.267,689,0.657,694,1.885,710,0.933,715,1.921,721,1.494,728,1.62,732,0.776,758,1.554,759,1.117,767,1.021,769,0.533,777,1.239,780,0.776,794,1.375,800,2.057,806,3.317,809,1.664,816,2.427,835,1.048,849,1.762,856,1.769,863,1.855,864,1.664,886,1.239,905,1.691,918,2.552,920,2.333,926,1.074,947,3.166,993,1.785,1009,3.901,1023,1.95,1046,1.769,1060,1.436,1063,2.18,1069,1.117,1085,2.323,1086,1.691,1087,1.554,1106,2.709,1107,1.555,1113,1.691,1117,1.503,1137,3.208,1145,0.829,1147,1.197,1162,1.864,1201,1.991,1243,3.138,1258,1.723,1261,3.04,1279,2.552,1289,3.122,1290,1.723,1353,4.023,1362,1.911,1363,2.513,1366,2.112,1369,1.361,1372,0.66,1374,0.985,1376,1.689,1378,1.117,1382,0.754,1383,0.95,1385,0.882,1386,1.057,1395,1.334,1397,1.399,1428,1.723,1433,0.899,1436,2.019,1437,2.863,1440,2.238,1441,2.99,1444,1.021,1445,1.095,1448,1.173,1449,1.133,1450,1.213,1451,1.213,1452,1.785,1457,1.285,1459,1.342,1461,1.342,1464,1.226,1466,1.31,1467,1.354,1468,1.226,1469,1.494,1472,1.446,1475,1.494,1478,1.317,1483,1.361,1485,1.361,1488,1.317,1489,1.407,1492,1.407,1493,1.361,1494,1.454,1498,1.503,1499,1.503,1501,1.503,1502,1.503,1504,1.555,1505,2.15,1509,1.664,1510,1.664,1511,1.664,1513,1.429,1516,1.317,1517,2.288,1524,1.332,1531,1.803,1543,3.605,1544,3.635,1555,3.901,1592,3.629,1598,1.382,1608,1.95,1613,1.285,1621,3.138,1659,2.808,1680,1.207,1684,1.85,1693,1.239,1712,2.068,1714,2.18,1760,1.239,1885,1.762,1946,0.977,1967,2.333,2045,1.85,2140,1.95,2141,1.95,2143,1.855,2144,1.95,2145,1.95,2148,2.057,2149,2.057,2150,2.057,2151,2.057,2172,0.037,2179,2.333,2189,1.285,2225,6.659,2261,1.493,2283,3.919,2360,4.094,2424,2.057,2425,4.023,2459,3.629,2466,4.287,2471,1.382,2537,2.435,2544,2.622,2551,3.138,2627,2.323,2660,1.407,2764,2.985,2850,1.769,2917,2.709,2924,3.344,2925,3.13,2970,2.494,2992,1.745,3022,2.323,3024,1.332,3087,2.057,3098,3.919,3154,2.323,3171,2.323,3229,2.494,3260,3.344,3267,2.435,3311,1.691,3317,2.057,3393,1.855,3401,2.494,3479,1.691,3528,3.592,3567,2.733,3621,1.691,3689,3.901,3803,1.436,3852,3.919,3948,5.863,4084,3.138,4117,2.494,4147,2.709,4176,3.797,4228,2.547,4301,2.323,4369,4.572,4408,2.709,4427,4.09,4453,2.962,4457,3.592,4465,3.901,4475,2.709,4498,1.785,4504,2.808,4539,2.808,4612,3.138,4653,2.671,4776,1.95,4780,2.057,4894,3.29,4915,4.287,4942,2.552,4976,1.554,4980,1.855,5004,3.34,5006,3.446,5008,3.344,5010,1.493,5012,1.769,5016,5.001,5032,2.494,5094,3.471,5097,2.494,5131,6.441,5133,1.493,5134,2.18,5210,1.769,5214,2.854,5238,2.997,5246,2.808,5267,2.18,5430,2.671,5432,2.709,5449,1.554,5459,2.854,5470,1.95,5497,2.808,5501,4.209,5521,1.855,5522,2.709,5644,1.855,5650,1.95,5694,4.991,5774,4.316,5777,4.316,5806,2.709,5807,5.533,5809,4.316,5810,3.901,5811,4.316,5812,4.316,5813,5.533,5814,5.533,5816,5.533,5817,5.533,5818,5.533,5863,3.901,5928,5.001,5930,5.001,5939,1.436,6014,2.997,6040,2.547,6066,2.494,6075,2.709,6088,3.138,6092,3.592,6094,3.592,6152,2.997,6161,2.997,6164,4.316,6166,4.316,6168,2.997,6169,5.001,6170,5.001,6171,5.001,6172,5.001,6173,3.592,6174,3.592,6185,3.901,6187,2.997,6191,4.316,6192,2.709,6193,2.997,6194,5.057,6196,5.057,6204,2.709,6527,3.592,7041,5.3,7042,4.287,7130,2.997,7263,2.494,7304,5.057,7747,2.18,8524,6.107,8584,3.901,8898,2.709,8899,2.709,8944,6.02,9344,3.678,9345,3.678,9346,4.316,9354,2.494,9422,2.997,10171,2.494,10176,5.492,10179,5.3,10205,2.997,10232,2.997,10265,2.494,10456,4.572,10488,2.494,10615,5.225,10616,6.293,10617,5.3,10618,2.997,10619,3.434,10620,3.434,10621,2.997,10622,3.434,10623,3.434,10624,3.434,10625,3.434,10626,3.434,10627,3.434,10628,3.434,10629,3.434,10630,3.434,10631,3.434,10632,3.434,10633,3.434,10634,3.434,10635,3.434,10636,3.434,10637,3.434,10638,3.434,10639,3.434,10640,3.434,10641,3.434,10642,4.945,10643,3.434,10644,3.434,10645,4.945,10646,4.209,10647,4.945,10648,4.945,10649,2.997,10650,3.434,10651,4.945,10652,3.434,10653,3.434,10654,3.434,10655,3.434,10656,2.997,10657,4.945,10658,3.434,10659,3.434,10660,3.434,10661,3.434,10662,4.945,10663,3.901,10664,2.494,10665,5.863,10666,4.945,10667,3.434,10668,6.34,10669,3.434,10670,3.434,10671,3.434,10672,3.434,10673,2.709,10674,3.434,10675,3.434,10676,3.434,10677,4.945,10678,3.434,10679,3.434,10680,4.572,10681,4.945,10682,3.434,10683,3.344,10684,3.434,10685,3.434,10686,3.434,10687,5.795,10688,3.434,10689,3.434,10690,3.434,10691,6.34,10692,3.434,10693,4.945,10694,4.945,10695,3.434,10696,4.945,10697,4.945,10698,4.945,10699,4.945,10700,3.434,10701,3.434,10702,3.434,10703,3.434,10704,3.434,10705,3.434,10706,3.434,10707,4.945,10708,5.795,10709,3.434,10710,3.434,10711,3.434,10712,3.434,10713,3.434,10714,3.434,10715,3.434,10716,3.434,10717,3.434,10718,4.945,10719,2.997,10720,2.997,10721,3.901,10722,5.3,10723,3.434,10724,5.057,10725,2.997,10726,2.997,10727,2.997,10728,5.057,10729,2.997,10730,2.997,10731,4.544,10732,2.997,10733,3.434,10734,2.997,10735,2.709,10736,3.434,10737,2.997,10738,2.997,10739,3.434,10740,3.434,10741,3.434,10742,3.434,10743,3.434,10744,3.434,10745,3.434,10746,3.434,10747,3.434,10748,3.434,10749,3.434,10750,3.434,10751,3.434,10752,3.434,10753,3.434,10754,3.434,10755,3.434,10756,3.434,10757,2.997,10758,3.434,10759,3.434,10760,3.434,10761,3.434,10762,3.434,10763,3.434,10764,4.945,10765,3.434,10766,4.945,10767,3.434,10768,3.434,10769,3.434,10770,3.434,10771,3.434,10772,3.434,10773,3.434,10774,3.434,10775,3.434,10776,3.434,10777,3.434,10778,3.434,10779,5.057,10780,4.945,10781,3.434,10782,3.434,10783,3.434,10784,3.434,10785,3.434,10786,3.434,10787,3.434,10788,3.434,10789,3.434,10790,3.434,10791,3.434,10792,3.434,10793,3.434,10794,3.434,10795,4.945,10796,4.945,10797,4.945,10798,3.434,10799,3.434,10800,3.434,10801,3.434,10802,3.434,10803,3.434,10804,5.795,10805,2.709,10806,3.434,10807,2.997,10808,3.434,10809,3.434,10810,2.997,10811,2.494,10812,2.997,10813,3.434,10814,3.434,10815,3.434,10816,3.434,10817,4.945,10818,3.434,10819,3.434,10820,3.434,10821,2.997,10822,2.323,10823,5.795,10824,5.795,10825,5.795,10826,6.719,10827,4.945,10828,4.945,10829,4.945,10830,3.434,10831,4.945,10832,4.945,10833,3.434,10834,3.434,10835,4.945,10836,7.017,10837,6.34,10838,4.945,10839,4.945,10840,4.945,10841,6.34,10842,4.945,10843,4.945,10844,4.945,10845,4.945,10846,4.945,10847,4.945,10848,4.945,10849,6.34,10850,6.34,10851,4.945,10852,4.316,10853,4.316,10854,6.34,10855,4.945,10856,3.434,10857,6.997,10858,4.945,10859,4.945,10860,4.945,10861,4.945,10862,4.945,10863,4.945,10864,4.945,10865,4.945,10866,5.057,10867,4.945,10868,4.945,10869,4.945,10870,6.34,10871,6.34,10872,2.997,10873,3.434,10874,3.434,10875,3.434,10876,3.434,10877,3.434,10878,2.997,10879,3.434,10880,3.434,10881,3.434,10882,3.434,10883,3.434,10884,3.434,10885,3.434,10886,3.434]],["t/41",[757,2.62,10497,2.792]],["b/41",[10,2.418,19,1.681,20,1.163,24,0.863,30,1.246,31,1.837,35,0.414,36,1.629,37,0.768,38,0.952,44,1.087,47,2.22,48,0.967,53,0.974,54,0.538,59,0.984,61,1.555,62,3.053,66,1.225,67,0.348,68,2.065,78,1.838,97,1.163,99,1.204,101,1.439,104,1.024,105,0.538,115,0.91,117,2.386,124,0.122,160,0.921,161,0.984,175,1.052,176,1.904,177,1.223,182,0.922,206,1.686,227,2.821,232,0.368,242,1.239,244,0.588,253,2.269,261,1.448,266,0.984,269,0.391,272,4.442,276,1.495,279,3.121,280,3.121,288,3.121,289,3.121,292,2.386,298,1.974,299,1.6,303,1.759,315,1.963,316,0.762,317,0.536,320,0.768,321,1.06,333,1.113,335,1.27,341,0.591,351,0.782,353,1.06,354,1.097,355,0.984,360,2.269,365,0.677,372,0.922,385,0.892,386,0.509,398,2.142,401,0.864,402,0.563,409,3.761,457,1.163,459,1.387,460,1.439,468,2.086,473,0.038,474,0.039,481,0.727,482,4.615,484,1.108,485,2.418,487,1.631,489,0.705,490,1.087,493,1.173,500,0.53,501,0.793,503,0.812,506,0.654,509,1.163,511,2.345,512,0.879,514,0.708,518,1.042,521,0.555,522,0.747,525,1.528,527,0.863,528,0.732,529,0.832,531,1.618,533,2.007,536,3.219,537,2.269,549,2.418,552,1.931,553,1.163,557,1.387,559,1.017,560,1.113,563,0.538,564,1.337,573,0.952,574,0.779,576,1.769,582,0.924,585,2.1,587,1.963,592,3.049,601,1.987,603,0.986,604,1.305,606,0.727,607,1.931,608,1.387,609,1.761,610,2.967,611,1.163,613,2.597,616,0.591,617,0.915,618,0.536,622,0.555,625,1.04,626,0.684,627,0.707,628,0.737,629,0.715,630,0.707,631,0.707,633,0.768,637,1.093,638,0.799,641,0.799,643,0.799,644,0.984,645,0.799,646,0.864,648,0.864,654,1.837,667,0.618,675,0.984,677,0.761,680,1.124,682,0.799,683,0.708,684,0.793,685,1.052,687,1.6,689,1.134,694,2.1,705,1.124,710,1.04,715,0.952,723,1.439,732,0.95,753,2.065,755,1.497,757,3.23,759,1.928,765,1.246,767,0.954,770,1.555,776,1.163,780,1.543,791,1.401,793,2.269,794,1.452,806,2.577,811,3.121,812,3.053,814,1.448,816,1.995,820,2.418,828,2.543,830,1.931,833,1.555,835,1.167,836,1.291,848,1.842,849,1.548,853,1.356,854,1.842,885,1.124,895,1.618,896,2.049,898,2.142,910,2.577,916,1.687,919,1.387,926,1.135,940,1.618,947,2.922,963,1.618,990,1.931,993,2.139,1013,2.269,1015,1.618,1019,3.121,1023,2.03,1024,1.618,1033,2.03,1034,2.418,1035,1.904,1044,2.142,1065,2.821,1087,2.303,1091,1.163,1107,1.6,1113,1.761,1117,1.087,1155,3.697,1174,1.618,1180,2.415,1181,1.687,1190,2.821,1192,2.597,1196,1.713,1201,2.049,1243,2.269,1258,1.246,1285,1.495,1288,2.552,1289,1.761,1313,2.418,1335,2.269,1336,2.89,1347,2.597,1351,3.654,1354,1.842,1362,1.448,1366,2.146,1369,0.984,1372,0.649,1374,1.003,1382,0.768,1383,0.888,1385,0.824,1386,0.988,1391,2.142,1395,0.576,1396,2.415,1397,1.832,1426,2.89,1428,1.246,1433,0.864,1444,0.954,1445,1.024,1448,1.097,1449,1.155,1450,0.974,1451,0.974,1459,1.077,1461,1.077,1464,1.444,1466,1.151,1467,1.189,1468,1.254,1469,1.528,1472,1.27,1475,1.312,1478,0.952,1483,0.984,1485,0.984,1488,0.952,1489,1.017,1492,1.017,1493,0.984,1494,1.052,1498,1.087,1499,1.087,1501,1.087,1502,1.087,1505,1.555,1507,1.931,1513,1.404,1516,0.952,1528,2.89,1531,2.216,1534,1.853,1544,1.761,1545,1.931,1587,2.142,1589,3.121,1599,1.761,1608,2.03,1613,1.337,1615,1.052,1616,4.504,1645,2.821,1680,1.136,1760,1.291,1894,1.904,1913,1.761,1921,2.597,1943,1.302,1966,2.682,2037,1.904,2098,2.401,2154,3.049,2162,2.418,2172,0.038,2175,1.052,2305,2.03,2308,2.03,2357,2.03,2424,3.049,2438,1.27,2442,3.697,2471,1.439,2540,1.246,2619,2.142,2621,3.442,2660,1.017,2688,2.03,2787,2.03,2806,1.387,2849,2.065,2856,2.03,2860,4.442,2863,2.418,2895,2.418,2909,1.337,2910,1.687,2916,2.269,2987,2.418,3001,3.049,3024,2.299,3086,1.687,3101,1.931,3184,1.387,3187,1.931,3202,3.121,3203,5.094,3229,3.697,3234,2.622,3260,5.652,3425,1.931,3441,2.269,3454,2.049,3511,1.761,3580,2.597,3598,2.418,3621,2.919,3655,2.269,3736,3.697,3750,4.305,3762,1.842,3775,2.03,3852,2.418,3927,2.821,3951,2.821,3954,2.821,4004,2.269,4018,3.121,4099,5.513,4167,3.121,4212,3.121,4228,1.842,4266,3.121,4290,2.749,4341,2.03,4342,1.931,4379,3.121,4451,2.821,4454,5.384,4455,5.173,4471,2.89,4497,2.128,4501,4.008,4506,1.842,4597,3.442,4617,2.597,4627,3.18,4778,3.55,4782,2.418,4790,2.142,4791,2.821,4810,3.083,4824,3.55,4830,1.618,4847,1.555,4898,2.418,4982,3.121,5089,2.821,5133,2.213,5140,3.697,5206,2.03,5211,1.618,5212,1.761,5213,1.761,5227,2.03,5232,3.121,5241,2.749,5246,2.03,5431,4.027,5449,1.618,5459,2.919,5472,2.269,5496,2.821,5538,3.121,5552,2.597,5553,2.597,5558,2.418,5577,2.142,5579,2.418,5594,2.142,5604,3.791,5728,2.142,5939,2.128,5953,3.875,6124,1.931,6533,2.269,6781,2.597,6787,2.597,7133,2.821,7170,2.597,7171,2.269,7498,4.442,7699,2.597,7747,2.269,8052,4.442,8166,2.269,8235,4.468,8373,2.821,8535,5.094,8657,3.23,8658,2.269,8659,3.23,8660,3.23,8737,2.597,9862,2.597,10134,2.821,10496,2.269,10617,4.016,10887,3.576,10888,5.09,10889,5.3,10890,3.576,10891,5.09,10892,3.576,10893,3.121,10894,3.576,10895,3.576,10896,2.821,10897,3.576,10898,3.576,10899,3.576,10900,5.09,10901,3.576,10902,3.576,10903,3.576,10904,3.576,10905,3.576,10906,5.09,10907,3.576,10908,3.576,10909,3.576,10910,3.576,10911,4.016,10912,3.576,10913,3.576,10914,5.927,10915,3.576,10916,3.121,10917,3.576,10918,3.576,10919,3.576,10920,3.576,10921,3.576,10922,5.09,10923,3.576,10924,3.576,10925,5.09,10926,5.09,10927,3.576,10928,3.576,10929,3.576,10930,5.151,10931,3.576,10932,7.298,10933,7.59,10934,5.927,10935,3.576,10936,3.576,10937,2.821,10938,3.576,10939,5.09,10940,3.576,10941,5.09,10942,3.576,10943,3.576,10944,3.576,10945,3.576,10946,3.576,10947,3.576,10948,3.576,10949,3.576,10950,3.576,10951,3.576,10952,5.09,10953,3.576,10954,3.576,10955,4.016,10956,3.576,10957,3.576,10958,3.576,10959,5.09,10960,3.576,10961,3.576,10962,3.576,10963,3.576,10964,3.576,10965,3.576,10966,3.576,10967,3.576,10968,2.269,10969,3.576,10970,3.576,10971,3.576,10972,3.576,10973,5.09,10974,3.576,10975,3.576,10976,3.576,10977,3.576,10978,3.576,10979,3.576,10980,3.576,10981,3.576,10982,3.576,10983,3.576,10984,3.576,10985,3.576,10986,3.576,10987,3.576,10988,3.576,10989,5.09,10990,3.576,10991,3.576,10992,3.576,10993,3.576,10994,3.576,10995,3.576,10996,3.576,10997,3.576,10998,3.576,10999,3.576,11000,3.576,11001,3.576,11002,3.576,11003,3.576,11004,3.576,11005,3.576,11006,3.576,11007,3.576,11008,3.576,11009,3.576,11010,3.121,11011,3.576,11012,3.576,11013,3.576,11014,3.576,11015,5.09,11016,3.576,11017,3.576,11018,5.09,11019,3.576,11020,3.576,11021,3.576,11022,3.576,11023,3.576,11024,3.576,11025,3.576,11026,3.576,11027,3.576,11028,5.927,11029,5.09,11030,3.576,11031,3.121,11032,3.576,11033,3.576,11034,3.576,11035,3.576,11036,3.576,11037,3.576,11038,5.09,11039,3.576,11040,5.09,11041,3.576,11042,3.576,11043,3.576,11044,3.576,11045,3.576,11046,3.576,11047,3.576,11048,3.576,11049,5.09,11050,3.576,11051,3.576,11052,3.576,11053,5.09,11054,3.576,11055,3.576,11056,3.576,11057,3.576,11058,3.576,11059,3.576,11060,6.458,11061,3.576,11062,5.173,11063,5.927,11064,3.576,11065,5.09,11066,5.09,11067,4.442,11068,3.576,11069,3.576,11070,3.576,11071,4.442,11072,2.418,11073,3.576,11074,3.576,11075,3.576,11076,3.576,11077,3.576,11078,3.576,11079,3.576,11080,3.576,11081,3.576,11082,3.576,11083,3.576,11084,3.576,11085,3.576,11086,3.576,11087,3.576,11088,3.576,11089,3.576,11090,3.576,11091,3.576,11092,3.576,11093,3.576,11094,3.576,11095,5.09,11096,5.09,11097,3.576,11098,3.576,11099,3.576,11100,3.576,11101,3.576,11102,3.576,11103,3.576,11104,5.09,11105,3.576,11106,3.576,11107,3.576,11108,3.576,11109,3.576,11110,5.09,11111,3.576,11112,3.576,11113,4.676,11114,3.576,11115,3.576,11116,3.576,11117,3.576,11118,3.576,11119,3.576,11120,3.576,11121,5.09,11122,5.09,11123,3.576,11124,3.576,11125,3.576,11126,3.576,11127,3.576,11128,3.576,11129,3.576,11130,3.576,11131,7.093,11132,5.927,11133,5.927,11134,3.576,11135,3.576,11136,3.576,11137,3.576,11138,5.09,11139,3.576,11140,5.09,11141,3.576,11142,3.576,11143,3.576,11144,3.576,11145,3.576,11146,3.576,11147,3.576,11148,3.576,11149,6.458,11150,3.576,11151,3.576,11152,3.576,11153,3.576,11154,3.576,11155,3.576,11156,3.576,11157,3.576,11158,3.121,11159,3.121,11160,3.576,11161,3.121,11162,5.636,11163,3.576,11164,3.576,11165,5.09,11166,4.442,11167,3.576,11168,3.576,11169,3.576,11170,3.576,11171,6.458,11172,5.09,11173,3.121,11174,3.576,11175,5.09,11176,5.09,11177,5.09,11178,5.09,11179,4.442,11180,3.576,11181,3.576,11182,3.576,11183,3.576,11184,5.927,11185,2.597,11186,3.576,11187,3.576,11188,2.597,11189,3.576,11190,3.576,11191,3.576,11192,3.576,11193,3.576,11194,3.576,11195,3.576,11196,3.576,11197,3.576,11198,3.121,11199,3.576,11200,3.121,11201,3.576,11202,5.09,11203,5.927,11204,3.697,11205,3.576,11206,3.576,11207,3.576,11208,3.576,11209,3.576,11210,3.576,11211,3.576,11212,3.576,11213,3.576,11214,3.576,11215,3.576,11216,3.576,11217,3.576,11218,3.576,11219,3.576,11220,3.576,11221,3.576]],["t/42",[394,1.109,1105,1.24,5108,1.15,11222,2.34]],["b/42",[19,1.601,22,0.957,35,0.429,36,1.642,37,0.743,44,1.469,47,1.572,54,0.611,59,1.33,67,0.343,79,2.716,104,1.079,105,0.611,115,0.864,124,0.122,160,1.136,162,1.654,170,1.006,171,1.808,175,1.421,177,1.037,190,2.176,196,2.734,197,3.903,225,2.744,232,0.395,242,0.778,244,0.598,269,0.423,276,2.021,298,1.875,299,2.44,320,0.743,321,1.117,333,1.057,334,3.268,339,3.813,341,0.633,353,1.117,354,0.894,365,0.725,386,0.597,391,2.035,394,2.589,397,3.889,401,0.836,402,0.603,459,1.875,473,0.052,474,0.048,477,2.28,481,0.744,484,0.836,498,2.895,500,0.533,503,0.575,506,0.463,507,2.021,512,0.622,514,0.957,515,1.322,518,1.417,522,0.801,523,1.287,528,1.279,533,1.421,541,2.38,543,1.469,544,2.61,550,2.38,563,0.643,573,1.287,574,0.767,576,1.558,585,1.572,587,1.469,601,1.287,603,1.079,604,0.864,605,2.744,606,0.726,616,0.693,617,0.823,618,0.574,622,0.751,625,0.778,626,0.694,627,0.757,628,0.79,629,0.725,630,0.757,631,0.757,633,0.823,634,1.671,637,1.096,638,0.857,641,0.773,643,0.773,644,1.905,645,0.773,646,0.836,648,0.836,654,1.744,656,3.076,667,0.835,668,1.421,677,0.626,679,1.808,680,2.176,682,0.598,683,1.054,684,0.98,689,0.925,710,1.006,723,1.945,732,0.647,751,2.021,753,2.177,767,1.006,777,2.254,794,0.989,806,2.716,828,2.549,848,2.49,856,2.49,901,3.268,926,0.869,947,2.827,1018,2.101,1105,3.059,1107,1.52,1137,3.181,1162,1.287,1213,1.875,1243,3.067,1270,2.49,1279,1.945,1285,2.021,1298,3.813,1362,1.375,1363,1.684,1372,0.442,1374,0.751,1376,1.671,1382,0.743,1383,0.936,1385,0.869,1386,1.042,1395,1.302,1397,1.508,1428,2.177,1433,0.836,1436,2.751,1437,2.939,1444,1.006,1445,1.079,1448,1.156,1449,1.117,1450,0.925,1451,0.925,1468,1.023,1513,1.436,1531,1.375,1544,2.38,1613,1.808,1615,1.421,1659,2.744,1680,1.177,1684,1.808,1853,2.254,1894,1.808,1943,0.778,2172,0.052,2175,1.421,2179,2.514,2360,3.547,2397,2.28,2425,3.964,2459,2.61,2544,2.187,2573,2.38,2613,3.067,2660,1.375,2682,2.49,2764,3.218,2806,2.423,2833,1.744,2910,3.574,2915,3.451,2992,2.017,3010,3.51,3393,2.61,3567,2.947,3608,5.027,3616,3.268,3746,4.146,3801,3.067,3824,2.28,3923,3.268,3930,3.813,4004,3.067,4023,4.925,4024,5.027,4144,2.895,4184,2.895,4427,3.769,4498,1.744,4821,2.101,4830,2.187,4846,3.813,4907,3.268,4908,3.268,4942,3.283,4976,3.132,5006,2.38,5010,2.101,5012,2.49,5108,3.256,5133,2.101,5134,3.067,5210,2.49,5214,2.38,5227,2.744,5246,2.744,5430,2.61,5431,2.744,5449,2.187,5450,3.067,5451,3.51,5459,3.822,5470,3.547,5644,3.374,5650,3.547,5669,3.813,5879,4.928,6040,3.566,6065,3.268,6124,2.61,6169,3.813,6170,3.813,6171,3.813,6172,3.813,6173,3.51,6174,3.51,7263,3.51,7264,3.813,7854,3.268,8629,5.452,8668,3.964,8669,3.964,8670,3.964,8898,3.813,8899,3.813,9251,4.218,9344,4.393,9345,4.393,9354,3.51,9379,2.895,10176,5.248,10384,3.067,10385,5.772,10646,3.51,10663,3.813,10664,3.51,10665,4.218,10673,4.928,10680,3.813,10719,4.218,10720,4.218,10722,6.379,10724,4.218,10725,6.772,10726,4.218,10727,4.218,10728,4.218,10729,4.218,10732,5.452,10734,5.452,10735,4.928,10737,4.218,10738,6.386,10805,4.928,10878,4.218,11185,4.537,11223,4.833,11224,4.833,11225,4.218,11226,4.218,11227,4.218,11228,6.247,11229,4.833,11230,4.833,11231,4.833,11232,6.892,11233,4.218,11234,4.833,11235,4.833,11236,4.833,11237,4.833,11238,3.51,11239,4.218,11240,4.833,11241,4.833,11242,4.218,11243,4.833,11244,4.833,11245,4.833,11246,4.833,11247,4.833,11248,6.041,11249,4.833,11250,4.833,11251,4.833,11252,7.317,11253,4.833,11254,6.247,11255,4.833,11256,4.833,11257,4.833,11258,4.833,11259,4.833,11260,4.833,11261,4.833,11262,4.218,11263,4.833,11264,6.386,11265,7.576,11266,6.247,11267,6.247,11268,4.833,11269,4.537,11270,5.46,11271,4.218,11272,4.218,11273,4.833,11274,4.833,11275,4.218,11276,4.218,11277,4.218,11278,4.218,11279,6.247,11280,4.218,11281,4.218,11282,4.218,11283,4.218,11284,4.218,11285,4.833,11286,4.833,11287,4.833,11288,4.833,11289,4.833,11290,4.833,11291,4.833,11292,4.833,11293,4.833,11294,4.833,11295,4.833,11296,6.247,11297,4.833,11298,4.833,11299,4.833,11300,4.833,11301,4.833,11302,4.833,11303,4.833,11304,4.833,11305,4.833,11306,3.51]],["t/43",[603,0.48,760,1.291,10497,2.334]],["b/43",[19,1.618,20,1.666,22,1.014,35,0.397,37,0.609,38,1.365,48,0.767,53,0.981,54,0.589,59,2.169,66,1.12,67,0.354,68,1.785,82,1.785,97,1.666,104,0.885,105,0.511,124,0.122,130,1.916,170,1.268,175,2.459,183,1.197,195,1.32,196,1.849,197,2.639,231,1.916,232,0.31,242,1.044,244,0.605,261,2.127,269,0.334,303,1.834,320,0.609,321,0.916,333,1.418,335,1.278,340,1.987,341,0.593,353,0.916,354,0.948,355,1.41,365,0.68,385,1.278,386,0.56,401,0.686,402,0.565,434,1.611,435,1.916,473,0.055,474,0.049,481,0.621,484,1.033,489,0.609,490,2.163,493,1.408,500,0.537,506,0.491,511,2.237,512,0.835,522,0.561,533,1.506,563,0.589,574,0.805,576,1.278,582,0.937,585,1.666,596,1.558,603,0.989,606,0.621,616,0.593,617,0.771,618,0.538,622,1.007,625,1.145,626,0.65,627,0.561,628,0.585,629,0.537,630,0.561,631,0.561,633,0.609,637,0.971,638,0.634,641,0.634,643,0.634,645,0.634,646,0.686,648,0.686,654,2.34,667,1.12,668,1.907,677,0.713,681,1.916,682,0.803,683,0.712,684,0.686,710,0.825,753,1.785,760,2.885,769,0.796,770,2.227,773,1.558,794,1.327,828,1.785,835,1.224,926,1.185,1015,2.318,1027,6.208,1033,4.039,1034,4.811,1261,2.318,1285,2.711,1288,1.916,1362,2.024,1369,1.41,1372,0.684,1374,0.796,1382,0.609,1383,0.767,1385,0.712,1386,0.854,1395,1.303,1396,1.916,1397,1.862,1433,0.686,1444,0.825,1445,0.885,1448,0.948,1449,0.916,1450,0.981,1451,0.981,1459,1.084,1461,1.084,1464,1.084,1466,1.158,1467,1.197,1468,1.084,1469,1.32,1472,1.278,1475,1.32,1478,1.365,1483,1.41,1485,1.41,1488,1.365,1489,1.457,1492,1.457,1493,1.41,1494,1.506,1498,1.558,1499,1.558,1501,1.558,1502,1.558,1504,1.611,1505,2.227,1509,1.724,1510,1.724,1511,1.724,1512,1.849,1513,1.316,1517,2.34,1531,2.127,1534,1.747,1680,1.223,1693,1.849,1834,3.721,1853,2.34,1885,2.273,2032,1.916,2033,1.987,2037,1.916,2039,1.987,2040,1.987,2042,1.987,2044,1.987,2045,1.916,2046,1.987,2047,1.987,2172,0.055,2518,2.934,2544,2.934,2764,2.639,2909,2.425,2926,3.721,3024,3.141,3885,5.375,4172,6.208,4457,4.709,4498,2.34,4942,2.61,5010,3.25,5012,3.34,5160,3.251,5210,3.34,5214,3.193,5429,4.042,5430,2.767,5451,4.709,5459,3.193,5463,5.899,5465,6.085,5470,2.909,5652,3.682,5670,5.659,5822,3.721,6065,5.056,6124,2.767,6499,4.709,7218,4.042,8674,3.251,8675,3.251,8676,3.251,9883,4.471,11306,3.721,11307,7.477,11308,6.484,11309,5.659,11310,6.484,11311,6.484,11312,6.484,11313,7.114,11314,6.484,11315,6.484,11316,7.477,11317,6.484,11318,6.484,11319,6.484,11320,6.208,11321,5.123,11322,5.123,11323,6.484,11324,7.114,11325,5.123,11326,7.477,11327,5.123,11328,5.123,11329,5.123,11330,4.471,11331,7.114,11332,5.123,11333,6.484,11334,5.123,11335,5.123,11336,5.123,11337,5.123,11338,5.123,11339,5.123,11340,6.484,11341,4.042,11342,3.721,11343,5.123,11344,5.659,11345,3.721,11346,3.465,11347,4.042,11348,5.123,11349,5.123,11350,5.123,11351,7.713,11352,6.484,11353,5.123,11354,7.477,11355,6.484,11356,6.484,11357,5.123,11358,5.123,11359,6.484]],["t/44",[31,1.49,11360,4.129]],["b/44",[9,3.305,31,2.422,98,2.701,101,3.069,244,0.57,473,0.072,474,0.058,481,0.643,489,0.798,521,1.042,675,1.847,706,3.81,727,2.51,852,3.037,890,5.856,1145,1.62,1179,3.457,2172,0.072,2537,3.305,3144,3.165,3457,2.917,4415,5.294,6526,4.538,6841,5.856,11233,5.856,11361,6.71]],["t/45",[298,1.339,299,1.085,11362,2.334]],["b/45",[11,1.388,19,1.537,20,1.91,26,1.652,34,1.471,35,0.43,36,1.779,37,0.698,38,1.564,47,1.91,48,1.088,53,0.963,54,0.596,67,0.321,89,1.364,97,1.636,104,0.869,105,0.556,115,0.629,124,0.122,130,1.316,131,1.471,159,1.529,160,1.174,162,0.795,170,0.566,176,1.316,177,1.016,182,0.907,183,0.822,187,1.308,190,2.283,231,1.316,232,0.381,233,1.659,234,1.812,242,1.169,244,0.573,261,1.431,269,0.395,295,3.07,298,2.278,299,2.377,301,5.126,313,3.07,316,0.527,317,0.88,320,0.698,321,0.899,329,3.07,333,1.1,335,1.255,337,3.07,340,1.951,341,0.62,350,2.107,351,1.483,353,0.899,354,0.931,355,0.968,365,0.739,372,0.907,383,2.857,385,1.692,386,0.585,401,0.786,402,0.591,411,1.471,424,1.812,434,1.106,435,1.316,450,4.391,457,1.144,459,1.364,468,1.727,470,2.77,473,0.063,474,0.038,477,2.373,480,1.364,481,0.758,483,0.931,484,0.471,487,0.968,489,0.418,490,2.062,493,1.47,500,0.537,501,0.972,503,0.598,506,0.614,507,2.104,511,2.283,512,0.453,514,1.396,515,1.674,518,0.72,521,0.781,522,0.643,525,1.652,528,0.72,529,0.648,536,2.373,540,3.335,541,2.478,543,1.949,544,3.172,545,2.892,547,1.529,552,1.9,553,2.085,559,2.007,560,1.1,563,0.612,564,1.316,565,1.9,570,2.233,572,2.233,573,1.564,574,0.781,575,2.277,576,1.465,578,1.592,582,0.795,584,1.9,585,1.91,587,2.062,596,1.069,601,1.978,603,1.01,604,1.298,606,0.725,610,2.948,616,0.62,618,0.585,622,0.546,625,0.566,626,0.68,627,0.701,628,0.774,629,0.616,630,0.643,631,0.643,633,0.698,634,1.924,635,3.727,637,1.163,638,0.727,641,0.727,643,0.727,644,2.044,645,0.727,646,0.786,648,0.786,649,1.27,652,2.555,654,2.546,655,3.518,667,1.218,668,1.034,677,0.643,679,1.316,680,1.582,681,1.316,682,0.623,683,0.7,684,0.786,685,1.034,687,1.106,689,1.298,693,3.654,700,1.471,704,1.27,718,1.364,724,1.226,751,1.471,755,1.034,757,2.233,759,1.144,760,1.316,767,1.032,769,0.781,773,1.949,776,1.144,777,1.27,780,1.679,786,0.907,790,1.364,794,1.03,814,1.431,835,0.754,847,2.277,858,1.144,918,2.025,926,0.891,963,1.592,965,3.07,993,2.12,1015,2.277,1024,1.592,1033,4.356,1035,1.316,1042,2.717,1058,1.529,1061,3.07,1092,1.364,1104,1.693,1107,2.132,1117,1.786,1147,1.226,1149,2.555,1155,2.555,1162,1.564,1175,2.233,1178,2.379,1179,2.592,1180,1.882,1186,1.9,1194,1.226,1196,1.977,1201,2.025,1208,2.233,1234,1.529,1237,1.529,1244,1.316,1258,1.226,1260,1.226,1267,2.233,1285,2.104,1288,2.197,1290,1.753,1325,1.416,1354,1.812,1362,1.823,1363,2.046,1364,1.529,1366,1.582,1372,0.537,1376,1.418,1377,1.416,1378,1.144,1379,1.27,1382,0.698,1383,0.88,1385,0.817,1386,0.98,1395,1.092,1397,0.849,1433,0.786,1436,2.942,1437,3.237,1438,2.233,1439,1.997,1440,3.471,1441,3.024,1444,0.945,1445,0.869,1448,0.931,1449,1.146,1450,0.963,1451,0.963,1459,1.065,1461,1.065,1464,1.065,1466,1.137,1467,1.175,1468,1.356,1469,1.297,1472,1.255,1475,1.297,1478,1.879,1483,1.617,1485,1.385,1488,1.34,1489,1.001,1492,1.001,1493,0.968,1494,1.034,1496,2.592,1498,1.069,1499,1.069,1501,1.069,1502,1.069,1504,1.106,1509,1.184,1510,1.184,1511,1.184,1512,1.27,1513,0.651,1514,1.659,1515,1.812,1524,1.364,1531,2.231,1534,1.697,1548,3.193,1555,4.633,1561,3.969,1587,3.014,1595,1.471,1613,1.316,1615,1.479,1662,1.529,1673,1.9,1680,1.018,1693,1.27,1727,1.529,1853,2.802,1861,2.233,1943,1.092,1958,2.233,1973,1.416,1992,3.462,1994,3.462,2032,1.316,2033,1.364,2037,1.316,2039,1.364,2040,1.364,2042,1.364,2044,1.364,2045,1.316,2046,1.364,2047,1.364,2050,1.416,2051,1.364,2052,1.471,2056,1.529,2057,1.529,2058,1.529,2060,1.529,2062,1.529,2064,1.416,2067,1.364,2071,1.529,2072,1.529,2074,1.529,2077,1.529,2078,1.592,2079,1.592,2081,1.659,2084,1.659,2085,1.659,2086,1.659,2087,1.659,2088,1.732,2092,1.732,2093,1.732,2094,1.659,2096,1.732,2099,1.659,2100,1.732,2101,1.812,2102,1.812,2104,1.812,2106,1.812,2107,1.812,2108,1.812,2110,1.812,2112,1.812,2114,1.812,2116,1.812,2117,1.812,2118,1.9,2119,1.9,2122,1.997,2124,1.997,2127,1.997,2130,1.997,2131,1.997,2133,1.997,2134,1.9,2135,1.997,2138,1.997,2140,1.997,2141,1.997,2143,1.9,2144,1.997,2145,1.997,2172,0.054,2267,3.727,2380,5.729,2397,1.659,2424,2.107,2438,1.76,2440,2.775,2459,3.663,2466,2.379,2471,2.025,2487,1.997,2540,2.046,2544,1.592,2573,1.732,2660,1.431,2687,3.518,2740,1.812,2787,1.997,2806,1.951,2849,1.753,2909,1.882,2910,3.566,2915,3.504,2973,1.364,2976,3.07,2977,3.07,2992,1.692,3024,1.364,3064,2.233,3098,3.972,3139,1.997,3187,2.717,3208,2.555,3259,2.555,3267,3.34,3311,1.732,3312,1.732,3315,2.717,3497,2.555,3526,1.416,3533,2.107,3538,3.07,3567,3.199,3574,3.07,3621,2.478,3653,2.107,3700,3.969,3736,3.654,3746,3.839,3812,3.193,3813,5.35,3816,4.391,3817,3.07,3820,3.969,3821,1.997,3842,2.775,3923,2.379,3930,2.775,3993,2.775,4004,2.233,4005,5.126,4006,4.391,4007,4.391,4013,5.126,4019,3.972,4021,5.126,4023,5.091,4024,5.394,4175,2.555,4198,4.655,4262,2.107,4301,3.402,4448,3.639,4471,1.997,4475,3.969,4498,1.27,4511,3.014,4513,3.172,4597,2.379,4606,4.391,4680,3.07,4778,2.107,4780,3.839,4790,3.014,4810,2.948,4821,2.948,4830,1.592,4846,5.729,4852,3.193,4907,2.379,4908,2.379,4909,4.77,4926,5.594,4942,1.416,4976,1.592,4980,1.9,5010,2.553,5160,2.233,5227,1.997,5364,3.07,5604,2.892,5939,2.68,6773,2.775,7347,3.07,7375,3.07,7642,5.126,7787,2.555,7890,2.775,7935,2.775,8064,2.775,8584,3.969,8585,2.775,8661,2.233,8780,4.391,8800,2.775,9309,2.775,9344,2.233,9345,2.233,9349,3.07,9354,2.555,9379,4.529,9391,2.775,10265,2.555,10267,4.391,10358,2.775,10385,5.565,10397,2.775,10456,2.775,10476,4.391,10477,4.391,10481,4.391,10482,4.391,10488,2.555,10721,2.775,10811,2.555,10955,2.775,10968,2.233,11185,3.654,11264,5.126,11269,4.655,11271,5.126,11272,3.07,11275,3.07,11276,3.07,11277,4.391,11278,3.07,11280,3.07,11281,3.07,11282,3.07,11283,3.07,11284,3.07,11320,4.391,11363,3.518,11364,3.518,11365,3.07,11366,3.518,11367,3.518,11368,3.518,11369,3.07,11370,3.518,11371,5.873,11372,3.518,11373,5.031,11374,3.518,11375,3.518,11376,5.031,11377,5.031,11378,3.518,11379,3.518,11380,3.518,11381,3.518,11382,3.518,11383,3.518,11384,3.07,11385,2.555,11386,3.518,11387,5.031,11388,3.518,11389,3.518,11390,5.031,11391,3.518,11392,3.518,11393,3.518,11394,3.518,11395,5.031,11396,3.518,11397,3.518,11398,3.518,11399,3.969,11400,3.518,11401,3.518,11402,3.518,11403,5.873,11404,3.518,11405,3.518,11406,3.518,11407,3.518,11408,5.031,11409,3.518,11410,3.518,11411,3.518,11412,6.781,11413,5.031,11414,3.518,11415,3.518,11416,5.031,11417,3.518,11418,5.031,11419,3.518,11420,3.518,11421,3.518,11422,5.031,11423,5.031,11424,3.518,11425,5.031,11426,3.518,11427,3.518,11428,3.518,11429,3.518,11430,3.518,11431,3.518,11432,3.518,11433,3.518,11434,3.518,11435,3.518,11436,3.518,11437,3.518,11438,3.518,11439,3.518,11440,3.518,11441,3.518,11442,3.518,11443,3.518,11444,3.518,11445,3.518,11446,5.031,11447,5.031,11448,3.518,11449,3.518,11450,3.518,11451,3.518,11452,3.518,11453,3.518,11454,3.518,11455,6.41,11456,5.873,11457,3.518,11458,3.518,11459,3.518,11460,5.031,11461,5.031,11462,3.518,11463,3.518,11464,3.518,11465,3.518,11466,3.518,11467,3.972,11468,3.518,11469,3.518,11470,5.031,11471,3.518,11472,3.518,11473,3.518,11474,3.518,11475,3.518,11476,3.518,11477,5.031,11478,3.518,11479,3.518,11480,3.518,11481,3.518,11482,3.518,11483,3.518,11484,3.518,11485,3.518,11486,3.518,11487,3.518,11488,3.518,11489,4.633,11490,3.518,11491,5.594,11492,5.031,11493,3.969,11494,3.518,11495,5.031,11496,3.518,11497,4.391,11498,3.07,11499,5.031,11500,5.031,11501,5.031,11502,5.031,11503,4.391,11504,3.518,11505,3.518,11506,3.07,11507,3.518,11508,3.518,11509,3.518,11510,3.518,11511,3.969,11512,3.07,11513,3.518,11514,3.518,11515,3.518,11516,5.126,11517,5.031,11518,3.518,11519,3.07,11520,3.518,11521,3.518,11522,3.518,11523,3.518,11524,4.391,11525,5.031,11526,5.031,11527,3.518,11528,3.518,11529,3.518,11530,3.518,11531,3.518,11532,5.031,11533,3.518,11534,6.781,11535,3.518,11536,5.031,11537,3.518,11538,3.518,11539,3.518,11540,6.41,11541,3.518,11542,3.518,11543,3.518,11544,3.518,11545,3.518,11546,3.518,11547,3.518,11548,5.873,11549,3.518,11550,3.518,11551,3.518,11552,3.518,11553,3.518,11554,3.518,11555,3.518,11556,3.518,11557,3.518,11558,2.775,11559,3.518,11560,5.873,11561,5.873,11562,3.07,11563,3.518,11564,3.518,11565,3.518,11566,3.518,11567,3.518,11568,3.518,11569,3.518,11570,3.518,11571,4.391,11572,3.518,11573,3.518,11574,3.518,11575,3.518,11576,3.518,11577,3.518,11578,3.518,11579,3.518,11580,3.518,11581,3.518,11582,3.518,11583,3.518,11584,3.518,11585,3.518,11586,3.518,11587,3.518,11588,3.518,11589,3.518,11590,3.518,11591,3.518,11592,3.518,11593,3.518,11594,3.518,11595,3.07,11596,3.518,11597,3.07,11598,3.518,11599,2.775,11600,3.518,11601,3.07,11602,3.518,11603,3.518,11604,3.518,11605,3.518,11606,3.518,11607,5.031,11608,5.031,11609,5.031,11610,3.518,11611,5.031,11612,3.518,11613,3.518,11614,3.518,11615,3.518,11616,5.873,11617,3.518,11618,5.873,11619,3.518,11620,3.518,11621,5.031,11622,3.518,11623,3.518,11624,3.518,11625,3.518,11626,3.518,11627,3.518,11628,3.518,11629,3.518,11630,5.031,11631,3.518,11632,3.518,11633,5.031,11634,3.518,11635,3.518,11636,3.518,11637,3.518,11638,3.518,11639,3.518,11640,3.518,11641,3.518,11642,3.07,11643,3.07,11644,3.518,11645,3.518]],["t/46",[183,0.806,195,0.89,10614,2.723]],["b/46",[20,1.975,26,1.192,29,2.182,34,1.934,35,0.417,37,0.55,38,1.232,44,2.06,48,0.909,53,0.886,54,0.567,61,2.011,66,1.049,67,0.3,78,1.583,88,1.243,96,1.934,104,0.799,105,0.534,124,0.122,130,1.73,131,1.934,138,3.129,160,1.118,161,1.273,170,0.745,176,2.795,183,1.081,187,1.013,190,2.457,195,1.192,196,2.191,197,3.128,223,2.936,225,2.627,231,1.73,232,0.379,233,2.182,234,2.383,242,0.745,244,0.537,269,0.371,303,1.565,320,0.55,321,0.827,335,1.154,341,0.555,349,2.278,351,1.012,353,0.827,354,0.856,355,1.273,365,0.636,372,1.192,385,1.154,386,0.478,391,1.993,397,3.338,401,0.619,402,0.529,411,1.934,434,1.455,435,1.73,473,0.05,474,0.046,481,0.443,484,0.619,489,0.55,490,1.846,500,0.527,501,0.619,502,2.011,506,0.582,512,0.782,514,0.916,519,1.192,522,0.664,523,1.232,525,1.192,528,0.947,559,1.316,563,0.567,564,1.73,574,0.791,576,1.514,578,2.094,587,1.407,592,2.771,596,1.407,601,1.232,603,0.643,606,0.69,616,0.555,617,0.722,618,0.504,622,1.214,625,1.258,626,0.609,627,0.664,628,0.693,629,0.636,630,0.664,631,0.664,633,0.722,634,1.117,637,0.909,638,0.752,641,0.752,643,0.752,645,0.573,646,0.619,648,0.619,654,1.67,659,4.409,667,1.049,668,1.36,675,1.273,677,0.749,681,1.73,682,0.839,683,1.001,684,0.963,685,1.785,689,0.886,694,1.505,700,2.538,710,0.745,760,1.73,769,0.943,770,3.334,773,1.407,806,2.011,835,0.909,849,1.407,886,1.67,898,2.771,926,1.192,947,3.067,1035,1.73,1060,1.934,1086,2.99,1091,1.505,1101,1.73,1137,3.248,1145,1.117,1181,2.182,1194,2.116,1196,1.557,1234,2.011,1237,2.011,1279,1.862,1288,2.535,1290,1.612,1325,1.862,1369,1.671,1372,0.423,1374,0.719,1376,2.064,1378,1.975,1382,0.722,1383,0.693,1385,0.643,1386,0.772,1412,4.037,1424,5.299,1429,2.627,1433,0.907,1436,2.507,1438,2.936,1439,2.627,1440,3.067,1441,2.182,1444,0.745,1445,0.799,1448,0.856,1449,0.827,1450,0.886,1451,0.886,1459,0.979,1461,0.979,1464,0.979,1466,1.046,1467,1.081,1468,0.979,1469,1.192,1472,1.154,1475,1.192,1478,1.232,1483,1.273,1485,1.273,1488,1.232,1489,1.316,1492,1.316,1493,1.273,1494,1.36,1498,1.407,1499,1.407,1501,1.407,1502,1.407,1504,1.455,1509,1.557,1510,1.557,1511,1.557,1512,1.67,1513,0.856,1514,2.182,1515,2.383,1531,1.928,1534,1.418,1599,2.278,1727,2.946,1885,1.407,1943,0.745,1970,4.037,2032,1.73,2033,1.794,2037,1.73,2039,1.794,2040,1.794,2042,1.794,2044,1.794,2045,1.73,2046,1.794,2047,1.794,2050,1.862,2051,1.794,2052,1.934,2056,2.011,2057,2.011,2058,2.011,2060,2.011,2062,2.011,2064,1.862,2067,1.794,2071,2.011,2072,2.011,2074,2.011,2077,2.011,2078,2.094,2079,2.094,2081,2.182,2084,2.182,2085,2.182,2086,2.182,2087,2.182,2088,2.278,2092,2.278,2093,2.278,2094,2.182,2096,2.278,2099,2.182,2100,2.278,2101,2.383,2102,2.383,2104,2.383,2106,2.383,2107,2.383,2108,2.383,2110,2.383,2112,2.383,2114,2.383,2116,2.383,2117,2.383,2118,2.499,2119,2.499,2172,0.05,2308,2.627,2360,2.627,2426,2.182,2459,2.499,2687,2.771,2764,2.383,2925,2.499,2992,1.154,3087,2.771,3091,3.36,3184,1.794,3440,2.627,3567,2.182,3821,2.627,3923,3.129,4106,4.037,4206,4.037,4290,3.279,4445,3.129,4462,4.79,4498,1.67,4625,3.637,4833,3.36,4836,3.36,4942,3.438,5142,3.65,5430,2.499,5446,4.79,5459,4.22,5469,2.771,5470,2.627,5644,2.499,5650,2.627,5652,3.447,5875,5.914,5939,3.124,6192,3.65,6716,6.049,8166,2.936,8260,3.129,8261,3.129,8642,3.65,8677,2.936,9518,6.92,10178,4.037,10184,4.037,10356,5.299,10358,3.65,10383,4.037,10384,2.936,10424,4.037,10656,4.037,10731,4.106,10735,3.65,10779,5.299,11341,4.79,11342,4.409,11345,4.409,11346,4.106,11646,4.626,11647,4.626,11648,6.071,11649,6.071,11650,4.626,11651,4.626,11652,4.626,11653,4.626,11654,4.626,11655,4.626,11656,4.626,11657,4.626,11658,4.626,11659,6.071,11660,4.626,11661,4.626,11662,4.626,11663,6.777,11664,6.071,11665,4.626,11666,6.071,11667,4.626,11668,6.071,11669,4.626,11670,4.626,11671,6.071,11672,4.626,11673,4.626,11674,4.626,11675,6.071,11676,6.071,11677,6.071,11678,6.071,11679,6.071,11680,6.071,11681,6.071,11682,6.071,11683,6.071,11684,6.071,11685,6.071,11686,7.195,11687,6.071,11688,6.071,11689,6.071,11690,6.071,11691,7.929,11692,6.071,11693,6.071,11694,6.071,11695,6.071,11696,6.071,11697,7.195,11698,6.071,11699,6.071,11700,6.071,11701,6.071,11702,6.071,11703,6.071,11704,6.071,11705,6.071,11706,6.071,11707,6.071,11708,7.195,11709,6.071,11710,4.626,11711,4.626,11712,6.071,11713,4.626,11714,4.626,11715,4.626,11716,7.195,11717,4.626,11718,8.094,11719,4.626,11720,4.626,11721,4.626,11722,4.626,11723,4.037,11724,4.626,11725,4.626,11726,4.626,11727,4.626,11728,4.626,11729,4.626,11730,4.626,11731,4.626,11732,4.626,11733,6.071,11734,6.071,11735,6.071,11736,4.626,11737,4.626,11738,4.626,11739,4.626,11740,4.626,11741,6.071,11742,6.777,11743,6.777,11744,6.777,11745,4.626,11746,6.071,11747,6.071,11748,6.071,11749,4.626,11750,4.626,11751,6.071,11752,6.071,11753,4.626,11754,4.626,11755,4.626,11756,6.071,11757,6.071,11758,4.626,11759,6.071,11760,4.626,11761,4.626,11762,4.626,11763,4.626,11764,4.626,11765,4.626,11766,4.626,11767,4.626,11768,4.626,11769,4.626,11770,4.626,11771,4.626,11772,4.626,11773,4.626,11774,4.626,11775,4.626,11776,4.626,11777,4.626,11778,4.626,11779,4.626,11780,4.626,11781,6.071,11782,4.626,11783,4.626]],["t/47",[183,0.693,195,0.764,2537,1.46,10497,2.006]],["b/47",[11,1.192,26,1.941,35,0.419,37,0.692,38,1.551,47,2.282,53,1.114,54,0.593,66,1.35,67,0.31,104,1.005,105,0.459,124,0.122,160,0.904,183,1.639,187,0.971,190,2.368,195,1.809,196,2.101,232,0.36,242,0.937,244,0.598,269,0.388,303,2.063,320,0.692,321,1.041,333,1.535,335,1.452,341,0.532,349,3.941,353,1.041,354,1.077,355,1.602,365,0.61,385,1.452,386,0.459,401,0.779,402,0.507,434,1.83,473,0.062,474,0.053,481,0.672,482,3.937,483,1.077,484,0.779,500,0.503,501,1.008,502,2.531,510,4.453,511,2.459,512,0.75,514,1.548,522,0.637,529,0.75,559,1.656,563,0.553,573,2.006,574,0.795,582,0.914,588,4.228,590,5.081,591,5.942,593,3.937,595,5.081,597,5.081,598,5.081,599,5.081,600,5.081,606,0.722,607,3.144,609,3.456,610,3.05,611,2.282,616,0.532,617,0.967,618,0.483,622,0.904,625,0.937,626,0.704,627,0.637,628,0.664,629,0.61,630,0.637,631,0.637,633,0.692,634,1.694,636,2.543,637,1.051,638,0.721,641,0.721,642,4.593,643,0.721,644,1.931,645,0.721,646,0.779,648,0.779,656,2.867,658,4.593,659,5.096,661,4.593,662,4.203,667,1.005,671,2.258,677,0.584,681,2.177,682,0.869,683,0.976,684,0.939,685,1.712,689,1.343,700,2.434,714,6.574,769,0.904,773,1.77,784,3.79,794,1.192,926,0.976,1372,0.642,1374,0.904,1382,0.692,1383,0.872,1385,0.81,1386,0.971,1433,0.779,1444,0.937,1445,1.005,1448,1.077,1449,1.041,1450,1.114,1451,1.114,1459,1.232,1461,1.232,1464,1.232,1466,1.316,1467,1.36,1468,1.232,1469,1.501,1472,1.452,1475,1.501,1478,1.551,1483,1.602,1485,1.602,1488,1.551,1489,1.656,1492,1.656,1493,1.602,1494,1.712,1498,1.77,1499,1.77,1501,1.77,1502,1.77,1504,1.83,1505,2.531,1509,1.959,1510,1.959,1511,1.959,1512,2.101,1632,4.228,1727,3.274,1885,1.77,2172,0.062,2537,2.867,2572,3.937,2660,1.656,2973,2.258,3184,2.258,3821,3.306,3892,3.487,4213,4.228,4778,3.487,4782,3.937,4990,3.487,5246,3.306,5577,3.487,6124,3.144,7169,4.593,10496,3.695,11516,5.081,11784,5.822,11785,5.822,11786,5.822,11787,7.017,11788,5.822,11789,5.822,11790,7.017,11791,5.822,11792,5.822,11793,5.822,11794,5.822,11795,5.822,11796,5.822,11797,5.822,11798,7.532,11799,5.822,11800,5.822,11801,5.822,11802,5.822,11803,5.822,11804,5.822,11805,6.124,11806,5.822,11807,5.822,11808,5.822,11809,5.822,11810,5.822,11811,5.822,11812,5.822,11813,5.822,11814,5.822,11815,5.822]],["t/48",[2537,2.033,10497,2.792]],["b/48",[11,1.266,19,1.579,21,1.323,22,1.093,24,1.492,27,0.744,30,1.231,31,1.275,35,0.441,36,1.717,37,0.865,38,1.47,44,0.672,47,2.365,48,0.529,53,1.3,54,0.628,59,0.973,62,1.82,66,1.326,67,0.374,68,2.615,82,1.216,88,1.549,98,1.422,99,1.189,101,1.422,102,2.194,104,1.144,105,0.621,111,1.323,115,0.632,124,0.122,134,1.494,138,1.494,157,1.323,160,0.343,161,0.608,162,0.499,170,0.813,173,2.803,177,0.992,183,1.032,187,0.842,195,0.911,196,0.797,200,1.323,202,1.323,206,1.675,232,0.394,234,1.138,242,1.251,244,0.596,261,1.759,268,0.96,269,0.411,304,2.844,315,1.074,316,0.926,317,0.926,320,0.865,321,1.184,333,0.773,335,1.542,340,0.857,341,0.673,351,1.288,353,1.215,354,1.226,355,0.973,362,0.773,365,0.771,372,1.594,385,1.542,386,0.612,391,1.039,397,2.486,401,0.961,402,0.641,457,0.718,460,1.422,467,1.074,468,1.039,469,0.96,473,0.054,474,0.027,481,0.745,483,1.188,484,1.078,488,1.422,489,0.525,490,2.014,493,1.272,500,0.531,501,0.985,503,0.735,505,1.494,506,0.665,509,0.718,511,2.02,512,0.894,514,1.498,515,1.068,518,0.723,520,1.928,521,0.549,522,0.828,523,0.588,525,1.138,527,0.853,528,1.266,529,0.924,533,2.374,538,1.539,543,1.074,544,2.386,547,1.536,553,0.718,556,2.788,559,0.628,560,0.483,563,0.621,565,2.386,574,0.764,576,1.102,578,1,580,0.96,582,0.915,583,1.539,585,1.437,587,1.79,594,1.193,596,1.678,601,1.809,602,1.667,603,1.075,604,1.364,606,0.786,607,2.726,608,2.398,609,3.163,610,1.536,616,0.68,617,0.978,618,0.61,622,1.155,625,1.197,626,0.738,627,0.805,628,0.849,629,0.771,630,0.805,631,0.805,633,0.875,634,1.492,636,2.334,637,1.157,638,0.911,641,0.9,643,0.9,644,1.216,645,0.9,646,0.961,648,0.961,649,0.797,650,1.92,652,4.811,654,1.275,656,2.175,662,2.646,667,0.61,668,0.65,677,0.664,680,1.736,682,0.82,683,1.061,684,1.071,685,1.299,687,1.587,689,1.057,699,1.254,700,2.11,702,0.889,710,0.711,715,1.176,721,1.138,732,0.676,753,1.924,755,0.65,758,1,759,0.718,760,0.826,765,0.77,767,0.813,769,0.686,770,1.536,773,0.672,776,0.718,777,1.822,779,0.889,780,1.248,781,1.599,784,1.909,790,0.857,791,2.047,794,1.13,802,0.889,806,1.92,807,1.494,808,1.402,809,1.487,812,1.138,813,0.826,814,1.005,824,1.494,833,1.536,835,0.992,843,1.494,848,1.82,849,0.672,852,1,853,0.588,855,0.826,863,1.909,864,1.189,885,0.695,896,1.778,906,1.042,910,0.96,914,1.778,916,1.667,918,2.489,926,1.034,940,1.999,947,2.907,990,1.909,993,0.797,1015,1.599,1018,1.536,1035,0.826,1042,1.193,1046,1.138,1050,0.857,1052,1.928,1058,1.92,1059,1.042,1060,0.924,1069,0.718,1086,2.175,1087,1.999,1091,1.437,1104,1.189,1107,2.083,1113,1.088,1117,0.672,1119,0.96,1145,0.853,1162,1.647,1173,1.909,1174,3.247,1180,1.322,1181,1.667,1183,1.254,1187,1.909,1194,1.231,1195,1.402,1196,0.744,1201,0.889,1248,0.96,1253,1.494,1273,1.389,1279,1.422,1313,1.494,1325,0.889,1336,2.007,1348,1.371,1349,1.494,1351,1.138,1362,2.041,1363,1.759,1364,0.96,1366,1.389,1369,1.768,1372,0.729,1374,1.097,1376,1.706,1377,1.422,1378,1.149,1379,1.275,1381,1.402,1382,0.84,1383,1.058,1384,2.982,1385,0.965,1386,1.157,1395,1.309,1396,1.652,1397,1.865,1428,2.238,1433,0.929,1436,1.539,1437,1.958,1440,1.599,1441,1.667,1444,1.094,1445,1.173,1448,1.226,1449,1.215,1450,1.268,1451,1.3,1452,0.797,1456,1.82,1457,0.826,1459,1.359,1460,1.82,1461,1.359,1462,3.51,1464,1.359,1466,1.398,1467,1.444,1468,1.468,1469,1.594,1472,1.542,1475,1.594,1478,1.568,1483,1.519,1485,1.216,1488,0.941,1489,1.257,1492,1.005,1493,1.216,1494,1.299,1496,2.275,1498,1.074,1499,1.074,1501,0.672,1502,0.672,1504,0.695,1505,2.194,1507,1.909,1513,1.376,1517,2.125,1518,1.74,1524,0.857,1528,3.761,1531,1.436,1534,1.179,1544,1.74,1548,2.803,1552,3.203,1575,2.788,1598,1.778,1615,1.731,1616,1.254,1656,1.402,1662,3.29,1663,1.088,1664,0.924,1666,1.138,1673,1.193,1680,1.213,1681,1.088,1693,0.797,1712,2.11,1722,1.402,1727,1.536,1732,1.743,1771,1.604,1772,4.344,1843,0.889,1853,2.125,1885,1.953,1907,1.743,1927,1.088,1943,0.569,1946,0.628,1964,1.323,1971,2.907,1999,1.088,2017,1.928,2098,3.03,2116,1.138,2117,1.138,2118,1.193,2119,1.193,2122,1.254,2124,1.254,2127,1.254,2129,2.567,2130,1.254,2131,1.254,2133,2.007,2134,1.909,2135,1.254,2138,1.254,2143,1.193,2172,0.024,2176,1.193,2179,2.37,2189,2.72,2212,1.494,2279,2.508,2280,1.743,2283,2.987,2298,1.402,2308,1.254,2315,1.743,2322,0.924,2397,2.083,2417,3.855,2425,1.402,2438,0.551,2459,2.386,2460,1.928,2471,1.778,2473,1.193,2518,1.999,2537,1.088,2540,1.231,2544,1.999,2547,1.604,2551,2.243,2612,1.928,2613,3.203,2627,1.494,2629,3.084,2643,3.733,2655,1.193,2660,1.436,2676,0.924,2764,2.844,2787,2.007,2833,0.797,2849,1.231,2863,1.494,2909,1.322,2915,1.667,2916,1.402,2925,1.193,2949,1.494,2973,1.371,2979,3.033,2985,3.413,2991,1.924,2992,1.982,3068,1.82,3104,2.567,3124,1.138,3138,1.323,3154,1.494,3184,0.857,3187,1.193,3308,1.494,3313,2.646,3319,1.323,3485,2.567,3498,1.042,3526,0.889,3528,1.604,3533,2.117,3567,2.083,3621,2.175,3625,1.928,3634,1.193,3647,1.928,3801,1.402,3802,4.405,3803,1.847,3806,1.743,3812,2.243,3820,1.743,3824,1.042,3842,2.788,3871,1.494,3892,2.117,3905,1.743,4016,1.402,4088,2.788,4099,5.039,4176,2.117,4198,2.567,4235,1.928,4276,4.009,4280,5.396,4281,2.788,4290,1.193,4292,1.928,4301,2.39,4341,2.007,4342,1.909,4350,3.023,4369,1.743,4410,3.203,4427,3.033,4449,3.928,4454,1.743,4457,4.276,4465,5.225,4471,2.007,4497,2.308,4498,0.797,4503,1.928,4504,2.508,4506,1.138,4539,2.007,4552,3.666,4625,3.023,4627,2.719,4653,1.909,4674,1.928,4679,1.928,4776,1.254,4780,1.323,4821,0.96,4822,4.311,4824,3.703,4830,1.599,4834,1.402,4866,1.928,4867,3.084,4870,3.084,4872,4.405,4877,2.982,4878,1.928,4879,1.928,4880,3.084,4881,1.928,4882,1.928,4883,1.928,4884,2.788,4885,1.928,4886,1.928,4887,1.928,4897,1.743,4898,1.494,4899,1.743,4901,3.084,4902,3.084,4903,3.084,4904,2.788,4905,2.788,4915,1.494,4946,1.494,4981,1.604,5004,3.291,5006,1.088,5008,1.494,5009,1.604,5012,1.138,5019,1.928,5069,1.928,5094,2.117,5108,0.857,5118,1.494,5121,3.208,5124,1.138,5138,1.604,5141,1.494,5151,2.39,5156,1.743,5158,2.567,5185,1.743,5206,2.866,5209,1.138,5210,2.275,5211,2.798,5212,1.088,5213,1.088,5214,1.088,5233,1.743,5234,1.743,5248,1.604,5252,2.567,5254,1.604,5285,3.084,5342,2.788,5384,1.494,5427,1.323,5429,1.743,5448,3.203,5449,1.599,5450,1.402,5459,2.175,5496,2.788,5521,2.386,5522,4.355,5525,2.788,5526,2.788,5527,2.788,5528,2.788,5529,2.788,5530,2.788,5531,2.788,5532,2.788,5533,2.788,5534,2.788,5536,2.719,5537,1.743,5571,3.666,5573,3.084,5577,2.117,5594,1.323,5610,1.402,5628,1.604,5647,1.743,5652,1.254,5653,2.567,5679,1.743,5681,1.928,5682,2.788,5683,2.788,5684,2.788,5685,2.788,5686,2.788,5687,1.928,5689,1.928,5690,1.928,5691,3.084,5692,3.084,5694,1.494,5728,1.323,5808,1.743,5820,1.323,5914,1.402,5939,1.478,6019,1.928,6088,2.243,6128,1.494,6129,1.494,6163,3.084,6219,2.788,6295,1.604,6349,1.928,6350,1.928,6351,3.084,6352,3.855,6353,1.928,6354,1.928,6356,3.855,6357,1.928,6358,1.928,6359,1.928,6362,3.084,6787,1.604,6966,1.928,6969,2.987,6970,1.928,7038,3.084,7154,1.928,7155,1.928,7170,1.604,7171,1.402,7173,1.928,7186,2.243,7296,1.604,7373,1.928,7484,1.743,7496,1.604,7629,1.604,8334,3.982,8351,3.084,8414,1.743,8580,2.788,8581,1.743,8593,1.743,8821,1.743,8833,2.567,8915,1.928,8989,3.084,9247,3.208,9248,1.743,9254,1.928,9297,1.604,9356,1.604,9978,1.928,10171,3.666,10237,1.743,10396,1.928,10397,1.743,10398,1.604,10649,1.928,10683,1.494,10721,2.788,10757,1.928,10812,1.928,10821,1.928,10852,1.928,10853,3.855,10893,6.056,11010,1.928,11067,1.928,11188,3.666,11269,3.208,11347,2.788,11399,2.788,11493,2.788,11558,1.743,11816,4.405,11817,4.818,11818,3.534,11819,2.209,11820,2.209,11821,1.928,11822,2.209,11823,1.928,11824,2.209,11825,2.567,11826,2.209,11827,3.855,11828,4.417,11829,2.209,11830,2.209,11831,2.209,11832,2.209,11833,2.209,11834,2.209,11835,2.209,11836,2.209,11837,2.209,11838,2.209,11839,2.209,11840,2.209,11841,2.209,11842,2.209,11843,2.209,11844,2.209,11845,2.209,11846,2.209,11847,3.534,11848,2.209,11849,2.209,11850,2.209,11851,2.209,11852,2.209,11853,2.209,11854,2.209,11855,2.209,11856,2.209,11857,2.209,11858,2.209,11859,3.534,11860,3.534,11861,2.209,11862,2.209,11863,2.209,11864,3.855,11865,3.534,11866,3.534,11867,2.209,11868,2.209,11869,2.209,11870,2.209,11871,4.818,11872,5.048,11873,1.928,11874,2.209,11875,3.855,11876,2.209,11877,2.209,11878,3.534,11879,2.209,11880,3.534,11881,3.534,11882,3.534,11883,3.534,11884,3.534,11885,3.534,11886,3.534,11887,3.534,11888,2.209,11889,2.209,11890,4.417,11891,2.209,11892,3.534,11893,2.209,11894,2.209,11895,5.048,11896,2.209,11897,2.209,11898,2.209,11899,2.209,11900,2.209,11901,1.743,11902,2.209,11903,2.209,11904,3.534,11905,2.209,11906,1.928,11907,3.534,11908,3.855,11909,2.209,11910,2.209,11911,2.788,11912,5.396,11913,3.084,11914,3.534,11915,1.743,11916,4.665,11917,3.855,11918,2.209,11919,2.209,11920,2.209,11921,2.209,11922,2.209,11923,2.209,11924,2.209,11925,5.396,11926,2.209,11927,2.209,11928,5.888,11929,2.209,11930,2.788,11931,2.788,11932,3.534,11933,3.084,11934,2.209,11935,3.534,11936,1.928,11937,1.928,11938,3.534,11939,2.209,11940,3.084,11941,4.405,11942,2.209,11943,2.209,11944,2.209,11945,2.209,11946,2.209,11947,2.209,11948,3.534,11949,2.209,11950,2.209,11951,1.928,11952,1.254,11953,4.417,11954,5.52,11955,2.209,11956,2.209,11957,1.928,11958,2.209,11959,3.534,11960,3.534,11961,2.209,11962,2.209,11963,2.209,11964,1.928,11965,1.928,11966,2.209,11967,2.209,11968,1.928,11969,1.928,11970,1.928,11971,1.928,11972,4.417,11973,1.928,11974,2.209,11975,2.209,11976,2.209,11977,2.209,11978,2.209,11979,2.209,11980,2.209,11981,2.209,11982,2.209,11983,2.209,11984,2.209,11985,2.209,11986,2.209,11987,2.209,11988,3.534,11989,3.534,11990,2.209,11991,2.209,11992,3.534,11993,2.209,11994,2.209,11995,3.534,11996,2.209,11997,2.209,11998,5.048,11999,2.209,12000,2.209,12001,2.209,12002,3.534,12003,2.209,12004,2.209,12005,2.209,12006,2.209,12007,2.209,12008,3.484,12009,2.209,12010,2.209,12011,2.209,12012,2.209,12013,2.209,12014,1.928,12015,2.209,12016,2.209,12017,5.048,12018,2.209,12019,2.209,12020,2.209,12021,2.209,12022,2.209,12023,2.209,12024,2.209,12025,2.209,12026,2.209,12027,2.209,12028,2.209,12029,2.209,12030,2.209,12031,3.534,12032,2.209,12033,2.209,12034,2.209,12035,1.604,12036,1.928,12037,3.534,12038,2.209,12039,2.209,12040,2.209,12041,2.209,12042,2.209,12043,2.209,12044,2.209,12045,2.209,12046,3.855,12047,5.048,12048,3.534,12049,3.534,12050,3.534,12051,3.534,12052,3.534,12053,2.209,12054,2.209,12055,2.209,12056,2.209,12057,2.209,12058,2.209,12059,2.209,12060,2.209,12061,2.209,12062,2.209,12063,2.209,12064,2.209,12065,2.209,12066,2.209,12067,2.209,12068,2.209,12069,2.209,12070,2.209,12071,2.209,12072,2.209,12073,2.209,12074,2.209,12075,2.209,12076,2.209,12077,2.209,12078,2.209,12079,2.209,12080,2.209,12081,2.209,12082,2.209,12083,2.209,12084,3.534,12085,2.209,12086,3.534,12087,3.534,12088,2.209,12089,2.209,12090,2.209,12091,2.209,12092,2.209,12093,2.209,12094,2.209,12095,2.209,12096,2.209,12097,2.209,12098,2.209,12099,2.209,12100,2.209,12101,3.534,12102,2.209,12103,2.209,12104,1.928,12105,1.928,12106,2.209,12107,2.209,12108,5.048,12109,2.209,12110,2.209,12111,2.209,12112,2.209,12113,2.209,12114,2.209,12115,2.209,12116,2.209,12117,2.209,12118,2.209,12119,2.209,12120,2.209,12121,2.209,12122,5.048,12123,2.209,12124,3.084,12125,2.209,12126,2.209,12127,3.534,12128,2.209,12129,2.209,12130,3.534,12131,2.209,12132,2.209,12133,2.209,12134,3.534,12135,4.417,12136,2.209,12137,2.209,12138,2.209,12139,2.209,12140,2.209,12141,4.417,12142,2.209,12143,3.534,12144,1.743,12145,2.209,12146,2.209,12147,2.209,12148,2.209,12149,2.209,12150,2.209,12151,2.209,12152,1.928,12153,3.534,12154,3.534,12155,2.209,12156,2.209,12157,2.209,12158,2.209,12159,2.209,12160,2.209,12161,2.209,12162,2.209,12163,2.209,12164,2.209,12165,2.209,12166,3.534,12167,1.928,12168,2.209,12169,2.209,12170,2.209,12171,2.209,12172,2.209,12173,2.209,12174,3.534,12175,2.209,12176,2.209,12177,2.209,12178,2.209,12179,2.209,12180,2.209,12181,2.209,12182,3.534,12183,2.209,12184,2.209,12185,2.209,12186,2.209,12187,2.209,12188,2.209,12189,2.209,12190,3.534,12191,2.209,12192,2.209,12193,3.534,12194,2.209,12195,2.209,12196,2.209,12197,2.209,12198,2.209,12199,2.209,12200,2.209,12201,2.209,12202,2.209,12203,2.209,12204,2.209,12205,2.209,12206,2.209,12207,3.534,12208,3.534,12209,2.209,12210,3.534,12211,2.209,12212,5.048,12213,4.417,12214,2.209,12215,1.928,12216,4.417,12217,2.209,12218,3.534,12219,1.928,12220,2.209,12221,2.209,12222,4.417,12223,1.928,12224,2.209,12225,2.209,12226,2.209,12227,2.209,12228,2.209,12229,2.209,12230,2.209,12231,2.209,12232,3.534,12233,3.534,12234,3.534,12235,2.209,12236,2.209,12237,2.209,12238,2.209,12239,2.209,12240,1.928,12241,4.417,12242,2.209,12243,2.209,12244,2.209,12245,3.534,12246,3.534,12247,2.209,12248,2.209,12249,2.209,12250,2.209,12251,2.209,12252,3.534,12253,2.209,12254,2.209,12255,2.209,12256,2.209,12257,2.209,12258,2.209,12259,2.209,12260,2.209,12261,4.417,12262,2.209,12263,2.209,12264,2.209,12265,2.209,12266,2.209,12267,2.209,12268,2.209,12269,2.209,12270,1.928,12271,3.534,12272,2.209,12273,3.534,12274,2.209,12275,3.534,12276,2.209,12277,2.209,12278,2.209,12279,2.209,12280,2.209,12281,2.209,12282,3.534,12283,2.209,12284,2.209,12285,2.209,12286,2.209,12287,2.209,12288,4.417,12289,2.209,12290,2.209,12291,2.209,12292,1.928,12293,5.888,12294,2.209,12295,2.209,12296,2.209,12297,2.209,12298,2.209,12299,2.209,12300,2.209,12301,4.417,12302,2.209]],["t/49",[11222,3.257,11306,2.998]],["b/49",[11,1.137,19,1.666,21,3.328,22,1.461,35,0.435,44,1.689,54,0.606,59,1.529,66,1.275,67,0.326,88,1.137,105,0.581,116,1.689,124,0.122,170,1.334,177,0.832,187,0.927,196,2.005,225,3.873,232,0.353,242,0.894,244,0.59,269,0.407,317,0.832,341,0.624,362,1.215,365,0.715,372,1.432,386,0.606,394,2.078,397,3.359,402,0.643,408,4.157,473,0.06,474,0.052,481,0.654,483,1.262,487,1.877,489,0.661,490,1.689,493,1.35,500,0.529,501,1.122,503,0.811,506,0.654,511,2.144,521,1.249,523,1.48,528,1.137,529,0.95,550,2.736,557,2.155,563,0.537,564,2.551,573,1.48,582,0.891,583,2.377,587,1.689,601,1.817,603,1.026,606,0.654,607,3.001,608,2.645,609,3.635,616,0.675,618,0.612,622,0.863,625,0.894,626,0.684,627,0.608,628,0.634,629,0.582,630,0.608,631,0.608,633,0.661,637,1.022,677,0.684,682,0.914,683,0.773,684,1.03,687,2.144,689,1.064,732,0.988,759,1.807,760,2.078,767,0.894,769,1.195,777,2.005,814,1.581,816,1.87,910,2.416,918,2.237,919,2.155,926,0.773,947,3.087,1035,2.078,1036,2.514,1046,2.862,1050,3.19,1060,2.323,1092,2.155,1101,2.078,1104,2.296,1105,2.323,1106,4.383,1107,1.747,1113,2.736,1135,4.849,1145,1.341,1196,1.87,1201,2.237,1204,3.526,1213,2.155,1258,1.936,1273,1.529,1363,1.936,1366,1.747,1369,2.118,1372,0.624,1395,1.334,1396,2.078,1397,1.341,1485,1.529,1513,1.365,1544,2.736,1545,3.001,1587,3.328,1631,4.036,1666,2.862,1680,1.196,1927,3.635,1946,1.581,1966,3.087,1971,2.514,2172,0.06,2179,2.745,2924,3.758,2979,2.862,3010,4.036,3192,5.205,3193,3.328,3267,3.635,3341,2.323,3528,4.036,3563,4.849,3775,3.155,3808,2.621,3809,4.849,4099,5.839,4445,4.613,4446,5.381,4448,3.155,4497,2.323,4990,3.328,5004,3.483,5012,2.862,5070,2.736,5108,2.155,5126,3.328,5137,4.849,5210,2.862,5214,2.736,5227,3.155,5267,3.526,5448,5.013,5449,2.514,5450,3.526,5451,4.036,5452,4.849,5453,4.849,5454,4.849,5455,4.849,5456,4.849,5457,4.849,7169,4.383,7465,4.036,7496,4.036,8671,3.526,8672,3.526,8673,3.526,9266,4.849,9275,4.849,10615,4.613,10916,4.849,11306,4.954,11347,4.383,11816,4.849,11817,4.849,11825,4.036,11827,4.849,11951,4.849,12035,4.036,12144,5.822,12303,5.557,12304,5.557,12305,5.557,12306,5.557,12307,5.557,12308,5.557,12309,5.557,12310,5.557,12311,6.821,12312,5.557,12313,5.557,12314,5.557,12315,6.821,12316,5.557,12317,6.821,12318,5.557,12319,5.557,12320,5.557,12321,5.557,12322,5.557,12323,5.557,12324,5.557,12325,5.557,12326,5.557,12327,5.557,12328,5.557,12329,5.557,12330,5.557,12331,7.696,12332,5.557,12333,5.557,12334,7.696,12335,5.557,12336,5.557,12337,5.557,12338,5.557,12339,5.557,12340,5.557,12341,5.557,12342,5.557,12343,5.557]],["t/50",[333,0.903,12344,4.129]],["b/50",[11,1.524,20,1.648,22,1.275,26,1.66,27,1.705,31,1.829,35,0.411,37,0.603,38,1.35,47,2.302,48,0.759,53,0.97,54,0.507,66,1.409,67,0.285,78,1.184,82,1.772,88,1.524,97,1.648,104,0.875,105,0.507,124,0.122,130,1.895,160,1.267,163,1.648,170,0.816,171,1.895,177,0.759,182,1.824,187,1.31,190,1.593,206,2.365,231,1.895,232,0.308,242,1.037,244,0.604,261,1.832,269,0.332,298,1.965,299,1.593,320,0.603,321,0.906,333,1.629,335,1.264,341,0.463,343,4.422,350,4.461,353,0.906,354,0.937,355,1.395,356,4.422,362,1.682,365,0.531,385,1.264,386,0.399,401,0.678,402,0.442,434,1.593,435,1.895,473,0.069,474,0.049,481,0.714,484,0.678,489,0.603,490,2.264,493,1.401,500,0.527,501,0.997,503,0.842,505,4.354,506,0.486,511,2.626,512,0.829,514,1.275,515,1.663,518,1.037,521,0.787,522,0.705,523,1.715,525,1.306,527,1.223,528,1.037,529,0.912,533,1.49,543,1.958,545,2.495,553,1.648,559,1.441,560,1.108,563,0.399,574,0.714,575,2.293,576,1.606,582,0.93,584,2.737,585,1.648,588,3.68,592,3.035,596,1.958,603,0.705,604,1.265,606,0.617,616,0.463,617,0.977,618,0.42,622,0.787,625,0.816,626,0.508,627,0.554,628,0.578,629,0.531,630,0.554,631,0.554,633,0.603,634,1.554,636,2.69,637,0.964,638,0.627,641,0.627,643,0.627,644,1.395,645,0.627,646,0.678,648,0.678,654,2.836,656,4.113,662,3.035,667,1.222,668,2.081,677,0.646,679,1.895,681,1.895,682,0.797,683,0.895,684,0.997,685,1.893,700,2.959,710,0.816,721,1.306,723,2.04,732,0.862,743,3.786,753,2.244,767,0.816,769,0.787,773,1.541,786,1.306,809,1.705,835,0.759,914,2.04,926,1.176,947,3.203,993,1.829,1015,2.914,1035,1.895,1036,3.203,1059,2.39,1091,1.648,1094,1.829,1104,1.705,1107,1.593,1137,3.546,1177,2.61,1288,2.408,1325,2.04,1348,2.497,1372,0.589,1374,0.787,1382,0.603,1383,0.759,1385,0.705,1386,0.845,1397,1.223,1428,2.244,1433,0.678,1444,0.816,1445,0.875,1448,0.937,1449,0.906,1450,0.97,1451,0.97,1459,1.072,1461,1.072,1464,1.072,1466,1.146,1467,1.184,1468,1.072,1469,1.306,1472,1.264,1475,1.306,1478,1.35,1483,1.395,1485,1.395,1488,1.35,1489,1.441,1492,1.441,1493,1.395,1494,1.49,1498,1.541,1499,1.541,1501,1.541,1502,1.541,1504,1.593,1509,1.705,1510,1.705,1511,1.705,1512,1.829,1531,1.441,1534,1.504,1546,4.676,1587,3.857,1621,4.086,1664,2.119,1688,3.997,1843,2.592,1967,2.39,1973,2.04,1999,4.017,2028,3.68,2032,1.895,2033,1.965,2037,1.895,2039,1.965,2040,1.965,2042,1.965,2044,1.965,2045,1.895,2046,1.965,2047,1.965,2050,2.04,2051,1.965,2052,2.119,2156,2.495,2172,0.054,2307,1.965,2308,3.656,2380,3.997,2431,2.04,2432,2.39,2438,1.606,2660,1.441,2849,1.766,2850,3.646,2891,5.14,2916,3.216,3086,2.39,3472,3.427,3533,3.035,3641,4.228,3812,4.086,4213,4.676,4290,3.478,4350,3.035,4417,5.409,4472,5.583,4627,2.495,4778,3.035,4834,3.216,4845,3.997,4850,3.997,4863,4.676,4865,4.422,4950,3.68,4990,4.706,5246,2.877,5400,3.997,5469,3.035,5646,3.035,5996,3.68,6076,3.216,6532,3.997,6710,3.317,7160,3.68,7344,3.997,7465,3.68,7736,3.427,9036,5.08,9247,3.68,9248,3.997,10398,3.68,11179,4.422,11467,4.354,11599,3.997,12036,4.422,12152,4.422,12345,7.688,12346,4.422,12347,6.439,12348,7.078,12349,5.067,12350,5.067,12351,4.422,12352,5.067,12353,5.067,12354,6.439,12355,5.067,12356,5.067,12357,5.067,12358,5.067,12359,6.439,12360,5.067,12361,7.078,12362,5.067,12363,5.067,12364,7.447,12365,6.439,12366,6.439,12367,6.439,12368,5.067,12369,5.067,12370,7.078,12371,5.067,12372,5.067,12373,5.067,12374,5.067,12375,5.067,12376,5.619,12377,7.447,12378,5.067,12379,8.271,12380,5.067,12381,5.067,12382,5.067,12383,5.067,12384,5.067,12385,6.177,12386,5.067,12387,4.422,12388,7.447,12389,7.078,12390,5.067,12391,5.067,12392,5.067,12393,5.067,12394,5.067,12395,5.067,12396,6.439,12397,3.997]],["t/51",[374,2.334,375,2.334,12398,3.452]],["b/51",[11,1.378,19,1.191,27,1.536,29,2.153,34,1.909,35,0.426,37,0.543,38,1.216,44,1.388,48,0.684,53,0.874,54,0.474,61,1.985,66,1.163,67,0.317,78,1.067,79,1.985,88,0.934,101,1.838,102,2.616,104,1.163,105,0.474,113,2.897,115,0.816,116,1.388,117,1.838,124,0.122,130,1.707,131,1.909,150,3.605,160,1.046,161,1.657,162,1.618,170,1.152,175,1.342,176,1.707,177,1.219,187,1.241,223,2.897,225,2.592,226,3.087,231,1.707,232,0.288,241,2.734,242,1.084,243,2.724,244,0.45,261,1.915,266,1.257,269,0.31,316,0.901,317,0.901,320,0.543,321,0.816,335,1.139,341,0.418,353,0.816,354,0.845,355,1.257,362,1.473,365,0.478,368,3.984,374,4.07,375,4.07,376,3.25,378,3.82,379,6.145,382,3.601,385,1.139,386,0.36,389,3.984,390,3.984,391,1.342,395,6.247,401,0.611,402,0.398,408,2.466,434,1.435,435,1.707,457,1.485,459,2.886,467,1.388,468,1.342,473,0.049,474,0.046,481,0.686,483,0.845,487,1.257,488,2.881,489,0.801,490,1.388,493,1.473,500,0.534,501,0.806,503,0.851,506,0.577,512,0.588,515,0.966,518,1.232,521,1.187,522,0.5,528,0.934,529,1.018,538,2.097,544,3.25,549,3.087,553,1.957,559,1.299,563,0.53,574,0.78,601,1.216,603,1.112,604,1.366,606,0.686,607,2.466,608,1.771,609,3.316,610,2.927,611,2.19,616,0.418,617,0.885,618,0.379,625,0.735,626,0.458,627,0.5,628,0.521,629,0.478,630,0.5,631,0.5,633,0.543,634,1.453,637,0.901,638,0.565,641,0.565,643,0.565,645,0.565,646,0.611,648,0.611,667,1.236,671,1.771,677,0.793,682,0.565,684,0.611,685,1.342,688,2.897,689,1.289,694,1.485,704,1.648,705,1.435,710,0.735,715,1.216,718,1.771,724,2.097,759,2.42,769,0.709,773,1.388,780,1.522,790,1.771,794,0.934,800,2.734,801,2.066,804,2.352,806,3.112,809,1.536,813,1.707,816,1.536,836,1.648,846,3.984,847,2.066,853,1.603,864,1.536,885,2.117,914,1.838,916,2.839,918,1.838,937,3.984,1013,3.82,1045,3.087,1050,1.771,1053,2.964,1059,2.153,1064,2.352,1066,1.388,1067,2.734,1069,1.485,1094,1.648,1137,2.927,1145,1.102,1162,1.981,1180,1.707,1201,2.71,1203,3.601,1234,1.985,1237,1.985,1258,2.592,1259,2.993,1291,2.592,1292,3.087,1316,1.957,1334,3.087,1372,0.55,1374,0.709,1376,1.728,1382,0.543,1383,0.684,1385,0.635,1386,0.761,1395,1.273,1397,1.453,1444,0.735,1445,0.788,1448,0.845,1449,0.816,1450,0.874,1451,0.874,1459,0.966,1461,0.966,1464,0.966,1466,1.032,1467,1.067,1468,0.966,1469,1.177,1472,1.139,1475,1.177,1478,1.216,1483,1.257,1485,1.257,1488,1.793,1489,1.915,1492,1.299,1493,1.257,1494,1.342,1496,2.352,1498,1.388,1499,1.388,1501,1.388,1502,1.388,1504,1.435,1509,1.536,1510,1.536,1511,1.536,1512,1.648,1516,1.603,1517,1.648,1519,1.985,1528,3.417,1531,1.299,1534,1.067,1542,4.07,1551,3.601,1595,2.516,1598,3.25,1615,1.77,1647,3.601,1656,4.849,1680,1.125,1681,3.316,1689,1.838,1695,2.592,1853,1.648,1885,1.388,1888,3.315,1931,3.1,1943,0.735,1978,3.984,2032,1.707,2033,1.771,2037,1.707,2039,1.771,2040,1.771,2042,1.771,2044,1.771,2045,1.707,2046,1.771,2047,1.771,2050,1.838,2051,1.771,2052,1.909,2056,1.985,2057,1.985,2058,1.985,2060,1.985,2062,1.985,2064,1.838,2067,1.771,2071,1.985,2072,1.985,2074,1.985,2172,0.049,2179,1.838,2256,3.601,2279,2.592,2306,2.734,2307,1.771,2540,1.591,2660,1.712,2719,4.371,2731,3.315,2735,2.964,2909,1.707,2991,2.346,2992,1.943,3024,1.771,3029,3.605,3038,2.734,3064,2.897,3077,3.601,3078,2.734,3086,2.153,3101,2.466,3229,4.371,3262,3.25,3282,4.064,3285,2.734,3335,3.315,3341,1.909,3433,4.748,3576,2.897,3588,3.315,3634,3.25,3643,3.315,3684,2.897,3746,4.287,3748,3.984,3762,3.1,3775,2.592,3824,2.839,4157,3.984,4158,3.984,4423,3.315,4448,4.064,4472,3.601,4498,1.648,4513,3.866,4521,2.592,4549,3.087,4597,3.087,4610,3.601,4612,2.897,4847,1.985,4928,4.273,5004,3.525,5083,3.984,5115,3.087,5206,2.592,5208,4.748,5235,3.984,5236,4.553,5472,2.897,5594,3.605,5652,2.592,5953,4.064,6278,4.748,6381,3.601,6531,4.553,6810,3.984,7248,5.876,7577,2.897,7643,3.601,7747,3.82,7792,3.984,7897,4.748,7961,3.82,8260,3.087,8261,3.087,8272,5.252,8300,3.087,8312,2.734,8379,3.315,8742,3.087,8830,2.734,9799,3.984,9847,3.601,10496,3.82,10500,4.89,10501,5.403,10502,3.601,10518,3.601,10527,3.601,10540,3.601,10541,3.601,10543,3.601,10544,3.601,10810,3.984,11071,3.984,11309,5.876,11385,3.315,11467,4.07,11873,5.252,11901,5.312,11906,5.252,11952,3.417,12144,3.601,12399,6.733,12400,4.565,12401,4.565,12402,4.565,12403,4.565,12404,4.565,12405,4.565,12406,4.565,12407,4.565,12408,6.668,12409,4.565,12410,4.565,12411,4.565,12412,4.565,12413,6.733,12414,4.565,12415,4.565,12416,4.565,12417,4.565,12418,4.565,12419,4.565,12420,3.984,12421,4.565,12422,4.565,12423,4.565,12424,6.018,12425,4.565,12426,4.565,12427,4.565,12428,4.565,12429,4.565,12430,4.565,12431,6.018,12432,4.565,12433,4.565,12434,4.565,12435,4.565,12436,4.565,12437,4.565,12438,4.565,12439,4.565,12440,4.565,12441,3.601,12442,6.733,12443,4.565,12444,4.565,12445,4.565,12446,4.565,12447,4.565,12448,4.565,12449,4.565,12450,4.565,12451,4.565,12452,4.565,12453,6.247,12454,6.733,12455,7.44,12456,7.64,12457,7.79,12458,4.565,12459,4.565,12460,4.565,12461,6.018,12462,4.565,12463,6.018,12464,4.565,12465,6.018,12466,4.565,12467,4.565,12468,4.565,12469,6.018,12470,4.565,12471,4.565,12472,4.565,12473,4.565,12474,4.565,12475,6.018,12476,4.565,12477,4.565,12478,4.565,12479,4.565,12480,4.565,12481,4.565,12482,4.565,12483,6.018,12484,4.565,12485,4.565,12486,4.565,12487,4.565,12488,4.565,12489,4.565,12490,4.565,12491,4.565,12492,4.748,12493,6.733,12494,4.565,12495,6.733,12496,4.565,12497,4.565,12498,6.018,12499,4.565,12500,4.565,12501,4.565,12502,4.565,12503,6.018,12504,7.79,12505,7.44,12506,7.158,12507,7.158,12508,7.158,12509,6.018,12510,6.018,12511,4.565,12512,4.565,12513,4.565,12514,6.018,12515,4.565,12516,6.018,12517,4.565,12518,4.565,12519,4.565,12520,4.565,12521,4.565,12522,4.565,12523,4.565,12524,4.565,12525,4.565,12526,4.565,12527,6.018,12528,6.018,12529,4.565,12530,4.565,12531,4.565,12532,4.565,12533,4.565,12534,4.565,12535,4.565,12536,4.565,12537,4.565,12538,4.565,12539,4.565,12540,4.565,12541,4.565,12542,4.565,12543,4.565,12544,4.565,12545,4.565,12546,4.565,12547,4.565,12548,4.565,12549,4.565,12550,6.018,12551,4.565,12552,4.565,12553,4.565,12554,4.565,12555,4.565,12556,4.565,12557,6.018,12558,6.018,12559,4.565,12560,4.565,12561,4.565,12562,4.565,12563,3.984,12564,4.565,12565,4.565,12566,4.565,12567,4.565,12568,4.565,12569,4.565,12570,4.565,12571,4.565,12572,3.984,12573,4.565,12574,4.565]],["t/52",[12575,5.135]],["b/52",[10,5.204,22,1.644,24,1.746,35,0.445,48,0.917,66,1.057,88,1.575,124,0.117,227,4.83,232,0.293,269,0.315,276,2.56,351,1.339,362,1.683,376,2.911,391,2.126,459,2.805,473,0.078,474,0.055,501,0.82,503,0.915,506,0.693,521,1.235,529,0.789,538,2.52,551,2.928,560,1.582,564,2.878,573,1.631,576,1.527,583,2.133,622,1.235,625,1.28,675,1.685,677,0.725,689,1.172,715,1.631,758,2.771,761,2.662,767,1.164,798,2.465,804,3.725,807,4.141,835,0.917,851,2.21,852,2.771,853,2.252,860,3.476,884,3.476,1098,3.023,1107,1.925,1187,3.307,1213,2.375,1245,4.141,1261,3.482,1290,2.681,1316,2.638,1317,4.106,1350,4.331,1387,4.83,1524,2.805,1534,1.43,1543,3.725,1613,2.29,1652,2.662,1667,3.476,1759,5.343,2172,0.066,2174,3.411,2175,1.8,2322,3.023,2401,4.609,2426,3.411,2513,3.154,2655,3.307,2723,4.609,2731,4.447,2934,4.141,3030,4.141,3208,4.447,3420,5.204,3526,2.465,3588,5.774,3590,4.331,4847,3.527,5126,3.667,5396,4.89,5628,4.447,7066,6.716,7568,4.83,7787,5.972,8300,4.141,8373,5.705,8514,5.343,9112,4.89,9113,6.311,9121,5.343,9122,5.705,9137,5.343,11072,4.141,12563,5.343,12576,4.83,12577,5.343,12578,7.695,12579,6.123,12580,6.123,12581,6.123,12582,6.123,12583,6.123,12584,6.123,12585,6.123,12586,6.123,12587,7.951,12588,6.123,12589,6.123,12590,6.123,12591,7.695,12592,6.123,12593,6.123,12594,6.123,12595,7.231,12596,6.123,12597,7.231,12598,6.123,12599,6.123,12600,6.123,12601,6.123,12602,6.123,12603,6.123,12604,6.123,12605,6.123]],["t/53",[852,1.868,12606,4.129]],["b/53",[22,1.338,31,1.122,35,0.452,36,0.973,54,0.245,67,0.345,69,1.466,88,1.773,97,1.011,101,1.251,105,0.245,111,2.754,124,0.119,161,1.664,187,1.46,232,0.149,242,0.973,266,0.856,268,2.937,269,0.16,292,2.72,372,1.185,386,0.245,473,0.033,474,0.035,480,1.206,483,0.575,484,0.733,500,0.289,501,0.905,508,1.78,509,1.967,512,0.87,514,1.083,515,1.158,518,0.636,521,0.939,523,0.828,538,1.083,543,1.398,551,2.329,574,0.298,580,2.806,582,0.34,606,0.441,677,0.748,683,0.432,684,0.416,705,2.198,718,1.783,720,4.986,721,1.664,726,3.34,727,1.163,730,3.34,742,3.278,768,2.503,769,0.85,780,0.703,785,2.527,786,1.742,796,1.973,808,3.473,835,0.466,851,2.182,852,1.407,853,1.8,861,3.701,863,2.956,870,1.466,891,2.918,1050,2.345,1067,1.862,1211,1.407,1251,1.407,1273,1.506,1284,2.918,1303,1.679,1316,2.198,1372,0.692,1395,0.881,1452,1.66,1516,1.225,1517,1.66,1518,1.531,1519,1.351,1524,1.783,1596,1.765,1663,1.531,1664,1.923,1680,0.79,1689,2.203,1694,2.258,1712,2.923,1727,1.999,1880,4.013,2172,0.033,2174,2.169,2322,1.3,2359,2.452,2401,2.754,2518,2.081,2668,2.258,2723,3.622,2751,2.258,2833,1.122,2849,1.907,2853,2.258,2857,3.627,2991,1.907,2992,1.829,3030,2.102,3139,4.992,3319,2.754,3666,1.973,3678,3.34,3803,1.923,3841,2.713,3893,2.611,3894,2.754,4061,2.258,4085,4.317,4228,2.369,4354,2.918,4740,2.713,5088,2.102,5230,2.102,5384,2.102,5430,1.679,5482,2.258,5617,2.102,5914,3.473,6010,2.102,6065,2.102,6128,3.11,6129,3.11,6131,5.091,6207,4.687,6220,2.713,6347,4.013,6348,4.013,6519,4.776,6527,2.258,6622,5.897,6696,4.013,6697,4.013,6712,2.713,6720,2.713,6724,2.713,6870,2.713,6871,2.258,6872,1.862,6874,2.713,6876,2.713,6879,5.091,6881,2.713,6929,2.713,6931,2.713,6994,3.627,7001,2.713,7062,3.627,7117,5.278,7118,2.713,7124,4.317,7181,4.317,7189,2.713,7190,4.013,7816,2.258,7947,2.713,7985,4.013,8245,3.627,8316,2.713,8324,3.34,8359,2.452,8361,2.452,8366,2.713,8367,2.713,8604,4.317,9064,3.627,9065,2.713,9112,2.102,9122,2.452,9261,3.627,10131,2.713,10163,2.713,10169,2.713,12607,3.109,12608,3.109,12609,3.109,12610,3.109,12611,3.109,12612,3.109,12613,3.109,12614,3.109,12615,3.109,12616,4.598,12617,3.109,12618,3.109,12619,3.109,12620,3.109,12621,3.109,12622,3.109,12623,3.109,12624,3.109,12625,3.109,12626,3.109,12627,3.109,12628,3.109,12629,3.109,12630,3.109,12631,4.598,12632,3.109,12633,3.109,12634,3.109,12635,3.109,12636,3.109,12637,4.598,12638,3.109,12639,3.109,12640,3.109,12641,3.109,12642,3.109,12643,3.109,12644,3.109,12645,3.109,12646,3.109,12647,3.109,12648,3.109,12649,3.109,12650,3.109,12651,3.109,12652,3.109,12653,3.109,12654,3.109,12655,3.109,12656,3.109,12657,3.109,12658,3.109,12659,3.109,12660,3.109,12661,3.109,12662,3.109,12663,4.598,12664,3.109,12665,3.109,12666,3.109,12667,3.109,12668,3.109,12669,3.109,12670,3.109,12671,3.109,12672,3.109,12673,3.109,12674,3.109,12675,3.109,12676,3.109,12677,3.109,12678,3.109,12679,3.109,12680,3.109,12681,3.109,12682,3.109,12683,3.109,12684,3.109,12685,3.109,12686,3.109,12687,3.109,12688,3.109,12689,3.109,12690,3.109,12691,3.109,12692,3.109,12693,3.109,12694,3.109,12695,3.109,12696,3.109,12697,3.109,12698,3.109,12699,3.109,12700,3.109,12701,3.109,12702,3.109,12703,3.109,12704,3.109,12705,3.109,12706,3.109,12707,3.109,12708,3.109,12709,3.109,12710,3.109,12711,3.109,12712,3.109,12713,3.109,12714,3.109,12715,3.109,12716,3.109,12717,3.109,12718,3.109,12719,3.109,12720,3.109,12721,3.109,12722,3.109,12723,3.109,12724,3.109,12725,3.109,12726,3.109,12727,3.109,12728,3.109,12729,3.109,12730,3.109,12731,3.109,12732,3.109,12733,3.109,12734,3.109,12735,3.109,12736,3.109,12737,3.109,12738,3.109,12739,3.109,12740,3.109,12741,3.109,12742,3.109,12743,3.109,12744,3.109,12745,3.109,12746,3.109,12747,3.109,12748,3.109,12749,3.109,12750,3.109,12751,3.109,12752,3.109,12753,3.109,12754,3.109,12755,3.109,12756,3.109,12757,3.109,12758,3.109,12759,3.109,12760,3.109,12761,3.109,12762,3.109,12763,3.109,12764,3.109,12765,3.109,12766,3.109,12767,3.109,12768,3.109,12769,3.109,12770,3.109,12771,3.109,12772,3.109,12773,3.109,12774,3.109,12775,3.109,12776,3.109,12777,3.109,12778,3.109,12779,3.109,12780,3.109,12781,3.109,12782,3.109,12783,3.109,12784,3.109,12785,3.109,12786,3.109,12787,3.109,12788,3.109,12789,3.109,12790,3.109,12791,3.109,12792,3.109,12793,3.109,12794,3.109,12795,3.109,12796,3.109,12797,3.109,12798,3.109,12799,3.109,12800,3.109,12801,3.109,12802,3.109,12803,3.109,12804,3.109,12805,3.109,12806,3.109,12807,3.109,12808,3.109,12809,3.109,12810,3.109,12811,3.109,12812,3.109,12813,3.109,12814,3.109,12815,3.109,12816,3.109,12817,3.109,12818,3.109,12819,3.109,12820,3.109,12821,3.109,12822,3.109,12823,3.109,12824,3.109,12825,3.109,12826,3.109,12827,3.109,12828,3.109,12829,3.109,12830,3.109,12831,3.109,12832,3.109,12833,3.109,12834,3.109,12835,3.109,12836,3.109,12837,3.109,12838,3.109,12839,3.109,12840,3.109,12841,3.109,12842,3.109,12843,3.109,12844,3.109,12845,3.109,12846,3.109,12847,3.109,12848,3.109,12849,3.109,12850,3.109,12851,3.109,12852,3.109,12853,3.109,12854,3.109,12855,3.109,12856,3.109,12857,3.109,12858,3.109,12859,3.109,12860,3.109,12861,3.109,12862,3.109,12863,3.109,12864,3.109,12865,3.109,12866,3.109,12867,3.109,12868,3.109,12869,3.109,12870,3.109,12871,3.109,12872,3.109,12873,3.109,12874,3.109,12875,3.109,12876,3.109,12877,3.109,12878,3.109,12879,3.109,12880,3.109,12881,3.109,12882,3.109,12883,3.109,12884,3.109,12885,3.109,12886,3.109,12887,3.109,12888,3.109,12889,3.109,12890,3.109,12891,3.109,12892,3.109,12893,3.109,12894,3.109,12895,3.109,12896,3.109,12897,3.109,12898,3.109,12899,3.109,12900,3.109,12901,3.109,12902,3.109,12903,3.109,12904,3.109,12905,3.109,12906,3.109,12907,3.109,12908,3.109,12909,3.109,12910,3.109,12911,3.109,12912,3.109,12913,3.109,12914,3.109,12915,3.109,12916,3.109,12917,3.109,12918,3.109,12919,3.109,12920,3.109,12921,3.109,12922,3.109,12923,3.109,12924,3.109,12925,3.109,12926,3.109,12927,3.109,12928,3.109,12929,3.109,12930,3.109,12931,3.109,12932,3.109,12933,3.109,12934,4.598,12935,3.109,12936,3.109,12937,3.109,12938,3.109,12939,3.109,12940,3.109,12941,3.109,12942,3.109,12943,3.109,12944,3.109,12945,3.109,12946,3.109,12947,3.109,12948,3.109,12949,3.109,12950,3.109,12951,3.109,12952,3.109,12953,3.109,12954,3.109,12955,3.109,12956,4.598,12957,4.598,12958,4.598,12959,4.598,12960,3.109,12961,3.109,12962,4.598,12963,6.047,12964,4.598,12965,3.109,12966,3.109,12967,3.109,12968,3.109,12969,3.109,12970,3.109,12971,3.109,12972,3.109,12973,3.109,12974,4.598,12975,4.598,12976,4.598,12977,4.598,12978,3.109,12979,3.109,12980,3.109,12981,3.109,12982,3.109,12983,3.109,12984,3.109,12985,3.109,12986,4.598,12987,4.598,12988,4.598,12989,4.598,12990,3.109,12991,3.109,12992,3.109,12993,3.109,12994,3.109,12995,4.598,12996,3.109,12997,3.109,12998,3.109,12999,3.109,13000,3.109,13001,3.109,13002,3.109,13003,3.109,13004,3.109,13005,3.109,13006,3.109,13007,3.109,13008,3.109,13009,3.109,13010,3.109,13011,3.109,13012,3.109,13013,3.109,13014,3.109,13015,3.109,13016,3.109,13017,3.109,13018,3.109,13019,3.109,13020,3.109,13021,3.109,13022,3.109,13023,3.109,13024,3.109,13025,3.109,13026,3.109,13027,3.109,13028,3.109,13029,3.109,13030,3.109,13031,3.109,13032,3.109,13033,3.109,13034,3.109,13035,3.109,13036,3.109,13037,3.109,13038,3.109,13039,3.109,13040,3.109,13041,3.109,13042,3.109,13043,3.109,13044,3.109,13045,3.109,13046,3.109,13047,3.109,13048,3.109,13049,3.109,13050,3.109,13051,3.109,13052,3.109,13053,3.109,13054,3.109,13055,3.109,13056,3.109,13057,3.109,13058,3.109,13059,3.109,13060,3.109,13061,3.109,13062,3.109,13063,3.109,13064,3.109,13065,3.109,13066,3.109,13067,3.109,13068,3.109,13069,3.109,13070,3.109,13071,3.109,13072,3.109,13073,3.109,13074,3.109,13075,3.109,13076,3.109,13077,3.109,13078,3.109,13079,3.109,13080,3.109,13081,3.109,13082,3.109,13083,3.109,13084,3.109,13085,3.109,13086,3.109,13087,3.109,13088,3.109,13089,3.109,13090,3.109,13091,3.109,13092,3.109,13093,4.598,13094,3.109,13095,3.109,13096,3.109,13097,3.109,13098,3.109,13099,3.109,13100,3.109,13101,3.109,13102,3.109,13103,3.109,13104,3.109,13105,3.109,13106,3.109,13107,3.109,13108,3.109,13109,3.109,13110,3.109,13111,3.109,13112,3.109,13113,3.109,13114,3.109,13115,3.109,13116,3.109,13117,3.109,13118,3.109,13119,3.109,13120,3.109,13121,3.109,13122,3.109,13123,3.109,13124,3.109,13125,3.109,13126,3.109,13127,3.109,13128,3.109,13129,3.109,13130,3.109,13131,3.109,13132,3.109,13133,3.109,13134,3.109,13135,3.109,13136,3.109,13137,3.109,13138,3.109,13139,3.109,13140,3.109,13141,3.109,13142,3.109,13143,3.109,13144,3.109,13145,3.109,13146,3.109,13147,3.109,13148,3.109,13149,3.109,13150,3.109,13151,3.109,13152,3.109,13153,3.109,13154,3.109,13155,3.109,13156,3.109,13157,3.109,13158,3.109,13159,3.109,13160,3.109,13161,3.109,13162,3.109,13163,3.109,13164,3.109,13165,3.109,13166,3.109,13167,3.109,13168,3.109,13169,3.109,13170,3.109,13171,3.109,13172,3.109,13173,3.109,13174,3.109,13175,3.109,13176,3.109,13177,3.109,13178,3.109,13179,3.109,13180,3.109,13181,3.109,13182,3.109,13183,3.109,13184,3.109,13185,3.109,13186,3.109,13187,3.109,13188,3.109,13189,3.109,13190,3.109,13191,3.109,13192,3.109,13193,3.109,13194,3.109,13195,3.109,13196,3.109,13197,3.109,13198,3.109,13199,3.109,13200,3.109,13201,3.109,13202,3.109,13203,3.109,13204,3.109,13205,3.109,13206,3.109,13207,3.109,13208,3.109,13209,3.109,13210,3.109,13211,3.109,13212,3.109,13213,3.109,13214,3.109,13215,3.109,13216,3.109,13217,3.109,13218,3.109,13219,3.109,13220,3.109,13221,3.109,13222,3.109,13223,3.109,13224,3.109,13225,3.109,13226,3.109,13227,3.109,13228,3.109,13229,3.109,13230,3.109,13231,3.109,13232,3.109,13233,3.109,13234,3.109,13235,3.109,13236,3.109,13237,3.109,13238,3.109,13239,3.109,13240,3.109,13241,3.109,13242,3.109,13243,3.109,13244,3.109,13245,3.109,13246,3.109,13247,3.109,13248,3.109,13249,3.109,13250,3.109,13251,3.109,13252,3.109,13253,3.109,13254,3.109,13255,3.109,13256,3.109,13257,3.109,13258,3.109,13259,3.109,13260,3.109,13261,3.109,13262,3.109,13263,3.109,13264,3.109,13265,3.109,13266,3.109,13267,3.109,13268,3.109,13269,3.109,13270,3.109,13271,3.109,13272,3.109,13273,3.109,13274,3.109,13275,3.109,13276,3.109,13277,3.109,13278,3.109,13279,3.109,13280,3.109,13281,3.109,13282,3.109,13283,3.109,13284,3.109,13285,3.109,13286,3.109,13287,3.109,13288,3.109,13289,3.109,13290,3.109,13291,3.109,13292,3.109,13293,3.109,13294,3.109,13295,3.109,13296,3.109,13297,3.109,13298,3.109,13299,3.109,13300,3.109,13301,3.109,13302,3.109,13303,3.109,13304,3.109,13305,4.598,13306,4.598,13307,4.598,13308,5.472,13309,4.598,13310,4.598,13311,4.598,13312,4.598,13313,4.598,13314,4.598,13315,4.598,13316,3.109,13317,3.109,13318,3.109,13319,3.109,13320,3.109,13321,3.109,13322,3.109,13323,3.109,13324,3.109,13325,3.109,13326,3.109,13327,3.109,13328,3.109,13329,3.109,13330,3.109,13331,3.109,13332,3.109,13333,3.109,13334,3.109,13335,3.109,13336,3.109,13337,3.109,13338,3.109,13339,3.109,13340,3.109,13341,3.109,13342,3.109,13343,3.109,13344,3.109,13345,3.109,13346,3.109,13347,3.109,13348,3.109,13349,3.109,13350,3.109,13351,3.109,13352,3.109,13353,2.713,13354,3.109,13355,3.109,13356,3.109,13357,4.598,13358,3.109,13359,3.109,13360,3.109,13361,3.109,13362,3.109,13363,3.109,13364,3.109,13365,3.109,13366,3.109,13367,3.109,13368,3.109,13369,3.109,13370,3.109,13371,3.109,13372,3.109,13373,3.109,13374,3.109,13375,3.109,13376,5.472,13377,5.472,13378,5.472,13379,5.472,13380,3.109,13381,3.109,13382,3.109,13383,3.109,13384,3.109,13385,3.109,13386,3.109,13387,3.109,13388,3.109,13389,3.109,13390,3.109,13391,3.109,13392,4.598,13393,4.598,13394,3.109,13395,3.109,13396,3.109,13397,3.109,13398,3.109,13399,3.109,13400,3.109,13401,4.013,13402,4.598,13403,4.598,13404,2.713,13405,3.109,13406,3.109,13407,3.109,13408,4.598,13409,3.109,13410,3.109,13411,3.109,13412,3.109,13413,3.109,13414,3.109,13415,3.109,13416,3.109,13417,3.109,13418,3.109,13419,3.109,13420,3.109,13421,3.109,13422,3.109,13423,3.109,13424,3.109,13425,3.109,13426,3.109,13427,3.109,13428,3.109,13429,3.109,13430,3.109,13431,3.109,13432,3.109,13433,3.109,13434,3.109,13435,3.109,13436,3.109,13437,3.109,13438,3.109,13439,3.109,13440,3.109,13441,3.109,13442,3.109,13443,3.109,13444,3.109,13445,4.598,13446,4.598,13447,3.109,13448,3.109,13449,4.598,13450,3.109,13451,4.598,13452,3.109,13453,3.109,13454,3.109,13455,3.109,13456,4.598,13457,4.598,13458,3.109]],["t/54",[13459,5.135]],["b/54",[11,0.827,19,1.438,22,1.305,28,1.989,30,0.912,35,0.447,36,1.395,44,1.924,47,0.851,48,0.83,54,0.437,59,2.078,66,0.697,67,0.378,68,1.931,78,1.478,79,1.138,82,1.648,88,1.656,99,1.659,101,1.054,105,0.206,115,1.363,116,1.228,123,1.414,124,0.122,160,1.16,161,1.964,162,1.253,163,0.851,170,0.65,182,1.428,183,1.478,187,1.424,195,1.7,206,1.149,226,1.77,228,1.349,232,0.381,233,1.235,241,1.568,242,0.794,243,3.287,244,0.574,261,1.149,266,1.964,268,1.756,269,0.389,292,3.301,304,1.349,315,2.443,316,0.83,317,0.897,351,1.078,352,3.79,362,1.442,372,1.428,373,3.417,391,2.136,393,3.186,394,0.979,397,2.428,408,1.414,409,1.661,411,1.095,456,4.213,457,2.48,459,2.768,460,2.873,467,0.796,469,1.138,473,0.043,474,0.031,477,1.905,481,0.696,484,1.138,488,1.626,489,0.48,500,0.493,501,1.158,503,0.659,506,0.767,507,2.061,508,1.313,509,0.851,512,1.114,513,1.77,514,1.305,515,1.727,518,1.226,519,1.041,521,1.257,523,1.595,525,0.675,527,1.19,528,1.134,529,1.059,531,2.984,533,1.939,537,2.563,540,2.799,541,2.428,543,1.924,544,1.414,545,2.729,546,2.285,551,2.725,553,1.313,560,1.212,563,0.318,564,2.073,565,2.993,570,2.563,572,3.129,573,2.064,574,0.837,578,1.185,579,2.933,580,3.493,582,0.864,583,2.086,584,2.181,587,0.796,594,2.181,601,0.697,603,0.972,604,1.179,606,0.802,611,1.803,617,0.586,622,0.407,629,0.274,634,1.723,635,1.661,636,2.398,637,0.738,649,2,651,2.513,667,0.957,668,0.77,677,0.865,678,2.933,680,1.742,682,0.843,683,0.771,684,1.057,685,1.45,686,1.901,689,0.944,695,5.226,696,2.285,699,3.4,702,1.626,705,0.823,706,1.486,710,0.964,716,1.901,718,1.015,723,1.054,724,1.407,727,0.979,732,0.35,742,2.419,753,2.205,755,2.136,759,2.398,761,1.138,767,1.215,769,0.93,770,2.143,780,1.115,781,1.185,784,1.414,785,0.979,786,1.271,791,1.742,794,0.536,795,2.933,796,2.563,798,2.41,799,2.603,801,2.231,802,2.231,806,2.409,809,0.881,813,0.979,816,2.13,820,3.748,826,1.901,828,0.912,835,1.047,836,0.945,847,2.71,851,2.796,852,1.828,853,1.476,854,2.54,863,3.561,885,0.823,891,3.129,896,1.626,904,2.563,906,1.905,919,1.015,920,1.054,926,0.771,940,1.185,961,1.289,962,1.289,963,1.185,1024,1.185,1050,3.077,1051,1.77,1060,2.504,1062,1.77,1087,1.185,1094,1.779,1104,1.865,1105,1.688,1115,1.77,1117,0.796,1119,1.138,1134,1.568,1137,1.138,1144,1.568,1145,1.338,1147,0.912,1176,1.015,1181,2.326,1187,1.414,1189,2.08,1194,1.931,1196,2.352,1213,1.015,1244,0.979,1251,2.508,1258,1.931,1259,1.095,1273,1.525,1284,3.8,1291,1.486,1303,4.185,1316,2.812,1323,2.065,1330,4.992,1344,1.486,1351,1.349,1363,1.407,1364,1.138,1372,0.74,1378,0.851,1379,0.945,1382,0.311,1383,0.392,1385,0.771,1391,2.953,1395,1.125,1397,1.19,1405,2.293,1433,0.35,1439,2.799,1452,2.458,1456,2.54,1457,2.613,1458,3.889,1460,2.08,1472,0.653,1496,2.54,1497,2.953,1505,1.138,1507,3.417,1513,1.344,1516,2.03,1518,1.289,1552,3.8,1600,1.349,1614,2.065,1616,4.504,1659,3.147,1662,2.409,1680,1.101,1681,3.248,1684,0.979,1687,1.901,1689,1.626,1693,2.161,1695,2.293,1712,3.082,1727,2.143,1757,4.279,1760,1.457,1772,1.77,1843,1.626,1911,1.77,1913,1.289,1927,1.289,1928,1.568,1931,2.08,1943,1.019,1946,1.403,1966,1.828,1973,1.985,1992,2.181,1994,1.414,2100,1.289,2101,1.349,2102,1.349,2104,1.349,2106,1.349,2107,1.349,2108,1.349,2110,1.349,2112,1.349,2114,1.349,2172,0.028,2174,2.614,2176,1.414,2179,2.231,2189,2.466,2261,2.143,2283,1.77,2307,1.015,2322,1.688,2325,2.293,2397,1.235,2431,1.054,2438,1.23,2473,2.993,2518,1.185,2541,2.065,2544,2.231,2643,4.049,2655,2.663,2665,2.444,2676,1.095,2719,1.901,2723,2.953,2735,2.729,2768,2.54,2833,2,2849,1.718,2856,2.799,2876,1.901,2891,3.581,2910,2.326,2942,1.901,2964,1.901,2979,2.54,2991,2.298,2992,2.025,2993,1.661,3068,1.349,3069,2.632,3086,1.905,3101,1.414,3139,2.293,3262,2.181,3265,2.065,3315,1.414,3341,1.095,3346,2.065,3370,1.901,3393,2.181,3404,3.967,3440,1.486,3479,2.428,3590,3.587,3621,3.514,3664,3.889,3801,1.661,3803,1.095,3807,3.889,3808,1.235,3824,2.326,3892,2.953,3893,3.744,3894,4.185,4084,3.129,4093,2.065,4117,1.901,4144,2.419,4228,3.085,4341,2.293,4354,3.129,4393,3.524,4398,1.901,4469,2.953,4498,1.457,4504,2.293,4521,1.486,4549,1.77,4552,1.901,4624,5.73,4625,4.35,4810,2.143,4847,1.138,4894,2.799,4904,2.065,4905,2.065,4913,2.285,4928,3.129,4937,2.065,5093,3.147,5121,2.933,5122,3.889,5124,3.085,5133,1.138,5141,1.77,5150,2.731,5223,2.614,5328,2.285,5335,2.285,5384,1.77,5406,2.285,5407,2.285,5409,2.065,5410,2.285,5411,3.186,5427,1.568,5430,2.663,5441,2.285,5463,2.065,5465,3.186,5470,2.293,5497,1.486,5505,3.581,5519,3.524,5520,2.993,5543,4.837,5547,4.303,5548,3.889,5551,2.285,5552,3.581,5553,3.581,5558,3.334,5571,1.901,5572,3.889,5576,3.748,5577,2.953,5579,3.334,5583,4.303,5591,2.285,5593,4.303,5594,1.568,5599,4.303,5604,1.989,5606,4.303,5610,3.517,5617,1.77,5618,1.901,5633,2.065,5634,2.285,5659,2.285,5694,3.334,5939,2.061,5996,2.933,5999,3.186,6011,4.303,6012,4.303,6040,1.349,6065,1.77,6066,2.933,6068,3.186,6511,1.901,6666,1.568,6713,1.901,6806,3.889,6854,2.285,6859,2.065,6922,2.285,7122,2.065,7124,3.186,7186,3.129,7200,2.285,7203,4.025,7652,2.065,7711,4.789,7899,2.285,7951,1.661,8127,2.731,8245,2.065,8300,2.731,8379,1.901,8511,3.889,8535,2.065,8536,2.285,8537,4.372,8559,4.372,8636,2.285,8638,2.285,8737,1.901,8821,3.889,8830,2.419,8833,2.933,9112,1.77,9246,2.285,9261,3.186,9297,2.933,9319,2.065,9932,1.901,10165,3.186,10181,2.285,10223,2.285,10462,3.524,10500,3.581,10501,2.933,10516,2.285,10521,2.285,11198,2.285,11821,4.303,11864,5.226,11970,4.303,12167,2.285,12270,2.285,12346,2.285,12376,3.524,12387,2.285,12441,5.512,12492,3.186,12572,4.303,13404,2.285,13460,2.618,13461,2.618,13462,4.038,13463,2.618,13464,2.618,13465,2.618,13466,2.618,13467,4.038,13468,2.618,13469,2.618,13470,2.285,13471,2.618,13472,2.618,13473,2.618,13474,2.618,13475,2.618,13476,2.618,13477,4.038,13478,2.618,13479,2.618,13480,2.618,13481,2.618,13482,2.618,13483,2.618,13484,2.618,13485,2.618,13486,4.038,13487,2.618,13488,2.618,13489,2.618,13490,2.618,13491,2.618,13492,2.618,13493,2.618,13494,4.038,13495,2.618,13496,2.618,13497,2.618,13498,2.618,13499,2.618,13500,2.618,13501,2.618,13502,2.618,13503,4.038,13504,2.618,13505,5.542,13506,2.618,13507,2.618,13508,2.618,13509,4.038,13510,2.618,13511,2.618,13512,2.618,13513,3.524,13514,2.618,13515,4.93,13516,4.038,13517,2.285,13518,2.618,13519,4.93,13520,2.618,13521,2.618,13522,4.038,13523,2.618,13524,2.285,13525,4.038,13526,2.618,13527,2.618,13528,2.618,13529,4.038,13530,2.618,13531,2.618,13532,4.038,13533,2.618,13534,2.618,13535,2.618,13536,4.038,13537,4.038,13538,4.038,13539,2.285,13540,2.618,13541,2.618,13542,2.618,13543,5.354,13544,2.618,13545,7.893,13546,2.618,13547,2.618,13548,2.618,13549,2.618,13550,2.618,13551,2.618,13552,2.618,13553,4.038,13554,2.618,13555,2.618,13556,2.618,13557,2.618,13558,4.93,13559,2.618,13560,2.618,13561,2.618,13562,4.038,13563,2.618,13564,2.618,13565,2.618,13566,2.618,13567,2.618,13568,2.618,13569,2.618,13570,2.618,13571,4.038,13572,2.618,13573,4.93,13574,2.618,13575,2.618,13576,2.618,13577,4.038,13578,2.618,13579,2.618,13580,4.038,13581,2.618,13582,2.285,13583,2.618,13584,2.618,13585,5.542,13586,2.618,13587,2.618,13588,4.038,13589,2.618,13590,2.618,13591,2.618,13592,2.618,13593,2.618,13594,2.618,13595,2.285,13596,2.285,13597,4.038,13598,2.618,13599,2.285,13600,2.618,13601,4.93,13602,4.93,13603,3.186,13604,3.524,13605,2.618,13606,2.618,13607,2.285,13608,2.618,13609,2.618,13610,4.038,13611,4.038,13612,4.038,13613,2.618,13614,2.618,13615,2.618,13616,2.618,13617,2.618,13618,2.618,13619,2.618,13620,4.038,13621,2.618,13622,4.038,13623,2.618,13624,4.038,13625,2.618,13626,6.327,13627,2.618,13628,2.618,13629,2.618,13630,2.618,13631,2.618,13632,2.618,13633,2.618,13634,2.618,13635,2.618,13636,2.618,13637,2.618,13638,4.303,13639,4.038,13640,2.618,13641,2.618,13642,2.618,13643,2.618,13644,2.618,13645,2.618,13646,2.618,13647,2.618,13648,2.618,13649,2.618,13650,2.618,13651,4.038,13652,2.618,13653,4.93,13654,4.93,13655,4.93,13656,2.618,13657,2.618,13658,3.524,13659,2.618,13660,4.93,13661,4.93,13662,4.93,13663,2.618,13664,2.285,13665,2.618,13666,2.618,13667,2.618,13668,2.618,13669,2.618,13670,2.618,13671,2.618,13672,2.618,13673,2.618,13674,2.618,13675,4.038,13676,2.618,13677,2.618,13678,2.618,13679,2.618,13680,2.618,13681,2.285,13682,3.524,13683,4.038,13684,3.524,13685,3.186,13686,3.524,13687,3.524,13688,3.524,13689,2.618,13690,5.542,13691,2.618,13692,2.618,13693,2.618,13694,2.618,13695,2.618,13696,2.618,13697,4.038,13698,2.618,13699,2.285,13700,4.93,13701,2.618,13702,2.618,13703,2.618,13704,2.618,13705,2.618,13706,2.618,13707,2.618,13708,2.618,13709,2.618,13710,2.618,13711,4.038,13712,4.038,13713,4.038,13714,2.618,13715,2.618,13716,4.038,13717,4.038,13718,2.618,13719,2.618,13720,2.618,13721,2.618,13722,2.618,13723,4.93,13724,2.618,13725,2.618,13726,4.038,13727,2.618,13728,3.889,13729,2.618,13730,2.618,13731,2.618,13732,2.618,13733,2.618,13734,2.618,13735,2.618,13736,2.618,13737,2.618,13738,2.618,13739,2.618]],["t/55",[748,1.343,13740,4.129]],["b/55",[22,1.64,24,1.688,35,0.447,36,1.225,47,1.882,48,0.867,59,1.924,97,1.882,99,1.948,115,1.035,124,0.121,159,2.515,160,1.167,163,2.443,187,1.253,232,0.396,244,0.522,268,3.039,269,0.36,303,1.491,315,1.759,362,1.266,391,1.702,424,2.981,456,3.125,457,1.882,460,3.216,473,0.062,474,0.053,477,2.729,481,0.555,484,1.045,485,3.913,487,1.593,488,3.024,489,0.831,500,0.51,501,0.775,502,2.515,503,0.831,507,2.419,514,1.487,519,1.491,521,1.167,529,1.058,563,0.456,569,3.544,573,2.001,574,0.821,580,3.039,582,0.633,583,2.984,603,1.085,606,0.748,608,3.027,617,0.831,622,1.086,625,1.125,636,1.882,651,1.948,667,1.441,668,2.295,670,3.601,677,0.783,680,2.512,684,1.006,700,2.419,702,2.814,721,1.936,727,2.164,748,1.882,761,3.039,767,0.932,769,0.899,777,2.523,791,1.593,798,2.814,835,1.047,849,1.759,852,2.619,858,1.882,919,2.244,926,0.972,1050,2.914,1069,2.443,1107,1.819,1189,3.87,1196,1.948,1258,2.016,1259,2.923,1344,3.97,1374,1.086,1395,0.932,1518,3.7,1519,3.266,1680,1.127,1681,2.85,2172,0.062,2189,3.072,2256,4.565,2471,2.329,2518,2.619,2610,4.565,2611,4.565,2655,3.125,2665,2.353,2835,4.565,2991,2.719,2992,1.744,3184,2.712,3803,2.419,3855,4.565,4398,4.202,4428,4.202,4498,2.523,4511,4.188,4512,3.125,4583,6.101,4584,6.101,4585,6.101,4898,4.728,4899,4.565,5030,6.101,5999,4.565,6023,4.565,6025,4.565,6027,4.565,6085,4.674,6872,3.466,7315,3.913,7736,3.913,8443,4.565,9140,4.565,9141,4.565,12104,5.05,12105,5.05,13664,5.05,13741,6.991,13742,5.786,13743,5.786,13744,5.05,13745,5.786,13746,7.513,13747,6.991,13748,5.786,13749,5.786,13750,5.786,13751,5.786,13752,5.786,13753,5.786,13754,5.786,13755,5.786,13756,5.05,13757,5.786,13758,5.786,13759,5.786,13760,5.786,13761,6.991,13762,5.786,13763,5.786,13764,6.991,13765,5.786,13766,5.786,13767,5.05,13768,5.786,13769,5.786,13770,5.786]],["t/56",[89,1.601,13771,4.129]],["b/56",[35,0.376,54,0.575,66,1.075,67,0.354,82,1.714,89,3.101,105,0.575,117,2.506,124,0.12,159,2.707,183,1.455,232,0.371,266,2.01,269,0.376,315,2.43,316,1.197,317,1.197,341,0.569,386,0.575,402,0.543,473,0.067,474,0.056,483,1.152,484,0.834,487,2.243,489,0.868,493,1.233,500,0.391,501,0.978,503,0.951,506,0.7,509,2.375,514,1.446,515,1.545,518,1.274,519,2.128,522,0.799,533,1.831,563,0.575,574,0.766,582,0.681,583,2.169,585,2.025,606,0.766,616,0.569,617,0.868,618,0.516,650,2.707,651,2.608,675,1.714,677,0.732,683,0.866,684,0.834,705,1.958,710,1.002,724,2.169,748,2.025,755,1.831,758,3.305,780,1.651,791,1.714,793,3.951,794,1.274,798,2.94,813,2.731,814,1.771,835,1.161,851,2.797,865,2.707,907,3.729,962,3.066,1047,3.363,1098,3.407,1100,4.4,1181,2.937,1256,4.912,1290,2.7,1372,0.569,1374,1.134,1396,2.329,1433,1.037,1599,3.066,1908,4.912,2098,3.445,2159,5.434,2172,0.078,2438,1.822,2471,2.506,2576,2.937,2688,3.535,2833,2.247,2973,2.415,3124,3.207,3254,4.211,4508,3.729,5115,4.211,5126,3.729,5241,3.363,5472,4.918,5473,5.434,8358,5.434,8553,4.522,8554,4.522,11173,5.434,13772,6.226,13773,5.434,13774,5.434,13775,5.434,13776,6.226,13777,6.226,13778,6.226,13779,6.226,13780,6.226,13781,6.226,13782,6.226,13783,6.226,13784,6.226,13785,6.226,13786,6.226,13787,6.226]],["t/57",[13788,5.135]],["b/57",[35,0.434,54,0.636,105,0.636,124,0.121,160,0.996,232,0.397,269,0.428,303,2.022,386,0.585,402,0.559,473,0.069,474,0.057,500,0.467,503,0.96,515,1.572,533,2.307,576,2.103,604,1.468,651,2.501,677,0.745,681,2.934,705,2.336,710,1.032,732,0.859,767,1.322,781,3.652,835,1.113,855,2.399,940,3.55,961,3.659,1145,1.548,1174,2.902,1259,2.681,1349,5.305,2172,0.069,2438,1.6,2576,3.025,3122,5.025,4916,4.658,4919,4.658,5241,4.013,9092,5.861,9093,6.484,9112,4.337,13789,6.413,13790,7.43,13791,6.413]],["t/58",[13792,5.135]],["b/58",[35,0.446,54,0.632,67,0.23,88,1.586,105,0.665,124,0.122,160,1.273,187,1.453,232,0.41,269,0.425,341,0.598,386,0.515,456,2.807,457,1.69,469,2.844,473,0.056,474,0.05,484,0.696,489,0.618,500,0.472,503,0.778,506,0.498,515,1.591,560,1.137,569,2.451,573,1.384,574,0.821,576,1.296,585,2.128,616,0.655,618,0.543,622,1.325,625,1.373,626,0.822,630,0.569,649,1.876,651,2.53,677,0.843,684,0.696,717,2.352,767,0.837,776,2.611,851,1.876,858,2.128,896,2.634,1059,2.451,1094,1.876,1176,2.538,1302,5.459,1316,2.128,1488,1.384,1600,2.677,1615,2.21,1684,1.944,1712,2.173,1727,2.259,2172,0.056,2230,2.559,2307,2.016,2360,2.951,2438,2.115,2835,6.239,3069,2.52,4852,3.298,5520,2.807,6010,4.425,6085,3.113,7454,3.774,7711,3.774,8375,5.201,8377,6.25,13595,4.535,13793,6.543,13794,5.197,13795,5.197,13796,7.161,13797,5.197,13798,5.197,13799,5.197,13800,4.535,13801,5.197,13802,5.197,13803,5.197,13804,7.908,13805,5.197,13806,5.197,13807,5.197,13808,5.197,13809,5.197]],["t/59",[456,2.23,13810,4.129]],["b/59",[35,0.447,124,0.122,232,0.358,269,0.386,372,1.793,386,0.59,424,2.957,456,4.644,457,2.8,473,0.062,474,0.053,487,1.58,500,0.361,560,1.255,563,0.548,618,0.577,631,0.761,637,1.266,704,2.071,748,1.867,794,1.175,1035,2.147,1345,4.168,1534,2.011,2172,0.062,2189,2.602,2426,2.707,2438,1.432,3750,5.954,3987,6.071,3988,6.071,3991,6.071,3993,5.488,3996,6.071,3998,6.071,4000,6.071,4002,6.071,4213,5.052,4498,3.038,4504,4.655,4602,5.009,4611,3.642,4624,6.752,4625,5.078,4627,4.215,4628,6.071,4629,6.071,4632,6.071,4636,6.071,4643,6.071,4651,6.071,4700,6.071,4704,6.071,4730,6.071,5669,4.528,10165,4.528,10811,4.168,11823,5.009,13603,4.528,13604,5.009,13811,8.199,13812,5.739,13813,5.739,13814,5.739,13815,5.739,13816,5.739,13817,5.739,13818,5.739,13819,8.102,13820,5.739,13821,5.739,13822,6.957,13823,7.782,13824,5.739,13825,8.102,13826,5.739,13827,7.486,13828,5.739,13829,6.957,13830,5.739,13831,5.739,13832,5.739,13833,6.957,13834,5.739,13835,6.957,13836,5.739,13837,5.739,13838,6.957,13839,5.739,13840,6.957,13841,5.739,13842,6.957,13843,5.739,13844,6.957,13845,6.957,13846,5.739,13847,5.739,13848,5.739,13849,6.957,13850,5.739,13851,6.957,13852,5.739,13853,7.486]],["t/60",[13854,5.135]],["b/60",[11,0.743,20,2.114,22,1.183,35,0.448,36,1.088,37,0.431,48,0.543,54,0.631,61,2.597,66,1.349,67,0.352,78,1.396,82,0.999,88,1.599,89,1.407,97,2.114,104,0.627,105,0.621,110,2.635,115,1.31,124,0.122,134,2.453,159,3.186,160,1.314,161,1.416,164,2.453,177,0.543,182,0.935,187,1.374,232,0.406,242,0.584,244,0.634,245,2.635,266,1.416,268,1.577,269,0.424,276,1.517,303,1.837,315,2.086,316,1.214,317,1.207,320,0.431,333,1.422,341,0.546,351,1.125,352,2.173,362,1.689,363,3.478,365,0.38,372,0.935,386,0.577,391,1.512,401,0.486,402,0.448,424,3.348,457,1.673,458,2.173,459,1.407,467,1.976,469,2.236,470,1.711,473,0.039,474,0.039,475,1.407,481,0.73,483,0.671,484,0.87,487,1.889,488,1.46,489,0.773,493,0.718,500,0.518,501,1.141,503,0.973,506,0.813,508,1.943,509,1.18,512,0.944,513,2.453,514,1.411,515,1.551,517,1.869,518,1.599,519,2.089,521,1.066,522,0.711,527,0.876,528,1.053,529,1.044,531,2.327,533,1.067,534,3.51,540,2.06,543,1.103,545,3.379,550,1.787,551,1.856,552,1.959,553,2.318,557,1.407,559,1.032,560,1.843,561,2.862,562,3.478,563,0.405,564,1.923,573,0.966,574,0.794,579,2.635,580,2.597,582,0.855,583,1.264,584,3.227,585,2.232,593,3.478,594,2.777,604,0.919,606,0.718,608,1.407,611,1.943,616,0.628,617,0.773,618,0.495,622,1.138,625,1.18,626,0.364,627,0.397,628,0.414,629,0.38,630,0.397,631,0.397,633,0.431,634,1.442,635,2.302,636,2.586,637,0.77,638,0.449,641,0.449,643,0.449,644,0.999,645,0.449,646,0.486,648,0.486,649,2.156,651,2.869,667,1.439,668,1.757,670,2.649,671,2.661,675,0.999,677,0.826,682,0.637,683,0.505,684,0.8,687,1.141,689,1.244,694,2.318,699,2.92,702,1.46,704,2.346,705,1.878,710,1.205,713,1.309,715,1.37,717,2.327,718,1.995,719,2.302,724,2.391,727,2.234,733,3.893,734,2.635,748,1.673,751,1.517,755,1.067,758,1.642,759,1.18,762,1.577,764,2.06,767,1.344,769,1.27,773,1.564,776,1.18,779,1.46,780,1.657,784,3.227,786,0.935,788,2.453,791,2.15,794,1.053,795,2.635,796,4.651,798,2.405,799,2.236,800,2.173,802,2.07,804,2.649,813,1.923,814,1.463,816,1.731,833,2.236,835,1.121,836,1.309,838,3.166,840,3.166,849,1.103,851,2.924,852,1.642,853,0.966,858,1.673,864,1.221,878,2.453,884,2.06,885,1.141,886,1.309,893,4.269,896,2.07,902,2.302,905,1.787,916,1.711,919,1.407,926,0.954,1012,2.453,1023,2.06,1036,2.327,1042,1.959,1059,1.711,1066,1.103,1069,1.18,1091,1.18,1092,2.521,1094,2.156,1098,1.517,1100,2.92,1101,1.357,1104,1.221,1110,2.327,1117,1.103,1119,2.826,1145,0.876,1147,1.792,1162,1.952,1174,2.327,1176,1.407,1177,2.649,1189,1.869,1194,1.264,1196,2.52,1201,3.014,1211,1.642,1215,3.166,1248,1.577,1251,1.642,1253,2.453,1259,2.718,1263,2.06,1270,1.869,1290,2.082,1302,2.635,1316,1.673,1332,4.72,1336,2.06,1337,2.06,1344,2.92,1372,0.652,1374,0.799,1376,1.933,1377,2.405,1378,1.673,1379,1.856,1382,0.431,1383,0.543,1384,1.959,1385,0.505,1386,0.605,1395,1.243,1405,2.06,1428,1.264,1433,1.02,1444,0.584,1445,0.627,1452,1.856,1457,2.234,1516,0.966,1534,0.848,1575,2.862,1596,3.392,1608,2.06,1615,1.512,1642,2.453,1662,1.577,1680,1.029,1684,1.357,1693,1.309,1712,2.15,1727,2.236,1843,2.07,1898,2.862,1909,2.06,1931,2.649,1943,1.046,1973,2.07,1999,2.533,2120,2.635,2172,0.039,2176,1.959,2230,1.787,2306,3.08,2307,2.521,2431,2.07,2432,2.426,2438,1.828,2522,3.478,2540,2.654,2569,4.339,2576,1.711,2610,2.862,2611,4.057,2619,3.08,2665,1.221,2682,3.078,2753,2.173,2768,3.671,2806,2.317,2850,1.869,2933,3.264,2934,2.453,2935,3.166,2953,2.862,2970,3.735,2983,2.777,2991,1.792,2992,1.49,3069,2.621,3086,3.237,3104,2.635,3105,2.862,3122,4.04,3137,2.173,3166,4.72,3184,2.842,3269,2.06,3270,2.06,3316,2.173,3341,1.517,3392,2.649,3420,2.453,3457,2.597,3526,2.405,3716,4.713,3821,2.06,3824,2.426,3826,2.635,3845,3.166,3848,2.862,3851,3.166,3853,3.166,3855,2.862,3857,3.166,3858,3.166,3860,3.166,3862,3.166,3864,3.166,3865,3.166,3867,3.166,3869,3.166,3870,3.166,3872,3.166,3874,3.166,3876,3.166,3878,3.166,3881,3.166,3893,3.392,3894,3.578,3902,4.488,3913,3.166,3936,3.166,3958,3.166,3959,3.166,3960,3.166,3961,2.862,3965,3.166,3966,3.166,3969,3.166,3971,3.166,3974,3.166,3976,3.166,3983,3.166,3985,3.166,3986,3.166,4031,2.862,4102,4.339,4109,3.166,4110,3.166,4184,2.173,4341,2.92,4342,3.227,4449,3.51,4471,2.06,4490,3.166,4497,1.517,4511,3.08,4512,3.227,4513,3.706,4516,4.713,4518,2.862,4520,3.166,4521,2.06,4566,3.166,4567,3.166,4834,2.302,4916,3.735,4919,2.635,5050,2.635,5111,3.166,5128,2.302,5207,2.862,5214,3.201,5267,2.302,5521,1.959,5536,1.787,5618,2.635,5646,3.08,6433,3.166,6495,3.166,6533,2.302,6666,2.173,6710,1.869,7203,4.339,7271,3.166,7296,5.728,7315,4.04,7454,3.735,7577,3.264,7629,3.735,7699,2.635,7700,2.862,7701,3.166,7702,3.166,7703,2.862,7711,3.735,7736,3.478,7935,4.057,8156,3.166,8167,3.166,8312,2.173,8324,3.735,8359,2.862,8360,3.166,8361,4.057,8571,2.635,8572,2.635,8771,2.635,8830,3.578,8857,5.214,8895,4.488,8935,3.166,8996,2.862,9036,2.862,9083,3.166,9084,3.166,9085,2.862,9086,3.166,9087,3.166,9088,3.166,9089,3.166,9090,3.166,9092,2.862,9174,4.488,9175,4.488,9178,3.166,9179,5.214,9184,4.488,9329,3.166,9367,2.862,9368,2.862,9374,4.488,9711,3.166,9848,2.635,9865,4.057,11384,3.166,11601,3.166,12124,3.166,12385,4.488,12577,3.166,13353,3.166,13470,3.166,13513,5.672,13582,3.166,13596,5.214,13599,4.488,13638,3.166,13681,3.166,13682,3.166,13684,3.166,13685,2.862,13686,3.166,13687,3.166,13688,3.166,13744,5.214,13855,3.628,13856,3.628,13857,3.628,13858,3.628,13859,3.628,13860,3.628,13861,3.628,13862,3.735,13863,5.143,13864,5.143,13865,3.628,13866,3.628,13867,3.628,13868,3.628,13869,3.628,13870,3.628,13871,3.628,13872,3.628,13873,3.735,13874,3.628,13875,3.628,13876,3.628,13877,3.628,13878,3.628,13879,3.628,13880,3.628,13881,3.628,13882,3.628,13883,3.628,13884,3.628,13885,5.143,13886,3.628,13887,3.628,13888,3.628,13889,3.628,13890,3.628,13891,3.628,13892,3.628,13893,3.628,13894,5.143,13895,3.628,13896,3.628,13897,3.628,13898,5.974,13899,3.628,13900,3.628,13901,5.143,13902,7.328,13903,3.628,13904,5.214,13905,5.214,13906,5.214,13907,3.628,13908,5.143,13909,3.628,13910,3.628,13911,3.628,13912,3.628,13913,3.628,13914,3.628,13915,3.628,13916,3.628,13917,3.628,13918,3.628,13919,3.628,13920,3.628,13921,3.628,13922,3.628,13923,3.628,13924,3.628,13925,3.628,13926,3.628,13927,3.628,13928,3.628,13929,3.628,13930,3.628,13931,3.628,13932,3.628,13933,3.628,13934,3.628,13935,3.628,13936,3.628,13937,3.628,13938,3.628,13939,3.628,13940,3.628,13941,3.628,13942,3.628,13943,3.628,13944,3.628,13945,3.628,13946,3.628,13947,3.628,13948,3.628,13949,3.628,13950,5.143,13951,3.628,13952,3.628,13953,5.143,13954,5.974,13955,3.628,13956,3.628,13957,3.628,13958,3.628,13959,3.628,13960,3.628,13961,3.628,13962,3.628,13963,3.628,13964,3.628,13965,3.628,13966,3.628,13967,3.628,13968,3.628,13969,3.628,13970,3.628,13971,3.628,13972,3.628]],["t/61",[27,1.162,5108,1.339,11222,2.723]],["b/61",[19,1.658,27,1.958,34,1.814,35,0.403,36,1.693,37,0.781,38,1.156,47,2.449,48,0.872,53,0.831,54,0.517,59,2.117,67,0.257,79,1.886,92,3.787,97,1.411,101,1.747,102,1.886,104,1.005,105,0.458,124,0.122,130,1.623,131,1.814,177,0.983,182,1.941,206,1.234,231,1.623,232,0.208,233,2.047,234,2.235,242,0.937,244,0.575,261,2.312,269,0.338,298,2.546,299,2.064,311,2.464,312,2.599,320,0.516,321,0.776,333,0.949,335,1.082,341,0.397,349,2.137,353,0.776,354,0.803,355,1.194,361,3.423,365,0.455,385,1.082,386,0.517,401,0.779,402,0.378,434,1.364,435,1.623,468,1.276,473,0.047,474,0.044,481,0.629,484,0.979,500,0.533,501,0.779,503,0.516,506,0.558,511,1.829,512,0.559,514,0.859,515,0.918,521,0.674,522,0.475,525,1.692,529,0.749,541,3.233,543,2.408,544,3.143,559,1.868,563,0.342,564,1.623,574,0.806,576,1.451,582,0.768,587,1.769,601,1.55,603,0.809,604,1.174,606,0.672,610,3.274,616,0.397,617,0.87,618,0.36,622,1.136,625,1.178,626,0.435,627,0.475,628,0.749,629,0.455,630,0.475,631,0.475,633,0.516,637,1.171,638,0.72,641,0.537,643,0.537,645,0.537,646,0.779,648,0.779,677,0.755,680,1.364,681,1.623,682,0.537,683,0.809,684,0.979,685,2.063,689,0.831,721,1.118,732,0.581,751,1.814,753,1.512,760,1.623,765,1.512,801,2.971,807,2.934,828,2.812,847,1.964,1091,1.411,1104,1.46,1119,2.53,1234,1.886,1237,1.886,1240,2.599,1262,2.633,1273,1.194,1287,3.787,1288,2.455,1291,3.983,1364,1.886,1366,2.064,1369,1.807,1372,0.532,1376,1.693,1377,2.643,1378,1.411,1379,1.566,1382,0.781,1383,0.872,1385,0.809,1386,0.97,1395,1.212,1444,0.937,1445,1.263,1448,0.803,1449,0.776,1450,0.831,1451,0.831,1459,0.918,1461,0.918,1464,0.918,1466,0.981,1467,1.014,1468,0.918,1469,1.118,1472,1.082,1475,1.118,1478,1.156,1483,1.194,1485,1.194,1488,1.156,1489,1.234,1492,1.234,1493,1.194,1494,1.276,1498,1.319,1499,1.319,1501,1.319,1502,1.319,1504,1.364,1505,1.886,1509,1.46,1510,1.46,1511,1.46,1512,1.566,1513,1.48,1514,2.047,1515,2.235,1545,2.344,1592,2.344,1680,1.11,1818,2.934,1853,2.952,1875,4.59,1885,1.769,1897,3.423,1943,1.33,1966,1.964,1992,3.143,1994,3.951,2032,1.623,2033,1.683,2037,1.623,2039,1.683,2040,1.683,2042,1.683,2044,1.683,2045,1.623,2046,1.683,2047,1.683,2050,1.747,2051,1.683,2052,1.814,2056,1.886,2057,1.886,2058,1.886,2060,1.886,2062,1.886,2064,1.747,2067,1.683,2071,1.886,2072,1.886,2074,1.886,2077,1.886,2078,1.964,2079,1.964,2081,2.047,2084,2.047,2085,2.047,2086,2.047,2087,2.047,2088,2.137,2092,2.137,2093,2.137,2094,2.047,2096,2.137,2098,2.745,2099,2.047,2100,2.137,2101,2.235,2102,2.235,2104,2.235,2106,2.235,2107,2.235,2108,2.235,2110,2.235,2112,2.235,2114,2.235,2116,2.235,2117,2.235,2118,2.344,2119,2.344,2122,2.464,2124,2.464,2127,2.464,2130,2.464,2131,2.464,2133,2.464,2134,2.344,2135,2.464,2138,2.464,2139,3.097,2140,2.464,2141,2.464,2143,2.344,2144,2.464,2145,2.464,2148,2.599,2149,2.599,2150,2.599,2151,2.599,2152,2.599,2153,2.599,2154,2.599,2172,0.047,2267,2.754,2544,2.633,2573,2.866,2823,2.754,2849,1.512,2910,3.628,2915,2.047,2926,4.226,2974,3.151,2975,3.728,2999,2.599,3064,2.754,3069,1.411,3101,2.344,3267,2.866,3426,3.151,3475,2.235,3689,3.423,3751,2.599,3826,3.151,3893,4.543,3894,4.899,3895,6.384,3896,5.729,4062,3.151,4228,2.235,4251,5.078,4453,3.932,4498,2.1,4810,3.534,4821,2.53,4877,2.344,4966,3.304,5007,2.934,5010,2.53,5090,2.934,5108,2.546,5160,2.754,5293,5.078,5446,3.423,5497,2.464,5501,5.095,5503,3.423,5505,3.151,5558,2.934,5572,3.423,5576,2.934,5577,2.599,5652,3.304,5820,4.202,5946,4.226,5947,2.754,5952,2.754,5962,3.787,6124,2.344,6499,4.226,6713,3.151,6872,2.599,7126,5.095,7148,3.304,8078,2.599,8080,2.599,8082,2.599,8262,2.754,8553,3.151,8554,3.151,8555,3.423,8657,2.754,8658,2.754,8659,2.754,8660,2.754,8661,2.754,8662,2.754,8663,2.754,8664,2.754,8665,2.754,8666,2.754,8667,2.754,8668,2.754,8669,2.754,8670,2.754,8671,2.754,8672,2.754,8673,2.754,8674,2.754,8675,2.754,8676,2.754,8677,2.754,8678,2.754,8679,2.754,8680,2.599,8681,2.754,8682,2.754,8683,2.754,8684,2.754,8685,2.754,8686,2.754,8687,2.754,8688,2.754,8689,2.754,8690,2.754,8691,2.754,8692,2.934,8694,2.934,8695,2.934,8696,2.934,8697,2.934,8739,2.934,8740,2.934,8980,4.226,9167,3.787,9232,5.078,9233,3.787,9235,3.787,9263,3.151,9264,3.151,9265,3.423,9309,4.59,9310,3.787,9311,3.787,9318,6.122,9319,4.59,9321,5.078,9360,5.078,9363,3.151,9364,4.59,9365,3.787,9366,3.787,9367,3.423,9368,3.423,9377,5.078,9378,6.713,9379,2.599,10176,3.935,10911,4.59,10930,3.151,11113,5.534,11200,3.787,11366,3.485,11467,3.935,11512,5.078,11524,3.787,11597,5.729,11952,3.983,12008,3.423,12046,5.078,12492,3.423,13973,4.339,13974,4.339,13975,5.819,13976,5.819,13977,3.787,13978,4.59,13979,4.339,13980,4.339,13981,4.339,13982,4.339,13983,4.339,13984,4.339,13985,4.962,13986,4.339,13987,3.787,13988,4.339,13989,4.339,13990,4.339,13991,4.339,13992,4.339,13993,4.339,13994,3.485,13995,5.078,13996,5.819,13997,4.339,13998,5.819,13999,5.819,14000,4.339,14001,4.339,14002,4.339,14003,4.339,14004,5.819,14005,4.339,14006,4.339,14007,4.339,14008,4.339,14009,5.819,14010,4.339,14011,4.339,14012,4.339,14013,4.339,14014,4.339,14015,4.339,14016,6.122,14017,4.339,14018,6.565,14019,3.787,14020,5.819,14021,3.423,14022,4.339,14023,4.339,14024,5.819,14025,4.339,14026,4.339,14027,4.339,14028,5.819,14029,5.819,14030,4.339,14031,4.339,14032,4.339,14033,4.339,14034,4.339,14035,4.339,14036,4.339,14037,4.339,14038,4.339,14039,4.339,14040,4.339,14041,4.339,14042,4.339,14043,4.339,14044,4.339,14045,4.339,14046,3.787,14047,4.339,14048,5.819,14049,4.339,14050,4.339,14051,4.339,14052,4.339,14053,4.339,14054,4.339,14055,4.339,14056,4.339,14057,6.565,14058,6.565,14059,6.565,14060,4.339,14061,7.315,14062,6.565,14063,6.565,14064,4.339,14065,4.339,14066,4.339,14067,7.315,14068,4.339,14069,5.819,14070,4.339,14071,4.339,14072,4.339,14073,4.339,14074,6.565,14075,4.339,14076,4.339,14077,4.339,14078,4.339,14079,4.339,14080,4.339,14081,3.787,14082,5.819,14083,4.339,14084,4.339,14085,4.339,14086,4.339,14087,4.339,14088,4.339,14089,4.339,14090,4.339,14091,4.339,14092,4.339,14093,4.339,14094,4.339,14095,4.339,14096,4.339,14097,4.339,14098,5.819,14099,5.819,14100,5.819,14101,5.819,14102,4.339,14103,4.339,14104,4.339,14105,4.339,14106,4.339,14107,6.565,14108,4.339,14109,3.787,14110,4.339,14111,5.819,14112,4.339,14113,4.339,14114,4.339,14115,4.339,14116,4.339,14117,4.339,14118,4.339,14119,4.339,14120,4.339,14121,4.339,14122,4.339]],["t/62",[14123,5.135]],["b/62",[19,1.566,30,1.945,35,0.424,37,0.813,54,0.539,67,0.303,88,1.142,105,0.607,124,0.122,160,1.149,175,1.641,177,1.024,187,1.233,195,1.439,206,2.25,232,0.369,242,1.296,243,3.579,244,0.601,261,2.104,269,0.407,320,0.813,333,1.221,341,0.626,351,1.221,365,0.717,379,5.395,386,0.539,401,0.916,402,0.672,473,0.06,474,0.052,481,0.655,483,1.033,490,1.697,500,0.536,512,0.881,514,1.105,515,1.181,518,1.142,521,0.867,522,0.843,525,1.439,527,1.347,528,1.142,529,1.019,543,1.697,560,1.496,563,0.583,574,0.709,582,0.843,587,1.697,601,1.487,603,0.951,604,1.223,606,0.655,611,2.224,616,0.626,617,0.879,618,0.567,622,0.867,625,0.899,626,0.742,627,0.748,628,0.844,629,0.717,630,0.748,631,0.748,633,0.813,634,1.651,637,1.108,638,0.847,641,0.847,643,0.847,645,0.847,646,0.916,648,0.916,667,1.181,668,1.641,671,2.165,675,1.536,677,0.686,682,0.691,683,0.951,684,0.916,689,1.068,715,1.487,732,0.747,767,0.899,773,2.079,776,1.815,794,1.4,806,3.499,926,1.119,1117,1.697,1137,2.426,1183,3.169,1244,2.088,1291,3.169,1292,3.774,1353,3.542,1362,1.946,1363,1.945,1372,0.51,1374,0.867,1382,0.813,1383,1.024,1385,0.951,1386,1.141,1395,1.312,1396,2.088,1397,1.347,1433,0.747,1437,2.653,1444,1.101,1513,1.368,1524,2.165,1531,1.588,1592,3.014,1680,1.188,1832,4.967,1891,3.014,1946,1.588,1971,2.526,2172,0.06,2179,2.247,2438,1.392,2474,3.343,2573,2.749,2655,3.694,2915,2.633,3024,2.165,3034,3.774,3118,3.542,3144,2.633,3262,3.014,3282,3.883,3348,4.054,3454,2.247,3479,3.368,3576,3.542,3613,5.371,4444,4.054,4497,2.334,4498,2.014,4501,3.774,4506,2.875,4511,3.343,4521,3.169,4773,3.169,4774,3.774,4894,3.883,4907,3.774,4908,3.774,4928,4.341,4936,4.871,4976,2.526,5003,4.054,5005,4.054,5223,3.226,5517,4.403,5536,2.749,6666,3.343,6969,4.625,7577,3.542,7961,3.542,8400,4.403,10496,4.892,10500,4.967,10501,5.371,10502,4.403,10527,4.403,10538,5.969,10540,4.403,10541,4.403,10543,5.395,10544,5.834,10968,3.542,11062,4.871,11916,4.054,11952,3.169,13539,4.871,13862,5.92,14124,5.581,14125,6.839,14126,4.871,14127,4.871,14128,4.871,14129,5.581,14130,5.581,14131,4.871,14132,5.581,14133,5.581,14134,5.581,14135,5.581,14136,7.395,14137,5.581,14138,5.581,14139,7.395,14140,4.403,14141,4.403,14142,4.403,14143,4.403,14144,5.581,14145,5.581,14146,5.581,14147,5.581,14148,5.581,14149,5.581,14150,5.581,14151,5.581,14152,5.581,14153,5.581,14154,5.581,14155,5.581,14156,5.581,14157,5.581,14158,5.581,14159,5.581,14160,5.581,14161,5.581,14162,5.581,14163,4.871,14164,5.581,14165,5.581,14166,5.581,14167,5.581]],["t/63",[503,0.41,3069,1.123,14168,3.452]],["b/63",[19,1.349,27,1.866,30,1.932,35,0.439,37,0.659,38,1.477,44,2.071,49,1.631,53,1.061,54,0.622,59,1.526,66,1.363,67,0.301,88,1.574,104,0.958,105,0.581,124,0.122,170,0.893,177,0.831,187,1.317,190,2.142,206,1.938,232,0.393,244,0.551,269,0.423,315,1.686,320,0.659,321,1.318,335,1.383,341,0.507,353,1.318,354,1.026,355,1.526,365,0.581,372,1.756,378,3.519,382,5.374,385,1.383,386,0.437,401,0.742,402,0.483,434,1.743,473,0.06,474,0.052,481,0.653,484,0.742,500,0.529,503,0.659,512,0.714,521,0.861,522,0.807,527,1.339,528,1.135,563,0.437,574,0.803,582,0.745,587,1.686,601,1.477,603,0.771,606,0.707,616,0.507,617,0.81,618,0.565,626,0.683,627,0.607,628,0.777,629,0.581,630,0.607,631,0.607,633,0.659,636,1.804,637,1.104,638,0.687,641,0.687,643,0.687,644,1.875,645,0.687,646,0.742,648,0.742,677,0.556,682,0.843,683,1.069,684,0.987,687,1.743,732,0.742,762,2.411,764,4.187,768,2.642,926,1.132,1035,2.074,1050,2.151,1060,2.318,1086,2.731,1104,2.482,1145,1.906,1213,2.151,1244,2.074,1248,2.411,1362,1.577,1364,2.411,1372,0.507,1374,0.861,1378,1.804,1379,2.001,1382,0.659,1383,0.831,1385,0.771,1386,0.925,1395,1.342,1396,2.074,1433,0.912,1444,0.893,1445,0.958,1448,1.364,1449,0.991,1450,1.061,1451,1.061,1459,1.173,1461,1.173,1464,1.173,1466,1.254,1467,1.295,1468,1.173,1469,1.429,1472,1.383,1475,1.429,1478,1.477,1483,1.526,1485,1.526,1488,1.477,1489,1.577,1492,1.577,1493,1.526,1494,1.631,1498,1.686,1499,1.686,1501,1.686,1502,1.686,1504,1.743,1513,1.487,1545,2.995,1598,2.232,1680,1.203,1772,3.75,1885,1.686,1891,2.995,2172,0.06,2573,2.731,2750,2.731,2992,2.079,3069,1.804,3158,3.519,3282,3.868,3454,2.742,3641,3.149,3702,4.08,4176,3.321,4539,3.149,4653,2.995,4830,2.509,5003,4.027,5004,3.083,5005,4.027,5006,2.731,5007,3.75,5011,4.839,5108,2.151,5118,3.75,5133,2.411,5223,3.478,5419,5.374,5459,3.355,5784,4.027,6773,4.374,7961,3.519,8771,4.027,8830,3.321,9263,4.027,9264,4.027,10683,3.75,11952,4.187,12008,5.374,13873,4.027,13985,4.323,14128,4.839,14131,4.839,14140,4.374,14141,4.374,14142,4.374,14143,4.374,14163,4.839,14169,6.812,14170,5.545,14171,5.545,14172,5.545,14173,5.545,14174,5.545,14175,5.545,14176,5.545,14177,5.545,14178,6.812,14179,5.545,14180,6.812,14181,5.545,14182,5.545,14183,5.545,14184,5.545,14185,5.545,14186,6.812,14187,5.545,14188,6.812,14189,5.545,14190,5.545,14191,5.545,14192,5.545,14193,5.545,14194,5.545,14195,5.545,14196,6.812,14197,5.545,14198,5.545,14199,5.545,14200,5.545,14201,5.545,14202,4.839,14203,5.545,14204,5.545,14205,5.545,14206,5.545,14207,5.545,14208,5.545,14209,5.545,14210,5.545,14211,5.545,14212,5.545,14213,5.545,14214,5.545,14215,5.545,14216,6.812,14217,5.545,14218,5.545,14219,5.545,14220,5.545,14221,5.545,14222,5.545,14223,5.545,14224,5.545,14225,5.545,14226,5.545,14227,5.545,14228,5.545,14229,5.545,14230,5.545,14231,5.545,14232,5.545,14233,5.545,14234,5.545,14235,5.545,14236,5.545]],["t/64",[162,0.933,10614,3.257]],["b/64",[22,1.064,35,0.411,37,0.639,44,2.031,53,1.029,54,0.526,61,2.336,66,1.314,67,0.346,104,0.928,105,0.526,124,0.122,162,1.72,175,1.58,177,1.089,182,1.385,187,0.896,196,2.878,197,3.442,232,0.364,242,1.076,244,0.401,256,3.634,266,1.479,269,0.344,276,2.247,299,1.69,303,1.385,304,2.769,320,0.639,321,0.961,333,1.59,334,3.634,341,0.492,353,0.961,354,0.994,365,0.563,386,0.526,394,2.01,397,3.291,401,0.894,402,0.468,460,2.163,473,0.058,474,0.051,480,2.084,481,0.64,483,0.994,484,1.047,498,3.219,500,0.518,506,0.697,511,2.101,512,0.692,518,1.368,522,0.832,527,1.297,538,1.873,547,3.161,557,2.084,559,1.901,563,0.526,569,2.535,574,0.795,575,2.432,582,0.873,585,1.748,587,1.634,592,4.556,596,2.031,601,1.431,602,2.535,603,1.058,604,1.195,606,0.64,616,0.492,617,0.795,618,0.446,622,1.038,625,1.076,626,0.539,627,0.588,628,0.613,629,0.563,630,0.588,631,0.588,633,0.865,637,1.001,638,0.665,641,0.665,643,0.665,645,0.665,646,0.719,648,0.719,671,2.084,682,0.665,683,0.747,687,2.101,689,1.392,710,1.171,715,1.431,732,0.719,759,1.748,764,3.051,765,2.328,770,2.905,791,1.479,806,2.905,809,1.809,814,1.529,835,0.805,854,2.769,856,2.769,863,2.903,865,2.336,885,2.101,896,2.163,906,2.535,916,2.535,926,1.088,947,3.609,1035,2.01,1042,2.903,1046,2.769,1086,2.647,1087,2.432,1094,1.94,1101,2.01,1107,2.101,1113,2.647,1117,1.634,1124,4.24,1137,3.515,1162,1.431,1186,2.903,1197,3.411,1243,3.411,1251,2.432,1258,2.534,1260,1.873,1261,2.432,1279,2.163,1316,2.173,1320,2.769,1362,1.529,1372,0.492,1374,0.835,1376,1.755,1382,0.639,1383,0.805,1385,0.747,1386,0.896,1397,1.613,1428,2.534,1444,0.865,1445,0.928,1448,0.994,1449,1.195,1450,1.029,1451,1.029,1459,1.137,1461,1.137,1464,1.137,1466,1.215,1467,1.256,1513,1.407,1514,2.535,1531,1.901,1534,1.561,1544,2.647,1609,3.634,1613,2.01,1659,3.051,1680,1.129,1943,1.076,2139,2.535,2172,0.058,2179,2.927,2189,2.01,2307,2.084,2360,4.129,2397,2.535,2425,3.411,2459,3.609,2466,4.519,2518,2.432,2539,4.917,2544,3.29,2573,2.647,2643,4.917,2833,1.94,2973,2.084,2991,2.328,3132,4.24,3267,3.291,3567,2.535,3608,3.903,4144,3.219,4195,4.69,4228,2.769,4427,4.03,4539,3.051,4653,2.903,4657,4.69,4942,2.927,4976,3.024,5093,3.051,5108,2.084,5133,2.905,5134,3.411,5223,2.535,5431,3.051,5459,3.291,5470,3.051,5521,2.903,5598,5.271,5604,2.647,5644,2.903,5653,3.903,5939,3.18,5953,3.794,6173,4.853,6174,3.903,6185,4.24,6204,4.24,6213,5.831,6391,4.69,7144,6.639,7170,3.903,7263,4.853,7264,4.24,7854,3.634,8511,4.24,8783,4.24,8800,4.24,9364,4.24,10168,4.69,10175,6.447,10176,3.634,10179,5.271,10615,3.634,10616,4.69,10621,4.69,10646,3.903,10663,4.24,10664,3.903,10673,4.24,10680,5.271,10722,5.736,10730,4.69,10805,4.24,10807,4.69,10822,3.634,11232,6.639,11238,3.903,11239,4.69,11242,4.69,12215,4.69,12219,4.69,12223,4.69,12240,4.69,14126,4.69,14237,6.682,14238,6.682,14239,6.682,14240,6.682,14241,5.374,14242,5.374,14243,5.374,14244,5.374,14245,5.374,14246,5.374,14247,5.374,14248,5.374,14249,5.374,14250,6.682,14251,5.374,14252,5.374,14253,5.374,14254,5.374,14255,5.374,14256,5.374,14257,5.374,14258,5.374,14259,5.374,14260,5.374,14261,5.374,14262,5.374,14263,5.374,14264,5.374,14265,6.682,14266,5.374,14267,5.374,14268,5.374,14269,5.374,14270,5.374,14271,5.374,14272,5.374,14273,5.374,14274,5.374,14275,5.374,14276,5.374,14277,5.374,14278,4.69,14279,5.374,14280,5.374,14281,5.374,14282,5.374,14283,5.374,14284,5.374,14285,6.682,14286,6.682,14287,5.374,14288,5.374,14289,6.682,14290,5.374,14291,7.271,14292,5.374,14293,5.374,14294,5.374,14295,5.374,14296,5.374,14297,5.374,14298,5.374,14299,5.374,14300,4.24]],["t/65",[175,0.872,176,1.109,11362,2.006,14301,2.154]],["b/65",[19,1.605,26,1.401,35,0.393,66,1.426,78,1.27,115,1.366,124,0.121,161,2.012,162,1.867,170,0.875,173,5.24,174,5.949,175,2.149,176,2.517,177,1.278,183,1.914,187,1.122,195,1.735,232,0.35,244,0.406,268,2.926,304,3.467,316,1.095,317,0.814,351,1.189,362,1.472,372,1.884,408,3.635,409,4.639,455,3.821,458,3.257,468,1.599,473,0.058,474,0.051,483,1.413,484,1.071,487,1.852,490,1.653,491,3.949,493,1.076,498,3.257,500,0.509,501,1.023,503,0.8,504,4.289,518,1.378,519,1.969,523,1.448,525,1.401,529,0.867,557,2.109,569,3.175,576,1.679,582,0.595,585,2.553,603,1.127,604,1.523,605,4.15,610,2.364,650,3.178,654,2.757,688,3.451,689,1.399,715,2.159,728,3.603,732,1.023,759,2.377,761,2.364,769,1.045,777,1.962,786,1.401,790,2.109,807,3.677,809,2.265,814,1.547,816,1.83,842,3.087,849,1.653,856,3.467,864,1.83,916,2.565,920,2.189,947,2.461,990,2.937,1005,4.745,1012,3.677,1015,2.461,1021,3.451,1024,2.461,1045,3.677,1058,2.364,1063,3.451,1066,1.653,1094,2.429,1101,2.517,1107,1.71,1113,3.6,1145,1.313,1174,2.461,1186,2.937,1187,2.937,1194,2.345,1195,3.451,1196,1.83,1244,2.034,1245,3.677,1250,3.257,1259,2.273,1260,1.895,1300,3.451,1335,3.451,1345,3.949,1363,2.787,1397,1.844,1519,2.364,1546,3.949,1599,2.678,1613,2.034,1631,4.888,1651,3.677,1652,2.364,1832,5.547,1835,3.949,1853,2.429,1894,3.178,1943,1.23,1946,1.547,1966,2.461,1973,3.16,2172,0.058,2230,2.678,2305,3.087,2431,2.189,2750,2.678,2787,3.087,2851,3.949,2991,2.345,3024,2.109,3034,3.677,3038,3.257,3068,2.801,3144,2.565,3195,4.551,3219,4.745,3234,4.044,3282,3.821,3303,5.874,3311,2.678,3441,3.451,3454,2.709,3480,4.745,3489,3.451,3951,4.289,3954,4.289,4182,3.677,4341,4.15,4424,3.949,4467,4.289,4539,3.087,4548,4.289,4653,2.937,4790,3.257,4976,3.308,5089,6.514,5241,2.937,5517,4.289,5557,3.677,5604,2.678,6279,4.289,6381,5.309,6627,3.677,7272,6.309,7383,4.745,7516,4.888,8098,4.745,8235,3.257,8312,3.257,9905,5.309,10070,4.745,10177,4.745,10206,3.949,10646,4.888,10968,4.271,11072,3.677,11188,4.888,11915,5.309,11916,5.949,11971,4.745,12351,4.745,13800,4.745,14127,6.379,14301,3.949,14302,4.745,14303,5.437,14304,4.289,14305,5.437,14306,5.437,14307,5.437,14308,5.437,14309,5.437,14310,5.437,14311,5.437,14312,6.73,14313,5.437,14314,5.437,14315,5.437,14316,5.437,14317,5.437,14318,5.437,14319,7.998,14320,6.73,14321,5.437,14322,5.437,14323,5.437,14324,5.437,14325,5.437,14326,5.437,14327,5.437,14328,5.437,14329,5.437,14330,5.437,14331,5.437,14332,5.437,14333,5.437,14334,5.437,14335,5.437,14336,5.437,14337,8.356,14338,6.73,14339,7.309,14340,5.437,14341,5.874,14342,5.437,14343,5.437,14344,5.437,14345,5.437,14346,5.437,14347,5.437,14348,7.309,14349,5.437,14350,5.437,14351,5.437,14352,5.437,14353,5.437,14354,8.107,14355,6.73,14356,5.437,14357,5.437,14358,5.437,14359,6.026,14360,5.437,14361,4.745,14362,5.437,14363,5.437,14364,5.437,14365,5.437,14366,7.309]],["t/66",[340,0.897,4773,1.314,14367,1.68,14368,1.68,14369,1.68,14370,2.314]],["b/66",[19,1.518,27,2.155,28,2.473,30,1.75,35,0.415,36,1.063,37,0.838,53,0.961,54,0.504,59,1.762,65,3.008,66,0.867,67,0.357,79,2.183,88,1.519,101,2.021,104,0.867,105,0.504,124,0.122,162,1.135,170,0.808,171,1.878,175,2.073,177,1.056,182,1.294,190,2.334,195,1.294,232,0.306,242,0.808,244,0.554,261,1.429,269,0.33,320,0.761,321,0.898,335,1.253,338,5.56,340,3.09,341,0.586,351,1.098,353,0.898,354,0.929,362,1.098,365,0.671,385,1.253,386,0.504,391,2.395,401,0.672,402,0.558,457,1.633,468,1.477,473,0.076,474,0.049,481,0.675,483,1.184,484,0.857,493,0.994,500,0.53,501,0.672,506,0.614,512,0.956,514,0.994,521,0.78,522,0.701,523,1.705,528,1.028,529,0.908,531,2.272,536,3.02,538,1.75,560,1.4,563,0.635,574,0.735,575,2.272,582,0.771,596,2.143,603,0.98,605,2.851,606,0.763,608,1.948,616,0.586,617,0.597,618,0.531,626,0.642,627,0.701,628,0.847,629,0.739,630,0.701,631,0.701,633,0.761,637,0.752,638,0.793,641,0.793,643,0.793,645,0.793,646,0.857,648,0.672,667,1.106,671,2.483,677,0.707,682,0.793,683,0.89,687,2.013,715,1.337,732,0.994,765,1.75,767,1.031,769,0.78,777,2.311,779,2.021,794,1.028,798,2.021,814,1.429,816,1.69,863,2.712,885,1.579,891,3.187,895,2.272,914,2.021,918,2.577,920,2.021,926,1.122,963,2.272,974,4.382,993,1.812,1015,2.272,1050,2.483,1059,2.369,1067,3.835,1086,2.473,1091,2.082,1094,1.812,1107,2.216,1117,1.527,1147,2.231,1155,3.647,1162,1.705,1173,2.712,1174,2.272,1176,1.948,1180,2.394,1183,2.851,1197,3.187,1201,2.021,1244,1.878,1248,2.183,1258,1.75,1260,1.75,1290,1.75,1341,3.647,1362,1.821,1372,0.586,1374,0.78,1376,1.212,1377,2.021,1382,0.597,1383,0.752,1385,0.698,1386,0.837,1395,1.282,1397,1.546,1433,0.672,1436,1.75,1437,1.948,1439,3.635,1444,0.808,1445,0.867,1448,0.929,1449,0.898,1450,0.961,1451,0.961,1459,1.063,1461,1.063,1464,1.063,1466,1.135,1467,1.173,1468,1.355,1469,1.294,1472,1.253,1475,1.294,1513,1.304,1517,1.812,1615,2.073,1616,2.851,1652,2.183,1680,1.185,1681,2.473,1755,3.647,1760,1.812,1843,2.021,1894,1.878,1943,0.808,1947,3.647,1973,2.021,2051,2.734,2067,2.483,2099,2.369,2155,3.961,2172,0.054,2175,1.477,2298,3.187,2307,1.948,2312,5.587,2403,3.187,2431,2.021,2438,1.597,2513,2.587,2518,2.272,2660,2.005,2665,1.69,2674,4.382,2676,2.677,2806,2.483,2895,4.329,2910,3.616,2925,2.712,2992,2.089,3008,3.187,3024,2.483,3034,3.396,3069,1.633,3144,2.369,3184,2.734,3426,3.647,3449,2.712,3454,2.837,3483,3.298,3573,3.647,3576,3.187,3611,3.647,3614,3.396,3616,3.396,3718,3.961,3803,2.1,3808,2.369,3824,2.369,3885,3.187,4004,3.187,4019,3.396,4023,3.187,4184,3.008,4198,6.104,4427,2.587,4444,3.647,4453,3.008,4486,3.961,4773,3.635,4774,3.396,4780,3.008,4810,2.183,4894,2.851,4942,2.577,4976,2.897,5004,2.272,5006,2.473,5010,2.183,5012,2.587,5070,2.473,5090,3.396,5094,3.835,5108,1.948,5124,2.587,5126,3.008,5133,2.183,5158,3.647,5209,2.587,5211,2.272,5431,2.851,5449,2.897,5604,3.776,5610,4.063,5633,3.961,5679,5.855,5680,6.841,5682,5.05,5683,5.05,5684,5.05,5685,5.05,5686,5.05,5700,4.65,5946,3.647,6076,3.187,6531,3.396,7539,3.961,7961,4.063,8093,4.382,8169,3.961,8334,5.56,8513,3.647,9267,3.008,9302,3.961,9363,4.65,10202,4.382,10384,4.473,10896,3.961,11188,3.647,11270,3.961,11346,3.396,11366,3.008,11491,4.382,11503,5.587,11506,4.382,11511,5.05,11933,4.382,11940,4.382,11941,5.587,11952,4.523,11957,6.691,11964,4.382,11965,4.382,11968,4.382,11969,4.382,12014,5.587,13524,4.382,13699,4.382,13862,3.647,13978,3.961,13985,4.473,13994,3.008,14300,3.961,14304,5.05,14367,3.647,14368,3.647,14369,3.647,14371,5.022,14372,5.022,14373,5.022,14374,5.022,14375,5.022,14376,5.022,14377,5.022,14378,5.022,14379,5.022,14380,5.022,14381,5.022,14382,5.022,14383,5.022,14384,5.022,14385,7.048,14386,5.022,14387,5.022,14388,5.022,14389,5.022,14390,5.022,14391,4.382,14392,4.382,14393,6.402,14394,6.402,14395,5.022,14396,6.402,14397,6.402,14398,6.402,14399,5.022,14400,5.587,14401,5.022,14402,6.402,14403,5.022,14404,3.647,14405,5.022,14406,5.022,14407,5.022,14408,5.022,14409,4.382,14410,7.667,14411,5.022,14412,5.022,14413,5.022,14414,5.022,14415,5.587,14416,5.022,14417,5.022,14418,5.022,14419,5.022,14420,5.022,14421,6.402,14422,4.382,14423,5.022,14424,6.402,14425,5.022,14426,5.022,14427,5.022,14428,5.022,14429,5.022,14430,4.65,14431,5.022,14432,6.402,14433,5.022,14434,5.022,14435,5.022,14436,5.022,14437,5.022,14438,5.022,14439,5.022,14440,5.022,14441,5.022,14442,5.022]],["t/67",[340,1.601,14443,4.129]],["b/67",[11,1.087,19,1.543,20,1.727,34,2.221,35,0.433,36,1.53,37,0.632,38,1.415,44,1.615,48,0.795,49,1.95,53,1.017,54,0.418,66,1.145,67,0.335,68,2.311,78,1.241,102,2.309,104,0.917,105,0.597,124,0.122,130,1.986,131,2.221,177,0.993,182,1.369,206,1.511,223,3.371,231,1.986,232,0.386,244,0.495,261,2.218,269,0.373,303,1.864,315,2.479,316,0.795,320,0.632,321,0.95,335,1.325,340,2.572,341,0.486,353,0.95,354,0.983,355,1.462,365,0.557,385,1.325,386,0.523,394,1.986,401,0.711,402,0.463,434,1.67,435,1.986,473,0.057,474,0.051,481,0.509,482,4.891,489,0.789,500,0.53,506,0.509,511,2.085,512,0.684,522,0.726,525,1.369,527,1.601,528,1.087,529,0.976,557,2.06,559,1.511,563,0.418,574,0.773,582,0.9,601,1.767,606,0.693,616,0.607,617,0.86,618,0.44,622,0.825,625,0.855,626,0.533,627,0.581,628,0.606,629,0.557,630,0.581,631,0.581,633,0.632,636,2.157,637,0.993,638,0.658,641,0.658,643,0.658,645,0.658,646,0.711,648,0.711,677,0.725,679,2.481,680,1.67,683,0.739,725,2.505,732,0.711,743,3.266,753,1.851,762,2.309,768,2.06,820,3.592,858,1.727,920,2.138,926,1.122,1060,2.221,1066,1.615,1201,2.138,1234,2.309,1237,2.309,1285,2.221,1288,1.986,1363,1.851,1369,1.462,1372,0.713,1374,0.825,1376,1.601,1382,0.632,1383,0.795,1385,0.739,1386,0.886,1395,1.28,1397,1.282,1433,0.888,1436,2.639,1438,3.371,1439,4.106,1440,3.428,1444,0.855,1445,0.917,1448,0.983,1449,0.95,1450,1.384,1451,1.017,1459,1.124,1461,1.124,1464,1.124,1466,1.201,1467,1.241,1468,1.124,1469,1.369,1472,1.325,1475,1.369,1478,1.415,1483,1.462,1485,1.462,1488,1.415,1489,1.511,1492,1.511,1493,1.462,1494,1.562,1498,1.615,1499,1.615,1501,1.615,1502,1.615,1504,1.67,1507,2.868,1509,1.788,1510,1.788,1511,1.788,1512,1.917,1513,1.227,1519,2.309,1528,3.016,1534,1.241,1592,2.868,1674,3.857,1680,1.148,1689,2.138,1885,2.016,1943,0.855,1946,1.511,1966,2.403,2014,3.592,2032,1.986,2033,2.06,2037,2.481,2039,2.06,2040,2.06,2042,2.06,2044,2.06,2045,1.986,2046,2.06,2047,2.06,2050,2.138,2051,2.06,2052,2.221,2056,2.309,2057,2.309,2058,2.309,2060,2.309,2062,2.309,2064,2.138,2067,2.06,2071,2.309,2072,2.309,2074,2.309,2077,2.309,2078,2.403,2079,2.403,2098,2.505,2172,0.057,2465,4.19,2849,1.851,2895,3.592,2908,4.635,2915,2.505,3454,2.138,3641,3.016,3762,2.736,3808,2.505,4178,4.635,4228,2.736,4498,1.917,4810,3.293,4821,2.309,4824,4.332,4830,3.273,4847,3.144,5004,3.001,5006,3.266,5010,2.309,5138,4.817,5140,4.817,5141,3.592,5206,3.016,5223,3.129,5396,4.891,5427,3.181,5497,3.016,5552,3.857,5553,3.857,5557,4.485,5558,3.592,5577,3.181,5579,3.592,5648,6.273,6055,4.635,6085,3.181,6999,4.635,7484,5.976,8235,3.973,8700,4.635,9009,4.19,10065,5.788,10911,4.19,10930,3.857,11113,5.705,11366,3.181,13994,3.973,13995,4.635,14016,6.611,14019,4.635,14021,5.232,14444,5.311,14445,4.635,14446,5.311,14447,5.311,14448,5.311,14449,5.311,14450,5.311,14451,7.575,14452,5.311,14453,5.311,14454,5.311,14455,6.632,14456,5.311,14457,5.311,14458,5.311,14459,5.311,14460,5.311,14461,6.312,14462,5.311,14463,5.311,14464,5.311,14465,5.311,14466,5.311,14467,5.311,14468,5.311,14469,5.311,14470,5.311,14471,5.311,14472,5.311,14473,5.311,14474,5.311,14475,5.311,14476,5.311,14477,5.311,14478,5.311,14479,6.632,14480,5.311,14481,5.311,14482,5.311,14483,5.311,14484,5.311,14485,5.311,14486,5.311,14487,5.311,14488,5.311,14489,5.311,14490,5.311,14491,5.311,14492,5.311,14493,5.311,14494,6.632,14495,6.632,14496,5.311,14497,5.311,14498,5.311,14499,5.311,14500,5.311,14501,5.311,14502,5.311,14503,5.311,14504,5.311,14505,5.311,14506,5.311,14507,5.311,14508,5.311,14509,5.311,14510,5.311,14511,5.311,14512,5.311,14513,5.311,14514,5.311,14515,5.311,14516,5.311,14517,5.311,14518,5.311,14519,5.311,14520,5.311,14521,5.311,14522,5.311,14523,5.311,14524,5.311,14525,3.857]],["t/68",[49,0.68,1943,0.372,1946,0.658,3454,0.931,11362,1.565,14525,1.68]],["b/68",[19,1.574,35,0.428,37,0.676,48,0.852,49,1.672,54,0.626,78,1.742,105,0.545,116,1.729,124,0.122,160,1.205,163,1.85,177,1.036,183,1.329,187,1.348,190,2.439,232,0.357,244,0.517,261,1.618,269,0.4,299,1.788,303,1.783,320,0.676,333,1.631,340,2.206,341,0.633,351,1.244,365,0.596,386,0.545,402,0.603,473,0.061,474,0.053,481,0.715,483,1.052,484,0.761,500,0.5,503,0.676,506,0.545,508,1.85,511,2.175,515,1.642,518,1.628,522,0.622,525,1.466,538,1.982,563,0.545,574,0.545,576,1.419,577,2.378,582,0.904,587,2.103,596,2.359,601,1.843,610,3.007,616,0.633,617,0.887,618,0.574,626,0.694,627,0.622,628,0.649,629,0.596,630,0.622,631,0.622,633,0.676,634,1.8,637,1.036,638,0.704,641,0.704,643,0.704,645,0.704,654,2.497,656,2.801,667,1.195,668,1.672,675,1.565,689,1.427,724,2.411,743,3.407,769,0.883,791,1.565,835,0.852,855,2.127,858,2.25,886,2.052,926,0.962,993,2.052,1066,1.729,1107,1.788,1145,1.873,1258,1.982,1273,2.052,1337,3.229,1348,2.206,1382,0.676,1396,2.127,1397,1.373,1531,1.618,1534,1.329,1621,4.732,1684,2.127,1943,1.249,1946,1.968,1973,2.785,1999,3.821,2172,0.061,2175,1.672,2403,3.609,2426,2.683,2660,1.618,2850,3.841,2909,2.587,3454,2.289,3457,2.472,3641,3.229,4049,6.038,4098,4.486,4262,3.406,4486,4.486,4492,6.77,4497,2.378,4498,2.497,4517,4.13,4568,5.024,4775,4.486,4776,3.229,4777,4.13,4778,4.144,4779,4.963,4781,4.963,4782,4.678,4783,4.486,4786,4.486,4787,4.963,4788,4.13,4789,4.963,4790,4.144,4791,5.458,4792,6.038,4793,4.963,4794,6.507,4795,6.378,4796,4.963,4797,4.963,4798,4.963,4800,5.415,4801,6.507,4802,4.963,4803,5.882,4806,4.963,4807,6.038,4809,6.77,4810,3.241,4811,4.963,4814,4.963,4815,4.963,4816,4.963,4817,4.963,4818,4.963,4824,4.144,4825,4.963,4826,4.963,4827,5.458,4828,4.963,4829,4.486,4830,2.574,4831,4.963,4832,4.486,4833,4.13,4834,3.609,4835,4.963,4836,4.13,4837,6.038,4839,6.038,4842,4.963,4843,5.458,4844,4.963,4849,4.486,4850,4.486,4851,4.963,4852,3.609,4976,3.374,4980,3.071,4981,4.13,5557,3.846,6969,3.846,8239,3.846,10822,3.846,10889,4.13,10937,4.486,13543,4.13,13985,3.609,13994,3.406,14404,4.13,14525,4.13,14526,5.687,14527,4.486,14528,5.687,14529,4.963,14530,4.963,14531,4.963,14532,4.963,14533,4.963,14534,5.687,14535,5.687,14536,5.687,14537,5.687,14538,5.687,14539,5.687,14540,5.687,14541,5.687,14542,5.687,14543,4.963]],["t/69",[3454,1.662,14544,4.129]],["b/69",[11,1.078,19,1.426,21,3.153,22,1.042,24,1.592,30,2.51,35,0.428,37,0.626,53,1.008,54,0.568,62,3.711,67,0.36,79,2.867,88,1.35,104,0.909,105,0.595,124,0.122,161,1.816,170,1.16,177,0.789,206,1.876,232,0.396,242,0.847,244,0.538,269,0.434,320,0.626,321,0.941,333,1.152,341,0.659,351,1.152,353,0.941,354,0.974,362,1.152,365,0.691,386,0.52,401,0.705,402,0.575,473,0.071,474,0.05,479,3.56,481,0.745,483,1.22,484,1.011,493,1.042,500,0.525,501,0.883,506,0.504,509,1.712,511,1.655,512,0.678,521,1.173,522,0.851,523,1.402,528,1.078,529,0.678,538,2.51,556,4.153,560,1.443,563,0.568,582,0.899,585,1.712,594,2.843,596,2.005,603,1.12,604,1.179,606,0.724,616,0.603,617,0.784,618,0.626,622,0.818,626,0.661,627,0.722,628,0.753,629,0.691,630,0.722,631,0.722,633,0.784,637,0.789,638,0.652,641,0.652,643,0.652,644,1.449,645,0.652,646,0.705,648,0.705,677,0.661,682,0.892,683,1.002,684,1.011,687,1.655,689,1.008,694,1.712,710,0.847,728,2.483,732,1.011,755,1.548,762,2.289,765,1.834,767,1.16,779,2.119,786,1.7,794,1.078,814,1.498,842,2.989,849,1.601,853,2.011,854,2.712,860,3.745,896,2.119,914,2.655,918,2.655,926,1.002,1043,3.341,1048,3.823,1066,1.601,1090,4.594,1091,1.712,1104,1.772,1107,2.074,1108,2.593,1117,1.601,1119,2.289,1145,1.271,1194,1.834,1213,2.042,1248,2.289,1260,1.834,1263,2.989,1290,1.834,1316,1.712,1334,3.56,1336,2.989,1363,2.298,1372,0.481,1374,0.818,1382,0.626,1383,0.789,1385,0.732,1386,0.878,1395,1.36,1396,2.467,1397,1.823,1433,0.883,1439,2.989,1444,0.847,1445,0.909,1448,0.974,1449,0.941,1450,1.008,1451,1.008,1456,4.323,1459,1.114,1460,4.23,1461,1.114,1464,1.114,1488,1.402,1513,1.397,1587,3.153,1608,2.989,1680,1.207,1727,2.289,1769,4.153,1770,3.56,1771,4.79,1909,2.989,1911,3.56,1943,0.847,2064,2.119,2067,2.042,2172,0.057,2179,2.655,2315,5.203,2322,3.157,2424,3.153,2438,1.313,2471,2.119,2473,3.89,2750,2.593,2909,1.969,2923,4.153,2992,2.093,3038,3.153,3118,4.935,3138,3.153,3144,2.483,3234,2.712,3311,2.593,3313,3.153,3317,3.153,3341,2.758,3454,3.13,3483,2.712,3509,4.461,3511,2.593,3546,4.153,3613,3.823,3634,2.843,3808,3.111,3852,3.56,4182,3.56,4262,3.153,4381,4.594,4410,3.341,4420,3.823,4440,5.756,4453,3.951,4497,2.201,4523,4.594,4773,4.09,4774,3.56,4776,2.989,4877,2.843,4976,2.985,4980,2.843,4990,4.315,5009,3.823,5099,3.823,5134,3.341,5155,4.594,5169,4.153,5170,5.203,5171,4.153,5208,5.203,5209,2.712,5223,3.111,5236,3.56,5427,3.153,5469,3.153,5536,2.593,5610,3.341,5820,3.153,5953,2.989,6091,4.153,6092,3.823,6094,3.823,6095,4.153,6096,4.153,6106,5.203,6740,4.594,6787,3.823,6831,4.153,7085,4.594,7235,4.594,7386,3.823,7747,3.341,7855,4.594,9267,3.153,9294,4.594,10384,3.341,10683,3.56,11270,4.153,11908,5.756,11911,5.203,11912,6.786,11913,5.756,11917,5.756,11925,6.287,11936,4.594,11937,4.594,13728,4.153,13862,5.912,13985,4.572,14046,4.594,14391,4.594,14392,4.594,14422,4.594,14545,5.264,14546,5.264,14547,5.264,14548,5.264,14549,5.264,14550,5.264,14551,5.264,14552,5.264,14553,5.264,14554,5.264,14555,5.264,14556,7.776,14557,6.596,14558,5.264,14559,5.264,14560,6.596,14561,6.596,14562,6.596,14563,6.596,14564,5.264,14565,5.264,14566,5.264,14567,5.264,14568,4.594,14569,5.264,14570,4.594,14571,5.264,14572,5.264,14573,5.264,14574,5.264,14575,5.264,14576,5.264,14577,5.264,14578,5.264,14579,5.264,14580,5.264,14581,3.823,14582,5.264,14583,5.264,14584,5.264,14585,5.264,14586,5.264,14587,5.264,14588,5.264,14589,5.264]],["t/70",[3438,2.998,3483,2.127]],["b/70",[24,1.913,30,2.585,35,0.436,48,0.842,54,0.585,66,1.187,67,0.328,82,1.548,88,1.582,89,2.997,101,2.264,105,0.585,115,1.228,124,0.121,157,3.369,160,1.152,177,0.842,187,1.237,206,1.955,232,0.407,244,0.42,269,0.408,316,1.029,317,1.029,333,1.623,340,2.665,341,0.628,365,0.589,376,2.264,386,0.585,402,0.599,459,2.181,473,0.06,474,0.052,475,2.665,480,2.181,483,1.041,487,2.042,489,0.993,490,1.71,493,1.113,500,0.466,501,0.993,503,0.987,506,0.782,512,0.724,519,1.992,521,1.152,523,1.83,528,1.151,529,0.724,533,2.456,538,1.96,545,2.77,563,0.541,574,0.76,578,2.545,580,2.987,582,0.752,583,2.394,606,0.658,616,0.628,617,0.919,618,0.57,622,1.152,626,0.564,627,0.615,628,0.642,629,0.589,630,0.615,631,0.615,634,1.358,651,1.893,671,2.181,675,1.548,682,1.02,683,1.135,684,1.035,689,1.315,717,2.545,724,1.96,725,2.653,732,1.035,733,3.369,748,1.829,755,2.021,758,2.545,767,0.905,776,1.829,786,1.45,790,2.181,794,1.519,812,2.897,814,1.6,823,4.084,828,1.96,833,2.445,848,3.54,853,1.83,855,2.89,865,2.987,878,3.803,885,1.768,886,2.03,907,3.369,910,2.445,939,4.908,940,3.109,1069,1.829,1092,2.181,1100,3.193,1105,2.351,1110,3.358,1123,2.897,1134,3.369,1173,3.037,1175,3.569,1179,2.897,1186,3.037,1189,3.54,1244,2.103,1251,2.545,1263,3.193,1341,4.084,1351,2.897,1372,0.707,1374,0.874,1376,1.358,1382,0.817,1395,1.194,1433,0.753,1534,1.314,1613,2.103,1615,1.654,1644,4.084,1680,0.992,1686,4.084,1693,2.789,1885,2.089,1894,2.103,1919,4.709,1943,1.194,1946,1.6,1950,3.803,2171,2.545,2172,0.074,2174,2.653,2322,2.351,2661,3.369,2688,3.193,2735,3.384,2756,3.803,2824,4.437,2845,4.084,2909,2.775,2992,1.714,3138,3.369,3270,3.901,3341,3.102,3350,4.99,3440,3.193,3454,2.264,3457,2.445,3478,4.084,3483,3.54,3489,3.569,3498,3.5,3526,2.766,3590,4.116,3634,3.037,3653,3.369,4420,4.084,4424,4.084,4448,3.193,4863,4.084,5210,2.897,5212,2.77,5213,2.77,5214,2.77,5216,4.437,5217,4.437,5220,4.437,5241,3.037,5248,4.084,5432,4.437,5472,3.569,6076,3.569,6531,3.803,6536,4.437,6551,4.084,6627,3.803,6846,4.908,7013,6.067,7854,3.803,8137,5.997,8168,3.803,8211,7.037,8235,3.369,8512,4.908,8513,4.084,9008,4.908,9085,4.437,9267,4.116,9848,4.084,9862,4.084,9865,4.437,9906,4.908,10151,4.908,12576,5.421,13773,4.908,13774,4.908,13775,4.908,14445,4.908,14590,5.624,14591,5.624,14592,5.624,14593,5.624,14594,5.624,14595,5.624,14596,5.624,14597,5.624,14598,5.624,14599,5.624,14600,4.908,14601,5.624,14602,5.624,14603,7.42,14604,5.624,14605,6.871,14606,5.624,14607,5.624,14608,5.624,14609,5.624,14610,5.624,14611,5.624,14612,4.908,14613,5.624,14614,5.624,14615,5.624,14616,5.624,14617,6.871]],["t/71",[682,0.427,5128,2.191,14618,3.452]],["b/71",[19,1.623,22,1.033,25,3.127,35,0.419,36,1.105,37,0.621,47,2.449,54,0.624,67,0.372,79,2.269,104,0.902,105,0.611,116,2.289,117,2.101,124,0.122,161,1.437,164,3.53,177,0.782,187,0.871,232,0.397,242,1.056,244,0.579,266,2.212,269,0.408,292,2.101,316,1.186,317,1.186,320,0.78,321,0.933,335,1.637,341,0.656,353,0.933,354,0.966,362,1.142,365,0.547,373,4.189,385,1.302,386,0.565,401,0.699,402,0.455,460,2.101,467,1.995,473,0.056,474,0.05,483,0.966,484,1.088,487,1.806,488,2.101,489,0.922,500,0.412,503,0.956,506,0.688,509,1.698,511,1.641,512,0.672,518,1.469,522,0.571,528,1.343,529,0.672,533,2.11,560,1.142,563,0.565,573,1.39,574,0.688,577,2.183,582,0.785,603,1.101,604,1.173,606,0.5,611,2.134,616,0.656,617,0.853,618,0.595,626,0.523,627,0.571,628,0.749,629,0.547,630,0.571,631,0.571,633,0.621,638,0.646,641,0.646,643,0.646,645,0.646,646,0.699,648,0.699,677,0.72,682,1.048,684,0.699,687,1.641,704,1.884,705,1.641,710,1.212,720,2.964,721,2.071,727,1.953,762,2.269,769,0.811,776,1.698,780,1.754,785,2.454,786,1.346,787,3.726,794,1.541,799,2.269,809,1.757,828,2.286,835,0.782,836,1.884,853,2.14,855,1.953,858,2.134,872,4.164,885,2.367,904,3.313,914,2.101,945,4.765,961,2.571,1050,2.025,1053,2.571,1066,1.587,1069,2.449,1094,2.368,1110,2.362,1162,1.39,1188,3.095,1211,2.969,1212,3.127,1213,2.025,1251,2.362,1254,4.118,1279,2.101,1354,2.689,1362,1.485,1369,1.437,1372,0.6,1376,1.26,1378,1.698,1379,1.884,1382,0.621,1383,0.782,1385,0.726,1386,0.871,1395,1.329,1433,0.699,1444,0.84,1445,0.902,1448,0.966,1449,0.933,1450,0.999,1472,1.302,1475,1.346,1478,1.39,1513,1.465,1516,2.109,1542,4.437,1596,2.964,1598,3.03,1615,1.535,1652,2.269,1680,1.184,1684,2.684,1689,3.03,1760,2.368,1965,2.964,1967,3.095,1971,3.247,1973,2.101,2098,2.462,2171,2.362,2172,0.056,2175,2.465,2189,1.953,2456,4.556,2576,2.462,2665,2.735,2823,3.313,2900,4.853,2979,2.689,2992,2.06,3001,3.127,3154,3.53,3184,2.025,3193,3.127,3234,2.689,3269,2.964,3283,3.313,3313,3.127,3498,3.095,3621,2.571,4497,2.183,4824,3.127,4877,2.819,5070,3.899,5128,5.158,5129,5.902,5133,2.269,5267,3.313,5472,4.164,5728,3.127,6501,4.556,6859,4.118,7222,6.262,8250,5.726,8414,4.118,8538,4.118,8606,5.726,8610,6.909,8944,5.176,9932,3.791,10040,6.262,10171,3.791,10310,7.093,10326,6.468,10615,4.437,10822,3.53,10836,6.77,11493,5.176,11825,3.791,11871,5.726,11911,4.118,11930,4.118,11931,4.118,14600,5.726,14619,5.22,14620,6.561,14621,7.176,14622,7.757,14623,6.561,14624,5.22,14625,5.22,14626,5.22,14627,7.757,14628,5.22,14629,6.561,14630,5.22,14631,5.22,14632,5.22,14633,5.22,14634,5.22,14635,5.22,14636,5.22,14637,5.22,14638,5.22,14639,5.22,14640,5.22,14641,5.22,14642,5.22,14643,5.22,14644,5.22,14645,5.22,14646,6.561,14647,5.22,14648,5.22,14649,5.22,14650,5.22,14651,5.22,14652,5.22,14653,5.22,14654,5.22,14655,5.22,14656,5.22,14657,5.22,14658,6.561,14659,5.22,14660,5.22,14661,5.22,14662,5.22,14663,5.22,14664,5.22,14665,5.22,14666,5.22,14667,5.22,14668,5.22,14669,5.22,14670,5.22,14671,5.22,14672,5.22,14673,5.22,14674,5.22,14675,6.561,14676,7.176,14677,5.22,14678,5.22,14679,5.22,14680,5.22,14681,5.22,14682,5.22,14683,6.561,14684,6.561,14685,5.22,14686,5.22,14687,5.22,14688,5.22,14689,5.22,14690,5.22,14691,5.22,14692,5.22,14693,5.22,14694,5.22,14695,5.22,14696,5.22,14697,5.22,14698,3.791]],["t/72",[14699,5.135]],["b/72",[11,0.958,20,1.99,22,1.211,24,1.477,30,1.632,35,0.435,37,0.728,48,0.917,53,0.896,54,0.591,59,1.289,62,4.141,66,1.354,67,0.347,69,2.209,79,2.66,88,0.958,99,2.06,104,0.809,105,0.606,110,3.401,115,1.094,118,2.972,124,0.122,161,1.684,162,1.541,163,1.99,175,2.206,176,1.751,177,0.917,183,1.094,187,1.021,190,2.464,195,1.577,196,1.69,197,2.412,200,2.805,202,2.805,228,2.412,232,0.393,242,1.097,244,0.54,253,2.972,263,3.401,265,5.917,269,0.409,292,1.885,303,1.757,304,3.152,316,0.917,317,1.021,320,0.728,321,0.837,333,1.491,341,0.623,351,1.339,353,0.837,354,0.866,362,1.024,365,0.641,386,0.591,397,2.306,401,0.819,402,0.594,457,1.523,459,1.816,460,1.885,468,1.377,473,0.073,474,0.047,480,2.644,481,0.777,483,1.337,484,0.627,489,0.892,490,1.424,493,0.927,500,0.522,501,0.627,503,0.557,506,0.693,509,1.523,512,0.878,514,1.35,515,0.991,518,0.958,519,1.207,521,1.123,522,0.67,527,1.477,529,0.603,533,2.126,543,1.424,544,2.529,547,2.036,550,2.306,551,2.209,553,1.523,557,2.374,563,0.537,574,0.737,576,1.526,577,1.958,593,3.167,596,1.86,602,2.209,603,1.043,604,1.292,606,0.693,611,1.523,616,0.686,617,0.728,618,0.565,622,0.95,625,1.097,626,0.614,627,0.67,628,0.698,629,0.641,630,0.67,631,0.67,633,0.728,637,1.083,638,0.758,641,0.758,643,0.758,645,0.758,646,0.819,648,0.819,649,1.69,651,1.576,656,3.357,671,1.816,677,0.614,679,2.289,680,1.472,682,0.97,683,0.948,684,1.004,687,1.472,689,1.436,694,1.99,699,2.659,705,1.472,706,2.659,710,0.985,712,3.305,713,2.209,715,1.247,720,2.659,721,1.207,723,2.463,728,2.887,732,0.913,748,1.523,758,2.119,759,1.99,762,2.036,767,0.985,768,2.644,769,0.727,776,1.99,777,1.69,780,1.059,791,1.684,802,1.885,814,1.332,835,1.174,847,3.271,853,1.816,865,2.036,874,4.086,886,1.69,895,3.085,905,2.306,910,2.036,916,2.209,926,1.005,993,2.209,1018,2.66,1042,3.305,1057,3.694,1066,1.424,1067,2.805,1091,1.523,1092,2.644,1104,1.576,1108,2.306,1117,2.073,1119,2.963,1123,2.412,1144,2.805,1145,1.477,1162,2.049,1173,2.529,1174,2.769,1178,4.61,1180,1.751,1194,2.132,1201,1.885,1245,3.167,1250,2.805,1251,2.119,1259,1.958,1261,2.769,1262,2.769,1263,2.659,1273,1.289,1286,3.167,1316,1.99,1317,2.659,1362,1.939,1363,2.375,1372,0.661,1374,0.95,1382,0.728,1383,0.917,1385,0.851,1386,1.021,1395,1.207,1397,1.477,1433,0.627,1444,0.754,1445,0.809,1448,0.866,1449,0.837,1450,0.896,1451,0.896,1459,0.991,1461,0.991,1464,0.991,1466,1.059,1467,1.094,1468,0.991,1513,1.423,1516,1.247,1517,2.209,1524,2.374,1531,1.332,1543,2.412,1548,4.974,1595,1.958,1611,3.694,1616,4.105,1680,1.044,1687,3.401,1689,2.463,1693,2.609,1760,2.209,1833,2.972,1885,1.86,1894,2.704,1913,3.56,1928,2.805,1943,0.754,1967,2.209,1971,2.769,1973,2.744,2167,4.086,2172,0.073,2174,2.209,2175,1.377,2179,2.744,2189,2.55,2322,1.958,2431,2.463,2432,2.887,2438,1.526,2471,1.885,2474,2.805,2518,3.394,2643,3.167,2660,1.741,2750,2.306,2849,2.132,2909,2.704,2916,3.884,2918,3.401,2991,2.519,3024,2.374,3068,2.412,3086,2.209,3118,2.972,3138,3.665,3139,2.659,3144,2.209,3184,1.816,3234,3.152,3311,2.306,3317,2.805,3341,1.958,3372,3.167,3394,2.805,3449,2.529,3454,1.885,3478,3.401,3479,2.306,3483,2.412,3526,1.885,3573,3.401,3575,3.167,3581,4.086,3598,4.61,3736,3.401,3762,2.412,3808,2.209,3852,4.138,3882,3.694,3909,3.694,3961,4.828,4182,5.376,4228,2.412,4258,4.086,4259,4.086,4262,3.665,4275,4.086,4290,2.529,4309,4.086,4342,2.529,4427,3.152,4445,3.167,4448,4.259,4482,4.086,4498,1.69,4513,2.529,4539,3.871,4596,5.341,4653,3.305,4776,3.475,4788,4.444,4847,2.66,4993,4.828,5093,3.871,5124,3.152,5209,2.412,5223,3.216,5227,2.659,5269,3.694,5280,4.086,5281,4.086,5469,2.805,5594,2.805,5773,4.086,5822,3.401,5847,6.309,5848,6.309,5953,4.368,6973,4.444,6976,4.444,6981,4.086,7120,5.341,7192,4.588,7321,3.401,7813,4.086,8031,4.086,8127,3.167,8168,3.167,9267,3.665,9745,4.086,9752,3.694,9794,3.694,9822,3.694,9862,3.401,10206,4.444,10237,3.694,10683,3.167,10968,2.972,11385,3.401,11915,3.694,11916,5.588,11973,4.086,13728,3.694,13977,4.086,14301,3.401,14341,4.086,14359,4.828,14361,4.086,14700,4.682,14701,6.817,14702,4.682,14703,4.682,14704,4.682,14705,4.682,14706,4.682,14707,4.682,14708,4.682,14709,4.682,14710,4.682,14711,4.682,14712,4.682,14713,4.682,14714,6.12,14715,4.682,14716,4.682,14717,4.682,14718,4.682,14719,4.682,14720,4.682,14721,4.682,14722,4.086,14723,4.682,14724,4.682,14725,4.682,14726,6.12,14727,4.682,14728,4.682,14729,4.682,14730,4.682,14731,4.682,14732,4.682,14733,4.682,14734,4.682,14735,4.682,14736,4.682,14737,4.682,14738,4.682,14739,4.682,14740,4.682,14741,4.682,14742,6.817,14743,6.817,14744,6.12,14745,6.12,14746,4.682,14747,4.682,14748,6.12,14749,6.12,14750,6.12,14751,4.682,14752,4.682,14753,6.12,14754,4.682,14755,6.12,14756,4.682,14757,4.086,14758,4.682,14759,4.682,14760,4.682,14761,4.682,14762,4.682,14763,4.682,14764,4.682,14765,4.682,14766,4.682,14767,4.682,14768,4.682,14769,4.682,14770,4.682,14771,4.682,14772,4.682,14773,4.682,14774,4.682,14775,4.682,14776,4.682,14777,4.682,14778,4.682,14779,6.12,14780,4.682,14781,4.682,14782,6.817,14783,4.682,14784,4.682,14785,4.682,14786,4.682,14787,4.682,14788,4.682,14789,4.682,14790,4.682,14791,4.682,14792,4.682,14793,4.682,14794,4.682,14795,4.682,14796,4.682,14797,4.682,14798,4.682,14799,4.682,14800,4.682,14801,4.682,14802,4.682,14803,4.682,14804,4.682,14805,4.682]],["t/73",[48,0.347,298,0.897,299,0.727,349,1.14,8262,1.468,11362,1.565]],["b/73",[19,1.466,22,0.989,26,1.812,27,1.681,29,2.356,34,2.089,35,0.415,36,1.764,37,0.759,38,1.33,48,1.053,53,0.956,54,0.503,59,1.756,66,1.214,67,0.311,82,1.756,104,0.863,105,0.503,124,0.122,130,1.868,131,2.089,170,0.804,176,1.868,177,0.956,183,1.167,231,1.868,232,0.305,242,0.804,244,0.525,246,2.992,269,0.257,298,2.727,299,2.329,315,2.252,320,0.594,321,0.893,335,1.246,340,1.937,341,0.457,349,3.919,353,0.893,354,0.924,355,1.375,365,0.524,372,1.288,385,1.246,386,0.503,401,0.669,402,0.435,434,1.571,435,1.868,473,0.054,474,0.049,481,0.674,484,0.854,490,2.137,492,3.941,493,1.392,500,0.528,506,0.479,511,2.329,512,0.643,514,0.989,522,0.547,523,1.873,525,1.288,528,1.023,529,0.643,543,2.252,559,1.421,560,1.093,562,3.378,563,0.503,574,0.772,576,1.592,582,0.811,587,1.94,601,1.699,603,0.695,604,0.893,606,0.674,616,0.457,618,0.414,622,0.991,625,0.804,626,0.501,627,0.547,628,0.802,629,0.524,630,0.547,631,0.547,633,0.594,637,0.956,638,0.618,641,0.618,643,0.618,644,1.375,645,0.79,646,0.669,648,0.669,654,2.303,656,3.142,675,1.375,677,0.501,678,3.628,680,1.571,681,2.771,682,0.79,683,0.695,685,1.469,689,0.956,753,2.667,755,1.469,773,1.94,786,1.645,790,1.937,812,2.573,830,3.446,835,1.192,847,3.182,905,2.46,906,2.356,910,2.172,926,1.03,940,2.261,993,1.803,1011,3.17,1063,3.17,1087,2.261,1117,1.519,1162,1.33,1192,3.628,1234,2.172,1237,2.172,1285,2.668,1288,1.868,1325,2.011,1335,3.17,1362,2.177,1363,2.223,1369,1.375,1372,0.457,1376,1.788,1382,0.594,1383,0.748,1385,0.695,1386,0.833,1395,1.26,1397,1.206,1436,2.807,1437,3.125,1440,2.261,1441,2.356,1444,0.804,1445,0.863,1448,0.924,1449,0.893,1450,0.956,1451,0.956,1459,1.057,1461,1.057,1464,1.057,1466,1.129,1467,1.167,1468,1.35,1469,1.288,1472,1.246,1475,1.288,1478,1.33,1483,1.375,1485,1.375,1488,1.33,1489,1.421,1492,1.421,1493,1.375,1494,1.469,1498,1.519,1499,1.519,1501,1.519,1502,1.519,1504,1.571,1509,1.681,1510,1.681,1511,1.681,1512,1.803,1513,1.181,1595,2.089,1598,2.011,1615,1.469,1680,1.13,1843,2.011,1853,2.908,1885,1.519,1928,2.992,2032,1.868,2033,1.937,2037,1.868,2039,1.937,2040,1.937,2042,1.937,2044,1.937,2045,1.868,2046,1.937,2047,1.937,2050,2.011,2051,1.937,2052,2.089,2056,2.172,2057,2.172,2058,2.172,2060,2.172,2062,2.172,2064,2.011,2067,1.937,2071,2.172,2072,2.172,2074,2.172,2077,2.172,2078,2.261,2079,2.261,2081,2.356,2084,2.356,2085,2.356,2086,2.356,2087,2.356,2172,0.054,2261,3.056,2305,2.836,2306,2.992,2307,1.937,2403,3.17,2459,4.429,2544,2.261,2572,3.378,2676,2.089,2850,2.573,2910,3.01,2915,3.01,2916,3.17,2923,3.941,2992,1.953,3085,3.941,3087,2.992,3267,4.208,3400,5.569,3511,2.46,3518,3.941,3567,3.868,3927,5.034,4019,3.378,4023,4.701,4024,5.38,4248,5.38,4448,2.836,4451,3.941,4795,5.546,4918,3.628,4999,4.36,5108,2.475,5211,2.261,5259,3.628,5464,3.941,5724,3.941,5856,3.17,6040,2.573,6076,3.17,7272,3.941,8247,4.36,8262,3.17,8642,5.034,9344,4.049,9345,3.17,9379,4.211,10265,3.628,10896,6.175,11365,4.36,11366,4.766,11498,6.465,11558,3.941,11571,6.136,11642,4.36,11643,4.36,11723,5.569,11875,4.36,12397,5.034,13607,4.36,14806,6.136,14807,4.995,14808,6.381,14809,4.995,14810,4.995,14811,4.995,14812,4.995,14813,4.995,14814,4.995,14815,4.995,14816,4.995,14817,4.995,14818,7.408,14819,4.995,14820,4.995,14821,4.995,14822,6.381,14823,4.995,14824,7.957,14825,4.995,14826,4.995,14827,4.995,14828,4.995,14829,4.995,14830,4.995,14831,4.995,14832,4.995,14833,6.381,14834,6.381,14835,4.995,14836,4.995,14837,4.995,14838,4.995,14839,4.995,14840,4.995,14841,4.995,14842,4.995,14843,4.995,14844,4.995,14845,4.995,14846,4.995,14847,4.995,14848,4.995,14849,4.995,14850,4.995,14851,4.995,14852,4.995,14853,6.381,14854,4.995,14855,4.995,14856,4.995,14857,4.995,14858,6.381,14859,7.031,14860,7.031,14861,4.995,14862,6.381,14863,4.995,14864,4.995,14865,4.995,14866,4.995,14867,6.381,14868,4.995,14869,4.995,14870,4.995,14871,4.995,14872,4.995,14873,4.995,14874,4.995,14875,4.995,14876,4.995,14877,7.031,14878,4.995,14879,7.408,14880,4.995,14881,4.995,14882,6.381,14883,6.381,14884,4.995,14885,4.995,14886,4.995,14887,4.995,14888,4.995,14889,4.995]],["t/74",[26,0.67,298,1.008,299,0.817,1843,1.046,11362,1.758]],["b/74",[11,1.013,19,1.546,26,2.073,34,2.069,35,0.424,36,1.702,37,0.588,38,1.318,48,0.95,53,0.947,54,0.582,62,2.549,67,0.356,68,2.721,79,2.757,104,0.855,105,0.39,124,0.122,130,1.851,131,2.069,159,2.151,160,1.213,162,1.119,177,0.95,182,1.804,190,2.321,231,1.851,232,0.38,233,2.334,269,0.393,298,2.715,299,2.321,320,0.832,321,0.885,335,1.234,338,3.903,339,3.903,340,2.46,341,0.453,349,2.437,351,1.387,353,0.885,354,0.915,355,1.362,365,0.519,385,1.234,386,0.582,401,0.662,402,0.431,434,1.556,435,1.851,468,1.455,473,0.068,474,0.048,481,0.707,483,1.173,500,0.537,503,0.832,506,0.474,511,2.201,512,0.637,515,1.481,521,0.769,522,0.541,527,1.194,533,1.455,536,2.334,543,2.128,544,2.672,557,1.919,559,1.408,560,1.082,563,0.39,570,3.14,574,0.761,582,0.889,587,2.32,601,2.033,603,0.688,604,0.885,606,0.608,616,0.453,617,0.956,618,0.41,622,0.769,625,0.797,626,0.496,627,0.541,628,0.565,629,0.519,630,0.541,631,0.694,633,0.588,634,1.69,637,1.17,638,0.613,641,0.867,643,0.867,644,1.746,645,0.613,646,0.662,648,0.662,667,1.209,668,2.171,677,0.496,679,1.851,680,1.556,681,1.851,682,0.613,683,0.973,684,0.662,724,1.724,728,2.334,732,0.849,753,2.659,760,1.851,769,0.769,773,2.244,821,3.346,828,2.21,833,2.757,835,1.189,885,2.201,926,1.129,993,1.786,1008,3.594,1021,3.14,1058,2.151,1066,1.504,1196,1.665,1234,2.151,1237,2.151,1273,1.362,1288,1.851,1316,1.609,1362,1.991,1363,1.724,1364,2.151,1369,1.746,1372,0.58,1374,0.769,1376,1.531,1378,1.609,1382,0.588,1383,0.741,1385,0.688,1386,0.825,1395,1.257,1396,2.372,1433,0.662,1444,0.797,1445,0.855,1448,0.915,1449,0.885,1450,0.947,1451,0.947,1459,1.047,1461,1.047,1464,1.047,1466,1.119,1467,1.482,1468,1.342,1469,1.275,1472,1.234,1475,1.275,1478,1.318,1483,1.362,1485,1.362,1488,1.318,1489,1.408,1492,1.408,1493,1.362,1494,1.455,1498,1.504,1499,1.504,1501,1.504,1502,1.504,1504,1.556,1505,2.151,1507,2.672,1508,3.903,1509,1.665,1510,1.665,1511,1.665,1512,1.786,1513,1.445,1514,2.334,1515,2.549,1632,3.594,1651,3.346,1680,1.146,1760,2.289,1843,2.971,1853,2.931,1885,1.928,1943,0.797,1962,2.964,1966,2.239,2032,1.851,2033,1.919,2037,1.851,2039,1.919,2040,1.919,2042,1.919,2044,1.919,2045,1.851,2046,1.919,2047,1.919,2050,1.992,2051,1.919,2052,2.069,2056,2.151,2057,2.151,2058,2.151,2060,2.151,2062,2.151,2064,1.992,2067,1.919,2071,2.151,2072,2.151,2074,2.151,2077,2.151,2078,2.239,2079,2.239,2081,2.334,2084,2.334,2085,2.334,2086,2.334,2087,2.334,2088,2.437,2092,2.437,2093,2.437,2094,2.334,2096,2.437,2099,2.334,2100,2.437,2172,0.053,2613,3.14,2676,2.069,2806,2.715,2910,2.992,2915,3.302,2992,1.948,3069,1.609,3144,2.334,3203,5.003,3267,3.447,3372,3.346,3394,2.964,3425,3.425,3567,3.302,3885,4.442,4084,4.025,4290,2.672,4760,3.903,4810,2.757,4821,2.151,4830,2.239,4909,3.346,4976,2.87,5003,3.594,5004,2.87,5005,3.594,5010,3.043,5108,2.863,5223,2.992,5448,3.14,5540,3.903,5806,3.903,6273,4.318,6657,3.903,6996,4.318,7148,2.809,8262,3.14,8423,4.318,8980,3.594,9012,4.318,9025,5.535,9356,3.594,9363,3.594,10398,3.594,10617,5.003,10889,4.606,11204,3.594,11225,5.535,11226,5.535,11238,3.594,11366,2.964,11489,3.903,11519,4.318,11595,4.318,12292,4.318,12397,3.903,13987,4.318,13994,3.799,14021,5.823,14140,3.903,14141,3.903,14142,3.903,14143,3.903,14202,4.318,14430,4.606,14461,5.535,14543,4.318,14581,3.594,14806,4.318,14890,4.948,14891,4.948,14892,4.948,14893,4.948,14894,4.948,14895,6.342,14896,4.948,14897,4.948,14898,6.342,14899,4.948,14900,7.382,14901,4.948,14902,6.342,14903,4.948,14904,4.948,14905,4.948,14906,6.342,14907,4.948,14908,6.342,14909,6.342,14910,4.948,14911,4.948,14912,4.948,14913,6.999,14914,6.999,14915,6.999,14916,4.948,14917,4.948,14918,4.948,14919,4.948,14920,4.948,14921,4.948,14922,4.948,14923,4.948,14924,4.948,14925,6.342,14926,6.342,14927,6.999,14928,4.948,14929,4.948,14930,4.948,14931,4.948,14932,4.948,14933,4.948,14934,4.948,14935,6.342,14936,4.948,14937,4.948,14938,4.948,14939,4.948,14940,4.948,14941,4.948,14942,4.948,14943,4.948,14944,4.948,14945,7.632,14946,5.535,14947,4.948,14948,4.948,14949,4.948,14950,4.948,14951,4.948,14952,4.948,14953,4.948,14954,4.948,14955,4.948,14956,4.318,14957,4.948,14958,4.948,14959,4.948,14960,4.948,14961,4.948,14962,4.948,14963,4.948,14964,4.948,14965,4.948,14966,4.948,14967,4.948,14968,4.948,14969,4.948,14970,4.948,14971,4.948,14972,4.948,14973,4.948,14974,4.948,14975,4.948,14976,4.948,14977,4.948,14978,4.948,14979,4.948,14980,4.948]],["t/75",[49,1.214,14981,4.129]],["b/75",[20,1.737,24,1.289,29,3.139,30,2.319,35,0.402,36,1.408,37,0.635,38,1.422,48,0.997,49,2.232,53,1.022,54,0.598,66,0.922,67,0.294,78,1.555,88,1.554,99,1.798,104,0.922,105,0.524,124,0.122,160,0.83,170,0.86,187,1.328,232,0.318,242,0.86,244,0.603,269,0.343,303,2.181,316,0.8,317,0.8,320,0.635,321,0.955,333,1.168,335,1.332,340,2.071,341,0.488,349,2.63,353,0.955,354,1.341,355,1.47,362,1.586,365,0.56,372,1.869,385,1.332,386,0.524,391,2.132,401,0.715,402,0.466,434,1.679,469,2.322,473,0.057,474,0.051,477,2.519,481,0.695,484,0.891,487,1.47,489,0.791,493,1.057,500,0.533,501,0.971,503,0.862,506,0.695,507,2.233,508,1.737,510,3.389,511,2.28,514,1.318,515,1.606,516,4.661,521,1.034,522,0.728,528,1.093,529,0.857,541,2.63,543,1.624,560,1.586,563,0.421,573,1.773,574,0.638,582,0.923,587,2.374,601,2.08,603,1.008,606,0.638,611,1.737,616,0.488,617,0.635,618,0.443,622,1.034,625,1.071,626,0.536,627,0.584,628,0.76,629,0.56,630,0.584,631,0.584,633,0.635,636,2.358,637,1.086,638,0.661,641,0.661,643,0.661,645,0.661,646,0.715,648,0.715,650,2.322,651,1.798,677,0.536,679,2.839,682,0.661,686,3.879,687,1.679,716,5.783,732,0.971,748,1.737,750,4.213,751,2.233,752,4.213,759,2.165,762,2.893,765,1.861,769,0.83,783,5.25,784,3.595,794,1.362,847,2.417,849,1.624,896,2.15,918,2.15,1024,3.281,1053,3.278,1066,1.624,1244,1.998,1248,2.322,1262,2.417,1280,4.661,1362,2.342,1372,0.488,1374,0.83,1382,0.635,1383,0.8,1385,0.743,1386,0.891,1395,1.222,1397,1.607,1433,0.715,1444,0.86,1445,0.922,1448,0.988,1449,1.296,1450,1.022,1451,1.022,1459,1.13,1461,1.13,1464,1.13,1466,1.207,1467,1.248,1468,1.13,1469,1.377,1472,1.332,1475,1.377,1478,1.422,1483,1.47,1485,1.47,1488,1.422,1489,1.519,1492,1.519,1493,1.47,1494,1.57,1498,1.624,1499,1.624,1501,1.624,1502,1.624,1504,1.679,1509,1.798,1510,1.798,1511,1.798,1513,1.404,1541,4.213,1652,2.322,1680,1.096,1760,1.927,1894,1.998,1928,3.987,2160,3.612,2172,0.057,2175,1.57,2426,2.519,2661,3.199,2687,3.199,2688,3.032,2991,2.774,3069,2.165,3474,3.199,3479,3.571,3511,2.63,3750,4.834,4342,2.884,4847,2.322,5205,4.661,5209,3.429,5211,3.435,5212,3.278,5213,3.278,5223,2.519,5252,3.879,5259,3.879,5507,4.213,5557,3.612,5615,6.328,6710,2.751,7126,3.879,8168,3.612,8169,4.213,10437,5.808,10498,4.661,10872,4.661,11031,4.661,11227,5.808,11805,5.808,11930,4.213,11931,4.213,13658,5.808,14404,3.879,14568,4.661,14570,4.661,14982,5.341,14983,5.341,14984,5.341,14985,5.341,14986,5.341,14987,5.341,14988,5.341,14989,7.251,14990,5.341,14991,5.341,14992,5.341,14993,5.341,14994,7.251,14995,5.341,14996,5.341,14997,5.341,14998,5.341,14999,5.341,15000,5.341,15001,5.341,15002,5.341,15003,6.656,15004,5.341,15005,5.341,15006,6.656,15007,6.656,15008,5.341,15009,5.341,15010,5.341,15011,5.341,15012,5.341,15013,5.341,15014,5.341,15015,5.341,15016,5.341,15017,5.341,15018,5.341,15019,5.341,15020,5.341,15021,5.341,15022,5.341,15023,6.656,15024,5.341,15025,6.656,15026,5.341,15027,5.341,15028,5.341,15029,5.341,15030,5.341,15031,5.341,15032,7.59,15033,6.656,15034,5.341,15035,5.341,15036,5.341,15037,5.341,15038,5.341,15039,5.341,15040,5.341,15041,5.341,15042,5.341,15043,5.341,15044,5.341,15045,5.341,15046,5.341,15047,5.341,15048,6.656,15049,6.656,15050,5.341,15051,5.341,15052,5.341,15053,5.341,15054,5.341,15055,5.341,15056,5.341,15057,5.341,15058,5.341,15059,5.341,15060,5.341,15061,5.341,15062,5.341,15063,5.341,15064,5.341,15065,5.341,15066,5.341,15067,5.341,15068,5.341,15069,5.341,15070,7.59,15071,5.341,15072,5.341,15073,5.341,15074,5.341]],["t/76",[3489,2.62,15075,4.129]],["b/76",[11,1.452,19,1.317,20,1.45,22,1.461,24,1.992,26,1.149,30,2.065,31,2.138,35,0.438,37,0.53,47,1.45,48,0.997,54,0.61,61,2.576,62,3.428,66,1.41,67,0.352,68,1.554,78,1.555,88,1.63,89,2.298,97,1.927,98,2.385,105,0.61,115,1.19,118,2.83,123,2.408,124,0.122,157,2.671,159,1.938,160,1.147,162,1.504,170,1.188,173,2.83,175,1.957,176,1.668,177,1.137,183,1.725,190,1.402,232,0.385,242,0.718,244,0.588,245,3.238,269,0.391,292,1.795,316,1.16,317,1.16,320,0.705,333,1.456,341,0.542,351,1.296,362,1.456,365,0.467,386,0.524,401,0.891,402,0.389,457,1.45,458,2.671,459,2.581,460,2.854,468,1.742,473,0.048,474,0.045,477,2.103,481,0.771,483,1.51,484,0.988,487,1.227,488,1.795,489,0.964,490,2.023,493,0.883,500,0.505,501,1.114,503,0.903,506,0.771,507,1.864,508,1.45,509,2.306,511,1.863,514,1.173,518,1.554,519,1.527,521,1.222,522,0.488,523,1.578,527,1.43,528,1.213,529,0.913,538,1.554,547,1.938,551,1.609,553,1.45,557,2.298,560,1.694,563,0.351,574,0.638,582,0.923,583,1.554,585,1.927,592,2.671,596,1.801,601,1.578,602,2.103,603,1.153,604,1.268,605,4.026,606,0.568,611,1.45,616,0.609,617,0.956,618,0.588,622,0.692,625,0.718,626,0.594,627,0.488,628,0.676,629,0.467,630,0.488,631,0.776,633,0.705,634,1.43,637,1.137,638,0.552,641,0.552,643,0.552,645,0.734,646,0.597,648,0.597,649,1.609,651,1.501,654,1.609,655,3.986,667,1.149,668,1.311,675,1.227,682,0.824,689,1.274,704,1.609,705,2.092,710,0.718,715,2.063,717,2.018,724,1.554,728,2.103,732,0.949,742,3.549,755,1.957,758,2.018,759,1.45,765,2.065,767,1.222,769,1.268,780,1.751,786,1.149,788,3.015,790,1.729,791,1.227,793,2.83,794,0.913,799,1.938,801,3.209,802,1.795,809,1.501,813,2.216,814,1.686,824,4.007,828,1.554,830,2.408,833,2.576,836,2.402,842,3.364,885,1.402,886,1.609,894,2.532,895,2.018,896,2.385,899,2.408,906,2.103,914,2.385,918,2.385,919,1.729,920,1.795,926,1.147,940,3.011,960,3.891,963,2.018,993,2.138,1003,3.517,1024,2.018,1053,2.918,1058,2.893,1064,2.297,1066,1.355,1091,1.45,1092,2.298,1100,4.026,1101,2.489,1110,2.018,1117,1.355,1119,1.938,1123,2.297,1145,1.076,1162,1.187,1179,2.297,1181,3.345,1188,2.103,1194,2.319,1244,1.668,1251,2.018,1254,3.517,1256,3.517,1260,1.554,1277,3.238,1290,1.554,1300,2.83,1320,2.297,1348,2.298,1350,2.671,1351,2.297,1362,1.686,1363,2.471,1372,0.694,1374,0.92,1378,1.45,1379,1.609,1382,0.53,1383,0.668,1384,3.594,1385,0.824,1395,1.188,1396,2.216,1397,1.87,1428,2.572,1433,0.949,1468,0.944,1513,1.473,1524,1.729,1531,2.017,1534,1.555,1538,3.238,1542,3.015,1543,2.297,1545,2.408,1599,2.196,1613,2.489,1615,1.957,1634,3.76,1642,4.007,1680,1.209,1681,2.196,1693,1.609,1760,1.609,1833,2.83,1853,2.138,1894,2.216,1911,4.007,1914,2.83,1916,3.891,1943,1.188,1973,2.679,1999,2.918,2156,2.196,2171,2.681,2172,0.048,2175,1.311,2179,3.055,2189,1.668,2212,3.015,2397,3.139,2431,2.854,2432,3.345,2442,4.303,2457,2.83,2467,4.303,2471,1.795,2473,2.408,2474,2.671,2487,3.779,2660,1.268,2665,1.994,2750,2.196,2764,3.052,2859,2.83,2861,5.25,2863,3.015,2867,6.189,2878,4.833,2909,1.668,2918,3.238,2924,4.007,2929,3.517,2931,3.517,2979,3.052,2992,1.841,3024,2.298,3038,3.549,3068,2.297,3085,3.517,3101,2.408,3184,2.581,3187,3.2,3308,3.015,3311,2.196,3341,2.477,3392,2.297,3449,2.408,3473,3.891,3475,3.052,3483,2.297,3489,2.83,3498,2.103,3575,3.015,3584,3.891,3762,2.297,3768,3.891,3769,3.891,3803,1.864,3824,2.103,3885,4.223,4016,4.223,4096,5.808,4113,3.238,4114,4.674,4117,3.238,4133,5.171,4144,2.671,4145,5.808,4184,2.671,4199,3.891,4341,2.532,4342,2.408,4410,2.83,4445,4.5,4446,4.674,4449,3.83,4497,2.782,4506,2.297,4513,2.408,4517,4.303,4549,3.015,4565,3.891,4616,3.891,4617,3.238,4618,3.238,4619,3.517,4620,3.517,4627,2.196,4780,2.671,4790,2.671,4863,3.238,4877,2.408,4884,3.517,4894,3.364,4946,3.015,5010,1.938,5094,2.671,5095,3.015,5115,4.007,5117,3.891,5124,2.297,5133,2.576,5150,3.015,5185,5.25,5206,2.532,5209,3.428,5211,2.018,5212,3.492,5213,3.492,5227,3.779,5384,3.015,5449,3.011,5521,2.408,5535,4.674,5536,3.277,5618,3.238,5700,4.833,5786,3.517,6085,2.671,6225,3.517,6531,3.015,6627,3.015,6780,3.517,6781,3.238,6785,3.891,6973,3.238,6976,3.238,6978,5.171,7320,3.891,7321,3.238,7338,6.864,7386,3.238,7516,4.303,7951,4.5,8075,3.891,8164,5.171,8300,3.015,9267,3.549,9898,3.891,10206,3.238,10618,3.891,10822,4.007,10955,4.674,11330,3.891,11385,3.238,11399,3.517,11467,3.015,11825,4.833,12035,4.303,12441,4.674,12576,3.517,13543,5.15,13603,3.517,13904,3.891,13905,3.891,13906,3.891,14301,3.238,14400,5.808,14722,3.891,14757,3.891,15076,4.458,15077,5.925,15078,4.458,15079,4.458,15080,5.925,15081,4.458,15082,6.949,15083,4.458,15084,4.458,15085,4.458,15086,4.458,15087,5.925,15088,4.458,15089,3.891,15090,4.458,15091,4.458,15092,4.458,15093,4.458,15094,4.458,15095,4.458,15096,4.458,15097,4.458,15098,4.458,15099,4.458,15100,4.458,15101,4.458,15102,4.458,15103,4.458,15104,4.458,15105,4.458,15106,4.458,15107,4.458,15108,4.458,15109,4.458,15110,4.458,15111,4.458,15112,4.458,15113,4.458,15114,4.458,15115,4.458,15116,4.458,15117,5.925,15118,5.925,15119,4.458,15120,4.458,15121,4.458,15122,4.458,15123,4.458,15124,4.458,15125,4.458,15126,4.458,15127,4.458,15128,4.458,15129,5.925,15130,4.458,15131,4.458,15132,4.458,15133,4.458,15134,4.458,15135,4.458,15136,4.458,15137,4.458,15138,4.458]],["t/77",[124,0.036,1197,1.65,5431,1.476,5604,1.28,15139,2.599]],["b/77",[11,1.301,19,1.688,20,2.067,22,1.547,24,1.199,35,0.422,37,0.756,44,1.509,48,1.171,54,0.552,67,0.346,78,1.638,82,1.367,88,1.705,99,2.139,104,0.857,105,0.552,124,0.122,160,0.987,162,1.122,177,0.744,182,1.28,190,2.204,196,1.792,207,4.298,226,3.357,232,0.335,242,1.295,244,0.552,269,0.381,316,0.744,317,0.744,320,0.756,321,0.888,340,2.465,341,0.641,353,0.888,360,3.151,362,1.39,365,0.735,386,0.552,401,0.851,402,0.611,405,4.333,408,4.126,409,5.043,456,2.681,459,1.926,460,2.558,473,0.053,474,0.048,480,1.926,481,0.476,483,1.176,484,1.124,489,0.59,493,0.983,500,0.529,506,0.476,508,1.615,509,1.615,512,0.952,515,1.051,518,1.016,522,0.767,525,1.638,527,1.199,528,1.016,529,0.639,533,1.46,552,2.681,560,1.39,563,0.552,569,2.342,573,1.322,574,0.761,576,1.238,582,0.695,587,1.509,596,1.509,601,1.322,603,0.884,606,0.732,616,0.641,617,0.834,618,0.581,626,0.741,627,0.767,628,0.8,629,0.735,630,0.836,631,0.836,633,0.834,634,1.534,636,2.067,637,0.952,638,0.787,641,0.787,643,0.787,645,0.787,646,0.851,648,0.851,677,0.637,682,0.915,683,0.884,685,1.869,687,1.561,694,2.067,702,1.998,705,1.561,710,1.19,715,1.693,723,1.998,732,1.023,760,1.857,767,1.023,769,0.771,770,3.048,777,1.792,781,2.247,790,2.465,794,1.016,812,2.558,833,2.763,835,0.952,886,1.792,895,2.247,896,1.998,914,1.998,926,0.975,1018,2.158,1066,1.932,1092,1.926,1104,2.359,1107,1.561,1110,2.247,1147,1.73,1180,1.857,1197,4.034,1263,2.819,1273,1.367,1279,1.998,1285,2.657,1290,1.73,1320,2.558,1347,4.616,1354,2.558,1366,1.998,1369,1.93,1372,0.641,1376,1.784,1382,0.756,1383,0.952,1385,0.884,1386,1.06,1395,1.129,1397,1.534,1433,0.665,1436,1.73,1437,2.719,1440,2.247,1441,2.342,1444,0.799,1445,0.857,1448,0.919,1462,3.609,1497,2.974,1513,1.367,1516,1.322,1534,1.16,1592,2.681,1598,2.822,1634,3.151,1666,2.558,1680,1.173,1861,3.151,1943,1.279,1947,3.606,1966,3.172,2139,2.342,2156,2.445,2172,0.053,2189,3.064,2261,2.158,2424,2.974,2438,1.238,2471,1.998,2473,2.681,2513,2.558,2627,3.357,2660,1.412,2682,2.558,2863,3.357,2876,3.606,2909,2.377,2910,2.342,2949,3.357,2978,3.917,3144,2.342,3221,3.606,3260,3.357,3308,3.357,3311,2.445,3341,2.076,3392,2.558,3479,2.445,3483,2.558,3526,1.998,3567,3.748,3580,3.606,3655,3.151,3762,2.558,3775,2.819,3803,2.076,3871,3.357,4424,3.606,4552,3.606,4627,2.445,4773,2.819,4776,2.819,4780,2.974,4810,3.498,4821,2.763,4976,2.876,4980,2.681,5121,4.616,5122,3.917,5133,2.158,5206,2.819,5212,3.452,5213,3.452,5223,2.998,5227,2.819,5246,2.819,5248,3.606,5303,3.606,5431,4.338,5449,3.172,5520,2.681,5555,3.917,5604,3.763,5728,2.974,5939,2.931,6225,5.831,6533,3.151,6710,3.274,7133,3.917,7186,5.043,7321,3.606,7516,3.606,8166,3.151,8262,3.151,8737,5.091,8782,4.333,8783,3.917,9249,4.333,9932,4.616,10488,3.606,11072,3.357,11159,6.118,11161,6.118,11162,6.821,11166,4.333,11497,5.547,11511,3.917,12035,3.606,13401,4.333,13517,5.547,13756,4.333,13873,3.606,13994,2.974,14300,5.831,14304,5.014,14367,3.606,14368,3.606,14369,3.606,14409,4.333,14527,3.917,15082,4.333,15089,6.118,15140,4.965,15141,4.965,15142,6.356,15143,4.965,15144,7.64,15145,4.965,15146,4.965,15147,6.356,15148,4.965,15149,4.965,15150,4.965,15151,4.965,15152,6.356,15153,4.965,15154,4.965,15155,4.965,15156,4.965,15157,4.965,15158,4.965,15159,7.01,15160,4.965,15161,4.965,15162,4.965,15163,4.965,15164,4.965,15165,7.01,15166,4.965,15167,4.965,15168,4.965,15169,4.965,15170,4.965,15171,4.965,15172,4.965,15173,4.965,15174,4.965,15175,4.965,15176,4.965,15177,4.965,15178,6.356,15179,4.965,15180,4.965,15181,4.965,15182,4.965,15183,4.965,15184,6.356,15185,4.965,15186,4.965,15187,4.965,15188,4.965,15189,4.965,15190,4.965,15191,4.965,15192,4.965,15193,7.01,15194,4.965,15195,4.965,15196,4.965,15197,4.965,15198,4.965,15199,4.965,15200,4.965,15201,4.965,15202,4.965,15203,4.965,15204,4.965,15205,4.965,15206,4.965,15207,4.965,15208,4.965,15209,6.356,15210,4.965,15211,4.965,15212,4.965,15213,4.965,15214,4.965,15215,4.965,15216,4.965,15217,6.356,15218,4.965,15219,4.965,15220,4.965,15221,4.965,15222,4.965,15223,4.965,15224,4.965,15225,4.965,15226,4.965,15227,4.965,15228,4.965,15229,4.965,15230,4.965,15231,4.965,15232,4.965]],["t/78",[162,0.78,299,1.085,15233,3.452]],["b/78",[24,1.495,26,1.596,35,0.398,36,1.722,37,0.736,54,0.574,67,0.322,99,2.084,105,0.488,117,2.493,124,0.121,162,1.646,177,1.09,196,2.235,232,0.348,242,0.997,244,0.544,269,0.319,298,2.402,299,2.509,317,0.928,320,0.736,340,2.999,341,0.566,365,0.649,386,0.488,401,0.829,402,0.54,473,0.066,474,0.055,481,0.593,488,2.493,500,0.511,511,1.947,512,0.798,521,0.962,522,0.678,527,1.495,553,2.014,560,1.355,563,0.488,577,2.589,582,0.873,587,1.883,601,1.649,604,1.107,606,0.741,607,3.345,609,3.05,616,0.566,618,0.514,626,0.621,627,0.678,628,0.707,629,0.649,630,0.678,631,0.678,633,0.736,636,2.368,637,0.928,638,0.957,641,0.767,643,0.767,644,1.705,645,0.767,646,0.829,648,0.829,652,4.498,677,0.621,682,0.767,683,0.861,694,2.014,710,0.997,723,2.493,732,0.829,773,1.883,780,1.4,804,3.19,848,3.19,849,1.883,926,1.132,993,2.627,1107,1.947,1145,1.495,1195,3.93,1261,2.802,1298,4.885,1335,3.93,1362,1.762,1364,3.165,1372,0.566,1373,3.516,1382,0.866,1383,0.928,1385,0.861,1433,0.829,1513,1.347,1598,2.493,1615,1.821,1659,3.516,1760,2.235,1843,2.493,2172,0.066,2750,3.05,2849,2.158,2910,3.647,2915,3.764,3137,3.709,3567,3.647,3746,4.36,3826,4.498,4909,4.188,4942,2.93,5108,2.824,5133,2.692,5459,3.585,6040,3.19,6726,5.405,9379,4.36,10175,4.885,10731,4.188,11185,5.287,11248,5.405,11341,4.885,11342,4.498,11345,4.498,11346,4.188,11366,3.709,11369,5.405,11489,4.885,13873,4.498,14278,5.405,14302,5.405,14581,4.498,15234,6.193,15235,6.193,15236,6.193,15237,6.193,15238,6.193,15239,6.193,15240,6.193,15241,6.193,15242,6.193,15243,6.193,15244,6.193,15245,5.405,15246,7.28,15247,6.193]],["t/79",[4773,2.344,15248,4.129]],["b/79",[19,1.607,22,1.384,24,1.192,29,3.299,31,1.782,35,0.422,37,0.832,53,0.945,54,0.615,59,1.359,67,0.309,78,1.782,96,2.065,104,1.094,105,0.625,117,1.988,124,0.122,170,0.795,174,3.587,175,2.243,177,0.74,182,2.012,183,1.48,187,0.824,190,2.319,232,0.353,244,0.624,261,1.802,266,1.359,269,0.422,276,2.065,304,2.544,315,2.126,316,0.74,320,0.753,321,0.883,333,1.08,340,1.916,341,0.64,351,1.08,353,0.883,354,0.914,365,0.799,373,2.667,377,4.31,386,0.551,401,0.848,402,0.61,468,1.863,473,0.068,474,0.048,481,0.67,482,3.34,483,1.294,484,0.988,488,2.55,489,0.753,500,0.523,506,0.607,508,1.606,512,0.636,514,1.254,519,1.273,521,0.767,522,0.765,525,1.273,526,2.147,527,1.192,529,0.816,533,2.056,547,2.754,552,2.667,560,1.614,563,0.581,570,3.134,574,0.748,576,1.232,577,2.649,582,0.921,587,1.926,601,1.687,603,0.973,604,1.319,606,0.67,610,2.754,611,1.606,616,0.64,617,0.753,618,0.58,622,0.984,625,1.126,626,0.701,627,0.835,628,0.723,629,0.664,630,0.693,631,0.693,633,0.753,637,1.169,638,0.784,641,0.784,643,0.784,645,0.784,646,0.848,648,0.848,677,0.495,679,1.847,680,1.553,681,2.369,682,0.611,689,0.945,710,0.795,732,1.021,753,2.437,755,1.452,765,1.721,768,1.916,773,1.502,776,1.606,779,1.988,794,1.011,808,4.02,816,1.662,828,1.721,849,1.502,853,1.315,863,2.667,885,1.992,910,3.04,926,1.158,963,2.235,993,1.782,1013,3.134,1023,2.804,1035,1.847,1044,2.958,1058,2.147,1091,1.606,1107,1.553,1110,2.235,1145,1.192,1173,2.667,1177,2.544,1180,2.616,1181,2.988,1188,2.33,1213,1.916,1250,2.958,1259,2.065,1261,3.165,1262,2.235,1271,3.134,1279,1.988,1317,3.597,1337,2.804,1348,1.916,1362,1.405,1366,1.553,1369,1.925,1372,0.452,1374,0.984,1378,1.606,1379,1.782,1380,5.528,1382,0.753,1383,0.949,1385,0.881,1386,1.056,1391,2.958,1396,1.847,1397,1.781,1433,0.848,1444,1.02,1445,1.094,1448,0.914,1449,0.883,1450,0.945,1451,0.945,1457,1.847,1513,1.365,1516,1.315,1542,3.34,1592,2.667,1615,1.863,1616,3.597,1647,3.896,1673,2.667,1680,0.914,1689,1.988,1695,2.804,1760,2.286,1894,1.847,1943,1.318,1946,1.802,1971,2.235,2172,0.053,2189,1.847,2403,3.134,2438,1.232,2472,3.134,2475,3.587,2513,2.544,2660,1.802,2688,2.804,2750,2.432,2833,1.782,2849,1.721,2851,3.587,2909,1.847,2912,3.587,2991,2.658,3086,2.33,3144,2.33,3158,3.134,3195,3.34,3441,3.134,3454,1.988,3479,2.432,3483,2.544,3526,1.988,3611,5.079,3613,3.587,4176,3.794,4262,2.958,4432,4.31,4444,3.587,4453,3.794,4498,2.753,4653,2.667,4773,3.971,4774,4.284,4775,3.896,4776,3.971,4777,4.601,4778,2.958,4782,4.284,4783,3.896,4786,3.896,4788,3.587,4810,3.207,4820,4.31,4821,2.147,4822,4.682,4824,4.675,4827,4.997,4829,3.896,4830,3.165,4832,3.896,4847,2.147,4848,4.31,4849,3.896,4853,4.31,4894,2.804,4976,3.165,4980,3.984,4981,4.601,5118,3.34,5133,2.147,5134,3.134,5207,3.896,5241,3.421,5469,2.958,5503,3.896,5520,2.667,5536,2.432,5594,2.958,5598,4.997,5604,3.12,5652,2.804,5953,3.971,6000,4.31,6278,4.997,6969,5.436,7192,3.134,7286,4.31,7747,3.134,8235,2.958,8833,3.587,8942,4.31,9893,4.31,10518,3.896,10615,5.158,10664,3.587,10731,4.284,10811,3.587,10866,4.31,10889,3.587,10930,3.587,10937,3.896,10968,3.134,11072,3.34,11204,4.601,11238,4.601,11344,4.31,11562,4.31,11952,3.971,13543,4.601,13767,4.31,13978,3.896,13985,5.194,13994,2.958,14359,3.896,14367,3.587,14368,3.587,14369,3.587,14404,3.587,14415,5.528,14430,4.601,14527,3.896,14529,4.31,14530,6.438,14531,4.31,14532,4.31,14533,4.31,14581,4.601,14956,4.31,15249,4.939,15250,4.939,15251,4.939,15252,4.939,15253,4.939,15254,4.939,15255,4.939,15256,7.377,15257,6.335,15258,4.939,15259,4.939,15260,4.939,15261,4.939,15262,4.939,15263,4.939,15264,4.939,15265,4.939,15266,4.939,15267,4.939,15268,4.939,15269,4.939,15270,4.939,15271,6.335,15272,4.31,15273,4.939,15274,6.335,15275,6.335,15276,4.939,15277,4.939,15278,4.939,15279,4.939,15280,4.939,15281,4.939,15282,4.939,15283,4.939,15284,4.939,15285,4.939,15286,4.939,15287,6.335,15288,6.993,15289,4.939,15290,4.939,15291,4.939,15292,4.939,15293,4.939,15294,4.939,15295,4.939,15296,6.993,15297,4.939,15298,4.939,15299,4.939,15300,4.939,15301,4.939,15302,4.939,15303,4.939,15304,4.939,15305,4.939,15306,4.939,15307,4.939,15308,4.939,15309,4.939,15310,4.939,15311,4.939,15312,4.939,15313,4.939,15314,4.939,15315,4.939,15316,4.939,15317,4.939,15318,4.939,15319,4.939,15320,4.939,15321,6.335,15322,4.939,15323,4.939,15324,4.939,15325,4.939,15326,4.939,15327,6.335]],["t/80",[160,0.324,299,0.655,538,0.726,667,0.36,3457,0.906,8239,1.41,15328,2.085]],["b/80",[19,1.456,24,1.331,27,1.856,35,0.433,36,1.624,37,0.807,49,1.622,53,1.056,54,0.647,67,0.3,78,1.972,97,2.208,104,0.952,105,0.605,124,0.122,160,1.142,177,0.826,182,1.421,187,1.37,211,7.004,232,0.393,242,1.093,244,0.549,269,0.406,299,2.413,320,0.807,321,0.986,341,0.621,353,0.986,354,1.02,365,0.712,386,0.621,401,0.909,402,0.592,473,0.059,474,0.052,481,0.528,483,1.256,489,0.656,493,1.092,500,0.536,508,2.208,512,0.71,515,1.437,518,1.506,522,0.743,525,1.75,529,0.874,538,1.922,560,1.485,563,0.58,574,0.705,576,1.694,582,0.92,603,1.023,604,1.315,606,0.736,616,0.673,617,0.875,618,0.61,626,0.681,627,0.743,628,0.775,629,0.712,630,0.743,631,0.743,633,0.807,634,1.776,637,1.15,638,0.841,641,0.841,643,0.841,644,2.113,645,0.841,646,0.909,648,0.909,667,1.173,677,0.553,682,0.683,683,0.944,684,1.028,685,1.996,687,1.734,689,1.3,724,1.922,794,1.129,799,2.397,813,2.063,858,1.794,865,2.397,886,1.99,919,2.139,926,1.164,963,2.496,1021,3.5,1036,2.496,1105,2.306,1162,1.959,1172,4.005,1177,3.497,1204,3.5,1258,2.366,1260,1.922,1262,2.496,1366,2.135,1372,0.504,1374,0.857,1382,0.656,1383,0.826,1385,0.767,1386,0.92,1433,0.909,1444,0.888,1445,0.952,1448,1.02,1449,0.986,1450,1.056,1451,1.056,1613,2.063,1615,1.996,1943,1.184,1946,1.931,1973,2.733,1999,3.344,2172,0.059,2175,1.622,2261,2.951,2357,4.663,2431,2.22,2432,2.601,2457,3.5,2973,2.139,3267,2.716,3283,3.5,3440,3.131,3454,2.22,3457,2.397,3746,3.303,4019,3.73,4023,4.872,4025,5.925,4033,5.925,4184,3.303,4513,2.979,4810,2.397,4843,4.351,4909,5.191,4942,3.173,5459,3.882,6710,2.841,8239,3.73,9356,4.931,9379,4.807,9391,4.351,10325,7.004,10326,6.056,10731,4.591,11204,6.049,11342,4.931,11345,4.931,11346,4.591,14430,6.011,14525,4.005,14698,4.005,14946,5.925,15245,5.925,15329,5.515,15330,6.789,15331,6.789,15332,6.789,15333,6.789,15334,6.789,15335,6.789,15336,5.515,15337,6.789,15338,5.515,15339,5.515,15340,5.515,15341,5.515,15342,5.515,15343,5.515,15344,6.789,15345,5.515,15346,5.515,15347,6.789,15348,5.515,15349,7.676,15350,5.515,15351,5.515,15352,5.515]],["t/81",[14698,2.998,15353,4.129]],["b/81",[22,1.575,35,0.446,36,1.351,37,0.594,44,1.941,53,0.957,54,0.617,67,0.346,88,1.603,105,0.617,113,3.172,124,0.122,160,0.776,161,1.376,170,1.028,177,1.147,187,1.236,195,1.288,225,2.838,232,0.381,242,1.193,244,0.525,261,1.816,269,0.429,299,1.572,303,1.288,315,1.941,316,0.749,317,0.749,320,0.594,341,0.584,351,1.093,365,0.737,372,1.288,373,2.7,378,4.051,386,0.627,391,1.877,402,0.556,473,0.054,474,0.049,480,1.939,481,0.479,483,1.416,484,1.131,487,1.376,500,0.537,501,0.669,503,0.594,506,0.479,508,2.076,514,0.989,521,1.092,522,0.77,523,1.331,529,0.822,536,3.011,538,1.742,547,2.173,563,0.503,564,2.771,573,1.873,574,0.734,576,1.247,582,0.547,583,1.742,603,0.695,604,0.894,606,0.612,616,0.7,617,0.836,618,0.583,622,0.991,626,0.64,627,0.698,628,0.803,629,0.669,630,0.698,631,0.698,633,0.759,637,0.749,638,0.79,641,0.619,643,0.619,645,0.619,646,0.669,648,0.669,667,0.863,677,0.64,682,0.871,683,0.888,684,0.669,689,0.957,710,0.805,715,1.331,722,3.63,728,2.358,732,0.855,748,1.626,764,2.838,767,1.132,769,1.151,780,1.443,786,1.288,789,3.172,796,3.172,816,1.682,823,3.63,835,1.147,855,1.869,883,4.362,893,2.994,905,3.144,919,1.939,926,0.888,1000,3.63,1003,3.943,1092,1.939,1104,1.682,1112,2.994,1145,1.698,1147,1.742,1176,1.939,1178,3.38,1250,2.994,1259,2.669,1279,2.012,1285,2.669,1313,3.38,1361,3.943,1369,1.376,1372,0.584,1374,0.776,1382,0.594,1395,1.369,1433,0.669,1444,0.805,1449,1.141,1451,0.957,1459,1.058,1461,1.058,1464,1.058,1466,1.13,1467,1.168,1468,1.058,1469,1.288,1494,1.47,1496,2.575,1513,1.505,1531,1.816,1538,5.108,1539,3.943,1598,2.983,1644,3.63,1653,2.994,1662,2.173,1680,1.223,1684,2.771,1722,3.172,1757,4.317,1853,2.304,1914,3.172,1943,1.193,1946,1.422,1965,2.838,2172,0.075,2175,1.47,2761,3.943,2992,2.107,3069,1.626,3138,3.823,3144,2.358,3281,5.548,3282,3.993,3283,4.051,3284,3.172,3285,3.823,3457,2.775,3501,4.362,3614,4.317,4506,2.575,4830,2.262,5099,3.63,5128,3.172,5129,3.63,5209,3.288,5211,2.262,5449,2.262,5469,2.994,5520,4.002,5784,4.636,6205,3.63,6551,3.63,6627,5.011,7344,3.943,7822,4.362,7961,5.267,8127,3.38,8239,3.38,8400,6.04,8533,5.571,8771,4.636,8830,2.994,9854,4.362,10077,5.571,10134,3.943,10384,3.172,11158,5.571,11262,4.362,11269,5.381,11599,3.943,11901,5.548,11952,3.624,12408,4.362,12420,4.362,12453,5.571,13685,3.943,14081,4.362,14109,4.362,14612,4.362,14698,5.852,15272,6.467,15354,4.998,15355,4.998,15356,7.033,15357,4.998,15358,7.829,15359,4.998,15360,4.998,15361,4.998,15362,6.383,15363,4.998,15364,4.998,15365,4.998,15366,4.998,15367,4.998,15368,7.033,15369,4.998,15370,4.998,15371,4.998,15372,6.383,15373,4.998,15374,4.998,15375,4.998,15376,6.383,15377,7.41,15378,4.998,15379,6.383,15380,4.998,15381,4.998,15382,4.998,15383,6.383,15384,4.998,15385,4.998,15386,6.383,15387,4.998,15388,4.998,15389,4.998,15390,4.998,15391,6.383,15392,4.998,15393,4.998,15394,6.383,15395,4.998,15396,4.998,15397,4.998,15398,6.383,15399,6.383,15400,6.383,15401,6.383,15402,6.383,15403,6.383,15404,6.383,15405,6.383,15406,6.383,15407,6.383,15408,6.383,15409,6.383,15410,6.383,15411,6.383,15412,6.383,15413,6.383,15414,6.383,15415,4.998,15416,4.998,15417,4.998,15418,7.033,15419,4.998,15420,4.998,15421,4.998,15422,4.998,15423,4.998,15424,4.998,15425,4.998,15426,4.998,15427,4.998,15428,4.998,15429,4.998,15430,4.998,15431,4.998,15432,4.998,15433,4.998,15434,4.998,15435,4.998,15436,4.998]]],"invertedIndex":[["",{"_index":124,"t":{"3":{},"20":{},"77":{}},"b":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["0",{"_index":500,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["0&a",{"_index":11459,"t":{},"b":{"45":{}}}],["0(no",{"_index":8016,"t":{},"b":{"15":{}}}],["0(unsymmetr",{"_index":8014,"t":{},"b":{"15":{}}}],["0),nn",{"_index":4064,"t":{},"b":{"11":{}}}],["0).1",{"_index":7010,"t":{},"b":{"13":{}}}],["0).if",{"_index":7081,"t":{},"b":{"13":{}}}],["0).region",{"_index":14421,"t":{},"b":{"66":{}}}],["0){real",{"_index":14836,"t":{},"b":{"73":{}}}],["0){x",{"_index":5010,"t":{},"b":{"11":{},"13":{},"15":{},"25":{},"38":{},"40":{},"42":{},"43":{},"45":{},"61":{},"66":{},"67":{},"74":{},"76":{}}}],["0+3+0",{"_index":2538,"t":{},"b":{"4":{}}}],["0+3.91579i",{"_index":8846,"t":{},"b":{"21":{}}}],["0,..,d",{"_index":3837,"t":{},"b":{"11":{}}}],["0,...,n_p",{"_index":4743,"t":{},"b":{"11":{}}}],["0,0",{"_index":2627,"t":{},"b":{"4":{},"13":{},"40":{},"48":{},"77":{}}}],["0,0,0",{"_index":6393,"t":{},"b":{"13":{}}}],["0,0,1,1,2,2",{"_index":2520,"t":{},"b":{"4":{}}}],["0,0,2,2",{"_index":6073,"t":{},"b":{"13":{}}}],["0,0.5",{"_index":9053,"t":{},"b":{"21":{}}}],["0,1",{"_index":1336,"t":{},"b":{"3":{},"11":{},"13":{},"21":{},"41":{},"48":{},"60":{},"69":{}}}],["0,1,0,1,0,1,0,1",{"_index":2521,"t":{},"b":{"4":{}}}],["0,1,2",{"_index":2574,"t":{},"b":{"4":{}}}],["0,1,\\cdots,29",{"_index":11056,"t":{},"b":{"41":{}}}],["0,1/2",{"_index":11018,"t":{},"b":{"41":{}}}],["0,10[\\time",{"_index":10723,"t":{},"b":{"40":{}}}],["0,1[\\times]0,1",{"_index":10741,"t":{},"b":{"40":{}}}],["0,1[^2",{"_index":4018,"t":{},"b":{"11":{},"41":{}}}],["0,1],[0,1],[0,1",{"_index":6039,"t":{},"b":{"13":{}}}],["0,1].thi",{"_index":6002,"t":{},"b":{"13":{}}}],["0,1]\\cup[1,0",{"_index":4991,"t":{},"b":{"11":{}}}],["0,1]^2",{"_index":5132,"t":{},"b":{"13":{}}}],["0,2",{"_index":6075,"t":{},"b":{"13":{},"15":{},"40":{}}}],["0,2*pi){x",{"_index":6501,"t":{},"b":{"13":{},"71":{}}}],["0,20]\\time",{"_index":14259,"t":{},"b":{"64":{}}}],["0,2\\pi",{"_index":1536,"t":{},"b":{"3":{}}}],["0,2\\pi[^2",{"_index":12071,"t":{},"b":{"48":{}}}],["0,2\\pi]\\tim",{"_index":1660,"t":{},"b":{"3":{}}}],["0,2pi]x[0,pi",{"_index":1734,"t":{},"b":{"3":{},"20":{}}}],["0,3",{"_index":10936,"t":{},"b":{"41":{}}}],["0,5[\\time",{"_index":10740,"t":{},"b":{"40":{}}}],["0,6",{"_index":5315,"t":{},"b":{"13":{}}}],["0,6)\\times(0,1",{"_index":15250,"t":{},"b":{"79":{}}}],["0,\\cdot",{"_index":10983,"t":{},"b":{"41":{}}}],["0,\\cdots,[t/\\tau",{"_index":10908,"t":{},"b":{"41":{}}}],["0,\\cdots,m",{"_index":3769,"t":{},"b":{"11":{},"76":{}}}],["0,\\cdots,n",{"_index":2437,"t":{},"b":{"4":{}}}],["0,\\cdots,nbdof",{"_index":2435,"t":{},"b":{"4":{}}}],["0,\\delta",{"_index":15005,"t":{},"b":{"75":{}}}],["0,\\dots,m",{"_index":15129,"t":{},"b":{"76":{}}}],["0,\\ldots,m",{"_index":5968,"t":{},"b":{"13":{}}}],["0,\\ldots,m_{i",{"_index":5977,"t":{},"b":{"13":{}}}],["0,\\mathtt{last\\_operatortyp",{"_index":2584,"t":{},"b":{"4":{}}}],["0,\\nu",{"_index":14907,"t":{},"b":{"74":{}}}],["0,\\pi",{"_index":1661,"t":{},"b":{"3":{}}}],["0,\\pi[^2",{"_index":10528,"t":{},"b":{"39":{}}}],["0,\\quad",{"_index":10700,"t":{},"b":{"40":{}}}],["0,\\quad\\foral",{"_index":14311,"t":{},"b":{"65":{}}}],["0,l",{"_index":6484,"t":{},"b":{"13":{}}}],["0,l(0,0)],refx",{"_index":6431,"t":{},"b":{"13":{}}}],["0,l(0,1",{"_index":6432,"t":{},"b":{"13":{}}}],["0,l(1,0)],refi",{"_index":6435,"t":{},"b":{"13":{}}}],["0,l(1,1",{"_index":6436,"t":{},"b":{"13":{}}}],["0,l(2,0)],refz",{"_index":6439,"t":{},"b":{"13":{}}}],["0,l(2,1",{"_index":6440,"t":{},"b":{"13":{}}}],["0,l)\\time",{"_index":11075,"t":{},"b":{"41":{}}}],["0,lx)\\times(0,ly)\\times(0,lz",{"_index":15249,"t":{},"b":{"79":{}}}],["0,n",{"_index":2581,"t":{},"b":{"4":{}}}],["0,nof",{"_index":2580,"t":{},"b":{"4":{}}}],["0,r[\\times]0",{"_index":15279,"t":{},"b":{"79":{}}}],["0,t",{"_index":10889,"t":{},"b":{"41":{},"68":{},"74":{},"79":{}}}],["0,t)\\quad",{"_index":11078,"t":{},"b":{"41":{}}}],["0,u2",{"_index":6189,"t":{},"b":{"13":{}}}],["0,u3",{"_index":6190,"t":{},"b":{"13":{}}}],["0,viso",{"_index":15231,"t":{},"b":{"77":{}}}],["0,~~v(t",{"_index":14405,"t":{},"b":{"66":{}}}],["0.)/nlayer",{"_index":9462,"t":{},"b":{"26":{}}}],["0.){x",{"_index":14395,"t":{},"b":{"66":{}}}],["0.,0.,0",{"_index":6345,"t":{},"b":{"13":{}}}],["0.,0.,0.,145,0.0001",{"_index":6749,"t":{},"b":{"13":{}}}],["0.,0.,0.,145,0.01",{"_index":6742,"t":{},"b":{"13":{}}}],["0.,0.7){x",{"_index":14574,"t":{},"b":{"69":{}}}],["0.,1.){x",{"_index":14572,"t":{},"b":{"69":{}}}],["0.,5.],[0.,1.],[0.,1",{"_index":6165,"t":{},"b":{"13":{}}}],["0...,,m",{"_index":15135,"t":{},"b":{"76":{}}}],["0.0",{"_index":2551,"t":{},"b":{"4":{},"13":{},"15":{},"37":{},"40":{},"48":{}}}],["0.0*innerellipseextension)*outerradius*cos(t",{"_index":10370,"t":{},"b":{"37":{}}}],["0.00001",{"_index":1875,"t":{},"b":{"3":{},"20":{},"61":{}}}],["0.0001",{"_index":5501,"t":{},"b":{"13":{},"24":{},"40":{},"61":{}}}],["0.000109043",{"_index":11899,"t":{},"b":{"48":{}}}],["0.000213269",{"_index":10953,"t":{},"b":{"41":{}}}],["0.000313",{"_index":2839,"t":{},"b":{"4":{}}}],["0.000384045",{"_index":11897,"t":{},"b":{"48":{}}}],["0.001",{"_index":6124,"t":{},"b":{"13":{},"20":{},"24":{},"26":{},"41":{},"42":{},"43":{},"47":{},"61":{}}}],["0.001)*(i",{"_index":10883,"t":{},"b":{"40":{}}}],["0.001)*h(0.1",{"_index":10876,"t":{},"b":{"40":{}}}],["0.001)*h(y+0.1",{"_index":10877,"t":{},"b":{"40":{}}}],["0.00117128",{"_index":14785,"t":{},"b":{"72":{}}}],["0.00174105",{"_index":14290,"t":{},"b":{"64":{}}}],["0.00174137",{"_index":14289,"t":{},"b":{"64":{}}}],["0.0025",{"_index":6273,"t":{},"b":{"13":{},"74":{}}}],["0.004",{"_index":1506,"t":{},"b":{"3":{}}}],["0.00462991",{"_index":14784,"t":{},"b":{"72":{}}}],["0.005",{"_index":8093,"t":{},"b":{"15":{},"66":{}}}],["0.00625",{"_index":14469,"t":{},"b":{"67":{}}}],["0.00628589",{"_index":10954,"t":{},"b":{"41":{}}}],["0.01",{"_index":2098,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"25":{},"37":{},"41":{},"48":{},"56":{},"61":{},"67":{},"71":{}}}],["0.01*(region",{"_index":14425,"t":{},"b":{"66":{}}}],["0.010219",{"_index":14296,"t":{},"b":{"64":{}}}],["0.012854",{"_index":2838,"t":{},"b":{"4":{}}}],["0.012e5",{"_index":11726,"t":{},"b":{"46":{}}}],["0.0150581",{"_index":12211,"t":{},"b":{"48":{}}}],["0.0179253(0.0173266",{"_index":12067,"t":{},"b":{"48":{}}}],["0.0188411",{"_index":11900,"t":{},"b":{"48":{}}}],["0.02",{"_index":5822,"t":{},"b":{"13":{},"21":{},"43":{},"72":{}}}],["0.025/(pow(100.,al",{"_index":8728,"t":{},"b":{"20":{}}}],["0.0263154",{"_index":14291,"t":{},"b":{"64":{}}}],["0.03",{"_index":1365,"t":{},"b":{"3":{}}}],["0.03,t",{"_index":15208,"t":{},"b":{"77":{}}}],["0.0375506",{"_index":11898,"t":{},"b":{"48":{}}}],["0.04",{"_index":14971,"t":{},"b":{"74":{}}}],["0.042\\ldots|t_k",{"_index":4729,"t":{},"b":{"11":{}}}],["0.05",{"_index":5246,"t":{},"b":{"13":{},"24":{},"40":{},"41":{},"42":{},"47":{},"50":{},"77":{}}}],["0.05,\\;\\;k",{"_index":11192,"t":{},"b":{"41":{}}}],["0.06254*(t^4",{"_index":5686,"t":{},"b":{"13":{},"48":{},"66":{}}}],["0.06254*(x^4",{"_index":14390,"t":{},"b":{"66":{}}}],["0.06254x^4",{"_index":11968,"t":{},"b":{"48":{},"66":{}}}],["0.0729566(0.0707543",{"_index":12068,"t":{},"b":{"48":{}}}],["0.073\\ldots|t_k",{"_index":4727,"t":{},"b":{"11":{}}}],["0.075597*t",{"_index":5683,"t":{},"b":{"13":{},"48":{},"66":{}}}],["0.075597*x",{"_index":14387,"t":{},"b":{"66":{}}}],["0.075597x",{"_index":11965,"t":{},"b":{"48":{},"66":{}}}],["0.0838988",{"_index":5381,"t":{},"b":{"13":{}}}],["0.09*kp*kp/epp",{"_index":14113,"t":{},"b":{"61":{}}}],["0.1",{"_index":1366,"t":{},"b":{"3":{},"5":{},"9":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"32":{},"40":{},"41":{},"45":{},"48":{},"49":{},"61":{},"77":{},"79":{},"80":{}}}],["0.1*(1",{"_index":10860,"t":{},"b":{"40":{}}}],["0.1*(region",{"_index":14426,"t":{},"b":{"66":{}}}],["0.1*1*sqrt((sx",{"_index":10867,"t":{},"b":{"40":{}}}],["0.1*cos(t",{"_index":5866,"t":{},"b":{"13":{}}}],["0.1*sin(t",{"_index":5867,"t":{},"b":{"13":{}}}],["0.1*x",{"_index":10821,"t":{},"b":{"40":{},"48":{}}}],["0.1+0.3*cos(t",{"_index":15087,"t":{},"b":{"76":{}}}],["0.1,0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.1",{"_index":15224,"t":{},"b":{"77":{}}}],["0.1,0.2",{"_index":8549,"t":{},"b":{"19":{},"27":{}}}],["0.1/dmax",{"_index":6193,"t":{},"b":{"13":{},"40":{}}}],["0.11\\ldots|t_k",{"_index":4728,"t":{},"b":{"11":{}}}],["0.120421",{"_index":12209,"t":{},"b":{"48":{}}}],["0.12472",{"_index":5379,"t":{},"b":{"13":{}}}],["0.125",{"_index":5361,"t":{},"b":{"13":{}}}],["0.126*kp*(pow(2*dx(ux),2)+pow(2*dy(uy),2)+2*pow(dx(uy)+dy(ux),2))/2",{"_index":14114,"t":{},"b":{"61":{}}}],["0.15",{"_index":11567,"t":{},"b":{"45":{}}}],["0.161797",{"_index":8495,"t":{},"b":{"18":{}}}],["0.17",{"_index":7133,"t":{},"b":{"13":{},"41":{},"77":{}}}],["0.171736",{"_index":5373,"t":{},"b":{"13":{}}}],["0.17363*(t^3",{"_index":5685,"t":{},"b":{"13":{},"48":{},"66":{}}}],["0.17363*(x^3",{"_index":14389,"t":{},"b":{"66":{}}}],["0.17363x^3",{"_index":11967,"t":{},"b":{"48":{}}}],["0.175741",{"_index":5367,"t":{},"b":{"13":{}}}],["0.17735*sqrt(t",{"_index":5682,"t":{},"b":{"13":{},"48":{},"66":{}}}],["0.17735*sqrt(x",{"_index":14386,"t":{},"b":{"66":{}}}],["0.17735\\sqrt{x",{"_index":11964,"t":{},"b":{"48":{},"66":{}}}],["0.18",{"_index":9070,"t":{},"b":{"21":{}}}],["0.195774",{"_index":8496,"t":{},"b":{"18":{}}}],["0.1;//boundari",{"_index":1431,"t":{},"b":{"3":{}}}],["0.1^(1./5",{"_index":9322,"t":{},"b":{"25":{}}}],["0.1x",{"_index":11980,"t":{},"b":{"48":{}}}],["0.1x,\\quad",{"_index":11974,"t":{},"b":{"48":{}}}],["0.2",{"_index":4821,"t":{},"b":{"11":{},"13":{},"19":{},"21":{},"26":{},"27":{},"42":{},"45":{},"48":{},"61":{},"67":{},"74":{},"77":{},"79":{}}}],["0.2){x",{"_index":5668,"t":{},"b":{"13":{}}}],["0.2*cos(t",{"_index":5850,"t":{},"b":{"13":{}}}],["0.2*cos(t)+0.5",{"_index":5853,"t":{},"b":{"13":{}}}],["0.2*sin(t)+0.5",{"_index":5851,"t":{},"b":{"13":{}}}],["0.2000000000000000111",{"_index":9111,"t":{},"b":{"21":{}}}],["0.212836*(t^2",{"_index":5684,"t":{},"b":{"13":{},"48":{},"66":{}}}],["0.212836*(x^2",{"_index":14388,"t":{},"b":{"66":{}}}],["0.212836x^2",{"_index":11966,"t":{},"b":{"48":{}}}],["0.212836x^2+0.17363x^3",{"_index":14380,"t":{},"b":{"66":{}}}],["0.225|t_k",{"_index":4696,"t":{},"b":{"11":{}}}],["0.226431",{"_index":5376,"t":{},"b":{"13":{}}}],["0.230769,0.153846",{"_index":13858,"t":{},"b":{"60":{}}}],["0.232987",{"_index":8497,"t":{},"b":{"18":{}}}],["0.25",{"_index":1673,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"45":{},"48":{},"79":{}}}],["0.25).region",{"_index":5182,"t":{},"b":{"13":{},"24":{}}}],["0.25^(1./nbiter",{"_index":14099,"t":{},"b":{"61":{}}}],["0.25e",{"_index":14064,"t":{},"b":{"61":{}}}],["0.273436",{"_index":8498,"t":{},"b":{"18":{}}}],["0.28",{"_index":14263,"t":{},"b":{"64":{}}}],["0.29",{"_index":6169,"t":{},"b":{"13":{},"40":{},"42":{}}}],["0.3",{"_index":812,"t":{},"b":{"3":{},"13":{},"21":{},"24":{},"32":{},"41":{},"48":{},"70":{},"73":{},"77":{}}}],["0.3)^2",{"_index":11162,"t":{},"b":{"41":{},"77":{}}}],["0.3*sin(t",{"_index":5216,"t":{},"b":{"13":{},"24":{},"70":{}}}],["0.3+0.3*cos(t",{"_index":5215,"t":{},"b":{"13":{},"24":{}}}],["0.3,\\;\\;\\rho",{"_index":11190,"t":{},"b":{"41":{}}}],["0.3,\\;\\;\\sigma",{"_index":11189,"t":{},"b":{"41":{}}}],["0.3,\\;\\;r",{"_index":11191,"t":{},"b":{"41":{}}}],["0.308652",{"_index":5369,"t":{},"b":{"13":{}}}],["0.309016994375",{"_index":6792,"t":{},"b":{"13":{}}}],["0.317121",{"_index":8499,"t":{},"b":{"18":{}}}],["0.333333",{"_index":9109,"t":{},"b":{"21":{}}}],["0.3333333333",{"_index":9108,"t":{},"b":{"21":{}}}],["0.33333333333333331483",{"_index":9110,"t":{},"b":{"21":{}}}],["0.335",{"_index":4772,"t":{},"b":{"11":{}}}],["0.35",{"_index":11310,"t":{},"b":{"43":{}}}],["0.364042",{"_index":8500,"t":{},"b":{"18":{}}}],["0.389647",{"_index":5382,"t":{},"b":{"13":{}}}],["0.4",{"_index":5728,"t":{},"b":{"13":{},"21":{},"24":{},"41":{},"48":{},"71":{},"77":{}}}],["0.4)/rr",{"_index":6080,"t":{},"b":{"13":{}}}],["0.4,0.1",{"_index":12336,"t":{},"b":{"49":{}}}],["0.4,0.9",{"_index":12333,"t":{},"b":{"49":{}}}],["0.406",{"_index":11168,"t":{},"b":{"41":{}}}],["0.41",{"_index":11563,"t":{},"b":{"45":{}}}],["0.414199",{"_index":8501,"t":{},"b":{"18":{}}}],["0.450158",{"_index":13808,"t":{},"b":{"58":{}}}],["0.456045",{"_index":5383,"t":{},"b":{"13":{}}}],["0.467592",{"_index":8502,"t":{},"b":{"18":{}}}],["0.494773",{"_index":5378,"t":{},"b":{"13":{}}}],["0.49999999999999977796",{"_index":9043,"t":{},"b":{"21":{}}}],["0.49999999999999994449",{"_index":9042,"t":{},"b":{"21":{}}}],["0.4e5",{"_index":11727,"t":{},"b":{"46":{}}}],["0.5",{"_index":1369,"t":{},"b":{"3":{},"4":{},"9":{},"11":{},"13":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"40":{},"41":{},"43":{},"46":{},"48":{},"49":{},"61":{},"67":{},"71":{},"73":{},"74":{},"77":{},"79":{},"81":{}}}],["0.5))/square(",{"_index":1371,"t":{},"b":{"3":{}}}],["0.5)*(i",{"_index":4437,"t":{},"b":{"11":{}}}],["0.5)*2*angl",{"_index":12483,"t":{},"b":{"51":{}}}],["0.5)+y*y)^2",{"_index":5667,"t":{},"b":{"13":{}}}],["0.5).region",{"_index":5023,"t":{},"b":{"11":{}}}],["0.5)^2",{"_index":6761,"t":{},"b":{"13":{}}}],["0.5)^2+(i",{"_index":6759,"t":{},"b":{"13":{}}}],["0.5)^2+(z",{"_index":6760,"t":{},"b":{"13":{}}}],["0.5){x",{"_index":5448,"t":{},"b":{"13":{},"22":{},"24":{},"48":{},"49":{},"74":{}}}],["0.5*(square(x",{"_index":1368,"t":{},"b":{"3":{}}}],["0.5*cos(t",{"_index":6977,"t":{},"b":{"13":{}}}],["0.5*dx(v)*dx(w",{"_index":8703,"t":{},"b":{"20":{}}}],["0.5*dy(v)*dy(w",{"_index":1986,"t":{},"b":{"3":{},"20":{}}}],["0.5*sin(t",{"_index":6978,"t":{},"b":{"13":{},"76":{}}}],["0.5*t",{"_index":5168,"t":{},"b":{"13":{},"24":{}}}],["0.5+0.5*t",{"_index":5166,"t":{},"b":{"13":{},"24":{}}}],["0.5+t",{"_index":6087,"t":{},"b":{"13":{},"24":{}}}],["0.5,0.5",{"_index":9056,"t":{},"b":{"21":{}}}],["0.5,0.6",{"_index":8550,"t":{},"b":{"19":{},"27":{}}}],["0.5,05",{"_index":7202,"t":{},"b":{"13":{}}}],["0.5,1[^3",{"_index":7167,"t":{},"b":{"13":{}}}],["0.5,3.0616169978683830179e",{"_index":9054,"t":{},"b":{"21":{}}}],["0.50000000000000011102",{"_index":9057,"t":{},"b":{"21":{}}}],["0.51387",{"_index":5366,"t":{},"b":{"13":{}}}],["0.523509",{"_index":8853,"t":{},"b":{"21":{}}}],["0.524221",{"_index":8503,"t":{},"b":{"18":{}}}],["0.534534",{"_index":5370,"t":{},"b":{"13":{}}}],["0.55",{"_index":5302,"t":{},"b":{"13":{}}}],["0.55,0,6",{"_index":5317,"t":{},"b":{"13":{}}}],["0.55,0.6",{"_index":5296,"t":{},"b":{"13":{}}}],["0.580623",{"_index":5380,"t":{},"b":{"13":{}}}],["0.584086",{"_index":8504,"t":{},"b":{"18":{}}}],["0.599",{"_index":7108,"t":{},"b":{"13":{}}}],["0.5^(1./nbiter",{"_index":14102,"t":{},"b":{"61":{}}}],["0.5i",{"_index":14221,"t":{},"b":{"63":{}}}],["0.6",{"_index":5303,"t":{},"b":{"13":{},"19":{},"27":{},"77":{}}}],["0.6).nutriangl",{"_index":5299,"t":{},"b":{"13":{}}}],["0.6).region",{"_index":5301,"t":{},"b":{"13":{}}}],["0.636237",{"_index":5368,"t":{},"b":{"13":{}}}],["0.7",{"_index":2949,"t":{},"b":{"4":{},"13":{},"24":{},"48":{},"77":{}}}],["0.7){x",{"_index":6086,"t":{},"b":{"13":{},"24":{}}}],["0.7,1.){x",{"_index":14576,"t":{},"b":{"69":{}}}],["0.702231",{"_index":5375,"t":{},"b":{"13":{}}}],["0.746765",{"_index":5371,"t":{},"b":{"13":{}}}],["0.75",{"_index":6272,"t":{},"b":{"13":{}}}],["0.8",{"_index":5248,"t":{},"b":{"13":{},"48":{},"70":{},"77":{}}}],["0.8*cos(t",{"_index":5688,"t":{},"b":{"13":{}}}],["0.8*cos(t)+0.5",{"_index":11996,"t":{},"b":{"48":{}}}],["0.8*sin(t",{"_index":5689,"t":{},"b":{"13":{},"48":{}}}],["0.8+0.3*cos(t",{"_index":14604,"t":{},"b":{"70":{}}}],["0.800819",{"_index":5377,"t":{},"b":{"13":{}}}],["0.841471",{"_index":2834,"t":{},"b":{"4":{}}}],["0.899823",{"_index":5374,"t":{},"b":{"13":{}}}],["0.9",{"_index":1666,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"20":{},"24":{},"48":{},"49":{},"77":{}}}],["0.947628",{"_index":5372,"t":{},"b":{"13":{}}}],["0.95",{"_index":5724,"t":{},"b":{"13":{},"24":{},"73":{}}}],["0.951056516295",{"_index":6793,"t":{},"b":{"13":{}}}],["0.999",{"_index":14096,"t":{},"b":{"61":{}}}],["0.99999999999999988898",{"_index":9058,"t":{},"b":{"21":{}}}],["0.ep",{"_index":5612,"t":{},"b":{"13":{}}}],["000",{"_index":7127,"t":{},"b":{"13":{}}}],["0000",{"_index":9465,"t":{},"b":{"26":{}}}],["011",{"_index":5951,"t":{},"b":{"13":{}}}],["0123456789",{"_index":8859,"t":{},"b":{"21":{}}}],["0123abcdefghijk",{"_index":8873,"t":{},"b":{"21":{}}}],["02",{"_index":9835,"t":{},"b":{"32":{}}}],["06",{"_index":9254,"t":{},"b":{"21":{},"48":{}}}],["07",{"_index":14295,"t":{},"b":{"64":{}}}],["08",{"_index":7955,"t":{},"b":{"15":{}}}],["0:1",{"_index":2000,"t":{},"b":{"3":{},"20":{}}}],["0:2",{"_index":8951,"t":{},"b":{"21":{}}}],["0:9",{"_index":13790,"t":{},"b":{"57":{}}}],["0:th.nv",{"_index":9274,"t":{},"b":{"22":{}}}],["0:vh.ndof",{"_index":1839,"t":{},"b":{"3":{},"20":{}}}],["0;//to",{"_index":5480,"t":{},"b":{"13":{}}}],["0;i<1;i",{"_index":14655,"t":{},"b":{"71":{}}}],["0;t<t;t",{"_index":15320,"t":{},"b":{"79":{}}}],["0<\\epsilon<1",{"_index":535,"t":{},"b":{"3":{}}}],["0<w<1",{"_index":7023,"t":{},"b":{"13":{}}}],["0<y<1",{"_index":12157,"t":{},"b":{"48":{}}}],["0\\),and",{"_index":11710,"t":{},"b":{"46":{}}}],["0\\;\\text{on",{"_index":11922,"t":{},"b":{"48":{}}}],["0\\end{split",{"_index":974,"t":{},"b":{"3":{},"66":{}}}],["0\\foral",{"_index":14553,"t":{},"b":{"69":{}}}],["0\\hbox",{"_index":4982,"t":{},"b":{"11":{},"41":{}}}],["0\\le",{"_index":4616,"t":{},"b":{"11":{},"76":{}}}],["0\\leq",{"_index":13816,"t":{},"b":{"59":{}}}],["0\\mbox",{"_index":15114,"t":{},"b":{"76":{}}}],["0\\nonumb",{"_index":14451,"t":{},"b":{"67":{}}}],["0\\qquad",{"_index":4292,"t":{},"b":{"11":{},"48":{}}}],["0\\quad",{"_index":4301,"t":{},"b":{"11":{},"14":{},"40":{},"45":{},"48":{}}}],["0\\quad\\textrm{if",{"_index":4285,"t":{},"b":{"11":{}}}],["0\\quad\\textrm{in",{"_index":11944,"t":{},"b":{"48":{}}}],["0\\right.\\right",{"_index":11383,"t":{},"b":{"45":{}}}],["0\\textrm",{"_index":4135,"t":{},"b":{"11":{}}}],["0|1",{"_index":3670,"t":{},"b":{"9":{},"26":{}}}],["0}\\eta(\\tau",{"_index":10639,"t":{},"b":{"40":{}}}],["0}\\frac{u(x,y,t",{"_index":10899,"t":{},"b":{"41":{}}}],["0}\\max\\{\\textrm{diam}(t_k",{"_index":5488,"t":{},"b":{"13":{}}}],["0}^2",{"_index":4153,"t":{},"b":{"11":{}}}],["0}^j",{"_index":15085,"t":{},"b":{"76":{}}}],["0}^n",{"_index":11918,"t":{},"b":{"48":{}}}],["0}^{\\infty}\\frac{(1)^p}{p!(n+p)!}\\left(\\frac{x}{2}\\right)^{2p+n",{"_index":13634,"t":{},"b":{"54":{}}}],["0}^{\\mathtt{kpi",{"_index":2443,"t":{},"b":{"4":{}}}],["0}^{m",{"_index":2867,"t":{},"b":{"4":{},"76":{}}}],["0}^{n",{"_index":2860,"t":{},"b":{"4":{},"41":{}}}],["0}{\\operatorname{argmin",{"_index":951,"t":{},"b":{"3":{}}}],["0~~\\foral",{"_index":14741,"t":{},"b":{"72":{}}}],["0~~\\textrm{on",{"_index":10690,"t":{},"b":{"40":{}}}],["1",{"_index":35,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["1&q^{k_1}_x&q^{k_1}_i",{"_index":4665,"t":{},"b":{"11":{}}}],["1&q^{k_2}_x&q^{k_2}_i",{"_index":4666,"t":{},"b":{"11":{}}}],["1&q^{k_3}_x&q^{k_3}_i",{"_index":4667,"t":{},"b":{"11":{}}}],["1&x&i",{"_index":4670,"t":{},"b":{"11":{}}}],["1)(1",{"_index":13602,"t":{},"b":{"54":{}}}],["1)(edgeorient",{"_index":13748,"t":{},"b":{"55":{}}}],["1)(f",{"_index":4655,"t":{},"b":{"11":{}}}],["1)(k*v*w",{"_index":4529,"t":{},"b":{"11":{}}}],["1)(lenedg",{"_index":13754,"t":{},"b":{"55":{}}}],["1)(v",{"_index":4881,"t":{},"b":{"11":{},"48":{}}}],["1)(v/lenedg",{"_index":4883,"t":{},"b":{"11":{},"48":{}}}],["1))+(\\varphi_0|_{p",{"_index":11990,"t":{},"b":{"48":{}}}],["1)*(1",{"_index":7236,"t":{},"b":{"13":{}}}],["1)*(i",{"_index":12079,"t":{},"b":{"48":{}}}],["1)*(x",{"_index":7235,"t":{},"b":{"13":{},"69":{}}}],["1)*(y+0.1*(x",{"_index":14105,"t":{},"b":{"61":{}}}],["1)*abs(i",{"_index":9088,"t":{},"b":{"21":{},"60":{}}}],["1)*ni",{"_index":8798,"t":{},"b":{"21":{}}}],["1)*nx",{"_index":8796,"t":{},"b":{"21":{}}}],["1)*x/nx",{"_index":8768,"t":{},"b":{"21":{}}}],["1)*y/ni",{"_index":8769,"t":{},"b":{"21":{}}}],["1).1",{"_index":7082,"t":{},"b":{"13":{}}}],["1)/3",{"_index":14194,"t":{},"b":{"63":{}}}],["1)/4",{"_index":11876,"t":{},"b":{"48":{}}}],["1)/\\sqrt{n",{"_index":2875,"t":{},"b":{"4":{}}}],["1)<0.5",{"_index":14106,"t":{},"b":{"61":{}}}],["1)\\bar",{"_index":14455,"t":{},"b":{"67":{}}}],["1)\\delta",{"_index":14459,"t":{},"b":{"67":{}}}],["1)\\tau",{"_index":11117,"t":{},"b":{"41":{}}}],["1)^2",{"_index":11031,"t":{},"b":{"41":{},"75":{}}}],["1)^3",{"_index":6541,"t":{},"b":{"13":{}}}],["1){p",{"_index":7253,"t":{},"b":{"13":{}}}],["1){p.x",{"_index":13870,"t":{},"b":{"60":{}}}],["1){real",{"_index":14832,"t":{},"b":{"73":{}}}],["1){x",{"_index":5004,"t":{},"b":{"11":{},"13":{},"15":{},"24":{},"38":{},"40":{},"48":{},"49":{},"51":{},"63":{},"66":{},"67":{},"74":{}}}],["1)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":15076,"t":{},"b":{"76":{}}}],["1*b",{"_index":4852,"t":{},"b":{"11":{},"15":{},"26":{},"45":{},"58":{},"68":{}}}],["1*b*v",{"_index":10542,"t":{},"b":{"39":{}}}],["1*b0",{"_index":5061,"t":{},"b":{"11":{}}}],["1*b1",{"_index":5068,"t":{},"b":{"11":{}}}],["1*bc",{"_index":7611,"t":{},"b":{"15":{},"26":{}}}],["1*brh",{"_index":11279,"t":{},"b":{"42":{}}}],["1*c1",{"_index":1463,"t":{},"b":{"3":{}}}],["1*dx(u)*dx(v",{"_index":9013,"t":{},"b":{"21":{}}}],["1*f",{"_index":8075,"t":{},"b":{"15":{},"76":{}}}],["1*p",{"_index":11630,"t":{},"b":{"45":{}}}],["1*u",{"_index":10508,"t":{},"b":{"39":{}}}],["1*v",{"_index":7169,"t":{},"b":{"13":{},"47":{},"49":{}}}],["1*vh",{"_index":15229,"t":{},"b":{"77":{}}}],["1*w",{"_index":674,"t":{},"b":{"3":{},"20":{}}}],["1+(x>xl)*2+(y<yl",{"_index":7255,"t":{},"b":{"13":{}}}],["1+0.5*t",{"_index":5164,"t":{},"b":{"13":{},"24":{}}}],["1+2*i",{"_index":5512,"t":{},"b":{"13":{},"24":{}}}],["1+2*x",{"_index":5511,"t":{},"b":{"13":{},"24":{}}}],["1+2e_{ij}\\nu_i\\nu_j)^{1/2",{"_index":10640,"t":{},"b":{"40":{}}}],["1+\\nu",{"_index":10807,"t":{},"b":{"40":{},"64":{}}}],["1+\\nu)(1",{"_index":14248,"t":{},"b":{"64":{}}}],["1+b",{"_index":5775,"t":{},"b":{"13":{}}}],["1+b*(x/a)*(x/a)*(3",{"_index":5796,"t":{},"b":{"13":{}}}],["1+bi_b(x)+ci_c(x)+di_d(x)\\quad\\foral",{"_index":14992,"t":{},"b":{"75":{}}}],["1+i",{"_index":4917,"t":{},"b":{"11":{},"21":{}}}],["1+t",{"_index":5158,"t":{},"b":{"13":{},"24":{},"48":{},"66":{}}}],["1+x",{"_index":8989,"t":{},"b":{"21":{},"48":{}}}],["1+z[0]*ib+z[1]*ic+z[2]*id)*(dx(du)*dx(uh",{"_index":15038,"t":{},"b":{"75":{}}}],["1+z[0]*ib+z[1]*ic+z[2]*id)*(dx(u)*dx(uh",{"_index":15024,"t":{},"b":{"75":{}}}],["1,&\\cdot",{"_index":10981,"t":{},"b":{"41":{}}}],["1,...,n",{"_index":3080,"t":{},"b":{"5":{}}}],["1,...,n}_{\\lambda_{i,k",{"_index":3258,"t":{},"b":{"5":{},"10":{}}}],["1,...,n}x{1,...,m",{"_index":8988,"t":{},"b":{"21":{}}}],["1,...,p",{"_index":7944,"t":{},"b":{"15":{}}}],["1,0",{"_index":2629,"t":{},"b":{"4":{},"48":{}}}],["1,0,2,0",{"_index":6195,"t":{},"b":{"13":{}}}],["1,1",{"_index":5653,"t":{},"b":{"13":{},"21":{},"48":{},"64":{}}}],["1,1,2,2,3,3",{"_index":4338,"t":{},"b":{"11":{}}}],["1,1,\\dots,1",{"_index":1041,"t":{},"b":{"3":{}}}],["1,1[^3",{"_index":5917,"t":{},"b":{"13":{}}}],["1,1]^2",{"_index":4112,"t":{},"b":{"11":{}}}],["1,2",{"_index":2925,"t":{},"b":{"4":{},"5":{},"11":{},"12":{},"15":{},"40":{},"46":{},"48":{},"66":{}}}],["1,2),refs(k),j",{"_index":2354,"t":{},"b":{"4":{}}}],["1,2,1,2,1,2",{"_index":4339,"t":{},"b":{"11":{}}}],["1,2,3",{"_index":2924,"t":{},"b":{"4":{},"11":{},"40":{},"49":{},"76":{}}}],["1,2,\\,j",{"_index":11656,"t":{},"b":{"46":{}}}],["1,2,\\cdot",{"_index":2429,"t":{},"b":{"4":{}}}],["1,2],[2,2],[2,2",{"_index":6167,"t":{},"b":{"13":{}}}],["1,2],[3,4],[5,6",{"_index":6041,"t":{},"b":{"13":{}}}],["1,6.1232339957367660359e",{"_index":9055,"t":{},"b":{"21":{}}}],["1,\\cdots,10",{"_index":6789,"t":{},"b":{"13":{}}}],["1,\\cdots,j",{"_index":4599,"t":{},"b":{"11":{}}}],["1,\\cdots,m_v\\nonumb",{"_index":11452,"t":{},"b":{"45":{}}}],["1,\\cdots,m_w;j",{"_index":11451,"t":{},"b":{"45":{}}}],["1,\\cdots,m_{\\mathbf{v",{"_index":11443,"t":{},"b":{"45":{}}}],["1,\\cdots,n_t",{"_index":6785,"t":{},"b":{"13":{},"76":{}}}],["1,\\cdots,n_v",{"_index":6783,"t":{},"b":{"13":{}}}],["1,\\cdots,n_{tet",{"_index":6911,"t":{},"b":{"13":{}}}],["1,\\cdots,n_{tri",{"_index":6914,"t":{},"b":{"13":{}}}],["1,\\delta",{"_index":15004,"t":{},"b":{"75":{}}}],["1,\\quad",{"_index":4119,"t":{},"b":{"11":{}}}],["1,cmm",{"_index":6203,"t":{},"b":{"13":{}}}],["1,i",{"_index":4356,"t":{},"b":{"11":{},"13":{}}}],["1,j",{"_index":8963,"t":{},"b":{"21":{}}}],["1,k(j)),reft(j),j",{"_index":2351,"t":{},"b":{"4":{}}}],["1,nbe",{"_index":2352,"t":{},"b":{"4":{}}}],["1,nbv",{"_index":2355,"t":{},"b":{"4":{}}}],["1,p",{"_index":14283,"t":{},"b":{"64":{}}}],["1,period",{"_index":6482,"t":{},"b":{"13":{}}}],["1,regionlist",{"_index":6745,"t":{},"b":{"13":{}}}],["1,th3sphrefin",{"_index":6766,"t":{},"b":{"13":{}}}],["1,th3sphrefine2",{"_index":6768,"t":{},"b":{"13":{}}}],["1,y,z],[2,y,z",{"_index":4074,"t":{},"b":{"11":{}}}],["1,~~~\\sum_i\\lambda_i\\vec",{"_index":15100,"t":{},"b":{"76":{}}}],["1,…,15",{"_index":7782,"t":{},"b":{"15":{}}}],["1,…,40",{"_index":7779,"t":{},"b":{"15":{}}}],["1.)*t*cos(t",{"_index":6597,"t":{},"b":{"13":{}}}],["1.)*t*sin(t",{"_index":6598,"t":{},"b":{"13":{}}}],["1.){real",{"_index":13865,"t":{},"b":{"60":{}}}],["1.){x",{"_index":13862,"t":{},"b":{"60":{},"62":{},"66":{},"69":{}}}],["1.+1e",{"_index":9488,"t":{},"b":{"26":{}}}],["1.+2.*t",{"_index":14138,"t":{},"b":{"62":{}}}],["1.+4.*t",{"_index":14145,"t":{},"b":{"62":{}}}],["1.+t",{"_index":14046,"t":{},"b":{"61":{},"69":{}}}],["1.+u)*(1.+u",{"_index":11796,"t":{},"b":{"47":{}}}],["1..,n_p",{"_index":7636,"t":{},"b":{"15":{}}}],["1...n,\\varphi",{"_index":11921,"t":{},"b":{"48":{}}}],["1./(2*k.area",{"_index":2616,"t":{},"b":{"4":{}}}],["1./(2+i+j",{"_index":9094,"t":{},"b":{"21":{}}}],["1./(b",{"_index":13619,"t":{},"b":{"54":{}}}],["1./(e*e",{"_index":1675,"t":{},"b":{"3":{},"20":{}}}],["1./(rr*rr",{"_index":1676,"t":{},"b":{"3":{},"20":{}}}],["1./(square(2*pi)*13.))*cos(3*2*pi*x)*cos(2*2*pi*i",{"_index":8788,"t":{},"b":{"21":{}}}],["1./0",{"_index":9243,"t":{},"b":{"21":{}}}],["1./1000",{"_index":14122,"t":{},"b":{"61":{}}}],["1./2",{"_index":8622,"t":{},"b":{"20":{}}}],["1./3",{"_index":4753,"t":{},"b":{"11":{}}}],["1./3.*int2d(th)(rho3*sin(i",{"_index":1807,"t":{},"b":{"3":{},"20":{}}}],["1./30",{"_index":5613,"t":{},"b":{"13":{},"24":{}}}],["1./4",{"_index":4757,"t":{},"b":{"11":{}}}],["1./50",{"_index":14821,"t":{},"b":{"73":{}}}],["1./n",{"_index":8778,"t":{},"b":{"21":{}}}],["1./nn",{"_index":6060,"t":{},"b":{"13":{}}}],["1./nu",{"_index":14877,"t":{},"b":{"73":{}}}],["1./reylnod",{"_index":14103,"t":{},"b":{"61":{}}}],["1./sqrtpsi",{"_index":1751,"t":{},"b":{"3":{},"20":{}}}],["1./sqrtpsi3",{"_index":1794,"t":{},"b":{"3":{},"20":{}}}],["1.0",{"_index":3001,"t":{},"b":{"5":{},"13":{},"15":{},"32":{},"37":{},"41":{},"71":{}}}],["1.0){x",{"_index":7038,"t":{},"b":{"13":{},"48":{}}}],["1.0000000000000000199e+30",{"_index":9041,"t":{},"b":{"21":{}}}],["1.000000000000000222",{"_index":9059,"t":{},"b":{"21":{}}}],["1.03",{"_index":8885,"t":{},"b":{"21":{}}}],["1.03883e",{"_index":10574,"t":{},"b":{"39":{}}}],["1.040834086e",{"_index":9071,"t":{},"b":{"21":{}}}],["1.06274e",{"_index":10571,"t":{},"b":{"39":{}}}],["1.0e",{"_index":5573,"t":{},"b":{"13":{},"48":{}}}],["1.1",{"_index":5555,"t":{},"b":{"13":{},"24":{},"77":{}}}],["1.1*cos(t);i",{"_index":6502,"t":{},"b":{"13":{}}}],["1.1*sin(t);label",{"_index":6503,"t":{},"b":{"13":{}}}],["1.11022e",{"_index":9049,"t":{},"b":{"21":{}}}],["1.2",{"_index":5139,"t":{},"b":{"13":{},"24":{}}}],["1.2.10",{"_index":9860,"t":{},"b":{"33":{}}}],["1.2246467991473532072e",{"_index":9052,"t":{},"b":{"21":{}}}],["1.224646799e",{"_index":9040,"t":{},"b":{"21":{}}}],["1.22554e",{"_index":10568,"t":{},"b":{"39":{}}}],["1.25",{"_index":9044,"t":{},"b":{"21":{}}}],["1.2522e",{"_index":10602,"t":{},"b":{"39":{}}}],["1.3",{"_index":708,"t":{},"b":{"3":{},"13":{}}}],["1.3.1",{"_index":6668,"t":{},"b":{"13":{}}}],["1.38242e",{"_index":10599,"t":{},"b":{"39":{}}}],["1.41421",{"_index":13804,"t":{},"b":{"58":{}}}],["1.41421i",{"_index":8854,"t":{},"b":{"21":{}}}],["1.46",{"_index":12454,"t":{},"b":{"51":{}}}],["1.46519e",{"_index":10554,"t":{},"b":{"39":{}}}],["1.47016e",{"_index":14292,"t":{},"b":{"64":{}}}],["1.5",{"_index":5160,"t":{},"b":{"13":{},"21":{},"24":{},"43":{},"45":{},"61":{}}}],["1.5*t",{"_index":5161,"t":{},"b":{"13":{},"24":{}}}],["1.51",{"_index":3758,"t":{},"b":{"10":{}}}],["1.53526+16.5233i",{"_index":8847,"t":{},"b":{"21":{}}}],["1.5827",{"_index":14297,"t":{},"b":{"64":{}}}],["1.67",{"_index":4771,"t":{},"b":{"11":{}}}],["1.692+1.19883i",{"_index":8848,"t":{},"b":{"21":{}}}],["1.72738",{"_index":13806,"t":{},"b":{"58":{}}}],["1.732",{"_index":12077,"t":{},"b":{"48":{}}}],["1.734723476e",{"_index":9072,"t":{},"b":{"21":{}}}],["1.74257e",{"_index":10565,"t":{},"b":{"39":{}}}],["1.8",{"_index":5140,"t":{},"b":{"13":{},"24":{},"41":{},"67":{}}}],["1.8*(y<0.5",{"_index":4820,"t":{},"b":{"11":{},"79":{}}}],["1.8096e",{"_index":14294,"t":{},"b":{"64":{}}}],["1.81",{"_index":3754,"t":{},"b":{"10":{}}}],["1.92*epp/kp",{"_index":14077,"t":{},"b":{"61":{}}}],["1.98",{"_index":14788,"t":{},"b":{"72":{}}}],["1.9829",{"_index":14786,"t":{},"b":{"72":{}}}],["1.:0.5:3.999",{"_index":8910,"t":{},"b":{"21":{}}}],["1.e",{"_index":751,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"13":{},"20":{},"24":{},"25":{},"37":{},"38":{},"42":{},"45":{},"60":{},"61":{},"75":{}}}],["1.e0",{"_index":10361,"t":{},"b":{"37":{}}}],["1.e19",{"_index":1375,"t":{},"b":{"3":{},"20":{}}}],["1.e3",{"_index":10357,"t":{},"b":{"37":{}}}],["1.ep",{"_index":5614,"t":{},"b":{"13":{}}}],["1.true",{"_index":5582,"t":{},"b":{"13":{}}}],["1/((1+u)*(1+u",{"_index":8655,"t":{},"b":{"20":{}}}],["1/(1",{"_index":14182,"t":{},"b":{"63":{}}}],["1/(1+u)^2",{"_index":8648,"t":{},"b":{"20":{}}}],["1/(a",{"_index":13612,"t":{},"b":{"54":{}}}],["1/(b",{"_index":13615,"t":{},"b":{"54":{}}}],["1/0",{"_index":9245,"t":{},"b":{"21":{}}}],["1/2",{"_index":613,"t":{},"b":{"3":{},"11":{},"20":{},"41":{}}}],["1/2)^2",{"_index":4353,"t":{},"b":{"11":{},"13":{}}}],["1/2,1",{"_index":11020,"t":{},"b":{"41":{}}}],["1/2,1[^2",{"_index":6142,"t":{},"b":{"13":{}}}],["1/200",{"_index":14823,"t":{},"b":{"73":{}}}],["1/2\\leq",{"_index":11025,"t":{},"b":{"41":{}}}],["1/\\epsilon)bu_h^{\\epsilon",{"_index":11481,"t":{},"b":{"45":{}}}],["1/\\sqrt{2",{"_index":5550,"t":{},"b":{"13":{}}}],["1/\\sqrt{n",{"_index":2879,"t":{},"b":{"4":{}}}],["1/dt",{"_index":11524,"t":{},"b":{"45":{},"61":{}}}],["1/k",{"_index":3537,"t":{},"b":{"8":{}}}],["1/square(hh",{"_index":6321,"t":{},"b":{"13":{},"24":{},"25":{}}}],["10",{"_index":563,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"56":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["10((x",{"_index":11169,"t":{},"b":{"41":{}}}],["10(x^2+y^2)^{1/4}\\sin\\left([\\tan",{"_index":12170,"t":{},"b":{"48":{}}}],["10){x",{"_index":10725,"t":{},"b":{"40":{},"42":{}}}],["10)¶\\[\\p^1_{h",{"_index":3818,"t":{},"b":{"11":{}}}],["10*((x",{"_index":11161,"t":{},"b":{"41":{},"77":{}}}],["10*((x<1)*(y<0.5",{"_index":14104,"t":{},"b":{"61":{}}}],["10*(i",{"_index":2946,"t":{},"b":{"4":{}}}],["10*(region",{"_index":12338,"t":{},"b":{"49":{}}}],["10*(u1*dx(v",{"_index":14436,"t":{},"b":{"66":{}}}],["10*(x+y/3",{"_index":2945,"t":{},"b":{"4":{}}}],["10*d",{"_index":10815,"t":{},"b":{"40":{}}}],["10*d)*(1",{"_index":10841,"t":{},"b":{"40":{}}}],["10*d)*t",{"_index":10840,"t":{},"b":{"40":{}}}],["10*d)*t+tip*(1",{"_index":10844,"t":{},"b":{"40":{}}}],["10*d\\le",{"_index":10819,"t":{},"b":{"40":{}}}],["10*p*pp",{"_index":15246,"t":{},"b":{"78":{}}}],["10*sqrt(x*x+y*i",{"_index":6984,"t":{},"b":{"13":{}}}],["10*t",{"_index":11641,"t":{},"b":{"45":{}}}],["10*thii.area",{"_index":9469,"t":{},"b":{"26":{}}}],["10*u*v",{"_index":12137,"t":{},"b":{"48":{}}}],["10*v*((x",{"_index":12138,"t":{},"b":{"48":{}}}],["10+20)+10)*2",{"_index":9301,"t":{},"b":{"24":{}}}],["10+i",{"_index":8469,"t":{},"b":{"18":{}}}],["10+t",{"_index":11255,"t":{},"b":{"42":{}}}],["10,0",{"_index":8978,"t":{},"b":{"21":{}}}],["10,10,10",{"_index":6038,"t":{},"b":{"13":{}}}],["10.*pi){x",{"_index":6596,"t":{},"b":{"13":{}}}],["10.0*x^3",{"_index":5506,"t":{},"b":{"13":{},"24":{}}}],["10.0011",{"_index":10559,"t":{},"b":{"39":{}}}],["10.0x^3+y^3+\\tan",{"_index":5498,"t":{},"b":{"13":{}}}],["10.10.5",{"_index":9829,"t":{},"b":{"32":{},"35":{}}}],["10.13",{"_index":9997,"t":{},"b":{"35":{}}}],["10.13.5",{"_index":10122,"t":{},"b":{"35":{}}}],["10.3",{"_index":2737,"t":{},"b":{"4":{}}}],["10.4",{"_index":11440,"t":{},"b":{"45":{}}}],["10.5",{"_index":13714,"t":{},"b":{"54":{}}}],["10.7",{"_index":10152,"t":{},"b":{"35":{}}}],["10.^(+(i",{"_index":12243,"t":{},"b":{"48":{}}}],["100",{"_index":559,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"24":{},"26":{},"27":{},"35":{},"37":{},"38":{},"41":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"64":{},"67":{},"73":{},"74":{}}}],["100*p*q",{"_index":11598,"t":{},"b":{"45":{}}}],["1000",{"_index":7160,"t":{},"b":{"13":{},"15":{},"20":{},"50":{}}}],["10000",{"_index":2129,"t":{},"b":{"3":{},"13":{},"24":{},"48":{}}}],["10000*(al+1",{"_index":8726,"t":{},"b":{"20":{}}}],["100000",{"_index":1508,"t":{},"b":{"3":{},"13":{},"74":{}}}],["1000000",{"_index":2103,"t":{},"b":{"3":{}}}],["101",{"_index":1234,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["102",{"_index":1237,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["1024",{"_index":2830,"t":{},"b":{"4":{},"18":{}}}],["103",{"_index":2071,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["104",{"_index":2072,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["105",{"_index":2074,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["106",{"_index":34,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["107",{"_index":2077,"t":{},"b":{"3":{},"10":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"67":{},"73":{},"74":{}}}],["108",{"_index":2078,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"67":{},"73":{},"74":{}}}],["109",{"_index":2079,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"67":{},"73":{},"74":{}}}],["10;//right",{"_index":1427,"t":{},"b":{"3":{}}}],["10\\time",{"_index":4017,"t":{},"b":{"11":{}}}],["10^6",{"_index":8076,"t":{},"b":{"15":{}}}],["10^\\circ",{"_index":5596,"t":{},"b":{"13":{}}}],["10^{3",{"_index":831,"t":{},"b":{"3":{}}}],["10^{30",{"_index":4517,"t":{},"b":{"11":{},"39":{},"68":{},"76":{}}}],["10^{30}*0",{"_index":15125,"t":{},"b":{"76":{}}}],["10^{6",{"_index":1296,"t":{},"b":{"3":{}}}],["10_1\\quad",{"_index":6826,"t":{},"b":{"13":{}}}],["10_2\\quad",{"_index":6827,"t":{},"b":{"13":{}}}],["10e",{"_index":15247,"t":{},"b":{"78":{}}}],["10ghz",{"_index":3757,"t":{},"b":{"10":{}}}],["10i",{"_index":8945,"t":{},"b":{"21":{}}}],["10th",{"_index":6803,"t":{},"b":{"13":{}}}],["10x10",{"_index":4351,"t":{},"b":{"11":{}}}],["11",{"_index":402,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"32":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"56":{},"57":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["11)¶\\[\\p^1_{dc|h",{"_index":3823,"t":{},"b":{"11":{}}}],["11*x^2",{"_index":11033,"t":{},"b":{"41":{}}}],["11.42",{"_index":8969,"t":{},"b":{"21":{}}}],["11.5/h",{"_index":7141,"t":{},"b":{"13":{}}}],["11.thi",{"_index":7096,"t":{},"b":{"13":{}}}],["110",{"_index":2081,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"73":{},"74":{}}}],["111",{"_index":2084,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"73":{},"74":{}}}],["111.16",{"_index":8002,"t":{},"b":{"15":{}}}],["112",{"_index":2085,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"73":{},"74":{}}}],["113",{"_index":2086,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"73":{},"74":{}}}],["114",{"_index":2087,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"73":{},"74":{}}}],["115",{"_index":2088,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["116",{"_index":2092,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["117",{"_index":2093,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["1176",{"_index":342,"t":{},"b":{"2":{}}}],["118",{"_index":2094,"t":{},"b":{"3":{},"13":{},"15":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["119",{"_index":2096,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["11th",{"_index":10609,"t":{},"b":{"39":{}}}],["12",{"_index":626,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["12)¶\\[\\p^1_{b|h",{"_index":3828,"t":{},"b":{"11":{}}}],["12*x",{"_index":11032,"t":{},"b":{"41":{}}}],["12,13",{"_index":5250,"t":{},"b":{"13":{}}}],["12.4",{"_index":9838,"t":{},"b":{"32":{}}}],["12.7078i",{"_index":8856,"t":{},"b":{"21":{}}}],["120",{"_index":2099,"t":{},"b":{"3":{},"13":{},"19":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"66":{},"74":{}}}],["120*(region",{"_index":14429,"t":{},"b":{"66":{}}}],["120.34",{"_index":8079,"t":{},"b":{"15":{}}}],["1209",{"_index":387,"t":{},"b":{"2":{}}}],["121",{"_index":1514,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"64":{},"74":{}}}],["1218",{"_index":388,"t":{},"b":{"2":{}}}],["122",{"_index":1515,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"61":{},"74":{}}}],["123",{"_index":233,"t":{},"b":{"2":{},"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{},"74":{}}}],["12345",{"_index":8210,"t":{},"b":{"15":{}}}],["124",{"_index":2100,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{},"74":{}}}],["125",{"_index":2101,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["126",{"_index":2102,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["127",{"_index":2104,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["128",{"_index":2106,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["129",{"_index":2107,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["12th",{"_index":10612,"t":{},"b":{"39":{}}}],["12tx^2",{"_index":10935,"t":{},"b":{"41":{}}}],["13",{"_index":365,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["13)¶\\[\\p^1_{b|h",{"_index":3834,"t":{},"b":{"11":{}}}],["13.002",{"_index":10564,"t":{},"b":{"39":{}}}],["13.0039",{"_index":10567,"t":{},"b":{"39":{}}}],["13.thi",{"_index":7080,"t":{},"b":{"13":{}}}],["130",{"_index":2108,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["131",{"_index":2110,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["132",{"_index":2112,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["133",{"_index":2114,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"54":{},"61":{}}}],["134",{"_index":2116,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"48":{},"61":{}}}],["135",{"_index":2117,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"48":{},"61":{}}}],["136",{"_index":2118,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"48":{},"61":{}}}],["137",{"_index":2119,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"48":{},"61":{}}}],["138",{"_index":234,"t":{},"b":{"2":{},"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"48":{},"61":{}}}],["139",{"_index":2122,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["13\\sqrt{70})}{1800}g\\left",{"_index":13845,"t":{},"b":{"59":{}}}],["13\\sqrt{70}}{1800}||q^iq^j",{"_index":4648,"t":{},"b":{"11":{}}}],["13\\times10^6",{"_index":7986,"t":{},"b":{"15":{}}}],["14",{"_index":627,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["14)¶\\[rt0_{h",{"_index":3914,"t":{},"b":{"11":{}}}],["14.695",{"_index":14165,"t":{},"b":{"62":{}}}],["140",{"_index":2124,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["141",{"_index":2127,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["1416",{"_index":2831,"t":{},"b":{"4":{}}}],["142",{"_index":2130,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["143",{"_index":2131,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["144",{"_index":2133,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["145",{"_index":2134,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["145,18",{"_index":6747,"t":{},"b":{"13":{}}}],["145,53",{"_index":6756,"t":{},"b":{"13":{}}}],["145.64",{"_index":8162,"t":{},"b":{"15":{}}}],["146",{"_index":2135,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["147",{"_index":2138,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"45":{},"48":{},"61":{}}}],["148",{"_index":2140,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"45":{},"61":{}}}],["149",{"_index":2141,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"45":{},"61":{}}}],["1491.83",{"_index":8159,"t":{},"b":{"15":{}}}],["14\\sqrt{70}}{21})/2",{"_index":4646,"t":{},"b":{"11":{}}}],["14\\sqrt{70}}}{21}}{2",{"_index":13851,"t":{},"b":{"59":{}}}],["15",{"_index":628,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["15)¶\\[rt0_{h",{"_index":3918,"t":{},"b":{"11":{}}}],["150",{"_index":2143,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"45":{},"48":{},"61":{}}}],["150],'colorbar','off",{"_index":14694,"t":{},"b":{"71":{}}}],["151",{"_index":2144,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"45":{},"61":{}}}],["152",{"_index":2145,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"45":{},"61":{}}}],["153",{"_index":2148,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"61":{}}}],["1536",{"_index":3755,"t":{},"b":{"10":{}}}],["154",{"_index":2149,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"61":{}}}],["155",{"_index":2150,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"61":{}}}],["156",{"_index":2151,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"40":{},"61":{}}}],["157",{"_index":2152,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"39":{},"61":{}}}],["1570",{"_index":9807,"t":{},"b":{"30":{}}}],["158",{"_index":2153,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"39":{},"61":{}}}],["159",{"_index":2154,"t":{},"b":{"3":{},"20":{},"21":{},"26":{},"37":{},"41":{},"61":{}}}],["16",{"_index":629,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["16)¶\\[rt0ortho{h",{"_index":3937,"t":{},"b":{"11":{}}}],["16*(iz+1",{"_index":5919,"t":{},"b":{"13":{},"24":{}}}],["16,2.5",{"_index":9050,"t":{},"b":{"21":{}}}],["16.)/2",{"_index":12244,"t":{},"b":{"48":{}}}],["16.04",{"_index":9832,"t":{},"b":{"32":{},"35":{}}}],["160",{"_index":8657,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"41":{},"61":{}}}],["161",{"_index":8658,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"41":{},"61":{}}}],["162",{"_index":8659,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"41":{},"61":{}}}],["163",{"_index":8660,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"41":{},"61":{}}}],["164",{"_index":8661,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"45":{},"61":{}}}],["165",{"_index":8662,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["166",{"_index":8663,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["167",{"_index":8664,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["167.5",{"_index":8000,"t":{},"b":{"15":{}}}],["168",{"_index":8665,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["169",{"_index":8666,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["16_1\\quad",{"_index":6823,"t":{},"b":{"13":{}}}],["16_2\\quad",{"_index":6824,"t":{},"b":{"13":{}}}],["16_3\\quad",{"_index":6825,"t":{},"b":{"13":{}}}],["16ghz",{"_index":3760,"t":{},"b":{"10":{}}}],["17",{"_index":630,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["17)¶\\[rt1_{h",{"_index":3967,"t":{},"b":{"11":{}}}],["17.0046",{"_index":10570,"t":{},"b":{"39":{}}}],["17.0048",{"_index":10573,"t":{},"b":{"39":{}}}],["17.2",{"_index":11488,"t":{},"b":{"45":{}}}],["17.3",{"_index":11531,"t":{},"b":{"45":{}}}],["170",{"_index":8667,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"38":{},"61":{}}}],["171",{"_index":8668,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"42":{},"61":{}}}],["172",{"_index":8669,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"42":{},"61":{}}}],["173",{"_index":8670,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"42":{},"61":{}}}],["174",{"_index":8671,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"49":{},"61":{}}}],["175",{"_index":8672,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"49":{},"61":{}}}],["176",{"_index":8673,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"49":{},"61":{}}}],["177",{"_index":8674,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"43":{},"61":{}}}],["178",{"_index":8675,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"43":{},"61":{}}}],["179",{"_index":8676,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"43":{},"61":{}}}],["18",{"_index":631,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["18)¶\\[rt1_{h",{"_index":3970,"t":{},"b":{"11":{}}}],["18*t^1.2",{"_index":14916,"t":{},"b":{"74":{}}}],["18+\\sqrt{30})g\\left",{"_index":13838,"t":{},"b":{"59":{}}}],["18.0083",{"_index":10576,"t":{},"b":{"39":{}}}],["18.04",{"_index":10121,"t":{},"b":{"35":{}}}],["180",{"_index":8677,"t":{},"b":{"20":{},"21":{},"26":{},"37":{},"46":{},"61":{}}}],["181",{"_index":8678,"t":{},"b":{"20":{},"21":{},"25":{},"26":{},"37":{},"61":{}}}],["182",{"_index":8679,"t":{},"b":{"20":{},"21":{},"25":{},"26":{},"37":{},"61":{}}}],["183",{"_index":311,"t":{},"b":{"2":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"61":{}}}],["184",{"_index":312,"t":{},"b":{"2":{},"20":{},"21":{},"25":{},"26":{},"37":{},"61":{}}}],["185",{"_index":8680,"t":{},"b":{"20":{},"21":{},"25":{},"26":{},"32":{},"37":{},"61":{}}}],["186",{"_index":8082,"t":{},"b":{"15":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["187",{"_index":8681,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["188",{"_index":8682,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["189",{"_index":8080,"t":{},"b":{"15":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["19",{"_index":633,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["19)¶\\[rt2_{h",{"_index":3972,"t":{},"b":{"11":{}}}],["190",{"_index":8078,"t":{},"b":{"15":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["191",{"_index":8683,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["192",{"_index":8684,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["193",{"_index":8685,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["194",{"_index":8686,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["195",{"_index":8687,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["196",{"_index":8688,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["197",{"_index":8689,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["1977",{"_index":300,"t":{},"b":{"2":{}}}],["1979",{"_index":326,"t":{},"b":{"2":{}}}],["198",{"_index":3751,"t":{},"b":{"10":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["1980",{"_index":426,"t":{},"b":{"2":{}}}],["1983",{"_index":14721,"t":{},"b":{"72":{}}}],["1984",{"_index":198,"t":{},"b":{"2":{}}}],["1985",{"_index":84,"t":{},"b":{"2":{}}}],["1986",{"_index":14720,"t":{},"b":{"72":{}}}],["1987",{"_index":9874,"t":{},"b":{"33":{}}}],["1988",{"_index":14718,"t":{},"b":{"72":{}}}],["1989",{"_index":178,"t":{},"b":{"2":{}}}],["199",{"_index":1240,"t":{},"b":{"3":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["1992",{"_index":147,"t":{},"b":{"2":{},"33":{}}}],["1993",{"_index":310,"t":{},"b":{"2":{}}}],["1994",{"_index":278,"t":{},"b":{"2":{}}}],["1995",{"_index":165,"t":{},"b":{"2":{}}}],["1996",{"_index":63,"t":{},"b":{"2":{},"33":{}}}],["1997",{"_index":472,"t":{},"b":{"2":{}}}],["1998",{"_index":13,"t":{},"b":{"2":{},"33":{}}}],["1999",{"_index":9880,"t":{},"b":{"33":{}}}],["1:10",{"_index":13791,"t":{},"b":{"57":{}}}],["1:2:5",{"_index":8909,"t":{},"b":{"21":{}}}],["1:nbbe",{"_index":2340,"t":{},"b":{"4":{}}}],["1:nbt",{"_index":2314,"t":{},"b":{"4":{}}}],["1:nbv",{"_index":2317,"t":{},"b":{"4":{}}}],["1;\\qquad",{"_index":15123,"t":{},"b":{"76":{}}}],["1<x<1",{"_index":10812,"t":{},"b":{"40":{},"48":{}}}],["1<y<1\\},\\qquad",{"_index":10813,"t":{},"b":{"40":{}}}],["1\\le",{"_index":3528,"t":{},"b":{"8":{},"40":{},"48":{},"49":{}}}],["1\\leq",{"_index":1088,"t":{},"b":{"3":{}}}],["1\\over",{"_index":11238,"t":{},"b":{"42":{},"64":{},"74":{},"79":{}}}],["1\\pm\\frac{245",{"_index":4645,"t":{},"b":{"11":{}}}],["1\\pm\\frac{245+14\\sqrt{70}}{21})/2",{"_index":4644,"t":{},"b":{"11":{}}}],["1\\pm\\frac{525",{"_index":4638,"t":{},"b":{"11":{}}}],["1\\pm\\frac{525+70\\sqrt{30}}{35})/2",{"_index":4637,"t":{},"b":{"11":{}}}],["1\\pm\\sqrt{1/3})/2",{"_index":4630,"t":{},"b":{"11":{}}}],["1\\pm\\sqrt{3/5})/2",{"_index":4633,"t":{},"b":{"11":{}}}],["1](int",{"_index":2269,"t":{},"b":{"4":{}}}],["1].i",{"_index":7332,"t":{},"b":{"14":{}}}],["1].x",{"_index":7331,"t":{},"b":{"14":{}}}],["1];//constraint",{"_index":1455,"t":{},"b":{"3":{}}}],["1][j",{"_index":7330,"t":{},"b":{"14":{}}}],["1]\\cos(\\theta_k/2",{"_index":10798,"t":{},"b":{"40":{}}}],["1]\\sin(\\theta_k/2)+3\\sin(3\\theta_k/2",{"_index":10802,"t":{},"b":{"40":{}}}],["1]^3",{"_index":5915,"t":{},"b":{"13":{}}}],["1_1",{"_index":6895,"t":{},"b":{"13":{}}}],["1_1\\quad",{"_index":6817,"t":{},"b":{"13":{}}}],["1_2",{"_index":6896,"t":{},"b":{"13":{}}}],["1_2\\quad",{"_index":6818,"t":{},"b":{"13":{}}}],["1_3",{"_index":6897,"t":{},"b":{"13":{}}}],["1_3\\quad",{"_index":6819,"t":{},"b":{"13":{}}}],["1_4",{"_index":6898,"t":{},"b":{"13":{}}}],["1d",{"_index":2856,"t":{},"b":{"4":{},"11":{},"13":{},"16":{},"34":{},"36":{},"41":{},"54":{}}}],["1d,2d,3d",{"_index":9887,"t":{},"b":{"33":{}}}],["1e",{"_index":773,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"39":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"62":{},"73":{},"74":{},"78":{},"79":{}}}],["1e+30",{"_index":9047,"t":{},"b":{"21":{}}}],["1e100",{"_index":2121,"t":{},"b":{"3":{}}}],["1e19",{"_index":1476,"t":{},"b":{"3":{}}}],["1e2",{"_index":11728,"t":{},"b":{"46":{}}}],["1e30",{"_index":4834,"t":{},"b":{"11":{},"39":{},"48":{},"50":{},"60":{},"68":{}}}],["1e5*(vr^2",{"_index":14230,"t":{},"b":{"63":{}}}],["1e^{19",{"_index":1153,"t":{},"b":{"3":{}}}],["1i",{"_index":13513,"t":{},"b":{"54":{},"60":{}}}],["1i*i",{"_index":13900,"t":{},"b":{"60":{}}}],["1st",{"_index":4194,"t":{},"b":{"11":{},"13":{},"37":{}}}],["1x",{"_index":11949,"t":{},"b":{"48":{}}}],["1{(\\gamma",{"_index":14458,"t":{},"b":{"67":{}}}],["1{\\delta",{"_index":14013,"t":{},"b":{"61":{}}}],["1||i",{"_index":13952,"t":{},"b":{"60":{}}}],["1}(\\mathbf{f}_h",{"_index":11537,"t":{},"b":{"45":{}}}],["1}(\\omega",{"_index":12361,"t":{},"b":{"50":{}}}],["1}(x",{"_index":11110,"t":{},"b":{"41":{}}}],["1}(x,i",{"_index":3766,"t":{},"b":{"11":{}}}],["1}(x,y)}{\\tau",{"_index":10907,"t":{},"b":{"41":{}}}],["1}(y/x)]/2\\right)+30(x^2y^2",{"_index":12171,"t":{},"b":{"48":{}}}],["1}*\\nabla",{"_index":11788,"t":{},"b":{"47":{}}}],["1}*b*v",{"_index":10517,"t":{},"b":{"39":{}}}],["1}[\\varepsilon/(\\sin(5.0i",{"_index":5499,"t":{},"b":{"13":{}}}],["1}\\,\\mathbf{v}_{ik",{"_index":3660,"t":{},"b":{"8":{}}}],["1}\\,a",{"_index":3646,"t":{},"b":{"8":{}}}],["1}\\,d_i\\,\\mathbf{v}_{ik",{"_index":3659,"t":{},"b":{"8":{}}}],["1}\\,z^t",{"_index":3631,"t":{},"b":{"8":{}}}],["1}\\nabla\\times\\vec{h",{"_index":12412,"t":{},"b":{"51":{}}}],["1}\\nabla\\times\\vec{h}\\right",{"_index":12416,"t":{},"b":{"51":{}}}],["1}\\phi_{m",{"_index":3765,"t":{},"b":{"11":{}}}],["1}\\right",{"_index":10223,"t":{},"b":{"37":{},"54":{}}}],["1}\\|f^{k+\\theta}\\|^2_{v_h",{"_index":11016,"t":{},"b":{"41":{}}}],["1}\\|f^{k+\\theta}\\|^2_{v_h'}&\\theta\\in",{"_index":11019,"t":{},"b":{"41":{}}}],["1}^2",{"_index":10783,"t":{},"b":{"40":{}}}],["1}^2\\int_{\\omega}\\nabla",{"_index":11376,"t":{},"b":{"45":{}}}],["1}^6",{"_index":4331,"t":{},"b":{"11":{}}}],["1}^d",{"_index":3927,"t":{},"b":{"11":{},"41":{},"73":{}}}],["1}^d\\p",{"_index":3924,"t":{},"b":{"11":{}}}],["1}^j",{"_index":5202,"t":{},"b":{"13":{}}}],["1}^l",{"_index":4603,"t":{},"b":{"11":{}}}],["1}^n",{"_index":3089,"t":{},"b":{"5":{},"8":{},"10":{}}}],["1}^n(r_i",{"_index":3544,"t":{},"b":{"8":{}}}],["1}^n\\left({\\mathbf",{"_index":3545,"t":{},"b":{"8":{}}}],["1}^{l}{\\omega_\\el",{"_index":13812,"t":{},"b":{"59":{}}}],["1}^{m",{"_index":957,"t":{},"b":{"3":{}}}],["1}^{m}\\lambda_{\\mu,i}\\nabla",{"_index":970,"t":{},"b":{"3":{}}}],["1}^{m}\\lambda_{i}\\nabla^{2}c_{i}(x",{"_index":1130,"t":{},"b":{"3":{}}}],["1}^{m}f(q^i)\\phi_i(x,y)\\quad",{"_index":4141,"t":{},"b":{"11":{}}}],["1}^{m}w_k\\phi_k(x,i",{"_index":15106,"t":{},"b":{"76":{}}}],["1}^{n",{"_index":954,"t":{},"b":{"3":{}}}],["1}^{n_p",{"_index":7495,"t":{},"b":{"15":{}}}],["1}^{n_t}\\sum_{l",{"_index":4330,"t":{},"b":{"11":{}}}],["1}^{n_t}f(q^{k_b})\\beta_k(x,i",{"_index":4306,"t":{},"b":{"11":{}}}],["1}^{n_t}t_k",{"_index":4619,"t":{},"b":{"11":{},"14":{},"76":{}}}],["1}^{n_v}\\int_{t_k}|\\nabla",{"_index":4278,"t":{},"b":{"11":{}}}],["1}^{n_v}a(\\phi_i,\\phi_k)&\\g",{"_index":4286,"t":{},"b":{"11":{}}}],["1}^{n_v}f(m^i)\\phi_i(x,y)\\quad",{"_index":4263,"t":{},"b":{"11":{}}}],["1}^{n_v}f(q^i)\\phi_i(x,i",{"_index":4132,"t":{},"b":{"11":{}}}],["1}^{n_v}f(q^i)\\phi_i(x,y)+\\sum_{k",{"_index":4305,"t":{},"b":{"11":{}}}],["1}_1",{"_index":3176,"t":{},"b":{"5":{},"6":{},"9":{},"10":{}}}],["1}_1\\phantom",{"_index":3232,"t":{},"b":{"5":{}}}],["1}_2",{"_index":3209,"t":{},"b":{"5":{},"6":{},"10":{}}}],["1}_{2,\\text{adef1",{"_index":3288,"t":{},"b":{"5":{}}}],["1}_{\\text{asm",{"_index":3186,"t":{},"b":{"5":{}}}],["1}_{\\text{ora",{"_index":3196,"t":{},"b":{"5":{}}}],["1}_{\\text{ra",{"_index":3188,"t":{},"b":{"5":{},"10":{}}}],["1}_{\\text{sora",{"_index":3198,"t":{},"b":{"5":{}}}],["1}_{asm",{"_index":3656,"t":{},"b":{"8":{}}}],["1}_{nn",{"_index":3649,"t":{},"b":{"8":{}}}],["1}_{nn}\\,a",{"_index":3652,"t":{},"b":{"8":{}}}],["1}_{ra",{"_index":3595,"t":{},"b":{"8":{}}}],["1}_{|k_i",{"_index":4875,"t":{},"b":{"11":{}}}],["1}r_0",{"_index":7933,"t":{},"b":{"15":{}}}],["1}|\\delta\\mathbf{x",{"_index":10633,"t":{},"b":{"40":{}}}],["1}}{\\delta",{"_index":4783,"t":{},"b":{"11":{},"68":{},"79":{}}}],["2",{"_index":232,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"32":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["2)*(y<3)*(i",{"_index":14567,"t":{},"b":{"69":{}}}],["2)^2+\\frac{1}{3^2}y^2",{"_index":11927,"t":{},"b":{"48":{}}}],["2){x",{"_index":5006,"t":{},"b":{"11":{},"13":{},"15":{},"24":{},"38":{},"40":{},"42":{},"48":{},"63":{},"66":{},"67":{}}}],["2)¶\\[v_h(\\mathcal{t}_h,p_1",{"_index":15103,"t":{},"b":{"76":{}}}],["2*(1+b)*t",{"_index":5776,"t":{},"b":{"13":{}}}],["2*(x",{"_index":14566,"t":{},"b":{"69":{}}}],["2*30*(x^2+y^2",{"_index":12173,"t":{},"b":{"48":{}}}],["2*a",{"_index":8918,"t":{},"b":{"21":{}}}],["2*a){x",{"_index":5885,"t":{},"b":{"13":{},"24":{}}}],["2*a*t",{"_index":5795,"t":{},"b":{"13":{}}}],["2*abs(x)/a",{"_index":5780,"t":{},"b":{"13":{}}}],["2*b*c')(i",{"_index":8960,"t":{},"b":{"21":{}}}],["2*c){x",{"_index":5891,"t":{},"b":{"13":{},"24":{}}}],["2*cos(2*t)+3)*cos(t",{"_index":5704,"t":{},"b":{"13":{}}}],["2*cos(2*t)+3)*sin(t",{"_index":5705,"t":{},"b":{"13":{}}}],["2*cos(t",{"_index":6974,"t":{},"b":{"13":{}}}],["2*d){x",{"_index":5809,"t":{},"b":{"13":{},"40":{}}}],["2*ddf(dx(u)*dx(u",{"_index":11810,"t":{},"b":{"47":{}}}],["2*dx(u)*dy(v",{"_index":9014,"t":{},"b":{"21":{}}}],["2*dx(u1",{"_index":11292,"t":{},"b":{"42":{}}}],["2*dy(u2",{"_index":11294,"t":{},"b":{"42":{}}}],["2*f''()(dx(u)*dx(uh",{"_index":11804,"t":{},"b":{"47":{}}}],["2*i",{"_index":8572,"t":{},"b":{"19":{},"21":{},"27":{},"60":{}}}],["2*int2d(th)(ie*(u",{"_index":15045,"t":{},"b":{"75":{}}}],["2*k",{"_index":4507,"t":{},"b":{"11":{}}}],["2*m",{"_index":5874,"t":{},"b":{"13":{}}}],["2*mu",{"_index":11734,"t":{},"b":{"46":{}}}],["2*mu*(dx(u)*dx(w",{"_index":10855,"t":{},"b":{"40":{}}}],["2*mu*(t12*s12",{"_index":11738,"t":{},"b":{"46":{}}}],["2*mu*dx(u",{"_index":10863,"t":{},"b":{"40":{}}}],["2*mu*dy(v",{"_index":10864,"t":{},"b":{"40":{}}}],["2*nu",{"_index":14272,"t":{},"b":{"64":{}}}],["2*pi",{"_index":1861,"t":{},"b":{"3":{},"13":{},"20":{},"24":{},"45":{},"77":{}}}],["2*pi){x",{"_index":5211,"t":{},"b":{"13":{},"15":{},"21":{},"24":{},"25":{},"38":{},"41":{},"48":{},"66":{},"73":{},"75":{},"76":{},"81":{}}}],["2*pi*x",{"_index":1678,"t":{},"b":{"3":{},"20":{}}}],["2*pi/40",{"_index":1670,"t":{},"b":{"3":{},"20":{}}}],["2*pi/dt",{"_index":11163,"t":{},"b":{"41":{}}}],["2*pi/sqrt(ev[i",{"_index":12566,"t":{},"b":{"51":{}}}],["2*q*pi/5",{"_index":1855,"t":{},"b":{"3":{},"20":{}}}],["2*q*pi/5.+pi/5",{"_index":1857,"t":{},"b":{"3":{},"20":{}}}],["2*rho*dx(rho)*dx(w)*v",{"_index":1788,"t":{},"b":{"3":{},"20":{}}}],["2*rho*dx(rho)*w*dx(v",{"_index":1789,"t":{},"b":{"3":{},"20":{}}}],["2*rho*dy(rho)*sin2*dy(w)*v",{"_index":1790,"t":{},"b":{"3":{},"20":{}}}],["2*rho*dy(rho)*sin2*w*dy(v",{"_index":1791,"t":{},"b":{"3":{},"20":{}}}],["2*rho2*rho*sin2",{"_index":1775,"t":{},"b":{"3":{},"20":{}}}],["2*s12,0",{"_index":11737,"t":{},"b":{"46":{}}}],["2*sigma",{"_index":6172,"t":{},"b":{"13":{},"40":{},"42":{}}}],["2*sin(t",{"_index":6975,"t":{},"b":{"13":{}}}],["2*sparsea",{"_index":4921,"t":{},"b":{"11":{}}}],["2*t12",{"_index":11736,"t":{},"b":{"46":{}}}],["2*uek",{"_index":15323,"t":{},"b":{"79":{}}}],["2*uu",{"_index":12062,"t":{},"b":{"48":{}}}],["2*vh.ndof",{"_index":2036,"t":{},"b":{"3":{}}}],["2*w",{"_index":14777,"t":{},"b":{"72":{}}}],["2*x",{"_index":8571,"t":{},"b":{"19":{},"21":{},"27":{},"60":{}}}],["2*x*pi",{"_index":12076,"t":{},"b":{"48":{}}}],["2*x*x",{"_index":8047,"t":{},"b":{"15":{}}}],["2*x^3",{"_index":11034,"t":{},"b":{"41":{}}}],["2*y*pi",{"_index":6295,"t":{},"b":{"13":{},"24":{},"25":{},"48":{}}}],["2+0.3*cos(t",{"_index":11932,"t":{},"b":{"48":{}}}],["2+20*t",{"_index":14917,"t":{},"b":{"74":{}}}],["2+4*i",{"_index":13896,"t":{},"b":{"60":{}}}],["2+4*x",{"_index":13895,"t":{},"b":{"60":{}}}],["2+cos(t",{"_index":15415,"t":{},"b":{"81":{}}}],["2,0",{"_index":5649,"t":{},"b":{"13":{},"21":{}}}],["2,1",{"_index":5654,"t":{},"b":{"13":{}}}],["2,2",{"_index":2988,"t":{},"b":{"5":{}}}],["2,3",{"_index":4451,"t":{},"b":{"11":{},"41":{},"73":{}}}],["2,4",{"_index":13856,"t":{},"b":{"60":{}}}],["2,c",{"_index":15054,"t":{},"b":{"75":{}}}],["2.*dxy(u)*dxy(v",{"_index":3900,"t":{},"b":{"11":{}}}],["2.*mu",{"_index":6185,"t":{},"b":{"13":{},"40":{},"64":{}}}],["2.*mu*(epsilon(w,s)'*epsilon(uu,vv",{"_index":11254,"t":{},"b":{"42":{}}}],["2.*pi",{"_index":6225,"t":{},"b":{"13":{},"76":{},"77":{}}}],["2.*pi){x",{"_index":9267,"t":{},"b":{"22":{},"37":{},"66":{},"69":{},"70":{},"72":{},"76":{}}}],["2.*pi*t",{"_index":13866,"t":{},"b":{"60":{}}}],["2.*pi/3",{"_index":1858,"t":{},"b":{"3":{},"20":{}}}],["2.*pi/dt",{"_index":15166,"t":{},"b":{"77":{}}}],["2.*rho2*rho*sin2",{"_index":1747,"t":{},"b":{"3":{},"20":{}}}],["2.*t",{"_index":14139,"t":{},"b":{"62":{}}}],["2.*x*x",{"_index":9323,"t":{},"b":{"25":{}}}],["2.+t",{"_index":14558,"t":{},"b":{"69":{}}}],["2.0",{"_index":164,"t":{},"b":{"2":{},"13":{},"37":{},"60":{},"71":{}}}],["2.0*x",{"_index":5510,"t":{},"b":{"13":{},"24":{}}}],["2.00125,c",{"_index":15058,"t":{},"b":{"75":{}}}],["2.081668171e",{"_index":9077,"t":{},"b":{"21":{}}}],["2.0x",{"_index":5500,"t":{},"b":{"13":{}}}],["2.1",{"_index":11308,"t":{},"b":{"43":{}}}],["2.13",{"_index":11009,"t":{},"b":{"41":{}}}],["2.15",{"_index":8887,"t":{},"b":{"21":{}}}],["2.2",{"_index":11371,"t":{},"b":{"45":{}}}],["2.2){x",{"_index":11580,"t":{},"b":{"45":{}}}],["2.2.4",{"_index":9912,"t":{},"b":{"34":{}}}],["2.21678e",{"_index":10580,"t":{},"b":{"39":{}}}],["2.25",{"_index":9045,"t":{},"b":{"21":{}}}],["2.3",{"_index":6097,"t":{},"b":{"13":{},"24":{}}}],["2.3+t",{"_index":6093,"t":{},"b":{"13":{},"24":{}}}],["2.41751e",{"_index":10608,"t":{},"b":{"39":{}}}],["2.428612866e",{"_index":9075,"t":{},"b":{"21":{}}}],["2.45",{"_index":8811,"t":{},"b":{"21":{}}}],["2.45+1.41421i",{"_index":8844,"t":{},"b":{"21":{}}}],["2.45+1.41421i)^3",{"_index":8851,"t":{},"b":{"21":{}}}],["2.45+5.33i",{"_index":8842,"t":{},"b":{"21":{}}}],["2.45,5.33",{"_index":8843,"t":{},"b":{"21":{}}}],["2.5",{"_index":6088,"t":{},"b":{"13":{},"21":{},"24":{},"35":{},"40":{},"48":{}}}],["2.5+t",{"_index":6089,"t":{},"b":{"13":{},"24":{}}}],["2.5.tar.gz",{"_index":10025,"t":{},"b":{"35":{}}}],["2.775557562e",{"_index":9073,"t":{},"b":{"21":{}}}],["2.84925e",{"_index":10560,"t":{},"b":{"39":{}}}],["2.97069",{"_index":13809,"t":{},"b":{"58":{}}}],["2.^2",{"_index":13797,"t":{},"b":{"58":{}}}],["2.ep",{"_index":5616,"t":{},"b":{"13":{}}}],["2/(1",{"_index":14183,"t":{},"b":{"63":{}}}],["20",{"_index":522,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["20(3",{"_index":9816,"t":{},"b":{"30":{}}}],["20)+c23",{"_index":14562,"t":{},"b":{"69":{}}}],["20)¶\\[rt2_{h",{"_index":3975,"t":{},"b":{"11":{}}}],["20*x,2*i",{"_index":14264,"t":{},"b":{"64":{}}}],["20,0",{"_index":14293,"t":{},"b":{"64":{}}}],["20,5,5",{"_index":6162,"t":{},"b":{"13":{}}}],["20,labelcolor",{"_index":12571,"t":{},"b":{"51":{}}}],["20.0096",{"_index":10579,"t":{},"b":{"39":{}}}],["20.3",{"_index":9819,"t":{},"b":{"30":{}}}],["200",{"_index":2139,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"20":{},"21":{},"24":{},"26":{},"37":{},"61":{},"64":{},"77":{}}}],["2000",{"_index":93,"t":{},"b":{"2":{}}}],["2002",{"_index":52,"t":{},"b":{"2":{}}}],["2003",{"_index":184,"t":{},"b":{"2":{}}}],["2004",{"_index":230,"t":{},"b":{"2":{},"7":{}}}],["2005",{"_index":294,"t":{},"b":{"2":{}}}],["2006",{"_index":32,"t":{},"b":{"2":{}}}],["2007",{"_index":384,"t":{},"b":{"2":{}}}],["2008",{"_index":9885,"t":{},"b":{"33":{}}}],["201",{"_index":8690,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["2012",{"_index":400,"t":{},"b":{"2":{},"30":{}}}],["2014",{"_index":9888,"t":{},"b":{"33":{}}}],["2015",{"_index":3572,"t":{},"b":{"8":{}}}],["2017",{"_index":258,"t":{},"b":{"2":{},"33":{}}}],["2018",{"_index":9891,"t":{},"b":{"33":{}}}],["2019",{"_index":3435,"t":{},"b":{"5":{}}}],["202",{"_index":8691,"t":{},"b":{"20":{},"21":{},"24":{},"26":{},"37":{},"61":{}}}],["2020",{"_index":9831,"t":{},"b":{"32":{}}}],["2021",{"_index":14412,"t":{},"b":{"66":{}}}],["203",{"_index":8692,"t":{},"b":{"20":{},"24":{},"26":{},"37":{},"61":{}}}],["204",{"_index":8694,"t":{},"b":{"20":{},"24":{},"26":{},"37":{},"61":{}}}],["205",{"_index":8695,"t":{},"b":{"20":{},"24":{},"26":{},"37":{},"61":{}}}],["206",{"_index":8696,"t":{},"b":{"20":{},"22":{},"26":{},"37":{},"61":{}}}],["207",{"_index":8697,"t":{},"b":{"20":{},"22":{},"26":{},"37":{},"61":{}}}],["208",{"_index":8739,"t":{},"b":{"20":{},"26":{},"27":{},"37":{},"61":{}}}],["209",{"_index":8740,"t":{},"b":{"20":{},"26":{},"27":{},"37":{},"61":{}}}],["20^\\circ",{"_index":14548,"t":{},"b":{"69":{}}}],["20i",{"_index":8946,"t":{},"b":{"21":{}}}],["21",{"_index":638,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["21)¶\\[bdm1_{h",{"_index":3980,"t":{},"b":{"11":{}}}],["21.5",{"_index":10724,"t":{},"b":{"40":{},"42":{}}}],["21.5e4",{"_index":6168,"t":{},"b":{"13":{},"40":{}}}],["210",{"_index":5947,"t":{},"b":{"13":{},"20":{},"26":{},"27":{},"37":{},"61":{}}}],["2107",{"_index":10155,"t":{},"b":{"35":{}}}],["211",{"_index":5952,"t":{},"b":{"13":{},"20":{},"26":{},"27":{},"37":{},"61":{}}}],["212",{"_index":8741,"t":{},"b":{"20":{},"26":{},"27":{},"32":{},"37":{}}}],["212.07",{"_index":7999,"t":{},"b":{"15":{}}}],["213",{"_index":8742,"t":{},"b":{"20":{},"26":{},"27":{},"37":{},"51":{}}}],["214",{"_index":8743,"t":{},"b":{"20":{},"26":{},"27":{},"37":{}}}],["215",{"_index":8698,"t":{},"b":{"20":{},"26":{},"37":{}}}],["216",{"_index":8699,"t":{},"b":{"20":{},"26":{},"37":{}}}],["217",{"_index":8730,"t":{},"b":{"20":{},"26":{},"37":{}}}],["218",{"_index":8744,"t":{},"b":{"20":{},"26":{},"37":{}}}],["219",{"_index":8745,"t":{},"b":{"20":{},"26":{},"37":{}}}],["21e5",{"_index":14262,"t":{},"b":{"64":{}}}],["22",{"_index":641,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["22)¶\\[bdm1ortho_{h",{"_index":3984,"t":{},"b":{"11":{}}}],["220",{"_index":8746,"t":{},"b":{"20":{},"26":{},"37":{}}}],["221",{"_index":8747,"t":{},"b":{"20":{},"21":{},"26":{},"37":{}}}],["221.34",{"_index":8077,"t":{},"b":{"15":{}}}],["222",{"_index":8748,"t":{},"b":{"20":{},"21":{},"26":{},"37":{}}}],["223",{"_index":8749,"t":{},"b":{"20":{},"21":{},"26":{},"37":{}}}],["224",{"_index":8750,"t":{},"b":{"20":{},"21":{},"26":{},"37":{}}}],["225",{"_index":8751,"t":{},"b":{"20":{},"21":{},"26":{},"37":{}}}],["226",{"_index":8752,"t":{},"b":{"20":{},"26":{},"37":{}}}],["227",{"_index":8753,"t":{},"b":{"20":{},"26":{},"37":{}}}],["228",{"_index":8754,"t":{},"b":{"20":{},"26":{},"37":{}}}],["229",{"_index":8755,"t":{},"b":{"20":{},"26":{},"37":{}}}],["23",{"_index":643,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["23)¶\\[{\\int_{\\omega",{"_index":4485,"t":{},"b":{"11":{}}}],["23.44",{"_index":8084,"t":{},"b":{"15":{}}}],["230",{"_index":7992,"t":{},"b":{"15":{},"20":{},"26":{},"37":{}}}],["231",{"_index":8756,"t":{},"b":{"20":{},"26":{},"37":{}}}],["232",{"_index":8757,"t":{},"b":{"20":{},"26":{},"37":{}}}],["233",{"_index":8758,"t":{},"b":{"20":{},"26":{},"37":{}}}],["234",{"_index":8759,"t":{},"b":{"20":{},"26":{},"37":{}}}],["235",{"_index":8760,"t":{},"b":{"20":{},"26":{},"37":{}}}],["236",{"_index":8762,"t":{},"b":{"20":{},"26":{},"37":{}}}],["237",{"_index":9495,"t":{},"b":{"26":{},"37":{}}}],["238",{"_index":9496,"t":{},"b":{"26":{},"37":{}}}],["239",{"_index":9497,"t":{},"b":{"26":{},"37":{}}}],["24",{"_index":320,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["24)¶\\[\\nabla",{"_index":494,"t":{},"b":{"3":{}}}],["240",{"_index":7995,"t":{},"b":{"15":{},"21":{},"26":{},"37":{}}}],["241",{"_index":9498,"t":{},"b":{"26":{},"37":{}}}],["242",{"_index":9499,"t":{},"b":{"26":{},"37":{}}}],["243",{"_index":327,"t":{},"b":{"2":{},"26":{},"37":{}}}],["244",{"_index":9500,"t":{},"b":{"26":{},"37":{}}}],["245",{"_index":9502,"t":{},"b":{"26":{},"37":{}}}],["246",{"_index":9503,"t":{},"b":{"26":{},"37":{}}}],["247",{"_index":7998,"t":{},"b":{"15":{},"26":{},"37":{}}}],["248",{"_index":9504,"t":{},"b":{"26":{},"37":{}}}],["248832",{"_index":13802,"t":{},"b":{"58":{}}}],["249",{"_index":9505,"t":{},"b":{"26":{},"37":{}}}],["25",{"_index":37,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["25)¶\\[\\begin{split}x_{0",{"_index":922,"t":{},"b":{"3":{}}}],["25.014",{"_index":10584,"t":{},"b":{"39":{}}}],["25.0283",{"_index":10587,"t":{},"b":{"39":{}}}],["250",{"_index":73,"t":{},"b":{"2":{},"26":{},"37":{}}}],["251",{"_index":9506,"t":{},"b":{"26":{},"30":{},"37":{}}}],["252",{"_index":74,"t":{},"b":{"2":{},"26":{},"37":{}}}],["253",{"_index":9507,"t":{},"b":{"26":{},"37":{}}}],["254",{"_index":9509,"t":{},"b":{"26":{},"37":{}}}],["255",{"_index":9510,"t":{},"b":{"26":{},"37":{}}}],["256",{"_index":9511,"t":{},"b":{"26":{},"37":{}}}],["257",{"_index":9512,"t":{},"b":{"26":{},"37":{}}}],["258",{"_index":9513,"t":{},"b":{"26":{},"37":{}}}],["259",{"_index":9514,"t":{},"b":{"26":{},"37":{}}}],["26",{"_index":645,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["26)¶\\[\\mathrm{for",{"_index":946,"t":{},"b":{"3":{}}}],["26.0159",{"_index":10590,"t":{},"b":{"39":{}}}],["260",{"_index":9515,"t":{},"b":{"26":{},"37":{}}}],["261",{"_index":8001,"t":{},"b":{"15":{},"26":{},"37":{}}}],["262",{"_index":3742,"t":{},"b":{"10":{},"26":{},"37":{}}}],["263",{"_index":9517,"t":{},"b":{"26":{},"37":{}}}],["264",{"_index":328,"t":{},"b":{"2":{},"26":{},"37":{}}}],["265",{"_index":9522,"t":{},"b":{"26":{},"30":{},"37":{}}}],["266",{"_index":9524,"t":{},"b":{"26":{},"30":{},"37":{}}}],["267",{"_index":9525,"t":{},"b":{"26":{},"37":{}}}],["268",{"_index":9526,"t":{},"b":{"26":{},"37":{}}}],["269",{"_index":9527,"t":{},"b":{"26":{},"37":{}}}],["27",{"_index":646,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["27)¶\\[\\begin{split}\\nabla",{"_index":967,"t":{},"b":{"3":{}}}],["270",{"_index":9528,"t":{},"b":{"26":{},"37":{}}}],["271",{"_index":9529,"t":{},"b":{"26":{},"37":{}}}],["2715",{"_index":2843,"t":{},"b":{"4":{}}}],["272",{"_index":9530,"t":{},"b":{"26":{},"37":{}}}],["273",{"_index":9531,"t":{},"b":{"26":{},"37":{}}}],["273)^2",{"_index":15308,"t":{},"b":{"79":{}}}],["273)^4",{"_index":15300,"t":{},"b":{"79":{}}}],["274",{"_index":9532,"t":{},"b":{"26":{},"37":{}}}],["275",{"_index":9533,"t":{},"b":{"26":{},"37":{}}}],["276",{"_index":9534,"t":{},"b":{"26":{},"37":{}}}],["277",{"_index":9536,"t":{},"b":{"26":{},"37":{}}}],["278",{"_index":9537,"t":{},"b":{"26":{},"37":{}}}],["279",{"_index":9538,"t":{},"b":{"26":{},"37":{}}}],["27\\lambda_{k_1}(x,y)\\lambda_{k_2}(x,y)\\lambda_{k_3}(x,i",{"_index":4300,"t":{},"b":{"11":{}}}],["28",{"_index":648,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["28)¶\\[\\nabla",{"_index":994,"t":{},"b":{"3":{}}}],["280",{"_index":9539,"t":{},"b":{"26":{},"37":{}}}],["281",{"_index":9541,"t":{},"b":{"26":{},"37":{}}}],["282",{"_index":9542,"t":{},"b":{"26":{},"37":{}}}],["2820",{"_index":9808,"t":{},"b":{"30":{}}}],["283",{"_index":9543,"t":{},"b":{"26":{},"37":{}}}],["284",{"_index":9545,"t":{},"b":{"26":{},"37":{}}}],["285",{"_index":9546,"t":{},"b":{"26":{},"37":{}}}],["286",{"_index":9547,"t":{},"b":{"26":{},"37":{}}}],["287",{"_index":9548,"t":{},"b":{"26":{},"37":{}}}],["288",{"_index":9549,"t":{},"b":{"26":{},"37":{}}}],["289",{"_index":9550,"t":{},"b":{"26":{},"37":{}}}],["29",{"_index":401,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{}}}],["29)¶\\[\\begin{split}\\left\\lbrac",{"_index":1026,"t":{},"b":{"3":{}}}],["29.0258",{"_index":10595,"t":{},"b":{"39":{}}}],["29.0273",{"_index":10598,"t":{},"b":{"39":{}}}],["290",{"_index":9551,"t":{},"b":{"26":{},"37":{}}}],["291",{"_index":9552,"t":{},"b":{"26":{},"37":{}}}],["292",{"_index":9554,"t":{},"b":{"26":{},"37":{}}}],["293",{"_index":9555,"t":{},"b":{"26":{},"37":{}}}],["294",{"_index":9556,"t":{},"b":{"26":{},"37":{}}}],["295",{"_index":9558,"t":{},"b":{"26":{},"37":{}}}],["296",{"_index":5950,"t":{},"b":{"13":{},"26":{},"37":{}}}],["296.22",{"_index":8161,"t":{},"b":{"15":{}}}],["297",{"_index":9563,"t":{},"b":{"26":{},"37":{}}}],["298",{"_index":9564,"t":{},"b":{"26":{},"37":{}}}],["299",{"_index":9566,"t":{},"b":{"26":{},"37":{}}}],["299792.458/lambda",{"_index":12573,"t":{},"b":{"51":{}}}],["2[^2",{"_index":13897,"t":{},"b":{"60":{}}}],["2\\int_e(u",{"_index":14999,"t":{},"b":{"75":{}}}],["2\\kappa",{"_index":10797,"t":{},"b":{"40":{}}}],["2\\kappa+1]\\cos(\\theta_k/2)+\\cos(3\\theta_k/2",{"_index":10803,"t":{},"b":{"40":{}}}],["2\\kappa+1]\\sin(\\theta_k/2)+\\sin(3\\theta_k/2",{"_index":10800,"t":{},"b":{"40":{}}}],["2\\lambda",{"_index":10713,"t":{},"b":{"40":{}}}],["2\\mu\\epsilon_{ij",{"_index":11236,"t":{},"b":{"42":{}}}],["2\\mu\\epsilon_{ij}(\\mathbf{u})\\epsilon_{ij}(\\mathbf{v",{"_index":10716,"t":{},"b":{"40":{}}}],["2\\mu\\epsilon_{ij}(u",{"_index":14242,"t":{},"b":{"64":{}}}],["2\\n",{"_index":8472,"t":{},"b":{"18":{}}}],["2\\nu",{"_index":14249,"t":{},"b":{"64":{}}}],["2\\pi",{"_index":2863,"t":{},"b":{"4":{},"41":{},"48":{},"76":{},"77":{}}}],["2\\pi)^2",{"_index":2886,"t":{},"b":{"4":{}}}],["2\\pi)^{1/2",{"_index":10796,"t":{},"b":{"40":{}}}],["2\\sqrt{15}}{21},\\frac{6+\\sqrt{15}}{21}\\right",{"_index":4695,"t":{},"b":{"11":{}}}],["2\\sqrt{15}}{21}\\right",{"_index":4693,"t":{},"b":{"11":{}}}],["2\\theta)c_0^2}h^2",{"_index":11023,"t":{},"b":{"41":{}}}],["2\\time",{"_index":2280,"t":{},"b":{"4":{},"11":{},"48":{}}}],["2],'contour','on','ccolor','b",{"_index":14691,"t":{},"b":{"71":{}}}],["2],'ylim",{"_index":14684,"t":{},"b":{"71":{}}}],["2],[4,2",{"_index":14849,"t":{},"b":{"73":{}}}],["2^3",{"_index":3635,"t":{},"b":{"8":{}}}],["2^31",{"_index":8364,"t":{},"b":{"18":{}}}],["2^{219937",{"_index":13891,"t":{},"b":{"60":{}}}],["2^{31",{"_index":8360,"t":{},"b":{"18":{},"60":{}}}],["2_1",{"_index":6899,"t":{},"b":{"13":{}}}],["2_1\\quad",{"_index":6820,"t":{},"b":{"13":{}}}],["2_2",{"_index":6900,"t":{},"b":{"13":{}}}],["2_2\\quad",{"_index":6821,"t":{},"b":{"13":{}}}],["2_3",{"_index":6901,"t":{},"b":{"13":{}}}],["2_3\\quad",{"_index":6822,"t":{},"b":{"13":{}}}],["2_4",{"_index":6902,"t":{},"b":{"13":{}}}],["2_{\\theta\\theta",{"_index":15277,"t":{},"b":{"79":{}}}],["2_{z",{"_index":15278,"t":{},"b":{"79":{}}}],["2a+2b",{"_index":4736,"t":{},"b":{"11":{}}}],["2d",{"_index":266,"t":{},"b":{"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"22":{},"24":{},"25":{},"26":{},"27":{},"34":{},"36":{},"41":{},"51":{},"53":{},"54":{},"56":{},"60":{},"64":{},"71":{},"79":{}}}],["2d.edp",{"_index":3453,"t":{},"b":{"6":{}}}],["2d/3d",{"_index":10170,"t":{},"b":{"36":{}}}],["2e",{"_index":14977,"t":{},"b":{"74":{}}}],["2e_12",{"_index":11695,"t":{},"b":{"46":{}}}],["2e_{ij",{"_index":10641,"t":{},"b":{"40":{}}}],["2epsilon_12",{"_index":11678,"t":{},"b":{"46":{}}}],["2f''(|nabla",{"_index":11791,"t":{},"b":{"47":{}}}],["2gd",{"_index":9411,"t":{},"b":{"26":{}}}],["2i",{"_index":6004,"t":{},"b":{"13":{}}}],["2i*dx(u)*dy(v",{"_index":9018,"t":{},"b":{"21":{}}}],["2i+1",{"_index":6005,"t":{},"b":{"13":{}}}],["2i_e(u",{"_index":15062,"t":{},"b":{"75":{}}}],["2n",{"_index":3680,"t":{},"b":{"9":{}}}],["2nd",{"_index":5388,"t":{},"b":{"13":{},"37":{}}}],["2pi",{"_index":9307,"t":{},"b":{"24":{}}}],["2pi*n*r/lambda",{"_index":12467,"t":{},"b":{"51":{}}}],["2s",{"_index":11645,"t":{},"b":{"45":{}}}],["2u_h",{"_index":12037,"t":{},"b":{"48":{}}}],["2x2",{"_index":4349,"t":{},"b":{"11":{}}}],["2}(i_1",{"_index":10190,"t":{},"b":{"37":{}}}],["2}({\\partial",{"_index":11239,"t":{},"b":{"42":{},"64":{}}}],["2}\\frac{{\\p",{"_index":11178,"t":{},"b":{"41":{}}}],["2}\\varphi",{"_index":14714,"t":{},"b":{"72":{}}}],["2}_{l^{2}(e",{"_index":12255,"t":{},"b":{"48":{}}}],["2}_{n",{"_index":10324,"t":{},"b":{"37":{}}}],["2}i",{"_index":2288,"t":{},"b":{"4":{}}}],["3",{"_index":269,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["3)(f*w",{"_index":4573,"t":{},"b":{"11":{}}}],["3)¶\\[u(x,y)\\simeq",{"_index":15109,"t":{},"b":{"76":{}}}],["3*cos(t",{"_index":14413,"t":{},"b":{"66":{}}}],["3*dy(u)*dx(v",{"_index":9015,"t":{},"b":{"21":{}}}],["3*i",{"_index":11749,"t":{},"b":{"46":{}}}],["3*pi/2){x",{"_index":14828,"t":{},"b":{"73":{}}}],["3*sin(t",{"_index":11933,"t":{},"b":{"48":{},"66":{}}}],["3*y*i",{"_index":8048,"t":{},"b":{"15":{}}}],["3+cos(t",{"_index":15009,"t":{},"b":{"75":{}}}],["3+sin(t",{"_index":15011,"t":{},"b":{"75":{}}}],["3,0",{"_index":8971,"t":{},"b":{"21":{}}}],["3,1",{"_index":5655,"t":{},"b":{"13":{}}}],["3,2",{"_index":13857,"t":{},"b":{"60":{}}}],["3,4,5",{"_index":2575,"t":{},"b":{"4":{}}}],["3,d",{"_index":15055,"t":{},"b":{"75":{}}}],["3,op_dyi",{"_index":2592,"t":{},"b":{"4":{}}}],["3,x,z],[4,x,z],[5,x,y],[6,x,i",{"_index":4075,"t":{},"b":{"11":{}}}],["3.*b*c')(i",{"_index":8962,"t":{},"b":{"21":{}}}],["3.*y*i",{"_index":9324,"t":{},"b":{"25":{}}}],["3.+6.*t",{"_index":14557,"t":{},"b":{"69":{}}}],["3.0",{"_index":13955,"t":{},"b":{"60":{}}}],["3.0/languag",{"_index":10149,"t":{},"b":{"35":{}}}],["3.00109,d",{"_index":15059,"t":{},"b":{"75":{}}}],["3.10.2/thirdparty/hsl",{"_index":880,"t":{},"b":{"3":{}}}],["3.11",{"_index":9400,"t":{},"b":{"26":{}}}],["3.12.4",{"_index":9909,"t":{},"b":{"34":{}}}],["3.122502257e",{"_index":9076,"t":{},"b":{"21":{}}}],["3.14",{"_index":8893,"t":{},"b":{"21":{}}}],["3.14159",{"_index":2835,"t":{},"b":{"4":{},"55":{},"58":{}}}],["3.19864e",{"_index":10591,"t":{},"b":{"39":{}}}],["3.2",{"_index":6672,"t":{},"b":{"13":{},"19":{}}}],["3.22",{"_index":8544,"t":{},"b":{"19":{}}}],["3.3",{"_index":5103,"t":{},"b":{"12":{}}}],["3.3.2",{"_index":9908,"t":{},"b":{"34":{},"35":{}}}],["3.3.2.tar.gz",{"_index":10010,"t":{},"b":{"35":{}}}],["3.33",{"_index":3749,"t":{},"b":{"10":{}}}],["3.4",{"_index":9857,"t":{},"b":{"33":{}}}],["3.40213e",{"_index":10605,"t":{},"b":{"39":{}}}],["3.469446952e",{"_index":9074,"t":{},"b":{"21":{}}}],["3.5",{"_index":7382,"t":{},"b":{"15":{},"21":{}}}],["3.8",{"_index":5153,"t":{},"b":{"13":{}}}],["3.e2",{"_index":10359,"t":{},"b":{"37":{}}}],["3/(10*(al+1",{"_index":8727,"t":{},"b":{"20":{}}}],["3/2",{"_index":8518,"t":{},"b":{"19":{}}}],["3/dt",{"_index":10945,"t":{},"b":{"41":{}}}],["30",{"_index":1382,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"33":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["30(x^2+y^2",{"_index":12169,"t":{},"b":{"48":{}}}],["30)¶\\[\\begin{split}g",{"_index":1554,"t":{},"b":{"3":{}}}],["30*(x^2*y^2",{"_index":12176,"t":{},"b":{"48":{}}}],["30,31,32",{"_index":14802,"t":{},"b":{"72":{}}}],["300",{"_index":7148,"t":{},"b":{"13":{},"15":{},"21":{},"25":{},"26":{},"37":{},"61":{},"74":{}}}],["3000",{"_index":775,"t":{},"b":{"3":{},"13":{}}}],["301",{"_index":9567,"t":{},"b":{"26":{},"37":{}}}],["3010",{"_index":403,"t":{},"b":{"2":{}}}],["3014",{"_index":404,"t":{},"b":{"2":{}}}],["302",{"_index":9569,"t":{},"b":{"26":{},"37":{}}}],["302.25",{"_index":7997,"t":{},"b":{"15":{}}}],["303",{"_index":270,"t":{},"b":{"2":{},"26":{},"37":{}}}],["304",{"_index":9570,"t":{},"b":{"26":{},"37":{}}}],["3043640",{"_index":9812,"t":{},"b":{"30":{}}}],["305",{"_index":9571,"t":{},"b":{"26":{},"37":{}}}],["306",{"_index":9572,"t":{},"b":{"26":{},"37":{}}}],["307",{"_index":9573,"t":{},"b":{"26":{},"37":{}}}],["3072",{"_index":3756,"t":{},"b":{"10":{}}}],["308",{"_index":9574,"t":{},"b":{"26":{},"37":{}}}],["309",{"_index":9575,"t":{},"b":{"26":{},"37":{}}}],["30i",{"_index":8947,"t":{},"b":{"21":{}}}],["31",{"_index":1383,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{}}}],["31)¶\\[\\begin{split}\\begin{array}{l",{"_index":1563,"t":{},"b":{"3":{}}}],["31.70",{"_index":8083,"t":{},"b":{"15":{}}}],["310",{"_index":7150,"t":{},"b":{"13":{},"26":{},"37":{}}}],["311",{"_index":7142,"t":{},"b":{"13":{},"26":{},"37":{}}}],["312",{"_index":9578,"t":{},"b":{"26":{},"37":{}}}],["313",{"_index":9579,"t":{},"b":{"26":{},"37":{}}}],["314",{"_index":9580,"t":{},"b":{"26":{},"37":{}}}],["315",{"_index":271,"t":{},"b":{"2":{},"26":{},"37":{}}}],["316",{"_index":9581,"t":{},"b":{"26":{},"37":{}}}],["317",{"_index":9583,"t":{},"b":{"26":{},"37":{}}}],["318",{"_index":9584,"t":{},"b":{"26":{},"37":{}}}],["319",{"_index":9585,"t":{},"b":{"26":{},"37":{}}}],["32",{"_index":1385,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"32":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{}}}],["32)¶\\[\\mathcal{v}(\\rho",{"_index":1577,"t":{},"b":{"3":{}}}],["32.0449",{"_index":10601,"t":{},"b":{"39":{}}}],["320",{"_index":8981,"t":{},"b":{"21":{},"26":{},"37":{}}}],["321",{"_index":9586,"t":{},"b":{"26":{},"37":{}}}],["322",{"_index":9587,"t":{},"b":{"26":{},"37":{}}}],["323",{"_index":9588,"t":{},"b":{"26":{},"37":{}}}],["324",{"_index":9589,"t":{},"b":{"26":{},"37":{}}}],["325",{"_index":9590,"t":{},"b":{"26":{},"37":{}}}],["326",{"_index":9591,"t":{},"b":{"26":{},"37":{}}}],["327",{"_index":9592,"t":{},"b":{"26":{},"37":{}}}],["328",{"_index":9593,"t":{},"b":{"26":{},"37":{}}}],["329",{"_index":9594,"t":{},"b":{"26":{},"37":{}}}],["33",{"_index":1386,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["33)¶\\[\\begin{split}\\begin{array}{r",{"_index":1601,"t":{},"b":{"3":{}}}],["330",{"_index":9595,"t":{},"b":{"26":{},"37":{}}}],["331",{"_index":9596,"t":{},"b":{"26":{},"37":{}}}],["332",{"_index":9597,"t":{},"b":{"26":{},"37":{}}}],["333",{"_index":9598,"t":{},"b":{"26":{},"37":{}}}],["334",{"_index":9599,"t":{},"b":{"26":{},"37":{}}}],["335",{"_index":9600,"t":{},"b":{"26":{},"37":{}}}],["336",{"_index":9601,"t":{},"b":{"26":{},"37":{}}}],["337",{"_index":9602,"t":{},"b":{"26":{},"37":{}}}],["338",{"_index":9603,"t":{},"b":{"26":{},"37":{}}}],["339",{"_index":9604,"t":{},"b":{"26":{},"37":{}}}],["34",{"_index":1444,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"81":{}}}],["34)¶\\[\\begin{split}\\foral",{"_index":1617,"t":{},"b":{"3":{}}}],["34.049",{"_index":10604,"t":{},"b":{"39":{}}}],["34.0492",{"_index":10607,"t":{},"b":{"39":{}}}],["340",{"_index":9605,"t":{},"b":{"26":{},"37":{}}}],["341",{"_index":9606,"t":{},"b":{"26":{},"37":{}}}],["342",{"_index":9607,"t":{},"b":{"26":{},"37":{}}}],["343",{"_index":9608,"t":{},"b":{"26":{},"37":{}}}],["344",{"_index":9609,"t":{},"b":{"26":{},"37":{}}}],["345",{"_index":9610,"t":{},"b":{"26":{},"37":{}}}],["346",{"_index":9611,"t":{},"b":{"26":{},"37":{}}}],["347",{"_index":9612,"t":{},"b":{"26":{},"37":{}}}],["348",{"_index":9613,"t":{},"b":{"26":{},"37":{}}}],["349",{"_index":9614,"t":{},"b":{"26":{},"37":{}}}],["35",{"_index":1445,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["35)¶\\[\\begin{split}\\begin{array}{r",{"_index":1625,"t":{},"b":{"3":{}}}],["350",{"_index":9615,"t":{},"b":{"26":{},"37":{}}}],["351",{"_index":9616,"t":{},"b":{"26":{},"37":{}}}],["352",{"_index":9617,"t":{},"b":{"26":{},"37":{}}}],["353",{"_index":9618,"t":{},"b":{"26":{},"37":{}}}],["354",{"_index":9619,"t":{},"b":{"26":{},"37":{}}}],["355",{"_index":9620,"t":{},"b":{"26":{},"37":{}}}],["356",{"_index":9621,"t":{},"b":{"26":{},"37":{}}}],["357",{"_index":9623,"t":{},"b":{"26":{},"37":{}}}],["358",{"_index":9624,"t":{},"b":{"26":{},"37":{}}}],["359",{"_index":9625,"t":{},"b":{"26":{},"37":{}}}],["36",{"_index":104,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"60":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["36)¶\\[j(v_{1},v_{2",{"_index":1968,"t":{},"b":{"3":{}}}],["360",{"_index":8567,"t":{},"b":{"19":{},"21":{},"26":{},"27":{},"37":{}}}],["361",{"_index":9626,"t":{},"b":{"26":{},"37":{}}}],["362",{"_index":9627,"t":{},"b":{"26":{},"37":{}}}],["363",{"_index":9628,"t":{},"b":{"26":{},"37":{}}}],["364",{"_index":9629,"t":{},"b":{"26":{},"37":{}}}],["364.12",{"_index":7996,"t":{},"b":{"15":{}}}],["365",{"_index":9630,"t":{},"b":{"26":{},"37":{}}}],["366",{"_index":9631,"t":{},"b":{"26":{},"37":{}}}],["367",{"_index":9632,"t":{},"b":{"26":{},"37":{}}}],["368",{"_index":9633,"t":{},"b":{"26":{},"37":{}}}],["369",{"_index":9634,"t":{},"b":{"26":{},"37":{}}}],["37",{"_index":353,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["37)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":7500,"t":{},"b":{"15":{}}}],["370",{"_index":9635,"t":{},"b":{"26":{},"37":{}}}],["371",{"_index":9637,"t":{},"b":{"26":{}}}],["371104",{"_index":2844,"t":{},"b":{"4":{}}}],["372",{"_index":9638,"t":{},"b":{"26":{}}}],["373",{"_index":9640,"t":{},"b":{"26":{}}}],["374",{"_index":9641,"t":{},"b":{"26":{}}}],["375",{"_index":9642,"t":{},"b":{"26":{}}}],["376",{"_index":9643,"t":{},"b":{"26":{}}}],["377",{"_index":9645,"t":{},"b":{"26":{}}}],["378",{"_index":9646,"t":{},"b":{"26":{}}}],["379",{"_index":9647,"t":{},"b":{"26":{}}}],["37th",{"_index":11889,"t":{},"b":{"48":{}}}],["38",{"_index":1448,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["38)¶\\[u^{\\ell+1",{"_index":7505,"t":{},"b":{"15":{}}}],["380",{"_index":9648,"t":{},"b":{"26":{}}}],["381",{"_index":9649,"t":{},"b":{"26":{}}}],["382",{"_index":9650,"t":{},"b":{"26":{}}}],["383",{"_index":9651,"t":{},"b":{"26":{}}}],["384",{"_index":9652,"t":{},"b":{"26":{}}}],["385",{"_index":9653,"t":{},"b":{"26":{}}}],["386",{"_index":9654,"t":{},"b":{"26":{}}}],["387",{"_index":9655,"t":{},"b":{"26":{}}}],["388",{"_index":9656,"t":{},"b":{"26":{}}}],["389",{"_index":9657,"t":{},"b":{"26":{}}}],["39",{"_index":321,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{}}}],["39)¶\\[\\begin{split}st^{3d",{"_index":2368,"t":{},"b":{"4":{}}}],["390",{"_index":9658,"t":{},"b":{"26":{}}}],["391",{"_index":9659,"t":{},"b":{"26":{}}}],["392",{"_index":2832,"t":{},"b":{"4":{},"26":{}}}],["393",{"_index":9660,"t":{},"b":{"26":{}}}],["394",{"_index":9661,"t":{},"b":{"26":{}}}],["395",{"_index":9662,"t":{},"b":{"26":{}}}],["396",{"_index":9663,"t":{},"b":{"26":{}}}],["397",{"_index":9664,"t":{},"b":{"26":{}}}],["398",{"_index":9665,"t":{},"b":{"26":{}}}],["399",{"_index":9666,"t":{},"b":{"26":{}}}],["3;label",{"_index":6602,"t":{},"b":{"13":{}}}],["3\\ln",{"_index":839,"t":{},"b":{"3":{}}}],["3\\time",{"_index":1614,"t":{},"b":{"3":{},"13":{},"54":{}}}],["3^d",{"_index":3682,"t":{},"b":{"9":{}}}],["3d",{"_index":1516,"t":{},"b":{"3":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"20":{},"22":{},"25":{},"26":{},"33":{},"34":{},"36":{},"40":{},"41":{},"51":{},"53":{},"54":{},"60":{},"71":{},"72":{},"77":{},"79":{}}}],["3d/2d",{"_index":8521,"t":{},"b":{"19":{}}}],["3i",{"_index":13855,"t":{},"b":{"60":{}}}],["3rd",{"_index":5395,"t":{},"b":{"13":{},"35":{}}}],["3rdparti",{"_index":9994,"t":{},"b":{"35":{}}}],["3rdparty/ff",{"_index":10033,"t":{},"b":{"35":{}}}],["3rdparty/getal",{"_index":10031,"t":{},"b":{"35":{}}}],["3{\\times}3",{"_index":5620,"t":{},"b":{"13":{}}}],["4",{"_index":54,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["4(\\cos(x^2+y^2",{"_index":14763,"t":{},"b":{"72":{}}}],["4){x",{"_index":14186,"t":{},"b":{"63":{}}}],["4)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":15115,"t":{},"b":{"76":{}}}],["4*(cos(x^2+y^2",{"_index":14770,"t":{},"b":{"72":{}}}],["4*(iy+1",{"_index":5918,"t":{},"b":{"13":{},"24":{}}}],["4*b",{"_index":8919,"t":{},"b":{"21":{}}}],["4*dy(u)*dy(v",{"_index":9016,"t":{},"b":{"21":{}}}],["4*mu*t12*s12",{"_index":11740,"t":{},"b":{"46":{}}}],["4*sparsea",{"_index":4922,"t":{},"b":{"11":{}}}],["4*sxy^2",{"_index":10869,"t":{},"b":{"40":{}}}],["4*x",{"_index":8053,"t":{},"b":{"15":{}}}],["4*y*(1",{"_index":14954,"t":{},"b":{"74":{}}}],["4*z*z",{"_index":8049,"t":{},"b":{"15":{}}}],["4+i",{"_index":7152,"t":{},"b":{"13":{}}}],["4,0",{"_index":8972,"t":{},"b":{"21":{}}}],["4,1",{"_index":5656,"t":{},"b":{"13":{}}}],["4,u1",{"_index":11529,"t":{},"b":{"45":{}}}],["4,y],[2,y],[1,x],[3,x",{"_index":5607,"t":{},"b":{"13":{}}}],["4.*pi/3",{"_index":14744,"t":{},"b":{"72":{}}}],["4.*um*y*(h",{"_index":11572,"t":{},"b":{"45":{}}}],["4.*z*z",{"_index":9325,"t":{},"b":{"25":{}}}],["4./3.*pi*pow(lb[].linfty,3",{"_index":1866,"t":{},"b":{"3":{},"20":{}}}],["4./6",{"_index":8575,"t":{},"b":{"19":{},"27":{}}}],["4.0.1",{"_index":10008,"t":{},"b":{"35":{}}}],["4.0.1.tar.gz",{"_index":10005,"t":{},"b":{"35":{}}}],["4.00551",{"_index":15060,"t":{},"b":{"75":{}}}],["4.05158e",{"_index":10557,"t":{},"b":{"39":{}}}],["4.05497e",{"_index":10577,"t":{},"b":{"39":{}}}],["4.16212e",{"_index":10582,"t":{},"b":{"39":{}}}],["4.163336342e",{"_index":9079,"t":{},"b":{"21":{}}}],["4.2",{"_index":9911,"t":{},"b":{"34":{}}}],["4.2.1",{"_index":5913,"t":{},"b":{"13":{}}}],["4.44288",{"_index":13807,"t":{},"b":{"58":{}}}],["4.5",{"_index":6090,"t":{"36":{}},"b":{"13":{},"24":{},"32":{},"34":{},"35":{},"36":{}}}],["4.55581",{"_index":13805,"t":{},"b":{"58":{}}}],["4.6",{"_index":9833,"t":{},"b":{"32":{}}}],["4.8",{"_index":9895,"t":{},"b":{"34":{}}}],["4.9",{"_index":15268,"t":{},"b":{"79":{}}}],["4.9+6.74421i",{"_index":8845,"t":{},"b":{"21":{}}}],["4.9652e",{"_index":10593,"t":{},"b":{"39":{}}}],["4.e0",{"_index":10364,"t":{},"b":{"37":{}}}],["4.thi",{"_index":7019,"t":{},"b":{"13":{}}}],["4/(10*(al+1",{"_index":8765,"t":{},"b":{"20":{}}}],["4/h",{"_index":7139,"t":{},"b":{"13":{}}}],["40",{"_index":1449,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"81":{}}}],["40)¶\\[\\pi_{h",{"_index":2441,"t":{},"b":{"4":{}}}],["40,\\;\\;t",{"_index":11193,"t":{},"b":{"41":{}}}],["400",{"_index":8980,"t":{},"b":{"21":{},"26":{},"61":{},"74":{}}}],["40000",{"_index":14515,"t":{},"b":{"67":{}}}],["401",{"_index":9667,"t":{},"b":{"26":{}}}],["402",{"_index":9668,"t":{},"b":{"26":{}}}],["403",{"_index":9670,"t":{},"b":{"26":{}}}],["404",{"_index":9671,"t":{},"b":{"26":{}}}],["405",{"_index":9673,"t":{},"b":{"26":{}}}],["406",{"_index":9675,"t":{},"b":{"26":{}}}],["407",{"_index":9676,"t":{},"b":{"26":{}}}],["408",{"_index":9678,"t":{},"b":{"26":{}}}],["409",{"_index":9679,"t":{},"b":{"26":{}}}],["4096",{"_index":3740,"t":{},"b":{"10":{}}}],["40:150",{"_index":1874,"t":{},"b":{"3":{},"20":{}}}],["40i",{"_index":8948,"t":{},"b":{"21":{}}}],["41",{"_index":354,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{}}}],["41)¶\\[rt0_{h",{"_index":2458,"t":{},"b":{"4":{}}}],["410",{"_index":9680,"t":{},"b":{"26":{}}}],["411",{"_index":9681,"t":{},"b":{"26":{}}}],["412",{"_index":9682,"t":{},"b":{"26":{},"32":{}}}],["413",{"_index":9683,"t":{},"b":{"26":{}}}],["414",{"_index":9684,"t":{},"b":{"26":{}}}],["415",{"_index":9685,"t":{},"b":{"26":{}}}],["416",{"_index":9686,"t":{},"b":{"26":{}}}],["417",{"_index":9687,"t":{},"b":{"26":{}}}],["418",{"_index":9688,"t":{},"b":{"26":{}}}],["419",{"_index":9689,"t":{},"b":{"26":{}}}],["42",{"_index":1450,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{}}}],["42)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":11902,"t":{},"b":{"48":{}}}],["420",{"_index":9690,"t":{},"b":{"26":{}}}],["421",{"_index":9691,"t":{},"b":{"26":{}}}],["422",{"_index":9692,"t":{},"b":{"26":{}}}],["423",{"_index":9694,"t":{},"b":{"26":{}}}],["424",{"_index":9695,"t":{},"b":{"26":{}}}],["425",{"_index":9696,"t":{},"b":{"26":{}}}],["426",{"_index":9697,"t":{},"b":{"26":{}}}],["427",{"_index":9699,"t":{},"b":{"26":{}}}],["428",{"_index":9700,"t":{},"b":{"26":{}}}],["429",{"_index":9701,"t":{},"b":{"26":{}}}],["43",{"_index":1451,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"81":{}}}],["43)¶\\[\\delta",{"_index":11943,"t":{},"b":{"48":{}}}],["430",{"_index":9702,"t":{},"b":{"26":{}}}],["431",{"_index":9704,"t":{},"b":{"26":{}}}],["432",{"_index":9705,"t":{},"b":{"26":{}}}],["433",{"_index":9706,"t":{},"b":{"26":{}}}],["434",{"_index":9707,"t":{},"b":{"26":{}}}],["435",{"_index":9709,"t":{},"b":{"26":{}}}],["436",{"_index":9712,"t":{},"b":{"26":{}}}],["437",{"_index":9713,"t":{},"b":{"26":{}}}],["438",{"_index":9714,"t":{},"b":{"26":{}}}],["439",{"_index":9715,"t":{},"b":{"26":{}}}],["44",{"_index":53,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"79":{},"80":{},"81":{}}}],["44)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":12026,"t":{},"b":{"48":{}}}],["440",{"_index":9716,"t":{},"b":{"26":{}}}],["441",{"_index":9717,"t":{},"b":{"26":{}}}],["442",{"_index":9718,"t":{},"b":{"26":{}}}],["443",{"_index":9719,"t":{},"b":{"26":{}}}],["444",{"_index":9720,"t":{},"b":{"26":{}}}],["445",{"_index":9721,"t":{},"b":{"26":{}}}],["446",{"_index":9722,"t":{},"b":{"26":{}}}],["447",{"_index":9723,"t":{},"b":{"26":{}}}],["448",{"_index":9725,"t":{},"b":{"26":{}}}],["449",{"_index":9726,"t":{},"b":{"26":{}}}],["45",{"_index":1459,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"81":{}}}],["45)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":10684,"t":{},"b":{"40":{}}}],["450",{"_index":8982,"t":{},"b":{"21":{},"26":{}}}],["451",{"_index":9727,"t":{},"b":{"26":{}}}],["452",{"_index":9728,"t":{},"b":{"26":{}}}],["453",{"_index":9729,"t":{},"b":{"26":{}}}],["454",{"_index":9730,"t":{},"b":{"26":{}}}],["455",{"_index":9731,"t":{},"b":{"26":{}}}],["456",{"_index":9732,"t":{},"b":{"26":{}}}],["456789",{"_index":8874,"t":{},"b":{"21":{}}}],["46",{"_index":1461,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"81":{}}}],["46)¶\\[\\mathbf{u}(x",{"_index":10781,"t":{},"b":{"40":{}}}],["47",{"_index":1464,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"81":{}}}],["47)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":10887,"t":{},"b":{"41":{}}}],["47,24",{"_index":14688,"t":{},"b":{"71":{}}}],["471281",{"_index":7984,"t":{},"b":{"15":{}}}],["48",{"_index":1466,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"72":{},"73":{},"74":{},"75":{},"81":{}}}],["48)¶\\[\\int_{\\omega",{"_index":10927,"t":{},"b":{"41":{}}}],["480",{"_index":8984,"t":{},"b":{"21":{}}}],["487",{"_index":9837,"t":{},"b":{"32":{}}}],["49",{"_index":1467,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"64":{},"66":{},"67":{},"72":{},"73":{},"74":{},"75":{},"81":{}}}],["49)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":10974,"t":{},"b":{"41":{}}}],["4\\lambda^k_1(x,y)\\lambda^k_4(x,i",{"_index":4139,"t":{},"b":{"11":{}}}],["4\\mu",{"_index":10795,"t":{},"b":{"40":{}}}],["4\\nu",{"_index":10806,"t":{},"b":{"40":{}}}],["4\\time",{"_index":4111,"t":{},"b":{"11":{},"15":{}}}],["4\\times10^6",{"_index":8158,"t":{},"b":{"15":{}}}],["4b",{"_index":8920,"t":{},"b":{"21":{}}}],["5",{"_index":105,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["5)(k*v*w",{"_index":4536,"t":{},"b":{"11":{}}}],["5)(k*w",{"_index":4559,"t":{},"b":{"11":{}}}],["5)*2",{"_index":5425,"t":{},"b":{"13":{},"24":{}}}],["5)+c22",{"_index":14561,"t":{},"b":{"69":{}}}],["5)+c24",{"_index":14563,"t":{},"b":{"69":{}}}],["5)/3",{"_index":14199,"t":{},"b":{"63":{}}}],["5){x",{"_index":14188,"t":{},"b":{"63":{}}}],["5)¶\\[\\sum_{j",{"_index":15121,"t":{},"b":{"76":{}}}],["5*(region",{"_index":12337,"t":{},"b":{"49":{}}}],["5*(square(x",{"_index":5662,"t":{},"b":{"13":{}}}],["5*cos(t",{"_index":11930,"t":{},"b":{"48":{},"71":{},"75":{}}}],["5*i",{"_index":8054,"t":{},"b":{"15":{}}}],["5*n",{"_index":10472,"t":{},"b":{"38":{}}}],["5*sin(t",{"_index":11931,"t":{},"b":{"48":{},"71":{},"75":{}}}],["5*sqrt",{"_index":6758,"t":{},"b":{"13":{}}}],["5*x",{"_index":8058,"t":{},"b":{"15":{}}}],["5*x*i",{"_index":8050,"t":{},"b":{"15":{}}}],["5,0",{"_index":8973,"t":{},"b":{"21":{}}}],["5,op_dxi",{"_index":2594,"t":{},"b":{"4":{}}}],["5.*cos(t",{"_index":14391,"t":{},"b":{"66":{},"69":{}}}],["5.*sin(t",{"_index":14392,"t":{},"b":{"66":{},"69":{}}}],["5.*x*i",{"_index":9326,"t":{},"b":{"25":{}}}],["5./6",{"_index":8577,"t":{},"b":{"19":{},"27":{}}}],["5.0002",{"_index":10553,"t":{},"b":{"39":{}}}],["5.33",{"_index":8812,"t":{},"b":{"21":{}}}],["5.86612",{"_index":8850,"t":{},"b":{"21":{}}}],["5.e2",{"_index":10355,"t":{},"b":{"37":{}}}],["5/18)||q^iq^j",{"_index":4634,"t":{},"b":{"11":{}}}],["5/tau",{"_index":11036,"t":{},"b":{"41":{}}}],["50",{"_index":1468,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"67":{},"72":{},"73":{},"74":{},"75":{},"76":{},"81":{}}}],["50)¶\\[\\begin{split}(m+\\theta\\tau",{"_index":10997,"t":{},"b":{"41":{}}}],["500",{"_index":7126,"t":{},"b":{"13":{},"25":{},"61":{},"75":{}}}],["5000",{"_index":11206,"t":{},"b":{"41":{}}}],["50000",{"_index":1884,"t":{},"b":{"3":{},"20":{}}}],["51",{"_index":1469,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"67":{},"73":{},"74":{},"75":{},"81":{}}}],["51)¶\\[\\p_t",{"_index":11059,"t":{},"b":{"41":{}}}],["512",{"_index":2836,"t":{},"b":{"4":{}}}],["52",{"_index":335,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"67":{},"71":{},"73":{},"74":{},"75":{}}}],["52)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":11064,"t":{},"b":{"41":{}}}],["525",{"_index":55,"t":{},"b":{"2":{}}}],["53",{"_index":1472,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"61":{},"63":{},"66":{},"67":{},"71":{},"73":{},"74":{},"75":{}}}],["53)¶\\[\\frac{1}{{\\tau",{"_index":11108,"t":{},"b":{"41":{}}}],["53076",{"_index":319,"t":{},"b":{"2":{}}}],["54",{"_index":1475,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"67":{},"71":{},"73":{},"74":{},"75":{}}}],["54)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":11123,"t":{},"b":{"41":{}}}],["546",{"_index":15307,"t":{},"b":{"79":{}}}],["55",{"_index":385,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"67":{},"71":{},"73":{},"74":{},"75":{}}}],["55)¶\\[\\begin{split}\\left.\\begin{array}{cl",{"_index":11364,"t":{},"b":{"45":{}}}],["557.8",{"_index":7994,"t":{},"b":{"15":{}}}],["56",{"_index":1478,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"71":{},"73":{},"74":{},"75":{}}}],["56)¶\\[\\begin{split}\\begin{array}{cl",{"_index":11414,"t":{},"b":{"45":{}}}],["57",{"_index":38,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["57)¶\\[\\begin{split}\\begin{array}{cl",{"_index":11471,"t":{},"b":{"45":{}}}],["571.29",{"_index":7988,"t":{},"b":{"15":{}}}],["58",{"_index":1483,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["58)¶\\[(a+(1/\\epsilon)b^*b)\\mathbf{u}_h^{\\epsilon",{"_index":11482,"t":{},"b":{"45":{}}}],["580.03",{"_index":7226,"t":{},"b":{"13":{}}}],["59",{"_index":1485,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["59)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":12308,"t":{},"b":{"49":{}}}],["597",{"_index":56,"t":{},"b":{"2":{}}}],["5\\time",{"_index":4355,"t":{},"b":{"11":{}}}],["5^2",{"_index":11924,"t":{},"b":{"48":{}}}],["5e",{"_index":8046,"t":{},"b":{"15":{}}}],["5e+29",{"_index":9046,"t":{},"b":{"21":{}}}],["5g\\left",{"_index":13829,"t":{},"b":{"59":{}}}],["5i",{"_index":8952,"t":{},"b":{"21":{}}}],["5th",{"_index":5228,"t":{},"b":{"13":{}}}],["5x5",{"_index":4348,"t":{},"b":{"11":{}}}],["5{\\time",{"_index":5623,"t":{},"b":{"13":{}}}],["5{\\times}5",{"_index":5629,"t":{},"b":{"13":{}}}],["6",{"_index":386,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["6){x",{"_index":14190,"t":{},"b":{"63":{}}}],["6)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":14447,"t":{},"b":{"67":{}}}],["6*i",{"_index":8057,"t":{},"b":{"15":{}}}],["6*x",{"_index":4823,"t":{},"b":{"11":{},"15":{}}}],["6*x*z",{"_index":8051,"t":{},"b":{"15":{}}}],["6*z",{"_index":8055,"t":{},"b":{"15":{}}}],["6,0",{"_index":8974,"t":{},"b":{"21":{}}}],["6.*rho2*sin2",{"_index":1784,"t":{},"b":{"3":{},"20":{}}}],["6.*t",{"_index":14556,"t":{},"b":{"69":{}}}],["6.*x*z",{"_index":9327,"t":{},"b":{"25":{}}}],["6.*x,i",{"_index":15262,"t":{},"b":{"79":{}}}],["6.1232339957367660359e",{"_index":9051,"t":{},"b":{"21":{}}}],["6.123233996e",{"_index":9060,"t":{},"b":{"21":{}}}],["6.29",{"_index":11170,"t":{},"b":{"41":{}}}],["6.40312",{"_index":8979,"t":{},"b":{"21":{}}}],["6.43929e",{"_index":9253,"t":{},"b":{"21":{}}}],["6.77444e",{"_index":10588,"t":{},"b":{"39":{}}}],["6.938893904e",{"_index":9078,"t":{},"b":{"21":{}}}],["6.94",{"_index":14787,"t":{},"b":{"72":{}}}],["6.e",{"_index":1981,"t":{},"b":{"3":{},"20":{}}}],["60",{"_index":1488,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"58":{},"61":{},"63":{},"67":{},"69":{},"73":{},"74":{},"75":{}}}],["60)¶\\[\\nabla\\times\\left(\\hat{\\epsilon",{"_index":12415,"t":{},"b":{"51":{}}}],["600",{"_index":8983,"t":{},"b":{"21":{}}}],["60^\\circ",{"_index":14554,"t":{},"b":{"69":{}}}],["61",{"_index":1489,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["61)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":12432,"t":{},"b":{"51":{}}}],["61.08",{"_index":8081,"t":{},"b":{"15":{}}}],["6144",{"_index":3759,"t":{},"b":{"10":{}}}],["62",{"_index":355,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["63",{"_index":1492,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["637.57",{"_index":7993,"t":{},"b":{"15":{}}}],["64",{"_index":1493,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"32":{},"35":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["64bit",{"_index":9923,"t":{},"b":{"35":{}}}],["65",{"_index":1494,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{},"81":{}}}],["65y15",{"_index":9810,"t":{},"b":{"30":{}}}],["66",{"_index":1498,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["67",{"_index":1499,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["68",{"_index":1501,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["688",{"_index":9258,"t":{},"b":{"21":{}}}],["69",{"_index":1502,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"41":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["6th",{"_index":4044,"t":{},"b":{"11":{}}}],["6x6",{"_index":9063,"t":{},"b":{"21":{}}}],["7",{"_index":616,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"56":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["7)¶\\[\\begin{split}\\begin{array}{rcl",{"_index":14457,"t":{},"b":{"67":{}}}],["7,0",{"_index":8975,"t":{},"b":{"21":{}}}],["7.25456e",{"_index":10562,"t":{},"b":{"39":{}}}],["7.4",{"_index":3752,"t":{},"b":{"10":{}}}],["7.42931e",{"_index":10585,"t":{},"b":{"39":{}}}],["7.thi",{"_index":7007,"t":{},"b":{"13":{}}}],["70",{"_index":1504,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["7000",{"_index":9742,"t":{},"b":{"26":{}}}],["708.49",{"_index":8160,"t":{},"b":{"15":{}}}],["70\\sqrt{30}}{35})/2",{"_index":4639,"t":{},"b":{"11":{}}}],["70\\sqrt{30}}}{35}}{2",{"_index":13840,"t":{},"b":{"59":{}}}],["71",{"_index":434,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"51":{},"61":{},"63":{},"67":{},"73":{},"74":{},"75":{}}}],["72",{"_index":1509,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{},"75":{}}}],["720",{"_index":5948,"t":{},"b":{"13":{}}}],["73",{"_index":1510,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{},"75":{}}}],["739",{"_index":336,"t":{},"b":{"2":{}}}],["74",{"_index":1511,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{},"75":{}}}],["75",{"_index":1512,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"43":{},"45":{},"46":{},"47":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["76",{"_index":2032,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["77",{"_index":231,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["78",{"_index":2033,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["79",{"_index":435,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["7th",{"_index":5229,"t":{},"b":{"13":{}}}],["8",{"_index":618,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["8){x",{"_index":14197,"t":{},"b":{"63":{}}}],["8)¶\\[\\begin{split}\\mathtt{label",{"_index":5639,"t":{},"b":{"13":{}}}],["8*dp*q",{"_index":14868,"t":{},"b":{"73":{}}}],["8*pi/180",{"_index":14381,"t":{},"b":{"66":{}}}],["8*z",{"_index":8060,"t":{},"b":{"15":{}}}],["8,0",{"_index":8976,"t":{},"b":{"21":{}}}],["8.00074",{"_index":10556,"t":{},"b":{"39":{}}}],["8.1.0",{"_index":10052,"t":{},"b":{"35":{}}}],["8.165619677e+15",{"_index":9048,"t":{},"b":{"21":{}}}],["8.37072",{"_index":8855,"t":{},"b":{"21":{}}}],["8/18)||q^iq^j",{"_index":4635,"t":{},"b":{"11":{}}}],["8/h",{"_index":7140,"t":{},"b":{"13":{}}}],["80",{"_index":2037,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"41":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["809",{"_index":106,"t":{},"b":{"2":{}}}],["81",{"_index":2039,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["81.5",{"_index":8003,"t":{},"b":{"15":{}}}],["82",{"_index":2040,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["83",{"_index":2042,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["836",{"_index":107,"t":{},"b":{"2":{}}}],["84",{"_index":2044,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["85",{"_index":2045,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"40":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["86",{"_index":130,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["865",{"_index":366,"t":{},"b":{"2":{}}}],["87",{"_index":2046,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["88",{"_index":2047,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"43":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["888",{"_index":367,"t":{},"b":{"2":{}}}],["89",{"_index":2050,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["8g\\left",{"_index":13831,"t":{},"b":{"59":{}}}],["9",{"_index":341,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"30":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"56":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["9)¶\\[\\p^0_{h",{"_index":3811,"t":{},"b":{"11":{}}}],["9,0",{"_index":8977,"t":{},"b":{"21":{}}}],["9.10",{"_index":12230,"t":{},"b":{"48":{}}}],["9.81/303",{"_index":14041,"t":{},"b":{"61":{}}}],["9.99573e",{"_index":10596,"t":{},"b":{"39":{}}}],["9.999",{"_index":11257,"t":{},"b":{"42":{}}}],["90",{"_index":2051,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"50":{},"51":{},"61":{},"66":{},"67":{},"73":{},"74":{}}}],["90*x/6",{"_index":4819,"t":{},"b":{"11":{}}}],["90.*x/6",{"_index":15261,"t":{},"b":{"79":{}}}],["900(n+3)^{2",{"_index":834,"t":{},"b":{"3":{}}}],["9000",{"_index":5551,"t":{},"b":{"13":{},"54":{}}}],["91",{"_index":2052,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"50":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["92",{"_index":2056,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["93",{"_index":2057,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["94",{"_index":2058,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["95",{"_index":131,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["96",{"_index":2060,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["97",{"_index":2062,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"73":{},"74":{}}}],["98",{"_index":2064,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"24":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"67":{},"69":{},"73":{},"74":{}}}],["99",{"_index":2067,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"21":{},"24":{},"26":{},"37":{},"45":{},"46":{},"51":{},"61":{},"66":{},"67":{},"69":{},"73":{},"74":{}}}],["_",{"_index":8358,"t":{},"b":{"18":{},"56":{}}}],["_1",{"_index":11176,"t":{},"b":{"41":{}}}],["_2",{"_index":11179,"t":{},"b":{"41":{},"50":{}}}],["_definition_",{"_index":3699,"t":{},"b":{"10":{}}}],["_dist_freefem",{"_index":7875,"t":{},"b":{"15":{}}}],["_r",{"_index":15275,"t":{},"b":{"79":{}}}],["_r(r\\partial",{"_index":15274,"t":{},"b":{"79":{}}}],["_setup",{"_index":3726,"t":{},"b":{"10":{}}}],["_t",{"_index":11174,"t":{},"b":{"41":{}}}],["_z",{"_index":15282,"t":{},"b":{"79":{}}}],["_z(r\\partial",{"_index":15281,"t":{},"b":{"79":{}}}],["_{",{"_index":14376,"t":{},"b":{"66":{}}}],["_{1",{"_index":14546,"t":{},"b":{"69":{}}}],["_{\\gamma",{"_index":14707,"t":{},"b":{"72":{}}}],["_{\\gamma_1\\cup\\gamma_3",{"_index":15289,"t":{},"b":{"79":{}}}],["_{\\gamma_2",{"_index":11975,"t":{},"b":{"48":{}}}],["_{i",{"_index":2923,"t":{},"b":{"4":{},"69":{},"73":{}}}],["_{l^{2}(t)}^{2",{"_index":12249,"t":{},"b":{"48":{}}}],["_{t}u+\\mathbf{\\alpha}\\cdot",{"_index":11098,"t":{},"b":{"41":{}}}],["_{t}v+\\alpha\\p",{"_index":11084,"t":{},"b":{"41":{}}}],["_{t}x",{"_index":11088,"t":{},"b":{"41":{}}}],["_{t}x\\dot{v}+a\\p",{"_index":11086,"t":{},"b":{"41":{}}}],["_{x}v",{"_index":11085,"t":{},"b":{"41":{}}}],["_{x}x",{"_index":11091,"t":{},"b":{"41":{}}}],["_{x}x\\dot{v",{"_index":11087,"t":{},"b":{"41":{}}}],["a#b(t",{"_index":12095,"t":{},"b":{"48":{}}}],["a#x*t1+b#x*t",{"_index":12096,"t":{},"b":{"48":{}}}],["a#y*t1+b#y*t",{"_index":12097,"t":{},"b":{"48":{}}}],["a&0",{"_index":11458,"t":{},"b":{"45":{}}}],["a'*a",{"_index":8934,"t":{},"b":{"21":{}}}],["a'*f",{"_index":9024,"t":{},"b":{"21":{}}}],["a(0",{"_index":4865,"t":{},"b":{"11":{},"50":{}}}],["a(0,xh",{"_index":11552,"t":{},"b":{"45":{}}}],["a(0:4:2",{"_index":8916,"t":{},"b":{"21":{}}}],["a(0:n",{"_index":8949,"t":{},"b":{"21":{}}}],["a(1",{"_index":8950,"t":{},"b":{"21":{}}}],["a(10",{"_index":9092,"t":{},"b":{"21":{},"57":{},"60":{}}}],["a(2",{"_index":5051,"t":{},"b":{"11":{},"21":{}}}],["a(3:4",{"_index":8917,"t":{},"b":{"21":{}}}],["a(5",{"_index":8898,"t":{},"b":{"21":{},"40":{},"42":{}}}],["a(\\;d^2e[\\mathbf{u}](\\mathbf{v},\\mathbf{w})\\;,\\;e[\\mathbf{u",{"_index":11672,"t":{},"b":{"46":{}}}],["a(\\;de[\\mathbf{u}](\\mathbf{v})\\;,de[\\mathbf{u}](\\mathbf{w",{"_index":11673,"t":{},"b":{"46":{}}}],["a(\\mathbf{u},\\mathbf{v",{"_index":11398,"t":{},"b":{"45":{}}}],["a(\\mathbf{u},\\mathbf{v})+b(\\mathbf{v},p",{"_index":11393,"t":{},"b":{"45":{}}}],["a(\\mathbf{u}_h,\\mathbf{v}_h)+b(\\mathbf{v}_h,p",{"_index":11415,"t":{},"b":{"45":{}}}],["a(\\mathbf{u}_h^\\epsilon,\\mathbf{v}_h)+b(\\mathbf{v}_h,p_h^{\\epsilon",{"_index":11472,"t":{},"b":{"45":{}}}],["a(\\mathbf{v}_h,\\mathbf{v}_h)\\g",{"_index":11420,"t":{},"b":{"45":{}}}],["a(\\phi_i,\\phi_i)>0,\\qquad",{"_index":4283,"t":{},"b":{"11":{}}}],["a(\\phi_i,\\phi_j)&\\l",{"_index":4284,"t":{},"b":{"11":{}}}],["a(\\phi_j,\\phi_i)\\nonumber\\end{split",{"_index":11006,"t":{},"b":{"41":{}}}],["a(de[\\mathbf{u}](\\mathbf{v}),e[\\mathbf{u",{"_index":11665,"t":{},"b":{"46":{}}}],["a(e[u_{1},u_{2}],e[u_{1},u_{2",{"_index":11651,"t":{},"b":{"46":{}}}],["a(i",{"_index":4916,"t":{},"b":{"11":{},"21":{},"57":{},"60":{}}}],["a(i(i",{"_index":8954,"t":{},"b":{"21":{}}}],["a(i,j",{"_index":8957,"t":{},"b":{"21":{}}}],["a(i,k)*a1(k,j",{"_index":9068,"t":{},"b":{"21":{}}}],["a(k[0",{"_index":2606,"t":{},"b":{"4":{}}}],["a(n",{"_index":4914,"t":{},"b":{"11":{},"21":{}}}],["a(t",{"_index":5210,"t":{},"b":{"13":{},"15":{},"24":{},"38":{},"40":{},"42":{},"43":{},"48":{},"49":{},"70":{}}}],["a(u",{"_index":14568,"t":{},"b":{"69":{},"75":{}}}],["a(u,v",{"_index":4445,"t":{},"b":{"11":{},"46":{},"49":{},"72":{},"76":{}}}],["a(v,vh",{"_index":15211,"t":{},"b":{"77":{}}}],["a(vh",{"_index":4863,"t":{},"b":{"11":{},"50":{},"70":{},"76":{}}}],["a(vh0",{"_index":5052,"t":{},"b":{"11":{}}}],["a(vh1",{"_index":5053,"t":{},"b":{"11":{}}}],["a(x)\\in",{"_index":14324,"t":{},"b":{"65":{}}}],["a(x)||_p",{"_index":13471,"t":{},"b":{"54":{}}}],["a(x)||_p^2",{"_index":13474,"t":{},"b":{"54":{}}}],["a(x,i",{"_index":11652,"t":{},"b":{"46":{}}}],["a(xh",{"_index":11551,"t":{},"b":{"45":{}}}],["a)*(1",{"_index":13679,"t":{},"b":{"54":{}}}],["a),\\quad",{"_index":2491,"t":{},"b":{"4":{}}}],["a)/c",{"_index":13914,"t":{},"b":{"60":{}}}],["a)/c|+1",{"_index":13913,"t":{},"b":{"60":{}}}],["a)u^{n+1",{"_index":10998,"t":{},"b":{"41":{}}}],["a*(3",{"_index":14185,"t":{},"b":{"63":{}}}],["a*b",{"_index":3716,"t":{},"b":{"10":{},"11":{},"60":{}}}],["a*cos(t",{"_index":5847,"t":{},"b":{"13":{},"72":{}}}],["a*f",{"_index":9022,"t":{},"b":{"21":{}}}],["a*t",{"_index":5784,"t":{},"b":{"13":{},"22":{},"63":{},"81":{}}}],["a*u",{"_index":8643,"t":{},"b":{"20":{}}}],["a*u1",{"_index":2008,"t":{},"b":{"3":{},"20":{}}}],["a*u2",{"_index":2010,"t":{},"b":{"3":{},"20":{}}}],["a*w*v",{"_index":1787,"t":{},"b":{"3":{},"20":{}}}],["a*x",{"_index":11786,"t":{},"b":{"47":{}}}],["a*xx",{"_index":7735,"t":{},"b":{"15":{},"26":{}}}],["a+(1/\\epsilon)b^*b",{"_index":11484,"t":{},"b":{"45":{}}}],["a+2*a*t",{"_index":5778,"t":{},"b":{"13":{}}}],["a+3b",{"_index":4733,"t":{},"b":{"11":{}}}],["a+\\frac{x}{1+x",{"_index":598,"t":{},"b":{"3":{},"47":{}}}],["a+b)*cos(t",{"_index":5696,"t":{},"b":{"13":{},"21":{}}}],["a+b)*sin(t",{"_index":5698,"t":{},"b":{"13":{},"21":{}}}],["a+c,0,a+c",{"_index":11732,"t":{},"b":{"46":{}}}],["a+t",{"_index":5898,"t":{},"b":{"13":{},"24":{}}}],["a+u/(1+u",{"_index":8653,"t":{},"b":{"20":{}}}],["a,a",{"_index":8531,"t":{},"b":{"19":{}}}],["a,a,b,b),(a,b,a,b),(a,b,b,a),(b,b,a,a),(b,a,b,a),(b,a,a,b",{"_index":4737,"t":{},"b":{"11":{}}}],["a,b",{"_index":1172,"t":{},"b":{"3":{},"14":{},"15":{},"80":{}}}],["a,b)\\in\\mathcal{m}_{m,n}(\\mathbb{r})\\times\\mathbb{r}^{m",{"_index":1171,"t":{},"b":{"3":{}}}],["a,b)\\in\\mathcal{m}_{n,n}(\\mathbb{r})\\times\\mathbb{r}^{n",{"_index":1169,"t":{},"b":{"3":{}}}],["a,b,b",{"_index":15340,"t":{},"b":{"80":{}}}],["a,b,b,b),(b,a,b,b),(b,b,a,b),(b,b,b,a",{"_index":4734,"t":{},"b":{"11":{}}}],["a,b,c",{"_index":4206,"t":{},"b":{"11":{},"46":{}}}],["a,data",{"_index":8227,"t":{},"b":{"15":{}}}],["a.",{"_index":10964,"t":{},"b":{"41":{}}}],["a.diag",{"_index":9036,"t":{},"b":{"21":{},"50":{},"60":{}}}],["a.imax",{"_index":8929,"t":{},"b":{"21":{}}}],["a.imin",{"_index":8932,"t":{},"b":{"21":{}}}],["a.jmax",{"_index":8966,"t":{},"b":{"21":{}}}],["a.jmin",{"_index":8968,"t":{},"b":{"21":{}}}],["a.l1",{"_index":8922,"t":{},"b":{"21":{}}}],["a.l2",{"_index":8924,"t":{},"b":{"21":{}}}],["a.linfti",{"_index":8926,"t":{},"b":{"21":{}}}],["a.m",{"_index":13967,"t":{},"b":{"60":{}}}],["a.max",{"_index":8928,"t":{},"b":{"21":{}}}],["a.min",{"_index":8931,"t":{},"b":{"21":{}}}],["a.n",{"_index":13965,"t":{},"b":{"60":{}}}],["a.quantile(0.2",{"_index":8936,"t":{},"b":{"21":{}}}],["a.quantile(q",{"_index":13918,"t":{},"b":{"60":{}}}],["a.resize(n",{"_index":13968,"t":{},"b":{"60":{}}}],["a.sum",{"_index":8927,"t":{},"b":{"21":{}}}],["a.x)*a0",{"_index":2631,"t":{},"b":{"4":{}}}],["a.y)*a0",{"_index":2633,"t":{},"b":{"4":{}}}],["a/2",{"_index":9262,"t":{},"b":{"22":{}}}],["a/b",{"_index":13596,"t":{},"b":{"54":{},"60":{}}}],["a/r",{"_index":12531,"t":{},"b":{"51":{}}}],["a0",{"_index":2617,"t":{},"b":{"4":{}}}],["a0(t",{"_index":5003,"t":{},"b":{"11":{},"62":{},"63":{},"74":{}}}],["a0)x",{"_index":8282,"t":{},"b":{"16":{}}}],["a0,a1,p",{"_index":4211,"t":{},"b":{"11":{}}}],["a0,p,a2",{"_index":4209,"t":{},"b":{"11":{}}}],["a00(t",{"_index":15370,"t":{},"b":{"81":{}}}],["a01(10*n",{"_index":15402,"t":{},"b":{"81":{}}}],["a01(t",{"_index":15375,"t":{},"b":{"81":{}}}],["a0a1",{"_index":4171,"t":{},"b":{"11":{}}}],["a1",{"_index":2619,"t":{},"b":{"4":{},"11":{},"16":{},"21":{},"39":{},"41":{},"60":{}}}],["a1(10*nn",{"_index":14201,"t":{},"b":{"63":{}}}],["a1(2.+0i:10.+0i",{"_index":8911,"t":{},"b":{"21":{}}}],["a1(20",{"_index":14147,"t":{},"b":{"62":{}}}],["a1(20*nn",{"_index":14919,"t":{},"b":{"74":{}}}],["a1(2:10",{"_index":8907,"t":{},"b":{"21":{}}}],["a1(n",{"_index":5014,"t":{},"b":{"11":{},"21":{}}}],["a1(t",{"_index":5005,"t":{},"b":{"11":{},"62":{},"63":{},"74":{}}}],["a1.im",{"_index":8914,"t":{},"b":{"21":{}}}],["a1.r",{"_index":8913,"t":{},"b":{"21":{}}}],["a10(10*n",{"_index":15399,"t":{},"b":{"81":{}}}],["a10(t",{"_index":15371,"t":{},"b":{"81":{}}}],["a11",{"_index":11733,"t":{},"b":{"46":{}}}],["a11(10*n",{"_index":15403,"t":{},"b":{"81":{}}}],["a11(t",{"_index":15378,"t":{},"b":{"81":{}}}],["a11_0(doubl",{"_index":2289,"t":{},"b":{"4":{}}}],["a11_i",{"_index":2295,"t":{},"b":{"4":{}}}],["a11_nv(doubl",{"_index":2292,"t":{},"b":{"4":{}}}],["a12",{"_index":11742,"t":{},"b":{"46":{}}}],["a13",{"_index":11743,"t":{},"b":{"46":{}}}],["a1[][j",{"_index":2957,"t":{},"b":{"4":{}}}],["a2",{"_index":2621,"t":{},"b":{"4":{},"11":{},"16":{},"21":{},"41":{}}}],["a2(10*nn",{"_index":14202,"t":{},"b":{"63":{},"74":{}}}],["a2(2.:3.:10",{"_index":8912,"t":{},"b":{"21":{}}}],["a2(20",{"_index":14148,"t":{},"b":{"62":{}}}],["a2(2:3:10",{"_index":8908,"t":{},"b":{"21":{}}}],["a2(t",{"_index":14140,"t":{},"b":{"62":{},"63":{},"74":{}}}],["a20(10*n",{"_index":15400,"t":{},"b":{"81":{}}}],["a20(t",{"_index":15373,"t":{},"b":{"81":{}}}],["a21",{"_index":11746,"t":{},"b":{"46":{}}}],["a21(10*n",{"_index":15404,"t":{},"b":{"81":{}}}],["a21(t",{"_index":15380,"t":{},"b":{"81":{}}}],["a21_0(doubl",{"_index":2290,"t":{},"b":{"4":{}}}],["a21_i",{"_index":2296,"t":{},"b":{"4":{}}}],["a21_nv(doubl",{"_index":2293,"t":{},"b":{"4":{}}}],["a22",{"_index":11735,"t":{},"b":{"46":{}}}],["a22_0(doubl",{"_index":2291,"t":{},"b":{"4":{}}}],["a22_i",{"_index":2297,"t":{},"b":{"4":{}}}],["a22_nv(doubl",{"_index":2294,"t":{},"b":{"4":{}}}],["a23",{"_index":11744,"t":{},"b":{"46":{}}}],["a3",{"_index":4935,"t":{},"b":{"11":{}}}],["a3(10*nn",{"_index":14203,"t":{},"b":{"63":{}}}],["a3(150*nn",{"_index":14920,"t":{},"b":{"74":{}}}],["a3(20",{"_index":14149,"t":{},"b":{"62":{}}}],["a3(t",{"_index":14141,"t":{},"b":{"62":{},"63":{},"74":{}}}],["a30(10*n",{"_index":15401,"t":{},"b":{"81":{}}}],["a30(t",{"_index":15374,"t":{},"b":{"81":{}}}],["a31",{"_index":11747,"t":{},"b":{"46":{}}}],["a31(10*n",{"_index":15405,"t":{},"b":{"81":{}}}],["a31(t",{"_index":15381,"t":{},"b":{"81":{}}}],["a32",{"_index":11748,"t":{},"b":{"46":{}}}],["a33",{"_index":11741,"t":{},"b":{"46":{}}}],["a4",{"_index":4936,"t":{},"b":{"11":{},"62":{}}}],["a4(10*nn",{"_index":14204,"t":{},"b":{"63":{}}}],["a4(20",{"_index":14150,"t":{},"b":{"62":{}}}],["a4(5*nn",{"_index":14921,"t":{},"b":{"74":{}}}],["a4(t",{"_index":14142,"t":{},"b":{"62":{},"63":{},"74":{}}}],["a5(10*nn",{"_index":14205,"t":{},"b":{"63":{}}}],["a5(100*nn",{"_index":14922,"t":{},"b":{"74":{}}}],["a5(20",{"_index":14151,"t":{},"b":{"62":{}}}],["a5(t",{"_index":14143,"t":{},"b":{"62":{},"63":{},"74":{}}}],["a6(20",{"_index":14152,"t":{},"b":{"62":{}}}],["a6(t",{"_index":14144,"t":{},"b":{"62":{}}}],["a:1:c",{"_index":13911,"t":{},"b":{"60":{}}}],["a:\\((x,y,u(x,i",{"_index":11829,"t":{},"b":{"48":{}}}],["a:b",{"_index":13800,"t":{},"b":{"58":{},"65":{}}}],["a:b:c",{"_index":13912,"t":{},"b":{"60":{}}}],["a:c",{"_index":13910,"t":{},"b":{"60":{}}}],["a<0)&(0<b",{"_index":13532,"t":{},"b":{"54":{}}}],["a<b",{"_index":13618,"t":{},"b":{"54":{}}}],["a[0",{"_index":5060,"t":{},"b":{"11":{}}}],["a[1",{"_index":5067,"t":{},"b":{"11":{}}}],["a[2",{"_index":8901,"t":{},"b":{"21":{}}}],["a[a.imax",{"_index":8930,"t":{},"b":{"21":{}}}],["a[a.imin",{"_index":8933,"t":{},"b":{"21":{}}}],["a[i",{"_index":4919,"t":{},"b":{"11":{},"21":{},"57":{},"60":{}}}],["a[i[i",{"_index":8939,"t":{},"b":{"21":{}}}],["a[q*n",{"_index":13920,"t":{},"b":{"60":{}}}],["a[u,v,p",{"_index":15338,"t":{},"b":{"80":{}}}],["a\\),\\(m",{"_index":4825,"t":{},"b":{"11":{},"68":{}}}],["a\\,r_j^t",{"_index":3597,"t":{},"b":{"8":{}}}],["a\\;?\\;b:c",{"_index":7513,"t":{},"b":{"15":{}}}],["a\\cdot",{"_index":14330,"t":{},"b":{"65":{}}}],["a\\cdot\\nabla\\varphi",{"_index":14315,"t":{},"b":{"65":{}}}],["a\\hat{x",{"_index":8107,"t":{},"b":{"15":{}}}],["a\\in",{"_index":7266,"t":{},"b":{"14":{}}}],["a\\l",{"_index":7303,"t":{},"b":{"14":{}}}],["a\\left",{"_index":10978,"t":{},"b":{"41":{}}}],["a\\mathbf{x",{"_index":692,"t":{},"b":{"3":{}}}],["a\\nabla\\varphi",{"_index":14351,"t":{},"b":{"65":{}}}],["a\\tim",{"_index":3566,"t":{},"b":{"8":{}}}],["a\\}u^n",{"_index":11000,"t":{},"b":{"41":{}}}],["a^2r_0,...,a^{m",{"_index":7932,"t":{},"b":{"15":{}}}],["a^4",{"_index":15310,"t":{},"b":{"79":{}}}],["a^b",{"_index":13674,"t":{},"b":{"54":{}}}],["a^k_i+b^k_ix+c^k_iy",{"_index":4116,"t":{},"b":{"11":{}}}],["a^k_i+b^k_ix+c^k_iy+d^k_ix^2+e^k_ixy+f^f_jy^2\\textrm",{"_index":4134,"t":{},"b":{"11":{}}}],["a^k_i+b^k_ix+c^k_iy~\\textrm{for",{"_index":4267,"t":{},"b":{"11":{}}}],["a^t",{"_index":3156,"t":{},"b":{"5":{},"15":{}}}],["a^{\\text{aprec",{"_index":3289,"t":{},"b":{"5":{}}}],["a^{\\text{aprec}}_i",{"_index":3296,"t":{},"b":{"5":{}}}],["a^{\\text{aprec}}_j",{"_index":3299,"t":{},"b":{"5":{}}}],["a^{\\text{eprec",{"_index":3286,"t":{},"b":{"5":{}}}],["a^{\\text{prec",{"_index":3191,"t":{},"b":{"5":{}}}],["a_0",{"_index":4166,"t":{},"b":{"11":{}}}],["a_0),i",{"_index":4237,"t":{},"b":{"11":{}}}],["a_0)\\end{split",{"_index":4170,"t":{},"b":{"11":{}}}],["a_0,\\overrightarrow",{"_index":4177,"t":{},"b":{"11":{}}}],["a_0,a_0,i",{"_index":4242,"t":{},"b":{"11":{}}}],["a_0,a_1,a_2",{"_index":4148,"t":{},"b":{"11":{}}}],["a_0,i",{"_index":4240,"t":{},"b":{"11":{}}}],["a_0,p",{"_index":4239,"t":{},"b":{"11":{}}}],["a_0,p',i",{"_index":4247,"t":{},"b":{"11":{}}}],["a_0,p,i",{"_index":4241,"t":{},"b":{"11":{}}}],["a_0a_1",{"_index":4169,"t":{},"b":{"11":{}}}],["a_0a_2",{"_index":4168,"t":{},"b":{"11":{}}}],["a_1",{"_index":4167,"t":{},"b":{"11":{},"41":{}}}],["a_1,a_2,a_3",{"_index":12438,"t":{},"b":{"51":{}}}],["a_1\\{{h}_{\\rho}^t,{h}_{\\phi}^t,{h}_{z}^t",{"_index":12433,"t":{},"b":{"51":{}}}],["a_1^m",{"_index":11145,"t":{},"b":{"41":{}}}],["a_1^m(x",{"_index":11147,"t":{},"b":{"41":{}}}],["a_2",{"_index":4212,"t":{},"b":{"11":{},"41":{}}}],["a_2\\{{h}_{\\rho}^t,{h}_{\\phi}^t,{h}_{z}^t",{"_index":12434,"t":{},"b":{"51":{}}}],["a_2^m",{"_index":11146,"t":{},"b":{"41":{}}}],["a_2^m(x",{"_index":11148,"t":{},"b":{"41":{}}}],["a_3\\{{h}_{\\rho}^t,{h}_{\\phi}^t,{h}_{z}^t",{"_index":12435,"t":{},"b":{"51":{}}}],["a_c",{"_index":3630,"t":{},"b":{"8":{}}}],["a_c\\in",{"_index":3626,"t":{},"b":{"8":{}}}],["a_ce_c",{"_index":8109,"t":{},"b":{"15":{}}}],["a_i",{"_index":1037,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"15":{},"21":{}}}],["a_i\\)(\\(i",{"_index":7943,"t":{},"b":{"15":{}}}],["a_i^{\\text{neu",{"_index":3264,"t":{},"b":{"5":{},"8":{},"10":{}}}],["a_i^{\\text{prec",{"_index":3190,"t":{},"b":{"5":{}}}],["a_ij",{"_index":4963,"t":{},"b":{"11":{},"21":{}}}],["a_j",{"_index":3125,"t":{},"b":{"5":{},"8":{},"10":{}}}],["a_j\\l",{"_index":5189,"t":{},"b":{"13":{}}}],["a_k",{"_index":7298,"t":{},"b":{"14":{}}}],["a_p",{"_index":7862,"t":{},"b":{"15":{}}}],["a_{12,i}\\\\a{12}_i",{"_index":2300,"t":{},"b":{"4":{}}}],["a_{22,i}\\end{array}\\right",{"_index":2301,"t":{},"b":{"4":{}}}],["a_{i",{"_index":3603,"t":{},"b":{"8":{}}}],["a_{ii",{"_index":4565,"t":{},"b":{"11":{},"76":{}}}],["a_{ij",{"_index":4790,"t":{},"b":{"11":{},"14":{},"41":{},"45":{},"65":{},"68":{},"76":{}}}],["a_{ij}),\\quad",{"_index":11005,"t":{},"b":{"41":{}}}],["a_{ij})^t",{"_index":7301,"t":{},"b":{"14":{}}}],["a_{ij}b_{ij",{"_index":14257,"t":{},"b":{"64":{}}}],["a_{ij}u_j",{"_index":15122,"t":{},"b":{"76":{}}}],["a_{j",{"_index":3600,"t":{},"b":{"8":{}}}],["a_{ji",{"_index":7302,"t":{},"b":{"14":{}}}],["a_{k",{"_index":7300,"t":{},"b":{"14":{}}}],["a_{k})^t",{"_index":7299,"t":{},"b":{"14":{}}}],["a_{p",{"_index":7763,"t":{},"b":{"15":{}}}],["aa",{"_index":6710,"t":{},"b":{"13":{},"15":{},"21":{},"22":{},"26":{},"50":{},"60":{},"75":{},"77":{},"80":{}}}],["aa(t",{"_index":15008,"t":{},"b":{"75":{}}}],["aa(xh",{"_index":15341,"t":{},"b":{"80":{}}}],["aa.n",{"_index":8073,"t":{},"b":{"15":{}}}],["aa.nbcoef",{"_index":8074,"t":{},"b":{"15":{}}}],["aaa",{"_index":8211,"t":{},"b":{"15":{},"70":{}}}],["aaa1(2*m",{"_index":14482,"t":{},"b":{"67":{}}}],["aaa1(t",{"_index":14472,"t":{},"b":{"67":{}}}],["aaa2(5*m",{"_index":14484,"t":{},"b":{"67":{}}}],["aaa2(t",{"_index":14476,"t":{},"b":{"67":{}}}],["aacas1",{"_index":9237,"t":{},"b":{"21":{}}}],["ab",{"_index":5571,"t":{},"b":{"13":{},"21":{},"48":{},"54":{}}}],["abc",{"_index":5597,"t":{},"b":{"13":{}}}],["abcd",{"_index":11828,"t":{},"b":{"48":{}}}],["abcdefghijk",{"_index":8861,"t":{},"b":{"21":{}}}],["abov",{"_index":765,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"11":{},"13":{},"16":{},"19":{},"26":{},"37":{},"39":{},"41":{},"48":{},"61":{},"64":{},"66":{},"69":{},"75":{},"76":{},"79":{}}}],["abs((2.45+5.33i",{"_index":8849,"t":{},"b":{"21":{}}}],["abs((i+1)*u[i",{"_index":8627,"t":{},"b":{"20":{}}}],["abs(a",{"_index":13611,"t":{},"b":{"54":{}}}],["abs(aij",{"_index":9095,"t":{},"b":{"21":{}}}],["abs(b",{"_index":13460,"t":{},"b":{"54":{}}}],["abs(dx(a1)(x1",{"_index":2965,"t":{},"b":{"4":{}}}],["abs(dx(a2)(x1",{"_index":2966,"t":{},"b":{"4":{}}}],["abs(dy(a1)(x1",{"_index":2968,"t":{},"b":{"4":{}}}],["abs(dy(a2)(x1",{"_index":2969,"t":{},"b":{"4":{}}}],["abs(dy(ux",{"_index":14117,"t":{},"b":{"61":{}}}],["abs(ep",{"_index":11638,"t":{},"b":{"45":{}}}],["abs(epsp",{"_index":14967,"t":{},"b":{"74":{}}}],["abs(epsu",{"_index":14966,"t":{},"b":{"74":{}}}],["abs(epsv",{"_index":14965,"t":{},"b":{"74":{}}}],["abs(err[].max)/abs(uex[].max",{"_index":11051,"t":{},"b":{"41":{}}}],["abs(i",{"_index":9471,"t":{},"b":{"26":{}}}],["abs(i1",{"_index":4769,"t":{},"b":{"11":{}}}],["abs(i2",{"_index":4770,"t":{},"b":{"11":{}}}],["abs(part",{"_index":9439,"t":{},"b":{"26":{}}}],["abs(phii",{"_index":9477,"t":{},"b":{"26":{}}}],["abs(r",{"_index":14512,"t":{},"b":{"67":{}}}],["abs(u)>0",{"_index":5622,"t":{},"b":{"13":{}}}],["abs(u)>1.",{"_index":5626,"t":{},"b":{"13":{}}}],["abs(w[].max",{"_index":8803,"t":{},"b":{"21":{}}}],["abs(w[].min",{"_index":8804,"t":{},"b":{"21":{}}}],["abs(x",{"_index":9087,"t":{},"b":{"21":{},"60":{}}}],["abs(z",{"_index":8820,"t":{},"b":{"21":{}}}],["abs(z1",{"_index":8832,"t":{},"b":{"21":{}}}],["abs(z2",{"_index":8837,"t":{},"b":{"21":{}}}],["absciss",{"_index":12133,"t":{},"b":{"48":{}}}],["abscissa",{"_index":3802,"t":{},"b":{"11":{},"48":{}}}],["absenc",{"_index":10202,"t":{},"b":{"37":{},"66":{}}}],["abserror",{"_index":5558,"t":{},"b":{"13":{},"41":{},"54":{},"61":{},"67":{}}}],["absiss",{"_index":12122,"t":{},"b":{"48":{}}}],["absolut",{"_index":570,"t":{},"b":{"3":{},"13":{},"45":{},"54":{},"74":{},"79":{}}}],["absorpt",{"_index":3281,"t":{},"b":{"5":{},"10":{},"81":{}}}],["abstract",{"_index":3131,"t":{},"b":{"5":{},"10":{},"15":{},"36":{}}}],["ac",{"_index":1182,"t":{},"b":{"3":{},"15":{},"26":{}}}],["academ",{"_index":11784,"t":{},"b":{"47":{}}}],["academi",{"_index":9764,"t":{},"b":{"29":{}}}],["acceler",{"_index":3585,"t":{},"b":{"8":{},"15":{}}}],["accept",{"_index":6999,"t":{},"b":{"13":{},"67":{}}}],["access",{"_index":3475,"t":{},"b":{"7":{},"12":{},"13":{},"16":{},"17":{},"31":{},"35":{},"36":{},"61":{},"76":{}}}],["accord",{"_index":1187,"t":{},"b":{"3":{},"13":{},"17":{},"35":{},"36":{},"48":{},"52":{},"54":{},"65":{}}}],["account",{"_index":1013,"t":{},"b":{"3":{},"13":{},"15":{},"41":{},"51":{},"79":{}}}],["accur",{"_index":1215,"t":{},"b":{"3":{},"60":{}}}],["accuraci",{"_index":1687,"t":{},"b":{"3":{},"39":{},"54":{},"72":{}}}],["achdou",{"_index":290,"t":{},"b":{"2":{}}}],["achdou2005",{"_index":289,"t":{},"b":{"2":{},"41":{}}}],["achiev",{"_index":1052,"t":{},"b":{"3":{},"48":{}}}],["acm",{"_index":129,"t":{},"b":{"2":{}}}],["aco",{"_index":13461,"t":{},"b":{"54":{}}}],["acos(x",{"_index":13463,"t":{},"b":{"54":{}}}],["acosh",{"_index":13464,"t":{},"b":{"54":{}}}],["acosh(x",{"_index":13465,"t":{},"b":{"54":{}}}],["acoust",{"_index":3613,"t":{},"b":{"8":{},"62":{},"69":{},"79":{}}}],["acousticslogo",{"_index":14123,"t":{"62":{}},"b":{}}],["acquir",{"_index":8398,"t":{},"b":{"18":{},"37":{}}}],["acronym",{"_index":3459,"t":{},"b":{"7":{}}}],["act",{"_index":3485,"t":{},"b":{"7":{},"10":{},"37":{},"48":{}}}],["action",{"_index":3132,"t":{},"b":{"5":{},"18":{},"64":{}}}],["activ",{"_index":361,"t":{},"b":{"2":{},"3":{},"61":{}}}],["actual",{"_index":1045,"t":{},"b":{"3":{},"5":{},"9":{},"51":{},"65":{}}}],["ad",{"_index":914,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"48":{},"50":{},"51":{},"66":{},"69":{},"71":{},"76":{},"77":{}}}],["ada",{"_index":10087,"t":{},"b":{"35":{}}}],["adap",{"_index":7180,"t":{},"b":{"13":{}}}],["adapt",{"_index":68,"t":{},"b":{"2":{},"3":{},"6":{},"9":{},"11":{},"12":{},"13":{},"16":{},"20":{},"24":{},"25":{},"33":{},"40":{},"41":{},"43":{},"48":{},"54":{},"67":{},"74":{},"76":{}}}],["adaptmesh",{"_index":5497,"t":{},"b":{"13":{},"16":{},"24":{},"25":{},"40":{},"54":{},"61":{},"67":{}}}],["adaptmesh(disk",{"_index":11888,"t":{},"b":{"48":{}}}],["adaptmesh(t0h",{"_index":12191,"t":{},"b":{"48":{}}}],["adaptmesh(th",{"_index":1505,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"24":{},"25":{},"40":{},"41":{},"43":{},"47":{},"48":{},"54":{},"61":{},"74":{}}}],["adaptmesh(th,f",{"_index":15091,"t":{},"b":{"76":{}}}],["adaptmesh(th,m11*vv,m21*vv,m22*vv,ismetr",{"_index":6481,"t":{},"b":{"13":{}}}],["adaptmesh(th,u,err",{"_index":14656,"t":{},"b":{"71":{}}}],["adaptmesh(thold",{"_index":5544,"t":{},"b":{"13":{}}}],["add",{"_index":577,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"19":{},"35":{},"36":{},"68":{},"71":{},"72":{},"78":{},"79":{}}}],["add(iluk",{"_index":7989,"t":{},"b":{"15":{}}}],["addit",{"_index":2230,"t":{},"b":{"4":{},"5":{},"8":{},"9":{},"10":{},"13":{},"15":{},"35":{},"58":{},"60":{},"65":{}}}],["additif",{"_index":7956,"t":{},"b":{"15":{}}}],["addlay",{"_index":10163,"t":{},"b":{"36":{},"53":{}}}],["addlayers(thg",{"_index":9444,"t":{},"b":{"26":{}}}],["addlayers(thii",{"_index":9473,"t":{},"b":{"26":{}}}],["addlayers(thii,suppii[],nlayer,phii",{"_index":7646,"t":{},"b":{"15":{}}}],["addnewfe(\"rt0ortho",{"_index":2663,"t":{},"b":{"4":{}}}],["addnewfe.h",{"_index":2532,"t":{},"b":{"4":{}}}],["addpath('add",{"_index":14668,"t":{},"b":{"71":{}}}],["addpath('path",{"_index":8611,"t":{},"b":{"19":{}}}],["addr",{"_index":8412,"t":{},"b":{"18":{}}}],["adef1",{"_index":3243,"t":{},"b":{"5":{},"9":{}}}],["adef2",{"_index":3246,"t":{},"b":{"5":{},"9":{}}}],["adj",{"_index":5335,"t":{},"b":{"13":{},"54":{}}}],["adjac",{"_index":4398,"t":{},"b":{"11":{},"13":{},"54":{},"55":{}}}],["adjoint",{"_index":15061,"t":{},"b":{"75":{}}}],["adjust",{"_index":14760,"t":{},"b":{"72":{}}}],["adopt",{"_index":14594,"t":{},"b":{"70":{}}}],["adpat",{"_index":1503,"t":{},"b":{"3":{}}}],["adual",{"_index":15192,"t":{},"b":{"77":{}}}],["adual(cc",{"_index":15187,"t":{},"b":{"77":{}}}],["adual(v,vh",{"_index":15218,"t":{},"b":{"77":{}}}],["adual(vh,vh,solv",{"_index":15225,"t":{},"b":{"77":{}}}],["advanc",{"_index":3315,"t":{},"b":{"5":{},"7":{},"10":{},"12":{},"16":{},"17":{},"37":{},"45":{},"54":{}}}],["advantag",{"_index":3580,"t":{},"b":{"8":{},"19":{},"41":{},"77":{}}}],["advect",{"_index":8265,"t":{},"b":{"16":{}}}],["advic",{"_index":1125,"t":{},"b":{"3":{}}}],["advis",{"_index":8171,"t":{},"b":{"15":{},"35":{}}}],["ae",{"_index":8106,"t":{},"b":{"15":{}}}],["aerodynam",{"_index":11940,"t":{},"b":{"48":{},"66":{}}}],["affect",{"_index":1249,"t":{},"b":{"3":{},"11":{}}}],["affin",{"_index":742,"t":{},"b":{"3":{},"11":{},"15":{},"20":{},"53":{},"54":{},"76":{}}}],["affinecg",{"_index":695,"t":{},"b":{"3":{},"54":{}}}],["affinecg(a",{"_index":696,"t":{},"b":{"3":{},"54":{}}}],["affinegmr",{"_index":8636,"t":{},"b":{"20":{},"54":{}}}],["affinegmres(a",{"_index":701,"t":{},"b":{"3":{}}}],["affinegmres(dj",{"_index":703,"t":{},"b":{"3":{},"20":{}}}],["afunction.hpp",{"_index":2767,"t":{},"b":{"4":{}}}],["again",{"_index":1044,"t":{},"b":{"3":{},"15":{},"33":{},"35":{},"38":{},"41":{},"79":{}}}],["against",{"_index":15090,"t":{},"b":{"76":{}}}],["agglomer",{"_index":8148,"t":{},"b":{"15":{}}}],["agood",{"_index":2739,"t":{},"b":{"4":{}}}],["agre",{"_index":15351,"t":{},"b":{"80":{}}}],["ai",{"_index":3122,"t":{},"b":{"5":{},"15":{},"26":{},"57":{},"60":{}}}],["ai(n",{"_index":13921,"t":{},"b":{"60":{}}}],["ai*u",{"_index":7596,"t":{},"b":{"15":{},"26":{}}}],["ai*v",{"_index":7625,"t":{},"b":{"15":{},"26":{}}}],["ai.n",{"_index":9711,"t":{},"b":{"26":{},"60":{}}}],["ai.nbcoef",{"_index":9710,"t":{},"b":{"26":{}}}],["ai.sort",{"_index":13924,"t":{},"b":{"60":{}}}],["ai[i",{"_index":13922,"t":{},"b":{"60":{}}}],["aii",{"_index":12385,"t":{},"b":{"50":{},"60":{}}}],["aii.imax",{"_index":13937,"t":{},"b":{"60":{}}}],["aii.imin",{"_index":13933,"t":{},"b":{"60":{}}}],["aii.jmax",{"_index":13939,"t":{},"b":{"60":{}}}],["aii.jmin",{"_index":13935,"t":{},"b":{"60":{}}}],["aii.m",{"_index":13928,"t":{},"b":{"60":{}}}],["aii.max",{"_index":13932,"t":{},"b":{"60":{}}}],["aii.min",{"_index":13930,"t":{},"b":{"60":{}}}],["aii.n",{"_index":13926,"t":{},"b":{"60":{}}}],["aiin",{"_index":12389,"t":{},"b":{"50":{}}}],["aiin(n",{"_index":12384,"t":{},"b":{"50":{}}}],["aij",{"_index":9093,"t":{},"b":{"21":{},"57":{}}}],["aim",{"_index":1520,"t":{},"b":{"3":{},"10":{}}}],["air",{"_index":11952,"t":{},"b":{"48":{},"51":{},"61":{},"62":{},"63":{},"66":{},"79":{},"81":{}}}],["air)/(meat",{"_index":14215,"t":{},"b":{"63":{}}}],["airfoil",{"_index":5680,"t":{},"b":{"13":{},"66":{}}}],["airi",{"_index":12639,"t":{},"b":{"53":{}}}],["airthium",{"_index":9786,"t":{},"b":{"29":{}}}],["airybiri",{"_index":12638,"t":{},"b":{"53":{}}}],["ak",{"_index":12388,"t":{},"b":{"50":{}}}],["ak(n",{"_index":12386,"t":{},"b":{"50":{}}}],["ak_m",{"_index":7934,"t":{},"b":{"15":{}}}],["akin",{"_index":14590,"t":{},"b":{"70":{}}}],["al",{"_index":207,"t":{},"b":{"2":{},"3":{},"15":{},"20":{},"77":{}}}],["alain",{"_index":445,"t":{},"b":{"2":{}}}],["alap",{"_index":660,"t":{},"b":{"3":{},"20":{}}}],["alap(vh",{"_index":669,"t":{},"b":{"3":{},"20":{}}}],["alex",{"_index":10173,"t":{},"b":{"37":{}}}],["algebra",{"_index":3312,"t":{},"b":{"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"15":{},"33":{},"37":{},"39":{},"45":{}}}],["algo",{"_index":7632,"t":{},"b":{"15":{},"22":{},"26":{}}}],["algorithlm",{"_index":1977,"t":{},"b":{"3":{}}}],["algorithm",{"_index":26,"t":{"3":{},"20":{},"74":{}},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"19":{},"20":{},"26":{},"27":{},"34":{},"38":{},"45":{},"46":{},"47":{},"50":{},"65":{},"73":{},"74":{},"76":{},"78":{}}}],["algorithms.edp",{"_index":586,"t":{},"b":{"3":{}}}],["algoritm",{"_index":12375,"t":{},"b":{"50":{}}}],["alloc",{"_index":7816,"t":{},"b":{"15":{},"18":{},"26":{},"53":{}}}],["allow",{"_index":813,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"15":{},"18":{},"33":{},"36":{},"37":{},"39":{},"48":{},"51":{},"54":{},"56":{},"60":{},"76":{},"80":{}}}],["alon",{"_index":6953,"t":{},"b":{"13":{}}}],["along",{"_index":863,"t":{},"b":{"3":{},"5":{},"40":{},"48":{},"53":{},"54":{},"64":{},"66":{},"79":{}}}],["alp",{"_index":15210,"t":{},"b":{"77":{}}}],["alp*jump(v)*abs(n.x*u1+n.y*u2",{"_index":15215,"t":{},"b":{"77":{}}}],["alpha",{"_index":610,"t":{},"b":{"3":{},"11":{},"13":{},"14":{},"20":{},"41":{},"45":{},"47":{},"48":{},"51":{},"61":{},"65":{},"68":{},"79":{}}}],["alpha(u",{"_index":14530,"t":{},"b":{"68":{},"79":{}}}],["alpha(u^{m+1",{"_index":15304,"t":{},"b":{"79":{}}}],["alpha(x(\\tau",{"_index":11077,"t":{},"b":{"41":{}}}],["alpha)*vobj",{"_index":1869,"t":{},"b":{"3":{},"20":{}}}],["alpha*(dx(u)*dx(vh",{"_index":11800,"t":{},"b":{"47":{}}}],["alpha*(dx(uh)*dx(vh",{"_index":661,"t":{},"b":{"3":{},"20":{},"47":{}}}],["alpha*(dx(w)*dx(vh",{"_index":639,"t":{},"b":{"3":{},"20":{}}}],["alpha*(u1*v1",{"_index":11525,"t":{},"b":{"45":{}}}],["alpha*convect([up1,up2",{"_index":11526,"t":{},"b":{"45":{}}}],["alpha*convect([upx",{"_index":14067,"t":{},"b":{"61":{}}}],["alpha*pa",{"_index":11631,"t":{},"b":{"45":{}}}],["alpha*u*v",{"_index":4829,"t":{},"b":{"11":{},"68":{},"79":{}}}],["alpha*u0*v",{"_index":5045,"t":{},"b":{"11":{}}}],["alpha*u1*v",{"_index":5040,"t":{},"b":{"11":{}}}],["alpha*ue*v",{"_index":4832,"t":{},"b":{"11":{},"68":{},"79":{}}}],["alpha*v",{"_index":1752,"t":{},"b":{"3":{},"20":{}}}],["alpha*vnvc",{"_index":1870,"t":{},"b":{"3":{},"20":{}}}],["alpha*x*u*v",{"_index":15292,"t":{},"b":{"79":{}}}],["alpha*x*ue*v",{"_index":15293,"t":{},"b":{"79":{}}}],["alpha>0",{"_index":11542,"t":{},"b":{"45":{}}}],["alpha\\dot{u}^0+a\\dot{u}^0",{"_index":11068,"t":{},"b":{"41":{}}}],["alpha\\frac{4}{3}\\pi",{"_index":1847,"t":{},"b":{"3":{}}}],["alpha\\in",{"_index":1845,"t":{},"b":{"3":{}}}],["alpha\\l",{"_index":11543,"t":{},"b":{"45":{}}}],["alpha\\nabla\\left(\\nabla\\cdot\\vec{h}\\right",{"_index":12418,"t":{},"b":{"51":{}}}],["alpha\\p_x",{"_index":11066,"t":{},"b":{"41":{}}}],["alpha\\varphi",{"_index":14314,"t":{},"b":{"65":{}}}],["alpha^1_{k",{"_index":3932,"t":{},"b":{"11":{}}}],["alpha^1_{k},\\alpha^2_{k},\\alpha^3_{k},\\beta^1_{k},\\beta^2_{k},\\beta^3_{k",{"_index":3957,"t":{},"b":{"11":{}}}],["alpha^2_{k",{"_index":3933,"t":{},"b":{"11":{}}}],["alpha^3_{k",{"_index":3934,"t":{},"b":{"11":{}}}],["alpha_1",{"_index":11151,"t":{},"b":{"41":{}}}],["alpha_1(x,m\\tau",{"_index":11119,"t":{},"b":{"41":{}}}],["alpha_1+\\alpha_2\\right.\\right",{"_index":7365,"t":{},"b":{"14":{}}}],["alpha_1,\\alpha_2)\\in",{"_index":7363,"t":{},"b":{"14":{}}}],["alpha_2",{"_index":11152,"t":{},"b":{"41":{}}}],["alpha_2(x,m\\tau",{"_index":11120,"t":{},"b":{"41":{}}}],["alpha_h>0",{"_index":11419,"t":{},"b":{"45":{}}}],["alpha_k",{"_index":2444,"t":{},"b":{"4":{}}}],["alpha_{0",{"_index":2502,"t":{},"b":{"4":{}}}],["alpha_{1",{"_index":2504,"t":{},"b":{"4":{}}}],["alpha_{3",{"_index":2507,"t":{},"b":{"4":{}}}],["alpha_{4",{"_index":2509,"t":{},"b":{"4":{}}}],["alpha_{5",{"_index":2511,"t":{},"b":{"4":{}}}],["alpha_{k",{"_index":2452,"t":{},"b":{"4":{},"11":{}}}],["alpha_{k}\\in",{"_index":3815,"t":{},"b":{"11":{}}}],["alphanumer",{"_index":13785,"t":{},"b":{"56":{}}}],["alreadi",{"_index":2781,"t":{},"b":{"4":{},"5":{},"8":{},"18":{}}}],["alt",{"_index":8529,"t":{},"b":{"19":{}}}],["alt+ctrl+button",{"_index":8530,"t":{},"b":{"19":{}}}],["alt+r",{"_index":10145,"t":{},"b":{"35":{}}}],["altern",{"_index":871,"t":{},"b":{"3":{},"10":{},"18":{}}}],["although",{"_index":3591,"t":{},"b":{"8":{},"11":{},"15":{}}}],["aluminum",{"_index":5110,"t":{},"b":{"12":{}}}],["alway",{"_index":1263,"t":{},"b":{"3":{},"11":{},"19":{},"60":{},"69":{},"70":{},"72":{},"77":{}}}],["am_fmt",{"_index":2309,"t":{},"b":{"4":{}}}],["amass",{"_index":665,"t":{},"b":{"3":{},"20":{}}}],["amass(uh",{"_index":663,"t":{},"b":{"3":{},"20":{}}}],["amass(vh",{"_index":666,"t":{},"b":{"3":{},"20":{}}}],["amcro",{"_index":13880,"t":{},"b":{"60":{}}}],["amd",{"_index":7793,"t":{},"b":{"15":{}}}],["amdba",{"_index":2310,"t":{},"b":{"4":{}}}],["amf",{"_index":7794,"t":{},"b":{"15":{}}}],["amg",{"_index":8102,"t":{},"b":{"15":{}}}],["amg(algebra",{"_index":7924,"t":{},"b":{"15":{}}}],["amount",{"_index":11158,"t":{},"b":{"41":{},"81":{}}}],["amplif",{"_index":6204,"t":{},"b":{"13":{},"40":{},"64":{}}}],["amplitud",{"_index":14163,"t":{},"b":{"62":{},"63":{}}}],["anal",{"_index":412,"t":{},"b":{"2":{}}}],["analys",{"_index":446,"t":{},"b":{"2":{}}}],["analysi",{"_index":103,"t":{},"b":{"2":{},"13":{},"15":{},"16":{},"29":{},"37":{}}}],["analysis.(a79",{"_index":318,"t":{},"b":{"2":{}}}],["analyt",{"_index":5115,"t":{},"b":{"12":{},"13":{},"51":{},"56":{},"76":{}}}],["analyz",{"_index":7121,"t":{},"b":{"13":{}}}],["anaysi",{"_index":307,"t":{},"b":{"2":{}}}],["and/or",{"_index":1286,"t":{},"b":{"3":{},"13":{},"15":{},"19":{},"72":{}}}],["ander",{"_index":41,"t":{},"b":{"2":{}}}],["andrea",{"_index":16,"t":{},"b":{"2":{}}}],["anew",{"_index":14468,"t":{},"b":{"67":{}}}],["angl",{"_index":5594,"t":{},"b":{"13":{},"41":{},"48":{},"51":{},"54":{},"72":{},"79":{}}}],["angular",{"_index":1539,"t":{},"b":{"3":{},"13":{},"81":{}}}],["aniso",{"_index":7001,"t":{},"b":{"13":{},"53":{}}}],["anisomax",{"_index":12266,"t":{},"b":{"48":{}}}],["anisotrop",{"_index":150,"t":{},"b":{"2":{},"4":{},"8":{},"10":{},"12":{},"13":{},"51":{}}}],["annual",{"_index":127,"t":{},"b":{"2":{}}}],["annulu",{"_index":10204,"t":{},"b":{"37":{}}}],["anoth",{"_index":1244,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"19":{},"33":{},"45":{},"54":{},"62":{},"63":{},"65":{},"66":{},"70":{},"75":{},"76":{}}}],["answer",{"_index":9930,"t":{},"b":{"35":{}}}],["anti",{"_index":7328,"t":{},"b":{"14":{}}}],["antoin",{"_index":7462,"t":{},"b":{"15":{},"29":{}}}],["anymor",{"_index":3471,"t":{},"b":{"7":{}}}],["anyth",{"_index":14555,"t":{},"b":{"69":{}}}],["anytyp",{"_index":2795,"t":{},"b":{"4":{}}}],["apa",{"_index":9815,"t":{},"b":{"30":{}}}],["apart",{"_index":11074,"t":{},"b":{"41":{}}}],["apllicationmak",{"_index":10035,"t":{},"b":{"35":{}}}],["appear",{"_index":990,"t":{},"b":{"3":{},"11":{},"13":{},"19":{},"27":{},"39":{},"41":{},"48":{},"65":{}}}],["append",{"_index":3420,"t":{},"b":{"5":{},"21":{},"26":{},"52":{},"60":{}}}],["appl",{"_index":2746,"t":{},"b":{"4":{},"35":{}}}],["appli",{"_index":276,"t":{},"b":{"2":{},"3":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"38":{},"41":{},"42":{},"52":{},"60":{},"64":{},"79":{}}}],["applic",{"_index":1595,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"12":{},"13":{},"15":{},"19":{},"27":{},"29":{},"35":{},"45":{},"51":{},"72":{},"73":{}}}],["applyilutprecond",{"_index":13370,"t":{},"b":{"53":{}}}],["approach",{"_index":1609,"t":{},"b":{"3":{},"13":{},"15":{},"37":{},"64":{}}}],["appropri",{"_index":1818,"t":{},"b":{"3":{},"5":{},"20":{},"35":{},"61":{}}}],["approx",{"_index":3750,"t":{},"b":{"10":{},"41":{},"59":{},"75":{}}}],["approxim",{"_index":468,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"37":{},"40":{},"41":{},"45":{},"48":{},"51":{},"61":{},"65":{},"66":{},"72":{},"74":{},"76":{},"79":{}}}],["apt",{"_index":9960,"t":{},"b":{"35":{}}}],["apt.edp",{"_index":5605,"t":{},"b":{"13":{}}}],["ar_0",{"_index":7931,"t":{},"b":{"15":{}}}],["arbitrari",{"_index":4597,"t":{},"b":{"11":{},"12":{},"41":{},"45":{},"51":{}}}],["arcco",{"_index":13462,"t":{},"b":{"54":{}}}],["arccosh",{"_index":13469,"t":{},"b":{"54":{}}}],["arccosh(x",{"_index":13466,"t":{},"b":{"54":{}}}],["arch",{"_index":9971,"t":{},"b":{"35":{}}}],["architectur",{"_index":2157,"t":{},"b":{"3":{}}}],["archiv",{"_index":9896,"t":{},"b":{"34":{},"35":{}}}],["archlinux",{"_index":9973,"t":{},"b":{"35":{}}}],["arcsin",{"_index":13477,"t":{},"b":{"54":{}}}],["arcsinh",{"_index":13483,"t":{},"b":{"54":{}}}],["arcsinh(x",{"_index":13481,"t":{},"b":{"54":{}}}],["arctan",{"_index":13486,"t":{},"b":{"54":{}}}],["arctanh",{"_index":13492,"t":{},"b":{"54":{}}}],["area",{"_index":1518,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"20":{},"24":{},"48":{},"53":{},"54":{},"55":{}}}],["areak",{"_index":4868,"t":{},"b":{"11":{}}}],["arealac",{"_index":7225,"t":{},"b":{"13":{}}}],["arg",{"_index":12346,"t":{},"b":{"50":{},"54":{}}}],["arg(c",{"_index":13475,"t":{},"b":{"54":{}}}],["arg(z",{"_index":8822,"t":{},"b":{"21":{}}}],["arg(z2",{"_index":8838,"t":{},"b":{"21":{}}}],["arg1",{"_index":9138,"t":{},"b":{"21":{}}}],["arg2",{"_index":9139,"t":{},"b":{"21":{}}}],["argc",{"_index":8442,"t":{},"b":{"18":{}}}],["argmin",{"_index":810,"t":{},"b":{"3":{}}}],["argument",{"_index":761,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"21":{},"26":{},"52":{},"54":{},"55":{},"65":{}}}],["argv",{"_index":8443,"t":{},"b":{"18":{},"26":{},"55":{}}}],["argv.n",{"_index":9140,"t":{},"b":{"21":{},"26":{},"55":{}}}],["argv[i",{"_index":9141,"t":{},"b":{"21":{},"26":{},"55":{}}}],["aris",{"_index":1278,"t":{},"b":{"3":{},"8":{},"11":{}}}],["arithmet",{"_index":7711,"t":{},"b":{"15":{},"54":{},"58":{},"60":{}}}],["arm",{"_index":7949,"t":{},"b":{"15":{}}}],["arnaud",{"_index":201,"t":{},"b":{"2":{}}}],["arnoldi",{"_index":247,"t":{},"b":{"2":{},"39":{}}}],["around",{"_index":2895,"t":{},"b":{"4":{},"19":{},"41":{},"66":{},"67":{}}}],["arpack",{"_index":241,"t":{},"b":{"2":{},"5":{},"34":{},"35":{},"39":{},"51":{},"54":{}}}],["arpark",{"_index":5123,"t":{},"b":{"12":{}}}],["arq(10",{"_index":7420,"t":{},"b":{"15":{}}}],["array",{"_index":651,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"26":{},"39":{},"54":{},"55":{},"56":{},"57":{},"58":{},"60":{},"70":{},"72":{},"75":{},"76":{}}}],["array(uh.n",{"_index":4366,"t":{},"b":{"11":{}}}],["arraymax",{"_index":13931,"t":{},"b":{"60":{}}}],["arraymin",{"_index":13929,"t":{},"b":{"60":{}}}],["arrays",{"_index":13923,"t":{},"b":{"60":{}}}],["arraysize1",{"_index":13925,"t":{},"b":{"60":{}}}],["arraysize2",{"_index":13927,"t":{},"b":{"60":{}}}],["arrow",{"_index":8511,"t":{},"b":{"19":{},"54":{},"64":{}}}],["art",{"_index":3480,"t":{},"b":{"7":{},"65":{}}}],["articl",{"_index":6830,"t":{},"b":{"13":{},"16":{}}}],["article{mr3043640",{"_index":9802,"t":{},"b":{"30":{}}}],["artifici",{"_index":3426,"t":{},"b":{"5":{},"15":{},"61":{},"66":{}}}],["arxiv",{"_index":461,"t":{},"b":{"2":{}}}],["ascend",{"_index":13705,"t":{},"b":{"54":{}}}],["asin",{"_index":13476,"t":{},"b":{"54":{}}}],["asin((yt)/radiu",{"_index":12459,"t":{},"b":{"51":{}}}],["asin(x",{"_index":13478,"t":{},"b":{"54":{}}}],["asinh",{"_index":13479,"t":{},"b":{"54":{}}}],["asinh(x",{"_index":13480,"t":{},"b":{"54":{}}}],["ask",{"_index":9822,"t":{},"b":{"31":{},"35":{},"72":{}}}],["asm",{"_index":3177,"t":{},"b":{"5":{},"8":{},"9":{},"17":{}}}],["aspect",{"_index":13665,"t":{},"b":{"54":{}}}],["aspectratio",{"_index":12572,"t":{},"b":{"51":{},"54":{}}}],["assembl",{"_index":3051,"t":{},"b":{"5":{},"8":{},"9":{},"10":{},"13":{},"15":{}}}],["assert",{"_index":2964,"t":{},"b":{"4":{},"11":{},"21":{},"54":{}}}],["assert(abs(outflux",{"_index":14976,"t":{},"b":{"74":{}}}],["assert(c1[].max",{"_index":2961,"t":{},"b":{"4":{}}}],["assert(cnu",{"_index":14884,"t":{},"b":{"73":{}}}],["assert(err",{"_index":5943,"t":{},"b":{"13":{},"21":{},"24":{}}}],["assert(error(u,b",{"_index":8640,"t":{},"b":{"20":{}}}],["assert(int2d(thi)(real(pij[njpart",{"_index":9481,"t":{},"b":{"26":{}}}],["assert(nerr",{"_index":8641,"t":{},"b":{"20":{}}}],["assert(op_di",{"_index":2651,"t":{},"b":{"4":{}}}],["assert(phii[].min",{"_index":9474,"t":{},"b":{"26":{}}}],["assert(pij[j][].max",{"_index":9483,"t":{},"b":{"26":{}}}],["assert(r",{"_index":11637,"t":{},"b":{"45":{}}}],["assert(sumphi[].min",{"_index":9487,"t":{},"b":{"26":{}}}],["assert(th.nbnomanifold",{"_index":6580,"t":{},"b":{"13":{}}}],["assert(u[].linfti",{"_index":9639,"t":{},"b":{"26":{}}}],["assert(val.k",{"_index":2624,"t":{},"b":{"4":{}}}],["assert(val.m",{"_index":2615,"t":{},"b":{"4":{}}}],["assert(val.n",{"_index":2614,"t":{},"b":{"4":{}}}],["assert(vers",{"_index":9399,"t":{},"b":{"26":{}}}],["assert(vvv[].linfti",{"_index":9521,"t":{},"b":{"26":{}}}],["assert(x",{"_index":13484,"t":{},"b":{"54":{}}}],["assert(xx",{"_index":9133,"t":{},"b":{"21":{}}}],["asset",{"_index":11173,"t":{},"b":{"41":{},"56":{}}}],["assign",{"_index":5208,"t":{},"b":{"13":{},"51":{},"69":{}}}],["associ",{"_index":1101,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"25":{},"26":{},"36":{},"39":{},"46":{},"49":{},"60":{},"64":{},"65":{},"76":{}}}],["assum",{"_index":918,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"35":{},"37":{},"40":{},"45":{},"48":{},"49":{},"51":{},"66":{},"69":{},"75":{},"76":{}}}],["assumpt",{"_index":1009,"t":{},"b":{"3":{},"37":{},"40":{}}}],["assur",{"_index":1346,"t":{},"b":{"3":{}}}],["asynchron",{"_index":7440,"t":{},"b":{"15":{}}}],["at_{1",{"_index":6689,"t":{},"b":{"13":{}}}],["at_{2",{"_index":6694,"t":{},"b":{"13":{}}}],["at_{i",{"_index":6685,"t":{},"b":{"13":{}}}],["atan",{"_index":13485,"t":{},"b":{"54":{}}}],["atan(x",{"_index":13487,"t":{},"b":{"54":{}}}],["atan2",{"_index":12167,"t":{},"b":{"48":{},"54":{}}}],["atan2(i",{"_index":13489,"t":{},"b":{"54":{}}}],["atanh",{"_index":13490,"t":{},"b":{"54":{}}}],["atanh(x",{"_index":13491,"t":{},"b":{"54":{}}}],["atau",{"_index":11038,"t":{},"b":{"41":{}}}],["atenekeng",{"_index":7463,"t":{},"b":{"15":{}}}],["ath",{"_index":5515,"t":{},"b":{"13":{},"15":{},"26":{}}}],["ath[j",{"_index":7580,"t":{},"b":{"15":{}}}],["athij",{"_index":7572,"t":{},"b":{"15":{},"26":{}}}],["athij(njpart",{"_index":9494,"t":{},"b":{"26":{}}}],["athij[jp",{"_index":7670,"t":{},"b":{"15":{},"26":{}}}],["atmospher",{"_index":5113,"t":{},"b":{"12":{}}}],["atof",{"_index":13496,"t":{},"b":{"54":{}}}],["atof(",{"_index":13497,"t":{},"b":{"54":{}}}],["atoi",{"_index":13493,"t":{},"b":{"54":{}}}],["atoi(",{"_index":13495,"t":{},"b":{"54":{}}}],["atoi(argv[1",{"_index":8447,"t":{},"b":{"18":{}}}],["atoi(i)*2",{"_index":9107,"t":{},"b":{"21":{}}}],["atom",{"_index":9847,"t":{},"b":{"32":{},"35":{},"51":{}}}],["attach",{"_index":14700,"t":{},"b":{"72":{}}}],["attempt",{"_index":1932,"t":{},"b":{"3":{},"15":{}}}],["attent",{"_index":8173,"t":{},"b":{"15":{}}}],["attribut",{"_index":6683,"t":{},"b":{"13":{}}}],["au",{"_index":635,"t":{},"b":{"3":{},"20":{},"39":{},"45":{},"54":{},"60":{}}}],["au(0",{"_index":647,"t":{},"b":{"3":{},"20":{}}}],["au1",{"_index":2007,"t":{},"b":{"3":{},"20":{}}}],["au2",{"_index":2009,"t":{},"b":{"3":{},"20":{}}}],["auglag",{"_index":1948,"t":{},"b":{"3":{}}}],["augment",{"_index":1925,"t":{},"b":{"3":{},"16":{}}}],["auliac",{"_index":9759,"t":{},"b":{"29":{}}}],["aur",{"_index":9972,"t":{},"b":{"35":{}}}],["aurovil",{"_index":13974,"t":{},"b":{"61":{}}}],["author",{"_index":3684,"t":{},"b":{"10":{},"29":{},"30":{},"31":{},"37":{},"51":{}}}],["authorslogo",{"_index":9747,"t":{"29":{}},"b":{}}],["auto",{"_index":8493,"t":{},"b":{"18":{}}}],["autoconf",{"_index":2686,"t":{},"b":{"4":{},"35":{}}}],["autogeneratedfile.tar.gz",{"_index":10029,"t":{},"b":{"35":{}}}],["automak",{"_index":2685,"t":{},"b":{"4":{},"35":{}}}],["automat",{"_index":61,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"9":{},"11":{},"12":{},"13":{},"41":{},"46":{},"51":{},"60":{},"64":{},"76":{}}}],["autoreconf",{"_index":2720,"t":{},"b":{"4":{},"35":{}}}],["autotool",{"_index":10045,"t":{},"b":{"35":{}}}],["aux",{"_index":211,"t":{},"b":{"2":{},"80":{}}}],["aux(xh.ndof",{"_index":15346,"t":{},"b":{"80":{}}}],["auxiliari",{"_index":3619,"t":{},"b":{"8":{},"37":{}}}],["auxmat",{"_index":10423,"t":{},"b":{"37":{}}}],["auxvec1",{"_index":10379,"t":{},"b":{"37":{}}}],["auxvec2",{"_index":10380,"t":{},"b":{"37":{}}}],["avaibl",{"_index":8175,"t":{},"b":{"15":{}}}],["avail",{"_index":718,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"18":{},"32":{},"33":{},"34":{},"35":{},"36":{},"39":{},"45":{},"51":{},"53":{},"54":{},"60":{}}}],["avala",{"_index":6655,"t":{},"b":{"13":{},"35":{},"36":{}}}],["avatar",{"_index":5082,"t":{},"b":{"12":{}}}],["avec",{"_index":4200,"t":{},"b":{"11":{}}}],["averag",{"_index":12276,"t":{},"b":{"48":{}}}],["avoid",{"_index":818,"t":{},"b":{"3":{},"8":{},"9":{},"13":{}}}],["awaken",{"_index":8395,"t":{},"b":{"18":{}}}],["awesom",{"_index":15354,"t":{},"b":{"81":{}}}],["ax",{"_index":594,"t":{},"b":{"3":{},"11":{},"15":{},"16":{},"37":{},"48":{},"54":{},"60":{},"69":{}}}],["ax+bx+cx+dx)/4",{"_index":12107,"t":{},"b":{"48":{}}}],["ax,ay",{"_index":12098,"t":{},"b":{"48":{}}}],["ax,x",{"_index":1165,"t":{},"b":{"3":{}}}],["axi",{"_index":5953,"t":{},"b":{"13":{},"37":{},"41":{},"51":{},"64":{},"69":{},"72":{},"79":{}}}],["axial",{"_index":8272,"t":{},"b":{"16":{},"51":{}}}],["axisymmetr",{"_index":377,"t":{},"b":{"2":{},"79":{}}}],["axisymmetri",{"_index":15270,"t":{},"b":{"79":{}}}],["axisymtr",{"_index":6047,"t":{},"b":{"13":{}}}],["ax||/||ab",{"_index":12123,"t":{},"b":{"48":{}}}],["ay",{"_index":12101,"t":{},"b":{"48":{}}}],["ay+by+cy+dy)/4",{"_index":12109,"t":{},"b":{"48":{}}}],["azimuth",{"_index":12466,"t":{},"b":{"51":{}}}],["a||_1",{"_index":8921,"t":{},"b":{"21":{}}}],["a||_2",{"_index":8923,"t":{},"b":{"21":{}}}],["a||_infti",{"_index":8925,"t":{},"b":{"21":{}}}],["b",{"_index":187,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"38":{},"39":{},"40":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"58":{},"60":{},"62":{},"63":{},"64":{},"65":{},"68":{},"70":{},"71":{},"72":{},"75":{},"79":{},"80":{},"81":{}}}],["b\"_i",{"_index":4799,"t":{},"b":{"11":{}}}],["b''_i",{"_index":14534,"t":{},"b":{"68":{}}}],["b'*uh",{"_index":9295,"t":{},"b":{"22":{}}}],["b',b",{"_index":4793,"t":{},"b":{"11":{},"68":{}}}],["b'_i",{"_index":4802,"t":{},"b":{"11":{},"68":{}}}],["b(0",{"_index":5055,"t":{},"b":{"11":{}}}],["b(0,0),x1",{"_index":6412,"t":{},"b":{"13":{}}}],["b(0,1",{"_index":6413,"t":{},"b":{"13":{}}}],["b(1,0),y1",{"_index":6414,"t":{},"b":{"13":{}}}],["b(1,1",{"_index":6415,"t":{},"b":{"13":{}}}],["b(10",{"_index":734,"t":{},"b":{"3":{},"20":{},"21":{},"60":{}}}],["b(10*n",{"_index":5671,"t":{},"b":{"13":{}}}],["b(2,0),z1",{"_index":6416,"t":{},"b":{"13":{}}}],["b(2,1",{"_index":6417,"t":{},"b":{"13":{}}}],["b(30",{"_index":5218,"t":{},"b":{"13":{},"24":{}}}],["b(4",{"_index":5453,"t":{},"b":{"13":{},"49":{}}}],["b(5",{"_index":7733,"t":{},"b":{"15":{},"21":{},"26":{}}}],["b(5*n",{"_index":7472,"t":{},"b":{"15":{},"38":{}}}],["b(6*n",{"_index":11317,"t":{},"b":{"43":{}}}],["b([u1",{"_index":14157,"t":{},"b":{"62":{}}}],["b(\\mathbf{u},q",{"_index":11395,"t":{},"b":{"45":{}}}],["b(\\mathbf{u}_h,q_h",{"_index":11417,"t":{},"b":{"45":{}}}],["b(\\mathbf{u}_h^{\\epsilon},q_h",{"_index":11473,"t":{},"b":{"45":{}}}],["b(\\mathbf{w}_h,q_h",{"_index":11424,"t":{},"b":{"45":{}}}],["b(i",{"_index":8953,"t":{},"b":{"21":{}}}],["b(i(i",{"_index":8956,"t":{},"b":{"21":{}}}],["b(i(i))*c(j(j",{"_index":8961,"t":{},"b":{"21":{}}}],["b(i)*c(j",{"_index":8959,"t":{},"b":{"21":{}}}],["b(k[1",{"_index":2607,"t":{},"b":{"4":{}}}],["b(n",{"_index":4915,"t":{},"b":{"11":{},"13":{},"21":{},"40":{},"48":{}}}],["b(n,n",{"_index":9066,"t":{},"b":{"21":{}}}],["b(t",{"_index":5214,"t":{},"b":{"13":{},"15":{},"24":{},"38":{},"40":{},"42":{},"43":{},"48":{},"49":{},"60":{},"70":{}}}],["b(u",{"_index":9294,"t":{},"b":{"22":{},"69":{}}}],["b(u,v",{"_index":14739,"t":{},"b":{"72":{}}}],["b(u2",{"_index":10484,"t":{},"b":{"38":{}}}],["b(vh",{"_index":10541,"t":{},"b":{"39":{},"51":{},"62":{}}}],["b(vh.ndof",{"_index":4864,"t":{},"b":{"11":{}}}],["b(vh1",{"_index":10486,"t":{},"b":{"38":{}}}],["b(x)\\in",{"_index":14325,"t":{},"b":{"65":{}}}],["b(x,\\mu",{"_index":952,"t":{},"b":{"3":{}}}],["b(x_{\\mu},\\mu",{"_index":968,"t":{},"b":{"3":{}}}],["b)(a+b)(a^2+b^2",{"_index":15312,"t":{},"b":{"79":{}}}],["b)*(a",{"_index":13677,"t":{},"b":{"54":{}}}],["b),\\quad",{"_index":2495,"t":{},"b":{"4":{}}}],["b*(t",{"_index":14184,"t":{},"b":{"63":{}}}],["b*(x/a)*(x/a)*(3",{"_index":5779,"t":{},"b":{"13":{}}}],["b*1i",{"_index":8813,"t":{},"b":{"21":{}}}],["b*c",{"_index":8958,"t":{},"b":{"21":{}}}],["b*cos((a+b)*t/b",{"_index":5697,"t":{},"b":{"13":{}}}],["b*cos(t*(a+b)/b",{"_index":8876,"t":{},"b":{"21":{}}}],["b*n",{"_index":5883,"t":{},"b":{"13":{},"24":{}}}],["b*sin((a+b)*t/b",{"_index":5699,"t":{},"b":{"13":{}}}],["b*sin(t",{"_index":5848,"t":{},"b":{"13":{},"72":{}}}],["b*sin(t*(a+b)/b",{"_index":8878,"t":{},"b":{"21":{}}}],["b*sol",{"_index":15347,"t":{},"b":{"80":{}}}],["b*t",{"_index":15372,"t":{},"b":{"81":{}}}],["b*u",{"_index":10510,"t":{},"b":{"39":{}}}],["b*v*w",{"_index":15318,"t":{},"b":{"79":{}}}],["b*v1",{"_index":10492,"t":{},"b":{"38":{}}}],["b*vh",{"_index":642,"t":{},"b":{"3":{},"20":{},"47":{}}}],["b*w",{"_index":621,"t":{},"b":{"3":{},"20":{}}}],["b+(1+b)*t",{"_index":5782,"t":{},"b":{"13":{}}}],["b+t",{"_index":5889,"t":{},"b":{"13":{},"24":{}}}],["b,\\delta",{"_index":14997,"t":{},"b":{"75":{}}}],["b,c,d",{"_index":14994,"t":{},"b":{"75":{}}}],["b,c,d,e",{"_index":15052,"t":{},"b":{"75":{}}}],["b,processor(int",{"_index":8228,"t":{},"b":{"15":{}}}],["b,vp",{"_index":15313,"t":{},"b":{"79":{}}}],["b,x\\right\\rangl",{"_index":1168,"t":{},"b":{"3":{}}}],["b.c",{"_index":14543,"t":{},"b":{"68":{},"74":{}}}],["b.n",{"_index":8937,"t":{},"b":{"21":{}}}],["b.x)*a1",{"_index":2635,"t":{},"b":{"4":{}}}],["b.y)*a1",{"_index":2637,"t":{},"b":{"4":{}}}],["b/2",{"_index":5887,"t":{},"b":{"13":{},"21":{},"24":{}}}],["b/2+c+t",{"_index":5894,"t":{},"b":{"13":{},"24":{}}}],["b0",{"_index":4837,"t":{},"b":{"11":{},"68":{}}}],["b0(5*nn",{"_index":14206,"t":{},"b":{"63":{}}}],["b0(n",{"_index":5018,"t":{},"b":{"11":{}}}],["b0(t",{"_index":5011,"t":{},"b":{"11":{},"63":{}}}],["b00(5*n",{"_index":15406,"t":{},"b":{"81":{}}}],["b00(t",{"_index":15382,"t":{},"b":{"81":{}}}],["b1",{"_index":1992,"t":{},"b":{"3":{},"4":{},"11":{},"20":{},"22":{},"39":{},"45":{},"54":{},"61":{}}}],["b1'*u1",{"_index":11628,"t":{},"b":{"45":{}}}],["b1(1",{"_index":9290,"t":{},"b":{"22":{}}}],["b1(10*nn",{"_index":14207,"t":{},"b":{"63":{}}}],["b1(n",{"_index":5015,"t":{},"b":{"11":{}}}],["b1(nn",{"_index":13502,"t":{},"b":{"54":{}}}],["b1(t",{"_index":5007,"t":{},"b":{"11":{},"22":{},"25":{},"61":{},"63":{}}}],["b1*pp",{"_index":11626,"t":{},"b":{"45":{}}}],["b10(5*n",{"_index":15407,"t":{},"b":{"81":{}}}],["b10(t",{"_index":15384,"t":{},"b":{"81":{}}}],["b11(u1",{"_index":10304,"t":{},"b":{"37":{}}}],["b12(u1",{"_index":10305,"t":{},"b":{"37":{}}}],["b2",{"_index":1994,"t":{},"b":{"3":{},"4":{},"11":{},"20":{},"22":{},"25":{},"45":{},"54":{},"61":{}}}],["b2'*u2",{"_index":11629,"t":{},"b":{"45":{}}}],["b2(5*nn",{"_index":14208,"t":{},"b":{"63":{}}}],["b2(nn",{"_index":13499,"t":{},"b":{"54":{}}}],["b2(nn*h",{"_index":9313,"t":{},"b":{"25":{}}}],["b2(nn*sqrt((l",{"_index":14050,"t":{},"b":{"61":{}}}],["b2(t",{"_index":9263,"t":{},"b":{"22":{},"25":{},"61":{},"63":{}}}],["b2*pp",{"_index":11627,"t":{},"b":{"45":{}}}],["b20(5*n",{"_index":15408,"t":{},"b":{"81":{}}}],["b20(t",{"_index":15387,"t":{},"b":{"81":{}}}],["b21(u1",{"_index":10306,"t":{},"b":{"37":{}}}],["b22(u1",{"_index":10307,"t":{},"b":{"37":{}}}],["b3",{"_index":4937,"t":{},"b":{"11":{},"25":{},"54":{}}}],["b3(10*nn",{"_index":14209,"t":{},"b":{"63":{}}}],["b3(nn",{"_index":13500,"t":{},"b":{"54":{}}}],["b3(nn*(h",{"_index":14053,"t":{},"b":{"61":{}}}],["b3(nn*(l",{"_index":9314,"t":{},"b":{"25":{}}}],["b3(nnb",{"_index":9271,"t":{},"b":{"22":{}}}],["b3(t",{"_index":9264,"t":{},"b":{"22":{},"25":{},"61":{},"63":{}}}],["b30(5*n",{"_index":15409,"t":{},"b":{"81":{}}}],["b30(t",{"_index":15389,"t":{},"b":{"81":{}}}],["b4",{"_index":9319,"t":{},"b":{"25":{},"54":{},"61":{}}}],["b4(nn),[point",{"_index":13501,"t":{},"b":{"54":{}}}],["b4(nn*(h",{"_index":9315,"t":{},"b":{"25":{}}}],["b4(nn*l",{"_index":14054,"t":{},"b":{"61":{}}}],["b4(nnb",{"_index":9272,"t":{},"b":{"22":{}}}],["b4(t",{"_index":9265,"t":{},"b":{"22":{},"25":{},"61":{}}}],["b5",{"_index":9320,"t":{},"b":{"25":{}}}],["b5(nn*(h",{"_index":14055,"t":{},"b":{"61":{}}}],["b5(nn*l",{"_index":9316,"t":{},"b":{"25":{}}}],["b5(t",{"_index":9310,"t":{},"b":{"25":{},"61":{}}}],["b6",{"_index":9321,"t":{},"b":{"25":{},"61":{}}}],["b6(nn*h",{"_index":9317,"t":{},"b":{"25":{}}}],["b6(nnplus*nn*h",{"_index":14056,"t":{},"b":{"61":{}}}],["b6(t",{"_index":9311,"t":{},"b":{"25":{},"61":{}}}],["b:\\((x,y,u(x+\\delta",{"_index":11830,"t":{},"b":{"48":{}}}],["b[i",{"_index":4568,"t":{},"b":{"11":{},"20":{},"21":{},"68":{}}}],["b[i]*u[i",{"_index":738,"t":{},"b":{"3":{},"20":{}}}],["b[uold,vold,pold",{"_index":15339,"t":{},"b":{"80":{}}}],["b\\mathbf{v}_h^n\\to",{"_index":11545,"t":{},"b":{"45":{}}}],["b\\nabla\\varphi,\\hbox{given",{"_index":14357,"t":{},"b":{"65":{}}}],["b^2",{"_index":13538,"t":{},"b":{"54":{}}}],["b^4",{"_index":15311,"t":{},"b":{"79":{}}}],["b^n",{"_index":4792,"t":{},"b":{"11":{},"68":{}}}],["b^n_i",{"_index":4798,"t":{},"b":{"11":{},"68":{}}}],["b_0",{"_index":4797,"t":{},"b":{"11":{},"68":{}}}],["b_i",{"_index":7588,"t":{},"b":{"15":{},"20":{}}}],["b_i^{\\text{prec",{"_index":3197,"t":{},"b":{"5":{}}}],["b_j",{"_index":3126,"t":{},"b":{"5":{},"8":{}}}],["b_j\\right",{"_index":5190,"t":{},"b":{"13":{}}}],["b_{0,i",{"_index":4814,"t":{},"b":{"11":{},"68":{}}}],["b_{cl",{"_index":4794,"t":{},"b":{"11":{},"68":{}}}],["b_{ij",{"_index":14322,"t":{},"b":{"65":{}}}],["ba(t",{"_index":5525,"t":{},"b":{"13":{},"24":{},"48":{}}}],["back",{"_index":3254,"t":{},"b":{"5":{},"11":{},"13":{},"18":{},"56":{}}}],["background",{"_index":5580,"t":{},"b":{"13":{}}}],["backslash",{"_index":6524,"t":{},"b":{"13":{}}}],["backward",{"_index":3203,"t":{},"b":{"5":{},"41":{},"74":{}}}],["bad",{"_index":1834,"t":{},"b":{"3":{},"8":{},"15":{},"43":{}}}],["balanc",{"_index":3240,"t":{},"b":{"5":{},"9":{},"16":{}}}],["ball",{"_index":6361,"t":{},"b":{"13":{}}}],["balloon",{"_index":6349,"t":{},"b":{"13":{},"48":{}}}],["bamg",{"_index":70,"t":{},"b":{"2":{},"13":{},"33":{}}}],["bamgfreefem.cpp",{"_index":2690,"t":{},"b":{"4":{}}}],["bamgfreefem.hpp",{"_index":2691,"t":{},"b":{"4":{}}}],["bank",{"_index":5100,"t":{},"b":{"12":{}}}],["bar",{"_index":10065,"t":{},"b":{"35":{},"67":{}}}],["bar\\omega",{"_index":4971,"t":{},"b":{"11":{}}}],["bar\\omega_0\\cap\\bar\\omega_1",{"_index":4974,"t":{},"b":{"11":{}}}],["bar\\omega_0\\cup\\bar\\omega_1",{"_index":4972,"t":{},"b":{"11":{}}}],["bar\\rho",{"_index":14452,"t":{},"b":{"67":{}}}],["bar\\rho\\nabla\\cdot",{"_index":14450,"t":{},"b":{"67":{}}}],["baricentr",{"_index":4159,"t":{},"b":{"11":{}}}],["barrier",{"_index":941,"t":{},"b":{"3":{}}}],["barycent",{"_index":3810,"t":{},"b":{"11":{},"13":{}}}],["barycentr",{"_index":2929,"t":{},"b":{"4":{},"11":{},"76":{}}}],["bar{g",{"_index":1594,"t":{},"b":{"3":{}}}],["base",{"_index":802,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"12":{},"13":{},"15":{},"16":{},"33":{},"39":{},"48":{},"54":{},"60":{},"72":{},"76":{}}}],["basefel",{"_index":2567,"t":{},"b":{"4":{}}}],["basenam",{"_index":13433,"t":{},"b":{"53":{}}}],["bash",{"_index":9948,"t":{},"b":{"35":{}}}],["basi",{"_index":2487,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"37":{},"38":{},"45":{},"76":{}}}],["basic",{"_index":2576,"t":{},"b":{"4":{},"8":{},"11":{},"13":{},"15":{},"21":{},"33":{},"36":{},"56":{},"57":{},"60":{},"71":{}}}],["basicac_f0",{"_index":2800,"t":{},"b":{"4":{}}}],["basquet",{"_index":11221,"t":{},"b":{"41":{}}}],["batch",{"_index":8462,"t":{},"b":{"18":{}}}],["bax",{"_index":6385,"t":{},"b":{"13":{}}}],["bb",{"_index":2261,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"19":{},"22":{},"26":{},"27":{},"37":{},"40":{},"54":{},"73":{},"77":{},"80":{}}}],["bb(0,0",{"_index":6015,"t":{},"b":{"13":{}}}],["bb(0,1",{"_index":6016,"t":{},"b":{"13":{}}}],["bb(1",{"_index":9693,"t":{},"b":{"26":{}}}],["bb(1,0",{"_index":6017,"t":{},"b":{"13":{}}}],["bb(1,1",{"_index":6018,"t":{},"b":{"13":{}}}],["bb(2",{"_index":9672,"t":{},"b":{"26":{}}}],["bb(2,0",{"_index":6020,"t":{},"b":{"13":{}}}],["bb(2,1",{"_index":6022,"t":{},"b":{"13":{}}}],["bb(35",{"_index":15013,"t":{},"b":{"75":{}}}],["bb(4",{"_index":5342,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bb(n+1",{"_index":9288,"t":{},"b":{"22":{}}}],["bb(t",{"_index":5252,"t":{},"b":{"13":{},"24":{},"48":{},"75":{}}}],["bb(xh",{"_index":15342,"t":{},"b":{"80":{}}}],["bb*vo",{"_index":15228,"t":{},"b":{"77":{}}}],["bb,cc,dd,ee",{"_index":15053,"t":{},"b":{"75":{}}}],["bb.edp",{"_index":14614,"t":{},"b":{"70":{}}}],["bb[0",{"_index":5344,"t":{},"b":{"13":{},"26":{}}}],["bb[1",{"_index":5346,"t":{},"b":{"13":{},"26":{}}}],["bb[2",{"_index":5348,"t":{},"b":{"13":{}}}],["bb[3",{"_index":5350,"t":{},"b":{"13":{}}}],["bb[ii",{"_index":7060,"t":{},"b":{"13":{}}}],["bbb(2*m",{"_index":14485,"t":{},"b":{"67":{}}}],["bbb(t",{"_index":14478,"t":{},"b":{"67":{}}}],["bc",{"_index":1183,"t":{},"b":{"3":{},"13":{},"15":{},"26":{},"37":{},"48":{},"62":{},"66":{}}}],["bc(2*th.nbe",{"_index":2059,"t":{},"b":{"3":{}}}],["bc(4",{"_index":5531,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bc(t",{"_index":5526,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bc(uc.n",{"_index":7607,"t":{},"b":{"15":{},"26":{}}}],["bc1",{"_index":11264,"t":{},"b":{"42":{},"45":{}}}],["bc2",{"_index":11548,"t":{},"b":{"45":{}}}],["bc[i",{"_index":2065,"t":{},"b":{"3":{}}}],["bc[i+th.nb",{"_index":2068,"t":{},"b":{"3":{}}}],["bci",{"_index":11267,"t":{},"b":{"42":{}}}],["bcl",{"_index":4843,"t":{},"b":{"11":{},"68":{},"80":{}}}],["bcl(0",{"_index":15343,"t":{},"b":{"80":{}}}],["bcl[i",{"_index":4851,"t":{},"b":{"11":{},"68":{}}}],["bcn",{"_index":4839,"t":{},"b":{"11":{},"68":{}}}],["bcn[i",{"_index":4842,"t":{},"b":{"11":{},"68":{}}}],["bctol",{"_index":1980,"t":{},"b":{"3":{},"20":{}}}],["bcube",{"_index":13399,"t":{},"b":{"53":{}}}],["bcx",{"_index":11266,"t":{},"b":{"42":{}}}],["bd",{"_index":5524,"t":{},"b":{"13":{}}}],["bd(4",{"_index":5532,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bd(t",{"_index":5527,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bd_{1",{"_index":10243,"t":{},"b":{"37":{}}}],["bd_{2",{"_index":10244,"t":{},"b":{"37":{}}}],["bd_{3",{"_index":10245,"t":{},"b":{"37":{}}}],["bd_{4",{"_index":10246,"t":{},"b":{"37":{}}}],["bdm1",{"_index":3976,"t":{},"b":{"11":{},"60":{}}}],["bdm1ortho",{"_index":3983,"t":{},"b":{"11":{},"60":{}}}],["be",{"_index":1043,"t":{},"b":{"3":{},"5":{},"13":{},"16":{},"19":{},"69":{}}}],["be(0",{"_index":7241,"t":{},"b":{"13":{}}}],["be(1",{"_index":7184,"t":{},"b":{"13":{}}}],["be(2*c",{"_index":7196,"t":{},"b":{"13":{}}}],["be(2*c+1",{"_index":7197,"t":{},"b":{"13":{}}}],["be(4",{"_index":5533,"t":{},"b":{"13":{},"24":{},"48":{}}}],["be(t",{"_index":5528,"t":{},"b":{"13":{},"24":{},"48":{}}}],["be[2*c",{"_index":7206,"t":{},"b":{"13":{}}}],["be[2*c+1",{"_index":7207,"t":{},"b":{"13":{}}}],["be_j",{"_index":6938,"t":{},"b":{"13":{}}}],["beam",{"_index":10722,"t":{},"b":{"40":{},"42":{},"64":{}}}],["bear",{"_index":10235,"t":{},"b":{"37":{}}}],["beat",{"_index":14596,"t":{},"b":{"70":{}}}],["beauti",{"_index":14109,"t":{},"b":{"61":{},"81":{}}}],["beb(20",{"_index":14845,"t":{},"b":{"73":{}}}],["beb(tt",{"_index":14831,"t":{},"b":{"73":{}}}],["bec",{"_index":12608,"t":{},"b":{"53":{}}}],["becom",{"_index":910,"t":{},"b":{"3":{},"5":{},"11":{},"15":{},"18":{},"20":{},"37":{},"41":{},"48":{},"49":{},"70":{},"72":{},"73":{},"79":{}}}],["bectrap",{"_index":12609,"t":{},"b":{"53":{}}}],["befor",{"_index":578,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"13":{},"18":{},"19":{},"35":{},"45":{},"46":{},"48":{},"54":{},"70":{}}}],["beforehand",{"_index":3120,"t":{},"b":{"5":{},"35":{}}}],["begen",{"_index":2971,"t":{},"b":{"4":{}}}],["begin",{"_index":898,"t":{},"b":{"3":{},"4":{},"13":{},"26":{},"37":{},"41":{},"46":{}}}],["beginend",{"_index":7190,"t":{},"b":{"13":{},"53":{}}}],["beginn",{"_index":14599,"t":{},"b":{"70":{}}}],["begin{align",{"_index":4249,"t":{},"b":{"11":{}}}],["begin{array",{"_index":1532,"t":{},"b":{"3":{}}}],["begin{array}{c",{"_index":1555,"t":{},"b":{"3":{},"40":{},"45":{}}}],["begin{array}{cc",{"_index":2380,"t":{},"b":{"4":{},"45":{},"50":{}}}],["begin{array}{ccc",{"_index":2369,"t":{},"b":{"4":{},"11":{}}}],["begin{array}{cl",{"_index":4098,"t":{},"b":{"11":{},"13":{},"68":{}}}],["begin{array}{l",{"_index":1074,"t":{},"b":{"3":{},"15":{}}}],["begin{array}{lr",{"_index":11013,"t":{},"b":{"41":{}}}],["begin{array}{rcl",{"_index":1027,"t":{},"b":{"3":{},"43":{}}}],["begin{pmatrix",{"_index":4157,"t":{},"b":{"11":{},"51":{}}}],["begin{split",{"_index":4975,"t":{},"b":{"11":{}}}],["begin{split}&\\mathbf{a",{"_index":11457,"t":{},"b":{"45":{}}}],["begin{split}&|t_k",{"_index":4663,"t":{},"b":{"11":{}}}],["begin{split}\\arr{l",{"_index":10247,"t":{},"b":{"37":{}}}],["begin{split}\\arr{ll",{"_index":10209,"t":{},"b":{"37":{}}}],["begin{split}\\begin{align",{"_index":4236,"t":{},"b":{"11":{}}}],["begin{split}\\begin{array}{c",{"_index":1163,"t":{},"b":{"3":{}}}],["begin{split}\\begin{array}{ccc",{"_index":6727,"t":{},"b":{"13":{}}}],["begin{split}\\begin{array}{cccccc",{"_index":6883,"t":{},"b":{"13":{}}}],["begin{split}\\begin{array}{ccccccc",{"_index":11976,"t":{},"b":{"48":{}}}],["begin{split}\\begin{array}{cl",{"_index":11514,"t":{},"b":{"45":{}}}],["begin{split}\\begin{array}{lllll",{"_index":3228,"t":{},"b":{"5":{}}}],["begin{split}\\begin{array}{rcccl",{"_index":11856,"t":{},"b":{"48":{}}}],["begin{split}\\begin{array}{rcl",{"_index":587,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"38":{},"40":{},"41":{},"42":{},"45":{},"46":{},"48":{},"49":{},"54":{},"61":{},"62":{},"63":{},"64":{},"68":{},"73":{},"74":{},"75":{},"77":{},"78":{},"79":{}}}],["begin{split}\\boldsymbol{u",{"_index":14371,"t":{},"b":{"66":{}}}],["begin{split}\\exist",{"_index":1527,"t":{},"b":{"3":{}}}],["begin{split}\\hat{\\epsilon",{"_index":12423,"t":{},"b":{"51":{}}}],["begin{split}\\left",{"_index":11320,"t":{},"b":{"43":{},"45":{}}}],["begin{split}\\mathrm{find",{"_index":1070,"t":{},"b":{"3":{}}}],["begin{split}\\mathtt{label",{"_index":6136,"t":{},"b":{"13":{}}}],["begin{split}\\nabla",{"_index":975,"t":{},"b":{"3":{}}}],["begin{split}\\p^2_{h",{"_index":3883,"t":{},"b":{"11":{}}}],["begin{split}\\phi_i(x,i",{"_index":4115,"t":{},"b":{"11":{}}}],["begin{split}\\phi_k(\\mathbf{x",{"_index":4097,"t":{},"b":{"11":{}}}],["begin{split}\\textrm{norm",{"_index":7340,"t":{},"b":{"14":{}}}],["begin{split}\\theta_{i}(z",{"_index":5973,"t":{},"b":{"13":{}}}],["begin{split}\\tild",{"_index":4163,"t":{},"b":{"11":{}}}],["begin{split}\\widehat{\\delta",{"_index":2884,"t":{},"b":{"4":{}}}],["begin{split}a?b",{"_index":7515,"t":{},"b":{"15":{}}}],["begin{split}d_p",{"_index":4245,"t":{},"b":{"11":{}}}],["begin{split}u^n",{"_index":4796,"t":{},"b":{"11":{},"68":{}}}],["begin{split}|u_h^n|^2\\l",{"_index":11012,"t":{},"b":{"41":{}}}],["behav",{"_index":12604,"t":{},"b":{"52":{}}}],["behavior",{"_index":763,"t":{},"b":{"3":{}}}],["behaviour",{"_index":14680,"t":{},"b":{"71":{}}}],["behind",{"_index":3461,"t":{},"b":{"7":{}}}],["bei(10",{"_index":14848,"t":{},"b":{"73":{}}}],["bei(t",{"_index":14839,"t":{},"b":{"73":{}}}],["bell",{"_index":11149,"t":{},"b":{"41":{}}}],["belong",{"_index":6532,"t":{},"b":{"13":{},"14":{},"50":{}}}],["below",{"_index":1213,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"13":{},"17":{},"18":{},"19":{},"39":{},"42":{},"49":{},"52":{},"54":{},"63":{},"69":{},"71":{},"79":{}}}],["beltrami",{"_index":8274,"t":{},"b":{"16":{}}}],["bem",{"_index":8251,"t":{},"b":{"16":{},"36":{}}}],["bemtool",{"_index":9914,"t":{},"b":{"34":{}}}],["bend",{"_index":5879,"t":{},"b":{"13":{},"24":{},"42":{}}}],["benefit",{"_index":3399,"t":{},"b":{"5":{},"8":{}}}],["bent",{"_index":11251,"t":{},"b":{"42":{}}}],["beo(10",{"_index":14847,"t":{},"b":{"73":{}}}],["beo(t",{"_index":14837,"t":{},"b":{"73":{}}}],["berlin",{"_index":6662,"t":{},"b":{"13":{}}}],["bernad",{"_index":414,"t":{},"b":{"2":{}}}],["bernadi",{"_index":3911,"t":{},"b":{"11":{}}}],["bernadiraugel",{"_index":3910,"t":{},"b":{"11":{}}}],["bernadou1980",{"_index":413,"t":{},"b":{"2":{},"11":{}}}],["bernardi",{"_index":430,"t":{},"b":{"2":{},"4":{},"33":{}}}],["bernardi1985",{"_index":429,"t":{},"b":{"2":{},"11":{}}}],["bernardiraugel",{"_index":2935,"t":{},"b":{"4":{},"60":{}}}],["bernardiraugel.cpp",{"_index":2666,"t":{},"b":{"4":{}}}],["bessel",{"_index":13626,"t":{},"b":{"54":{}}}],["best",{"_index":823,"t":{},"b":{"3":{},"11":{},"70":{},"81":{}}}],["best1",{"_index":2146,"t":{},"b":{"3":{},"20":{}}}],["best2",{"_index":2147,"t":{},"b":{"3":{},"20":{}}}],["beta",{"_index":12008,"t":{},"b":{"48":{},"61":{},"63":{}}}],["beta(x",{"_index":14362,"t":{},"b":{"65":{}}}],["beta*nuep*pow(stress,1.5",{"_index":14080,"t":{},"b":{"61":{}}}],["beta*numu*stress",{"_index":14075,"t":{},"b":{"61":{}}}],["beta*psi1",{"_index":12013,"t":{},"b":{"48":{}}}],["beta_h",{"_index":11430,"t":{},"b":{"45":{}}}],["beta_h>0",{"_index":11426,"t":{},"b":{"45":{}}}],["beta_k(q^{k_b",{"_index":4302,"t":{},"b":{"11":{}}}],["beta_k(x,i",{"_index":4299,"t":{},"b":{"11":{}}}],["beta_{k",{"_index":3935,"t":{},"b":{"11":{}}}],["beta_{k}\\vectthree{x}{y}{z",{"_index":3921,"t":{},"b":{"11":{}}}],["beta_{k}\\vecttwo",{"_index":3939,"t":{},"b":{"11":{}}}],["beta_{k}\\vecttwo{x}{i",{"_index":3917,"t":{},"b":{"11":{}}}],["beta|\\mathbf{u}|~~~\\foral",{"_index":15241,"t":{},"b":{"78":{}}}],["beth",{"_index":452,"t":{},"b":{"2":{}}}],["better",{"_index":1186,"t":{},"b":{"3":{},"7":{},"16":{},"35":{},"37":{},"45":{},"64":{},"65":{},"70":{}}}],["between",{"_index":809,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"19":{},"21":{},"35":{},"38":{},"40":{},"48":{},"50":{},"51":{},"54":{},"64":{},"65":{},"71":{},"76":{}}}],["beu(20",{"_index":14846,"t":{},"b":{"73":{}}}],["beu(tt",{"_index":14835,"t":{},"b":{"73":{}}}],["bewar",{"_index":5204,"t":{},"b":{"13":{}}}],["bezier",{"_index":5707,"t":{},"b":{"13":{},"24":{}}}],["bezier.ep",{"_index":5772,"t":{},"b":{"13":{}}}],["bf",{"_index":10175,"t":{},"b":{"37":{},"64":{},"78":{}}}],["bf(6",{"_index":5534,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bf(t",{"_index":5529,"t":{},"b":{"13":{},"24":{},"48":{}}}],["bf^t",{"_index":10180,"t":{},"b":{"37":{}}}],["bf^{t",{"_index":10197,"t":{},"b":{"37":{}}}],["bf_{n",{"_index":10195,"t":{},"b":{"37":{}}}],["bf_{n+1",{"_index":10198,"t":{},"b":{"37":{}}}],["bf_{n+1})\\right",{"_index":10228,"t":{},"b":{"37":{}}}],["bf_{n+1})^t",{"_index":10199,"t":{},"b":{"37":{}}}],["bf_{n+1}\\right",{"_index":10226,"t":{},"b":{"37":{}}}],["bf_{n})^t",{"_index":10200,"t":{},"b":{"37":{}}}],["bfg",{"_index":716,"t":{},"b":{"3":{},"20":{},"54":{},"75":{}}}],["bfgs(j",{"_index":750,"t":{},"b":{"3":{},"20":{},"75":{}}}],["bf}[\\bf_{n",{"_index":10240,"t":{},"b":{"37":{}}}],["bf}[\\bf_{n}]\\delta",{"_index":10225,"t":{},"b":{"37":{}}}],["bgmres.edp",{"_index":3339,"t":{},"b":{"5":{},"6":{}}}],["bi",{"_index":3124,"t":{},"b":{"5":{},"7":{},"10":{},"11":{},"12":{},"15":{},"21":{},"26":{},"48":{},"56":{}}}],["bibliograph",{"_index":1899,"t":{},"b":{"3":{}}}],["bibliographi",{"_index":2,"t":{},"b":{"2":{},"21":{}}}],["bibliographylogo",{"_index":1,"t":{"2":{}},"b":{}}],["bibtex",{"_index":9801,"t":{},"b":{"30":{}}}],["bicgstab",{"_index":3587,"t":{},"b":{"8":{},"15":{}}}],["bidimension",{"_index":149,"t":{},"b":{"2":{},"11":{},"13":{}}}],["bidiment",{"_index":4741,"t":{},"b":{"11":{}}}],["bidimentionn",{"_index":7191,"t":{},"b":{"13":{}}}],["biegler",{"_index":17,"t":{},"b":{"2":{}}}],["big",{"_index":5446,"t":{},"b":{"13":{},"46":{},"61":{}}}],["biharmon",{"_index":14352,"t":{},"b":{"65":{}}}],["biject",{"_index":4162,"t":{},"b":{"11":{}}}],["bilap",{"_index":3901,"t":{},"b":{"11":{}}}],["bilaplac",{"_index":8255,"t":{},"b":{"16":{}}}],["bilaplacian",{"_index":8256,"t":{},"b":{"16":{}}}],["bilaplacien",{"_index":3891,"t":{},"b":{"11":{}}}],["bilaplacien(u",{"_index":3897,"t":{},"b":{"11":{}}}],["bilapmorley.edp",{"_index":2982,"t":{},"b":{"4":{}}}],["bilinear",{"_index":1181,"t":{},"b":{"3":{},"5":{},"11":{},"15":{},"20":{},"41":{},"46":{},"48":{},"54":{},"56":{},"76":{},"79":{}}}],["bin",{"_index":13379,"t":{},"b":{"53":{}}}],["binari",{"_index":2401,"t":{},"b":{"4":{},"21":{},"32":{},"35":{},"36":{},"52":{},"53":{}}}],["biperiod",{"_index":5609,"t":{},"b":{"13":{},"21":{}}}],["biri",{"_index":12640,"t":{},"b":{"53":{}}}],["bison",{"_index":9867,"t":{},"b":{"33":{},"35":{}}}],["bit",{"_index":1757,"t":{},"b":{"3":{},"32":{},"35":{},"54":{},"81":{}}}],["bj",{"_index":188,"t":{},"b":{"2":{}}}],["bjarn",{"_index":87,"t":{},"b":{"2":{}}}],["bla",{"_index":7748,"t":{},"b":{"15":{},"21":{},"34":{},"35":{}}}],["blac",{"_index":7749,"t":{},"b":{"15":{}}}],["black",{"_index":8535,"t":{},"b":{"19":{},"41":{},"54":{}}}],["blade",{"_index":14369,"t":{"66":{}},"b":{"66":{},"77":{},"79":{}}}],["blasiu",{"_index":8280,"t":{},"b":{"16":{}}}],["block",{"_index":1098,"t":{},"b":{"3":{},"5":{},"6":{},"7":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"52":{},"56":{},"60":{}}}],["blowup",{"_index":14879,"t":{},"b":{"73":{}}}],["blue",{"_index":8565,"t":{},"b":{"19":{},"27":{}}}],["blurri",{"_index":1758,"t":{},"b":{"3":{}}}],["bmo",{"_index":13384,"t":{},"b":{"53":{}}}],["bnn",{"_index":3245,"t":{},"b":{"5":{},"9":{}}}],["bo",{"_index":453,"t":{},"b":{"2":{}}}],["bodi",{"_index":256,"t":{},"b":{"2":{},"13":{},"37":{},"40":{},"64":{}}}],["boisseri",{"_index":416,"t":{},"b":{"2":{}}}],["bold",{"_index":4739,"t":{},"b":{"11":{}}}],["boldsymbol{\\omega}^{k}_{0",{"_index":2488,"t":{},"b":{"4":{}}}],["boldsymbol{\\omega}^{k}_{1",{"_index":2492,"t":{},"b":{"4":{}}}],["boldsymbol{\\omega}^{k}_{2",{"_index":2496,"t":{},"b":{"4":{}}}],["boldsymbol{\\omega}^{k}_{i",{"_index":2434,"t":{},"b":{"4":{}}}],["boldsymbol{\\omega}^{k}_{i_{k",{"_index":2446,"t":{},"b":{"4":{}}}],["boldsymbol{\\phi}^{k}_{1",{"_index":4317,"t":{},"b":{"11":{}}}],["boldsymbol{\\phi}^{k}_{2",{"_index":4320,"t":{},"b":{"11":{}}}],["boldsymbol{\\phi}^{k}_{3",{"_index":4323,"t":{},"b":{"11":{}}}],["boldsymbol{f",{"_index":2427,"t":{},"b":{"4":{}}}],["boldsymbol{f}_{j_{k}}(p_{p_{k",{"_index":2445,"t":{},"b":{"4":{}}}],["boldsymbol{n",{"_index":14359,"t":{},"b":{"65":{},"72":{},"79":{}}}],["boldsymbol{n}\\cdot",{"_index":14356,"t":{},"b":{"65":{}}}],["boldsymbol{n}}(x",{"_index":14355,"t":{},"b":{"65":{}}}],["boldsymbol{u}_\\infty}.\\boldsymbol{x}^\\perp",{"_index":14378,"t":{},"b":{"66":{}}}],["boldx",{"_index":13817,"t":{},"b":{"59":{}}}],["bonazzoli",{"_index":3428,"t":{},"b":{"5":{}}}],["book",{"_index":3478,"t":{},"b":{"7":{},"15":{},"70":{},"72":{}}}],["bool",{"_index":580,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"13":{},"15":{},"20":{},"26":{},"48":{},"53":{},"54":{},"55":{},"60":{},"70":{}}}],["boolean",{"_index":1344,"t":{},"b":{"3":{},"11":{},"13":{},"18":{},"26":{},"54":{},"55":{},"60":{}}}],["boomer",{"_index":8120,"t":{},"b":{"15":{}}}],["bord",{"_index":1997,"t":{},"b":{"3":{},"20":{}}}],["bord*g1",{"_index":2002,"t":{},"b":{"3":{},"20":{}}}],["bord*g2",{"_index":2004,"t":{},"b":{"3":{},"20":{}}}],["bord.n",{"_index":2053,"t":{},"b":{"3":{}}}],["bord[][i",{"_index":2054,"t":{},"b":{"3":{}}}],["border",{"_index":1395,"t":{},"b":{"3":{},"5":{},"9":{},"11":{},"13":{},"14":{},"15":{},"19":{},"21":{},"22":{},"24":{},"25":{},"34":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"60":{},"61":{},"62":{},"63":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"81":{}}}],["borderlength",{"_index":5272,"t":{},"b":{"13":{}}}],["bordindex(th.nb",{"_index":2048,"t":{},"b":{"3":{}}}],["bordindex[i",{"_index":2063,"t":{},"b":{"3":{}}}],["bordindex[k",{"_index":2055,"t":{},"b":{"3":{}}}],["borouchaki",{"_index":60,"t":{},"b":{"2":{}}}],["bot",{"_index":7927,"t":{},"b":{"15":{}}}],["bot1(m/4",{"_index":5903,"t":{},"b":{"13":{},"24":{}}}],["bot1(t",{"_index":5886,"t":{},"b":{"13":{},"24":{}}}],["bot2(m/2",{"_index":5905,"t":{},"b":{"13":{},"24":{}}}],["bot2(t",{"_index":5893,"t":{},"b":{"13":{},"24":{}}}],["bot3(m/4",{"_index":5907,"t":{},"b":{"13":{},"24":{}}}],["bot3(t",{"_index":5896,"t":{},"b":{"13":{},"24":{}}}],["both",{"_index":895,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"13":{},"15":{},"35":{},"39":{},"41":{},"66":{},"72":{},"76":{},"77":{}}}],["bottleneck",{"_index":3384,"t":{},"b":{"5":{}}}],["bottom",{"_index":5652,"t":{},"b":{"13":{},"37":{},"43":{},"46":{},"48":{},"51":{},"61":{},"79":{}}}],["bottoma",{"_index":14642,"t":{},"b":{"71":{}}}],["bottoma(t",{"_index":14628,"t":{},"b":{"71":{}}}],["bottombeam",{"_index":11252,"t":{},"b":{"42":{}}}],["bottomk",{"_index":14647,"t":{},"b":{"71":{}}}],["bottomk(t",{"_index":14636,"t":{},"b":{"71":{}}}],["bound",{"_index":906,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"19":{},"20":{},"24":{},"48":{},"54":{},"64":{},"73":{},"76":{}}}],["boundaniso",{"_index":12607,"t":{},"b":{"53":{}}}],["boundari",{"_index":603,"t":{"43":{}},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"21":{},"26":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["boundaryedg",{"_index":13742,"t":{},"b":{"55":{}}}],["boundaryel",{"_index":5320,"t":{},"b":{"13":{}}}],["boundaryproblem",{"_index":10490,"t":{},"b":{"38":{}}}],["boundaryproblem(p",{"_index":10494,"t":{},"b":{"38":{}}}],["bounder",{"_index":6534,"t":{},"b":{"13":{}}}],["boundingbox",{"_index":5352,"t":{},"b":{"13":{}}}],["boundingbox(th",{"_index":5343,"t":{},"b":{"13":{}}}],["boundri",{"_index":12139,"t":{},"b":{"48":{}}}],["boussinesq",{"_index":13990,"t":{},"b":{"61":{}}}],["box",{"_index":6040,"t":{},"b":{"13":{},"19":{},"24":{},"27":{},"35":{},"40":{},"42":{},"54":{},"73":{},"78":{}}}],["bracket",{"_index":12373,"t":{},"b":{"50":{}}}],["branch",{"_index":9905,"t":{},"b":{"34":{},"35":{},"65":{}}}],["bratu",{"_index":8257,"t":{},"b":{"16":{}}}],["break",{"_index":681,"t":{},"b":{"3":{},"13":{},"15":{},"18":{},"20":{},"21":{},"26":{},"40":{},"43":{},"45":{},"46":{},"47":{},"50":{},"57":{},"61":{},"73":{},"74":{},"79":{}}}],["breakdown",{"_index":3488,"t":{},"b":{"7":{}}}],["breviti",{"_index":10216,"t":{},"b":{"37":{}}}],["brew",{"_index":9999,"t":{},"b":{"35":{}}}],["brezzi",{"_index":3977,"t":{},"b":{"11":{}}}],["brf",{"_index":1338,"t":{},"b":{"3":{}}}],["brh",{"_index":11265,"t":{},"b":{"42":{}}}],["brhs1",{"_index":11616,"t":{},"b":{"45":{}}}],["brhs2",{"_index":11618,"t":{},"b":{"45":{}}}],["brief",{"_index":887,"t":{},"b":{"3":{},"18":{}}}],["briefli",{"_index":4258,"t":{},"b":{"11":{},"72":{}}}],["bright",{"_index":8570,"t":{},"b":{"19":{},"27":{}}}],["brigitt",{"_index":8,"t":{},"b":{"2":{}}}],["broad",{"_index":12403,"t":{},"b":{"51":{}}}],["broadcast",{"_index":7444,"t":{},"b":{"15":{}}}],["broadcast(processor(0",{"_index":7476,"t":{},"b":{"15":{},"26":{}}}],["broadcast(processor(1",{"_index":7477,"t":{},"b":{"15":{}}}],["broadcast(processor(10",{"_index":7445,"t":{},"b":{"15":{}}}],["broadcast(processor(int",{"_index":8220,"t":{},"b":{"15":{}}}],["brute",{"_index":4426,"t":{},"b":{"11":{}}}],["bs",{"_index":10196,"t":{},"b":{"37":{}}}],["bs_{n",{"_index":10193,"t":{},"b":{"37":{}}}],["bsdcpio",{"_index":10090,"t":{},"b":{"35":{}}}],["bsdtar",{"_index":10091,"t":{},"b":{"35":{}}}],["bt",{"_index":10186,"t":{},"b":{"37":{}}}],["bu",{"_index":13569,"t":{},"b":{"54":{}}}],["bubbl",{"_index":3827,"t":{},"b":{"11":{},"33":{}}}],["bucket",{"_index":7123,"t":{},"b":{"13":{}}}],["buffer",{"_index":7568,"t":{},"b":{"15":{},"21":{},"52":{}}}],["bug",{"_index":4508,"t":{},"b":{"11":{},"13":{},"21":{},"26":{},"31":{},"35":{},"56":{}}}],["buil",{"_index":7687,"t":{},"b":{"15":{}}}],["build",{"_index":1273,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"22":{},"24":{},"26":{},"27":{},"35":{},"36":{},"48":{},"49":{},"53":{},"54":{},"61":{},"68":{},"72":{},"74":{},"77":{}}}],["buildbdmesh",{"_index":6547,"t":{},"b":{"13":{},"36":{}}}],["buildbdmesh(th",{"_index":6545,"t":{},"b":{"13":{},"36":{}}}],["buildcub",{"_index":5944,"t":{},"b":{"13":{}}}],["builder",{"_index":6380,"t":{},"b":{"13":{}}}],["buildlay",{"_index":4085,"t":{},"b":{"11":{},"13":{},"53":{}}}],["buildlayers(square(nn",{"_index":7165,"t":{},"b":{"13":{}}}],["buildlayers(square(nn,nn,region",{"_index":4063,"t":{},"b":{"11":{}}}],["buildlayers(th",{"_index":6116,"t":{},"b":{"13":{},"22":{},"24":{}}}],["buildlayers(th0",{"_index":9339,"t":{},"b":{"25":{}}}],["buildlayers(th2",{"_index":6082,"t":{},"b":{"13":{},"15":{}}}],["buildlayers(thx",{"_index":6036,"t":{},"b":{"13":{}}}],["buildmat",{"_index":14927,"t":{},"b":{"74":{}}}],["buildmesh",{"_index":3808,"t":{},"b":{"11":{},"13":{},"14":{},"15":{},"25":{},"36":{},"49":{},"54":{},"66":{},"67":{},"69":{},"72":{}}}],["buildmesh(a(10*n",{"_index":5670,"t":{},"b":{"13":{},"43":{}}}],["buildmesh(a(20",{"_index":5408,"t":{},"b":{"13":{},"24":{}}}],["buildmesh(a(30",{"_index":11997,"t":{},"b":{"48":{}}}],["buildmesh(a(5*n",{"_index":7471,"t":{},"b":{"15":{},"38":{}}}],["buildmesh(a(50",{"_index":5220,"t":{},"b":{"13":{},"24":{},"70":{}}}],["buildmesh(a(6",{"_index":5452,"t":{},"b":{"13":{},"49":{}}}],["buildmesh(a(n",{"_index":12082,"t":{},"b":{"48":{}}}],["buildmesh(a(n)+b(n)+c(n)+d(n)+i",{"_index":6504,"t":{},"b":{"13":{}}}],["buildmesh(a(nn",{"_index":11877,"t":{},"b":{"48":{}}}],["buildmesh(a0(10*nn",{"_index":14200,"t":{},"b":{"63":{}}}],["buildmesh(a0(20",{"_index":14146,"t":{},"b":{"62":{}}}],["buildmesh(a0(3*nn",{"_index":14918,"t":{},"b":{"74":{}}}],["buildmesh(a0(n",{"_index":5020,"t":{},"b":{"11":{}}}],["buildmesh(a00(10*n",{"_index":15398,"t":{},"b":{"81":{}}}],["buildmesh(aa(70",{"_index":15012,"t":{},"b":{"75":{}}}],["buildmesh(ab(n)+bc(n)+cd(n)+da(n),fixedbord",{"_index":12114,"t":{},"b":{"48":{}}}],["buildmesh(b(20",{"_index":10726,"t":{},"b":{"40":{},"42":{}}}],["buildmesh(b1",{"_index":9270,"t":{},"b":{"22":{}}}],["buildmesh(b1(nn",{"_index":13498,"t":{},"b":{"54":{}}}],["buildmesh(b1(nn*l",{"_index":9312,"t":{},"b":{"25":{}}}],["buildmesh(b1(nnplus*nn*l",{"_index":14049,"t":{},"b":{"61":{}}}],["buildmesh(ba(6",{"_index":5530,"t":{},"b":{"13":{},"24":{},"48":{}}}],["buildmesh(bb(nn",{"_index":5266,"t":{},"b":{"13":{}}}],["buildmesh(c(10",{"_index":6774,"t":{},"b":{"13":{}}}],["buildmesh(c(100",{"_index":15089,"t":{},"b":{"76":{},"77":{}}}],["buildmesh(c(25",{"_index":14416,"t":{},"b":{"66":{}}}],["buildmesh(c(30",{"_index":5690,"t":{},"b":{"13":{},"48":{}}}],["buildmesh(c(50",{"_index":5700,"t":{},"b":{"13":{},"21":{},"66":{},"76":{}}}],["buildmesh(c(70",{"_index":11160,"t":{},"b":{"41":{}}}],["buildmesh(c0(50",{"_index":14565,"t":{},"b":{"69":{}}}],["buildmesh(c0(60",{"_index":11934,"t":{},"b":{"48":{}}}],["buildmesh(c01",{"_index":5180,"t":{},"b":{"13":{},"24":{}}}],["buildmesh(c01(10",{"_index":6098,"t":{},"b":{"13":{},"24":{}}}],["buildmesh(c1(10*n",{"_index":5674,"t":{},"b":{"13":{}}}],["buildmesh(cc",{"_index":14843,"t":{},"b":{"73":{}}}],["buildmesh(cc(100",{"_index":6287,"t":{},"b":{"13":{}}}],["buildmesh(cc(50",{"_index":9328,"t":{},"b":{"25":{}}}],["buildmesh(curve1",{"_index":7217,"t":{},"b":{"13":{}}}],["buildmesh(e(5*n",{"_index":7474,"t":{},"b":{"15":{},"38":{}}}],["buildmesh(enclosure(3*n",{"_index":14641,"t":{},"b":{"71":{}}}],["buildmesh(f(10*m",{"_index":5868,"t":{},"b":{"13":{}}}],["buildmesh(floor(n",{"_index":6835,"t":{},"b":{"13":{}}}],["buildmesh(fr1(5*nn",{"_index":11587,"t":{},"b":{"45":{}}}],["buildmesh(g",{"_index":7256,"t":{},"b":{"13":{}}}],["buildmesh(g1(2*m",{"_index":5768,"t":{},"b":{"13":{},"24":{}}}],["buildmesh(gamma(40",{"_index":6980,"t":{},"b":{"13":{}}}],["buildmesh(gamma1(100",{"_index":14746,"t":{},"b":{"72":{}}}],["buildmesh(gamma1(20*(n+1",{"_index":14775,"t":{},"b":{"72":{}}}],["buildmesh(gamma1(40",{"_index":6979,"t":{},"b":{"13":{}}}],["buildmesh(gamma1(5*n",{"_index":10467,"t":{},"b":{"38":{}}}],["buildmesh(gamma1(m1)+...+gammaj(mj",{"_index":5198,"t":{},"b":{"13":{}}}],["buildmesh(gammainsid",{"_index":10471,"t":{},"b":{"38":{}}}],["buildmesh(h",{"_index":11258,"t":{},"b":{"42":{}}}],["buildmesh(inneredg",{"_index":10372,"t":{},"b":{"37":{}}}],["buildmesh(l1(8",{"_index":5797,"t":{},"b":{"13":{}}}],["buildmesh(l1(n/2",{"_index":5813,"t":{},"b":{"13":{},"40":{}}}],["buildmesh(left(n",{"_index":5902,"t":{},"b":{"13":{},"24":{}}}],["buildmesh(n(10",{"_index":12183,"t":{},"b":{"48":{}}}],["buildmesh(seg1(20",{"_index":5843,"t":{},"b":{"13":{}}}],["buildmesh(taxe(hh*nn",{"_index":6056,"t":{},"b":{"13":{}}}],["buildmesh(w1r(nm/4",{"_index":12485,"t":{},"b":{"51":{}}}],["buildmeshl(d01",{"_index":6610,"t":{},"b":{"13":{}}}],["buildmeshl(e1(1000",{"_index":6599,"t":{},"b":{"13":{}}}],["buildrecursive.edp",{"_index":8284,"t":{},"b":{"16":{}}}],["buildsurfac",{"_index":6211,"t":{},"b":{"13":{}}}],["buildth",{"_index":12141,"t":{},"b":{"48":{}}}],["built",{"_index":1108,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"35":{},"69":{},"72":{}}}],["bundl",{"_index":2811,"t":{},"b":{"4":{}}}],["buoyanc",{"_index":13991,"t":{},"b":{"61":{}}}],["busi",{"_index":440,"t":{},"b":{"2":{}}}],["button",{"_index":8526,"t":{},"b":{"19":{}}}],["bvf",{"_index":1984,"t":{},"b":{"3":{},"20":{}}}],["bvf(vh",{"_index":1991,"t":{},"b":{"3":{},"20":{}}}],["bvp",{"_index":10201,"t":{},"b":{"37":{}}}],["bw",{"_index":5694,"t":{},"b":{"13":{},"24":{},"40":{},"48":{},"54":{}}}],["bx",{"_index":11269,"t":{},"b":{"42":{},"45":{},"48":{},"81":{}}}],["bx'*pp",{"_index":11278,"t":{},"b":{"42":{},"45":{}}}],["bx(xh",{"_index":11275,"t":{},"b":{"42":{},"45":{}}}],["bx*5+sin(t",{"_index":15416,"t":{},"b":{"81":{}}}],["bx*u1",{"_index":11281,"t":{},"b":{"42":{},"45":{}}}],["bx,bi",{"_index":12099,"t":{},"b":{"48":{}}}],["bx^t",{"_index":11460,"t":{},"b":{"45":{}}}],["bx_{ij",{"_index":11445,"t":{},"b":{"45":{}}}],["bx_{ij},by_{ij",{"_index":11444,"t":{},"b":{"45":{}}}],["bxyz",{"_index":6164,"t":{},"b":{"13":{},"40":{}}}],["bx||/||bc",{"_index":12126,"t":{},"b":{"48":{}}}],["by'*pp",{"_index":11280,"t":{},"b":{"42":{},"45":{}}}],["by(xh",{"_index":11276,"t":{},"b":{"42":{},"45":{}}}],["by*u2",{"_index":11282,"t":{},"b":{"42":{},"45":{}}}],["by^t",{"_index":11461,"t":{},"b":{"45":{}}}],["by_{ij",{"_index":11449,"t":{},"b":{"45":{}}}],["bypass",{"_index":5240,"t":{},"b":{"13":{}}}],["byte",{"_index":2798,"t":{},"b":{"4":{},"18":{}}}],["bz",{"_index":14331,"t":{},"b":{"65":{}}}],["bzi(p00[0",{"_index":5733,"t":{},"b":{"13":{},"24":{}}}],["bzi(p00[1",{"_index":5737,"t":{},"b":{"13":{},"24":{}}}],["bzi(p01[0",{"_index":5742,"t":{},"b":{"13":{},"24":{}}}],["bzi(p01[1",{"_index":5746,"t":{},"b":{"13":{},"24":{}}}],["bzi(p11[0",{"_index":5751,"t":{},"b":{"13":{},"24":{}}}],["bzi(p11[1",{"_index":5755,"t":{},"b":{"13":{},"24":{}}}],["bzi(p21[0",{"_index":5760,"t":{},"b":{"13":{},"24":{}}}],["bzi(p21[1",{"_index":5764,"t":{},"b":{"13":{},"24":{}}}],["bzi(real",{"_index":5708,"t":{},"b":{"13":{},"24":{}}}],["bzip2",{"_index":10092,"t":{},"b":{"35":{}}}],["c",{"_index":88,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"24":{},"33":{},"34":{},"35":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"58":{},"60":{},"62":{},"63":{},"66":{},"69":{},"70":{},"72":{},"75":{},"76":{},"77":{},"81":{}}}],["c(1",{"_index":9039,"t":{},"b":{"21":{}}}],["c(10",{"_index":15417,"t":{},"b":{"81":{}}}],["c(10*n",{"_index":5672,"t":{},"b":{"13":{},"15":{},"38":{}}}],["c(1:2",{"_index":2316,"t":{},"b":{"4":{}}}],["c(4",{"_index":5454,"t":{},"b":{"13":{},"49":{}}}],["c(40",{"_index":5844,"t":{},"b":{"13":{}}}],["c(5",{"_index":8899,"t":{},"b":{"21":{},"40":{},"42":{}}}],["c(50",{"_index":7950,"t":{},"b":{"15":{}}}],["c(\\varphi_1|_{p",{"_index":11989,"t":{},"b":{"48":{}}}],["c(i",{"_index":2327,"t":{},"b":{"4":{},"21":{}}}],["c(i,k),i",{"_index":2353,"t":{},"b":{"4":{}}}],["c(i[i",{"_index":8941,"t":{},"b":{"21":{}}}],["c(k[2",{"_index":2608,"t":{},"b":{"4":{}}}],["c(m",{"_index":8943,"t":{},"b":{"21":{}}}],["c(n",{"_index":8915,"t":{},"b":{"21":{},"48":{}}}],["c(real[int",{"_index":673,"t":{},"b":{"3":{},"20":{}}}],["c(t",{"_index":5449,"t":{},"b":{"13":{},"15":{},"21":{},"38":{},"40":{},"41":{},"42":{},"48":{},"49":{},"66":{},"76":{},"77":{},"81":{}}}],["c(u^{m+1",{"_index":15305,"t":{},"b":{"79":{}}}],["c(x",{"_index":930,"t":{},"b":{"3":{}}}],["c(x,t",{"_index":15153,"t":{},"b":{"77":{}}}],["c(x_t,t",{"_index":15142,"t":{},"b":{"77":{}}}],["c(x_{\\mu",{"_index":973,"t":{},"b":{"3":{}}}],["c(x_{df",{"_index":15164,"t":{},"b":{"77":{}}}],["c)*(t",{"_index":14187,"t":{},"b":{"63":{}}}],["c)*t",{"_index":5793,"t":{},"b":{"13":{}}}],["c)/(c",{"_index":14223,"t":{},"b":{"63":{}}}],["c)w",{"_index":15176,"t":{},"b":{"77":{}}}],["c){x",{"_index":5888,"t":{},"b":{"13":{},"24":{}}}],["c*2)*t",{"_index":15377,"t":{},"b":{"81":{}}}],["c*cos(st(t",{"_index":5861,"t":{},"b":{"13":{}}}],["c*cos(t)/2",{"_index":5789,"t":{},"b":{"13":{}}}],["c*sin(st(t",{"_index":5862,"t":{},"b":{"13":{}}}],["c*sin(t)/2",{"_index":5787,"t":{},"b":{"13":{}}}],["c+(1+b",{"_index":5792,"t":{},"b":{"13":{}}}],["c+(a",{"_index":15376,"t":{},"b":{"81":{}}}],["c+(b",{"_index":15379,"t":{},"b":{"81":{}}}],["c++11",{"_index":3694,"t":{},"b":{"10":{}}}],["c+t",{"_index":5892,"t":{},"b":{"13":{},"24":{}}}],["c,\\delta",{"_index":14998,"t":{},"b":{"75":{}}}],["c,\\quad",{"_index":11946,"t":{},"b":{"48":{}}}],["c,d",{"_index":14173,"t":{},"b":{"63":{}}}],["c.im",{"_index":13972,"t":{},"b":{"60":{}}}],["c.re",{"_index":13971,"t":{},"b":{"60":{}}}],["c.x)*a2",{"_index":2639,"t":{},"b":{"4":{}}}],["c.y)*a2",{"_index":2641,"t":{},"b":{"4":{}}}],["c/2",{"_index":5788,"t":{},"b":{"13":{}}}],["c0",{"_index":1771,"t":{},"b":{"3":{},"20":{},"48":{},"69":{}}}],["c0(50",{"_index":14559,"t":{},"b":{"69":{}}}],["c0(m",{"_index":5872,"t":{},"b":{"13":{}}}],["c0(n",{"_index":5017,"t":{},"b":{"11":{}}}],["c0(t",{"_index":5009,"t":{},"b":{"11":{},"13":{},"48":{},"69":{}}}],["c0*c1",{"_index":1779,"t":{},"b":{"3":{},"20":{}}}],["c0*c2",{"_index":1780,"t":{},"b":{"3":{},"20":{}}}],["c00",{"_index":1765,"t":{},"b":{"3":{},"20":{}}}],["c00(5*n",{"_index":15410,"t":{},"b":{"81":{}}}],["c00(t",{"_index":15390,"t":{},"b":{"81":{}}}],["c00*w*v",{"_index":1795,"t":{},"b":{"3":{},"20":{}}}],["c01",{"_index":1766,"t":{},"b":{"3":{},"20":{}}}],["c01(t",{"_index":5157,"t":{},"b":{"13":{},"24":{}}}],["c01*dx(w)*v",{"_index":1796,"t":{},"b":{"3":{},"20":{}}}],["c01*w*dx(v",{"_index":1797,"t":{},"b":{"3":{},"20":{}}}],["c02",{"_index":1767,"t":{},"b":{"3":{},"13":{},"20":{},"24":{}}}],["c02(10",{"_index":6099,"t":{},"b":{"13":{},"24":{}}}],["c02(t",{"_index":5159,"t":{},"b":{"13":{},"24":{}}}],["c02*dy(w)*v",{"_index":1798,"t":{},"b":{"3":{},"20":{}}}],["c02*w*dy(v",{"_index":1799,"t":{},"b":{"3":{},"20":{}}}],["c03",{"_index":5173,"t":{},"b":{"13":{},"24":{}}}],["c03(10",{"_index":6100,"t":{},"b":{"13":{},"24":{}}}],["c03(t",{"_index":5162,"t":{},"b":{"13":{},"24":{}}}],["c04",{"_index":5174,"t":{},"b":{"13":{},"24":{}}}],["c04(10",{"_index":6101,"t":{},"b":{"13":{},"24":{}}}],["c04(t",{"_index":5163,"t":{},"b":{"13":{},"24":{}}}],["c05",{"_index":5175,"t":{},"b":{"13":{},"24":{}}}],["c05(t",{"_index":5165,"t":{},"b":{"13":{},"24":{}}}],["c06",{"_index":5176,"t":{},"b":{"13":{},"24":{}}}],["c06(t",{"_index":5167,"t":{},"b":{"13":{},"24":{}}}],["c1",{"_index":1456,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"20":{},"24":{},"26":{},"48":{},"54":{},"69":{}}}],["c1(2*m",{"_index":5869,"t":{},"b":{"13":{}}}],["c1(i",{"_index":7621,"t":{},"b":{"15":{}}}],["c1(m",{"_index":9370,"t":{},"b":{"25":{}}}],["c1(n",{"_index":5016,"t":{},"b":{"11":{},"13":{},"40":{}}}],["c1(t",{"_index":5008,"t":{},"b":{"11":{},"13":{},"25":{},"40":{},"48":{}}}],["c1*c2",{"_index":1782,"t":{},"b":{"3":{},"20":{}}}],["c1+c2",{"_index":7619,"t":{},"b":{"15":{}}}],["c10(5*n",{"_index":15411,"t":{},"b":{"81":{}}}],["c10(t",{"_index":15392,"t":{},"b":{"81":{}}}],["c11",{"_index":1768,"t":{},"b":{"3":{},"20":{}}}],["c11(5",{"_index":6102,"t":{},"b":{"13":{},"24":{}}}],["c11(5)+c12(20)+c13(5)+c14(20",{"_index":14560,"t":{},"b":{"69":{}}}],["c11(n",{"_index":5177,"t":{},"b":{"13":{},"24":{}}}],["c11(t",{"_index":5169,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c11*dx(w)*dx(v",{"_index":1800,"t":{},"b":{"3":{},"20":{}}}],["c12",{"_index":1769,"t":{},"b":{"3":{},"20":{},"69":{}}}],["c12(20",{"_index":14577,"t":{},"b":{"69":{}}}],["c12(5",{"_index":6103,"t":{},"b":{"13":{},"24":{}}}],["c12(n",{"_index":5178,"t":{},"b":{"13":{},"24":{}}}],["c12(t",{"_index":5170,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c12*dx(w)*dy(v",{"_index":1801,"t":{},"b":{"3":{},"20":{}}}],["c12*dy(w)*dx(v",{"_index":1802,"t":{},"b":{"3":{},"20":{}}}],["c121(12",{"_index":14578,"t":{},"b":{"69":{}}}],["c121(t",{"_index":14573,"t":{},"b":{"69":{}}}],["c121+c122",{"_index":14571,"t":{},"b":{"69":{}}}],["c122(8",{"_index":14579,"t":{},"b":{"69":{}}}],["c122(t",{"_index":14575,"t":{},"b":{"69":{}}}],["c13(5",{"_index":6104,"t":{},"b":{"13":{},"24":{}}}],["c13(n",{"_index":5179,"t":{},"b":{"13":{},"24":{}}}],["c13(t",{"_index":5171,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c14(5",{"_index":6105,"t":{},"b":{"13":{},"24":{}}}],["c14(t",{"_index":6091,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c1[].max",{"_index":2959,"t":{},"b":{"4":{}}}],["c1[].min",{"_index":2960,"t":{},"b":{"4":{}}}],["c1a",{"_index":7617,"t":{},"b":{"15":{}}}],["c1a)(i",{"_index":7614,"t":{},"b":{"15":{}}}],["c1ac2",{"_index":7620,"t":{},"b":{"15":{}}}],["c1ac2a",{"_index":7616,"t":{},"b":{"15":{}}}],["c2",{"_index":1460,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"20":{},"24":{},"26":{},"48":{},"54":{},"69":{}}}],["c2(3",{"_index":5815,"t":{},"b":{"13":{}}}],["c2(m",{"_index":9371,"t":{},"b":{"25":{}}}],["c2(t",{"_index":5808,"t":{},"b":{"13":{},"25":{},"48":{}}}],["c2*uo",{"_index":7623,"t":{},"b":{"15":{},"26":{}}}],["c20(5*n",{"_index":15412,"t":{},"b":{"81":{}}}],["c20(t",{"_index":15395,"t":{},"b":{"81":{}}}],["c21",{"_index":6106,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c21(3",{"_index":10849,"t":{},"b":{"40":{}}}],["c21(t",{"_index":6092,"t":{},"b":{"13":{},"24":{},"40":{},"69":{}}}],["c22",{"_index":1770,"t":{},"b":{"3":{},"13":{},"20":{},"24":{},"69":{}}}],["c22(3",{"_index":10850,"t":{},"b":{"40":{}}}],["c22(t",{"_index":6094,"t":{},"b":{"13":{},"24":{},"40":{},"69":{}}}],["c22*dy(w)*dy(v",{"_index":1803,"t":{},"b":{"3":{},"20":{}}}],["c23",{"_index":6107,"t":{},"b":{"13":{},"24":{}}}],["c23(t",{"_index":6095,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c24",{"_index":6108,"t":{},"b":{"13":{},"24":{}}}],["c24(t",{"_index":6096,"t":{},"b":{"13":{},"24":{},"69":{}}}],["c2a",{"_index":7615,"t":{},"b":{"15":{}}}],["c3(2*m",{"_index":5870,"t":{},"b":{"13":{}}}],["c3(m",{"_index":9372,"t":{},"b":{"25":{}}}],["c3(n",{"_index":5816,"t":{},"b":{"13":{},"40":{}}}],["c3(t",{"_index":5810,"t":{},"b":{"13":{},"25":{},"40":{}}}],["c30(5*n",{"_index":15413,"t":{},"b":{"81":{}}}],["c30(t",{"_index":15397,"t":{},"b":{"81":{}}}],["c4(3",{"_index":5871,"t":{},"b":{"13":{}}}],["c4(m",{"_index":9373,"t":{},"b":{"25":{}}}],["c4(t",{"_index":5863,"t":{},"b":{"13":{},"25":{},"40":{}}}],["c5x5",{"_index":9161,"t":{},"b":{"21":{}}}],["c:\\((x,y,u(x+\\delta",{"_index":11831,"t":{},"b":{"48":{}}}],["c:\\>\"program",{"_index":9949,"t":{},"b":{"35":{}}}],["c:\\mathbb{r}^{n}\\rightarrow\\mathbb{r}^{m",{"_index":935,"t":{},"b":{"3":{}}}],["c:\\msys32\\mingw32\\bin",{"_index":10118,"t":{},"b":{"35":{}}}],["c:\\msys64\\mingw64\\bin",{"_index":10117,"t":{},"b":{"35":{}}}],["c:\\program",{"_index":9937,"t":{},"b":{"35":{}}}],["c:devmsys64mingw32.ex",{"_index":10074,"t":{},"b":{"35":{}}}],["c:devmsys64mingw64.ex",{"_index":10075,"t":{},"b":{"35":{}}}],["c:devmsys64msys2.ex",{"_index":10073,"t":{},"b":{"35":{}}}],["c>0",{"_index":4606,"t":{},"b":{"11":{},"45":{}}}],["c[(u",{"_index":15299,"t":{},"b":{"79":{}}}],["c[].max",{"_index":15170,"t":{},"b":{"77":{}}}],["c[].min",{"_index":15169,"t":{},"b":{"77":{}}}],["c[i",{"_index":8903,"t":{},"b":{"21":{}}}],["c\\circ",{"_index":13517,"t":{},"b":{"54":{},"77":{}}}],["c\\cup",{"_index":14379,"t":{},"b":{"66":{}}}],["c\\epsilon",{"_index":11487,"t":{},"b":{"45":{}}}],["c\\left",{"_index":11435,"t":{},"b":{"45":{}}}],["c\\over",{"_index":14175,"t":{},"b":{"63":{}}}],["c\\varphi_1",{"_index":11961,"t":{},"b":{"48":{}}}],["c^0(\\omega_h^i)~:~f|_{t^i_k}\\in",{"_index":4377,"t":{},"b":{"11":{}}}],["c^0(x,0",{"_index":15145,"t":{},"b":{"77":{}}}],["c^0(x_",{"_index":15154,"t":{},"b":{"77":{}}}],["c^1",{"_index":3903,"t":{},"b":{"11":{}}}],["c^1(\\omega",{"_index":3908,"t":{},"b":{"11":{}}}],["c^2",{"_index":13539,"t":{},"b":{"54":{},"62":{}}}],["c^n}{\\delta",{"_index":15175,"t":{},"b":{"77":{}}}],["c^{1}(\\omega",{"_index":1588,"t":{},"b":{"3":{}}}],["c^{1}(\\omega)}{\\operatorname{argmin",{"_index":1639,"t":{},"b":{"3":{}}}],["c^{2}\\delta",{"_index":14133,"t":{},"b":{"62":{}}}],["c^{k",{"_index":1522,"t":{},"b":{"3":{}}}],["c^{k}([0,2\\pi",{"_index":1529,"t":{},"b":{"3":{}}}],["c_0",{"_index":11912,"t":{},"b":{"48":{},"69":{}}}],["c_0>0",{"_index":11011,"t":{},"b":{"41":{}}}],["c_0\\cup",{"_index":14551,"t":{},"b":{"69":{}}}],["c_1",{"_index":11925,"t":{},"b":{"48":{},"69":{}}}],["c_1,\\cdots,c_k",{"_index":11910,"t":{},"b":{"48":{}}}],["c_1h",{"_index":12028,"t":{},"b":{"48":{}}}],["c_2",{"_index":11928,"t":{},"b":{"48":{}}}],["c_2\\epsilon^{m+1}\\frac{\\epsilon^m",{"_index":14032,"t":{},"b":{"61":{}}}],["c_2\\frac{\\epsilon^2",{"_index":14006,"t":{},"b":{"61":{}}}],["c_2h^2",{"_index":12030,"t":{},"b":{"48":{}}}],["c_\\ell",{"_index":4604,"t":{},"b":{"11":{}}}],["c_\\mu\\frac{k^2}\\epsilon",{"_index":14000,"t":{},"b":{"61":{}}}],["c_\\mu\\frac{{k^{m+1}}^2}{\\epsilon^{m+1",{"_index":14035,"t":{},"b":{"61":{}}}],["c_i",{"_index":11917,"t":{},"b":{"48":{},"69":{}}}],["c_i\\}_{1,\\cdots,k",{"_index":11909,"t":{},"b":{"48":{}}}],["c_{0",{"_index":11923,"t":{},"b":{"48":{}}}],["c_{a",{"_index":14624,"t":{},"b":{"71":{}}}],["c_{b",{"_index":14626,"t":{},"b":{"71":{}}}],["c_{i",{"_index":1090,"t":{},"b":{"3":{},"69":{}}}],["c_{ijkl",{"_index":10668,"t":{},"b":{"40":{}}}],["c_{ijkl}(\\mathbf{x",{"_index":10672,"t":{},"b":{"40":{}}}],["c_{ijkl}(\\mathbf{x})\\varepsilon_{ij}(\\mathbf{x",{"_index":10667,"t":{},"b":{"40":{}}}],["c_{ijkl}(x)\\varepsilon_{kl}(\\mathbf{v}),\\quad",{"_index":10771,"t":{},"b":{"40":{}}}],["c_{ijkl}:\\quad",{"_index":10776,"t":{},"b":{"40":{}}}],["c_{ijlk",{"_index":10670,"t":{},"b":{"40":{}}}],["c_{i}(x",{"_index":911,"t":{},"b":{"3":{}}}],["c_{i}(x)\\leq",{"_index":909,"t":{},"b":{"3":{}}}],["c_{i}(x_{\\mu",{"_index":971,"t":{},"b":{"3":{}}}],["c_{i},\\;i",{"_index":11920,"t":{},"b":{"48":{}}}],["c_{i}\\}_{1,2",{"_index":14545,"t":{},"b":{"69":{}}}],["c_{i}^{\\mathrm{lb",{"_index":1089,"t":{},"b":{"3":{}}}],["c_{i}^{\\mathrm{lb}}\\leq",{"_index":1080,"t":{},"b":{"3":{}}}],["c_{i}^{\\mathrm{ub",{"_index":1081,"t":{},"b":{"3":{}}}],["c_{jikl",{"_index":10669,"t":{},"b":{"40":{}}}],["c_{k",{"_index":14625,"t":{},"b":{"71":{}}}],["c_{klij",{"_index":10671,"t":{},"b":{"40":{}}}],["c`c",{"_index":7514,"t":{},"b":{"15":{}}}],["ca",{"_index":10836,"t":{},"b":{"40":{},"71":{}}}],["ca*(1",{"_index":10838,"t":{},"b":{"40":{}}}],["ca*t",{"_index":10846,"t":{},"b":{"40":{}}}],["cacul",{"_index":13512,"t":{},"b":{"54":{}}}],["cad",{"_index":5116,"t":{},"b":{"12":{}}}],["cahouet",{"_index":11560,"t":{},"b":{"45":{}}}],["cai",{"_index":167,"t":{},"b":{"2":{}}}],["cai1989",{"_index":166,"t":{},"b":{"2":{},"15":{}}}],["cal",{"_index":4369,"t":{},"b":{"11":{},"40":{},"48":{}}}],["calcul",{"_index":3621,"t":{},"b":{"8":{},"11":{},"15":{},"20":{},"38":{},"40":{},"41":{},"45":{},"48":{},"54":{},"71":{}}}],["calculu",{"_index":1611,"t":{},"b":{"3":{},"14":{},"72":{}}}],["call",{"_index":715,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"13":{},"15":{},"16":{},"18":{},"19":{},"20":{},"27":{},"38":{},"40":{},"41":{},"48":{},"51":{},"52":{},"60":{},"62":{},"64":{},"65":{},"66":{},"72":{},"76":{},"77":{},"81":{}}}],["callabl",{"_index":7860,"t":{},"b":{"15":{}}}],["came",{"_index":5405,"t":{},"b":{"13":{}}}],["camlight('headlight",{"_index":14689,"t":{},"b":{"71":{}}}],["cannard",{"_index":9793,"t":{},"b":{"29":{}}}],["canon",{"_index":2931,"t":{},"b":{"4":{},"38":{},"76":{}}}],["can’t",{"_index":819,"t":{},"b":{"3":{},"13":{}}}],["cap",{"_index":4466,"t":{},"b":{"11":{},"13":{},"15":{},"24":{},"26":{}}}],["capabl",{"_index":844,"t":{},"b":{"3":{},"12":{}}}],["capacitor",{"_index":14622,"t":{},"b":{"71":{}}}],["captur",{"_index":6996,"t":{},"b":{"13":{},"74":{}}}],["cardioid",{"_index":5695,"t":{},"b":{"13":{}}}],["cardioid.ep",{"_index":5701,"t":{},"b":{"13":{}}}],["care",{"_index":722,"t":{},"b":{"3":{},"4":{},"13":{},"81":{}}}],["cartesian",{"_index":7234,"t":{},"b":{"13":{},"14":{}}}],["cas1",{"_index":9180,"t":{},"b":{"21":{}}}],["cas2",{"_index":9185,"t":{},"b":{"21":{}}}],["case",{"_index":694,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"21":{},"26":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"46":{},"51":{},"60":{},"69":{},"72":{},"77":{},"78":{}}}],["casefile1.edp",{"_index":9239,"t":{},"b":{"21":{}}}],["cask",{"_index":10000,"t":{},"b":{"35":{}}}],["cassini",{"_index":5702,"t":{},"b":{"13":{}}}],["cassini.ep",{"_index":5706,"t":{},"b":{"13":{}}}],["cast",{"_index":5111,"t":{},"b":{"12":{},"60":{}}}],["catch",{"_index":1349,"t":{},"b":{"3":{},"20":{},"21":{},"48":{},"57":{}}}],["cauchi",{"_index":10177,"t":{},"b":{"37":{},"65":{}}}],["caught",{"_index":1352,"t":{},"b":{"3":{},"21":{}}}],["caus",{"_index":15344,"t":{},"b":{"80":{}}}],["caution",{"_index":6569,"t":{},"b":{"13":{}}}],["caviti",{"_index":3746,"t":{},"b":{"10":{},"25":{},"42":{},"45":{},"51":{},"78":{},"80":{}}}],["cb",{"_index":8944,"t":{},"b":{"21":{},"40":{},"71":{}}}],["cb*(1",{"_index":10848,"t":{},"b":{"40":{}}}],["cb*(t",{"_index":10837,"t":{},"b":{"40":{}}}],["cc",{"_index":1462,"t":{},"b":{"3":{},"13":{},"15":{},"18":{},"21":{},"35":{},"48":{},"77":{}}}],["cc(1,1",{"_index":9193,"t":{},"b":{"21":{}}}],["cc(1,2",{"_index":9198,"t":{},"b":{"21":{}}}],["cc(1,4",{"_index":9203,"t":{},"b":{"21":{}}}],["cc(1,5",{"_index":9208,"t":{},"b":{"21":{}}}],["cc(1,6",{"_index":9213,"t":{},"b":{"21":{}}}],["cc(2,1",{"_index":9194,"t":{},"b":{"21":{}}}],["cc(2,2",{"_index":9199,"t":{},"b":{"21":{}}}],["cc(2,4",{"_index":9204,"t":{},"b":{"21":{}}}],["cc(2,5",{"_index":9209,"t":{},"b":{"21":{}}}],["cc(2,6",{"_index":9214,"t":{},"b":{"21":{}}}],["cc(35",{"_index":15014,"t":{},"b":{"75":{}}}],["cc(4,1",{"_index":9195,"t":{},"b":{"21":{}}}],["cc(4,2",{"_index":9200,"t":{},"b":{"21":{}}}],["cc(4,4",{"_index":9205,"t":{},"b":{"21":{}}}],["cc(4,5",{"_index":9210,"t":{},"b":{"21":{}}}],["cc(4,6",{"_index":9215,"t":{},"b":{"21":{}}}],["cc(5,1",{"_index":9196,"t":{},"b":{"21":{}}}],["cc(5,2",{"_index":9201,"t":{},"b":{"21":{}}}],["cc(5,4",{"_index":9206,"t":{},"b":{"21":{}}}],["cc(5,5",{"_index":9211,"t":{},"b":{"21":{}}}],["cc(5,6",{"_index":9216,"t":{},"b":{"21":{}}}],["cc(6,1",{"_index":9197,"t":{},"b":{"21":{}}}],["cc(6,2",{"_index":9202,"t":{},"b":{"21":{}}}],["cc(6,4",{"_index":9207,"t":{},"b":{"21":{}}}],["cc(6,5",{"_index":9212,"t":{},"b":{"21":{}}}],["cc(6,6",{"_index":9217,"t":{},"b":{"21":{}}}],["cc(7",{"_index":9144,"t":{},"b":{"21":{}}}],["cc(mpicomm",{"_index":8183,"t":{},"b":{"15":{}}}],["cc(mpigroup",{"_index":8185,"t":{},"b":{"15":{}}}],["cc(mpirank",{"_index":8187,"t":{},"b":{"15":{}}}],["cc(nc",{"_index":5265,"t":{},"b":{"13":{}}}],["cc(t",{"_index":5259,"t":{},"b":{"13":{},"25":{},"73":{},"75":{}}}],["cc)/th.area",{"_index":12136,"t":{},"b":{"48":{}}}],["cc/dt+(v1*dx(cc)+v2*dy(cc)))*w",{"_index":15188,"t":{},"b":{"77":{}}}],["cc[].max",{"_index":15195,"t":{},"b":{"77":{}}}],["cc[].min",{"_index":15194,"t":{},"b":{"77":{}}}],["ccc",{"_index":8208,"t":{},"b":{"15":{},"21":{}}}],["ccc(5*m",{"_index":14480,"t":{},"b":{"67":{}}}],["ccc(processor((rk<size/2",{"_index":8203,"t":{},"b":{"15":{}}}],["ccc(processor(color",{"_index":8189,"t":{},"b":{"15":{}}}],["ccc(t",{"_index":14470,"t":{},"b":{"67":{}}}],["ccc*(x*x+y*i",{"_index":8809,"t":{},"b":{"21":{}}}],["ccold",{"_index":15184,"t":{},"b":{"77":{}}}],["ccold*w/dt",{"_index":15191,"t":{},"b":{"77":{}}}],["ccp",{"_index":11720,"t":{},"b":{"46":{}}}],["cd",{"_index":9978,"t":{},"b":{"35":{},"48":{}}}],["cddir",{"_index":13431,"t":{},"b":{"53":{}}}],["cdot",{"_index":2305,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"37":{},"41":{},"65":{},"73":{}}}],["ce(30",{"_index":14844,"t":{},"b":{"73":{}}}],["ce(t",{"_index":14827,"t":{},"b":{"73":{}}}],["cecil",{"_index":7902,"t":{},"b":{"15":{}}}],["ceil",{"_index":13504,"t":{},"b":{"54":{}}}],["ceil(x",{"_index":13507,"t":{},"b":{"54":{}}}],["ceiling(n",{"_index":6836,"t":{},"b":{"13":{}}}],["ceiling(t",{"_index":6834,"t":{},"b":{"13":{}}}],["cell",{"_index":4391,"t":{},"b":{"11":{}}}],["center",{"_index":2424,"t":{},"b":{"4":{},"13":{},"40":{},"41":{},"45":{},"69":{},"77":{}}}],["centr",{"_index":12145,"t":{},"b":{"48":{}}}],["central",{"_index":7762,"t":{},"b":{"15":{}}}],["cercle(5*m",{"_index":14483,"t":{},"b":{"67":{}}}],["cercle(t",{"_index":14473,"t":{},"b":{"67":{}}}],["cerr",{"_index":2837,"t":{},"b":{"4":{}}}],["certain",{"_index":1256,"t":{},"b":{"3":{},"56":{},"76":{}}}],["cet",{"_index":10499,"t":{},"b":{"39":{}}}],["cf",{"_index":5621,"t":{},"b":{"13":{}}}],["cff",{"_index":8445,"t":{},"b":{"18":{}}}],["cff*v",{"_index":8482,"t":{},"b":{"18":{}}}],["cfl",{"_index":11575,"t":{},"b":{"45":{}}}],["cflag",{"_index":10115,"t":{},"b":{"35":{}}}],["cfloat",{"_index":2766,"t":{},"b":{"4":{}}}],["cg",{"_index":668,"t":{},"b":{"3":{},"7":{},"11":{},"12":{},"13":{},"15":{},"20":{},"24":{},"25":{},"37":{},"38":{},"39":{},"42":{},"43":{},"45":{},"46":{},"48":{},"50":{},"54":{},"55":{},"60":{},"62":{},"68":{},"74":{},"76":{}}}],["cgm",{"_index":13515,"t":{},"b":{"54":{}}}],["cgnl.hpp",{"_index":2692,"t":{},"b":{"4":{}}}],["cgridparam',[150",{"_index":14693,"t":{},"b":{"71":{}}}],["ch",{"_index":4436,"t":{},"b":{"11":{}}}],["ch(th",{"_index":4435,"t":{},"b":{"11":{}}}],["chabart",{"_index":11561,"t":{},"b":{"45":{}}}],["chacón",{"_index":9901,"t":{},"b":{"34":{}}}],["chain",{"_index":227,"t":{},"b":{"2":{},"41":{},"52":{}}}],["chairman",{"_index":9777,"t":{},"b":{"29":{}}}],["challeng",{"_index":4083,"t":{},"b":{"11":{},"33":{}}}],["chang",{"_index":523,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"17":{},"18":{},"19":{},"21":{},"24":{},"25":{},"35":{},"36":{},"40":{},"42":{},"46":{},"48":{},"49":{},"50":{},"53":{},"54":{},"65":{},"66":{},"69":{},"70":{},"73":{},"76":{},"81":{}}}],["change(sh,flabel",{"_index":14431,"t":{},"b":{"66":{}}}],["change(th",{"_index":4093,"t":{},"b":{"11":{},"22":{},"54":{}}}],["change(th1",{"_index":5651,"t":{},"b":{"13":{},"24":{}}}],["change(th2",{"_index":9298,"t":{},"b":{"24":{}}}],["change(th2,ref",{"_index":5657,"t":{},"b":{"13":{}}}],["change(thm",{"_index":10754,"t":{},"b":{"40":{}}}],["change(thm,label",{"_index":6201,"t":{},"b":{"13":{}}}],["changeabl",{"_index":5878,"t":{},"b":{"13":{}}}],["chanh",{"_index":14440,"t":{},"b":{"66":{}}}],["channel",{"_index":5806,"t":{},"b":{"13":{},"40":{},"74":{}}}],["chao",{"_index":240,"t":{},"b":{"2":{}}}],["chapter",{"_index":706,"t":{},"b":{"3":{},"8":{},"13":{},"15":{},"39":{},"44":{},"54":{},"72":{}}}],["char",{"_index":8390,"t":{},"b":{"18":{}}}],["charact",{"_index":1908,"t":{},"b":{"3":{},"13":{},"56":{}}}],["characterist",{"_index":1966,"t":{},"b":{"3":{},"11":{},"12":{},"13":{},"15":{},"41":{},"49":{},"54":{},"61":{},"65":{},"67":{},"74":{},"77":{}}}],["charg",{"_index":11872,"t":{},"b":{"48":{}}}],["chdir",{"_index":13432,"t":{},"b":{"53":{}}}],["cheaper",{"_index":3248,"t":{},"b":{"5":{},"8":{},"15":{}}}],["check",{"_index":1119,"t":{},"b":{"3":{},"4":{},"8":{},"10":{},"11":{},"13":{},"35":{},"48":{},"54":{},"60":{},"61":{},"69":{},"72":{},"76":{}}}],["checkbemesh",{"_index":13398,"t":{},"b":{"53":{}}}],["checkdist",{"_index":12632,"t":{},"b":{"53":{}}}],["checkindex",{"_index":1120,"t":{},"b":{"3":{},"20":{}}}],["checkmesh",{"_index":6638,"t":{},"b":{"13":{},"36":{}}}],["checkmesh(th",{"_index":6659,"t":{},"b":{"13":{}}}],["checkmovemesh",{"_index":5441,"t":{},"b":{"13":{},"54":{}}}],["checkmovemesh(th",{"_index":5463,"t":{},"b":{"13":{},"43":{},"54":{}}}],["checkptr.cpp",{"_index":2693,"t":{},"b":{"4":{}}}],["chi",{"_index":13508,"t":{},"b":{"54":{}}}],["chi(th",{"_index":5362,"t":{},"b":{"13":{}}}],["chi(th)(p",{"_index":5363,"t":{},"b":{"13":{}}}],["chi(th)(x",{"_index":13510,"t":{},"b":{"54":{}}}],["chi_i",{"_index":12316,"t":{},"b":{"49":{}}}],["chi_i(x",{"_index":12317,"t":{},"b":{"49":{}}}],["chichest",{"_index":322,"t":{},"b":{"2":{}}}],["chik",{"_index":4870,"t":{},"b":{"11":{},"48":{}}}],["chik*lenedge*square(jump(n.x*dx(u",{"_index":4901,"t":{},"b":{"11":{},"48":{}}}],["chik*square(htriangle*(f",{"_index":4903,"t":{},"b":{"11":{},"48":{}}}],["chines",{"_index":9903,"t":{},"b":{"34":{}}}],["chip",{"_index":3468,"t":{},"b":{"7":{}}}],["chmod",{"_index":13436,"t":{},"b":{"53":{}}}],["choic",{"_index":3171,"t":{},"b":{"5":{},"8":{},"13":{},"15":{},"40":{}}}],["choleski",{"_index":670,"t":{},"b":{"3":{},"8":{},"11":{},"12":{},"15":{},"20":{},"21":{},"38":{},"55":{},"60":{}}}],["choleskypivot",{"_index":9252,"t":{},"b":{"21":{}}}],["choos",{"_index":1325,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"19":{},"35":{},"37":{},"38":{},"45":{},"46":{},"48":{},"50":{},"73":{}}}],["chordal",{"_index":7105,"t":{},"b":{"13":{}}}],["chorin",{"_index":14896,"t":{},"b":{"74":{}}}],["chorin’",{"_index":14906,"t":{},"b":{"74":{}}}],["chosen",{"_index":1958,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"39":{},"45":{}}}],["chow",{"_index":465,"t":{},"b":{"2":{}}}],["chow1997",{"_index":464,"t":{},"b":{"2":{},"15":{}}}],["christin",{"_index":431,"t":{},"b":{"2":{}}}],["chuan",{"_index":169,"t":{},"b":{"2":{}}}],["ci/cd",{"_index":10120,"t":{},"b":{"35":{}}}],["ciarlet",{"_index":204,"t":{},"b":{"2":{}}}],["cin",{"_index":9113,"t":{},"b":{"21":{},"52":{}}}],["cint",{"_index":8487,"t":{},"b":{"18":{}}}],["circ",{"_index":14016,"t":{},"b":{"61":{},"67":{}}}],["circl",{"_index":5209,"t":{},"b":{"13":{},"24":{},"37":{},"48":{},"66":{},"69":{},"72":{},"75":{},"76":{},"81":{}}}],["circul",{"_index":3373,"t":{},"b":{"5":{}}}],["circular",{"_index":5207,"t":{},"b":{"13":{},"60":{},"79":{}}}],["citat",{"_index":9797,"t":{},"b":{"29":{},"30":{},"33":{}}}],["citationlogo",{"_index":9798,"t":{"30":{}},"b":{}}],["cite",{"_index":9800,"t":{},"b":{"30":{}}}],["ck",{"_index":14627,"t":{},"b":{"71":{}}}],["cl",{"_index":1465,"t":{},"b":{"3":{}}}],["clamp",{"_index":14299,"t":{},"b":{"64":{}}}],["clang",{"_index":10012,"t":{},"b":{"35":{}}}],["class",{"_index":2522,"t":{},"b":{"4":{},"5":{},"10":{},"15":{},"60":{}}}],["classic",{"_index":1015,"t":{},"b":{"3":{},"4":{},"5":{},"13":{},"36":{},"38":{},"41":{},"43":{},"45":{},"48":{},"50":{},"65":{},"66":{}}}],["classif",{"_index":14301,"t":{"65":{}},"b":{"65":{},"72":{},"76":{}}}],["clb",{"_index":1150,"t":{},"b":{"3":{},"20":{}}}],["clb(m",{"_index":1158,"t":{},"b":{"3":{}}}],["clean",{"_index":4509,"t":{},"b":{"11":{},"18":{},"19":{},"22":{},"27":{}}}],["cleanmesh",{"_index":6586,"t":{},"b":{"13":{}}}],["clearli",{"_index":12351,"t":{},"b":{"50":{},"65":{}}}],["click",{"_index":9919,"t":{},"b":{"35":{}}}],["clock",{"_index":801,"t":{},"b":{"3":{},"4":{},"7":{},"13":{},"14":{},"15":{},"21":{},"25":{},"38":{},"51":{},"54":{},"61":{},"76":{}}}],["clockwis",{"_index":6787,"t":{},"b":{"13":{},"41":{},"48":{},"69":{}}}],["clone",{"_index":9975,"t":{},"b":{"35":{}}}],["close",{"_index":1524,"t":{},"b":{"3":{},"4":{},"8":{},"13":{},"18":{},"19":{},"21":{},"35":{},"39":{},"40":{},"45":{},"48":{},"52":{},"53":{},"62":{},"72":{},"76":{}}}],["close(1",{"_index":2330,"t":{},"b":{"4":{}}}],["closepoint",{"_index":12616,"t":{},"b":{"53":{}}}],["closepoints1",{"_index":12620,"t":{},"b":{"53":{}}}],["closepoints2",{"_index":12619,"t":{},"b":{"53":{}}}],["closer",{"_index":1646,"t":{},"b":{"3":{},"13":{}}}],["closest",{"_index":2167,"t":{},"b":{"3":{},"72":{}}}],["closur",{"_index":6523,"t":{},"b":{"13":{}}}],["clough",{"_index":422,"t":{},"b":{"2":{}}}],["cluster",{"_index":7981,"t":{},"b":{"15":{}}}],["cm",{"_index":7698,"t":{},"b":{"15":{},"26":{}}}],["cma",{"_index":756,"t":{},"b":{"3":{}}}],["cmae",{"_index":730,"t":{},"b":{"3":{},"20":{},"29":{},"53":{}}}],["cmaes(j",{"_index":771,"t":{},"b":{"3":{},"20":{}}}],["cmaesmpi(j",{"_index":2166,"t":{},"b":{"3":{},"20":{}}}],["cmaesmpivariationalinequality.edp",{"_index":8763,"t":{},"b":{"20":{}}}],["cmake",{"_index":10022,"t":{},"b":{"35":{}}}],["cmath",{"_index":13585,"t":{},"b":{"54":{}}}],["cmd",{"_index":9946,"t":{},"b":{"35":{}}}],["cmm",{"_index":685,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"39":{},"40":{},"41":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"61":{},"73":{},"77":{},"80":{}}}],["cnr",{"_index":9769,"t":{},"b":{"29":{}}}],["cntl",{"_index":7753,"t":{},"b":{"15":{},"26":{}}}],["cntl(1",{"_index":7837,"t":{},"b":{"15":{}}}],["cntl(10",{"_index":7847,"t":{},"b":{"15":{}}}],["cntl(11",{"_index":7848,"t":{},"b":{"15":{}}}],["cntl(12",{"_index":7849,"t":{},"b":{"15":{}}}],["cntl(13",{"_index":7850,"t":{},"b":{"15":{}}}],["cntl(14",{"_index":7851,"t":{},"b":{"15":{}}}],["cntl(15",{"_index":7852,"t":{},"b":{"15":{}}}],["cntl(2",{"_index":7838,"t":{},"b":{"15":{}}}],["cntl(3",{"_index":7839,"t":{},"b":{"15":{}}}],["cntl(4",{"_index":7840,"t":{},"b":{"15":{}}}],["cntl(5",{"_index":7841,"t":{},"b":{"15":{}}}],["cntl(6",{"_index":7843,"t":{},"b":{"15":{}}}],["cntl(7",{"_index":7844,"t":{},"b":{"15":{}}}],["cntl(8",{"_index":7845,"t":{},"b":{"15":{}}}],["cntl(9",{"_index":7846,"t":{},"b":{"15":{}}}],["cntl(i",{"_index":7784,"t":{},"b":{"15":{}}}],["cnu",{"_index":14824,"t":{},"b":{"73":{}}}],["cnu^(1./1.5",{"_index":14886,"t":{},"b":{"73":{}}}],["cnu^1.5",{"_index":14880,"t":{},"b":{"73":{}}}],["co",{"_index":8821,"t":{},"b":{"21":{},"48":{},"54":{}}}],["coars",{"_index":3039,"t":{},"b":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"15":{},"16":{},"26":{}}}],["coarsen",{"_index":3633,"t":{},"b":{"8":{},"15":{}}}],["coarser",{"_index":3278,"t":{},"b":{"5":{},"9":{},"10":{},"13":{},"15":{}}}],["coarsesolv",{"_index":7605,"t":{},"b":{"15":{}}}],["coarsesolve(real[int",{"_index":9582,"t":{},"b":{"26":{}}}],["coarsesolve(v",{"_index":7624,"t":{},"b":{"15":{},"26":{}}}],["cobra",{"_index":3745,"t":{},"b":{"10":{}}}],["cod",{"_index":10871,"t":{},"b":{"40":{}}}],["code",{"_index":855,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"16":{},"17":{},"26":{},"32":{},"35":{},"37":{},"48":{},"57":{},"68":{},"70":{},"71":{},"81":{}}}],["code(const",{"_index":2799,"t":{},"b":{"4":{}}}],["codealloc",{"_index":2841,"t":{},"b":{"4":{}}}],["codewarrior",{"_index":2722,"t":{},"b":{"4":{}}}],["coef",{"_index":2544,"t":{},"b":{"4":{},"13":{},"21":{},"25":{},"40":{},"42":{},"43":{},"45":{},"48":{},"54":{},"61":{},"64":{},"73":{}}}],["coef(v_{i}^{2d",{"_index":6003,"t":{},"b":{"13":{}}}],["coef*(etak[].sum/etak[].n",{"_index":12289,"t":{},"b":{"48":{}}}],["coef*(sigma11*n.x*w",{"_index":11297,"t":{},"b":{"42":{}}}],["coef*v",{"_index":11358,"t":{},"b":{"43":{}}}],["coefcut",{"_index":14100,"t":{},"b":{"61":{}}}],["coefdt",{"_index":14098,"t":{},"b":{"61":{}}}],["coeffici",{"_index":1113,"t":{},"b":{"3":{},"4":{},"15":{},"21":{},"37":{},"40":{},"41":{},"48":{},"49":{},"64":{},"65":{}}}],["coeftol",{"_index":14101,"t":{},"b":{"61":{}}}],["coerciv",{"_index":5538,"t":{},"b":{"13":{},"41":{}}}],["coffe",{"_index":14610,"t":{},"b":{"70":{}}}],["coincid",{"_index":3206,"t":{},"b":{"5":{},"11":{}}}],["col",{"_index":7901,"t":{},"b":{"15":{}}}],["cold",{"_index":15165,"t":{},"b":{"77":{}}}],["collabor",{"_index":9823,"t":{},"b":{"31":{}}}],["collaps",{"_index":7125,"t":{},"b":{"13":{}}}],["colleagu",{"_index":14738,"t":{},"b":{"72":{}}}],["collect",{"_index":3502,"t":{},"b":{"8":{},"10":{}}}],["colomn",{"_index":4582,"t":{},"b":{"11":{}}}],["color",{"_index":5093,"t":{},"b":{"12":{},"15":{},"19":{},"27":{},"35":{},"54":{},"64":{},"72":{}}}],["colorhsv",{"_index":8574,"t":{},"b":{"19":{},"27":{}}}],["color{blue}{\\tau",{"_index":3735,"t":{},"b":{"10":{}}}],["color{red}{z",{"_index":3732,"t":{},"b":{"10":{}}}],["color{red}{z}^t",{"_index":3733,"t":{},"b":{"10":{}}}],["color{red}{z}^{t",{"_index":3739,"t":{},"b":{"10":{}}}],["colperm",{"_index":7869,"t":{},"b":{"15":{}}}],["column",{"_index":3624,"t":{},"b":{"8":{},"11":{},"13":{},"14":{},"15":{},"21":{},"39":{}}}],["combin",{"_index":1116,"t":{},"b":{"3":{},"13":{},"17":{},"19":{}}}],["come",{"_index":2573,"t":{},"b":{"4":{},"5":{},"11":{},"15":{},"35":{},"42":{},"45":{},"61":{},"62":{},"63":{},"64":{}}}],["comm",{"_index":2170,"t":{},"b":{"3":{},"5":{},"10":{},"15":{},"26":{}}}],["comm(mpicommworld",{"_index":7406,"t":{},"b":{"15":{}}}],["comm(mpicommworld,0,0",{"_index":9415,"t":{},"b":{"26":{}}}],["comm,rq[j",{"_index":7559,"t":{},"b":{"15":{}}}],["comma",{"_index":5203,"t":{},"b":{"13":{}}}],["command",{"_index":2665,"t":{},"b":{"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"27":{},"35":{},"36":{},"54":{},"55":{},"60":{},"66":{},"71":{},"76":{}}}],["comment",{"_index":3440,"t":{},"b":{"6":{},"16":{},"21":{},"35":{},"46":{},"54":{},"70":{},"80":{}}}],["comment(0:0",{"_index":9126,"t":{},"b":{"21":{}}}],["commerci",{"_index":6664,"t":{},"b":{"13":{}}}],["common",{"_index":3801,"t":{},"b":{"11":{},"15":{},"38":{},"42":{},"48":{},"54":{}}}],["commun",{"_index":2168,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"13":{},"15":{},"16":{},"18":{}}}],["communicator(handl",{"_index":8184,"t":{},"b":{"15":{}}}],["communicators(involv",{"_index":8181,"t":{},"b":{"15":{}}}],["commut",{"_index":11562,"t":{},"b":{"45":{},"79":{}}}],["compact",{"_index":12401,"t":{},"b":{"51":{}}}],["compar",{"_index":3655,"t":{},"b":{"8":{},"11":{},"12":{},"13":{},"41":{},"77":{}}}],["comparison",{"_index":1302,"t":{},"b":{"3":{},"6":{},"58":{},"60":{}}}],["compat",{"_index":1195,"t":{},"b":{"3":{},"11":{},"15":{},"48":{},"65":{},"78":{}}}],["compil",{"_index":865,"t":{},"b":{"3":{},"4":{},"12":{},"21":{},"31":{},"33":{},"35":{},"36":{},"39":{},"56":{},"64":{},"70":{},"72":{},"80":{}}}],["complement",{"_index":6526,"t":{},"b":{"13":{},"15":{},"16":{},"38":{},"44":{}}}],["complementari",{"_index":12387,"t":{},"b":{"50":{},"54":{}}}],["complet",{"_index":424,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"19":{},"35":{},"45":{},"55":{},"59":{},"60":{}}}],["complex",{"_index":3069,"t":{"63":{}},"b":{"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"21":{},"26":{},"39":{},"54":{},"58":{},"60":{},"61":{},"63":{},"66":{},"74":{},"75":{},"81":{}}}],["complex(n",{"_index":8802,"t":{},"b":{"21":{}}}],["complex.edp",{"_index":8238,"t":{},"b":{"16":{}}}],["complex<doubl",{"_index":7271,"t":{},"b":{"14":{},"60":{}}}],["complex[int",{"_index":7450,"t":{},"b":{"15":{},"21":{}}}],["complex[int,int",{"_index":7452,"t":{},"b":{"15":{}}}],["complex_pastix_freefem",{"_index":7717,"t":{},"b":{"15":{}}}],["complex_superlu_dist_freefem",{"_index":7714,"t":{},"b":{"15":{}}}],["complexdefaulttopastix",{"_index":7728,"t":{},"b":{"15":{}}}],["complexdefaulttosuperludist",{"_index":7726,"t":{},"b":{"15":{}}}],["complexeigenvalu",{"_index":10516,"t":{},"b":{"39":{},"54":{}}}],["complic",{"_index":1721,"t":{},"b":{"3":{},"20":{}}}],["compon",{"_index":1258,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"19":{},"27":{},"37":{},"40":{},"41":{},"45":{},"49":{},"51":{},"54":{},"55":{},"64":{},"66":{},"68":{},"80":{}}}],["componentwis",{"_index":938,"t":{},"b":{"3":{}}}],["comport",{"_index":1610,"t":{},"b":{"3":{}}}],["compos",{"_index":2311,"t":{},"b":{"4":{},"13":{}}}],["composant",{"_index":4968,"t":{},"b":{"11":{}}}],["composit",{"_index":6495,"t":{},"b":{"13":{},"60":{}}}],["compound",{"_index":13795,"t":{},"b":{"58":{}}}],["compress",{"_index":223,"t":{"37":{}},"b":{"2":{},"37":{},"46":{},"51":{},"67":{}}}],["compromis",{"_index":3484,"t":{},"b":{"7":{}}}],["comput",{"_index":11,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"19":{},"20":{},"26":{},"27":{},"29":{},"33":{},"35":{},"38":{},"39":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"60":{},"67":{},"69":{},"72":{},"74":{},"76":{},"77":{}}}],["computation",{"_index":4429,"t":{},"b":{"11":{}}}],["concaten",{"_index":2569,"t":{},"b":{"4":{},"5":{},"21":{},"60":{}}}],["concentr",{"_index":10205,"t":{},"b":{"37":{},"40":{}}}],["concept",{"_index":7383,"t":{},"b":{"15":{},"65":{}}}],["concern",{"_index":1586,"t":{},"b":{"3":{},"15":{},"31":{}}}],["conclus",{"_index":8163,"t":{},"b":{"15":{}}}],["concret",{"_index":6528,"t":{},"b":{"13":{}}}],["concurr",{"_index":3548,"t":{},"b":{"8":{}}}],["condens",{"_index":14584,"t":{},"b":{"69":{}}}],["condensor.msh",{"_index":14582,"t":{},"b":{"69":{}}}],["condit",{"_index":604,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"21":{},"24":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"48":{},"50":{},"51":{},"54":{},"57":{},"60":{},"61":{},"62":{},"64":{},"65":{},"69":{},"71":{},"72":{},"73":{},"74":{},"76":{},"78":{},"79":{},"80":{},"81":{}}}],["condition1",{"_index":13789,"t":{},"b":{"57":{}}}],["conditon",{"_index":10520,"t":{},"b":{"39":{}}}],["conduct",{"_index":4774,"t":{},"b":{"11":{},"62":{},"66":{},"69":{},"79":{}}}],["conductionlogo",{"_index":15248,"t":{"79":{}},"b":{}}],["conductor",{"_index":11908,"t":{},"b":{"48":{},"69":{}}}],["cone",{"_index":6046,"t":{},"b":{"13":{}}}],["cone.edp",{"_index":6084,"t":{},"b":{"13":{}}}],["config",{"_index":10042,"t":{},"b":{"35":{}}}],["configur",{"_index":10011,"t":{},"b":{"35":{},"37":{}}}],["conform",{"_index":3882,"t":{},"b":{"11":{},"13":{},"72":{}}}],["conformali",{"_index":5665,"t":{},"b":{"13":{}}}],["conic",{"_index":6594,"t":{},"b":{"13":{}}}],["conj",{"_index":7899,"t":{},"b":{"15":{},"54":{}}}],["conj(c1",{"_index":13514,"t":{},"b":{"54":{}}}],["conjug",{"_index":477,"t":{},"b":{"3":{},"8":{},"13":{},"21":{},"38":{},"39":{},"42":{},"45":{},"54":{},"55":{},"75":{},"76":{}}}],["conjugu",{"_index":10462,"t":{},"b":{"38":{},"54":{}}}],["conjuguedgradrientnl.cpp",{"_index":2694,"t":{},"b":{"4":{}}}],["connect",{"_index":5070,"t":{},"b":{"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"24":{},"49":{},"66":{},"71":{}}}],["connex",{"_index":7193,"t":{},"b":{"13":{}}}],["consecut",{"_index":10523,"t":{},"b":{"39":{}}}],["consequ",{"_index":8168,"t":{},"b":{"15":{},"37":{},"70":{},"72":{},"75":{}}}],["conserv",{"_index":15172,"t":{},"b":{"77":{}}}],["consid",{"_index":687,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"26":{},"37":{},"40":{},"41":{},"45":{},"48":{},"49":{},"60":{},"63":{},"64":{},"66":{},"69":{},"71":{},"72":{},"75":{},"77":{},"80":{}}}],["consist",{"_index":1354,"t":{},"b":{"3":{},"8":{},"13":{},"14":{},"15":{},"37":{},"41":{},"45":{},"71":{},"77":{}}}],["consistentfil",{"_index":8086,"t":{},"b":{"15":{}}}],["consol",{"_index":12576,"t":{},"b":{"52":{},"70":{},"76":{}}}],["const",{"_index":2546,"t":{},"b":{"4":{},"15":{},"18":{}}}],["constant",{"_index":1107,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"16":{},"40":{},"41":{},"42":{},"45":{},"48":{},"49":{},"50":{},"52":{},"55":{},"64":{},"65":{},"66":{},"68":{},"69":{},"77":{},"78":{},"79":{}}}],["constantli",{"_index":1836,"t":{},"b":{"3":{}}}],["constitu",{"_index":8562,"t":{},"b":{"19":{},"27":{}}}],["constitut",{"_index":222,"t":{},"b":{"2":{},"37":{}}}],["constrain",{"_index":862,"t":{},"b":{"3":{},"13":{},"15":{}}}],["constraint",{"_index":901,"t":{},"b":{"3":{},"13":{},"16":{},"20":{},"42":{}}}],["constraints(in[].sum",{"_index":8715,"t":{},"b":{"20":{}}}],["constraints(vh.ndof",{"_index":2027,"t":{},"b":{"3":{}}}],["constraints.l2",{"_index":8718,"t":{},"b":{"20":{}}}],["constraints[i",{"_index":2029,"t":{},"b":{"3":{},"20":{}}}],["constribbut",{"_index":8731,"t":{},"b":{"20":{}}}],["construct",{"_index":97,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"16":{},"24":{},"26":{},"36":{},"38":{},"41":{},"43":{},"45":{},"50":{},"53":{},"55":{},"60":{},"61":{},"76":{},"80":{}}}],["constructor",{"_index":2802,"t":{},"b":{"4":{},"13":{},"15":{}}}],["consult",{"_index":892,"t":{},"b":{"3":{}}}],["conta",{"_index":5323,"t":{},"b":{"13":{}}}],["contact",{"_index":10692,"t":{},"b":{"40":{}}}],["contain",{"_index":919,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"18":{},"33":{},"35":{},"39":{},"41":{},"49":{},"54":{},"55":{},"60":{},"76":{},"80":{},"81":{}}}],["containt",{"_index":12380,"t":{},"b":{"50":{}}}],["conten",{"_index":2680,"t":{},"b":{"4":{}}}],["content",{"_index":6806,"t":{},"b":{"13":{},"31":{},"54":{}}}],["context",{"_index":1922,"t":{},"b":{"3":{},"37":{}}}],["continu",{"_index":940,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"21":{},"35":{},"41":{},"48":{},"54":{},"57":{},"70":{},"73":{},"76":{}}}],["contour",{"_index":7222,"t":{},"b":{"13":{},"71":{}}}],["contparam",{"_index":10399,"t":{},"b":{"37":{}}}],["contrari",{"_index":10234,"t":{},"b":{"37":{}}}],["contrast",{"_index":8167,"t":{},"b":{"15":{},"60":{}}}],["contribut",{"_index":1179,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"29":{},"31":{},"44":{},"45":{},"70":{},"76":{}}}],["contributinglogo",{"_index":9821,"t":{"31":{}},"b":{}}],["contributor",{"_index":9796,"t":{},"b":{"29":{},"31":{}}}],["control",{"_index":762,"t":{},"b":{"3":{},"8":{},"13":{},"15":{},"24":{},"35":{},"39":{},"60":{},"63":{},"67":{},"69":{},"71":{},"72":{},"75":{}}}],["controllogo",{"_index":14981,"t":{"75":{}},"b":{}}],["conv",{"_index":678,"t":{},"b":{"3":{},"20":{},"54":{},"73":{}}}],["convect",{"_index":5604,"t":{"77":{}},"b":{"13":{},"16":{},"41":{},"45":{},"54":{},"64":{},"65":{},"66":{},"77":{},"79":{}}}],["convect([a1",{"_index":11164,"t":{},"b":{"41":{}}}],["convect([u1",{"_index":15167,"t":{},"b":{"77":{}}}],["convect([u1,u2",{"_index":15157,"t":{},"b":{"77":{}}}],["convect([uold",{"_index":14951,"t":{},"b":{"74":{}}}],["convect([uold,vold",{"_index":14959,"t":{},"b":{"74":{}}}],["convect([upx",{"_index":9385,"t":{},"b":{"25":{}}}],["convect([ux",{"_index":13516,"t":{},"b":{"54":{}}}],["convect.edp",{"_index":8299,"t":{},"b":{"16":{}}}],["convect\\((\\mathbf{\\alpha",{"_index":11154,"t":{},"b":{"41":{}}}],["convect\\(\\left",{"_index":11141,"t":{},"b":{"41":{}}}],["convectcg.ep",{"_index":15196,"t":{},"b":{"77":{}}}],["convectdg.ep",{"_index":15197,"t":{},"b":{"77":{}}}],["convection–diffus",{"_index":8248,"t":{},"b":{"16":{}}}],["conveni",{"_index":917,"t":{},"b":{"3":{}}}],["convent",{"_index":11072,"t":{},"b":{"41":{},"52":{},"65":{},"77":{},"79":{}}}],["converg",{"_index":847,"t":{},"b":{"3":{},"5":{},"8":{},"15":{},"38":{},"39":{},"45":{},"51":{},"54":{},"61":{},"72":{},"73":{},"75":{}}}],["convers",{"_index":12598,"t":{},"b":{"52":{}}}],["convert",{"_index":8300,"t":{},"b":{"16":{},"51":{},"52":{},"54":{},"76":{}}}],["convex",{"_index":505,"t":{},"b":{"3":{},"11":{},"13":{},"48":{},"50":{}}}],["cook",{"_index":14177,"t":{},"b":{"63":{}}}],["cool",{"_index":13978,"t":{},"b":{"61":{},"66":{},"79":{}}}],["coool",{"_index":711,"t":{},"b":{"3":{}}}],["coordin",{"_index":488,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"21":{},"40":{},"48":{},"51":{},"54":{},"55":{},"60":{},"71":{},"76":{},"78":{},"79":{}}}],["copi",{"_index":1177,"t":{},"b":{"3":{},"7":{},"10":{},"11":{},"18":{},"35":{},"50":{},"60":{},"79":{},"80":{}}}],["coplanar",{"_index":6718,"t":{},"b":{"13":{}}}],["copper",{"_index":12341,"t":{},"b":{"49":{}}}],["copyright",{"_index":5101,"t":{},"b":{"12":{}}}],["copysign",{"_index":13522,"t":{},"b":{"54":{}}}],["copysign(a",{"_index":13523,"t":{},"b":{"54":{}}}],["cordin",{"_index":4298,"t":{},"b":{"11":{}}}],["core",{"_index":3462,"t":{},"b":{"7":{},"10":{},"15":{}}}],["core/out",{"_index":7811,"t":{},"b":{"15":{}}}],["coreutil",{"_index":10093,"t":{},"b":{"35":{}}}],["corneliu",{"_index":218,"t":{},"b":{"2":{}}}],["corner",{"_index":5150,"t":{},"b":{"13":{},"19":{},"27":{},"54":{},"76":{}}}],["correct",{"_index":2676,"t":{},"b":{"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"18":{},"37":{},"48":{},"54":{},"66":{},"73":{},"74":{}}}],["correctli",{"_index":5540,"t":{},"b":{"13":{},"22":{},"74":{}}}],["correspond",{"_index":1260,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"35":{},"37":{},"39":{},"45":{},"64":{},"65":{},"66":{},"69":{},"76":{},"80":{}}}],["cos(2*pi",{"_index":5832,"t":{},"b":{"13":{}}}],["cos(2*x*2*pi)*cos(3*y*2*pi",{"_index":8767,"t":{},"b":{"21":{}}}],["cos(2.*pi*t",{"_index":13863,"t":{},"b":{"60":{}}}],["cos(3*2*pi*x)*cos(2*2*pi*i",{"_index":8787,"t":{},"b":{"21":{}}}],["cos(3\\theta_k/2",{"_index":10799,"t":{},"b":{"40":{}}}],["cos(dag",{"_index":5828,"t":{},"b":{"13":{}}}],["cos(i",{"_index":4344,"t":{},"b":{"11":{}}}],["cos(i*pi/10",{"_index":13779,"t":{},"b":{"56":{}}}],["cos(pi*i",{"_index":14607,"t":{},"b":{"70":{}}}],["cos(t",{"_index":5212,"t":{},"b":{"13":{},"15":{},"24":{},"25":{},"38":{},"41":{},"48":{},"70":{},"75":{},"76":{},"77":{}}}],["cos(t)*r",{"_index":14829,"t":{},"b":{"73":{}}}],["cos(t)/2",{"_index":14825,"t":{},"b":{"73":{}}}],["cos(theta",{"_index":13524,"t":{},"b":{"54":{},"66":{}}}],["cos(tt",{"_index":13867,"t":{},"b":{"60":{}}}],["cos(u)cos(v",{"_index":6397,"t":{},"b":{"13":{}}}],["cos(u)sin(v",{"_index":6400,"t":{},"b":{"13":{}}}],["cos(x",{"_index":6123,"t":{},"b":{"13":{},"24":{},"25":{}}}],["cos(x)*cos(i",{"_index":6297,"t":{},"b":{"13":{},"24":{},"25":{}}}],["cos(x)*sin(i",{"_index":6298,"t":{},"b":{"13":{},"24":{},"25":{}}}],["cos(x*pi)/10",{"_index":5461,"t":{},"b":{"13":{}}}],["cos(x^2+y),sin(x^2+i",{"_index":3361,"t":{},"b":{"5":{}}}],["cos(y)*sin(x",{"_index":6119,"t":{},"b":{"13":{},"24":{}}}],["cosh",{"_index":13525,"t":{},"b":{"54":{}}}],["cosh(theta",{"_index":13526,"t":{},"b":{"54":{}}}],["cosh(x",{"_index":13527,"t":{},"b":{"54":{}}}],["cost",{"_index":845,"t":{},"b":{"3":{},"8":{},"15":{}}}],["count",{"_index":4884,"t":{},"b":{"11":{},"48":{},"76":{}}}],["count(th.nv",{"_index":4878,"t":{},"b":{"11":{},"48":{}}}],["count.max",{"_index":12280,"t":{},"b":{"48":{}}}],["count.min",{"_index":12279,"t":{},"b":{"48":{}}}],["counter",{"_index":6159,"t":{},"b":{"13":{}}}],["counterclockwis",{"_index":2315,"t":{},"b":{"4":{},"48":{},"69":{}}}],["counterpart",{"_index":3376,"t":{},"b":{"5":{},"8":{}}}],["coupl",{"_index":394,"t":{"42":{}},"b":{"2":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"29":{},"33":{},"38":{},"42":{},"49":{},"54":{},"64":{},"67":{}}}],["cours",{"_index":520,"t":{},"b":{"3":{},"48":{}}}],["cout",{"_index":622,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"52":{},"54":{},"55":{},"58":{},"60":{},"61":{},"62":{},"64":{},"67":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"79":{},"81":{}}}],["cout.scientific.showpo",{"_index":12586,"t":{},"b":{"52":{}}}],["covari",{"_index":782,"t":{},"b":{"3":{}}}],["cover",{"_index":15355,"t":{},"b":{"81":{}}}],["coverag",{"_index":15359,"t":{},"b":{"81":{}}}],["cp",{"_index":12017,"t":{},"b":{"48":{}}}],["cp(cc",{"_index":8204,"t":{},"b":{"15":{}}}],["cp(ccc",{"_index":8191,"t":{},"b":{"15":{}}}],["cpfile",{"_index":13437,"t":{},"b":{"53":{}}}],["cpp",{"_index":10039,"t":{},"b":{"35":{}}}],["cpu",{"_index":7951,"t":{},"b":{"15":{},"21":{},"25":{},"38":{},"54":{},"76":{}}}],["cpu+clock",{"_index":9250,"t":{},"b":{"21":{}}}],["cr",{"_index":12359,"t":{},"b":{"50":{}}}],["crack",{"_index":2225,"t":{},"b":{"4":{},"40":{}}}],["crackededg",{"_index":2224,"t":{},"b":{"4":{}}}],["crank",{"_index":10991,"t":{},"b":{"41":{}}}],["crash",{"_index":1696,"t":{},"b":{"3":{}}}],["crea",{"_index":8392,"t":{},"b":{"18":{}}}],["creat",{"_index":1684,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"40":{},"42":{},"54":{},"58":{},"60":{},"68":{},"71":{},"81":{}}}],["createpartition.edp",{"_index":8287,"t":{},"b":{"16":{}}}],["creation",{"_index":8288,"t":{},"b":{"16":{}}}],["criteria",{"_index":826,"t":{},"b":{"3":{},"13":{},"15":{},"54":{}}}],["criterion",{"_index":579,"t":{},"b":{"3":{},"5":{},"54":{},"60":{}}}],["critic",{"_index":1230,"t":{},"b":{"3":{}}}],["cross",{"_index":1542,"t":{},"b":{"3":{},"51":{},"71":{},"76":{},"79":{}}}],["crout",{"_index":4511,"t":{},"b":{"11":{},"12":{},"39":{},"45":{},"55":{},"60":{},"62":{}}}],["crouzeix",{"_index":443,"t":{},"b":{"2":{},"11":{}}}],["crouzeix1984",{"_index":442,"t":{},"b":{"2":{},"11":{}}}],["crystal",{"_index":12414,"t":{},"b":{"51":{}}}],["cs",{"_index":3439,"t":{},"b":{"6":{}}}],["ctrl",{"_index":2848,"t":{},"b":{"4":{}}}],["ctrl+button",{"_index":8527,"t":{},"b":{"19":{}}}],["ctrl+shift+lett",{"_index":10066,"t":{},"b":{"35":{}}}],["ctrl+shift+v",{"_index":10067,"t":{},"b":{"35":{}}}],["cub",{"_index":1151,"t":{},"b":{"3":{},"20":{}}}],["cub(m",{"_index":1159,"t":{},"b":{"3":{}}}],["cube",{"_index":5914,"t":{},"b":{"13":{},"24":{},"25":{},"26":{},"48":{},"53":{}}}],["cube(10",{"_index":2990,"t":{},"b":{"5":{},"13":{}}}],["cube(10,15,5",{"_index":6553,"t":{},"b":{"13":{}}}],["cube(20",{"_index":6137,"t":{},"b":{"13":{}}}],["cube(3",{"_index":5916,"t":{},"b":{"13":{}}}],["cube(4",{"_index":5923,"t":{},"b":{"13":{},"24":{}}}],["cube(n,n,n",{"_index":6544,"t":{},"b":{"13":{}}}],["cube(nn",{"_index":6043,"t":{},"b":{"13":{}}}],["cube(nn,nn,nn",{"_index":6141,"t":{},"b":{"13":{}}}],["cube(nnx",{"_index":13400,"t":{},"b":{"53":{}}}],["cube(nxyz",{"_index":7130,"t":{},"b":{"13":{},"40":{}}}],["cube(nxyz,bxyz,lxyz",{"_index":6175,"t":{},"b":{"13":{}}}],["cube.edp",{"_index":6045,"t":{},"b":{"13":{}}}],["cube.idp",{"_index":6014,"t":{},"b":{"13":{},"40":{}}}],["cubic",{"_index":4061,"t":{},"b":{"11":{},"13":{},"24":{},"53":{}}}],["cuh",{"_index":13946,"t":{},"b":{"60":{}}}],["cuh[2",{"_index":13948,"t":{},"b":{"60":{}}}],["cum",{"_index":13988,"t":{},"b":{"61":{}}}],["cumul",{"_index":13916,"t":{},"b":{"60":{}}}],["cup",{"_index":2926,"t":{},"b":{"4":{},"11":{},"43":{},"61":{}}}],["cup\\{(x,i",{"_index":10818,"t":{},"b":{"40":{}}}],["cup_i",{"_index":6530,"t":{},"b":{"13":{}}}],["cup_k",{"_index":4371,"t":{},"b":{"11":{}}}],["cup_{i",{"_index":3505,"t":{},"b":{"8":{},"10":{}}}],["cup_{j",{"_index":5201,"t":{},"b":{"13":{}}}],["cup_{k",{"_index":7320,"t":{},"b":{"14":{},"76":{}}}],["curi",{"_index":145,"t":{},"b":{"2":{}}}],["curl",{"_index":10001,"t":{},"b":{"35":{}}}],["current",{"_index":583,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"21":{},"26":{},"34":{},"35":{},"48":{},"49":{},"52":{},"54":{},"55":{},"56":{},"60":{},"70":{},"76":{},"81":{}}}],["currenti",{"_index":13769,"t":{},"b":{"55":{}}}],["currentx",{"_index":13768,"t":{},"b":{"55":{}}}],["currentz",{"_index":13770,"t":{},"b":{"55":{}}}],["cursor",{"_index":8517,"t":{},"b":{"19":{}}}],["curv",{"_index":3803,"t":{},"b":{"11":{},"13":{},"16":{},"19":{},"24":{},"34":{},"36":{},"40":{},"48":{},"53":{},"54":{},"55":{},"66":{},"76":{},"77":{}}}],["curvatur",{"_index":1880,"t":{},"b":{"3":{},"53":{}}}],["curve(curv",{"_index":7254,"t":{},"b":{"13":{}}}],["curve(xi",{"_index":7214,"t":{},"b":{"13":{}}}],["curve0(t",{"_index":7213,"t":{},"b":{"13":{}}}],["curve1(t",{"_index":7215,"t":{},"b":{"13":{}}}],["curves(0",{"_index":7249,"t":{},"b":{"13":{}}}],["curves(1",{"_index":7245,"t":{},"b":{"13":{}}}],["curves(2",{"_index":7246,"t":{},"b":{"13":{}}}],["curves(3",{"_index":7229,"t":{},"b":{"13":{}}}],["curvilin",{"_index":12085,"t":{},"b":{"48":{}}}],["custom",{"_index":8298,"t":{},"b":{"16":{}}}],["custum",{"_index":10164,"t":{},"b":{"36":{}}}],["cut",{"_index":5820,"t":{},"b":{"13":{},"19":{},"25":{},"27":{},"48":{},"61":{},"69":{}}}],["cutoff",{"_index":5572,"t":{},"b":{"13":{},"54":{},"61":{}}}],["cvh[2",{"_index":13949,"t":{},"b":{"60":{}}}],["cvh](n",{"_index":13947,"t":{},"b":{"60":{}}}],["cwh(n",{"_index":13944,"t":{},"b":{"60":{}}}],["cw~~~\\foral",{"_index":15181,"t":{},"b":{"77":{}}}],["cx",{"_index":12104,"t":{},"b":{"48":{},"55":{}}}],["cx0",{"_index":11564,"t":{},"b":{"45":{}}}],["cx0+d*sin(t)/2",{"_index":11585,"t":{},"b":{"45":{}}}],["cxx",{"_index":10013,"t":{},"b":{"35":{}}}],["cxxflag",{"_index":10113,"t":{},"b":{"35":{}}}],["cx||/||cd",{"_index":12129,"t":{},"b":{"48":{}}}],["cy",{"_index":12105,"t":{},"b":{"48":{},"55":{}}}],["cy0",{"_index":11565,"t":{},"b":{"45":{}}}],["cy0+d*cos(t)/2",{"_index":11586,"t":{},"b":{"45":{}}}],["cycl",{"_index":8137,"t":{},"b":{"15":{},"70":{}}}],["cygwin",{"_index":2743,"t":{},"b":{"4":{}}}],["cylind",{"_index":8584,"t":{},"b":{"19":{},"40":{},"45":{}}}],["cylindr",{"_index":6278,"t":{},"b":{"13":{},"51":{},"79":{}}}],["cz",{"_index":13762,"t":{},"b":{"55":{}}}],["c|d|h^{r+1",{"_index":4609,"t":{},"b":{"11":{}}}],["d",{"_index":372,"t":{},"b":{"2":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"21":{},"22":{},"25":{},"26":{},"33":{},"37":{},"40":{},"41":{},"45":{},"46":{},"48":{},"49":{},"53":{},"54":{},"59":{},"60":{},"63":{},"65":{},"73":{},"75":{},"81":{}}}],["d(10*n",{"_index":5673,"t":{},"b":{"13":{}}}],["d(20",{"_index":10727,"t":{},"b":{"40":{},"42":{}}}],["d(200",{"_index":14419,"t":{},"b":{"66":{}}}],["d(3*n",{"_index":11319,"t":{},"b":{"43":{}}}],["d(4",{"_index":5455,"t":{},"b":{"13":{},"49":{}}}],["d(5",{"_index":8900,"t":{},"b":{"21":{}}}],["d(5*n",{"_index":7473,"t":{},"b":{"15":{},"38":{}}}],["d(n",{"_index":5019,"t":{},"b":{"11":{},"48":{}}}],["d(t",{"_index":5012,"t":{},"b":{"11":{},"13":{},"15":{},"38":{},"40":{},"42":{},"43":{},"48":{},"49":{},"66":{}}}],["d)*(t",{"_index":14189,"t":{},"b":{"63":{}}}],["d)*c*cos(st(t",{"_index":5857,"t":{},"b":{"13":{}}}],["d)*c*sin(st(t",{"_index":5858,"t":{},"b":{"13":{}}}],["d)+d*t)*c*cos(st(0.5",{"_index":5859,"t":{},"b":{"13":{}}}],["d)+d*t)*c*sin(st(0.5",{"_index":5860,"t":{},"b":{"13":{}}}],["d)\\cdot\\nabla",{"_index":14988,"t":{},"b":{"75":{}}}],["d){x",{"_index":5807,"t":{},"b":{"13":{},"40":{}}}],["d*(1",{"_index":10843,"t":{},"b":{"40":{}}}],["d*(6",{"_index":14191,"t":{},"b":{"63":{}}}],["d*t",{"_index":10845,"t":{},"b":{"40":{}}}],["d*t)*c*cos(st",{"_index":5864,"t":{},"b":{"13":{}}}],["d*t)*c*sin(st",{"_index":5865,"t":{},"b":{"13":{}}}],["d+0.1*x\\le",{"_index":10820,"t":{},"b":{"40":{}}}],["d+1",{"_index":3838,"t":{},"b":{"11":{}}}],["d+t",{"_index":10847,"t":{},"b":{"40":{}}}],["d.f",{"_index":2049,"t":{},"b":{"3":{}}}],["d.n",{"_index":8905,"t":{},"b":{"21":{}}}],["d.o.f",{"_index":3510,"t":{},"b":{"8":{}}}],["d.o.f.’",{"_index":3512,"t":{},"b":{"8":{},"10":{}}}],["d/2*cos(t",{"_index":9268,"t":{},"b":{"22":{}}}],["d/2*sin(t",{"_index":9269,"t":{},"b":{"22":{}}}],["d/nn/um",{"_index":11574,"t":{},"b":{"45":{}}}],["d/r",{"_index":12545,"t":{},"b":{"51":{}}}],["d0",{"_index":10308,"t":{},"b":{"37":{}}}],["d01(t",{"_index":6600,"t":{},"b":{"13":{}}}],["d02",{"_index":6611,"t":{},"b":{"13":{}}}],["d02(t",{"_index":6601,"t":{},"b":{"13":{}}}],["d03",{"_index":6612,"t":{},"b":{"13":{}}}],["d03(t",{"_index":6603,"t":{},"b":{"13":{}}}],["d04",{"_index":6613,"t":{},"b":{"13":{}}}],["d04(t",{"_index":6604,"t":{},"b":{"13":{}}}],["d05",{"_index":6614,"t":{},"b":{"13":{}}}],["d05(t",{"_index":6605,"t":{},"b":{"13":{}}}],["d06",{"_index":6615,"t":{},"b":{"13":{}}}],["d06(t",{"_index":6606,"t":{},"b":{"13":{}}}],["d0^t",{"_index":10318,"t":{},"b":{"37":{}}}],["d0aux11",{"_index":10313,"t":{},"b":{"37":{}}}],["d0aux12",{"_index":10315,"t":{},"b":{"37":{}}}],["d0aux21",{"_index":10316,"t":{},"b":{"37":{}}}],["d0aux22",{"_index":10317,"t":{},"b":{"37":{}}}],["d1",{"_index":10309,"t":{},"b":{"37":{}}}],["d1(10",{"_index":12184,"t":{},"b":{"48":{}}}],["d1(t",{"_index":12178,"t":{},"b":{"48":{}}}],["d11(n",{"_index":6616,"t":{},"b":{"13":{}}}],["d11(t",{"_index":6607,"t":{},"b":{"13":{}}}],["d12(n",{"_index":6617,"t":{},"b":{"13":{}}}],["d12(t",{"_index":6608,"t":{},"b":{"13":{}}}],["d13(n",{"_index":6618,"t":{},"b":{"13":{}}}],["d13(t",{"_index":6609,"t":{},"b":{"13":{}}}],["d1aux11",{"_index":10248,"t":{},"b":{"37":{}}}],["d1aux11(u1",{"_index":10348,"t":{},"b":{"37":{}}}],["d1aux12",{"_index":10249,"t":{},"b":{"37":{}}}],["d1aux12(u1",{"_index":10350,"t":{},"b":{"37":{}}}],["d1aux21",{"_index":10319,"t":{},"b":{"37":{}}}],["d1aux21(u1",{"_index":10352,"t":{},"b":{"37":{}}}],["d1aux22",{"_index":10250,"t":{},"b":{"37":{}}}],["d1aux22(u1",{"_index":10354,"t":{},"b":{"37":{}}}],["d2",{"_index":10310,"t":{},"b":{"37":{},"71":{}}}],["d2(10",{"_index":12185,"t":{},"b":{"48":{}}}],["d2(t",{"_index":12179,"t":{},"b":{"48":{}}}],["d2+h",{"_index":14633,"t":{},"b":{"71":{}}}],["d2+h,d2",{"_index":14635,"t":{},"b":{"71":{}}}],["d2,d2+h",{"_index":14631,"t":{},"b":{"71":{}}}],["d2area",{"_index":1786,"t":{},"b":{"3":{},"20":{}}}],["d2area(vh",{"_index":1804,"t":{},"b":{"3":{},"20":{}}}],["d2aux11",{"_index":10251,"t":{},"b":{"37":{}}}],["d2aux12",{"_index":10252,"t":{},"b":{"37":{}}}],["d2aux21",{"_index":10322,"t":{},"b":{"37":{}}}],["d2aux22",{"_index":10253,"t":{},"b":{"37":{}}}],["d2volume(vh",{"_index":1816,"t":{},"b":{"3":{},"20":{}}}],["d2volume(w",{"_index":1814,"t":{},"b":{"3":{},"20":{}}}],["d3",{"_index":10323,"t":{},"b":{"37":{}}}],["d3(20",{"_index":12186,"t":{},"b":{"48":{}}}],["d3(t",{"_index":12180,"t":{},"b":{"48":{}}}],["d3aux11",{"_index":10254,"t":{},"b":{"37":{}}}],["d3aux11(u1n",{"_index":10405,"t":{},"b":{"37":{}}}],["d3aux12",{"_index":10255,"t":{},"b":{"37":{}}}],["d3aux12(u1n",{"_index":10407,"t":{},"b":{"37":{}}}],["d3aux21",{"_index":10333,"t":{},"b":{"37":{}}}],["d3aux21(u1n",{"_index":10409,"t":{},"b":{"37":{}}}],["d3aux22",{"_index":10256,"t":{},"b":{"37":{}}}],["d3aux22(u1n",{"_index":10411,"t":{},"b":{"37":{}}}],["d4",{"_index":10336,"t":{},"b":{"37":{}}}],["d4(10",{"_index":12187,"t":{},"b":{"48":{}}}],["d4(t",{"_index":12181,"t":{},"b":{"48":{}}}],["d4aux11",{"_index":10257,"t":{},"b":{"37":{}}}],["d4aux11(w1",{"_index":10412,"t":{},"b":{"37":{}}}],["d4aux12",{"_index":10258,"t":{},"b":{"37":{}}}],["d4aux12(w1",{"_index":10413,"t":{},"b":{"37":{}}}],["d4aux21",{"_index":10340,"t":{},"b":{"37":{}}}],["d4aux21(w1",{"_index":10415,"t":{},"b":{"37":{}}}],["d4aux22",{"_index":10259,"t":{},"b":{"37":{}}}],["d4aux22(w1",{"_index":10417,"t":{},"b":{"37":{}}}],["d:\\((x,y,u(x,y+\\delta",{"_index":11833,"t":{},"b":{"48":{}}}],["d[].linfti",{"_index":9336,"t":{},"b":{"25":{}}}],["d[i",{"_index":8902,"t":{},"b":{"21":{}}}],["d\\bar{g}(\\rho)(v)}{\\sqrt{g}}d\\theta",{"_index":1593,"t":{},"b":{"3":{}}}],["d\\gamma",{"_index":4476,"t":{},"b":{"11":{}}}],["d\\in",{"_index":14983,"t":{},"b":{"75":{}}}],["d\\le",{"_index":10816,"t":{},"b":{"40":{}}}],["d\\mathcal{a}(\\rho),v\\rangl",{"_index":1590,"t":{},"b":{"3":{}}}],["d\\mathcal{v}(\\rho),v\\rangl",{"_index":1626,"t":{},"b":{"3":{}}}],["d\\omega",{"_index":4472,"t":{},"b":{"11":{},"50":{},"51":{}}}],["d\\omega+\\oint",{"_index":12447,"t":{},"b":{"51":{}}}],["d\\phi",{"_index":1574,"t":{},"b":{"3":{}}}],["d\\phi\\end{split",{"_index":1622,"t":{},"b":{"3":{}}}],["d\\theta",{"_index":1581,"t":{},"b":{"3":{}}}],["d^2",{"_index":11666,"t":{},"b":{"46":{}}}],["d^2f",{"_index":5516,"t":{},"b":{"13":{}}}],["d^2f2(\\mathbf{u})(\\mathbf{v},\\mathbf{w",{"_index":11671,"t":{},"b":{"46":{}}}],["d^2j(u_n,v_n)((w,s),(du,dv",{"_index":11713,"t":{},"b":{"46":{}}}],["d^{2}\\mathcal{a}(\\rho)(w,v",{"_index":1619,"t":{},"b":{"3":{}}}],["d^{2}\\mathcal{v}(\\rho)(w,v",{"_index":1629,"t":{},"b":{"3":{}}}],["d^{2}e",{"_index":11674,"t":{},"b":{"46":{}}}],["d^{\\alpha}v",{"_index":7369,"t":{},"b":{"14":{}}}],["d^{\\alpha}w",{"_index":7370,"t":{},"b":{"14":{}}}],["d_1",{"_index":4669,"t":{},"b":{"11":{}}}],["d_1/|t_k|\\qquad",{"_index":4673,"t":{},"b":{"11":{}}}],["d_2",{"_index":4671,"t":{},"b":{"11":{}}}],["d_2/|t_k|\\qquad",{"_index":4675,"t":{},"b":{"11":{}}}],["d_3",{"_index":4672,"t":{},"b":{"11":{}}}],["d_3/|t_k|\\end{split",{"_index":4677,"t":{},"b":{"11":{}}}],["d_c",{"_index":7766,"t":{},"b":{"15":{}}}],["d_i",{"_index":3189,"t":{},"b":{"5":{},"8":{},"10":{}}}],["d_i)_{1\\l",{"_index":3532,"t":{},"b":{"8":{},"10":{}}}],["d_i)_{i",{"_index":3079,"t":{},"b":{"5":{}}}],["d_i\\,(a_j^{\\text{neu",{"_index":3651,"t":{},"b":{"8":{}}}],["d_j",{"_index":3092,"t":{},"b":{"5":{},"8":{},"10":{}}}],["d_r",{"_index":7764,"t":{},"b":{"15":{}}}],["d_{c",{"_index":7865,"t":{},"b":{"15":{}}}],["da",{"_index":2017,"t":{},"b":{"3":{},"48":{}}}],["da*u1",{"_index":2020,"t":{},"b":{"3":{}}}],["da*u2",{"_index":2022,"t":{},"b":{"3":{}}}],["dag",{"_index":5821,"t":{},"b":{"13":{}}}],["dag){x",{"_index":5823,"t":{},"b":{"13":{}}}],["dalpha",{"_index":11790,"t":{},"b":{"47":{}}}],["dalpha*(dx(u)*dx(vh",{"_index":11808,"t":{},"b":{"47":{}}}],["dan",{"_index":9256,"t":{},"b":{"21":{}}}],["danger",{"_index":5205,"t":{},"b":{"13":{},"75":{}}}],["danni",{"_index":238,"t":{},"b":{"2":{}}}],["darci",{"_index":3617,"t":{},"b":{"8":{}}}],["darea",{"_index":1750,"t":{},"b":{"3":{},"20":{}}}],["darea(0",{"_index":1756,"t":{},"b":{"3":{},"20":{}}}],["dark",{"_index":8576,"t":{},"b":{"19":{},"27":{}}}],["dash",{"_index":10094,"t":{},"b":{"35":{}}}],["data",{"_index":2175,"t":{},"b":{"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"26":{},"34":{},"36":{},"41":{},"42":{},"52":{},"66":{},"68":{},"71":{},"72":{},"75":{},"76":{},"80":{},"81":{}}}],["databas",{"_index":6841,"t":{},"b":{"13":{},"44":{}}}],["datafilenam",{"_index":7703,"t":{},"b":{"15":{},"26":{},"60":{}}}],["datanam",{"_index":8604,"t":{},"b":{"19":{},"27":{},"53":{}}}],["datasol",{"_index":6998,"t":{},"b":{"13":{}}}],["date",{"_index":2816,"t":{},"b":{"4":{},"32":{},"34":{},"35":{},"39":{}}}],["dautray",{"_index":14717,"t":{},"b":{"72":{}}}],["db",{"_index":6842,"t":{},"b":{"13":{},"35":{}}}],["dbc",{"_index":2076,"t":{},"b":{"3":{}}}],["dbc(2*th.nbe,2*th.nv",{"_index":2075,"t":{},"b":{"3":{}}}],["dbc(i",{"_index":2080,"t":{},"b":{"3":{}}}],["dbc(i+th.nb",{"_index":2082,"t":{},"b":{"3":{}}}],["dbc(real[int",{"_index":2073,"t":{},"b":{"3":{}}}],["dbfv",{"_index":2015,"t":{},"b":{"3":{}}}],["dbfv(vh",{"_index":2018,"t":{},"b":{"3":{}}}],["dc",{"_index":11844,"t":{},"b":{"48":{}}}],["dconst",{"_index":2038,"t":{},"b":{"3":{}}}],["dconst(i",{"_index":2041,"t":{},"b":{"3":{}}}],["dconst(vh.ndof",{"_index":2035,"t":{},"b":{"3":{}}}],["dcontparam",{"_index":10400,"t":{},"b":{"37":{}}}],["dd",{"_index":3391,"t":{},"b":{"5":{},"7":{},"8":{},"10":{},"11":{},"16":{}}}],["dd(35",{"_index":15015,"t":{},"b":{"75":{}}}],["dd(a1",{"_index":2963,"t":{},"b":{"4":{}}}],["dd(a2",{"_index":2967,"t":{},"b":{"4":{}}}],["dd(f",{"_index":2936,"t":{},"b":{"4":{}}}],["dd(t",{"_index":15010,"t":{},"b":{"75":{}}}],["dd)logo",{"_index":3499,"t":{"8":{}},"b":{}}],["ddd(3*m",{"_index":14481,"t":{},"b":{"67":{}}}],["ddd(t",{"_index":14471,"t":{},"b":{"67":{}}}],["dddd",{"_index":9101,"t":{},"b":{"21":{}}}],["dde(u",{"_index":11699,"t":{},"b":{"46":{}}}],["dde2",{"_index":11772,"t":{},"b":{"46":{}}}],["ddf",{"_index":11795,"t":{},"b":{"47":{}}}],["ddf(e2",{"_index":11766,"t":{},"b":{"46":{}}}],["ddf(real",{"_index":8654,"t":{},"b":{"20":{}}}],["ddf(u",{"_index":11725,"t":{},"b":{"46":{}}}],["ddf2(u",{"_index":11706,"t":{},"b":{"46":{}}}],["ddf2(un",{"_index":11760,"t":{},"b":{"46":{}}}],["ddfe2",{"_index":11752,"t":{},"b":{"46":{}}}],["ddfe2[].max",{"_index":11773,"t":{},"b":{"46":{}}}],["ddfe2[].min",{"_index":11774,"t":{},"b":{"46":{}}}],["ddj",{"_index":11801,"t":{},"b":{"47":{}}}],["ddm",{"_index":3460,"t":{},"b":{"7":{},"26":{}}}],["ddm.edp",{"_index":3443,"t":{},"b":{"6":{}}}],["dds1",{"_index":8355,"t":{},"b":{"18":{}}}],["de",{"_index":138,"t":{},"b":{"2":{},"21":{},"29":{},"46":{},"48":{}}}],["de(u",{"_index":11697,"t":{},"b":{"46":{}}}],["de2",{"_index":11769,"t":{},"b":{"46":{}}}],["dead",{"_index":2728,"t":{},"b":{"4":{},"37":{}}}],["deal",{"_index":3611,"t":{},"b":{"8":{},"13":{},"66":{},"79":{}}}],["deb",{"_index":9968,"t":{},"b":{"35":{}}}],["debian",{"_index":9959,"t":{},"b":{"35":{}}}],["debug",{"_index":7013,"t":{},"b":{"13":{},"18":{},"26":{},"70":{}}}],["debugdj",{"_index":746,"t":{},"b":{"3":{},"20":{}}}],["debugj",{"_index":739,"t":{},"b":{"3":{},"20":{}}}],["decahedron",{"_index":6654,"t":{},"b":{"13":{}}}],["decay",{"_index":15269,"t":{},"b":{"79":{}}}],["decid",{"_index":13984,"t":{},"b":{"61":{}}}],["decim",{"_index":7066,"t":{},"b":{"13":{},"52":{}}}],["decimation+enrich",{"_index":7075,"t":{},"b":{"13":{}}}],["declar",{"_index":1100,"t":{},"b":{"3":{},"11":{},"15":{},"26":{},"56":{},"60":{},"70":{},"76":{}}}],["declic",{"_index":7110,"t":{},"b":{"13":{}}}],["decompos",{"_index":3022,"t":{},"b":{"5":{},"7":{},"10":{},"13":{},"40":{}}}],["decomposit",{"_index":171,"t":{"8":{}},"b":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"35":{},"38":{},"42":{},"50":{},"66":{}}}],["decompositionlogo",{"_index":10433,"t":{"38":{}},"b":{}}],["decreas",{"_index":1011,"t":{},"b":{"3":{},"5":{},"13":{},"15":{},"19":{},"73":{}}}],["decrement",{"_index":8377,"t":{},"b":{"18":{},"58":{}}}],["dedic",{"_index":3037,"t":{},"b":{"5":{},"29":{}}}],["deeper",{"_index":890,"t":{},"b":{"3":{},"44":{}}}],["def",{"_index":3008,"t":{},"b":{"5":{},"7":{},"10":{},"11":{},"21":{},"66":{}}}],["def(i)i",{"_index":3004,"t":{},"b":{"5":{}}}],["def(u",{"_index":3071,"t":{},"b":{"5":{},"7":{},"10":{}}}],["def(u)[u,u#2",{"_index":3356,"t":{},"b":{"5":{}}}],["def(ui",{"_index":3015,"t":{},"b":{"5":{}}}],["def(ut",{"_index":3363,"t":{},"b":{"5":{}}}],["default",{"_index":551,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"26":{},"35":{},"39":{},"52":{},"53":{},"54":{},"60":{},"72":{},"76":{}}}],["defaulttohip",{"_index":7729,"t":{},"b":{"15":{}}}],["defaulttohypr",{"_index":7730,"t":{},"b":{"15":{}}}],["defaulttomump",{"_index":7724,"t":{},"b":{"15":{},"26":{}}}],["defaulttomumpsseq",{"_index":13408,"t":{},"b":{"53":{}}}],["defaulttopardiso",{"_index":13415,"t":{},"b":{"53":{}}}],["defaulttoparm",{"_index":7731,"t":{},"b":{"15":{}}}],["defaulttosuperlu",{"_index":13450,"t":{},"b":{"53":{}}}],["defaulttoumfpack",{"_index":13414,"t":{},"b":{"53":{}}}],["defaulttoumfpack64",{"_index":13454,"t":{},"b":{"53":{}}}],["defaut",{"_index":6590,"t":{},"b":{"13":{}}}],["defect",{"_index":8108,"t":{},"b":{"15":{}}}],["defin",{"_index":769,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"27":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"60":{},"65":{},"66":{},"68":{},"71":{},"72":{},"74":{},"75":{},"76":{},"77":{},"81":{}}}],["definit",{"_index":1196,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"13":{},"15":{},"20":{},"24":{},"26":{},"41":{},"45":{},"46":{},"48":{},"49":{},"54":{},"55":{},"60":{},"65":{},"74":{}}}],["deflat",{"_index":3236,"t":{},"b":{"5":{},"9":{},"15":{}}}],["deflect",{"_index":14298,"t":{},"b":{"64":{}}}],["deform",{"_index":197,"t":{},"b":{"2":{},"13":{},"36":{},"37":{},"40":{},"42":{},"43":{},"46":{},"64":{},"72":{}}}],["defpart",{"_index":3379,"t":{},"b":{"5":{}}}],["deg",{"_index":6077,"t":{},"b":{"13":{}}}],["degener",{"_index":6000,"t":{},"b":{"13":{},"79":{}}}],["degeneraci",{"_index":15295,"t":{},"b":{"79":{}}}],["degrad",{"_index":7107,"t":{},"b":{"13":{}}}],["degre",{"_index":2431,"t":{},"b":{"4":{},"5":{},"8":{},"11":{},"12":{},"13":{},"15":{},"39":{},"50":{},"54":{},"60":{},"65":{},"66":{},"72":{},"76":{},"80":{}}}],["degrees.default",{"_index":5595,"t":{},"b":{"13":{}}}],["del",{"_index":9881,"t":{},"b":{"33":{}}}],["delaunay",{"_index":118,"t":{},"b":{"2":{},"11":{},"12":{},"13":{},"72":{},"76":{}}}],["delet",{"_index":5482,"t":{},"b":{"13":{},"21":{},"24":{},"53":{}}}],["delta",{"_index":1362,"t":{},"b":{"3":{},"11":{},"13":{},"14":{},"15":{},"21":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"62":{},"63":{},"64":{},"66":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"79":{}}}],["delta(\\delta\\varphi",{"_index":14353,"t":{},"b":{"65":{}}}],["delta)}{(1",{"_index":11022,"t":{},"b":{"41":{}}}],["delta\\bf_{n+1",{"_index":10222,"t":{},"b":{"37":{}}}],["delta\\in",{"_index":11024,"t":{},"b":{"41":{}}}],["delta\\mathbf{u",{"_index":11223,"t":{},"b":{"42":{}}}],["delta\\mathbf{x",{"_index":10629,"t":{},"b":{"40":{}}}],["delta\\psi",{"_index":11505,"t":{},"b":{"45":{}}}],["delta\\theta",{"_index":14179,"t":{},"b":{"63":{}}}],["delta\\varphi",{"_index":11971,"t":{},"b":{"48":{},"65":{}}}],["delta\\varphi_0",{"_index":11977,"t":{},"b":{"48":{}}}],["delta\\varphi_1",{"_index":11982,"t":{},"b":{"48":{}}}],["delta_{\\p",{"_index":4274,"t":{},"b":{"11":{}}}],["delta_{ij",{"_index":7263,"t":{},"b":{"14":{},"40":{},"42":{},"64":{}}}],["delta_{ij})_{1\\leq",{"_index":1038,"t":{},"b":{"3":{}}}],["delta_{ij}\\textrm{div}u+2\\mu\\varepsilon_{ij",{"_index":10712,"t":{},"b":{"40":{}}}],["delta_{k}\\vectthree{x}{y}{z",{"_index":4060,"t":{},"b":{"11":{}}}],["deltax2",{"_index":8733,"t":{},"b":{"20":{}}}],["deltay2",{"_index":8736,"t":{},"b":{"20":{}}}],["demo",{"_index":7634,"t":{},"b":{"15":{},"26":{}}}],["demonstr",{"_index":1975,"t":{},"b":{"3":{}}}],["denl(u",{"_index":11686,"t":{},"b":{"46":{}}}],["denl(uuu",{"_index":11700,"t":{},"b":{"46":{}}}],["denot",{"_index":1035,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"14":{},"15":{},"37":{},"41":{},"45":{},"46":{},"48":{},"49":{},"50":{},"59":{},"63":{},"64":{},"79":{}}}],["dens",{"_index":1065,"t":{},"b":{"3":{},"15":{},"41":{}}}],["densiti",{"_index":4877,"t":{},"b":{"11":{},"12":{},"13":{},"37":{},"48":{},"61":{},"69":{},"71":{},"76":{}}}],["dep",{"_index":7144,"t":{},"b":{"13":{},"64":{}}}],["depend",{"_index":1946,"t":{"68":{}},"b":{"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"35":{},"39":{},"40":{},"48":{},"49":{},"54":{},"62":{},"65":{},"67":{},"68":{},"70":{},"79":{},"80":{},"81":{}}}],["deplac",{"_index":13397,"t":{},"b":{"53":{}}}],["deriv",{"_index":759,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"12":{},"13":{},"14":{},"18":{},"24":{},"40":{},"41":{},"45":{},"48":{},"49":{},"51":{},"54":{},"60":{},"64":{},"65":{},"72":{},"75":{},"76":{}}}],["derivativetest",{"_index":1301,"t":{},"b":{"3":{}}}],["dervieux",{"_index":2904,"t":{},"b":{"4":{}}}],["describ",{"_index":2397,"t":{},"b":{"4":{},"8":{},"12":{},"13":{},"15":{},"36":{},"42":{},"45":{},"48":{},"54":{},"64":{},"76":{}}}],["descript",{"_index":884,"t":{},"b":{"3":{},"12":{},"13":{},"15":{},"32":{},"33":{},"52":{},"60":{}}}],["design",{"_index":893,"t":{},"b":{"3":{},"11":{},"17":{},"29":{},"33":{},"60":{},"81":{}}}],["desir",{"_index":1928,"t":{},"b":{"3":{},"9":{},"39":{},"54":{},"72":{},"73":{},"75":{}}}],["desired’",{"_index":7089,"t":{},"b":{"13":{}}}],["desktop",{"_index":9935,"t":{},"b":{"35":{}}}],["desreux",{"_index":7,"t":{},"b":{"2":{}}}],["destroy",{"_index":5473,"t":{},"b":{"13":{},"56":{}}}],["det",{"_index":4205,"t":{},"b":{"11":{}}}],["det(g",{"_index":1562,"t":{},"b":{"3":{}}}],["det\\bf",{"_index":10182,"t":{},"b":{"37":{}}}],["detail",{"_index":704,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"33":{},"45":{},"51":{},"59":{},"60":{},"71":{},"76":{}}}],["detect",{"_index":1310,"t":{},"b":{"3":{},"13":{},"15":{}}}],["determin",{"_index":3068,"t":{},"b":{"5":{},"11":{},"15":{},"37":{},"39":{},"48":{},"54":{},"65":{},"72":{},"76":{}}}],["dev",{"_index":9963,"t":{},"b":{"35":{}}}],["devel",{"_index":10059,"t":{},"b":{"35":{}}}],["develop",{"_index":475,"t":{},"b":{"2":{},"4":{},"7":{},"8":{},"12":{},"13":{},"15":{},"18":{},"21":{},"26":{},"29":{},"30":{},"33":{},"35":{},"36":{},"60":{},"70":{}}}],["developerslogo",{"_index":2173,"t":{"4":{},"21":{}},"b":{}}],["deviat",{"_index":805,"t":{},"b":{"3":{},"13":{}}}],["devic",{"_index":8373,"t":{},"b":{"18":{},"41":{},"52":{}}}],["deviv",{"_index":2786,"t":{},"b":{"4":{}}}],["dewynn",{"_index":285,"t":{},"b":{"2":{}}}],["df",{"_index":2572,"t":{},"b":{"4":{},"13":{},"24":{},"47":{},"73":{}}}],["df(\\mathbf{u},p)(\\mathbf{\\delta",{"_index":14817,"t":{},"b":{"73":{}}}],["df(dx(u)*dx(u",{"_index":658,"t":{},"b":{"3":{},"20":{},"47":{}}}],["df(dx(w)*dx(w",{"_index":632,"t":{},"b":{"3":{},"20":{}}}],["df(e2",{"_index":11765,"t":{},"b":{"46":{}}}],["df(real",{"_index":8652,"t":{},"b":{"20":{}}}],["df(u",{"_index":11723,"t":{},"b":{"46":{},"73":{}}}],["df(u_i",{"_index":14810,"t":{},"b":{"73":{}}}],["df(|nabla",{"_index":612,"t":{},"b":{"3":{},"20":{}}}],["df11(varu1",{"_index":10273,"t":{},"b":{"37":{}}}],["df12(varu1",{"_index":10276,"t":{},"b":{"37":{}}}],["df2(\\mathbf{u})(\\mathbf{v",{"_index":11663,"t":{},"b":{"46":{}}}],["df2(\\mathbf{u})(\\mathbf{w",{"_index":11669,"t":{},"b":{"46":{}}}],["df2(u",{"_index":11703,"t":{},"b":{"46":{}}}],["df2(un",{"_index":11757,"t":{},"b":{"46":{}}}],["df21(varu1",{"_index":10278,"t":{},"b":{"37":{}}}],["df22(varu1",{"_index":10280,"t":{},"b":{"37":{}}}],["df^t",{"_index":6307,"t":{},"b":{"13":{},"24":{}}}],["df_{n+1",{"_index":10321,"t":{},"b":{"37":{}}}],["dfe2",{"_index":11751,"t":{},"b":{"46":{}}}],["dfe2[].max",{"_index":11770,"t":{},"b":{"46":{}}}],["dfe2[].min",{"_index":11771,"t":{},"b":{"46":{}}}],["dfft",{"_index":2857,"t":{},"b":{"4":{},"21":{},"53":{}}}],["dfft(ff[],ni",{"_index":8791,"t":{},"b":{"21":{}}}],["dfft(fhat",{"_index":8801,"t":{},"b":{"21":{}}}],["dfft(u",{"_index":8774,"t":{},"b":{"21":{}}}],["dfft(v",{"_index":8775,"t":{},"b":{"21":{}}}],["dfft.cpp",{"_index":2897,"t":{},"b":{"4":{}}}],["dfft.dylib",{"_index":2903,"t":{},"b":{"4":{}}}],["dfft.o",{"_index":2902,"t":{},"b":{"4":{}}}],["dg",{"_index":15204,"t":{},"b":{"77":{}}}],["dgeev",{"_index":13306,"t":{},"b":{"53":{}}}],["dgelsi",{"_index":13382,"t":{},"b":{"53":{}}}],["dgesdd",{"_index":13312,"t":{},"b":{"53":{}}}],["dggev",{"_index":13309,"t":{},"b":{"53":{}}}],["dgmre",{"_index":7942,"t":{},"b":{"15":{}}}],["dh",{"_index":4439,"t":{},"b":{"11":{}}}],["dh(th",{"_index":4438,"t":{},"b":{"11":{}}}],["dheat",{"_index":10941,"t":{},"b":{"41":{}}}],["di",{"_index":7738,"t":{},"b":{"15":{},"26":{}}}],["di(5",{"_index":7734,"t":{},"b":{"15":{},"26":{}}}],["di.l2",{"_index":7741,"t":{},"b":{"15":{},"26":{}}}],["di.linfti",{"_index":7740,"t":{},"b":{"15":{},"26":{}}}],["diagnost",{"_index":7789,"t":{},"b":{"15":{}}}],["diagofa",{"_index":9035,"t":{},"b":{"21":{}}}],["diagofa(a.n",{"_index":9034,"t":{},"b":{"21":{}}}],["diagon",{"_index":1036,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"21":{},"39":{},"49":{},"50":{},"60":{},"80":{}}}],["diagpivotthresh",{"_index":7882,"t":{},"b":{"15":{}}}],["diagram",{"_index":14303,"t":{},"b":{"65":{}}}],["diagscal",{"_index":7870,"t":{},"b":{"15":{}}}],["diamet",{"_index":4610,"t":{},"b":{"11":{},"13":{},"51":{}}}],["diamond",{"_index":9304,"t":{},"b":{"24":{}}}],["dichotom",{"_index":1275,"t":{},"b":{"3":{}}}],["diedral",{"_index":6653,"t":{},"b":{"13":{}}}],["dielectr",{"_index":11873,"t":{},"b":{"48":{},"51":{}}}],["diff",{"_index":4950,"t":{},"b":{"11":{},"21":{},"25":{},"50":{}}}],["diff(n",{"_index":12391,"t":{},"b":{"50":{}}}],["diff.linfti",{"_index":4951,"t":{},"b":{"11":{}}}],["differ",{"_index":816,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"35":{},"38":{},"40":{},"41":{},"49":{},"51":{},"54":{},"60":{},"65":{},"66":{},"79":{},"81":{}}}],["differenti",{"_index":176,"t":{"65":{}},"b":{"2":{},"3":{},"8":{},"11":{},"12":{},"14":{},"15":{},"33":{},"34":{},"41":{},"45":{},"46":{},"51":{},"65":{},"72":{},"73":{},"76":{}}}],["difficult",{"_index":1063,"t":{},"b":{"3":{},"11":{},"15":{},"40":{},"65":{},"73":{}}}],["difficulti",{"_index":1021,"t":{},"b":{"3":{},"11":{},"12":{},"65":{},"74":{},"80":{}}}],["diffnp",{"_index":13530,"t":{},"b":{"54":{}}}],["diffnp(a",{"_index":13531,"t":{},"b":{"54":{}}}],["diffpo",{"_index":13533,"t":{},"b":{"54":{}}}],["diffpos(a",{"_index":13534,"t":{},"b":{"54":{}}}],["diffus",{"_index":3441,"t":{},"b":{"6":{},"16":{},"33":{},"41":{},"65":{},"79":{}}}],["différentiel",{"_index":447,"t":{},"b":{"2":{}}}],["digit",{"_index":12563,"t":{},"b":{"51":{},"52":{}}}],["dim",{"_index":1497,"t":{},"b":{"3":{},"4":{},"15":{},"20":{},"26":{},"54":{},"77":{}}}],["dim*(dim+1)/2",{"_index":2398,"t":{},"b":{"4":{}}}],["dim](int",{"_index":2178,"t":{},"b":{"4":{}}}],["dimens",{"_index":836,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"29":{},"36":{},"41":{},"51":{},"54":{},"60":{},"71":{},"76":{}}}],["dimension",{"_index":117,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"41":{},"51":{},"56":{},"71":{},"78":{},"79":{}}}],["dimension()2",{"_index":3349,"t":{},"b":{"5":{}}}],["dimensions",{"_index":9770,"t":{},"b":{"29":{}}}],["dimkrylov",{"_index":7629,"t":{},"b":{"15":{},"26":{},"48":{},"60":{}}}],["dineqc",{"_index":2034,"t":{},"b":{"3":{}}}],["dir;;dir2",{"_index":10137,"t":{},"b":{"35":{}}}],["dir;;dir3",{"_index":10139,"t":{},"b":{"35":{}}}],["dirac",{"_index":4273,"t":{},"b":{"11":{}}}],["direct",{"_index":864,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"26":{},"37":{},"40":{},"48":{},"51":{},"60":{},"65":{}}}],["direct.edp",{"_index":3442,"t":{},"b":{"6":{}}}],["directli",{"_index":717,"t":{},"b":{"3":{},"5":{},"10":{},"12":{},"13":{},"15":{},"16":{},"25":{},"35":{},"58":{},"60":{},"70":{},"76":{}}}],["directori",{"_index":881,"t":{},"b":{"3":{},"4":{},"35":{}}}],["dirichlet",{"_index":1973,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"39":{},"45":{},"50":{},"54":{},"60":{},"65":{},"66":{},"68":{},"71":{},"72":{},"76":{},"80":{}}}],["dirnam",{"_index":13434,"t":{},"b":{"53":{}}}],["disabl",{"_index":1339,"t":{},"b":{"3":{},"35":{}}}],["disappear",{"_index":15369,"t":{},"b":{"81":{}}}],["disc",{"_index":1889,"t":{},"b":{"3":{}}}],["disc1",{"_index":1848,"t":{},"b":{"3":{},"20":{}}}],["disc2",{"_index":1851,"t":{},"b":{"3":{},"20":{}}}],["discard",{"_index":1114,"t":{},"b":{"3":{}}}],["discontin",{"_index":12291,"t":{},"b":{"48":{}}}],["discontinu",{"_index":408,"t":{},"b":{"2":{},"11":{},"12":{},"33":{},"49":{},"51":{},"54":{},"65":{},"77":{}}}],["discret",{"_index":2849,"t":{},"b":{"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"41":{},"45":{},"48":{},"50":{},"53":{},"54":{},"61":{},"67":{},"72":{},"78":{},"79":{}}}],["disk",{"_index":5206,"t":{},"b":{"13":{},"38":{},"41":{},"48":{},"51":{},"67":{},"76":{},"77":{}}}],["dispatch",{"_index":9007,"t":{},"b":{"21":{}}}],["displac",{"_index":397,"t":{},"b":{"2":{},"13":{},"37":{},"40":{},"42":{},"46":{},"48":{},"49":{},"54":{},"64":{},"72":{}}}],["display",{"_index":1693,"t":{},"b":{"3":{},"11":{},"12":{},"13":{},"19":{},"20":{},"21":{},"22":{},"38":{},"39":{},"40":{},"43":{},"45":{},"48":{},"54":{},"60":{},"70":{},"72":{},"76":{}}}],["displaystyl",{"_index":3641,"t":{},"b":{"8":{},"10":{},"11":{},"15":{},"50":{},"63":{},"67":{},"68":{}}}],["displaystyle\\int",{"_index":11668,"t":{},"b":{"46":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th},t\\in\\omega_l}\\int_{t",{"_index":4556,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th},t\\subset",{"_index":4530,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th},t\\subset\\omega_{l}}\\int_{t,\\phi",{"_index":4563,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th},t\\subset\\omega_{l}}\\int_{t,\\phi<0",{"_index":4558,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th}}\\int_{(\\p",{"_index":4537,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th}}\\int_{\\p",{"_index":4544,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th}}\\int_{t",{"_index":4527,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th}}\\int_{t,\\phi",{"_index":4541,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{t\\in\\mathtt{th}}\\int_{t,\\phi<0",{"_index":4534,"t":{},"b":{"11":{}}}],["displaystyle\\sum_{{t\\in\\mathtt{th},t\\subset",{"_index":4546,"t":{},"b":{"11":{}}}],["displaystyle{\\arctan\\left(\\frac{y}{x}\\right",{"_index":13488,"t":{},"b":{"54":{}}}],["displaystyle{\\frac{1}{2}\\int_{\\omega",{"_index":1356,"t":{},"b":{"3":{}}}],["displaystyle{\\frac{1}{2}\\int_{\\omega}\\vert\\nabla",{"_index":1417,"t":{},"b":{"3":{}}}],["displaystyle{\\int_{\\omega",{"_index":14537,"t":{},"b":{"68":{}}}],["displaystyle{\\int_{\\omega}\\nabla",{"_index":15119,"t":{},"b":{"76":{}}}],["displaystyle{\\int_{\\omega}fv",{"_index":15120,"t":{},"b":{"76":{}}}],["displaystyle{\\left\\{w(x,y)\\left",{"_index":7336,"t":{},"b":{"14":{}}}],["displaystyle{\\left\\{w\\in",{"_index":7346,"t":{},"b":{"14":{}}}],["displaystyle{\\mu\\sum_{i",{"_index":953,"t":{},"b":{"3":{}}}],["displaystyle{\\sum_{i",{"_index":969,"t":{},"b":{"3":{}}}],["displvect",{"_index":7129,"t":{},"b":{"13":{}}}],["dist",{"_index":8245,"t":{},"b":{"16":{},"53":{},"54":{}}}],["dist(a",{"_index":13536,"t":{},"b":{"54":{}}}],["dist(ax",{"_index":12100,"t":{},"b":{"48":{}}}],["dist(ax,ay,bx,bi",{"_index":12115,"t":{},"b":{"48":{}}}],["dist(ax,ay,x,y)/l1",{"_index":12121,"t":{},"b":{"48":{}}}],["dist(bx,by,cx,ci",{"_index":12116,"t":{},"b":{"48":{}}}],["dist(bx,by,x,y)/l2",{"_index":12125,"t":{},"b":{"48":{}}}],["dist(cx,cy,dx,di",{"_index":12118,"t":{},"b":{"48":{}}}],["dist(cx,cy,x,y)/l3",{"_index":12128,"t":{},"b":{"48":{}}}],["dist(dx,dy,ax,ay",{"_index":12120,"t":{},"b":{"48":{}}}],["dist(dx,dy,x,y)/l4",{"_index":12131,"t":{},"b":{"48":{}}}],["distanc",{"_index":808,"t":{},"b":{"3":{},"11":{},"13":{},"48":{},"53":{},"79":{}}}],["distance(th",{"_index":12630,"t":{},"b":{"53":{}}}],["distinct",{"_index":7946,"t":{},"b":{"15":{}}}],["distinguish",{"_index":12400,"t":{},"b":{"51":{}}}],["distmax",{"_index":12631,"t":{},"b":{"53":{}}}],["distribut",{"_index":779,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"35":{},"48":{},"60":{},"66":{},"69":{},"79":{}}}],["distributedglob",{"_index":7859,"t":{},"b":{"15":{}}}],["distributedgloba",{"_index":7876,"t":{},"b":{"15":{}}}],["disturb",{"_index":11187,"t":{},"b":{"41":{}}}],["div",{"_index":8800,"t":{},"b":{"21":{},"45":{},"64":{}}}],["div(du1,du2",{"_index":14866,"t":{},"b":{"73":{}}}],["div(u",{"_index":9364,"t":{},"b":{"25":{},"61":{},"64":{}}}],["div(u,v",{"_index":10730,"t":{},"b":{"40":{},"64":{}}}],["div(u1",{"_index":9354,"t":{},"b":{"25":{},"40":{},"42":{},"45":{}}}],["div(u1,u2",{"_index":14858,"t":{},"b":{"73":{}}}],["div(u1,u2,u3",{"_index":6181,"t":{},"b":{"13":{},"25":{}}}],["div(uh",{"_index":9383,"t":{},"b":{"25":{}}}],["div(uu",{"_index":14274,"t":{},"b":{"64":{}}}],["div(v",{"_index":9167,"t":{},"b":{"21":{},"61":{}}}],["div(v1",{"_index":9355,"t":{},"b":{"25":{}}}],["div(v1,v2",{"_index":14867,"t":{},"b":{"73":{}}}],["diverg",{"_index":1347,"t":{},"b":{"3":{},"14":{},"41":{},"77":{}}}],["diverging_iter",{"_index":1225,"t":{},"b":{"3":{}}}],["divid",{"_index":5156,"t":{},"b":{"13":{},"15":{},"48":{}}}],["divis",{"_index":13796,"t":{},"b":{"58":{}}}],["divup",{"_index":11277,"t":{},"b":{"42":{},"45":{}}}],["divup(p",{"_index":11284,"t":{},"b":{"42":{},"45":{}}}],["dj",{"_index":510,"t":{},"b":{"3":{},"15":{},"20":{},"26":{},"47":{},"75":{}}}],["dj(\\mathbf{u})(\\mathbf{v",{"_index":11662,"t":{},"b":{"46":{}}}],["dj(real[int",{"_index":516,"t":{},"b":{"3":{},"75":{}}}],["dj(u_n,v_n)(w,",{"_index":11714,"t":{},"b":{"46":{}}}],["dj0",{"_index":7583,"t":{},"b":{"15":{},"20":{}}}],["dj0(real[int",{"_index":9622,"t":{},"b":{"26":{}}}],["djdz",{"_index":15047,"t":{},"b":{"75":{}}}],["djdz(3",{"_index":15037,"t":{},"b":{"75":{}}}],["djdz[i",{"_index":15044,"t":{},"b":{"75":{}}}],["dll",{"_index":9939,"t":{},"b":{"35":{}}}],["dlopen",{"_index":2755,"t":{},"b":{"4":{}}}],["dm",{"_index":8297,"t":{},"b":{"16":{}}}],["dm1",{"_index":14938,"t":{},"b":{"74":{}}}],["dm1*mdi",{"_index":14944,"t":{},"b":{"74":{}}}],["dm1*mdx",{"_index":14943,"t":{},"b":{"74":{}}}],["dmax",{"_index":6191,"t":{},"b":{"13":{},"40":{}}}],["dmesh",{"_index":8295,"t":{},"b":{"16":{}}}],["dmesh.edp",{"_index":8289,"t":{},"b":{"16":{}}}],["dmplex",{"_index":8296,"t":{},"b":{"16":{}}}],["dn(u",{"_index":14487,"t":{},"b":{"67":{}}}],["dnf",{"_index":9985,"t":{},"b":{"35":{}}}],["do",{"_index":1686,"t":{},"b":{"3":{},"5":{},"33":{},"70":{}}}],["dobrzynski",{"_index":7119,"t":{},"b":{"13":{}}}],["doc",{"_index":9767,"t":{},"b":{"29":{},"31":{}}}],["docker",{"_index":9836,"t":{},"b":{"32":{}}}],["doctorat",{"_index":428,"t":{},"b":{"2":{}}}],["document",{"_index":785,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"28":{},"31":{},"34":{},"36":{},"39":{},"53":{},"54":{},"71":{}}}],["documentationlogo",{"_index":2984,"t":{"5":{},"12":{},"28":{}},"b":{}}],["doesn’t",{"_index":6205,"t":{},"b":{"13":{},"19":{},"35":{},"81":{}}}],["dof'",{"_index":15321,"t":{},"b":{"79":{}}}],["dofact",{"_index":7877,"t":{},"b":{"15":{}}}],["doi",{"_index":3436,"t":{},"b":{"5":{}}}],["dolean",{"_index":3429,"t":{},"b":{"5":{}}}],["domain",{"_index":170,"t":{"8":{},"38":{}},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"24":{},"25":{},"26":{},"33":{},"34":{},"35":{},"36":{},"38":{},"40":{},"42":{},"43":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"54":{},"63":{},"65":{},"66":{},"69":{},"73":{},"75":{},"76":{},"79":{},"81":{}}}],["domain2",{"_index":6341,"t":{},"b":{"13":{}}}],["domainmass",{"_index":10394,"t":{},"b":{"37":{}}}],["domainrefin",{"_index":6748,"t":{},"b":{"13":{}}}],["domainrefine,sizeofvolum",{"_index":6754,"t":{},"b":{"13":{}}}],["domin",{"_index":8153,"t":{},"b":{"15":{}}}],["done",{"_index":833,"t":{},"b":{"3":{},"5":{},"7":{},"11":{},"13":{},"15":{},"17":{},"41":{},"48":{},"60":{},"70":{},"74":{},"76":{},"77":{}}}],["don’t",{"_index":1178,"t":{},"b":{"3":{},"11":{},"45":{},"72":{},"81":{}}}],["door",{"_index":13980,"t":{},"b":{"61":{}}}],["dop",{"_index":4965,"t":{},"b":{"11":{}}}],["dop(w^i_c",{"_index":4964,"t":{},"b":{"11":{}}}],["doperator.hpp",{"_index":2695,"t":{},"b":{"4":{}}}],["doption",{"_index":7018,"t":{},"b":{"13":{}}}],["doptions(0",{"_index":7020,"t":{},"b":{"13":{}}}],["doptions(1",{"_index":7021,"t":{},"b":{"13":{}}}],["doptions(10",{"_index":7113,"t":{},"b":{"13":{}}}],["doptions(12",{"_index":7093,"t":{},"b":{"13":{}}}],["doptions(2",{"_index":7022,"t":{},"b":{"13":{}}}],["doptions(3",{"_index":7099,"t":{},"b":{"13":{}}}],["doptions(4",{"_index":7100,"t":{},"b":{"13":{}}}],["doptions(5",{"_index":7102,"t":{},"b":{"13":{}}}],["doptions(6",{"_index":7104,"t":{},"b":{"13":{}}}],["doptions(7",{"_index":7106,"t":{},"b":{"13":{}}}],["doptions(8",{"_index":7109,"t":{},"b":{"13":{}}}],["doptions(9",{"_index":7111,"t":{},"b":{"13":{}}}],["dot",{"_index":2306,"t":{},"b":{"4":{},"13":{},"15":{},"21":{},"51":{},"60":{},"73":{}}}],["dote",{"_index":4411,"t":{},"b":{"11":{}}}],["dot{\\gamma_1}\\cap\\dot{\\gamma_2",{"_index":14364,"t":{},"b":{"65":{}}}],["dot{\\mathbf{x}}_{\\tau",{"_index":13520,"t":{},"b":{"54":{}}}],["dot{u}^0",{"_index":11069,"t":{},"b":{"41":{}}}],["dot{x",{"_index":11089,"t":{},"b":{"41":{}}}],["dot{x_t",{"_index":15147,"t":{},"b":{"77":{}}}],["dot{x}(\\tau",{"_index":11076,"t":{},"b":{"41":{}}}],["dot{x}_\\tau",{"_index":15161,"t":{},"b":{"77":{}}}],["doubl",{"_index":2768,"t":{},"b":{"4":{},"7":{},"13":{},"14":{},"15":{},"18":{},"19":{},"35":{},"54":{},"60":{}}}],["double.thi",{"_index":7004,"t":{},"b":{"13":{}}}],["double[int,int",{"_index":7451,"t":{},"b":{"15":{}}}],["dougla",{"_index":3978,"t":{},"b":{"11":{}}}],["down",{"_index":4062,"t":{},"b":{"11":{},"13":{},"19":{},"61":{}}}],["downlad",{"_index":867,"t":{},"b":{"3":{}}}],["downlaod",{"_index":10146,"t":{},"b":{"35":{}}}],["download",{"_index":872,"t":{},"b":{"3":{},"4":{},"32":{},"33":{},"35":{},"71":{}}}],["download/fftw",{"_index":2855,"t":{},"b":{"4":{}}}],["download/includ",{"_index":2854,"t":{},"b":{"4":{}}}],["download/install/lib/libfftw3.a",{"_index":2898,"t":{},"b":{"4":{}}}],["downloadlogo",{"_index":9825,"t":{"32":{}},"b":{}}],["dp",{"_index":4248,"t":{},"b":{"11":{},"15":{},"26":{},"73":{}}}],["dp[].linfty/lp",{"_index":14876,"t":{},"b":{"73":{}}}],["dparam",{"_index":7701,"t":{},"b":{"15":{},"60":{}}}],["dparams.thes",{"_index":7776,"t":{},"b":{"15":{}}}],["dparams[i",{"_index":7783,"t":{},"b":{"15":{}}}],["dparm",{"_index":7905,"t":{},"b":{"15":{}}}],["dparm(6",{"_index":7958,"t":{},"b":{"15":{}}}],["dparm.txt",{"_index":7919,"t":{},"b":{"15":{}}}],["dparm[0",{"_index":7915,"t":{},"b":{"15":{}}}],["dparm[1",{"_index":7916,"t":{},"b":{"15":{}}}],["dparm[2",{"_index":8029,"t":{},"b":{"15":{}}}],["dparm[3",{"_index":8030,"t":{},"b":{"15":{}}}],["dparm[4",{"_index":8033,"t":{},"b":{"15":{}}}],["dparm[5",{"_index":8035,"t":{},"b":{"15":{}}}],["dparm[63",{"_index":7917,"t":{},"b":{"15":{}}}],["dparm[i",{"_index":7911,"t":{},"b":{"15":{}}}],["dparm[ii",{"_index":7960,"t":{},"b":{"15":{}}}],["dparm[iii",{"_index":8045,"t":{},"b":{"15":{}}}],["dparms[0",{"_index":8129,"t":{},"b":{"15":{}}}],["dparms[1",{"_index":8149,"t":{},"b":{"15":{}}}],["dparms[2",{"_index":8151,"t":{},"b":{"15":{}}}],["dparms[3",{"_index":8152,"t":{},"b":{"15":{}}}],["dpkg",{"_index":9969,"t":{},"b":{"35":{}}}],["dplot",{"_index":7694,"t":{},"b":{"15":{},"26":{}}}],["dr",{"_index":1580,"t":{},"b":{"3":{},"7":{},"13":{}}}],["dr(40",{"_index":3331,"t":{},"b":{"5":{}}}],["drastic",{"_index":8006,"t":{},"b":{"15":{}}}],["draw",{"_index":8507,"t":{},"b":{"19":{}}}],["drawback",{"_index":3582,"t":{},"b":{"8":{}}}],["drawing.cpp",{"_index":2696,"t":{},"b":{"4":{}}}],["drawn",{"_index":5773,"t":{},"b":{"13":{},"72":{}}}],["drink",{"_index":14609,"t":{},"b":{"70":{}}}],["driven",{"_index":11185,"t":{},"b":{"41":{},"42":{},"45":{},"78":{}}}],["drop",{"_index":8031,"t":{},"b":{"15":{},"72":{}}}],["droptol",{"_index":8034,"t":{},"b":{"15":{}}}],["droptol0",{"_index":8032,"t":{},"b":{"15":{}}}],["ds",{"_index":12278,"t":{},"b":{"48":{}}}],["ds1",{"_index":8353,"t":{},"b":{"18":{}}}],["dscalprod(di,u,v",{"_index":3552,"t":{},"b":{"8":{}}}],["dspline",{"_index":8342,"t":{},"b":{"18":{}}}],["dspline(0",{"_index":8338,"t":{},"b":{"18":{}}}],["dspline(1",{"_index":8339,"t":{},"b":{"18":{}}}],["dspline(2,n+1",{"_index":8335,"t":{},"b":{"18":{}}}],["dsyev",{"_index":13314,"t":{},"b":{"53":{}}}],["dsygvd",{"_index":13311,"t":{},"b":{"53":{}}}],["dt",{"_index":4810,"t":{},"b":{"11":{},"13":{},"25":{},"41":{},"45":{},"54":{},"61":{},"66":{},"67":{},"68":{},"74":{},"77":{},"79":{},"80":{}}}],["dt*f*v",{"_index":10944,"t":{},"b":{"41":{}}}],["dt*mu*(dx(u)*dx(v",{"_index":10942,"t":{},"b":{"41":{}}}],["dt,r1",{"_index":14505,"t":{},"b":{"67":{}}}],["dt,u1",{"_index":14507,"t":{},"b":{"67":{}}}],["dt,up1)*v1",{"_index":11527,"t":{},"b":{"45":{}}}],["dt,up2)*v2",{"_index":11528,"t":{},"b":{"45":{}}}],["dt,v1",{"_index":14509,"t":{},"b":{"67":{}}}],["dt,vold)/dt*w",{"_index":14960,"t":{},"b":{"74":{}}}],["dt/10",{"_index":14495,"t":{},"b":{"67":{}}}],["dth",{"_index":1307,"t":{},"b":{"3":{}}}],["dtm1i",{"_index":14926,"t":{},"b":{"74":{}}}],["dtm1x",{"_index":14925,"t":{},"b":{"74":{}}}],["dtm1x*q",{"_index":14968,"t":{},"b":{"74":{}}}],["dtm1y*q",{"_index":14969,"t":{},"b":{"74":{}}}],["dtmi",{"_index":14924,"t":{},"b":{"74":{}}}],["dtmx",{"_index":14923,"t":{},"b":{"74":{}}}],["dtn",{"_index":3445,"t":{},"b":{"6":{}}}],["dttol",{"_index":1309,"t":{},"b":{"3":{}}}],["du",{"_index":5615,"t":{},"b":{"13":{},"75":{}}}],["du,\\quad",{"_index":11717,"t":{},"b":{"46":{}}}],["du,dv",{"_index":11712,"t":{},"b":{"46":{}}}],["du0dn",{"_index":5041,"t":{},"b":{"11":{}}}],["du0dn(0",{"_index":5063,"t":{},"b":{"11":{}}}],["du1",{"_index":14859,"t":{},"b":{"73":{}}}],["du1,du2",{"_index":14850,"t":{},"b":{"73":{}}}],["du1[].linfty/lu1",{"_index":14874,"t":{},"b":{"73":{}}}],["du1dn",{"_index":5036,"t":{},"b":{"11":{}}}],["du1dn(0",{"_index":5056,"t":{},"b":{"11":{}}}],["du2",{"_index":14860,"t":{},"b":{"73":{}}}],["du2[].linfty/lu2",{"_index":14875,"t":{},"b":{"73":{}}}],["du^0(x)/dx",{"_index":11070,"t":{},"b":{"41":{}}}],["dual",{"_index":360,"t":{},"b":{"2":{},"3":{},"11":{},"26":{},"41":{},"77":{}}}],["dualiti",{"_index":12372,"t":{},"b":{"50":{}}}],["due",{"_index":1018,"t":{},"b":{"3":{},"7":{},"10":{},"11":{},"13":{},"19":{},"21":{},"24":{},"35":{},"39":{},"42":{},"48":{},"72":{},"77":{}}}],["dump",{"_index":8539,"t":{},"b":{"19":{},"26":{}}}],["dumptabl",{"_index":13540,"t":{},"b":{"54":{}}}],["dumptable(cout",{"_index":2821,"t":{},"b":{"4":{}}}],["dumptable(out",{"_index":13541,"t":{},"b":{"54":{}}}],["dunod",{"_index":215,"t":{},"b":{"2":{}}}],["duplic",{"_index":3517,"t":{},"b":{"8":{},"10":{},"13":{}}}],["durat",{"_index":1295,"t":{},"b":{"3":{}}}],["dure",{"_index":1115,"t":{},"b":{"3":{},"9":{},"13":{},"15":{},"54":{}}}],["dv",{"_index":10184,"t":{},"b":{"37":{},"46":{}}}],["dv_{0",{"_index":10185,"t":{},"b":{"37":{}}}],["dvd",{"_index":2747,"t":{},"b":{"4":{}}}],["dvol",{"_index":1826,"t":{},"b":{"3":{},"20":{}}}],["dvol(0",{"_index":1824,"t":{},"b":{"3":{},"20":{}}}],["dvol(1,vh.ndof",{"_index":1823,"t":{},"b":{"3":{},"20":{}}}],["dvolume(0",{"_index":1811,"t":{},"b":{"3":{},"20":{}}}],["dvolume(u",{"_index":1809,"t":{},"b":{"3":{},"20":{}}}],["dx",{"_index":2643,"t":{},"b":{"4":{},"48":{},"54":{},"64":{},"72":{}}}],["dx(a1)(x1",{"_index":2962,"t":{},"b":{"4":{}}}],["dx(f",{"_index":7306,"t":{},"b":{"14":{}}}],["dx(hphi)*(vhphi",{"_index":12534,"t":{},"b":{"51":{}}}],["dx(hz",{"_index":12511,"t":{},"b":{"51":{}}}],["dx(p)*uu",{"_index":15243,"t":{},"b":{"78":{}}}],["dx(p)*w",{"_index":14953,"t":{},"b":{"74":{}}}],["dx(phi)*dx(w",{"_index":14749,"t":{},"b":{"72":{}}}],["dx(psi)*(region",{"_index":14428,"t":{},"b":{"66":{}}}],["dx(psi)*dx(phi",{"_index":11507,"t":{},"b":{"45":{}}}],["dx(psi)^2",{"_index":12018,"t":{},"b":{"48":{}}}],["dx(psi0)*dx(vh",{"_index":12000,"t":{},"b":{"48":{}}}],["dx(psi1)*dx(vh",{"_index":12005,"t":{},"b":{"48":{}}}],["dx(q)*dx(w)+dy(q)*dy(w",{"_index":14963,"t":{},"b":{"74":{}}}],["dx(r)*uh",{"_index":14500,"t":{},"b":{"67":{}}}],["dx(rh)*u",{"_index":14502,"t":{},"b":{"67":{}}}],["dx(rho)*dx(rho",{"_index":1741,"t":{},"b":{"3":{},"20":{}}}],["dx(u",{"_index":1378,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"21":{},"25":{},"40":{},"45":{},"46":{},"48":{},"54":{},"60":{},"61":{},"63":{},"71":{},"74":{},"76":{},"79":{}}}],["dx(u#x",{"_index":9365,"t":{},"b":{"25":{},"61":{}}}],["dx(u)*dx(u",{"_index":11681,"t":{},"b":{"46":{}}}],["dx(u)*dx(ush",{"_index":7966,"t":{},"b":{"15":{}}}],["dx(u)*dx(uu",{"_index":11341,"t":{},"b":{"43":{},"46":{},"78":{}}}],["dx(u)*dx(v",{"_index":5536,"t":{},"b":{"13":{},"15":{},"21":{},"24":{},"38":{},"48":{},"60":{},"62":{},"69":{},"76":{},"79":{}}}],["dx(u)*dx(v)*(x*sigx)^2/2",{"_index":11215,"t":{},"b":{"41":{}}}],["dx(u)*dx(vh",{"_index":11806,"t":{},"b":{"47":{}}}],["dx(u)*dy(u",{"_index":11683,"t":{},"b":{"46":{}}}],["dx(u)*dy(uu",{"_index":11687,"t":{},"b":{"46":{}}}],["dx(u)*dy(v))*rho*sigx*sigy*x*y/2",{"_index":11218,"t":{},"b":{"41":{}}}],["dx(u)*n.x",{"_index":11349,"t":{},"b":{"43":{}}}],["dx(u)+dy(v",{"_index":14269,"t":{},"b":{"64":{}}}],["dx(u),dy(u",{"_index":9302,"t":{},"b":{"24":{},"26":{},"66":{}}}],["dx(u),dy(u),dz(u",{"_index":7155,"t":{},"b":{"13":{},"48":{}}}],["dx(u0)*dx(v0",{"_index":12050,"t":{},"b":{"48":{}}}],["dx(u1",{"_index":9344,"t":{},"b":{"25":{},"37":{},"40":{},"42":{},"45":{},"73":{}}}],["dx(u1)*dx(u2",{"_index":4907,"t":{},"b":{"11":{},"39":{},"42":{},"45":{},"62":{}}}],["dx(u1)*dx(v1",{"_index":10476,"t":{},"b":{"38":{},"45":{}}}],["dx(u1)*q",{"_index":11271,"t":{},"b":{"42":{},"45":{}}}],["dx(u1)+dy(u2))*q",{"_index":12237,"t":{},"b":{"48":{}}}],["dx(u1)+dy(u2)+dz(u3",{"_index":6182,"t":{},"b":{"13":{}}}],["dx(u1),dy(u2),(dy(u1)+dx(u2))/sqrt2",{"_index":14266,"t":{},"b":{"64":{}}}],["dx(u1),dy(u2),dz(u3),(dz(u2)+dy(u3))/sqrt2,(dz(u1)+dx(u3))/sqrt2,(dy(u1)+dx(u2))/sqrt2",{"_index":6180,"t":{},"b":{"13":{}}}],["dx(u2",{"_index":10267,"t":{},"b":{"37":{},"45":{}}}],["dx(u2))/sqrt2",{"_index":10746,"t":{},"b":{"40":{}}}],["dx(u2)*dx(v2",{"_index":10481,"t":{},"b":{"38":{},"45":{}}}],["dx(u2),dy(u2",{"_index":14854,"t":{},"b":{"73":{}}}],["dx(u3))/sqrt2",{"_index":10745,"t":{},"b":{"40":{}}}],["dx(u3)*dx(v3",{"_index":7049,"t":{},"b":{"13":{}}}],["dx(uh)*dx(vh",{"_index":9247,"t":{},"b":{"21":{},"22":{},"48":{},"50":{}}}],["dx(us)*dx(v",{"_index":14586,"t":{},"b":{"69":{}}}],["dx(uu",{"_index":14233,"t":{},"b":{"63":{}}}],["dx(uu)*dy(u",{"_index":11689,"t":{},"b":{"46":{}}}],["dx(ux",{"_index":9232,"t":{},"b":{"21":{},"61":{}}}],["dx(uy",{"_index":9236,"t":{},"b":{"21":{}}}],["dx(v",{"_index":10866,"t":{},"b":{"40":{},"79":{}}}],["dx(v#x",{"_index":9168,"t":{},"b":{"21":{}}}],["dx(v)*dx(v))*0.5",{"_index":11682,"t":{},"b":{"46":{}}}],["dx(v)*dx(vsh",{"_index":7968,"t":{},"b":{"15":{}}}],["dx(v)*dx(vv",{"_index":11345,"t":{},"b":{"43":{},"46":{},"78":{},"80":{}}}],["dx(v)*dx(w",{"_index":14219,"t":{},"b":{"63":{}}}],["dx(v)*dx(w)+dy(v)*dy(w",{"_index":15432,"t":{},"b":{"81":{}}}],["dx(v)*dy(v",{"_index":11684,"t":{},"b":{"46":{}}}],["dx(v)*dy(vv",{"_index":11688,"t":{},"b":{"46":{}}}],["dx(v)+dy(u",{"_index":11676,"t":{},"b":{"46":{}}}],["dx(v)+dy(u))*(dx(s)+dy(w)))/4",{"_index":10856,"t":{},"b":{"40":{}}}],["dx(vhr",{"_index":12546,"t":{},"b":{"51":{}}}],["dx(vv)*dy(v",{"_index":11690,"t":{},"b":{"46":{}}}],["dx(w",{"_index":15316,"t":{},"b":{"79":{}}}],["dxaddmesh",{"_index":12634,"t":{},"b":{"53":{}}}],["dxaddsol2t",{"_index":12636,"t":{},"b":{"53":{}}}],["dxaddtimeseri",{"_index":12635,"t":{},"b":{"53":{}}}],["dxgpvortex",{"_index":12611,"t":{},"b":{"53":{}}}],["dxi",{"_index":13546,"t":{},"b":{"54":{}}}],["dxmin",{"_index":14285,"t":{},"b":{"64":{}}}],["dxrho2",{"_index":1740,"t":{},"b":{"3":{},"20":{}}}],["dxwriter",{"_index":12633,"t":{},"b":{"53":{}}}],["dxx",{"_index":13544,"t":{},"b":{"54":{}}}],["dxx(u",{"_index":4904,"t":{},"b":{"11":{},"48":{},"54":{}}}],["dxx(u)*dxx(v",{"_index":3898,"t":{},"b":{"11":{}}}],["dxy(u",{"_index":13547,"t":{},"b":{"54":{}}}],["dxz",{"_index":13548,"t":{},"b":{"54":{}}}],["dxz(u",{"_index":13550,"t":{},"b":{"54":{}}}],["dx||/||da",{"_index":12132,"t":{},"b":{"48":{}}}],["dy",{"_index":11864,"t":{},"b":{"48":{},"54":{}}}],["dy(du)*dy(uh",{"_index":15039,"t":{},"b":{"75":{}}}],["dy(err)^2",{"_index":12203,"t":{},"b":{"48":{}}}],["dy(err0)^2",{"_index":12199,"t":{},"b":{"48":{}}}],["dy(f)(p",{"_index":2583,"t":{},"b":{"4":{}}}],["dy(hphi)*x)*n.i",{"_index":12515,"t":{},"b":{"51":{}}}],["dy(hphi)*x)*n.x",{"_index":12521,"t":{},"b":{"51":{}}}],["dy(hr",{"_index":12510,"t":{},"b":{"51":{}}}],["dy(hz",{"_index":12550,"t":{},"b":{"51":{}}}],["dy(oldu)*dy(v",{"_index":11042,"t":{},"b":{"41":{}}}],["dy(p)*vv",{"_index":15244,"t":{},"b":{"78":{}}}],["dy(p)*w",{"_index":14961,"t":{},"b":{"74":{}}}],["dy(phi)*dy(w",{"_index":14750,"t":{},"b":{"72":{}}}],["dy(psi)*(region",{"_index":14427,"t":{},"b":{"66":{}}}],["dy(psi)*dy(phi",{"_index":11508,"t":{},"b":{"45":{}}}],["dy(psi)^2",{"_index":12019,"t":{},"b":{"48":{}}}],["dy(psi0)*dy(vh",{"_index":12001,"t":{},"b":{"48":{}}}],["dy(psi1)*dy(vh",{"_index":12006,"t":{},"b":{"48":{}}}],["dy(r)*vh",{"_index":14501,"t":{},"b":{"67":{}}}],["dy(rh)*v",{"_index":14503,"t":{},"b":{"67":{}}}],["dy(rho)*dy(rho",{"_index":1743,"t":{},"b":{"3":{},"20":{}}}],["dy(s))/2",{"_index":10859,"t":{},"b":{"40":{}}}],["dy(u",{"_index":1379,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"21":{},"25":{},"45":{},"48":{},"54":{},"60":{},"61":{},"63":{},"71":{},"76":{},"79":{}}}],["dy(u#i",{"_index":9366,"t":{},"b":{"25":{},"61":{}}}],["dy(u)(6.0*i/20.0",{"_index":4854,"t":{},"b":{"11":{}}}],["dy(u)(6.0*i/20.0,0.9",{"_index":15267,"t":{},"b":{"79":{}}}],["dy(u))*(dx(",{"_index":10884,"t":{},"b":{"40":{}}}],["dy(u)*dx(v",{"_index":11217,"t":{},"b":{"41":{}}}],["dy(u)*dy(u",{"_index":659,"t":{},"b":{"3":{},"20":{},"46":{},"47":{}}}],["dy(u)*dy(uh",{"_index":11805,"t":{},"b":{"47":{},"75":{}}}],["dy(u)*dy(ush",{"_index":7967,"t":{},"b":{"15":{}}}],["dy(u)*dy(uu",{"_index":11342,"t":{},"b":{"43":{},"46":{},"78":{},"80":{}}}],["dy(u)*dy(v",{"_index":4497,"t":{},"b":{"11":{},"13":{},"15":{},"21":{},"24":{},"38":{},"41":{},"48":{},"49":{},"60":{},"62":{},"68":{},"69":{},"71":{},"76":{}}}],["dy(u)*dy(v))*x",{"_index":15291,"t":{},"b":{"79":{}}}],["dy(u)*dy(v)*(y*sigy)^2/2",{"_index":11216,"t":{},"b":{"41":{}}}],["dy(u)*dy(vh",{"_index":11798,"t":{},"b":{"47":{}}}],["dy(u)*dy(vh))*(dx(u)*dx(uh",{"_index":11809,"t":{},"b":{"47":{}}}],["dy(u)*dy(w",{"_index":14950,"t":{},"b":{"74":{}}}],["dy(u)*n.i",{"_index":11350,"t":{},"b":{"43":{}}}],["dy(u0)*dy(v0",{"_index":12051,"t":{},"b":{"48":{}}}],["dy(u1",{"_index":10265,"t":{},"b":{"37":{},"40":{},"45":{},"73":{}}}],["dy(u1)*dy(u1",{"_index":10547,"t":{},"b":{"39":{}}}],["dy(u1)*dy(u2",{"_index":4908,"t":{},"b":{"11":{},"39":{},"42":{},"45":{},"62":{}}}],["dy(u1)*dy(v1",{"_index":10477,"t":{},"b":{"38":{},"45":{}}}],["dy(u1)*q",{"_index":11272,"t":{},"b":{"42":{},"45":{}}}],["dy(u1)+dx(u2))/sqrt2",{"_index":10729,"t":{},"b":{"40":{},"42":{}}}],["dy(u2",{"_index":9345,"t":{},"b":{"25":{},"37":{},"40":{},"42":{},"45":{},"73":{}}}],["dy(u2))*q",{"_index":4857,"t":{},"b":{"11":{}}}],["dy(u2)*dy(v2",{"_index":10482,"t":{},"b":{"38":{},"45":{}}}],["dy(u2)*q",{"_index":11502,"t":{},"b":{"45":{}}}],["dy(u3))/sqrt2",{"_index":10743,"t":{},"b":{"40":{}}}],["dy(u3)*dy(v3",{"_index":7050,"t":{},"b":{"13":{}}}],["dy(uh)*dy(vh",{"_index":662,"t":{},"b":{"3":{},"20":{},"21":{},"22":{},"47":{},"48":{},"50":{}}}],["dy(us)*dy(v",{"_index":14587,"t":{},"b":{"69":{}}}],["dy(uu",{"_index":14234,"t":{},"b":{"63":{}}}],["dy(uue)^2",{"_index":12195,"t":{},"b":{"48":{}}}],["dy(ux",{"_index":9235,"t":{},"b":{"21":{},"61":{}}}],["dy(uy",{"_index":9233,"t":{},"b":{"21":{},"61":{}}}],["dy(v",{"_index":10731,"t":{},"b":{"40":{},"46":{},"78":{},"79":{},"80":{}}}],["dy(v#i",{"_index":9169,"t":{},"b":{"21":{}}}],["dy(v))*(dx(w",{"_index":10858,"t":{},"b":{"40":{}}}],["dy(v))*psh",{"_index":7973,"t":{},"b":{"15":{}}}],["dy(v))*w/dt",{"_index":14964,"t":{},"b":{"74":{}}}],["dy(v)*dy(v))*0.5",{"_index":11685,"t":{},"b":{"46":{}}}],["dy(v)*dy(vsh",{"_index":7969,"t":{},"b":{"15":{}}}],["dy(v)*dy(vv",{"_index":11346,"t":{},"b":{"43":{},"46":{},"66":{},"78":{},"80":{}}}],["dy(v)*dy(w",{"_index":14958,"t":{},"b":{"74":{}}}],["dy(v)*dy(w))*(1",{"_index":14220,"t":{},"b":{"63":{}}}],["dy(v2))*p",{"_index":4861,"t":{},"b":{"11":{}}}],["dy(vhphi)*dy(hphi",{"_index":12541,"t":{},"b":{"51":{}}}],["dy(vhr))*(dx(hz",{"_index":12540,"t":{},"b":{"51":{}}}],["dy(vhz))*(dx(hr",{"_index":12552,"t":{},"b":{"51":{}}}],["dy(vhz))*(hr",{"_index":12547,"t":{},"b":{"51":{}}}],["dy(vsh",{"_index":7972,"t":{},"b":{"15":{}}}],["dy(vv",{"_index":15334,"t":{},"b":{"80":{}}}],["dy(w",{"_index":15317,"t":{},"b":{"79":{}}}],["dy(w)))/4",{"_index":10885,"t":{},"b":{"40":{}}}],["dy(w)*dy(vh",{"_index":640,"t":{},"b":{"3":{},"20":{}}}],["dy(w)*dy(w",{"_index":620,"t":{},"b":{"3":{},"20":{}}}],["dy\\p^2",{"_index":11865,"t":{},"b":{"48":{}}}],["dygpvortex",{"_index":12612,"t":{},"b":{"53":{}}}],["dyi",{"_index":13554,"t":{},"b":{"54":{}}}],["dymin",{"_index":14286,"t":{},"b":{"64":{}}}],["dynam",{"_index":719,"t":{},"b":{"3":{},"4":{},"15":{},"25":{},"29":{},"60":{}}}],["dynamic_lookup",{"_index":2812,"t":{},"b":{"4":{}}}],["dyrho2",{"_index":1742,"t":{},"b":{"3":{},"20":{}}}],["dyrho2*sin2",{"_index":1785,"t":{},"b":{"3":{},"20":{}}}],["dyx",{"_index":13551,"t":{},"b":{"54":{}}}],["dyx(u",{"_index":13552,"t":{},"b":{"54":{}}}],["dyy(u",{"_index":4905,"t":{},"b":{"11":{},"48":{},"54":{}}}],["dyy(u)*dyy(v",{"_index":3899,"t":{},"b":{"11":{}}}],["dyz",{"_index":13555,"t":{},"b":{"54":{}}}],["dyz(u",{"_index":13557,"t":{},"b":{"54":{}}}],["dz",{"_index":13558,"t":{},"b":{"54":{}}}],["dz(3",{"_index":15036,"t":{},"b":{"75":{}}}],["dz(u",{"_index":2993,"t":{},"b":{"5":{},"11":{},"13":{},"15":{},"25":{},"54":{}}}],["dz(u1",{"_index":10744,"t":{},"b":{"40":{}}}],["dz(u2",{"_index":10742,"t":{},"b":{"40":{}}}],["dz(u3",{"_index":9346,"t":{},"b":{"25":{},"40":{}}}],["dz(u3)*dz(v3",{"_index":7051,"t":{},"b":{"13":{}}}],["dz.n",{"_index":15041,"t":{},"b":{"75":{}}}],["dz[0]*ib+dz[1]*ic+dz[2]*id)*(dx(u)*dx(uh",{"_index":15040,"t":{},"b":{"75":{}}}],["dz[i",{"_index":15043,"t":{},"b":{"75":{}}}],["dz[j",{"_index":15042,"t":{},"b":{"75":{}}}],["dzi",{"_index":13563,"t":{},"b":{"54":{}}}],["dzx",{"_index":13559,"t":{},"b":{"54":{}}}],["dzx(u",{"_index":13561,"t":{},"b":{"54":{}}}],["dzy(u",{"_index":13565,"t":{},"b":{"54":{}}}],["dzz",{"_index":13566,"t":{},"b":{"54":{}}}],["dzz(u",{"_index":13567,"t":{},"b":{"54":{}}}],["d|\\left",{"_index":13843,"t":{},"b":{"59":{}}}],["d|g\\left(\\frac{1}{2}\\right",{"_index":13820,"t":{},"b":{"59":{}}}],["d}\\right",{"_index":14176,"t":{},"b":{"63":{}}}],["dérivé",{"_index":212,"t":{},"b":{"2":{}}}],["e",{"_index":44,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"20":{},"24":{},"40":{},"41":{},"42":{},"46":{},"48":{},"49":{},"51":{},"54":{},"63":{},"64":{},"67":{},"77":{},"81":{}}}],["e(10",{"_index":11260,"t":{},"b":{"42":{}}}],["e(4",{"_index":5456,"t":{},"b":{"13":{},"49":{}}}],["e(5*n",{"_index":5675,"t":{},"b":{"13":{}}}],["e(\\phi",{"_index":14723,"t":{},"b":{"72":{}}}],["e(\\theta",{"_index":13997,"t":{},"b":{"61":{}}}],["e(\\theta^{m+1",{"_index":14022,"t":{},"b":{"61":{}}}],["e(n",{"_index":12083,"t":{},"b":{"48":{}}}],["e(t",{"_index":5450,"t":{},"b":{"13":{},"15":{},"38":{},"42":{},"48":{},"49":{}}}],["e(t.edge(i",{"_index":2654,"t":{},"b":{"4":{}}}],["e(u",{"_index":11691,"t":{},"b":{"46":{}}}],["e(v",{"_index":14726,"t":{},"b":{"72":{}}}],["e*(t",{"_index":14195,"t":{},"b":{"63":{}}}],["e*nu/((1+nu)*(1",{"_index":14271,"t":{},"b":{"64":{}}}],["e*sigma/((1+sigma)*(1",{"_index":6171,"t":{},"b":{"13":{},"40":{},"42":{}}}],["e+f",{"_index":7279,"t":{},"b":{"14":{}}}],["e.g",{"_index":3098,"t":{},"b":{"5":{},"11":{},"17":{},"40":{},"45":{}}}],["e/(2*(1+nu",{"_index":14270,"t":{},"b":{"64":{}}}],["e/(2*(1+sigma",{"_index":6170,"t":{},"b":{"13":{},"40":{},"42":{}}}],["e/2",{"_index":14212,"t":{},"b":{"63":{}}}],["e1",{"_index":5873,"t":{},"b":{"13":{}}}],["e1(25*n",{"_index":7475,"t":{},"b":{"15":{},"38":{}}}],["e1(t",{"_index":5849,"t":{},"b":{"13":{},"15":{},"38":{}}}],["e2",{"_index":5875,"t":{},"b":{"13":{},"46":{}}}],["e2(t",{"_index":5852,"t":{},"b":{"13":{}}}],["e2[].max",{"_index":11767,"t":{},"b":{"46":{}}}],["e2[].min",{"_index":11768,"t":{},"b":{"46":{}}}],["e5x2",{"_index":9163,"t":{},"b":{"21":{}}}],["e[u_{1},u_{2",{"_index":11654,"t":{},"b":{"46":{}}}],["e\\),i.",{"_index":7289,"t":{},"b":{"14":{}}}],["e\\cap",{"_index":7276,"t":{},"b":{"14":{}}}],["e\\cup",{"_index":7275,"t":{},"b":{"14":{}}}],["e\\in\\mathbb{r}^{n",{"_index":1040,"t":{},"b":{"3":{}}}],["e\\ni",{"_index":7285,"t":{},"b":{"14":{}}}],["e\\nu\\ov",{"_index":14247,"t":{},"b":{"64":{}}}],["e\\ov",{"_index":14246,"t":{},"b":{"64":{}}}],["e\\setminu",{"_index":7277,"t":{},"b":{"14":{}}}],["e\\subset\\omega",{"_index":14990,"t":{},"b":{"75":{}}}],["e\\tim",{"_index":7280,"t":{},"b":{"14":{}}}],["e\\to",{"_index":7284,"t":{},"b":{"14":{}}}],["e^2",{"_index":7282,"t":{},"b":{"14":{}}}],["e^m_{1},e^m_{2",{"_index":2517,"t":{},"b":{"4":{}}}],["e^n",{"_index":7281,"t":{},"b":{"14":{}}}],["e^{\\varepsilon",{"_index":2862,"t":{},"b":{"4":{}}}],["e^{ik",{"_index":14130,"t":{},"b":{"62":{}}}],["e^{im\\phi",{"_index":12430,"t":{},"b":{"51":{}}}],["e^{n",{"_index":7283,"t":{},"b":{"14":{}}}],["e_11",{"_index":11694,"t":{},"b":{"46":{}}}],["e_2",{"_index":4251,"t":{},"b":{"11":{},"61":{}}}],["e_2)}{(vec",{"_index":4253,"t":{},"b":{"11":{}}}],["e_22",{"_index":11696,"t":{},"b":{"46":{}}}],["e_\\gamma",{"_index":15182,"t":{},"b":{"77":{}}}],["e_f0",{"_index":2779,"t":{},"b":{"4":{}}}],["e_f0_f",{"_index":2788,"t":{},"b":{"4":{}}}],["e_f0_f(f",{"_index":2801,"t":{},"b":{"4":{}}}],["e_f0_f(func",{"_index":2793,"t":{},"b":{"4":{}}}],["e_f0mp",{"_index":2780,"t":{},"b":{"4":{}}}],["e_i)}{(\\vec",{"_index":4254,"t":{},"b":{"11":{}}}],["e_k",{"_index":2922,"t":{},"b":{"4":{}}}],["e_k)_{k",{"_index":2930,"t":{},"b":{"4":{}}}],["e_{ij",{"_index":10656,"t":{},"b":{"40":{},"46":{}}}],["e_{ij})_{i",{"_index":11655,"t":{},"b":{"46":{}}}],["each",{"_index":814,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"21":{},"33":{},"37":{},"39":{},"41":{},"45":{},"48":{},"49":{},"56":{},"60":{},"64":{},"65":{},"66":{},"69":{},"70":{},"72":{},"76":{}}}],["earlier",{"_index":4523,"t":{},"b":{"11":{},"69":{}}}],["eas",{"_index":1892,"t":{},"b":{"3":{},"17":{}}}],["easi",{"_index":1599,"t":{},"b":{"3":{},"7":{},"12":{},"15":{},"19":{},"33":{},"41":{},"46":{},"56":{},"65":{},"76":{}}}],["easier",{"_index":1576,"t":{},"b":{"3":{},"5":{},"8":{}}}],["easiest",{"_index":14722,"t":{},"b":{"72":{},"76":{}}}],["easili",{"_index":3775,"t":{},"b":{"11":{},"13":{},"15":{},"18":{},"41":{},"49":{},"51":{},"77":{}}}],["eboundari",{"_index":6636,"t":{},"b":{"13":{}}}],["econst",{"_index":2136,"t":{},"b":{"3":{}}}],["edg",{"_index":2189,"t":{},"b":{"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"24":{},"40":{},"48":{},"54":{},"55":{},"59":{},"64":{},"71":{},"72":{},"76":{},"77":{},"79":{}}}],["edge03d",{"_index":3105,"t":{},"b":{"5":{},"11":{},"60":{}}}],["edge03ds0",{"_index":3374,"t":{},"b":{"5":{}}}],["edge0_{h",{"_index":3941,"t":{},"b":{"11":{}}}],["edge13d",{"_index":3958,"t":{},"b":{"11":{},"60":{}}}],["edge1_1(int",{"_index":2226,"t":{},"b":{"4":{}}}],["edge1_nce(int",{"_index":2228,"t":{},"b":{"4":{}}}],["edge23d",{"_index":3960,"t":{},"b":{"11":{},"60":{}}}],["edge2_1(int",{"_index":2227,"t":{},"b":{"4":{}}}],["edge2_nce(int",{"_index":2229,"t":{},"b":{"4":{}}}],["edge](int",{"_index":2219,"t":{},"b":{"4":{}}}],["edge_1(int",{"_index":2220,"t":{},"b":{"4":{}}}],["edge_neg(int",{"_index":2222,"t":{},"b":{"4":{}}}],["edgegeometry_1(int",{"_index":2221,"t":{},"b":{"4":{}}}],["edgegeometry_neg(int",{"_index":2223,"t":{},"b":{"4":{}}}],["edgemerg",{"_index":6514,"t":{},"b":{"13":{}}}],["edgeongeometricedg",{"_index":2218,"t":{},"b":{"4":{}}}],["edgeorient",{"_index":13745,"t":{},"b":{"55":{}}}],["edges.thi",{"_index":6513,"t":{},"b":{"13":{}}}],["edges](int",{"_index":2190,"t":{},"b":{"4":{}}}],["edgesupport_1(int",{"_index":2237,"t":{},"b":{"4":{}}}],["edgesupport_nvse(int",{"_index":2240,"t":{},"b":{"4":{}}}],["edge’",{"_index":6521,"t":{},"b":{"13":{}}}],["edit",{"_index":9894,"t":{},"b":{"34":{},"35":{}}}],["editor",{"_index":10151,"t":{},"b":{"35":{},"70":{}}}],["edit–run/visualize–revis",{"_index":14598,"t":{},"b":{"70":{}}}],["edmond",{"_index":466,"t":{},"b":{"2":{}}}],["edp",{"_index":1761,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"35":{},"39":{}}}],["edp.vim",{"_index":9852,"t":{},"b":{"32":{}}}],["educ",{"_index":91,"t":{},"b":{"2":{}}}],["ee",{"_index":5334,"t":{},"b":{"13":{},"21":{}}}],["ee(1,1",{"_index":9218,"t":{},"b":{"21":{}}}],["ee(1,2",{"_index":9220,"t":{},"b":{"21":{}}}],["ee(1,4",{"_index":9222,"t":{},"b":{"21":{}}}],["ee(1,5",{"_index":9224,"t":{},"b":{"21":{}}}],["ee(1,6",{"_index":9226,"t":{},"b":{"21":{}}}],["ee(2,1",{"_index":9219,"t":{},"b":{"21":{}}}],["ee(2,2",{"_index":9221,"t":{},"b":{"21":{}}}],["ee(2,4",{"_index":9223,"t":{},"b":{"21":{}}}],["ee(2,5",{"_index":9225,"t":{},"b":{"21":{}}}],["ee(2,6",{"_index":9227,"t":{},"b":{"21":{}}}],["ee(6",{"_index":9145,"t":{},"b":{"21":{}}}],["eep",{"_index":9166,"t":{},"b":{"21":{}}}],["eeps(1,1",{"_index":9228,"t":{},"b":{"21":{}}}],["eeps(1,2",{"_index":9230,"t":{},"b":{"21":{}}}],["eeps(2,1",{"_index":9229,"t":{},"b":{"21":{}}}],["eeps(2,2",{"_index":9231,"t":{},"b":{"21":{}}}],["eeps(4",{"_index":9146,"t":{},"b":{"21":{}}}],["ef1",{"_index":10381,"t":{},"b":{"37":{}}}],["ef2",{"_index":10382,"t":{},"b":{"37":{}}}],["effect",{"_index":2513,"t":{},"b":{"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"52":{},"66":{},"77":{},"79":{}}}],["effectslogo",{"_index":14370,"t":{"66":{}},"b":{}}],["effici",{"_index":3387,"t":{},"b":{"5":{},"7":{},"8":{},"10":{},"11":{},"15":{}}}],["effort",{"_index":3473,"t":{},"b":{"7":{},"76":{}}}],["eforcer",{"_index":10425,"t":{},"b":{"37":{}}}],["egd",{"_index":5325,"t":{},"b":{"13":{}}}],["egg",{"_index":5703,"t":{},"b":{"13":{}}}],["ehat1i",{"_index":10376,"t":{},"b":{"37":{}}}],["ehat1x",{"_index":10375,"t":{},"b":{"37":{}}}],["ehat2i",{"_index":10378,"t":{},"b":{"37":{}}}],["ehat2x",{"_index":10377,"t":{},"b":{"37":{}}}],["ehphi",{"_index":12559,"t":{},"b":{"51":{}}}],["ehphi[i]^2",{"_index":12568,"t":{},"b":{"51":{}}}],["ehr",{"_index":12558,"t":{},"b":{"51":{}}}],["ehsqr",{"_index":12503,"t":{},"b":{"51":{}}}],["ehz[i]^2",{"_index":12569,"t":{},"b":{"51":{}}}],["ehz](nev",{"_index":12560,"t":{},"b":{"51":{}}}],["eigen",{"_index":10496,"t":{"39":{}},"b":{"39":{},"41":{},"47":{},"51":{},"62":{}}}],["eigen.ep",{"_index":14162,"t":{},"b":{"62":{}}}],["eigensolv",{"_index":8313,"t":{},"b":{"17":{}}}],["eigenvalu",{"_index":243,"t":{},"b":{"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"16":{},"39":{},"51":{},"54":{},"62":{}}}],["eigenvalue(a,b,nev",{"_index":13570,"t":{},"b":{"54":{}}}],["eigenvalue(n",{"_index":10503,"t":{},"b":{"39":{}}}],["eigenvalue(op",{"_index":10502,"t":{},"b":{"39":{},"51":{},"62":{}}}],["eigenvector",{"_index":3262,"t":{},"b":{"5":{},"8":{},"9":{},"10":{},"12":{},"39":{},"51":{},"54":{},"62":{}}}],["el(u",{"_index":11675,"t":{},"b":{"46":{}}}],["el(u,v",{"_index":11692,"t":{},"b":{"46":{}}}],["el(uu",{"_index":11698,"t":{},"b":{"46":{}}}],["elasiticti",{"_index":8259,"t":{},"b":{"16":{}}}],["elast",{"_index":196,"t":{},"b":{"2":{},"6":{},"8":{},"10":{},"12":{},"13":{},"16":{},"37":{},"40":{},"42":{},"43":{},"46":{},"47":{},"48":{},"49":{},"64":{},"72":{},"77":{},"78":{}}}],["elasticity([uu",{"_index":11253,"t":{},"b":{"42":{}}}],["elasticity2",{"_index":11296,"t":{},"b":{"42":{}}}],["elasticitylogo",{"_index":10614,"t":{"40":{},"46":{},"64":{}},"b":{}}],["elasto",{"_index":254,"t":{},"b":{"2":{}}}],["electr",{"_index":11901,"t":{},"b":{"48":{},"51":{},"81":{}}}],["electro",{"_index":11935,"t":{},"b":{"48":{}}}],["electrod",{"_index":14623,"t":{},"b":{"71":{}}}],["electromagnet",{"_index":378,"t":{},"b":{"2":{},"8":{},"29":{},"51":{},"63":{},"81":{}}}],["electrostat",{"_index":11871,"t":{},"b":{"48":{},"71":{}}}],["elememt",{"_index":10167,"t":{},"b":{"36":{}}}],["element",{"_index":317,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"45":{},"48":{},"49":{},"51":{},"54":{},"56":{},"60":{},"65":{},"70":{},"71":{},"72":{},"75":{},"76":{},"77":{},"78":{},"81":{}}}],["element_hct",{"_index":3904,"t":{},"b":{"11":{}}}],["element_mixt",{"_index":3966,"t":{},"b":{"11":{},"60":{}}}],["element_mixte3d",{"_index":3959,"t":{},"b":{"11":{},"60":{}}}],["element_p1bl",{"_index":3841,"t":{},"b":{"11":{},"53":{}}}],["element_p2h.cpp",{"_index":2697,"t":{},"b":{"4":{}}}],["element_p2pnc",{"_index":3964,"t":{},"b":{"11":{}}}],["element_p3",{"_index":3855,"t":{},"b":{"11":{},"55":{},"60":{}}}],["element_p3.cpp",{"_index":2698,"t":{},"b":{"4":{}}}],["element_p3dc",{"_index":3858,"t":{},"b":{"11":{},"60":{}}}],["element_p4",{"_index":3862,"t":{},"b":{"11":{},"60":{}}}],["element_p4dc",{"_index":3865,"t":{},"b":{"11":{},"60":{}}}],["element_pkedg",{"_index":3870,"t":{},"b":{"11":{},"60":{}}}],["element_qf",{"_index":3986,"t":{},"b":{"11":{},"60":{}}}],["element_rt.cpp",{"_index":2699,"t":{},"b":{"4":{}}}],["elementari",{"_index":7296,"t":{},"b":{"14":{},"21":{},"48":{},"60":{}}}],["elementlogo",{"_index":3761,"t":{"11":{},"22":{}},"b":{}}],["elements,linear",{"_index":9873,"t":{},"b":{"33":{}}}],["elements.1",{"_index":6962,"t":{},"b":{"13":{}}}],["element’",{"_index":3989,"t":{},"b":{"11":{}}}],["elev",{"_index":9745,"t":{},"b":{"27":{},"72":{}}}],["elimin",{"_index":3574,"t":{},"b":{"8":{},"45":{}}}],["eliseo",{"_index":9900,"t":{},"b":{"34":{}}}],["ell",{"_index":3777,"t":{},"b":{"11":{},"15":{}}}],["ell(f,v",{"_index":4446,"t":{},"b":{"11":{},"49":{},"76":{}}}],["ellips",{"_index":10206,"t":{},"b":{"37":{},"65":{},"72":{},"76":{}}}],["ellipsoid",{"_index":6381,"t":{},"b":{"13":{},"51":{},"65":{}}}],["ellipsoide(r,r,r,h,l,orient",{"_index":6493,"t":{},"b":{"13":{}}}],["ellipsoide(r,r,r,h,l,ox,oy,oz,orient",{"_index":6494,"t":{},"b":{"13":{}}}],["ellipt",{"_index":173,"t":{},"b":{"2":{},"12":{},"37":{},"48":{},"65":{},"76":{}}}],["elsevi",{"_index":257,"t":{},"b":{"2":{}}}],["elsewher",{"_index":6773,"t":{},"b":{"13":{},"45":{},"63":{}}}],["elswher",{"_index":9429,"t":{},"b":{"26":{}}}],["emac",{"_index":9841,"t":{},"b":{"32":{},"35":{}}}],["embed",{"_index":11186,"t":{},"b":{"41":{}}}],["emc2",{"_index":6828,"t":{},"b":{"13":{}}}],["emit",{"_index":14172,"t":{},"b":{"63":{}}}],["emphasi",{"_index":8320,"t":{},"b":{"17":{}}}],["empir",{"_index":8170,"t":{},"b":{"15":{}}}],["employ",{"_index":10511,"t":{},"b":{"39":{}}}],["empti",{"_index":4469,"t":{},"b":{"11":{},"13":{},"14":{},"18":{},"24":{},"26":{},"54":{}}}],["emptymesh",{"_index":5407,"t":{},"b":{"13":{},"54":{}}}],["emptymesh(th",{"_index":5409,"t":{},"b":{"13":{},"24":{},"54":{}}}],["emptymesh.msh",{"_index":5428,"t":{},"b":{"13":{}}}],["emptyset",{"_index":4467,"t":{},"b":{"11":{},"14":{},"65":{}}}],["emtpi",{"_index":5426,"t":{},"b":{"13":{},"24":{}}}],["en",{"_index":15143,"t":{},"b":{"77":{}}}],["enabl",{"_index":866,"t":{},"b":{"3":{},"8":{},"35":{}}}],["enclos",{"_index":1575,"t":{},"b":{"3":{},"48":{},"60":{}}}],["enclosur",{"_index":11911,"t":{},"b":{"48":{},"69":{},"71":{}}}],["enclosure(t",{"_index":14640,"t":{},"b":{"71":{}}}],["encount",{"_index":1205,"t":{},"b":{"3":{}}}],["end",{"_index":1290,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"18":{},"26":{},"32":{},"35":{},"37":{},"39":{},"40":{},"45":{},"46":{},"52":{},"56":{},"60":{},"66":{},"69":{},"76":{},"77":{}}}],["endifmacro",{"_index":9179,"t":{},"b":{"21":{},"60":{}}}],["endl",{"_index":625,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"60":{},"61":{},"62":{},"64":{},"67":{},"72":{},"73":{},"74":{},"75":{},"76":{},"79":{}}}],["endmacro",{"_index":9175,"t":{},"b":{"21":{},"60":{}}}],["endpoint",{"_index":5154,"t":{},"b":{"13":{}}}],["end{aligned}\\end{split",{"_index":4243,"t":{},"b":{"11":{}}}],["end{array",{"_index":1033,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"41":{},"43":{},"45":{}}}],["end{array}\\end{split",{"_index":601,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"38":{},"40":{},"41":{},"42":{},"45":{},"46":{},"48":{},"49":{},"51":{},"54":{},"61":{},"62":{},"63":{},"64":{},"67":{},"68":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{}}}],["end{array}\\right",{"_index":1621,"t":{},"b":{"3":{},"11":{},"13":{},"40":{},"50":{},"68":{}}}],["end{array}\\right.\\end{split",{"_index":4805,"t":{},"b":{"11":{}}}],["end{array}\\right\\}\\quad",{"_index":11367,"t":{},"b":{"45":{}}}],["end{matrix}\\right",{"_index":14373,"t":{},"b":{"66":{}}}],["end{pmatrix",{"_index":4158,"t":{},"b":{"11":{},"51":{}}}],["end{split",{"_index":2889,"t":{},"b":{"4":{},"13":{}}}],["energi",{"_index":263,"t":{},"b":{"2":{},"37":{},"40":{},"72":{}}}],["engin",{"_index":5097,"t":{},"b":{"12":{},"13":{},"29":{},"40":{}}}],["engine.ep",{"_index":5805,"t":{},"b":{"13":{}}}],["england",{"_index":324,"t":{},"b":{"2":{}}}],["english",{"_index":9898,"t":{},"b":{"34":{},"76":{}}}],["enhanc",{"_index":3477,"t":{},"b":{"7":{}}}],["enl(u",{"_index":11680,"t":{},"b":{"46":{}}}],["enl(u,v",{"_index":11693,"t":{},"b":{"46":{}}}],["enlarg",{"_index":8557,"t":{},"b":{"19":{}}}],["enough",{"_index":5469,"t":{},"b":{"13":{},"46":{},"50":{},"69":{},"72":{},"79":{},"81":{}}}],["enrich",{"_index":3220,"t":{},"b":{"5":{},"8":{},"10":{}}}],["ensur",{"_index":3556,"t":{},"b":{"8":{},"13":{}}}],["entail",{"_index":1423,"t":{},"b":{"3":{}}}],["enter",{"_index":3270,"t":{},"b":{"5":{},"8":{},"10":{},"13":{},"19":{},"21":{},"60":{},"70":{}}}],["entir",{"_index":3465,"t":{},"b":{"7":{},"10":{},"13":{},"33":{}}}],["entri",{"_index":815,"t":{},"b":{"3":{},"8":{},"15":{}}}],["enum",{"_index":2586,"t":{},"b":{"4":{}}}],["environ",{"_index":2756,"t":{},"b":{"4":{},"5":{},"12":{},"35":{},"70":{}}}],["environn",{"_index":2733,"t":{},"b":{"4":{}}}],["eom",{"_index":2985,"t":{},"b":{"5":{},"7":{},"10":{},"13":{},"48":{}}}],["eorto",{"_index":12465,"t":{},"b":{"51":{}}}],["eorto*(dx(vhphi)*(hphi",{"_index":12532,"t":{},"b":{"51":{}}}],["eorto*(hphi",{"_index":12516,"t":{},"b":{"51":{}}}],["eorto*(vhphi*hphi",{"_index":12526,"t":{},"b":{"51":{}}}],["eorto*epara",{"_index":12542,"t":{},"b":{"51":{}}}],["ep",{"_index":543,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"20":{},"21":{},"24":{},"25":{},"38":{},"39":{},"42":{},"45":{},"48":{},"50":{},"53":{},"54":{},"60":{},"61":{},"62":{},"72":{},"73":{},"74":{},"75":{}}}],["epara",{"_index":12463,"t":{},"b":{"51":{}}}],["epara*((dx(vhz",{"_index":12539,"t":{},"b":{"51":{}}}],["epara*(hz*m",{"_index":12514,"t":{},"b":{"51":{}}}],["epara*m*(vhz*dy(hphi",{"_index":12536,"t":{},"b":{"51":{}}}],["epara*m^2*vhz*hz)/x",{"_index":12530,"t":{},"b":{"51":{}}}],["epcoh",{"_index":13652,"t":{},"b":{"54":{}}}],["epp",{"_index":14059,"t":{},"b":{"61":{}}}],["epp)*q",{"_index":14079,"t":{},"b":{"61":{}}}],["epp/kp",{"_index":14071,"t":{},"b":{"61":{}}}],["eps/2",{"_index":9091,"t":{},"b":{"21":{}}}],["epsilon",{"_index":544,"t":{},"b":{"3":{},"42":{},"45":{},"48":{},"51":{},"54":{},"61":{},"72":{},"74":{}}}],["epsilon(\\mathbf{u}):\\epsilon(\\mathbf{v",{"_index":14258,"t":{},"b":{"64":{}}}],["epsilon(\\mathbf{v})\\;dx",{"_index":14255,"t":{},"b":{"64":{}}}],["epsilon(p_h^{\\epsilon},q_h",{"_index":11474,"t":{},"b":{"45":{}}}],["epsilon(u",{"_index":14239,"t":{},"b":{"64":{}}}],["epsilon(u,v",{"_index":14275,"t":{},"b":{"64":{}}}],["epsilon(u1",{"_index":10728,"t":{},"b":{"40":{},"42":{}}}],["epsilon(u1,u2",{"_index":14265,"t":{},"b":{"64":{}}}],["epsilon(u1,u2,u3",{"_index":6179,"t":{},"b":{"13":{}}}],["epsilon(u1,u2,u3)'*epsilon(v1,v2,v3",{"_index":6186,"t":{},"b":{"13":{}}}],["epsilon(uu,vv",{"_index":14276,"t":{},"b":{"64":{}}}],["epsilon(v",{"_index":14268,"t":{},"b":{"64":{}}}],["epsilon(v1,v2",{"_index":14267,"t":{},"b":{"64":{}}}],["epsilon(w,s)'*epsilon(uu,vv",{"_index":10733,"t":{},"b":{"40":{}}}],["epsilon^m",{"_index":14031,"t":{},"b":{"61":{}}}],["epsilon_11",{"_index":11677,"t":{},"b":{"46":{}}}],["epsilon_22",{"_index":11679,"t":{},"b":{"46":{}}}],["epsilon_z",{"_index":12425,"t":{},"b":{"51":{}}}],["epsilon_{\\rho",{"_index":12424,"t":{},"b":{"51":{}}}],["epsilon_{ii}(\\mathbf{u})\\epsilon_{jj}(\\mathbf{v",{"_index":10717,"t":{},"b":{"40":{}}}],["epsilon_{ii}(v)\\epsilon_{jj}(\\mathbf{w})\\right",{"_index":11245,"t":{},"b":{"42":{}}}],["epsilon_{ij",{"_index":11237,"t":{},"b":{"42":{}}}],["epsilon_{ij}(u",{"_index":14240,"t":{},"b":{"64":{}}}],["epsilon||a(x_0)||_p",{"_index":13472,"t":{},"b":{"54":{}}}],["epsm",{"_index":9468,"t":{},"b":{"26":{}}}],["epsp",{"_index":14915,"t":{},"b":{"74":{}}}],["epspq",{"_index":11576,"t":{},"b":{"45":{}}}],["epss",{"_index":7626,"t":{},"b":{"15":{},"26":{}}}],["epsu",{"_index":14914,"t":{},"b":{"74":{}}}],["epsv",{"_index":14913,"t":{},"b":{"74":{}}}],["eq",{"_index":15136,"t":{},"b":{"76":{}}}],["eq1(u",{"_index":11213,"t":{},"b":{"41":{}}}],["equal",{"_index":896,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"41":{},"48":{},"54":{},"58":{},"60":{},"64":{},"69":{},"75":{},"76":{},"77":{}}}],["equat",{"_index":177,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"25":{},"33":{},"34":{},"40":{},"41":{},"42":{},"45":{},"48":{},"49":{},"50":{},"51":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["equation3",{"_index":15137,"t":{},"b":{"76":{}}}],["equationslogo",{"_index":11362,"t":{"45":{},"65":{},"68":{},"73":{},"74":{}},"b":{}}],["equi",{"_index":5559,"t":{},"b":{"13":{}}}],["equidist",{"_index":5969,"t":{},"b":{"13":{}}}],["equil",{"_index":7878,"t":{},"b":{"15":{}}}],["equilibrium",{"_index":10683,"t":{},"b":{"40":{},"48":{},"63":{},"69":{},"72":{}}}],["equiparamet",{"_index":12626,"t":{},"b":{"53":{}}}],["equipotenti",{"_index":11907,"t":{},"b":{"48":{}}}],["equiv",{"_index":7516,"t":{},"b":{"15":{},"65":{},"76":{},"77":{}}}],["equival",{"_index":3086,"t":{},"b":{"5":{},"8":{},"11":{},"13":{},"18":{},"41":{},"50":{},"51":{},"54":{},"60":{},"72":{},"79":{}}}],["erf",{"_index":13572,"t":{},"b":{"54":{}}}],["erf(x",{"_index":13573,"t":{},"b":{"54":{}}}],["erfc",{"_index":13576,"t":{},"b":{"54":{}}}],["erfc(x",{"_index":13577,"t":{},"b":{"54":{}}}],["ern",{"_index":406,"t":{},"b":{"2":{}}}],["ern2006",{"_index":405,"t":{},"b":{"2":{},"77":{}}}],["err",{"_index":753,"t":{},"b":{"3":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"39":{},"41":{},"42":{},"43":{},"48":{},"50":{},"54":{},"61":{},"67":{},"73":{},"74":{},"79":{}}}],["err0",{"_index":7484,"t":{},"b":{"15":{},"48":{},"67":{}}}],["err0/10",{"_index":14494,"t":{},"b":{"67":{}}}],["err0^2",{"_index":12200,"t":{},"b":{"48":{}}}],["err1",{"_index":7485,"t":{},"b":{"15":{}}}],["err^2",{"_index":12204,"t":{},"b":{"48":{}}}],["erradap",{"_index":11352,"t":{},"b":{"43":{}}}],["errc",{"_index":13578,"t":{},"b":{"54":{}}}],["erreur",{"_index":9251,"t":{},"b":{"21":{},"42":{}}}],["errg",{"_index":5548,"t":{},"b":{"13":{},"26":{},"54":{}}}],["errh1(10",{"_index":12054,"t":{},"b":{"48":{}}}],["errh1.max",{"_index":12065,"t":{},"b":{"48":{}}}],["errh1.min",{"_index":12066,"t":{},"b":{"48":{}}}],["errh1[i",{"_index":12060,"t":{},"b":{"48":{}}}],["errl2(10",{"_index":12053,"t":{},"b":{"48":{}}}],["errl2.max",{"_index":12063,"t":{},"b":{"48":{}}}],["errl2.min",{"_index":12064,"t":{},"b":{"48":{}}}],["errl2[i",{"_index":12056,"t":{},"b":{"48":{}}}],["errm",{"_index":7164,"t":{},"b":{"13":{}}}],["erro",{"_index":8626,"t":{},"b":{"20":{}}}],["error",{"_index":533,"t":{},"b":{"3":{},"11":{},"12":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"35":{},"41":{},"42":{},"43":{},"48":{},"50":{},"54":{},"56":{},"57":{},"60":{},"70":{},"71":{},"72":{},"74":{},"77":{},"79":{}}}],["error(u",{"_index":754,"t":{},"b":{"3":{},"20":{}}}],["error(u,b",{"_index":8633,"t":{},"b":{"20":{}}}],["error.bi",{"_index":5549,"t":{},"b":{"13":{}}}],["error.fals",{"_index":5561,"t":{},"b":{"13":{}}}],["error.hpp",{"_index":2525,"t":{},"b":{"4":{}}}],["error/2",{"_index":5537,"t":{},"b":{"13":{},"24":{},"48":{}}}],["error/2.0",{"_index":14657,"t":{},"b":{"71":{}}}],["error_in_step_comput",{"_index":1224,"t":{},"b":{"3":{}}}],["errv",{"_index":11351,"t":{},"b":{"43":{}}}],["es",{"_index":857,"t":{},"b":{"3":{}}}],["esaim",{"_index":100,"t":{},"b":{"2":{}}}],["esc",{"_index":8543,"t":{},"b":{"19":{}}}],["escap",{"_index":13979,"t":{},"b":{"61":{}}}],["especi",{"_index":3501,"t":{},"b":{"8":{},"81":{}}}],["essenc",{"_index":13772,"t":{},"b":{"56":{}}}],["essenti",{"_index":1048,"t":{},"b":{"3":{},"8":{},"15":{},"69":{}}}],["estim",{"_index":4276,"t":{},"b":{"11":{},"13":{},"15":{},"48":{}}}],["et",{"_index":134,"t":{},"b":{"2":{},"11":{},"15":{},"48":{},"60":{}}}],["eta",{"_index":4674,"t":{},"b":{"11":{},"48":{}}}],["eta(\\tau",{"_index":10632,"t":{},"b":{"40":{}}}],["eta.ep",{"_index":14493,"t":{},"b":{"67":{}}}],["eta_k",{"_index":4888,"t":{},"b":{"11":{}}}],["eta_n",{"_index":12273,"t":{},"b":{"48":{}}}],["eta_n(x",{"_index":12269,"t":{},"b":{"48":{}}}],["eta_{t",{"_index":12241,"t":{},"b":{"48":{}}}],["eta_{t}^{2",{"_index":12260,"t":{},"b":{"48":{}}}],["etak",{"_index":4872,"t":{},"b":{"11":{},"48":{}}}],["etak[].sum",{"_index":12290,"t":{},"b":{"48":{}}}],["etameam",{"_index":12283,"t":{},"b":{"48":{}}}],["etastar",{"_index":12288,"t":{},"b":{"48":{}}}],["etc",{"_index":793,"t":{},"b":{"3":{},"11":{},"35":{},"41":{},"56":{},"76":{}}}],["etc/freefem++.pref",{"_index":10132,"t":{},"b":{"35":{}}}],["eth",{"_index":13571,"t":{},"b":{"54":{}}}],["euclidean",{"_index":7273,"t":{},"b":{"14":{},"37":{}}}],["euler",{"_index":482,"t":{},"b":{"3":{},"41":{},"47":{},"67":{},"79":{}}}],["euler(u",{"_index":14496,"t":{},"b":{"67":{}}}],["european",{"_index":11172,"t":{},"b":{"41":{}}}],["ev",{"_index":10544,"t":{},"b":{"39":{},"51":{},"62":{}}}],["ev(0",{"_index":14159,"t":{},"b":{"62":{}}}],["ev(1",{"_index":14160,"t":{},"b":{"62":{}}}],["ev(f,omega",{"_index":10958,"t":{},"b":{"41":{}}}],["ev(nev",{"_index":10543,"t":{},"b":{"39":{},"51":{},"62":{}}}],["ev[0",{"_index":14161,"t":{},"b":{"62":{}}}],["ev[i",{"_index":10545,"t":{},"b":{"39":{}}}],["ev[i])*u1*u1",{"_index":10550,"t":{},"b":{"39":{}}}],["evalu",{"_index":784,"t":{},"b":{"3":{},"4":{},"13":{},"18":{},"47":{},"48":{},"54":{},"60":{},"75":{}}}],["even",{"_index":4506,"t":{},"b":{"11":{},"12":{},"13":{},"15":{},"26":{},"41":{},"48":{},"62":{},"76":{},"81":{}}}],["everyth",{"_index":5091,"t":{},"b":{"12":{}}}],["everywher",{"_index":1361,"t":{},"b":{"3":{},"11":{},"81":{}}}],["evolut",{"_index":757,"t":{"41":{}},"b":{"3":{},"33":{},"39":{},"41":{},"45":{}}}],["evolv",{"_index":9854,"t":{},"b":{"33":{},"81":{}}}],["evolving/genet",{"_index":2164,"t":{},"b":{"3":{}}}],["ewall(hr",{"_index":12509,"t":{},"b":{"51":{}}}],["ex",{"_index":14658,"t":{},"b":{"71":{}}}],["ex,ey",{"_index":14673,"t":{},"b":{"71":{}}}],["exact",{"_index":4627,"t":{},"b":{"11":{},"16":{},"21":{},"26":{},"39":{},"41":{},"48":{},"50":{},"59":{},"76":{},"77":{}}}],["exactli",{"_index":6533,"t":{},"b":{"13":{},"15":{},"21":{},"41":{},"60":{},"77":{}}}],["exactlli",{"_index":8216,"t":{},"b":{"15":{}}}],["exactpartit",{"_index":12637,"t":{},"b":{"53":{}}}],["examin",{"_index":8415,"t":{},"b":{"18":{}}}],["exampl",{"_index":503,"t":{"63":{}},"b":{"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"23":{},"25":{},"26":{},"31":{},"33":{},"35":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"60":{},"61":{},"63":{},"65":{},"68":{},"70":{},"71":{},"72":{},"74":{},"75":{},"76":{},"81":{}}}],["exampleslogo",{"_index":3438,"t":{"6":{},"16":{},"23":{},"70":{}},"b":{}}],["exce",{"_index":1944,"t":{},"b":{"3":{}}}],["except",{"_index":758,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"21":{},"40":{},"48":{},"52":{},"56":{},"60":{},"70":{},"72":{},"76":{}}}],["exchang",{"_index":3118,"t":{},"b":{"5":{},"10":{},"15":{},"62":{},"69":{},"72":{}}}],["exchangerlogo",{"_index":14544,"t":{"69":{}},"b":{}}],["excit",{"_index":14171,"t":{},"b":{"63":{}}}],["exclud",{"_index":1540,"t":{},"b":{"3":{},"5":{},"9":{}}}],["exec",{"_index":9246,"t":{},"b":{"21":{},"54":{}}}],["exec(\"c:\\\\cygwin\\\\bin\\\\ls.ex",{"_index":13721,"t":{},"b":{"54":{}}}],["exec(\"echo",{"_index":8588,"t":{},"b":{"19":{},"27":{}}}],["exec(\"ffmedit",{"_index":8602,"t":{},"b":{"19":{},"27":{}}}],["exec(\"medit",{"_index":6865,"t":{},"b":{"13":{}}}],["exec(\"rm",{"_index":8603,"t":{},"b":{"19":{},"27":{}}}],["exec(command",{"_index":13579,"t":{},"b":{"54":{}}}],["execerror",{"_index":9244,"t":{},"b":{"21":{}}}],["execut",{"_index":1251,"t":{},"b":{"3":{},"4":{},"12":{},"13":{},"35":{},"53":{},"54":{},"60":{},"64":{},"70":{},"71":{},"72":{},"76":{}}}],["exend",{"_index":4948,"t":{},"b":{"11":{}}}],["exept",{"_index":6567,"t":{},"b":{"13":{}}}],["exercis",{"_index":14580,"t":{},"b":{"69":{}}}],["exert",{"_index":14702,"t":{},"b":{"72":{}}}],["exhaust",{"_index":1895,"t":{},"b":{"3":{}}}],["exist",{"_index":3526,"t":{},"b":{"8":{},"11":{},"13":{},"14":{},"15":{},"18":{},"21":{},"35":{},"45":{},"48":{},"52":{},"60":{},"70":{},"72":{},"77":{},"79":{}}}],["exit",{"_index":13580,"t":{},"b":{"54":{}}}],["exit(1",{"_index":7468,"t":{},"b":{"15":{}}}],["exit(n",{"_index":13581,"t":{},"b":{"54":{}}}],["exp",{"_index":8737,"t":{},"b":{"20":{},"41":{},"54":{},"77":{}}}],["exp(b",{"_index":13583,"t":{},"b":{"54":{}}}],["exp(i",{"_index":13781,"t":{},"b":{"56":{}}}],["exp(pi*x*1i",{"_index":9011,"t":{},"b":{"21":{}}}],["expand",{"_index":12353,"t":{},"b":{"50":{}}}],["expans",{"_index":11122,"t":{},"b":{"41":{}}}],["expect",{"_index":807,"t":{},"b":{"3":{},"48":{},"52":{},"61":{},"65":{}}}],["expens",{"_index":2160,"t":{},"b":{"3":{},"11":{},"15":{},"26":{},"75":{}}}],["experi",{"_index":14612,"t":{},"b":{"70":{},"81":{}}}],["experiment",{"_index":7822,"t":{},"b":{"15":{},"81":{}}}],["expert",{"_index":2668,"t":{},"b":{"4":{},"13":{},"29":{},"53":{}}}],["explain",{"_index":5267,"t":{},"b":{"13":{},"14":{},"40":{},"49":{},"60":{},"71":{}}}],["explan",{"_index":6807,"t":{},"b":{"13":{},"15":{},"35":{}}}],["explanatori",{"_index":14996,"t":{},"b":{"75":{}}}],["explicit",{"_index":6536,"t":{},"b":{"13":{},"16":{},"70":{}}}],["explicitli",{"_index":4549,"t":{},"b":{"11":{},"13":{},"51":{},"54":{},"76":{}}}],["explicitly.fals",{"_index":5585,"t":{},"b":{"13":{}}}],["expon",{"_index":5591,"t":{},"b":{"13":{},"54":{}}}],["exponenti",{"_index":13582,"t":{},"b":{"54":{},"60":{}}}],["export",{"_index":2900,"t":{},"b":{"4":{},"13":{},"19":{},"35":{},"71":{}}}],["expos",{"_index":3026,"t":{},"b":{"5":{}}}],["exposit",{"_index":10189,"t":{},"b":{"37":{}}}],["express",{"_index":1059,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"48":{},"50":{},"51":{},"58":{},"60":{},"66":{}}}],["expression.set",{"_index":6732,"t":{},"b":{"13":{}}}],["expression.thes",{"_index":6001,"t":{},"b":{"13":{}}}],["expression.thi",{"_index":6671,"t":{},"b":{"13":{}}}],["expression.when",{"_index":6155,"t":{},"b":{"13":{}}}],["expressionequ",{"_index":6515,"t":{},"b":{"13":{}}}],["expression’",{"_index":13882,"t":{},"b":{"60":{}}}],["extend",{"_index":1022,"t":{},"b":{"3":{},"9":{},"11":{},"13":{},"15":{},"16":{}}}],["extens",{"_index":228,"t":{},"b":{"2":{},"4":{},"10":{},"11":{},"13":{},"35":{},"36":{},"37":{},"54":{},"72":{}}}],["exterieur",{"_index":12147,"t":{},"b":{"48":{}}}],["exterior",{"_index":6279,"t":{},"b":{"13":{},"15":{},"65":{}}}],["extern",{"_index":852,"t":{"53":{}},"b":{"3":{},"4":{},"13":{},"19":{},"37":{},"44":{},"48":{},"52":{},"53":{},"54":{},"55":{},"60":{}}}],["extra",{"_index":7898,"t":{},"b":{"15":{}}}],["extra_dist",{"_index":2684,"t":{},"b":{"4":{}}}],["extract",{"_index":6207,"t":{},"b":{"13":{},"35":{},"36":{},"53":{}}}],["extract(th,[x+2,y*5],refedg",{"_index":6649,"t":{},"b":{"13":{}}}],["extract(th,label",{"_index":6210,"t":{},"b":{"13":{}}}],["extractbord",{"_index":12621,"t":{},"b":{"53":{}}}],["extractborder(th",{"_index":12622,"t":{},"b":{"53":{}}}],["extraordinari",{"_index":12462,"t":{},"b":{"51":{}}}],["ey",{"_index":14600,"t":{},"b":{"70":{},"71":{}}}],["e}(\\mathbf{v};{\\c",{"_index":10761,"t":{},"b":{"40":{}}}],["e}_t",{"_index":12258,"t":{},"b":{"48":{}}}],["f",{"_index":66,"t":{},"b":{"2":{},"3":{},"4":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"30":{},"33":{},"37":{},"38":{},"41":{},"43":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"56":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"70":{},"72":{},"73":{},"75":{},"76":{}}}],["f''(f2(\\mathbf{u",{"_index":11670,"t":{},"b":{"46":{}}}],["f''(u",{"_index":8647,"t":{},"b":{"20":{}}}],["f''(x",{"_index":599,"t":{},"b":{"3":{},"47":{}}}],["f'()*(dx(u)*dx(vh",{"_index":11797,"t":{},"b":{"47":{}}}],["f'()*(dx(uh)*dx(vh",{"_index":11803,"t":{},"b":{"47":{}}}],["f'(f2(\\mathbf{u",{"_index":11664,"t":{},"b":{"46":{}}}],["f'(u",{"_index":8645,"t":{},"b":{"20":{}}}],["f'(x",{"_index":597,"t":{},"b":{"3":{},"47":{}}}],["f'(|\\nabla",{"_index":657,"t":{},"b":{"3":{}}}],["f'\\),\\(f",{"_index":11719,"t":{},"b":{"46":{}}}],["f(\"j.txt",{"_index":15030,"t":{},"b":{"75":{}}}],["f(\"modes.txt",{"_index":12562,"t":{},"b":{"51":{}}}],["f(\"toto.txt",{"_index":9114,"t":{},"b":{"21":{}}}],["f(\"u.txt",{"_index":14517,"t":{},"b":{"67":{}}}],["f((n+1)*tau",{"_index":11047,"t":{},"b":{"41":{}}}],["f(10",{"_index":11259,"t":{},"b":{"42":{}}}],["f(10*n",{"_index":5676,"t":{},"b":{"13":{}}}],["f(6",{"_index":5457,"t":{},"b":{"13":{},"49":{}}}],["f(8*n",{"_index":11318,"t":{},"b":{"43":{}}}],["f(\\boldx",{"_index":13815,"t":{},"b":{"59":{}}}],["f(\\boldxi_\\el",{"_index":13813,"t":{},"b":{"59":{}}}],["f(\\frac{\\sum_i",{"_index":4107,"t":{},"b":{"11":{}}}],["f(\\hat{x",{"_index":4185,"t":{},"b":{"11":{}}}],["f(\\mathbf{\\xi}_\\el",{"_index":4605,"t":{},"b":{"11":{}}}],["f(\\mathbf{u},p",{"_index":14815,"t":{},"b":{"73":{}}}],["f(f2",{"_index":11647,"t":{},"b":{"46":{}}}],["f(ff",{"_index":2794,"t":{},"b":{"4":{}}}],["f(g(x",{"_index":13888,"t":{},"b":{"60":{}}}],["f(g(x))\\in",{"_index":7295,"t":{},"b":{"14":{}}}],["f(k/n,l/m",{"_index":2883,"t":{},"b":{"4":{}}}],["f(n*tau",{"_index":11046,"t":{},"b":{"41":{}}}],["f(p),dx(f)(p",{"_index":2582,"t":{},"b":{"4":{}}}],["f(q",{"_index":4383,"t":{},"b":{"11":{}}}],["f(q^0_j",{"_index":4403,"t":{},"b":{"11":{}}}],["f(real",{"_index":8649,"t":{},"b":{"20":{}}}],["f(t",{"_index":5451,"t":{},"b":{"13":{},"42":{},"43":{},"49":{}}}],["f(t),v)\\qquad",{"_index":10962,"t":{},"b":{"41":{}}}],["f(u",{"_index":8642,"t":{},"b":{"20":{},"46":{},"73":{}}}],["f(u+\\delta",{"_index":14813,"t":{},"b":{"73":{}}}],["f(u_i",{"_index":14811,"t":{},"b":{"73":{}}}],["f(x",{"_index":593,"t":{},"b":{"3":{},"13":{},"47":{},"60":{},"72":{}}}],["f(x),\\alpha(x)\\in",{"_index":14323,"t":{},"b":{"65":{}}}],["f(x)/g(x",{"_index":13887,"t":{},"b":{"60":{}}}],["f(x)\\in",{"_index":7287,"t":{},"b":{"14":{}}}],["f(x)g(x",{"_index":13886,"t":{},"b":{"60":{}}}],["f(x,i",{"_index":2878,"t":{},"b":{"4":{},"11":{},"13":{},"76":{}}}],["f(x.i",{"_index":4140,"t":{},"b":{"11":{}}}],["f(x1",{"_index":2941,"t":{},"b":{"4":{}}}],["f(x1+hx",{"_index":2939,"t":{},"b":{"4":{}}}],["f(x_{\\mu",{"_index":995,"t":{},"b":{"3":{}}}],["f(|\\nabla",{"_index":590,"t":{},"b":{"3":{},"47":{}}}],["f(|nabla",{"_index":615,"t":{},"b":{"3":{},"20":{}}}],["f)(v*v",{"_index":11353,"t":{},"b":{"43":{}}}],["f)*vh",{"_index":12089,"t":{},"b":{"48":{}}}],["f*v",{"_index":1384,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"21":{},"24":{},"48":{},"60":{},"76":{}}}],["f*v0",{"_index":12052,"t":{},"b":{"48":{}}}],["f*vh",{"_index":9248,"t":{},"b":{"21":{},"48":{},"50":{}}}],["f*vv",{"_index":14277,"t":{},"b":{"64":{}}}],["f*w",{"_index":4596,"t":{},"b":{"11":{},"72":{}}}],["f+e*(t",{"_index":14192,"t":{},"b":{"63":{}}}],["f,\\;\\mbox{in}\\;\\omega",{"_index":10435,"t":{},"b":{"38":{}}}],["f.default",{"_index":12602,"t":{},"b":{"52":{}}}],["f.fix",{"_index":12590,"t":{},"b":{"52":{}}}],["f.hecht",{"_index":9877,"t":{},"b":{"33":{}}}],["f.noshowbas",{"_index":12596,"t":{},"b":{"52":{}}}],["f.noshowpo",{"_index":12601,"t":{},"b":{"52":{}}}],["f.precision(11",{"_index":12565,"t":{},"b":{"51":{}}}],["f.precision(n",{"_index":12588,"t":{},"b":{"52":{}}}],["f.scientif",{"_index":12589,"t":{},"b":{"52":{}}}],["f.setw(n",{"_index":12605,"t":{},"b":{"52":{}}}],["f.showbas",{"_index":12593,"t":{},"b":{"52":{}}}],["f.showpo",{"_index":12599,"t":{},"b":{"52":{}}}],["f/\\partial",{"_index":5518,"t":{},"b":{"13":{},"14":{}}}],["f0",{"_index":11029,"t":{},"b":{"41":{}}}],["f0(val",{"_index":2626,"t":{},"b":{"4":{}}}],["f0[0",{"_index":2632,"t":{},"b":{"4":{}}}],["f0[1",{"_index":2636,"t":{},"b":{"4":{}}}],["f0[2",{"_index":2640,"t":{},"b":{"4":{}}}],["f1",{"_index":1426,"t":{},"b":{"3":{},"4":{},"13":{},"20":{},"21":{},"24":{},"25":{},"41":{}}}],["f1(val",{"_index":2628,"t":{},"b":{"4":{}}}],["f1(x",{"_index":4327,"t":{},"b":{"11":{}}}],["f1*v1",{"_index":1446,"t":{},"b":{"3":{},"13":{}}}],["f1,f2",{"_index":5541,"t":{},"b":{"13":{}}}],["f1,f2,f3],orient",{"_index":6486,"t":{},"b":{"13":{}}}],["f11(u1",{"_index":10269,"t":{},"b":{"37":{}}}],["f12(u1",{"_index":10270,"t":{},"b":{"37":{}}}],["f1[0",{"_index":2630,"t":{},"b":{"4":{}}}],["f1[1",{"_index":2634,"t":{},"b":{"4":{}}}],["f1[2",{"_index":2638,"t":{},"b":{"4":{}}}],["f1h",{"_index":4325,"t":{},"b":{"11":{}}}],["f1i",{"_index":6301,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f1max",{"_index":6334,"t":{},"b":{"13":{}}}],["f1min",{"_index":6326,"t":{},"b":{"13":{}}}],["f1min,f2min,f3min",{"_index":6741,"t":{},"b":{"13":{}}}],["f1phith3.sol",{"_index":2410,"t":{},"b":{"4":{}}}],["f1x",{"_index":6300,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f1x*f1i",{"_index":6313,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f1x*f1y+f2x*f2y+f3x*f3i",{"_index":6479,"t":{},"b":{"13":{}}}],["f1x^2",{"_index":6309,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f1x^2+f2x^2+f3x^2",{"_index":6478,"t":{},"b":{"13":{}}}],["f1y^2",{"_index":6317,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f1y^2+f2y^2+f3y^2",{"_index":6480,"t":{},"b":{"13":{}}}],["f2",{"_index":1429,"t":{},"b":{"3":{},"4":{},"13":{},"20":{},"21":{},"24":{},"25":{},"46":{}}}],["f2(u",{"_index":11701,"t":{},"b":{"46":{}}}],["f2(u_{1},u_{2",{"_index":11650,"t":{},"b":{"46":{}}}],["f2(un",{"_index":11764,"t":{},"b":{"46":{}}}],["f2(x",{"_index":4328,"t":{},"b":{"11":{}}}],["f2*v2",{"_index":1447,"t":{},"b":{"3":{}}}],["f21(u1",{"_index":10271,"t":{},"b":{"37":{}}}],["f22(u1",{"_index":10272,"t":{},"b":{"37":{}}}],["f2h",{"_index":4326,"t":{},"b":{"11":{}}}],["f2i",{"_index":6304,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f2max",{"_index":6336,"t":{},"b":{"13":{}}}],["f2min",{"_index":6328,"t":{},"b":{"13":{}}}],["f2psist2dth3.solb",{"_index":2419,"t":{},"b":{"4":{}}}],["f2x",{"_index":6302,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f2x*f2i",{"_index":6314,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f2x^2",{"_index":6310,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f2y^2",{"_index":6318,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3",{"_index":6299,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3i",{"_index":6306,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3max",{"_index":6338,"t":{},"b":{"13":{}}}],["f3min",{"_index":6330,"t":{},"b":{"13":{}}}],["f3x",{"_index":6305,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3x*f3i",{"_index":6315,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3x^2",{"_index":6311,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f3y^2",{"_index":6319,"t":{},"b":{"13":{},"24":{},"25":{}}}],["f77",{"_index":10015,"t":{},"b":{"35":{}}}],["f:\\mathbb{r}^d\\to",{"_index":7305,"t":{},"b":{"14":{}}}],["f:\\mathbb{r}^{n}\\mapsto\\mathbb{r",{"_index":921,"t":{},"b":{"3":{}}}],["f:\\omega\\to",{"_index":7307,"t":{},"b":{"14":{}}}],["f[]'*g",{"_index":9029,"t":{},"b":{"21":{}}}],["f[]*g",{"_index":9032,"t":{},"b":{"21":{}}}],["f[].*g",{"_index":9026,"t":{},"b":{"21":{}}}],["f[]./g",{"_index":9028,"t":{},"b":{"21":{}}}],["f\\,w",{"_index":4561,"t":{},"b":{"11":{}}}],["f\\;\\;\\textrm{i.",{"_index":11102,"t":{},"b":{"41":{}}}],["f\\;\\mbox{in}\\;\\omega",{"_index":10449,"t":{},"b":{"38":{}}}],["f\\;\\mbox{in}\\;\\omega_1\\quad",{"_index":10439,"t":{},"b":{"38":{}}}],["f\\;\\mbox{in}\\;\\omega_2\\quad",{"_index":10443,"t":{},"b":{"38":{}}}],["f\\;\\mbox{in}\\;\\omega_i\\quad",{"_index":10453,"t":{},"b":{"38":{}}}],["f\\circ",{"_index":7292,"t":{},"b":{"14":{}}}],["f\\ge",{"_index":4287,"t":{},"b":{"11":{}}}],["f\\in",{"_index":4379,"t":{},"b":{"11":{},"41":{}}}],["f\\left(\\varphi(x),{\\partial\\varphi\\over\\parti",{"_index":14306,"t":{},"b":{"65":{}}}],["f\\left(x",{"_index":11105,"t":{},"b":{"41":{}}}],["f\\n",{"_index":8475,"t":{},"b":{"18":{}}}],["f\\nonumb",{"_index":12224,"t":{},"b":{"48":{}}}],["f\\quad",{"_index":11867,"t":{},"b":{"48":{}}}],["f\\to",{"_index":7293,"t":{},"b":{"14":{}}}],["f^\\star",{"_index":12348,"t":{},"b":{"50":{}}}],["f^m",{"_index":11112,"t":{},"b":{"41":{}}}],["f^{m+1",{"_index":10912,"t":{},"b":{"41":{}}}],["f^{m+1}\\}v",{"_index":10920,"t":{},"b":{"41":{}}}],["f^{m+1}v",{"_index":10926,"t":{},"b":{"41":{}}}],["f^{n+1}+(1",{"_index":10989,"t":{},"b":{"41":{}}}],["f^{n+\\theta",{"_index":10988,"t":{},"b":{"41":{}}}],["f^{n+\\theta},\\phi_i\\rangl",{"_index":10980,"t":{},"b":{"41":{}}}],["f_1",{"_index":10873,"t":{},"b":{"40":{}}}],["f_1(x,i",{"_index":10874,"t":{},"b":{"40":{}}}],["f_1,f_2,f_3",{"_index":10679,"t":{},"b":{"40":{}}}],["f_1/\\partial",{"_index":7312,"t":{},"b":{"14":{}}}],["f_2/\\partial",{"_index":7314,"t":{},"b":{"14":{}}}],["f_3",{"_index":10695,"t":{},"b":{"40":{}}}],["f_h",{"_index":4104,"t":{},"b":{"11":{}}}],["f_h(x,i",{"_index":4105,"t":{},"b":{"11":{}}}],["f_i",{"_index":2861,"t":{},"b":{"4":{},"13":{},"76":{}}}],["f_i)_{i",{"_index":15130,"t":{},"b":{"76":{}}}],["f_i~~\\textrm{in",{"_index":10686,"t":{},"b":{"40":{}}}],["f_n",{"_index":12271,"t":{},"b":{"48":{}}}],["f_x",{"_index":6628,"t":{},"b":{"13":{}}}],["f_z",{"_index":6629,"t":{},"b":{"13":{}}}],["f_{1",{"_index":1399,"t":{},"b":{"3":{}}}],["f_{1}v_{1",{"_index":1419,"t":{},"b":{"3":{}}}],["f_{2",{"_index":1972,"t":{},"b":{"3":{}}}],["f_{2}\\in",{"_index":1400,"t":{},"b":{"3":{}}}],["f_{2}v_{2",{"_index":1422,"t":{},"b":{"3":{}}}],["f_{i+nj",{"_index":2868,"t":{},"b":{"4":{}}}],["f_{k+nl",{"_index":2882,"t":{},"b":{"4":{}}}],["f_{kl",{"_index":2885,"t":{},"b":{"4":{}}}],["face",{"_index":4084,"t":{},"b":{"11":{},"13":{},"24":{},"40":{},"54":{},"74":{}}}],["facemerg",{"_index":6011,"t":{},"b":{"13":{},"54":{}}}],["faces.thi",{"_index":6154,"t":{},"b":{"13":{}}}],["facet",{"_index":6669,"t":{},"b":{"13":{}}}],["facetcl",{"_index":6697,"t":{},"b":{"13":{},"53":{}}}],["facetconstraintlist",{"_index":6698,"t":{},"b":{"13":{}}}],["facil",{"_index":7813,"t":{},"b":{"15":{},"72":{}}}],["fact",{"_index":1204,"t":{},"b":{"3":{},"10":{},"15":{},"21":{},"49":{},"80":{}}}],["factor",{"_index":671,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"15":{},"20":{},"39":{},"40":{},"47":{},"51":{},"60":{},"62":{},"64":{},"66":{},"70":{},"72":{}}}],["factoris",{"_index":4519,"t":{},"b":{"11":{}}}],["factorizatioon",{"_index":9724,"t":{},"b":{"26":{}}}],["fade",{"_index":8569,"t":{},"b":{"19":{},"27":{}}}],["fail",{"_index":1306,"t":{},"b":{"3":{},"8":{},"18":{},"35":{}}}],["failur",{"_index":1217,"t":{},"b":{"3":{}}}],["fall",{"_index":7138,"t":{},"b":{"13":{},"18":{}}}],["fals",{"_index":1189,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"24":{},"54":{},"55":{},"60":{},"70":{}}}],["famili",{"_index":3584,"t":{},"b":{"8":{},"76":{}}}],["famou",{"_index":12025,"t":{},"b":{"48":{}}}],["fan",{"_index":14368,"t":{"66":{}},"b":{"66":{},"77":{},"79":{}}}],["far",{"_index":3717,"t":{},"b":{"10":{},"33":{}}}],["fashion",{"_index":8321,"t":{},"b":{"17":{}}}],["fast",{"_index":2850,"t":{},"b":{"4":{},"11":{},"12":{},"33":{},"34":{},"40":{},"50":{},"60":{},"68":{},"73":{}}}],["faster",{"_index":2403,"t":{},"b":{"4":{},"11":{},"66":{},"68":{},"73":{},"79":{}}}],["fatal",{"_index":9255,"t":{},"b":{"21":{}}}],["fb",{"_index":10505,"t":{},"b":{"39":{}}}],["fb(const",{"_index":2562,"t":{},"b":{"4":{}}}],["fb(real[int",{"_index":10509,"t":{},"b":{"39":{}}}],["fb1",{"_index":10513,"t":{},"b":{"39":{}}}],["fc",{"_index":10014,"t":{},"b":{"35":{}}}],["fd",{"_index":12376,"t":{},"b":{"50":{},"54":{}}}],["fdim",{"_index":13584,"t":{},"b":{"54":{}}}],["fdim(a",{"_index":13586,"t":{},"b":{"54":{}}}],["fdtd",{"_index":12407,"t":{},"b":{"51":{}}}],["fe",{"_index":2540,"t":{},"b":{"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"21":{},"26":{},"27":{},"36":{},"38":{},"39":{},"41":{},"45":{},"48":{},"51":{},"60":{}}}],["fe2",{"_index":11750,"t":{},"b":{"46":{}}}],["fe_add.cpp",{"_index":2523,"t":{},"b":{"4":{}}}],["feasible_point_found",{"_index":1228,"t":{},"b":{"3":{}}}],["featur",{"_index":1047,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"12":{},"34":{},"35":{},"36":{},"56":{}}}],["featureslogo",{"_index":10162,"t":{"36":{}},"b":{}}],["feb",{"_index":9830,"t":{},"b":{"32":{}}}],["fecoars",{"_index":3413,"t":{},"b":{"5":{}}}],["fedk[mpirank",{"_index":3707,"t":{},"b":{"10":{}}}],["fedora",{"_index":9982,"t":{},"b":{"35":{}}}],["feel",{"_index":11285,"t":{},"b":{"42":{}}}],["feet",{"_index":13982,"t":{},"b":{"61":{}}}],["fef1",{"_index":8705,"t":{},"b":{"20":{}}}],["fef1[i",{"_index":8711,"t":{},"b":{"20":{}}}],["fef2",{"_index":8706,"t":{},"b":{"20":{}}}],["fef2[i",{"_index":8713,"t":{},"b":{"20":{}}}],["feftossp",{"_index":8704,"t":{},"b":{"20":{}}}],["feftossp(ou1",{"_index":8725,"t":{},"b":{"20":{}}}],["fem",{"_index":3762,"t":{},"b":{"11":{},"13":{},"16":{},"36":{},"41":{},"51":{},"67":{},"72":{},"76":{},"77":{}}}],["fem.cpp",{"_index":2701,"t":{},"b":{"4":{}}}],["fem.hpp",{"_index":2530,"t":{},"b":{"4":{}}}],["fem2d",{"_index":2533,"t":{},"b":{"4":{}}}],["fem3.hpp",{"_index":2700,"t":{},"b":{"4":{}}}],["femlib/matricecreuse_tpl.hpp",{"_index":9257,"t":{},"b":{"21":{}}}],["femp0",{"_index":5311,"t":{},"b":{"13":{}}}],["femp0(th",{"_index":5310,"t":{},"b":{"13":{}}}],["femp1",{"_index":5285,"t":{},"b":{"13":{},"48":{}}}],["femp1(disk",{"_index":11879,"t":{},"b":{"48":{}}}],["femp1(th",{"_index":5284,"t":{},"b":{"13":{}}}],["feqf",{"_index":3985,"t":{},"b":{"11":{},"60":{}}}],["feqf1",{"_index":3990,"t":{},"b":{"11":{}}}],["feqf13d",{"_index":3999,"t":{},"b":{"11":{}}}],["feqf2",{"_index":3992,"t":{},"b":{"11":{}}}],["feqf23d",{"_index":4001,"t":{},"b":{"11":{}}}],["feqf5",{"_index":3994,"t":{},"b":{"11":{}}}],["feqf53d",{"_index":4003,"t":{},"b":{"11":{}}}],["feqf7",{"_index":3995,"t":{},"b":{"11":{}}}],["feqf9",{"_index":3997,"t":{},"b":{"11":{}}}],["fespac",{"_index":606,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["fespace.cpp",{"_index":2672,"t":{},"b":{"4":{}}}],["fespace.hpp",{"_index":2531,"t":{},"b":{"4":{}}}],["festransferfromvhi(us,fetvhi,pk,ut",{"_index":3364,"t":{},"b":{"5":{}}}],["fesvhi",{"_index":3360,"t":{},"b":{"5":{}}}],["fetvhi",{"_index":3362,"t":{},"b":{"5":{}}}],["feupdate(vi",{"_index":3705,"t":{},"b":{"10":{}}}],["feupdate(vi[],fals",{"_index":3711,"t":{},"b":{"10":{}}}],["feupdate(vi[],tru",{"_index":3709,"t":{},"b":{"10":{}}}],["fevhi",{"_index":3493,"t":{},"b":{"7":{},"10":{}}}],["few",{"_index":1246,"t":{},"b":{"3":{},"33":{},"35":{}}}],["ff",{"_index":768,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"15":{},"18":{},"20":{},"21":{},"26":{},"35":{},"53":{},"63":{},"67":{},"72":{},"79":{}}}],["ff(\"ffmumps_fileparam.txt",{"_index":9733,"t":{},"b":{"26":{}}}],["ff(\"graph.txt",{"_index":14792,"t":{},"b":{"72":{}}}],["ff(\"phi.txt",{"_index":14791,"t":{},"b":{"72":{}}}],["ff(\"thermic.dat",{"_index":4848,"t":{},"b":{"11":{},"79":{}}}],["ff(\"v.txt",{"_index":14518,"t":{},"b":{"67":{}}}],["ff(sff+\".txt",{"_index":9703,"t":{},"b":{"26":{}}}],["ff*uu",{"_index":14235,"t":{},"b":{"63":{}}}],["ff++.zip",{"_index":10157,"t":{},"b":{"35":{}}}],["ff.good",{"_index":9125,"t":{},"b":{"21":{}}}],["ff.seekg(wher",{"_index":9128,"t":{},"b":{"21":{}}}],["ff.tellg",{"_index":9124,"t":{},"b":{"21":{}}}],["ff1",{"_index":7239,"t":{},"b":{"13":{}}}],["ff1(leman",{"_index":7230,"t":{},"b":{"13":{}}}],["ff1.m",{"_index":7233,"t":{},"b":{"13":{}}}],["ff1.n",{"_index":7232,"t":{},"b":{"13":{}}}],["ff[1024",{"_index":8457,"t":{},"b":{"18":{}}}],["ff[]'*gg",{"_index":9031,"t":{},"b":{"21":{}}}],["ff[]*gg",{"_index":9033,"t":{},"b":{"21":{}}}],["ff\\n",{"_index":8466,"t":{},"b":{"18":{}}}],["ff_gsl_awk",{"_index":12641,"t":{},"b":{"53":{}}}],["ff_includepath",{"_index":10136,"t":{},"b":{"35":{}}}],["ff_loadpath",{"_index":10138,"t":{},"b":{"35":{}}}],["ff_mmap_sem_verb",{"_index":8448,"t":{},"b":{"18":{}}}],["ff_p_mmap",{"_index":8403,"t":{},"b":{"18":{}}}],["ff_p_sem",{"_index":8380,"t":{},"b":{"18":{}}}],["ff_pmmap",{"_index":8404,"t":{},"b":{"18":{}}}],["ff_psem",{"_index":8381,"t":{},"b":{"18":{}}}],["ff_verbos",{"_index":10135,"t":{},"b":{"35":{}}}],["ffc",{"_index":6769,"t":{},"b":{"13":{}}}],["ffddm",{"_index":0,"t":{"1":{},"5":{}},"b":{"4":{},"5":{},"7":{},"8":{},"9":{},"10":{}}}],["ffddm*.idp",{"_index":3482,"t":{},"b":{"7":{},"10":{}}}],["ffddm.idp",{"_index":2986,"t":{},"b":{"5":{},"7":{},"10":{}}}],["ffddm_geneo_nu",{"_index":3673,"t":{},"b":{"9":{}}}],["ffddm_geneo_threshold",{"_index":3674,"t":{},"b":{"9":{}}}],["ffddm_gmres_restart",{"_index":3338,"t":{},"b":{"5":{}}}],["ffddm_inexactcs_tol",{"_index":3676,"t":{},"b":{"9":{}}}],["ffddm_master_exclud",{"_index":3669,"t":{},"b":{"9":{}}}],["ffddm_master_p",{"_index":3668,"t":{},"b":{"9":{}}}],["ffddm_overlap",{"_index":3667,"t":{},"b":{"9":{}}}],["ffddm_partition",{"_index":3665,"t":{},"b":{"9":{}}}],["ffddm_schwarz_coarse_correct",{"_index":3675,"t":{},"b":{"9":{}}}],["ffddm_schwarz_method",{"_index":3672,"t":{},"b":{"9":{}}}],["ffddm_split",{"_index":3671,"t":{},"b":{"9":{}}}],["ffddm_verbos",{"_index":3663,"t":{},"b":{"9":{}}}],["ffddmbuilddfespac",{"_index":3006,"t":{},"b":{"5":{},"7":{},"10":{}}}],["ffddmbuilddfespace(f",{"_index":3409,"t":{},"b":{"5":{},"10":{}}}],["ffddmbuilddfespace(fecoars",{"_index":3410,"t":{},"b":{"5":{}}}],["ffddmbuilddfespace(fes,ms,real,def,init,pk",{"_index":3358,"t":{},"b":{"5":{}}}],["ffddmbuilddfespace(fet,mt,real,def,init,pk",{"_index":3359,"t":{},"b":{"5":{}}}],["ffddmbuilddfespace(myfeprefix,mymeshprefix,complex,def,init,p2",{"_index":3073,"t":{},"b":{"5":{}}}],["ffddmbuilddfespace(myfeprefix,mymeshprefix,real,def,init,[p2,p2,p1",{"_index":3076,"t":{},"b":{"5":{}}}],["ffddmbuilddfespace(prfe,prmesh,scalar,def,init,pk",{"_index":3063,"t":{},"b":{"5":{}}}],["ffddmbuilddfespaceedg",{"_index":3106,"t":{},"b":{"5":{}}}],["ffddmbuilddfespaceedge(prfe,prmesh,scalar,def,init,pk,defpart,initpart,pkpart",{"_index":3378,"t":{},"b":{"5":{}}}],["ffddmbuilddmesh",{"_index":3002,"t":{},"b":{"5":{},"7":{},"9":{},"10":{}}}],["ffddmbuilddmesh(m",{"_index":3719,"t":{},"b":{"10":{}}}],["ffddmbuilddmesh(ms,ths,mpicommworld",{"_index":3353,"t":{},"b":{"5":{}}}],["ffddmbuilddmesh(mt,tht,mpicommworld",{"_index":3354,"t":{},"b":{"5":{}}}],["ffddmbuilddmesh(prmesh,th,comm",{"_index":3021,"t":{},"b":{"5":{}}}],["ffddmbuilddmeshnest",{"_index":3402,"t":{},"b":{"5":{}}}],["ffddmbuilddmeshnested(m",{"_index":3408,"t":{},"b":{"5":{}}}],["ffddmbuilddmeshnested(prmesh,thc,s,comm",{"_index":3403,"t":{},"b":{"5":{}}}],["ffddmbuildrh",{"_index":3012,"t":{},"b":{"5":{},"7":{},"10":{}}}],["ffddmbuildrhs(myprefix,myvarfrhs,rhsi",{"_index":3169,"t":{},"b":{"5":{}}}],["ffddmbuildrhs(pr,varfrhs,rh",{"_index":3164,"t":{},"b":{"5":{}}}],["ffddmcoarsemeshsetup",{"_index":3225,"t":{},"b":{"5":{},"10":{}}}],["ffddmcoarsemeshsetup(pb",{"_index":3418,"t":{},"b":{"5":{}}}],["ffddmcoarsemeshsetup(pr,thc,varfeprec,varfaprec",{"_index":3277,"t":{},"b":{"5":{}}}],["ffddmcorrect",{"_index":3227,"t":{},"b":{"5":{},"9":{}}}],["ffddmexclud",{"_index":3033,"t":{},"b":{"5":{},"9":{}}}],["ffddmgeneosetup",{"_index":3223,"t":{},"b":{"5":{},"7":{},"9":{},"10":{}}}],["ffddmgeneosetup(pr,varf",{"_index":3256,"t":{},"b":{"5":{}}}],["ffddminexactcstol",{"_index":3424,"t":{},"b":{"5":{},"9":{}}}],["ffddminterfacelabel",{"_index":3040,"t":{},"b":{"5":{},"9":{}}}],["ffddmlogo",{"_index":3458,"t":{"7":{}},"b":{}}],["ffddmnu",{"_index":3268,"t":{},"b":{"5":{},"9":{}}}],["ffddmoverlap",{"_index":3031,"t":{},"b":{"5":{},"9":{},"10":{}}}],["ffddmpartition",{"_index":3028,"t":{},"b":{"5":{},"9":{}}}],["ffddmpc",{"_index":3035,"t":{},"b":{"5":{},"9":{}}}],["ffddmplot(f",{"_index":3495,"t":{},"b":{"7":{},"10":{}}}],["ffddmplot(fe,vi,\"1",{"_index":3710,"t":{},"b":{"10":{}}}],["ffddmplot(fe,vi,\"multipl",{"_index":3712,"t":{},"b":{"10":{}}}],["ffddmplot(fes,us,\"u",{"_index":3365,"t":{},"b":{"5":{}}}],["ffddmplot(fet,ut,\"u",{"_index":3366,"t":{},"b":{"5":{}}}],["ffddmplot(lapfe,ui,\"u",{"_index":3019,"t":{},"b":{"5":{}}}],["ffddmprecond",{"_index":3172,"t":{},"b":{"5":{},"9":{}}}],["ffddmsetupoper",{"_index":3009,"t":{},"b":{"5":{},"7":{},"10":{}}}],["ffddmsetupoperator(myprefix",{"_index":3568,"t":{},"b":{"8":{}}}],["ffddmsetupoperator(myprefix,myfeprefix,myvarf",{"_index":3136,"t":{},"b":{"5":{}}}],["ffddmsetupoperator(pb",{"_index":3416,"t":{},"b":{"5":{},"10":{}}}],["ffddmsetupoperator(pbcoars",{"_index":3412,"t":{},"b":{"5":{}}}],["ffddmsetupoperator(pr,prfe,varf",{"_index":3127,"t":{},"b":{"5":{}}}],["ffddmsetupoperatorrect",{"_index":3159,"t":{},"b":{"5":{}}}],["ffddmsetupoperatorrect(myprefix,myfeprefixv,myfeprefixp,myvarf",{"_index":3163,"t":{},"b":{"5":{}}}],["ffddmsetupprecond",{"_index":3207,"t":{},"b":{"5":{},"7":{},"9":{},"10":{}}}],["ffddmsetupprecond(pb",{"_index":3417,"t":{},"b":{"5":{}}}],["ffddmsetupprecond(pbcoars",{"_index":3414,"t":{},"b":{"5":{}}}],["ffddmsetupprecond(pr,varfprec",{"_index":3170,"t":{},"b":{"5":{}}}],["ffddmsplit",{"_index":3032,"t":{},"b":{"5":{},"9":{}}}],["ffddmtau",{"_index":3272,"t":{},"b":{"5":{},"9":{}}}],["ffddmverbos",{"_index":3142,"t":{},"b":{"5":{},"9":{}}}],["fff",{"_index":14520,"t":{},"b":{"67":{}}}],["fff(\"r.txt",{"_index":14519,"t":{},"b":{"67":{}}}],["ffglut",{"_index":7953,"t":{},"b":{"15":{},"20":{},"26":{},"36":{}}}],["ffglut.ex",{"_index":9933,"t":{},"b":{"35":{}}}],["ffglutxxxx.ppm",{"_index":8540,"t":{},"b":{"19":{}}}],["ffinv11",{"_index":10289,"t":{},"b":{"37":{}}}],["ffinv11(u1",{"_index":10327,"t":{},"b":{"37":{}}}],["ffinv12",{"_index":10294,"t":{},"b":{"37":{}}}],["ffinv12(u1",{"_index":10329,"t":{},"b":{"37":{}}}],["ffinv21",{"_index":10297,"t":{},"b":{"37":{}}}],["ffinv21(u1",{"_index":10330,"t":{},"b":{"37":{}}}],["ffinv22",{"_index":10299,"t":{},"b":{"37":{}}}],["ffinv22(u1",{"_index":10332,"t":{},"b":{"37":{}}}],["fflag",{"_index":10116,"t":{},"b":{"35":{}}}],["fflapack",{"_index":9065,"t":{},"b":{"21":{},"53":{}}}],["fflapack.cpp",{"_index":9081,"t":{},"b":{"21":{}}}],["ffmaster",{"_index":8490,"t":{},"b":{"18":{}}}],["ffmaster.c",{"_index":8434,"t":{},"b":{"18":{}}}],["ffmatlib",{"_index":8610,"t":{},"b":{"19":{},"71":{}}}],["ffmatlib.idp",{"_index":8606,"t":{},"b":{"19":{},"71":{}}}],["ffmedit",{"_index":8593,"t":{},"b":{"19":{},"35":{},"48":{}}}],["ffmmap_del(ff_pmmap",{"_index":8406,"t":{},"b":{"18":{}}}],["ffmmap_del(shd",{"_index":8479,"t":{},"b":{"18":{}}}],["ffmmap_destroy(ff_pmmap",{"_index":8407,"t":{},"b":{"18":{}}}],["ffmmap_init(ff_pmmap",{"_index":8416,"t":{},"b":{"18":{}}}],["ffmmap_init(shd",{"_index":8453,"t":{},"b":{"18":{}}}],["ffmmap_init0(ff_pmmap",{"_index":8408,"t":{},"b":{"18":{}}}],["ffmmap_malloc",{"_index":8405,"t":{},"b":{"18":{}}}],["ffmmap_msync(ff_pmmap",{"_index":8409,"t":{},"b":{"18":{}}}],["ffmmap_msync(shd",{"_index":8456,"t":{},"b":{"18":{}}}],["ffmmap_read(ff_pmmap",{"_index":8417,"t":{},"b":{"18":{}}}],["ffmmap_read(shd",{"_index":8473,"t":{},"b":{"18":{}}}],["ffmmap_write(ff_pmmap",{"_index":8419,"t":{},"b":{"18":{}}}],["ffmmap_write(shd",{"_index":8454,"t":{},"b":{"18":{}}}],["ffmumps_fileparam.txt",{"_index":7743,"t":{},"b":{"15":{},"26":{}}}],["ffmumpsfileparam.txt",{"_index":7785,"t":{},"b":{"15":{}}}],["ffnewuoa",{"_index":13318,"t":{},"b":{"53":{}}}],["ffpastix_iparm_dparm.txt",{"_index":7737,"t":{},"b":{"15":{},"26":{}}}],["ffpdeplot",{"_index":14675,"t":{},"b":{"71":{}}}],["ffpdeplot(p,b,t,'mesh','on','boundary','on",{"_index":14681,"t":{},"b":{"71":{}}}],["ffpdeplot(p,b,t,'vhseq',vh,'xydata',u,'mesh','off','boundary','on",{"_index":14690,"t":{},"b":{"71":{}}}],["ffpdeplot(p,b,t,'vhseq',vh,'xydata',u,'mesh','on','boundary','on",{"_index":14682,"t":{},"b":{"71":{}}}],["ffpdeplot(p,b,t,'vhseq',vh,'xydata',u,'zstyle','continu",{"_index":14685,"t":{},"b":{"71":{}}}],["ffpdeplot(p,b,t,'vhseq',vh,'xydata',u,'zstyle','continuous','mesh','on",{"_index":8616,"t":{},"b":{"19":{}}}],["ffpdeplot(p,b,t,varargin",{"_index":14678,"t":{},"b":{"71":{}}}],["ffpdeplot3d",{"_index":14696,"t":{},"b":{"71":{}}}],["ffplot",{"_index":1705,"t":{},"b":{"3":{},"20":{}}}],["ffpp.lang",{"_index":9846,"t":{},"b":{"32":{}}}],["ffrandom",{"_index":8359,"t":{},"b":{"18":{},"53":{},"60":{}}}],["ffreaddata",{"_index":14667,"t":{},"b":{"71":{}}}],["ffreaddata('capacitor_field.txt",{"_index":14674,"t":{},"b":{"71":{}}}],["ffreaddata('capacitor_potential.txt",{"_index":14672,"t":{},"b":{"71":{}}}],["ffreaddata('capacitor_vh.txt",{"_index":14671,"t":{},"b":{"71":{}}}],["ffreaddata('export_data.txt",{"_index":8615,"t":{},"b":{"19":{}}}],["ffreaddata('export_vh.txt",{"_index":8614,"t":{},"b":{"19":{}}}],["ffreadmesh",{"_index":14666,"t":{},"b":{"71":{}}}],["ffreadmesh('capacitor.msh",{"_index":14670,"t":{},"b":{"71":{}}}],["ffreadmesh('export_mesh.msh",{"_index":8613,"t":{},"b":{"19":{}}}],["ffsavedata",{"_index":14661,"t":{},"b":{"71":{}}}],["ffsavedata(u,\"capacitor_potential.txt",{"_index":14664,"t":{},"b":{"71":{}}}],["ffsavedata(u,\"export_data.txt",{"_index":8609,"t":{},"b":{"19":{}}}],["ffsavedata2(ex,ey,\"capacitor_field.txt",{"_index":14665,"t":{},"b":{"71":{}}}],["ffsavevh",{"_index":14660,"t":{},"b":{"71":{}}}],["ffsavevh(th,vh,\"capacitor_vh.txt",{"_index":14663,"t":{},"b":{"71":{}}}],["ffsavevh(th,vh,\"export_vh.txt",{"_index":8608,"t":{},"b":{"19":{}}}],["ffsem_del(ff_psem",{"_index":8384,"t":{},"b":{"18":{}}}],["ffsem_del(sem_c",{"_index":8478,"t":{},"b":{"18":{}}}],["ffsem_del(sem_ff",{"_index":8477,"t":{},"b":{"18":{}}}],["ffsem_destroy(ff_psem",{"_index":8386,"t":{},"b":{"18":{}}}],["ffsem_init(ff_psem",{"_index":8388,"t":{},"b":{"18":{}}}],["ffsem_init(sem_c",{"_index":8451,"t":{},"b":{"18":{}}}],["ffsem_init(sem_ff",{"_index":8449,"t":{},"b":{"18":{}}}],["ffsem_init0(ff_psem",{"_index":8387,"t":{},"b":{"18":{}}}],["ffsem_malloc",{"_index":8382,"t":{},"b":{"18":{}}}],["ffsem_post(ff_psem",{"_index":8393,"t":{},"b":{"18":{}}}],["ffsem_post(sem_c",{"_index":8471,"t":{},"b":{"18":{}}}],["ffsem_trywait(ff_psem",{"_index":8402,"t":{},"b":{"18":{}}}],["ffsem_wait(ff_psem",{"_index":8396,"t":{},"b":{"18":{}}}],["ffsem_wait(sem_ff",{"_index":8467,"t":{},"b":{"18":{}}}],["ffslave.edp",{"_index":8459,"t":{},"b":{"18":{}}}],["ffsuperlu_dist_fileparam.txt",{"_index":7742,"t":{},"b":{"15":{},"26":{}}}],["fft",{"_index":2852,"t":{},"b":{"4":{},"21":{}}}],["fftw",{"_index":2853,"t":{},"b":{"4":{},"34":{},"35":{},"53":{}}}],["fftwplan",{"_index":8805,"t":{},"b":{"21":{}}}],["fgmre",{"_index":7941,"t":{},"b":{"15":{}}}],["fh",{"_index":4102,"t":{},"b":{"11":{},"13":{},"24":{},"60":{}}}],["fh(thg",{"_index":4441,"t":{},"b":{"11":{}}}],["fhat",{"_index":8789,"t":{},"b":{"21":{}}}],["fiacco",{"_index":1327,"t":{},"b":{"3":{}}}],["fictiti",{"_index":9884,"t":{},"b":{"33":{}}}],["field",{"_index":1598,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"19":{},"37":{},"40":{},"48":{},"51":{},"63":{},"71":{},"73":{},"77":{},"78":{},"81":{}}}],["fieldsplit",{"_index":8243,"t":{},"b":{"16":{}}}],["fig",{"_index":1513,"t":{},"b":{"3":{},"11":{},"13":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"49":{},"54":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{}}}],["fight",{"_index":12421,"t":{},"b":{"51":{}}}],["figur",{"_index":5232,"t":{},"b":{"13":{},"41":{}}}],["file",{"_index":853,"t":{},"b":{"3":{},"4":{},"6":{},"7":{},"10":{},"12":{},"13":{},"15":{},"18":{},"19":{},"21":{},"26":{},"27":{},"35":{},"36":{},"39":{},"41":{},"48":{},"51":{},"52":{},"53":{},"54":{},"60":{},"69":{},"70":{},"71":{},"72":{},"79":{}}}],["file(\"f.txt",{"_index":6845,"t":{},"b":{"13":{},"21":{}}}],["file(\"file.btxt",{"_index":12579,"t":{},"b":{"52":{}}}],["file(\"file.txt",{"_index":12578,"t":{},"b":{"52":{}}}],["file(\"u.bb",{"_index":8599,"t":{},"b":{"19":{},"27":{}}}],["file(\"xyf",{"_index":5397,"t":{},"b":{"13":{}}}],["file.flush",{"_index":9121,"t":{},"b":{"21":{},"52":{}}}],["file.good",{"_index":9132,"t":{},"b":{"21":{}}}],["file.o",{"_index":2677,"t":{},"b":{"4":{}}}],["file.precision(16",{"_index":9119,"t":{},"b":{"21":{}}}],["file.seekg",{"_index":9130,"t":{},"b":{"21":{}}}],["file.seekg(0",{"_index":9135,"t":{},"b":{"21":{}}}],["file.seekg(po",{"_index":12581,"t":{},"b":{"52":{}}}],["file.seekg(wher",{"_index":9131,"t":{},"b":{"21":{}}}],["file.tellg",{"_index":9137,"t":{},"b":{"21":{},"52":{}}}],["file.tellp",{"_index":9120,"t":{},"b":{"21":{}}}],["file1",{"_index":6855,"t":{},"b":{"13":{}}}],["file1.edp",{"_index":9183,"t":{},"b":{"21":{}}}],["file2.edp",{"_index":9186,"t":{},"b":{"21":{}}}],["filenam",{"_index":5230,"t":{},"b":{"13":{},"16":{},"18":{},"35":{},"53":{}}}],["files\\freefem",{"_index":9938,"t":{},"b":{"35":{}}}],["files\\microsoft",{"_index":9952,"t":{},"b":{"35":{}}}],["filesystem",{"_index":8411,"t":{},"b":{"18":{},"35":{}}}],["fill",{"_index":1104,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"19":{},"20":{},"24":{},"26":{},"27":{},"45":{},"48":{},"49":{},"50":{},"54":{},"60":{},"61":{},"63":{},"69":{},"72":{},"77":{},"81":{}}}],["film",{"_index":11817,"t":{},"b":{"48":{},"49":{}}}],["filter",{"_index":23,"t":{},"b":{"2":{},"3":{},"15":{}}}],["final",{"_index":1285,"t":{},"b":{"3":{},"4":{},"5":{},"13":{},"15":{},"26":{},"38":{},"41":{},"42":{},"43":{},"45":{},"67":{},"73":{},"77":{},"81":{}}}],["financ",{"_index":288,"t":{},"b":{"2":{},"41":{}}}],["financi",{"_index":5098,"t":{},"b":{"12":{}}}],["find",{"_index":490,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"15":{},"26":{},"33":{},"38":{},"39":{},"41":{},"43":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"62":{},"65":{},"70":{},"72":{},"73":{},"76":{}}}],["findallocalmin",{"_index":13381,"t":{},"b":{"53":{}}}],["findutil",{"_index":10095,"t":{},"b":{"35":{}}}],["fine",{"_index":3394,"t":{},"b":{"5":{},"8":{},"10":{},"15":{},"26":{},"72":{},"74":{}}}],["finer",{"_index":3681,"t":{},"b":{"9":{},"13":{},"39":{}}}],["fini",{"_index":140,"t":{},"b":{"2":{},"11":{}}}],["finish",{"_index":2805,"t":{},"b":{"4":{},"8":{}}}],["finit",{"_index":316,"t":{"11":{},"22":{}},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"45":{},"48":{},"51":{},"54":{},"56":{},"60":{},"65":{},"67":{},"70":{},"71":{},"72":{},"75":{},"76":{},"77":{},"79":{},"81":{}}}],["finti",{"_index":15237,"t":{},"b":{"78":{}}}],["finv",{"_index":10337,"t":{},"b":{"37":{}}}],["finv11",{"_index":10285,"t":{},"b":{"37":{}}}],["finv11(u1",{"_index":10290,"t":{},"b":{"37":{}}}],["finv12",{"_index":10287,"t":{},"b":{"37":{}}}],["finv12(u1",{"_index":10292,"t":{},"b":{"37":{}}}],["finv21",{"_index":10288,"t":{},"b":{"37":{}}}],["finv21(u1",{"_index":10298,"t":{},"b":{"37":{}}}],["finv22",{"_index":10286,"t":{},"b":{"37":{}}}],["finv22(u1",{"_index":10296,"t":{},"b":{"37":{}}}],["finvt11(u1",{"_index":10300,"t":{},"b":{"37":{}}}],["finvt12(u1",{"_index":10301,"t":{},"b":{"37":{}}}],["finvt21(u1",{"_index":10302,"t":{},"b":{"37":{}}}],["finvt22(u1",{"_index":10303,"t":{},"b":{"37":{}}}],["first",{"_index":351,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"13":{},"15":{},"18":{},"21":{},"27":{},"33":{},"35":{},"38":{},"39":{},"40":{},"41":{},"45":{},"46":{},"48":{},"52":{},"54":{},"60":{},"62":{},"65":{},"66":{},"68":{},"69":{},"72":{},"74":{},"76":{},"79":{},"81":{}}}],["fist",{"_index":9883,"t":{},"b":{"33":{},"43":{}}}],["fit",{"_index":1061,"t":{},"b":{"3":{},"45":{}}}],["five",{"_index":2570,"t":{},"b":{"4":{},"13":{}}}],["fix",{"_index":1261,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"15":{},"24":{},"40":{},"43":{},"52":{},"64":{},"72":{},"78":{},"79":{}}}],["fix1",{"_index":5881,"t":{},"b":{"13":{},"24":{}}}],["fix1(5",{"_index":5904,"t":{},"b":{"13":{},"24":{}}}],["fix1(t",{"_index":5890,"t":{},"b":{"13":{},"24":{}}}],["fix2",{"_index":5882,"t":{},"b":{"13":{},"24":{}}}],["fix2(5",{"_index":5906,"t":{},"b":{"13":{},"24":{}}}],["fix2(t",{"_index":5895,"t":{},"b":{"13":{},"24":{}}}],["fixat",{"_index":7842,"t":{},"b":{"15":{}}}],["fixedbord",{"_index":3807,"t":{},"b":{"11":{},"13":{},"54":{}}}],["fixedvar",{"_index":1264,"t":{},"b":{"3":{}}}],["fjournal",{"_index":9804,"t":{},"b":{"30":{}}}],["flabel",{"_index":5633,"t":{},"b":{"13":{},"54":{},"66":{}}}],["flag",{"_index":2723,"t":{},"b":{"4":{},"13":{},"24":{},"26":{},"52":{},"53":{},"54":{}}}],["flat",{"_index":15272,"t":{},"b":{"79":{},"81":{}}}],["flex",{"_index":10020,"t":{},"b":{"35":{}}}],["flexibl",{"_index":3215,"t":{},"b":{"5":{},"8":{},"10":{},"15":{},"17":{}}}],["flip",{"_index":5439,"t":{},"b":{"13":{}}}],["float",{"_index":12587,"t":{},"b":{"52":{}}}],["floatmesh",{"_index":13377,"t":{},"b":{"53":{}}}],["floatsol",{"_index":13378,"t":{},"b":{"53":{}}}],["floor",{"_index":13588,"t":{},"b":{"54":{}}}],["floor(b",{"_index":13589,"t":{},"b":{"54":{}}}],["floor(t",{"_index":6833,"t":{},"b":{"13":{}}}],["flow",{"_index":340,"t":{"66":{},"67":{}},"b":{"2":{},"12":{},"43":{},"45":{},"48":{},"66":{},"67":{},"68":{},"70":{},"73":{},"74":{},"75":{},"77":{},"78":{},"79":{}}}],["flowdata',[ex,ey],'fgridparam',[24",{"_index":14695,"t":{},"b":{"71":{}}}],["fluid",{"_index":5108,"t":{"42":{},"61":{}},"b":{"12":{},"13":{},"29":{},"34":{},"38":{},"42":{},"48":{},"49":{},"61":{},"63":{},"64":{},"66":{},"73":{},"74":{},"78":{}}}],["fluidslogo",{"_index":15233,"t":{"78":{}},"b":{}}],["flush",{"_index":9122,"t":{},"b":{"21":{},"52":{},"53":{}}}],["flux",{"_index":2465,"t":{},"b":{"4":{},"11":{},"67":{}}}],["fmax",{"_index":13590,"t":{},"b":{"54":{}}}],["fmax(a",{"_index":13591,"t":{},"b":{"54":{}}}],["fmin",{"_index":13592,"t":{},"b":{"54":{}}}],["fmin(a",{"_index":13593,"t":{},"b":{"54":{}}}],["fmod",{"_index":13594,"t":{},"b":{"54":{}}}],["fmod(a",{"_index":13598,"t":{},"b":{"54":{}}}],["fn",{"_index":12293,"t":{},"b":{"48":{}}}],["fnction",{"_index":2792,"t":{},"b":{"4":{}}}],["focal",{"_index":8523,"t":{},"b":{"19":{}}}],["focu",{"_index":1896,"t":{},"b":{"3":{}}}],["folder",{"_index":882,"t":{},"b":{"3":{},"35":{}}}],["follow",{"_index":794,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"17":{},"19":{},"30":{},"34":{},"35":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"51":{},"54":{},"56":{},"59":{},"60":{},"62":{},"66":{},"69":{},"70":{},"71":{},"75":{},"76":{},"77":{},"79":{},"80":{}}}],["fonction",{"_index":4154,"t":{},"b":{"11":{}}}],["foo",{"_index":9172,"t":{},"b":{"21":{}}}],["foo(i",{"_index":9171,"t":{},"b":{"21":{}}}],["foo(i,j,k",{"_index":9234,"t":{},"b":{"21":{}}}],["foo({int",{"_index":9173,"t":{},"b":{"21":{}}}],["fop",{"_index":10512,"t":{},"b":{"39":{}}}],["fop1",{"_index":10504,"t":{},"b":{"39":{}}}],["fop1(real[int",{"_index":10507,"t":{},"b":{"39":{}}}],["for(i",{"_index":14439,"t":{},"b":{"66":{}}}],["for(int",{"_index":679,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"22":{},"24":{},"25":{},"26":{},"42":{},"45":{},"50":{},"67":{},"72":{},"74":{},"75":{},"79":{}}}],["for(m",{"_index":15336,"t":{},"b":{"80":{}}}],["for(real",{"_index":4849,"t":{},"b":{"11":{},"68":{},"79":{}}}],["foral",{"_index":654,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"50":{},"65":{},"68":{},"73":{},"76":{}}}],["forc",{"_index":4427,"t":{},"b":{"11":{},"12":{},"13":{},"37":{},"40":{},"42":{},"48":{},"64":{},"66":{},"72":{}}}],["forg",{"_index":1126,"t":{},"b":{"3":{}}}],["forget",{"_index":2824,"t":{},"b":{"4":{},"39":{},"70":{}}}],["forgotten",{"_index":4525,"t":{},"b":{"11":{}}}],["form",{"_index":689,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"33":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"54":{},"60":{},"61":{},"62":{},"64":{},"65":{},"68":{},"69":{},"70":{},"72":{},"73":{},"76":{},"79":{},"80":{},"81":{}}}],["form(",{"_index":4524,"t":{},"b":{"11":{}}}],["formal",{"_index":2440,"t":{},"b":{"4":{},"11":{},"45":{}}}],["format",{"_index":2174,"t":{},"b":{"4":{},"5":{},"13":{},"15":{},"16":{},"19":{},"36":{},"52":{},"53":{},"54":{},"70":{},"72":{}}}],["formatmsh",{"_index":6877,"t":{},"b":{"13":{}}}],["formatted',statu",{"_index":2348,"t":{},"b":{"4":{}}}],["former",{"_index":9760,"t":{},"b":{"29":{}}}],["formlogo",{"_index":15328,"t":{"80":{}},"b":{}}],["formul",{"_index":2909,"t":{},"b":{"4":{},"8":{},"11":{},"12":{},"36":{},"37":{},"41":{},"43":{},"45":{},"48":{},"51":{},"68":{},"69":{},"70":{},"72":{},"76":{},"77":{},"79":{}}}],["formula",{"_index":457,"t":{},"b":{"2":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"21":{},"37":{},"41":{},"45":{},"48":{},"51":{},"54":{},"55":{},"58":{},"59":{},"60":{},"66":{},"72":{},"76":{}}}],["formulaelogo",{"_index":13810,"t":{"59":{}},"b":{}}],["forsgren",{"_index":40,"t":{},"b":{"2":{}}}],["forsgren2002",{"_index":39,"t":{},"b":{"2":{},"3":{}}}],["fortran",{"_index":2321,"t":{},"b":{"4":{},"15":{},"21":{},"35":{}}}],["forward",{"_index":3202,"t":{},"b":{"5":{},"41":{}}}],["forward/backward",{"_index":3729,"t":{},"b":{"10":{}}}],["found",{"_index":1053,"t":{},"b":{"3":{},"5":{},"7":{},"13":{},"20":{},"33":{},"35":{},"51":{},"71":{},"75":{},"76":{}}}],["four",{"_index":1405,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"16":{},"54":{},"60":{}}}],["fourier",{"_index":2851,"t":{},"b":{"4":{},"21":{},"65":{},"79":{}}}],["fourteenth",{"_index":126,"t":{},"b":{"2":{}}}],["fourth",{"_index":9893,"t":{},"b":{"34":{},"79":{}}}],["fquadtree.cpp",{"_index":2703,"t":{},"b":{"4":{}}}],["fquadtree.hpp",{"_index":2704,"t":{},"b":{"4":{}}}],["fr1(t",{"_index":11579,"t":{},"b":{"45":{}}}],["fr2(nn",{"_index":11588,"t":{},"b":{"45":{}}}],["fr2(t",{"_index":11581,"t":{},"b":{"45":{}}}],["fr3(5*nn",{"_index":11589,"t":{},"b":{"45":{}}}],["fr3(t",{"_index":11582,"t":{},"b":{"45":{}}}],["fr4(nn",{"_index":11590,"t":{},"b":{"45":{}}}],["fr4(t",{"_index":11583,"t":{},"b":{"45":{}}}],["fr5",{"_index":11591,"t":{},"b":{"45":{}}}],["fr5(t",{"_index":11584,"t":{},"b":{"45":{}}}],["frac",{"_index":1592,"t":{},"b":{"3":{},"11":{},"13":{},"40":{},"61":{},"62":{},"67":{},"77":{},"79":{}}}],["frac12",{"_index":4664,"t":{},"b":{"11":{}}}],["frac12\\left(f^++f",{"_index":14446,"t":{},"b":{"67":{}}}],["frac1{\\delta",{"_index":14018,"t":{},"b":{"61":{}}}],["fraction",{"_index":13506,"t":{},"b":{"54":{}}}],["fractur",{"_index":267,"t":{},"b":{"2":{},"29":{},"40":{}}}],["frac{(155",{"_index":4697,"t":{},"b":{"11":{}}}],["frac{(155+\\sqrt{15})|t_k|}{1200",{"_index":4699,"t":{},"b":{"11":{}}}],["frac{(332",{"_index":13844,"t":{},"b":{"59":{}}}],["frac{(332+13\\sqrt{70})}{1800}g\\left",{"_index":13849,"t":{},"b":{"59":{}}}],["frac{(u_1",{"_index":10457,"t":{},"b":{"38":{}}}],["frac{1",{"_index":13825,"t":{},"b":{"59":{}}}],["frac{1+\\frac{\\sqrt{245",{"_index":13852,"t":{},"b":{"59":{}}}],["frac{1+\\frac{\\sqrt{245+14\\sqrt{70}}}{21}}{2",{"_index":13847,"t":{},"b":{"59":{}}}],["frac{1+\\frac{\\sqrt{525",{"_index":13841,"t":{},"b":{"59":{}}}],["frac{1+\\frac{\\sqrt{525+70\\sqrt{30}}}{35}}{2",{"_index":13837,"t":{},"b":{"59":{}}}],["frac{1+\\sqrt{1/3}}{2",{"_index":13824,"t":{},"b":{"59":{}}}],["frac{1+\\sqrt{3/5}}{2",{"_index":13830,"t":{},"b":{"59":{}}}],["frac{18",{"_index":4640,"t":{},"b":{"11":{}}}],["frac{18+\\sqrt{30}}{72}||q^iq^j",{"_index":4642,"t":{},"b":{"11":{}}}],["frac{1}{(1+x)^2",{"_index":600,"t":{},"b":{"3":{},"47":{}}}],["frac{1}{0.3^2}(x+2)^2+\\frac{1}{3^2}y^2",{"_index":11929,"t":{},"b":{"48":{}}}],["frac{1}{1+k_1",{"_index":3737,"t":{},"b":{"10":{}}}],["frac{1}{1+k_1\\,\\tau",{"_index":3642,"t":{},"b":{"8":{}}}],["frac{1}{2",{"_index":4213,"t":{},"b":{"11":{},"47":{},"50":{},"59":{}}}],["frac{1}{2h}\\int_",{"_index":10704,"t":{},"b":{"40":{}}}],["frac{1}{2}\\int_{\\omega",{"_index":589,"t":{},"b":{"3":{}}}],["frac{1}{2}\\int_{\\omega}\\vert\\nabla",{"_index":1420,"t":{},"b":{"3":{}}}],["frac{1}{2}\\left(\\frac{\\parti",{"_index":10655,"t":{},"b":{"40":{}}}],["frac{1}{2}\\left\\langl",{"_index":1164,"t":{},"b":{"3":{}}}],["frac{1}{2}\\mathbf{x}^ta\\mathbf{x",{"_index":690,"t":{},"b":{"3":{}}}],["frac{1}{30",{"_index":5611,"t":{},"b":{"13":{}}}],["frac{1}{3}\\int{\\omega}{\\rho^{3",{"_index":1582,"t":{},"b":{"3":{}}}],["frac{1}{6}\\pi",{"_index":1657,"t":{},"b":{"3":{}}}],["frac{1}{\\delta}\\left",{"_index":11014,"t":{},"b":{"41":{}}}],["frac{1}{\\tau",{"_index":11515,"t":{},"b":{"45":{}}}],["frac{1}{\\tau}\\left",{"_index":10975,"t":{},"b":{"41":{}}}],["frac{1}{\\varepsilon",{"_index":4492,"t":{},"b":{"11":{},"68":{}}}],["frac{1}{{\\tau",{"_index":11194,"t":{},"b":{"41":{}}}],["frac{2(1",{"_index":11021,"t":{},"b":{"41":{}}}],["frac{2}{\\sqrt{pi}}\\int_{0}^{x}{\\exp",{"_index":13574,"t":{},"b":{"54":{}}}],["frac{322",{"_index":4647,"t":{},"b":{"11":{}}}],["frac{322+13\\sqrt{70}}{1800}||q^iq^j",{"_index":4650,"t":{},"b":{"11":{}}}],["frac{4}{3}\\pi",{"_index":1649,"t":{},"b":{"3":{}}}],["frac{64}{225}g\\left",{"_index":13848,"t":{},"b":{"59":{}}}],["frac{64}{225}||q^iq^j",{"_index":4649,"t":{},"b":{"11":{}}}],["frac{8}{9}*arctan(1)\\approx40",{"_index":6652,"t":{},"b":{"13":{}}}],["frac{\\bar\\rho^m}{(\\gamma",{"_index":14466,"t":{},"b":{"67":{}}}],["frac{\\bar\\rho^m}{\\delta",{"_index":14462,"t":{},"b":{"67":{}}}],["frac{\\mathbf{a}+\\mathbf{c}}{2",{"_index":2500,"t":{},"b":{"4":{},"11":{}}}],["frac{\\mathbf{b}+\\mathbf{a}}{2",{"_index":2501,"t":{},"b":{"4":{},"11":{}}}],["frac{\\mu_t^m}2|\\nabla",{"_index":14027,"t":{},"b":{"61":{}}}],["frac{\\mu_t}2|\\nabla",{"_index":14003,"t":{},"b":{"61":{}}}],["frac{\\p",{"_index":4454,"t":{},"b":{"11":{},"41":{},"48":{}}}],["frac{\\parti",{"_index":4894,"t":{},"b":{"11":{},"13":{},"40":{},"54":{},"62":{},"66":{},"76":{},"79":{}}}],["frac{\\partial(u_1",{"_index":4978,"t":{},"b":{"11":{}}}],["frac{\\partial\\varphi}{\\partial\\boldsymbol{n",{"_index":14713,"t":{},"b":{"72":{}}}],["frac{\\partial^2",{"_index":12441,"t":{},"b":{"51":{},"54":{},"76":{}}}],["frac{\\pi_i^*}{\\sum_{j",{"_index":7650,"t":{},"b":{"15":{}}}],["frac{\\pi}{2},\\frac{\\pi}{2",{"_index":6394,"t":{},"b":{"13":{}}}],["frac{\\rho(t_k)}{\\textrm{diam}(t_k)}\\g",{"_index":5490,"t":{},"b":{"13":{}}}],["frac{\\sqrt{245",{"_index":13850,"t":{},"b":{"59":{}}}],["frac{\\sqrt{245+14\\sqrt{70}}}{21}}{2",{"_index":13846,"t":{},"b":{"59":{}}}],["frac{\\sqrt{525",{"_index":13839,"t":{},"b":{"59":{}}}],["frac{\\sqrt{525+70\\sqrt{30}}}{35}}{2",{"_index":13836,"t":{},"b":{"59":{}}}],["frac{\\textrm{area",{"_index":4127,"t":{},"b":{"11":{}}}],["frac{\\text{d",{"_index":15151,"t":{},"b":{"77":{}}}],["frac{\\varphi_0(0.99",{"_index":11993,"t":{},"b":{"48":{}}}],["frac{\\varphi_0|_{p",{"_index":11991,"t":{},"b":{"48":{}}}],["frac{c_1}2",{"_index":14009,"t":{},"b":{"61":{}}}],["frac{c_\\epsilon}{c_\\mu}\\nabla\\cdot",{"_index":14007,"t":{},"b":{"61":{}}}],["frac{c_\\epsilon}{c_\\mu}\\nabla\\dot(\\mu_t^m\\nabla\\epsilon^{m+1",{"_index":14033,"t":{},"b":{"61":{}}}],["frac{d\\mathbf{x}}{dt}(t",{"_index":11114,"t":{},"b":{"41":{}}}],["frac{du}{dt",{"_index":11101,"t":{},"b":{"41":{}}}],["frac{du}{dt}\\left",{"_index":11103,"t":{},"b":{"41":{}}}],["frac{dx}{dt",{"_index":11107,"t":{},"b":{"41":{}}}],["frac{d}{dt}(u(t),v)+a(u(t),v",{"_index":10961,"t":{},"b":{"41":{}}}],["frac{e^x",{"_index":13528,"t":{},"b":{"54":{}}}],["frac{e^{x",{"_index":13703,"t":{},"b":{"54":{}}}],["frac{h_{n}(x)}{f_{n}(\\eta_k(x",{"_index":12268,"t":{},"b":{"48":{}}}],["frac{i}{\\omega\\epsilon_0}\\hat{\\epsilon",{"_index":12411,"t":{},"b":{"51":{}}}],["frac{k^{2}}{n^{2}}",{"_index":15366,"t":{},"b":{"81":{}}}],["frac{q^{k_1}+q^{k_2}+q^{k_3}}{3",{"_index":4304,"t":{},"b":{"11":{}}}],["frac{sgn(i_{a",{"_index":2497,"t":{},"b":{"4":{},"11":{}}}],["frac{sgn(i_{b",{"_index":2489,"t":{},"b":{"4":{},"11":{}}}],["frac{sgn(i_{c",{"_index":2493,"t":{},"b":{"4":{},"11":{}}}],["frac{u^m(x,i",{"_index":10905,"t":{},"b":{"41":{}}}],["frac{u^n",{"_index":4781,"t":{},"b":{"11":{},"68":{}}}],["frac{u^{m+1",{"_index":10909,"t":{},"b":{"41":{}}}],["frac{{\\left",{"_index":11175,"t":{},"b":{"41":{}}}],["frac{{\\p",{"_index":10932,"t":{},"b":{"41":{}}}],["frac{|\\varepsilon",{"_index":4515,"t":{},"b":{"11":{}}}],["frac{|\\varepsilon|}{||ax_0",{"_index":13903,"t":{},"b":{"60":{}}}],["frac{|d|}{18}\\left",{"_index":13828,"t":{},"b":{"59":{}}}],["frac{|d|}{2}\\left",{"_index":13822,"t":{},"b":{"59":{}}}],["frac{|d|}{72}\\left",{"_index":13834,"t":{},"b":{"59":{}}}],["framework",{"_index":3476,"t":{},"b":{"7":{},"10":{}}}],["franc",{"_index":146,"t":{},"b":{"2":{},"29":{}}}],["françoi",{"_index":438,"t":{},"b":{"2":{}}}],["frederic.hecht@sorbonn",{"_index":9755,"t":{},"b":{"29":{}}}],["free",{"_index":760,"t":{"43":{}},"b":{"3":{},"7":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"33":{},"43":{},"45":{},"46":{},"48":{},"49":{},"61":{},"74":{},"77":{}}}],["free/open",{"_index":1890,"t":{},"b":{"3":{}}}],["freedom",{"_index":2432,"t":{},"b":{"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"39":{},"50":{},"60":{},"72":{},"76":{},"80":{}}}],["freefem",{"_index":489,"t":{"28":{}},"b":{"3":{},"4":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"56":{},"58":{},"60":{},"67":{},"70":{},"71":{},"72":{},"75":{},"76":{},"77":{},"79":{},"80":{}}}],["freefem++.app",{"_index":9958,"t":{},"b":{"35":{}}}],["freefem++.pref",{"_index":10123,"t":{},"b":{"35":{}}}],["freefem.ex",{"_index":9941,"t":{},"b":{"35":{}}}],["freefem.pi",{"_index":9850,"t":{},"b":{"32":{}}}],["freefem.tmbundl",{"_index":9844,"t":{},"b":{"32":{}}}],["freefem:`mesh",{"_index":3795,"t":{},"b":{"11":{}}}],["freefem:`rmj",{"_index":7676,"t":{},"b":{"15":{}}}],["freefem:label",{"_index":6140,"t":{},"b":{"13":{}}}],["freefem:medit",{"_index":8594,"t":{},"b":{"19":{}}}],["freefem_version_ubuntu_withpetsc_amd64.deb",{"_index":9970,"t":{},"b":{"35":{}}}],["freefem`solv",{"_index":15126,"t":{},"b":{"76":{}}}],["freefemm",{"_index":1976,"t":{},"b":{"3":{}}}],["freefemqa",{"_index":13354,"t":{},"b":{"53":{}}}],["freefemy",{"_index":3690,"t":{},"b":{"10":{}}}],["freefem’",{"_index":10168,"t":{},"b":{"36":{},"64":{}}}],["freefm",{"_index":2727,"t":{},"b":{"4":{}}}],["freeglut",{"_index":10055,"t":{},"b":{"35":{}}}],["freeglut3",{"_index":9967,"t":{},"b":{"35":{}}}],["freewar",{"_index":6956,"t":{},"b":{"13":{},"19":{}}}],["freeyam",{"_index":7062,"t":{},"b":{"13":{},"34":{},"53":{}}}],["freeyams(th",{"_index":7115,"t":{},"b":{"13":{}}}],["freeyams(thinit",{"_index":7070,"t":{},"b":{"13":{}}}],["freez",{"_index":7488,"t":{},"b":{"15":{}}}],["fregion",{"_index":5634,"t":{},"b":{"13":{},"54":{}}}],["frequenc",{"_index":3433,"t":{},"b":{"5":{},"8":{},"51":{}}}],["frequent",{"_index":1019,"t":{},"b":{"3":{},"41":{}}}],["frey",{"_index":6995,"t":{},"b":{"13":{},"19":{},"36":{}}}],["frey’",{"_index":6955,"t":{},"b":{"13":{}}}],["friedrich",{"_index":410,"t":{},"b":{"2":{}}}],["friend",{"_index":13973,"t":{},"b":{"61":{}}}],["friendli",{"_index":5119,"t":{},"b":{"12":{},"33":{}}}],["frobenui",{"_index":8111,"t":{},"b":{"15":{}}}],["front",{"_index":3576,"t":{},"b":{"8":{},"11":{},"13":{},"51":{},"62":{},"66":{}}}],["frontal",{"_index":3575,"t":{},"b":{"8":{},"12":{},"15":{},"72":{},"76":{}}}],["fruit",{"_index":5080,"t":{},"b":{"12":{}}}],["frédéric",{"_index":95,"t":{},"b":{"2":{},"10":{},"29":{},"30":{},"34":{}}}],["fsize",{"_index":6757,"t":{},"b":{"13":{}}}],["ftq",{"_index":2345,"t":{},"b":{"4":{}}}],["fu0",{"_index":4818,"t":{},"b":{"11":{},"68":{}}}],["fulfil",{"_index":1010,"t":{},"b":{"3":{}}}],["full",{"_index":723,"t":{},"b":{"3":{},"8":{},"11":{},"12":{},"13":{},"15":{},"18":{},"20":{},"21":{},"41":{},"42":{},"50":{},"54":{},"72":{},"77":{},"78":{}}}],["fulli",{"_index":1388,"t":{},"b":{"3":{},"16":{},"35":{}}}],["func",{"_index":514,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"38":{},"39":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"50":{},"53":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"66":{},"72":{},"73":{},"75":{},"76":{},"79":{},"81":{}}}],["func)(stack",{"_index":2790,"t":{},"b":{"4":{}}}],["func[basic_typ",{"_index":13776,"t":{},"b":{"56":{}}}],["functempl",{"_index":10130,"t":{},"b":{"35":{}}}],["function",{"_index":501,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"24":{},"26":{},"27":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"60":{},"61":{},"65":{},"66":{},"69":{},"70":{},"72":{},"75":{},"76":{},"81":{}}}],["function.thi",{"_index":6737,"t":{},"b":{"13":{}}}],["functionn",{"_index":8656,"t":{},"b":{"20":{}}}],["functionnalit",{"_index":2732,"t":{},"b":{"4":{}}}],["functionslogo",{"_index":13459,"t":{"54":{}},"b":{}}],["function’",{"_index":13881,"t":{},"b":{"60":{}}}],["fundament",{"_index":1551,"t":{},"b":{"3":{},"15":{},"51":{}}}],["further",{"_index":1144,"t":{},"b":{"3":{},"12":{},"15":{},"20":{},"35":{},"54":{},"72":{}}}],["furthermor",{"_index":8169,"t":{},"b":{"15":{},"66":{},"75":{}}}],["fuse",{"_index":12450,"t":{},"b":{"51":{}}}],["futur",{"_index":13787,"t":{},"b":{"56":{}}}],["fv",{"_index":14730,"t":{},"b":{"72":{}}}],["fx",{"_index":6066,"t":{},"b":{"13":{},"25":{},"40":{},"54":{}}}],["fx*w",{"_index":10886,"t":{},"b":{"40":{}}}],["fxi",{"_index":5394,"t":{},"b":{"13":{}}}],["fxx",{"_index":5589,"t":{},"b":{"13":{}}}],["fxy.n",{"_index":5398,"t":{},"b":{"13":{}}}],["fxy[][i",{"_index":5399,"t":{},"b":{"13":{}}}],["fy",{"_index":6068,"t":{},"b":{"13":{},"25":{},"54":{}}}],["fyi",{"_index":5590,"t":{},"b":{"13":{}}}],["fz",{"_index":6070,"t":{},"b":{"13":{}}}],["f{\\quad\\hbox",{"_index":14317,"t":{},"b":{"65":{}}}],["f{n",{"_index":10311,"t":{},"b":{"37":{}}}],["f{n+1})^t",{"_index":10312,"t":{},"b":{"37":{}}}],["f|_a",{"_index":7297,"t":{},"b":{"14":{}}}],["f}~~\\hbox{in}~~\\omega",{"_index":14253,"t":{},"b":{"64":{}}}],["g",{"_index":206,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"25":{},"26":{},"35":{},"41":{},"48":{},"50":{},"54":{},"61":{},"62":{},"63":{},"67":{},"69":{},"70":{}}}],["g(\"u.txt",{"_index":14489,"t":{},"b":{"67":{}}}],["g(10",{"_index":11261,"t":{},"b":{"42":{}}}],["g(5*n",{"_index":5677,"t":{},"b":{"13":{}}}],["g(6",{"_index":9118,"t":{},"b":{"21":{}}}],["g(\\theta,\\phi",{"_index":1597,"t":{},"b":{"3":{}}}],["g(q",{"_index":4382,"t":{},"b":{"11":{}}}],["g(q^1",{"_index":4401,"t":{},"b":{"11":{}}}],["g(t",{"_index":5669,"t":{},"b":{"13":{},"42":{},"59":{}}}],["g(x",{"_index":13885,"t":{},"b":{"60":{}}}],["g(x.i",{"_index":4131,"t":{},"b":{"11":{}}}],["g)(x",{"_index":7294,"t":{},"b":{"14":{}}}],["g)[i",{"_index":4570,"t":{},"b":{"11":{}}}],["g)g[i",{"_index":4571,"t":{},"b":{"11":{}}}],["g*v",{"_index":6851,"t":{},"b":{"13":{}}}],["g++/gcc",{"_index":2742,"t":{},"b":{"4":{}}}],["g+l*(t",{"_index":14193,"t":{},"b":{"63":{}}}],["g+l/2).region",{"_index":14213,"t":{},"b":{"63":{}}}],["g.linfti",{"_index":8621,"t":{},"b":{"20":{}}}],["g1",{"_index":1430,"t":{},"b":{"3":{},"11":{},"20":{}}}],["g1(t",{"_index":5732,"t":{},"b":{"13":{},"24":{}}}],["g1,g2))[i",{"_index":4579,"t":{},"b":{"11":{}}}],["g1n",{"_index":12232,"t":{},"b":{"48":{}}}],["g2",{"_index":1432,"t":{},"b":{"3":{},"11":{},"20":{}}}],["g2(m",{"_index":5769,"t":{},"b":{"13":{},"24":{}}}],["g2(t",{"_index":5741,"t":{},"b":{"13":{},"24":{}}}],["g2n",{"_index":12233,"t":{},"b":{"48":{}}}],["g3(3*m",{"_index":5770,"t":{},"b":{"13":{},"24":{}}}],["g3(t",{"_index":5750,"t":{},"b":{"13":{},"24":{}}}],["g4(0.067\\ldots,0.31\\ldots,0.31\\ldot",{"_index":4725,"t":{},"b":{"11":{}}}],["g4(0.58\\ldots,0.13\\ldots,0.13\\ldot",{"_index":4722,"t":{},"b":{"11":{}}}],["g4(0.72\\ldots,0.092\\ldots,0.092\\ldot",{"_index":4724,"t":{},"b":{"11":{}}}],["g4(1,0,0",{"_index":4731,"t":{},"b":{"11":{}}}],["g4(a,b,b",{"_index":4732,"t":{},"b":{"11":{}}}],["g4(m",{"_index":5771,"t":{},"b":{"13":{},"24":{}}}],["g4(t",{"_index":5759,"t":{},"b":{"13":{},"24":{}}}],["g6(0.45\\ldots,0.045\\ldots,0.45\\ldot",{"_index":4726,"t":{},"b":{"11":{}}}],["g6(a,b,b",{"_index":4735,"t":{},"b":{"11":{}}}],["g\\in",{"_index":4381,"t":{},"b":{"11":{},"69":{}}}],["g\\left",{"_index":13823,"t":{},"b":{"59":{}}}],["g_3",{"_index":10694,"t":{},"b":{"40":{}}}],["g_d",{"_index":12212,"t":{},"b":{"48":{}}}],["g_i^k",{"_index":7528,"t":{},"b":{"15":{}}}],["g_i~~\\textrm{on",{"_index":10689,"t":{},"b":{"40":{}}}],["g_j",{"_index":13753,"t":{},"b":{"55":{}}}],["g_n",{"_index":12213,"t":{},"b":{"48":{}}}],["g_{1",{"_index":1402,"t":{},"b":{"3":{}}}],["g_{1}\\leq",{"_index":1406,"t":{},"b":{"3":{}}}],["g_{2",{"_index":1403,"t":{},"b":{"3":{}}}],["gain",{"_index":8165,"t":{},"b":{"15":{}}}],["gakuin",{"_index":9775,"t":{},"b":{"29":{}}}],["galerkin",{"_index":409,"t":{},"b":{"2":{},"12":{},"41":{},"54":{},"65":{},"77":{}}}],["galleri",{"_index":375,"t":{"51":{}},"b":{"2":{},"23":{},"37":{},"51":{}}}],["game",{"_index":15156,"t":{},"b":{"77":{}}}],["gamg",{"_index":8317,"t":{},"b":{"17":{}}}],["gamma",{"_index":1363,"t":{},"b":{"3":{},"11":{},"13":{},"14":{},"15":{},"36":{},"40":{},"42":{},"45":{},"48":{},"49":{},"54":{},"62":{},"65":{},"67":{},"69":{},"72":{},"73":{},"74":{},"76":{}}}],["gamma(t",{"_index":6972,"t":{},"b":{"13":{}}}],["gamma1",{"_index":15086,"t":{},"b":{"76":{}}}],["gamma1(t",{"_index":6973,"t":{},"b":{"13":{},"38":{},"72":{},"76":{}}}],["gamma2",{"_index":6981,"t":{},"b":{"13":{},"72":{}}}],["gamma2(10*(n+1",{"_index":14776,"t":{},"b":{"72":{}}}],["gamma2(5*n",{"_index":10468,"t":{},"b":{"38":{}}}],["gamma2(50",{"_index":14747,"t":{},"b":{"72":{}}}],["gamma2(t",{"_index":6976,"t":{},"b":{"13":{},"38":{},"72":{},"76":{}}}],["gamma3(5*n",{"_index":10470,"t":{},"b":{"38":{}}}],["gamma3(t",{"_index":10464,"t":{},"b":{"38":{}}}],["gamma\\hbox",{"_index":14358,"t":{},"b":{"65":{}}}],["gamma\\right.\\right",{"_index":7374,"t":{},"b":{"14":{}}}],["gamma\\setminu",{"_index":12153,"t":{},"b":{"48":{}}}],["gamma\\times(0,t",{"_index":14531,"t":{},"b":{"68":{},"79":{}}}],["gamma\\times]0,t",{"_index":14365,"t":{},"b":{"65":{}}}],["gamma^n_a",{"_index":11331,"t":{},"b":{"43":{}}}],["gamma^n_b",{"_index":11324,"t":{},"b":{"43":{}}}],["gamma^n_b\\cup\\gamma^n_d",{"_index":11332,"t":{},"b":{"43":{}}}],["gamma^n_d\\cup\\gamma^n_a",{"_index":11325,"t":{},"b":{"43":{}}}],["gamma^n_f",{"_index":11326,"t":{},"b":{"43":{}}}],["gamma_1",{"_index":4653,"t":{},"b":{"11":{},"13":{},"40":{},"48":{},"63":{},"64":{},"65":{},"72":{},"79":{}}}],["gamma_1,\\gamma_2",{"_index":12155,"t":{},"b":{"48":{}}}],["gamma_1\\cup\\gamma_2",{"_index":14363,"t":{},"b":{"65":{}}}],["gamma_2",{"_index":4539,"t":{},"b":{"11":{},"13":{},"40":{},"48":{},"63":{},"64":{},"65":{},"72":{}}}],["gamma_24",{"_index":4841,"t":{},"b":{"11":{}}}],["gamma_3",{"_index":4657,"t":{},"b":{"11":{},"64":{}}}],["gamma_3}f(x,y)d",{"_index":4659,"t":{},"b":{"11":{}}}],["gamma_4",{"_index":14260,"t":{},"b":{"64":{}}}],["gamma_a",{"_index":11311,"t":{},"b":{"43":{}}}],["gamma_b",{"_index":11313,"t":{},"b":{"43":{}}}],["gamma_d",{"_index":4457,"t":{},"b":{"11":{},"40":{},"43":{},"48":{}}}],["gamma_d\\cup\\gamma_a",{"_index":11321,"t":{},"b":{"43":{}}}],["gamma_d\\subset",{"_index":10678,"t":{},"b":{"40":{}}}],["gamma_d\\tim",{"_index":10677,"t":{},"b":{"40":{}}}],["gamma_e^i",{"_index":10450,"t":{},"b":{"38":{}}}],["gamma_f",{"_index":11316,"t":{},"b":{"43":{}}}],["gamma_h",{"_index":4620,"t":{},"b":{"11":{},"14":{},"76":{}}}],["gamma_i",{"_index":7496,"t":{},"b":{"15":{},"38":{},"48":{},"49":{}}}],["gamma_i\\setminu",{"_index":7544,"t":{},"b":{"15":{}}}],["gamma_i\\setminus\\gamma",{"_index":7534,"t":{},"b":{"15":{}}}],["gamma_j",{"_index":5185,"t":{},"b":{"13":{},"48":{},"76":{}}}],["gamma_k",{"_index":10780,"t":{},"b":{"40":{}}}],["gamma_n",{"_index":4465,"t":{},"b":{"11":{},"40":{},"48":{}}}],["gamma_n\\tim",{"_index":10681,"t":{},"b":{"40":{}}}],["gamma_r",{"_index":4456,"t":{},"b":{"11":{}}}],["gamma_{2",{"_index":4574,"t":{},"b":{"11":{}}}],["gamma_{24",{"_index":4801,"t":{},"b":{"11":{},"68":{}}}],["gamma_{24}\\times(0,t",{"_index":14528,"t":{},"b":{"68":{}}}],["gamma_{5",{"_index":4540,"t":{},"b":{"11":{}}}],["gamma_{\\infti",{"_index":11942,"t":{},"b":{"48":{}}}],["gamma_{k}\\vecttwo{x}{i",{"_index":2464,"t":{},"b":{"4":{},"11":{}}}],["gamma_{out",{"_index":14902,"t":{},"b":{"74":{}}}],["gammaarc(25*n",{"_index":10473,"t":{},"b":{"38":{}}}],["gammaarc(t",{"_index":10466,"t":{},"b":{"38":{}}}],["gammainside(5*n",{"_index":10469,"t":{},"b":{"38":{}}}],["gammainside(t",{"_index":10465,"t":{},"b":{"38":{}}}],["garnotel",{"_index":9784,"t":{},"b":{"29":{}}}],["gather",{"_index":3251,"t":{},"b":{"5":{},"15":{},"16":{}}}],["gauss",{"_index":3573,"t":{},"b":{"8":{},"11":{},"66":{},"72":{}}}],["gaussian",{"_index":8732,"t":{},"b":{"20":{}}}],["gawk",{"_index":10096,"t":{},"b":{"35":{}}}],["gb",{"_index":9006,"t":{},"b":{"21":{}}}],["gc",{"_index":10495,"t":{},"b":{"38":{}}}],["gcc",{"_index":2749,"t":{},"b":{"4":{},"35":{}}}],["gcro",{"_index":3330,"t":{},"b":{"5":{},"7":{}}}],["gcrodr",{"_index":3326,"t":{},"b":{"5":{},"10":{}}}],["gd",{"_index":4503,"t":{},"b":{"11":{},"48":{}}}],["gd*(v1*n.x",{"_index":12238,"t":{},"b":{"48":{}}}],["gdb",{"_index":10046,"t":{},"b":{"35":{}}}],["ge",{"_index":3259,"t":{},"b":{"5":{},"8":{},"10":{},"45":{}}}],["gedit",{"_index":9845,"t":{},"b":{"32":{},"35":{}}}],["geev",{"_index":13308,"t":{},"b":{"53":{}}}],["geneo",{"_index":3224,"t":{},"b":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"16":{}}}],["gener",{"_index":115,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"21":{},"22":{},"24":{},"25":{},"27":{},"29":{},"33":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"42":{},"45":{},"48":{},"51":{},"54":{},"55":{},"60":{},"65":{},"70":{},"72":{},"76":{}}}],["generali",{"_index":2542,"t":{},"b":{"4":{}}}],["generation.th",{"_index":6707,"t":{},"b":{"13":{}}}],["generationlogo",{"_index":5130,"t":{"13":{},"24":{}},"b":{}}],["genet",{"_index":1920,"t":{},"b":{"3":{}}}],["geneviev",{"_index":433,"t":{},"b":{"2":{}}}],["geomet",{"_index":6647,"t":{},"b":{"13":{}}}],["geometr",{"_index":2176,"t":{},"b":{"4":{},"11":{},"12":{},"13":{},"15":{},"16":{},"48":{},"54":{},"60":{}}}],["geometri",{"_index":79,"t":{},"b":{"2":{},"4":{},"11":{},"13":{},"33":{},"42":{},"51":{},"54":{},"61":{},"66":{},"69":{},"71":{},"72":{},"74":{}}}],["georg",{"_index":58,"t":{},"b":{"2":{}}}],["george1996",{"_index":57,"t":{},"b":{"2":{},"12":{}}}],["geq",{"_index":1546,"t":{},"b":{"3":{},"5":{},"50":{},"65":{}}}],["germani",{"_index":6663,"t":{},"b":{"13":{}}}],["gest",{"_index":8630,"t":{},"b":{"20":{}}}],["gestion",{"_index":6529,"t":{},"b":{"13":{}}}],["get",{"_index":3489,"t":{"76":{}},"b":{"7":{},"13":{},"65":{},"70":{},"76":{}}}],["getargv",{"_index":7689,"t":{},"b":{"15":{},"21":{},"26":{}}}],["getargv.idp",{"_index":7688,"t":{},"b":{"15":{},"21":{},"26":{}}}],["getbord",{"_index":13407,"t":{},"b":{"53":{}}}],["getenv",{"_index":13440,"t":{},"b":{"53":{}}}],["getlin",{"_index":12584,"t":{},"b":{"52":{}}}],["getline(ff",{"_index":9127,"t":{},"b":{"21":{},"26":{}}}],["getline(fil",{"_index":12585,"t":{},"b":{"52":{}}}],["getopenfilenam",{"_index":9944,"t":{},"b":{"35":{}}}],["gfortran",{"_index":9998,"t":{},"b":{"35":{}}}],["gg",{"_index":9009,"t":{},"b":{"21":{},"39":{},"67":{}}}],["gg(\"v.txt",{"_index":14490,"t":{},"b":{"67":{}}}],["ggg",{"_index":14492,"t":{},"b":{"67":{}}}],["ggg(\"r.txt",{"_index":14491,"t":{},"b":{"67":{}}}],["gh1",{"_index":2001,"t":{},"b":{"3":{},"20":{}}}],["gh1[][i",{"_index":2066,"t":{},"b":{"3":{},"20":{}}}],["gh2",{"_index":2003,"t":{},"b":{"3":{},"20":{}}}],["gh2[][i",{"_index":2070,"t":{},"b":{"3":{},"20":{}}}],["ghz",{"_index":3464,"t":{},"b":{"7":{},"10":{}}}],["giant",{"_index":4567,"t":{},"b":{"11":{},"60":{}}}],["gibbs.cpp",{"_index":2705,"t":{},"b":{"4":{}}}],["gill",{"_index":42,"t":{},"b":{"2":{}}}],["git",{"_index":9974,"t":{},"b":{"35":{}}}],["git.git",{"_index":9977,"t":{},"b":{"35":{}}}],["github",{"_index":8305,"t":{},"b":{"16":{},"19":{},"29":{},"32":{}}}],["giusepp",{"_index":221,"t":{},"b":{"2":{}}}],["give",{"_index":547,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"17":{},"45":{},"48":{},"64":{},"72":{},"76":{},"79":{},"81":{}}}],["given",{"_index":528,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"18":{},"21":{},"26":{},"35":{},"37":{},"39":{},"40":{},"41":{},"42":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"54":{},"60":{},"62":{},"63":{},"66":{},"67":{},"69":{},"70":{},"71":{},"73":{},"75":{},"76":{},"77":{}}}],["glimps",{"_index":888,"t":{},"b":{"3":{}}}],["global",{"_index":748,"t":{"55":{}},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"20":{},"26":{},"35":{},"55":{},"56":{},"59":{},"60":{},"70":{},"72":{},"75":{},"81":{}}}],["global.add(\"myfunct",{"_index":2807,"t":{},"b":{"4":{}}}],["glowinski",{"_index":314,"t":{},"b":{"2":{}}}],["glowinski1979",{"_index":313,"t":{},"b":{"2":{},"45":{}}}],["glowinski1985",{"_index":329,"t":{},"b":{"2":{},"45":{}}}],["glowinski2003",{"_index":337,"t":{},"b":{"2":{},"45":{}}}],["glu",{"_index":6219,"t":{},"b":{"13":{},"24":{},"48":{}}}],["glue",{"_index":6568,"t":{},"b":{"13":{},"36":{}}}],["gluemesh",{"_index":13405,"t":{},"b":{"53":{}}}],["glut",{"_index":7952,"t":{},"b":{"15":{},"20":{},"26":{}}}],["glutdraw.cpp",{"_index":2706,"t":{},"b":{"4":{}}}],["gmm",{"_index":9910,"t":{},"b":{"34":{},"35":{}}}],["gmre",{"_index":702,"t":{},"b":{"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{},"26":{},"48":{},"54":{},"55":{},"60":{},"77":{}}}],["gmres(gener",{"_index":698,"t":{},"b":{"3":{}}}],["gmres.hpp",{"_index":2707,"t":{},"b":{"4":{}}}],["gmsh",{"_index":6879,"t":{},"b":{"13":{},"36":{},"53":{}}}],["gmsh)1",{"_index":6878,"t":{},"b":{"13":{}}}],["gmshload",{"_index":6876,"t":{},"b":{"13":{},"53":{}}}],["gmshload(\"mymesh.msh",{"_index":6880,"t":{},"b":{"13":{}}}],["gmshload(meshfil",{"_index":13356,"t":{},"b":{"53":{}}}],["gmshload3",{"_index":6931,"t":{},"b":{"13":{},"53":{}}}],["gmshload3(\"mymesh.msh",{"_index":6932,"t":{},"b":{"13":{}}}],["gmshload3(meshfil",{"_index":13358,"t":{},"b":{"53":{}}}],["gmshloads(\"mymesh.msh",{"_index":6952,"t":{},"b":{"13":{}}}],["gn",{"_index":4499,"t":{},"b":{"11":{}}}],["gnu",{"_index":8587,"t":{},"b":{"19":{},"27":{}}}],["gnu(\"plot.gp",{"_index":8586,"t":{},"b":{"19":{},"27":{}}}],["gnuplot",{"_index":7192,"t":{},"b":{"13":{},"19":{},"27":{},"35":{},"72":{},"79":{}}}],["gnuplot.ep",{"_index":8591,"t":{},"b":{"19":{},"27":{}}}],["go",{"_index":2474,"t":{},"b":{"4":{},"11":{},"13":{},"35":{},"62":{},"72":{},"76":{}}}],["goal",{"_index":3731,"t":{},"b":{"10":{}}}],["goe",{"_index":11233,"t":{},"b":{"42":{},"44":{}}}],["good",{"_index":3425,"t":{},"b":{"5":{},"7":{},"8":{},"15":{},"21":{},"26":{},"39":{},"41":{},"74":{}}}],["gouraud",{"_index":14687,"t":{},"b":{"71":{}}}],["govern",{"_index":14126,"t":{},"b":{"62":{},"64":{}}}],["gp",{"_index":8178,"t":{},"b":{"15":{}}}],["gpvortex",{"_index":12610,"t":{},"b":{"53":{}}}],["grad",{"_index":1755,"t":{},"b":{"3":{},"20":{},"37":{},"66":{}}}],["grad(0:vh.ndof",{"_index":2024,"t":{},"b":{"3":{}}}],["grad(du1,du2",{"_index":14861,"t":{},"b":{"73":{}}}],["grad(ep",{"_index":14078,"t":{},"b":{"61":{}}}],["grad(j",{"_index":1903,"t":{},"b":{"3":{}}}],["grad(k",{"_index":14072,"t":{},"b":{"61":{}}}],["grad(p",{"_index":11596,"t":{},"b":{"45":{}}}],["grad(psi)'*grad(w",{"_index":14399,"t":{},"b":{"66":{}}}],["grad(q",{"_index":11597,"t":{},"b":{"45":{},"61":{}}}],["grad(t",{"_index":14066,"t":{},"b":{"61":{}}}],["grad(u",{"_index":1377,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"11":{},"13":{},"18":{},"21":{},"24":{},"25":{},"26":{},"45":{},"48":{},"60":{},"61":{},"66":{}}}],["grad(u#i",{"_index":9368,"t":{},"b":{"25":{},"60":{},"61":{}}}],["grad(u#x",{"_index":9367,"t":{},"b":{"25":{},"60":{},"61":{}}}],["grad(u)'*grad(v",{"_index":1381,"t":{},"b":{"3":{},"11":{},"15":{},"18":{},"24":{},"48":{}}}],["grad(u):grad(uh",{"_index":9382,"t":{},"b":{"25":{}}}],["grad(u0)'*grad(v",{"_index":5043,"t":{},"b":{"11":{}}}],["grad(u1",{"_index":9348,"t":{},"b":{"25":{}}}],["grad(u1)'*grad(v",{"_index":5038,"t":{},"b":{"11":{}}}],["grad(u1)'*grad(v1",{"_index":1442,"t":{},"b":{"3":{}}}],["grad(u1,u2",{"_index":14853,"t":{},"b":{"73":{}}}],["grad(u2",{"_index":9350,"t":{},"b":{"25":{}}}],["grad(u2)'*grad(v2",{"_index":1443,"t":{},"b":{"3":{}}}],["grad(u3",{"_index":9352,"t":{},"b":{"25":{}}}],["grad(uh",{"_index":7156,"t":{},"b":{"13":{}}}],["grad(uh)'*grad(vh)*100",{"_index":12149,"t":{},"b":{"48":{}}}],["grad(uh)'*grad(vh)*2",{"_index":12150,"t":{},"b":{"48":{}}}],["grad(uy",{"_index":9177,"t":{},"b":{"21":{}}}],["grad(v",{"_index":2999,"t":{},"b":{"5":{},"7":{},"10":{},"13":{},"21":{},"25":{},"61":{}}}],["grad(v1",{"_index":9349,"t":{},"b":{"25":{},"45":{}}}],["grad(v1,v2",{"_index":14862,"t":{},"b":{"73":{}}}],["grad(v2",{"_index":9351,"t":{},"b":{"25":{}}}],["grad(v3",{"_index":9353,"t":{},"b":{"25":{}}}],["grad(vh",{"_index":7157,"t":{},"b":{"13":{}}}],["grad(vh.ndof:2*vh.ndof",{"_index":2025,"t":{},"b":{"3":{}}}],["grad(x.n",{"_index":2023,"t":{},"b":{"3":{}}}],["grad1",{"_index":2019,"t":{},"b":{"3":{}}}],["grad11(u1",{"_index":10263,"t":{},"b":{"37":{}}}],["grad11(varu1",{"_index":10275,"t":{},"b":{"37":{}}}],["grad11(w1",{"_index":10328,"t":{},"b":{"37":{}}}],["grad12(u1",{"_index":10266,"t":{},"b":{"37":{}}}],["grad12(varu1",{"_index":10277,"t":{},"b":{"37":{}}}],["grad12(w1",{"_index":10331,"t":{},"b":{"37":{}}}],["grad2",{"_index":2021,"t":{},"b":{"3":{}}}],["grad2(u",{"_index":6985,"t":{},"b":{"13":{}}}],["grad2(u1",{"_index":6991,"t":{},"b":{"13":{}}}],["grad2(v",{"_index":6987,"t":{},"b":{"13":{}}}],["grad2(v1",{"_index":6990,"t":{},"b":{"13":{}}}],["grad21(u1",{"_index":10264,"t":{},"b":{"37":{}}}],["grad21(varu1",{"_index":10279,"t":{},"b":{"37":{}}}],["grad21(w1",{"_index":10334,"t":{},"b":{"37":{}}}],["grad22(u1",{"_index":10268,"t":{},"b":{"37":{}}}],["grad22(varu1",{"_index":10281,"t":{},"b":{"37":{}}}],["grad22(w1",{"_index":10335,"t":{},"b":{"37":{}}}],["grad3(u",{"_index":8063,"t":{},"b":{"15":{},"25":{}}}],["grad3(v",{"_index":8065,"t":{},"b":{"15":{},"25":{}}}],["gradarea",{"_index":1737,"t":{},"b":{"3":{},"20":{}}}],["gradat",{"_index":7073,"t":{},"b":{"13":{}}}],["gradeconst",{"_index":2137,"t":{},"b":{"3":{}}}],["gradiant",{"_index":8624,"t":{},"b":{"20":{}}}],["gradiconst",{"_index":2126,"t":{},"b":{"3":{}}}],["gradiconst/gradeconst",{"_index":1933,"t":{},"b":{"3":{}}}],["gradient",{"_index":507,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"13":{},"14":{},"20":{},"37":{},"38":{},"42":{},"45":{},"54":{},"55":{},"75":{},"76":{}}}],["gradient/gmr",{"_index":478,"t":{},"b":{"3":{}}}],["gradj",{"_index":1095,"t":{},"b":{"3":{}}}],["gradual",{"_index":14888,"t":{},"b":{"73":{}}}],["gradvolum",{"_index":1808,"t":{},"b":{"3":{},"20":{}}}],["gradvolume(x",{"_index":1825,"t":{},"b":{"3":{},"20":{}}}],["graham",{"_index":3430,"t":{},"b":{"5":{}}}],["grand",{"_index":13905,"t":{},"b":{"60":{},"76":{}}}],["graph",{"_index":157,"t":{},"b":{"2":{},"9":{},"13":{},"15":{},"48":{},"70":{},"76":{}}}],["graph.txt",{"_index":14804,"t":{},"b":{"72":{}}}],["graphic",{"_index":5124,"t":{},"b":{"12":{},"13":{},"15":{},"18":{},"19":{},"48":{},"54":{},"66":{},"72":{},"76":{}}}],["graphicali",{"_index":9394,"t":{},"b":{"26":{}}}],["grasp",{"_index":8506,"t":{},"b":{"19":{}}}],["graviti",{"_index":2425,"t":{},"b":{"4":{},"13":{},"40":{},"42":{},"48":{},"64":{}}}],["gravity*",{"_index":10734,"t":{},"b":{"40":{},"42":{}}}],["gravity*v3",{"_index":6187,"t":{},"b":{"13":{},"40":{}}}],["gray",{"_index":7221,"t":{},"b":{"13":{},"19":{},"27":{}}}],["greater",{"_index":8379,"t":{},"b":{"18":{},"39":{},"51":{},"54":{}}}],["greatest",{"_index":1266,"t":{},"b":{"3":{}}}],["green",{"_index":10178,"t":{},"b":{"37":{},"46":{}}}],["green’",{"_index":11385,"t":{},"b":{"45":{},"51":{},"72":{},"76":{}}}],["grep",{"_index":10098,"t":{},"b":{"35":{}}}],["grew",{"_index":9864,"t":{},"b":{"33":{}}}],["grey",{"_index":8537,"t":{},"b":{"19":{},"27":{},"54":{}}}],["grid",{"_index":3632,"t":{},"b":{"8":{},"11":{},"13":{},"15":{},"16":{},"19":{},"26":{}}}],["grid5000",{"_index":7983,"t":{},"b":{"15":{}}}],["grip",{"_index":14124,"t":{},"b":{"62":{}}}],["gropp",{"_index":191,"t":{},"b":{"2":{}}}],["group",{"_index":7386,"t":{},"b":{"15":{},"35":{},"69":{},"76":{}}}],["grow",{"_index":4415,"t":{},"b":{"11":{},"33":{},"44":{}}}],["grp",{"_index":7413,"t":{},"b":{"15":{}}}],["grp(proc1",{"_index":7408,"t":{},"b":{"15":{}}}],["grp1(comm",{"_index":7411,"t":{},"b":{"15":{}}}],["grpe(mpigroup",{"_index":8177,"t":{},"b":{"15":{}}}],["grudinin",{"_index":390,"t":{},"b":{"2":{},"51":{}}}],["grudinin2012",{"_index":389,"t":{},"b":{"2":{},"51":{}}}],["gs",{"_index":8039,"t":{},"b":{"15":{}}}],["gsl",{"_index":8324,"t":{},"b":{"18":{},"35":{},"53":{},"60":{}}}],["gsl_cdf_beta_p(a",{"_index":12726,"t":{},"b":{"53":{}}}],["gsl_cdf_beta_pinv(a",{"_index":12730,"t":{},"b":{"53":{}}}],["gsl_cdf_beta_q(a",{"_index":12728,"t":{},"b":{"53":{}}}],["gsl_cdf_beta_qinv(a",{"_index":12732,"t":{},"b":{"53":{}}}],["gsl_cdf_binomial_p(a",{"_index":12790,"t":{},"b":{"53":{}}}],["gsl_cdf_binomial_q(a",{"_index":12792,"t":{},"b":{"53":{}}}],["gsl_cdf_cauchy_p(a",{"_index":12666,"t":{},"b":{"53":{}}}],["gsl_cdf_cauchy_pinv(a",{"_index":12670,"t":{},"b":{"53":{}}}],["gsl_cdf_cauchy_q(a",{"_index":12668,"t":{},"b":{"53":{}}}],["gsl_cdf_cauchy_qinv(a",{"_index":12672,"t":{},"b":{"53":{}}}],["gsl_cdf_chisq_p(a",{"_index":12690,"t":{},"b":{"53":{}}}],["gsl_cdf_chisq_pinv(a",{"_index":12694,"t":{},"b":{"53":{}}}],["gsl_cdf_chisq_q(a",{"_index":12692,"t":{},"b":{"53":{}}}],["gsl_cdf_chisq_qinv(a",{"_index":12696,"t":{},"b":{"53":{}}}],["gsl_cdf_exponential_p(a",{"_index":12698,"t":{},"b":{"53":{}}}],["gsl_cdf_exponential_pinv(a",{"_index":12702,"t":{},"b":{"53":{}}}],["gsl_cdf_exponential_q(a",{"_index":12700,"t":{},"b":{"53":{}}}],["gsl_cdf_exponential_qinv(a",{"_index":12704,"t":{},"b":{"53":{}}}],["gsl_cdf_exppow_p(a",{"_index":12706,"t":{},"b":{"53":{}}}],["gsl_cdf_exppow_q(a",{"_index":12708,"t":{},"b":{"53":{}}}],["gsl_cdf_fdist_p(a",{"_index":12718,"t":{},"b":{"53":{}}}],["gsl_cdf_fdist_pinv(a",{"_index":12722,"t":{},"b":{"53":{}}}],["gsl_cdf_fdist_q(a",{"_index":12720,"t":{},"b":{"53":{}}}],["gsl_cdf_fdist_qinv(a",{"_index":12724,"t":{},"b":{"53":{}}}],["gsl_cdf_flat_p(a",{"_index":12734,"t":{},"b":{"53":{}}}],["gsl_cdf_flat_pinv(a",{"_index":12738,"t":{},"b":{"53":{}}}],["gsl_cdf_flat_q(a",{"_index":12736,"t":{},"b":{"53":{}}}],["gsl_cdf_flat_qinv(a",{"_index":12740,"t":{},"b":{"53":{}}}],["gsl_cdf_gamma_p(a",{"_index":12659,"t":{},"b":{"53":{}}}],["gsl_cdf_gamma_pinv(a",{"_index":12663,"t":{},"b":{"53":{}}}],["gsl_cdf_gamma_q(a",{"_index":12661,"t":{},"b":{"53":{}}}],["gsl_cdf_gaussian_p(a",{"_index":12651,"t":{},"b":{"53":{}}}],["gsl_cdf_gaussian_pinv(a",{"_index":12655,"t":{},"b":{"53":{}}}],["gsl_cdf_gaussian_q(a",{"_index":12653,"t":{},"b":{"53":{}}}],["gsl_cdf_gaussian_qinv(a",{"_index":12657,"t":{},"b":{"53":{}}}],["gsl_cdf_geometric_p(a",{"_index":12798,"t":{},"b":{"53":{}}}],["gsl_cdf_geometric_q(a",{"_index":12800,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel1_p(a",{"_index":12750,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel1_pinv(a",{"_index":12754,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel1_q(a",{"_index":12752,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel1_qinv(a",{"_index":12756,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel2_p(a",{"_index":12758,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel2_pinv(a",{"_index":12762,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel2_q(a",{"_index":12760,"t":{},"b":{"53":{}}}],["gsl_cdf_gumbel2_qinv(a",{"_index":12764,"t":{},"b":{"53":{}}}],["gsl_cdf_lapalce_p(a",{"_index":12674,"t":{},"b":{"53":{}}}],["gsl_cdf_lapalce_pinv(a",{"_index":12678,"t":{},"b":{"53":{}}}],["gsl_cdf_lapalce_q(a",{"_index":12676,"t":{},"b":{"53":{}}}],["gsl_cdf_lapalce_qinv(a",{"_index":12680,"t":{},"b":{"53":{}}}],["gsl_cdf_logistic_p(a",{"_index":12782,"t":{},"b":{"53":{}}}],["gsl_cdf_logistic_pinv(a",{"_index":12786,"t":{},"b":{"53":{}}}],["gsl_cdf_logistic_q(a",{"_index":12784,"t":{},"b":{"53":{}}}],["gsl_cdf_logistic_qinv(a",{"_index":12788,"t":{},"b":{"53":{}}}],["gsl_cdf_lognormal_p(a",{"_index":12742,"t":{},"b":{"53":{}}}],["gsl_cdf_lognormal_pinv(a",{"_index":12746,"t":{},"b":{"53":{}}}],["gsl_cdf_lognormal_q(a",{"_index":12744,"t":{},"b":{"53":{}}}],["gsl_cdf_lognormal_qinv(a",{"_index":12748,"t":{},"b":{"53":{}}}],["gsl_cdf_negative_binomial_p(a",{"_index":12802,"t":{},"b":{"53":{}}}],["gsl_cdf_negative_binomial_q(a",{"_index":12804,"t":{},"b":{"53":{}}}],["gsl_cdf_pareto_p(a",{"_index":12774,"t":{},"b":{"53":{}}}],["gsl_cdf_pareto_pinv(a",{"_index":12778,"t":{},"b":{"53":{}}}],["gsl_cdf_pareto_q(a",{"_index":12776,"t":{},"b":{"53":{}}}],["gsl_cdf_pareto_qinv(a",{"_index":12780,"t":{},"b":{"53":{}}}],["gsl_cdf_pascal_p(a",{"_index":12806,"t":{},"b":{"53":{}}}],["gsl_cdf_pascal_q(a",{"_index":12808,"t":{},"b":{"53":{}}}],["gsl_cdf_poisson_p(a",{"_index":12794,"t":{},"b":{"53":{}}}],["gsl_cdf_poisson_q(a",{"_index":12796,"t":{},"b":{"53":{}}}],["gsl_cdf_rayleigh_p(a",{"_index":12682,"t":{},"b":{"53":{}}}],["gsl_cdf_rayleigh_pinv(a",{"_index":12686,"t":{},"b":{"53":{}}}],["gsl_cdf_rayleigh_q(a",{"_index":12684,"t":{},"b":{"53":{}}}],["gsl_cdf_rayleigh_qinv(a",{"_index":12688,"t":{},"b":{"53":{}}}],["gsl_cdf_t_dist_p(a",{"_index":12710,"t":{},"b":{"53":{}}}],["gsl_cdf_t_dist_pinv(a",{"_index":12714,"t":{},"b":{"53":{}}}],["gsl_cdf_t_dist_q(a",{"_index":12712,"t":{},"b":{"53":{}}}],["gsl_cdf_t_dist_qinv(a",{"_index":12716,"t":{},"b":{"53":{}}}],["gsl_cdf_ugaussian_p(a",{"_index":12643,"t":{},"b":{"53":{}}}],["gsl_cdf_ugaussian_pinv(a",{"_index":12647,"t":{},"b":{"53":{}}}],["gsl_cdf_ugaussian_q(a",{"_index":12645,"t":{},"b":{"53":{}}}],["gsl_cdf_ugaussian_qinv(a",{"_index":12649,"t":{},"b":{"53":{}}}],["gsl_cdf_weibull_p(a",{"_index":12766,"t":{},"b":{"53":{}}}],["gsl_cdf_weibull_pinv(a",{"_index":12770,"t":{},"b":{"53":{}}}],["gsl_cdf_weibull_q(a",{"_index":12768,"t":{},"b":{"53":{}}}],["gsl_cdf_weibull_qinv(a",{"_index":12772,"t":{},"b":{"53":{}}}],["gsl_ran_bernoulli_pdf(a",{"_index":12810,"t":{},"b":{"53":{}}}],["gsl_ran_beta(a",{"_index":12812,"t":{},"b":{"53":{}}}],["gsl_ran_beta_pdf(a",{"_index":12814,"t":{},"b":{"53":{}}}],["gsl_ran_binomial_pdf(a",{"_index":12816,"t":{},"b":{"53":{}}}],["gsl_ran_cauchy(a",{"_index":12826,"t":{},"b":{"53":{}}}],["gsl_ran_cauchy_pdf(a",{"_index":12828,"t":{},"b":{"53":{}}}],["gsl_ran_chisq(a",{"_index":12830,"t":{},"b":{"53":{}}}],["gsl_ran_chisq_pdf(a",{"_index":12832,"t":{},"b":{"53":{}}}],["gsl_ran_erlang(a",{"_index":12834,"t":{},"b":{"53":{}}}],["gsl_ran_erlang_pdf(a",{"_index":12836,"t":{},"b":{"53":{}}}],["gsl_ran_exponential(a",{"_index":12818,"t":{},"b":{"53":{}}}],["gsl_ran_exponential_pdf(a",{"_index":12820,"t":{},"b":{"53":{}}}],["gsl_ran_exppow(a",{"_index":12822,"t":{},"b":{"53":{}}}],["gsl_ran_exppow_pdf(a",{"_index":12824,"t":{},"b":{"53":{}}}],["gsl_ran_fdist(a",{"_index":12838,"t":{},"b":{"53":{}}}],["gsl_ran_fdist_pdf(a",{"_index":12840,"t":{},"b":{"53":{}}}],["gsl_ran_flat(a",{"_index":12842,"t":{},"b":{"53":{}}}],["gsl_ran_flat_pdf(a",{"_index":12844,"t":{},"b":{"53":{}}}],["gsl_ran_gamma(a",{"_index":12846,"t":{},"b":{"53":{}}}],["gsl_ran_gamma_int(a",{"_index":12848,"t":{},"b":{"53":{}}}],["gsl_ran_gamma_knuth(a",{"_index":12854,"t":{},"b":{"53":{}}}],["gsl_ran_gamma_mt(a",{"_index":12852,"t":{},"b":{"53":{}}}],["gsl_ran_gamma_pdf(a",{"_index":12850,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian(a",{"_index":12856,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian_pdf(a",{"_index":12862,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian_ratio_method(a",{"_index":12858,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian_tail(a",{"_index":12870,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian_tail_pdf(a",{"_index":12872,"t":{},"b":{"53":{}}}],["gsl_ran_gaussian_ziggurat(a",{"_index":12860,"t":{},"b":{"53":{}}}],["gsl_ran_geometric_pdf(a",{"_index":12882,"t":{},"b":{"53":{}}}],["gsl_ran_gumbel1(a",{"_index":12884,"t":{},"b":{"53":{}}}],["gsl_ran_gumbel1_pdf(a",{"_index":12886,"t":{},"b":{"53":{}}}],["gsl_ran_gumbel2(a",{"_index":12888,"t":{},"b":{"53":{}}}],["gsl_ran_gumbel2_pdf(a",{"_index":12890,"t":{},"b":{"53":{}}}],["gsl_ran_landau(a",{"_index":12878,"t":{},"b":{"53":{}}}],["gsl_ran_landau_pdf(a",{"_index":12880,"t":{},"b":{"53":{}}}],["gsl_ran_laplace(a",{"_index":12924,"t":{},"b":{"53":{}}}],["gsl_ran_laplace_pdf(a",{"_index":12926,"t":{},"b":{"53":{}}}],["gsl_ran_levy(a",{"_index":12928,"t":{},"b":{"53":{}}}],["gsl_ran_logarithmic_pdf(a",{"_index":12900,"t":{},"b":{"53":{}}}],["gsl_ran_logistic(a",{"_index":12892,"t":{},"b":{"53":{}}}],["gsl_ran_logistic_pdf(a",{"_index":12894,"t":{},"b":{"53":{}}}],["gsl_ran_lognormal(a",{"_index":12896,"t":{},"b":{"53":{}}}],["gsl_ran_lognormal_pdf(a",{"_index":12898,"t":{},"b":{"53":{}}}],["gsl_ran_negative_binomial_pdf(a",{"_index":12902,"t":{},"b":{"53":{}}}],["gsl_ran_pareto(a",{"_index":12906,"t":{},"b":{"53":{}}}],["gsl_ran_pareto_pdf(a",{"_index":12908,"t":{},"b":{"53":{}}}],["gsl_ran_pascal_pdf(a",{"_index":12904,"t":{},"b":{"53":{}}}],["gsl_ran_poisson_pdf(a",{"_index":12910,"t":{},"b":{"53":{}}}],["gsl_ran_rayleigh(a",{"_index":12912,"t":{},"b":{"53":{}}}],["gsl_ran_rayleigh_pdf(a",{"_index":12914,"t":{},"b":{"53":{}}}],["gsl_ran_rayleigh_tail(a",{"_index":12916,"t":{},"b":{"53":{}}}],["gsl_ran_rayleigh_tail_pdf(a",{"_index":12918,"t":{},"b":{"53":{}}}],["gsl_ran_tdsit(a",{"_index":12920,"t":{},"b":{"53":{}}}],["gsl_ran_tdsit_pdf(a",{"_index":12922,"t":{},"b":{"53":{}}}],["gsl_ran_ugaussian(a",{"_index":12864,"t":{},"b":{"53":{}}}],["gsl_ran_ugaussian_pdf(a",{"_index":12868,"t":{},"b":{"53":{}}}],["gsl_ran_ugaussian_ratio_method(a",{"_index":12866,"t":{},"b":{"53":{}}}],["gsl_ran_ugaussian_tail(a",{"_index":12874,"t":{},"b":{"53":{}}}],["gsl_ran_ugaussian_tail_pdf(a",{"_index":12876,"t":{},"b":{"53":{}}}],["gsl_ran_weibull(a",{"_index":12930,"t":{},"b":{"53":{}}}],["gsl_ran_weibull_pdf(a",{"_index":12932,"t":{},"b":{"53":{}}}],["gsl_sf_airy_aero_ai_deriv(a",{"_index":12953,"t":{},"b":{"53":{}}}],["gsl_sf_airy_aero_bi(a",{"_index":12951,"t":{},"b":{"53":{}}}],["gsl_sf_airy_aero_bi_deriv(a",{"_index":12955,"t":{},"b":{"53":{}}}],["gsl_sf_airy_ai(a",{"_index":12934,"t":{},"b":{"53":{}}}],["gsl_sf_airy_ai_deriv(a",{"_index":12942,"t":{},"b":{"53":{}}}],["gsl_sf_airy_ai_deriv_scaled(a",{"_index":12946,"t":{},"b":{"53":{}}}],["gsl_sf_airy_ai_scaled(a",{"_index":12938,"t":{},"b":{"53":{}}}],["gsl_sf_airy_bi(a",{"_index":12936,"t":{},"b":{"53":{}}}],["gsl_sf_airy_bi_deriv(a",{"_index":12944,"t":{},"b":{"53":{}}}],["gsl_sf_airy_bi_deriv_scaled(a",{"_index":12948,"t":{},"b":{"53":{}}}],["gsl_sf_airy_bi_scaled(a",{"_index":12940,"t":{},"b":{"53":{}}}],["gsl_sf_andle_restrict_symm(a",{"_index":13288,"t":{},"b":{"53":{}}}],["gsl_sf_angle_restrict_pos(a",{"_index":13290,"t":{},"b":{"53":{}}}],["gsl_sf_atanint(a",{"_index":13112,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_i0(a",{"_index":12969,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_i0_scaled(a",{"_index":12975,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_i1(a",{"_index":12971,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_i1_scaled(a",{"_index":12977,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_i2_scaled(a",{"_index":12999,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_il_scaled(a",{"_index":13001,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_in(a",{"_index":12973,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_in_scaled(a",{"_index":12979,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_inu(a",{"_index":13013,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_inu_scaled(a",{"_index":13011,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_j0(a",{"_index":12957,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_j1(a",{"_index":12959,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_j2(a",{"_index":12993,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_jl(a",{"_index":12995,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_jn(a",{"_index":12961,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_jnu(a",{"_index":13007,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_k0(a",{"_index":12981,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_k0_scaled(a",{"_index":12987,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_k1(a",{"_index":12983,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_k1_scaled(a",{"_index":12989,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_k2_scaled(a",{"_index":13003,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_kl_scaled(a",{"_index":13005,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_kn(a",{"_index":12985,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_kn_scaled(a",{"_index":12991,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_knu(a",{"_index":13017,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_knu_scaled(a",{"_index":13015,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_lnknu(a",{"_index":13019,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_y0(a",{"_index":12963,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_y1(a",{"_index":12965,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_yn(a",{"_index":12967,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_ynu(a",{"_index":13009,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_zero_j0(a",{"_index":13021,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_zero_j1(a",{"_index":13023,"t":{},"b":{"53":{}}}],["gsl_sf_bessel_zero_jnu(a",{"_index":13025,"t":{},"b":{"53":{}}}],["gsl_sf_beta(a",{"_index":13168,"t":{},"b":{"53":{}}}],["gsl_sf_betaçinc(a",{"_index":13170,"t":{},"b":{"53":{}}}],["gsl_sf_chi(a",{"_index":13104,"t":{},"b":{"53":{}}}],["gsl_sf_choose(a",{"_index":13152,"t":{},"b":{"53":{}}}],["gsl_sf_ci(a",{"_index":13110,"t":{},"b":{"53":{}}}],["gsl_sf_clausen(a",{"_index":13027,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_0(a",{"_index":13228,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_1(a",{"_index":13230,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_cyl_reg(a",{"_index":13234,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_half(a",{"_index":13224,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_mhalf(a",{"_index":13226,"t":{},"b":{"53":{}}}],["gsl_sf_conicalp_sph_reg(a",{"_index":13232,"t":{},"b":{"53":{}}}],["gsl_sf_cos(a",{"_index":13278,"t":{},"b":{"53":{}}}],["gsl_sf_dawnson(a",{"_index":13031,"t":{},"b":{"53":{}}}],["gsl_sf_debye_1(a",{"_index":13033,"t":{},"b":{"53":{}}}],["gsl_sf_debye_2(a",{"_index":13035,"t":{},"b":{"53":{}}}],["gsl_sf_debye_3(a",{"_index":13037,"t":{},"b":{"53":{}}}],["gsl_sf_debye_4(a",{"_index":13039,"t":{},"b":{"53":{}}}],["gsl_sf_debye_5(a",{"_index":13041,"t":{},"b":{"53":{}}}],["gsl_sf_debye_6(a",{"_index":13043,"t":{},"b":{"53":{}}}],["gsl_sf_dilog(a",{"_index":13045,"t":{},"b":{"53":{}}}],["gsl_sf_doublefact(a",{"_index":13144,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_dcomp(a",{"_index":13055,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_e(a",{"_index":13059,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_ecomp(a",{"_index":13051,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_f(a",{"_index":13057,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_kcomp(a",{"_index":13049,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_pcomp(a",{"_index":13053,"t":{},"b":{"53":{}}}],["gsl_sf_ellint_rc(a",{"_index":13061,"t":{},"b":{"53":{}}}],["gsl_sf_erf(a",{"_index":13067,"t":{},"b":{"53":{}}}],["gsl_sf_erf_q(a",{"_index":13071,"t":{},"b":{"53":{}}}],["gsl_sf_erf_z(a",{"_index":13069,"t":{},"b":{"53":{}}}],["gsl_sf_erfc(a",{"_index":13063,"t":{},"b":{"53":{}}}],["gsl_sf_eta(a",{"_index":13304,"t":{},"b":{"53":{}}}],["gsl_sf_eta_int(a",{"_index":13302,"t":{},"b":{"53":{}}}],["gsl_sf_exp(a",{"_index":13075,"t":{},"b":{"53":{}}}],["gsl_sf_exp_mult(a",{"_index":13077,"t":{},"b":{"53":{}}}],["gsl_sf_expint_3(a",{"_index":13106,"t":{},"b":{"53":{}}}],["gsl_sf_expint_e1(a",{"_index":13087,"t":{},"b":{"53":{}}}],["gsl_sf_expint_e1_scaled(a",{"_index":13093,"t":{},"b":{"53":{}}}],["gsl_sf_expint_e2(a",{"_index":13089,"t":{},"b":{"53":{}}}],["gsl_sf_expint_ei(a",{"_index":13098,"t":{},"b":{"53":{}}}],["gsl_sf_expint_ei_scaled(a",{"_index":13100,"t":{},"b":{"53":{}}}],["gsl_sf_expint_en(a",{"_index":13091,"t":{},"b":{"53":{}}}],["gsl_sf_expint_en_scaled(a",{"_index":13096,"t":{},"b":{"53":{}}}],["gsl_sf_expm1(a",{"_index":13079,"t":{},"b":{"53":{}}}],["gsl_sf_exprel(a",{"_index":13081,"t":{},"b":{"53":{}}}],["gsl_sf_exprel_2(a",{"_index":13083,"t":{},"b":{"53":{}}}],["gsl_sf_exprel_n(a",{"_index":13085,"t":{},"b":{"53":{}}}],["gsl_sf_fact(a",{"_index":13142,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_0(a",{"_index":13116,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_1(a",{"_index":13118,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_2(a",{"_index":13120,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_3half(a",{"_index":13128,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_half(a",{"_index":13126,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_inc_0(a",{"_index":13130,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_int(a",{"_index":13122,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_m1(a",{"_index":13114,"t":{},"b":{"53":{}}}],["gsl_sf_fermi_dirac_mhalf(a",{"_index":13124,"t":{},"b":{"53":{}}}],["gsl_sf_gamma(a",{"_index":13134,"t":{},"b":{"53":{}}}],["gsl_sf_gamma_inc(a",{"_index":13164,"t":{},"b":{"53":{}}}],["gsl_sf_gamma_inc_p(a",{"_index":13162,"t":{},"b":{"53":{}}}],["gsl_sf_gamma_inc_q(a",{"_index":13160,"t":{},"b":{"53":{}}}],["gsl_sf_gammainv(a",{"_index":13138,"t":{},"b":{"53":{}}}],["gsl_sf_gammastar(a",{"_index":13136,"t":{},"b":{"53":{}}}],["gsl_sf_gegenpoly_1(a",{"_index":13172,"t":{},"b":{"53":{}}}],["gsl_sf_gegenpoly_2(a",{"_index":13174,"t":{},"b":{"53":{}}}],["gsl_sf_gegenpoly_3(a",{"_index":13176,"t":{},"b":{"53":{}}}],["gsl_sf_gegenpoly_n(a",{"_index":13178,"t":{},"b":{"53":{}}}],["gsl_sf_hazard(a",{"_index":13073,"t":{},"b":{"53":{}}}],["gsl_sf_hydrogenicr_1(a",{"_index":13029,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_0f1(a",{"_index":13180,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_1f1(a",{"_index":13184,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_1f1_inc(a",{"_index":13182,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_u(a",{"_index":13188,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_u_2f0(a",{"_index":13190,"t":{},"b":{"53":{}}}],["gsl_sf_hyperg_u_inc(a",{"_index":13186,"t":{},"b":{"53":{}}}],["gsl_sf_hypot(a",{"_index":13280,"t":{},"b":{"53":{}}}],["gsl_sf_hzeta(a",{"_index":13300,"t":{},"b":{"53":{}}}],["gsl_sf_laguerre_1(a",{"_index":13192,"t":{},"b":{"53":{}}}],["gsl_sf_laguerre_2(a",{"_index":13194,"t":{},"b":{"53":{}}}],["gsl_sf_laguerre_3(a",{"_index":13196,"t":{},"b":{"53":{}}}],["gsl_sf_laguerre_n(a",{"_index":13198,"t":{},"b":{"53":{}}}],["gsl_sf_lambert_w0(a",{"_index":13200,"t":{},"b":{"53":{}}}],["gsl_sf_lambert_wm1(a",{"_index":13202,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_array_size(a",{"_index":13222,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_h3d(a",{"_index":13240,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_h3d_0(a",{"_index":13236,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_h3d_1(a",{"_index":13238,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_p1(a",{"_index":13206,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_p2(a",{"_index":13208,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_p3(a",{"_index":13210,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_pl(a",{"_index":13204,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_plm(a",{"_index":13218,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_q0(a",{"_index":13212,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_q1(a",{"_index":13214,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_ql(a",{"_index":13216,"t":{},"b":{"53":{}}}],["gsl_sf_legendre_sphp1m(a",{"_index":13220,"t":{},"b":{"53":{}}}],["gsl_sf_lnbeta(a",{"_index":13166,"t":{},"b":{"53":{}}}],["gsl_sf_lnchoose(a",{"_index":13150,"t":{},"b":{"53":{}}}],["gsl_sf_lncosh(a",{"_index":13286,"t":{},"b":{"53":{}}}],["gsl_sf_lndoublefact(a",{"_index":13148,"t":{},"b":{"53":{}}}],["gsl_sf_lnfact(a",{"_index":13146,"t":{},"b":{"53":{}}}],["gsl_sf_lngamma(a",{"_index":13132,"t":{},"b":{"53":{}}}],["gsl_sf_lnpoch(a",{"_index":13154,"t":{},"b":{"53":{}}}],["gsl_sf_lnsinh(a",{"_index":13284,"t":{},"b":{"53":{}}}],["gsl_sf_log(a",{"_index":13242,"t":{},"b":{"53":{}}}],["gsl_sf_log_1plusx(a",{"_index":13246,"t":{},"b":{"53":{}}}],["gsl_sf_log_1plusx_mx(a",{"_index":13248,"t":{},"b":{"53":{}}}],["gsl_sf_log_abs(a",{"_index":13244,"t":{},"b":{"53":{}}}],["gsl_sf_log_erfc(a",{"_index":13065,"t":{},"b":{"53":{}}}],["gsl_sf_multiply(a",{"_index":13047,"t":{},"b":{"53":{}}}],["gsl_sf_poch(a",{"_index":13156,"t":{},"b":{"53":{}}}],["gsl_sf_pochrel(a",{"_index":13158,"t":{},"b":{"53":{}}}],["gsl_sf_pow_int(a",{"_index":13250,"t":{},"b":{"53":{}}}],["gsl_sf_psi(a",{"_index":13254,"t":{},"b":{"53":{}}}],["gsl_sf_psi_1(a",{"_index":13260,"t":{},"b":{"53":{}}}],["gsl_sf_psi_1_int(a",{"_index":13258,"t":{},"b":{"53":{}}}],["gsl_sf_psi_1piy(a",{"_index":13256,"t":{},"b":{"53":{}}}],["gsl_sf_psi_int(a",{"_index":13252,"t":{},"b":{"53":{}}}],["gsl_sf_psi_n(a",{"_index":13262,"t":{},"b":{"53":{}}}],["gsl_sf_shi(a",{"_index":13102,"t":{},"b":{"53":{}}}],["gsl_sf_si(a",{"_index":13108,"t":{},"b":{"53":{}}}],["gsl_sf_sin(a",{"_index":13276,"t":{},"b":{"53":{}}}],["gsl_sf_sinc(a",{"_index":13282,"t":{},"b":{"53":{}}}],["gsl_sf_synchrotron_1(a",{"_index":13264,"t":{},"b":{"53":{}}}],["gsl_sf_synchrotron_2(a",{"_index":13266,"t":{},"b":{"53":{}}}],["gsl_sf_taylorcoeff(a",{"_index":13140,"t":{},"b":{"53":{}}}],["gsl_sf_transport_2(a",{"_index":13268,"t":{},"b":{"53":{}}}],["gsl_sf_transport_3(a",{"_index":13270,"t":{},"b":{"53":{}}}],["gsl_sf_transport_4(a",{"_index":13272,"t":{},"b":{"53":{}}}],["gsl_sf_transport_5(a",{"_index":13274,"t":{},"b":{"53":{}}}],["gsl_sf_zeta(a",{"_index":13294,"t":{},"b":{"53":{}}}],["gsl_sf_zeta_int(a",{"_index":13292,"t":{},"b":{"53":{}}}],["gsl_sf_zetam1(a",{"_index":13296,"t":{},"b":{"53":{}}}],["gsl_sf_zetam1_int(a",{"_index":13298,"t":{},"b":{"53":{}}}],["gslcdfbetap",{"_index":12725,"t":{},"b":{"53":{}}}],["gslcdfbetapinv",{"_index":12729,"t":{},"b":{"53":{}}}],["gslcdfbetaq",{"_index":12727,"t":{},"b":{"53":{}}}],["gslcdfbetaqinv",{"_index":12731,"t":{},"b":{"53":{}}}],["gslcdfbinomialp",{"_index":12789,"t":{},"b":{"53":{}}}],["gslcdfbinomialq",{"_index":12791,"t":{},"b":{"53":{}}}],["gslcdfcauchyp",{"_index":12665,"t":{},"b":{"53":{}}}],["gslcdfcauchypinv",{"_index":12669,"t":{},"b":{"53":{}}}],["gslcdfcauchyq",{"_index":12667,"t":{},"b":{"53":{}}}],["gslcdfcauchyqinv",{"_index":12671,"t":{},"b":{"53":{}}}],["gslcdfchisqp",{"_index":12689,"t":{},"b":{"53":{}}}],["gslcdfchisqpinv",{"_index":12693,"t":{},"b":{"53":{}}}],["gslcdfchisqq",{"_index":12691,"t":{},"b":{"53":{}}}],["gslcdfchisqqinv",{"_index":12695,"t":{},"b":{"53":{}}}],["gslcdfexponentialp",{"_index":12697,"t":{},"b":{"53":{}}}],["gslcdfexponentialpinv",{"_index":12701,"t":{},"b":{"53":{}}}],["gslcdfexponentialq",{"_index":12699,"t":{},"b":{"53":{}}}],["gslcdfexponentialqinv",{"_index":12703,"t":{},"b":{"53":{}}}],["gslcdfexppowp",{"_index":12705,"t":{},"b":{"53":{}}}],["gslcdfexppowq",{"_index":12707,"t":{},"b":{"53":{}}}],["gslcdffdistp",{"_index":12717,"t":{},"b":{"53":{}}}],["gslcdffdistpinv",{"_index":12721,"t":{},"b":{"53":{}}}],["gslcdffdistq",{"_index":12719,"t":{},"b":{"53":{}}}],["gslcdffdistqinv",{"_index":12723,"t":{},"b":{"53":{}}}],["gslcdfflatp",{"_index":12733,"t":{},"b":{"53":{}}}],["gslcdfflatpinv",{"_index":12737,"t":{},"b":{"53":{}}}],["gslcdfflatq",{"_index":12735,"t":{},"b":{"53":{}}}],["gslcdfflatqinv",{"_index":12739,"t":{},"b":{"53":{}}}],["gslcdfgammap",{"_index":12658,"t":{},"b":{"53":{}}}],["gslcdfgammapinv",{"_index":12662,"t":{},"b":{"53":{}}}],["gslcdfgammaq",{"_index":12660,"t":{},"b":{"53":{}}}],["gslcdfgammaqinv",{"_index":12664,"t":{},"b":{"53":{}}}],["gslcdfgaussianp",{"_index":12650,"t":{},"b":{"53":{}}}],["gslcdfgaussianpinv",{"_index":12654,"t":{},"b":{"53":{}}}],["gslcdfgaussianq",{"_index":12652,"t":{},"b":{"53":{}}}],["gslcdfgaussianqinv",{"_index":12656,"t":{},"b":{"53":{}}}],["gslcdfgeometricp",{"_index":12797,"t":{},"b":{"53":{}}}],["gslcdfgeometricq",{"_index":12799,"t":{},"b":{"53":{}}}],["gslcdfgumbel1p",{"_index":12749,"t":{},"b":{"53":{}}}],["gslcdfgumbel1pinv",{"_index":12753,"t":{},"b":{"53":{}}}],["gslcdfgumbel1q",{"_index":12751,"t":{},"b":{"53":{}}}],["gslcdfgumbel1qinv",{"_index":12755,"t":{},"b":{"53":{}}}],["gslcdfgumbel2p",{"_index":12757,"t":{},"b":{"53":{}}}],["gslcdfgumbel2pinv",{"_index":12761,"t":{},"b":{"53":{}}}],["gslcdfgumbel2q",{"_index":12759,"t":{},"b":{"53":{}}}],["gslcdfgumbel2qinv",{"_index":12763,"t":{},"b":{"53":{}}}],["gslcdflaplacep",{"_index":12673,"t":{},"b":{"53":{}}}],["gslcdflaplacepinv",{"_index":12677,"t":{},"b":{"53":{}}}],["gslcdflaplaceq",{"_index":12675,"t":{},"b":{"53":{}}}],["gslcdflaplaceqinv",{"_index":12679,"t":{},"b":{"53":{}}}],["gslcdflogisticp",{"_index":12781,"t":{},"b":{"53":{}}}],["gslcdflogisticpinv",{"_index":12785,"t":{},"b":{"53":{}}}],["gslcdflogisticq",{"_index":12783,"t":{},"b":{"53":{}}}],["gslcdflogisticqinv",{"_index":12787,"t":{},"b":{"53":{}}}],["gslcdflognormalp",{"_index":12741,"t":{},"b":{"53":{}}}],["gslcdflognormalpinv",{"_index":12745,"t":{},"b":{"53":{}}}],["gslcdflognormalq",{"_index":12743,"t":{},"b":{"53":{}}}],["gslcdflognormalqinv",{"_index":12747,"t":{},"b":{"53":{}}}],["gslcdfnegativebinomialp",{"_index":12801,"t":{},"b":{"53":{}}}],["gslcdfnegativebinomialq",{"_index":12803,"t":{},"b":{"53":{}}}],["gslcdfparetop",{"_index":12773,"t":{},"b":{"53":{}}}],["gslcdfparetopinv",{"_index":12777,"t":{},"b":{"53":{}}}],["gslcdfparetoq",{"_index":12775,"t":{},"b":{"53":{}}}],["gslcdfparetoqinv",{"_index":12779,"t":{},"b":{"53":{}}}],["gslcdfpascalp",{"_index":12805,"t":{},"b":{"53":{}}}],["gslcdfpascalq",{"_index":12807,"t":{},"b":{"53":{}}}],["gslcdfpoissonp",{"_index":12793,"t":{},"b":{"53":{}}}],["gslcdfpoissonq",{"_index":12795,"t":{},"b":{"53":{}}}],["gslcdfrayleighp",{"_index":12681,"t":{},"b":{"53":{}}}],["gslcdfrayleighpinv",{"_index":12685,"t":{},"b":{"53":{}}}],["gslcdfrayleighq",{"_index":12683,"t":{},"b":{"53":{}}}],["gslcdfrayleighqinv",{"_index":12687,"t":{},"b":{"53":{}}}],["gslcdftdistp",{"_index":12709,"t":{},"b":{"53":{}}}],["gslcdftdistpinv",{"_index":12713,"t":{},"b":{"53":{}}}],["gslcdftdistq",{"_index":12711,"t":{},"b":{"53":{}}}],["gslcdftdistqinv",{"_index":12715,"t":{},"b":{"53":{}}}],["gslcdfugaussianp",{"_index":12642,"t":{},"b":{"53":{}}}],["gslcdfugaussianpinv",{"_index":12646,"t":{},"b":{"53":{}}}],["gslcdfugaussianq",{"_index":12644,"t":{},"b":{"53":{}}}],["gslcdfugaussianqinv",{"_index":12648,"t":{},"b":{"53":{}}}],["gslcdfweibullp",{"_index":12765,"t":{},"b":{"53":{}}}],["gslcdfweibullpinv",{"_index":12769,"t":{},"b":{"53":{}}}],["gslcdfweibullq",{"_index":12767,"t":{},"b":{"53":{}}}],["gslcdfweibullqinv",{"_index":12771,"t":{},"b":{"53":{}}}],["gslinterpakima",{"_index":8328,"t":{},"b":{"18":{}}}],["gslinterpakimaperiod",{"_index":8333,"t":{},"b":{"18":{}}}],["gslinterpcsplin",{"_index":8327,"t":{},"b":{"18":{}}}],["gslinterpcsplineperiod",{"_index":8332,"t":{},"b":{"18":{}}}],["gslinterplinear",{"_index":8330,"t":{},"b":{"18":{}}}],["gslinterppolynomi",{"_index":8331,"t":{},"b":{"18":{}}}],["gslinterpsteffen",{"_index":8329,"t":{},"b":{"18":{}}}],["gsllib",{"_index":13893,"t":{},"b":{"60":{}}}],["gslname",{"_index":13364,"t":{},"b":{"53":{}}}],["gslpolycomplexsolv",{"_index":13361,"t":{},"b":{"53":{}}}],["gslpolysolvecub",{"_index":13360,"t":{},"b":{"53":{}}}],["gslpolysolvequadrat",{"_index":13359,"t":{},"b":{"53":{}}}],["gslranbernoullipdf",{"_index":12809,"t":{},"b":{"53":{}}}],["gslranbeta",{"_index":12811,"t":{},"b":{"53":{}}}],["gslranbetapdf",{"_index":12813,"t":{},"b":{"53":{}}}],["gslranbinomialpdf",{"_index":12815,"t":{},"b":{"53":{}}}],["gslrancauchi",{"_index":12825,"t":{},"b":{"53":{}}}],["gslrancauchypdf",{"_index":12827,"t":{},"b":{"53":{}}}],["gslranchisq",{"_index":12829,"t":{},"b":{"53":{}}}],["gslranchisqpdf",{"_index":12831,"t":{},"b":{"53":{}}}],["gslranerlang",{"_index":12833,"t":{},"b":{"53":{}}}],["gslranerlangpdf",{"_index":12835,"t":{},"b":{"53":{}}}],["gslranexponenti",{"_index":12817,"t":{},"b":{"53":{}}}],["gslranexponentialpdf",{"_index":12819,"t":{},"b":{"53":{}}}],["gslranexppow",{"_index":12821,"t":{},"b":{"53":{}}}],["gslranexppowpdf",{"_index":12823,"t":{},"b":{"53":{}}}],["gslranfdist",{"_index":12837,"t":{},"b":{"53":{}}}],["gslranfdistpdf",{"_index":12839,"t":{},"b":{"53":{}}}],["gslranflat",{"_index":12841,"t":{},"b":{"53":{}}}],["gslranflatpdf",{"_index":12843,"t":{},"b":{"53":{}}}],["gslrangamma",{"_index":12845,"t":{},"b":{"53":{}}}],["gslrangammaint",{"_index":12847,"t":{},"b":{"53":{}}}],["gslrangammaknuth",{"_index":12853,"t":{},"b":{"53":{}}}],["gslrangammamt",{"_index":12851,"t":{},"b":{"53":{}}}],["gslrangammapdf",{"_index":12849,"t":{},"b":{"53":{}}}],["gslrangaussian",{"_index":12855,"t":{},"b":{"53":{}}}],["gslrangaussianpdf",{"_index":12861,"t":{},"b":{"53":{}}}],["gslrangaussianratiomethod",{"_index":12857,"t":{},"b":{"53":{}}}],["gslrangaussiantail",{"_index":12869,"t":{},"b":{"53":{}}}],["gslrangaussiantailpdf",{"_index":12871,"t":{},"b":{"53":{}}}],["gslrangaussianziggurat",{"_index":12859,"t":{},"b":{"53":{}}}],["gslrangeometricpdf",{"_index":12881,"t":{},"b":{"53":{}}}],["gslrangumbel1",{"_index":12883,"t":{},"b":{"53":{}}}],["gslrangumbel1pdf",{"_index":12885,"t":{},"b":{"53":{}}}],["gslrangumbel2",{"_index":12887,"t":{},"b":{"53":{}}}],["gslrangumbel2pdf",{"_index":12889,"t":{},"b":{"53":{}}}],["gslranlandau",{"_index":12877,"t":{},"b":{"53":{}}}],["gslranlandaupdf",{"_index":12879,"t":{},"b":{"53":{}}}],["gslranlaplac",{"_index":12923,"t":{},"b":{"53":{}}}],["gslranlaplacepdf",{"_index":12925,"t":{},"b":{"53":{}}}],["gslranlevi",{"_index":12927,"t":{},"b":{"53":{}}}],["gslranlogarithmicpdf",{"_index":12899,"t":{},"b":{"53":{}}}],["gslranlogist",{"_index":12891,"t":{},"b":{"53":{}}}],["gslranlogisticpdf",{"_index":12893,"t":{},"b":{"53":{}}}],["gslranlognorm",{"_index":12895,"t":{},"b":{"53":{}}}],["gslranlognormalpdf",{"_index":12897,"t":{},"b":{"53":{}}}],["gslrannegativebinomialpdf",{"_index":12901,"t":{},"b":{"53":{}}}],["gslranpareto",{"_index":12905,"t":{},"b":{"53":{}}}],["gslranparetopdf",{"_index":12907,"t":{},"b":{"53":{}}}],["gslranpascalpdf",{"_index":12903,"t":{},"b":{"53":{}}}],["gslranpoissonpdf",{"_index":12909,"t":{},"b":{"53":{}}}],["gslranrayleigh",{"_index":12911,"t":{},"b":{"53":{}}}],["gslranrayleighpdf",{"_index":12913,"t":{},"b":{"53":{}}}],["gslranrayleightail",{"_index":12915,"t":{},"b":{"53":{}}}],["gslranrayleightailpdf",{"_index":12917,"t":{},"b":{"53":{}}}],["gslrantdist",{"_index":12919,"t":{},"b":{"53":{}}}],["gslrantdistpdf",{"_index":12921,"t":{},"b":{"53":{}}}],["gslranugaussian",{"_index":12863,"t":{},"b":{"53":{}}}],["gslranugaussianpdf",{"_index":12867,"t":{},"b":{"53":{}}}],["gslranugaussianratiomethod",{"_index":12865,"t":{},"b":{"53":{}}}],["gslranugaussiantail",{"_index":12873,"t":{},"b":{"53":{}}}],["gslranugaussiantailpdf",{"_index":12875,"t":{},"b":{"53":{}}}],["gslranweibul",{"_index":12929,"t":{},"b":{"53":{}}}],["gslranweibullpdf",{"_index":12931,"t":{},"b":{"53":{}}}],["gslrngget",{"_index":13365,"t":{},"b":{"53":{}}}],["gslrngmax",{"_index":13367,"t":{},"b":{"53":{}}}],["gslrngmin",{"_index":13366,"t":{},"b":{"53":{}}}],["gslrngset",{"_index":13368,"t":{},"b":{"53":{}}}],["gslrngtype",{"_index":13369,"t":{},"b":{"53":{}}}],["gslrnguniform",{"_index":13362,"t":{},"b":{"53":{}}}],["gslrnguniformpo",{"_index":13363,"t":{},"b":{"53":{}}}],["gslsfairyai",{"_index":12933,"t":{},"b":{"53":{}}}],["gslsfairyaideriv",{"_index":12941,"t":{},"b":{"53":{}}}],["gslsfairyaiderivsc",{"_index":12945,"t":{},"b":{"53":{}}}],["gslsfairyaisc",{"_index":12937,"t":{},"b":{"53":{}}}],["gslsfairybi",{"_index":12935,"t":{},"b":{"53":{}}}],["gslsfairybideriv",{"_index":12943,"t":{},"b":{"53":{}}}],["gslsfairybiderivsc",{"_index":12947,"t":{},"b":{"53":{}}}],["gslsfairybisc",{"_index":12939,"t":{},"b":{"53":{}}}],["gslsfairyzeroai",{"_index":12949,"t":{},"b":{"53":{}}}],["gslsfairyzeroaideriv",{"_index":12952,"t":{},"b":{"53":{}}}],["gslsfairyzerobi",{"_index":12950,"t":{},"b":{"53":{}}}],["gslsfairyzerobideriv",{"_index":12954,"t":{},"b":{"53":{}}}],["gslsfanglerestrictpo",{"_index":13289,"t":{},"b":{"53":{}}}],["gslsfanglerestrictsymm",{"_index":13287,"t":{},"b":{"53":{}}}],["gslsfatanint",{"_index":13111,"t":{},"b":{"53":{}}}],["gslsfbesseli0",{"_index":12968,"t":{},"b":{"53":{}}}],["gslsfbesseli0sc",{"_index":12974,"t":{},"b":{"53":{}}}],["gslsfbesseli1",{"_index":12970,"t":{},"b":{"53":{}}}],["gslsfbesseli1sc",{"_index":12976,"t":{},"b":{"53":{}}}],["gslsfbesseli2sc",{"_index":12998,"t":{},"b":{"53":{}}}],["gslsfbesselilsc",{"_index":13000,"t":{},"b":{"53":{}}}],["gslsfbesselin",{"_index":12972,"t":{},"b":{"53":{}}}],["gslsfbesselinsc",{"_index":12978,"t":{},"b":{"53":{}}}],["gslsfbesselinu",{"_index":13012,"t":{},"b":{"53":{}}}],["gslsfbesselinusc",{"_index":13010,"t":{},"b":{"53":{}}}],["gslsfbesselj0",{"_index":12956,"t":{},"b":{"53":{}}}],["gslsfbesselj1",{"_index":12958,"t":{},"b":{"53":{}}}],["gslsfbesselj2",{"_index":12992,"t":{},"b":{"53":{}}}],["gslsfbesseljl",{"_index":12994,"t":{},"b":{"53":{}}}],["gslsfbesseljn",{"_index":12960,"t":{},"b":{"53":{}}}],["gslsfbesseljnu",{"_index":13006,"t":{},"b":{"53":{}}}],["gslsfbesselk0",{"_index":12980,"t":{},"b":{"53":{}}}],["gslsfbesselk0sc",{"_index":12986,"t":{},"b":{"53":{}}}],["gslsfbesselk1",{"_index":12982,"t":{},"b":{"53":{}}}],["gslsfbesselk1sc",{"_index":12988,"t":{},"b":{"53":{}}}],["gslsfbesselk2sc",{"_index":13002,"t":{},"b":{"53":{}}}],["gslsfbesselklsc",{"_index":13004,"t":{},"b":{"53":{}}}],["gslsfbesselkn",{"_index":12984,"t":{},"b":{"53":{}}}],["gslsfbesselknsc",{"_index":12990,"t":{},"b":{"53":{}}}],["gslsfbesselknu",{"_index":13016,"t":{},"b":{"53":{}}}],["gslsfbesselknusc",{"_index":13014,"t":{},"b":{"53":{}}}],["gslsfbessellnknu",{"_index":13018,"t":{},"b":{"53":{}}}],["gslsfbessely0",{"_index":12962,"t":{},"b":{"53":{}}}],["gslsfbessely1",{"_index":12964,"t":{},"b":{"53":{}}}],["gslsfbessely2",{"_index":12996,"t":{},"b":{"53":{}}}],["gslsfbesselyl",{"_index":12997,"t":{},"b":{"53":{}}}],["gslsfbesselyn",{"_index":12966,"t":{},"b":{"53":{}}}],["gslsfbesselynu",{"_index":13008,"t":{},"b":{"53":{}}}],["gslsfbesselzeroj0",{"_index":13020,"t":{},"b":{"53":{}}}],["gslsfbesselzeroj1",{"_index":13022,"t":{},"b":{"53":{}}}],["gslsfbesselzerojnu",{"_index":13024,"t":{},"b":{"53":{}}}],["gslsfbeta",{"_index":13167,"t":{},"b":{"53":{}}}],["gslsfbetainc",{"_index":13169,"t":{},"b":{"53":{}}}],["gslsfchi",{"_index":13103,"t":{},"b":{"53":{}}}],["gslsfchoos",{"_index":13151,"t":{},"b":{"53":{}}}],["gslsfci",{"_index":13109,"t":{},"b":{"53":{}}}],["gslsfclausen",{"_index":13026,"t":{},"b":{"53":{}}}],["gslsfco",{"_index":13277,"t":{},"b":{"53":{}}}],["gslsfconicalp0",{"_index":13227,"t":{},"b":{"53":{}}}],["gslsfconicalp1",{"_index":13229,"t":{},"b":{"53":{}}}],["gslsfconicalpcylreg",{"_index":13233,"t":{},"b":{"53":{}}}],["gslsfconicalphalf",{"_index":13223,"t":{},"b":{"53":{}}}],["gslsfconicalpmhalf",{"_index":13225,"t":{},"b":{"53":{}}}],["gslsfconicalpsphreg",{"_index":13231,"t":{},"b":{"53":{}}}],["gslsfdawson",{"_index":13030,"t":{},"b":{"53":{}}}],["gslsfdebye1",{"_index":13032,"t":{},"b":{"53":{}}}],["gslsfdebye2",{"_index":13034,"t":{},"b":{"53":{}}}],["gslsfdebye3",{"_index":13036,"t":{},"b":{"53":{}}}],["gslsfdebye4",{"_index":13038,"t":{},"b":{"53":{}}}],["gslsfdebye5",{"_index":13040,"t":{},"b":{"53":{}}}],["gslsfdebye6",{"_index":13042,"t":{},"b":{"53":{}}}],["gslsfdilog",{"_index":13044,"t":{},"b":{"53":{}}}],["gslsfdoublefact",{"_index":13143,"t":{},"b":{"53":{}}}],["gslsfellint",{"_index":13058,"t":{},"b":{"53":{}}}],["gslsfellintdcomp",{"_index":13054,"t":{},"b":{"53":{}}}],["gslsfellintecomp",{"_index":13050,"t":{},"b":{"53":{}}}],["gslsfellintf",{"_index":13056,"t":{},"b":{"53":{}}}],["gslsfellintkcomp",{"_index":13048,"t":{},"b":{"53":{}}}],["gslsfellintpcomp",{"_index":13052,"t":{},"b":{"53":{}}}],["gslsfellintrc",{"_index":13060,"t":{},"b":{"53":{}}}],["gslsferf",{"_index":13066,"t":{},"b":{"53":{}}}],["gslsferfc",{"_index":13062,"t":{},"b":{"53":{}}}],["gslsferfq",{"_index":13070,"t":{},"b":{"53":{}}}],["gslsferfz",{"_index":13068,"t":{},"b":{"53":{}}}],["gslsfeta",{"_index":13303,"t":{},"b":{"53":{}}}],["gslsfetaint",{"_index":13301,"t":{},"b":{"53":{}}}],["gslsfexp",{"_index":13074,"t":{},"b":{"53":{}}}],["gslsfexpint3",{"_index":13105,"t":{},"b":{"53":{}}}],["gslsfexpinte1",{"_index":13086,"t":{},"b":{"53":{}}}],["gslsfexpinte1sc",{"_index":13092,"t":{},"b":{"53":{}}}],["gslsfexpinte2",{"_index":13088,"t":{},"b":{"53":{}}}],["gslsfexpinte2sc",{"_index":13094,"t":{},"b":{"53":{}}}],["gslsfexpintei",{"_index":13097,"t":{},"b":{"53":{}}}],["gslsfexpinteisc",{"_index":13099,"t":{},"b":{"53":{}}}],["gslsfexpinten",{"_index":13090,"t":{},"b":{"53":{}}}],["gslsfexpintensc",{"_index":13095,"t":{},"b":{"53":{}}}],["gslsfexpm1",{"_index":13078,"t":{},"b":{"53":{}}}],["gslsfexpmult",{"_index":13076,"t":{},"b":{"53":{}}}],["gslsfexprel",{"_index":13080,"t":{},"b":{"53":{}}}],["gslsfexprel2",{"_index":13082,"t":{},"b":{"53":{}}}],["gslsfexpreln",{"_index":13084,"t":{},"b":{"53":{}}}],["gslsffact",{"_index":13141,"t":{},"b":{"53":{}}}],["gslsffermidirac0",{"_index":13115,"t":{},"b":{"53":{}}}],["gslsffermidirac1",{"_index":13117,"t":{},"b":{"53":{}}}],["gslsffermidirac2",{"_index":13119,"t":{},"b":{"53":{}}}],["gslsffermidirac3half",{"_index":13127,"t":{},"b":{"53":{}}}],["gslsffermidirachalf",{"_index":13125,"t":{},"b":{"53":{}}}],["gslsffermidiracinc0",{"_index":13129,"t":{},"b":{"53":{}}}],["gslsffermidiracint",{"_index":13121,"t":{},"b":{"53":{}}}],["gslsffermidiracm1",{"_index":13113,"t":{},"b":{"53":{}}}],["gslsffermidiracmhalf",{"_index":13123,"t":{},"b":{"53":{}}}],["gslsfgamma",{"_index":13133,"t":{},"b":{"53":{}}}],["gslsfgammainc",{"_index":13163,"t":{},"b":{"53":{}}}],["gslsfgammaincp",{"_index":13161,"t":{},"b":{"53":{}}}],["gslsfgammaincq",{"_index":13159,"t":{},"b":{"53":{}}}],["gslsfgammainv",{"_index":13137,"t":{},"b":{"53":{}}}],["gslsfgammastar",{"_index":13135,"t":{},"b":{"53":{}}}],["gslsfgegenpoly1",{"_index":13171,"t":{},"b":{"53":{}}}],["gslsfgegenpoly2",{"_index":13173,"t":{},"b":{"53":{}}}],["gslsfgegenpoly3",{"_index":13175,"t":{},"b":{"53":{}}}],["gslsfgegenpolyn",{"_index":13177,"t":{},"b":{"53":{}}}],["gslsfhazard",{"_index":13072,"t":{},"b":{"53":{}}}],["gslsfhydrogenicr1",{"_index":13028,"t":{},"b":{"53":{}}}],["gslsfhyperg0f1",{"_index":13179,"t":{},"b":{"53":{}}}],["gslsfhyperg1f1",{"_index":13183,"t":{},"b":{"53":{}}}],["gslsfhyperg1f1int",{"_index":13181,"t":{},"b":{"53":{}}}],["gslsfhyperg2f0",{"_index":13189,"t":{},"b":{"53":{}}}],["gslsfhypergu",{"_index":13187,"t":{},"b":{"53":{}}}],["gslsfhyperguint",{"_index":13185,"t":{},"b":{"53":{}}}],["gslsfhypot",{"_index":13279,"t":{},"b":{"53":{}}}],["gslsfhzeta",{"_index":13299,"t":{},"b":{"53":{}}}],["gslsflaguerre1",{"_index":13191,"t":{},"b":{"53":{}}}],["gslsflaguerre2",{"_index":13193,"t":{},"b":{"53":{}}}],["gslsflaguerre3",{"_index":13195,"t":{},"b":{"53":{}}}],["gslsflaguerren",{"_index":13197,"t":{},"b":{"53":{}}}],["gslsflambertw0",{"_index":13199,"t":{},"b":{"53":{}}}],["gslsflambertwm1",{"_index":13201,"t":{},"b":{"53":{}}}],["gslsflegendrearrays",{"_index":13221,"t":{},"b":{"53":{}}}],["gslsflegendreh3d",{"_index":13239,"t":{},"b":{"53":{}}}],["gslsflegendreh3d0",{"_index":13235,"t":{},"b":{"53":{}}}],["gslsflegendreh3d1",{"_index":13237,"t":{},"b":{"53":{}}}],["gslsflegendrep1",{"_index":13205,"t":{},"b":{"53":{}}}],["gslsflegendrep2",{"_index":13207,"t":{},"b":{"53":{}}}],["gslsflegendrep3",{"_index":13209,"t":{},"b":{"53":{}}}],["gslsflegendrepl",{"_index":13203,"t":{},"b":{"53":{}}}],["gslsflegendreplm",{"_index":13217,"t":{},"b":{"53":{}}}],["gslsflegendreq0",{"_index":13211,"t":{},"b":{"53":{}}}],["gslsflegendreq1",{"_index":13213,"t":{},"b":{"53":{}}}],["gslsflegendreql",{"_index":13215,"t":{},"b":{"53":{}}}],["gslsflegendresphplm",{"_index":13219,"t":{},"b":{"53":{}}}],["gslsflnbeta",{"_index":13165,"t":{},"b":{"53":{}}}],["gslsflnchoos",{"_index":13149,"t":{},"b":{"53":{}}}],["gslsflncosh",{"_index":13285,"t":{},"b":{"53":{}}}],["gslsflndoublefact",{"_index":13147,"t":{},"b":{"53":{}}}],["gslsflnfact",{"_index":13145,"t":{},"b":{"53":{}}}],["gslsflngamma",{"_index":13131,"t":{},"b":{"53":{}}}],["gslsflnpoch",{"_index":13153,"t":{},"b":{"53":{}}}],["gslsflnsinh",{"_index":13283,"t":{},"b":{"53":{}}}],["gslsflog",{"_index":13241,"t":{},"b":{"53":{}}}],["gslsflog1plusx",{"_index":13245,"t":{},"b":{"53":{}}}],["gslsflog1plusxmx",{"_index":13247,"t":{},"b":{"53":{}}}],["gslsflogab",{"_index":13243,"t":{},"b":{"53":{}}}],["gslsflogerfc",{"_index":13064,"t":{},"b":{"53":{}}}],["gslsfmultipli",{"_index":13046,"t":{},"b":{"53":{}}}],["gslsfpoch",{"_index":13155,"t":{},"b":{"53":{}}}],["gslsfpochrel",{"_index":13157,"t":{},"b":{"53":{}}}],["gslsfpowint",{"_index":13249,"t":{},"b":{"53":{}}}],["gslsfpsi",{"_index":13253,"t":{},"b":{"53":{}}}],["gslsfpsi1",{"_index":13259,"t":{},"b":{"53":{}}}],["gslsfpsi1int",{"_index":13257,"t":{},"b":{"53":{}}}],["gslsfpsi1piy",{"_index":13255,"t":{},"b":{"53":{}}}],["gslsfpsiint",{"_index":13251,"t":{},"b":{"53":{}}}],["gslsfpsin",{"_index":13261,"t":{},"b":{"53":{}}}],["gslsfshi",{"_index":13101,"t":{},"b":{"53":{}}}],["gslsfsi",{"_index":13107,"t":{},"b":{"53":{}}}],["gslsfsin",{"_index":13275,"t":{},"b":{"53":{}}}],["gslsfsinc",{"_index":13281,"t":{},"b":{"53":{}}}],["gslsfsynchrotron1",{"_index":13263,"t":{},"b":{"53":{}}}],["gslsfsynchrotron2",{"_index":13265,"t":{},"b":{"53":{}}}],["gslsftaylorcoeff",{"_index":13139,"t":{},"b":{"53":{}}}],["gslsftransport2",{"_index":13267,"t":{},"b":{"53":{}}}],["gslsftransport3",{"_index":13269,"t":{},"b":{"53":{}}}],["gslsftransport4",{"_index":13271,"t":{},"b":{"53":{}}}],["gslsftransport5",{"_index":13273,"t":{},"b":{"53":{}}}],["gslsfzeta",{"_index":13293,"t":{},"b":{"53":{}}}],["gslsfzetaint",{"_index":13291,"t":{},"b":{"53":{}}}],["gslsfzetam1",{"_index":13295,"t":{},"b":{"53":{}}}],["gslsfzetam1int",{"_index":13297,"t":{},"b":{"53":{}}}],["gslspline",{"_index":8340,"t":{},"b":{"18":{}}}],["gsmg",{"_index":8133,"t":{},"b":{"15":{}}}],["guarante",{"_index":3470,"t":{},"b":{"7":{}}}],["guermond",{"_index":407,"t":{},"b":{"2":{}}}],["guess",{"_index":3308,"t":{},"b":{"5":{},"10":{},"48":{},"76":{},"77":{}}}],["guest",{"_index":7497,"t":{},"b":{"15":{}}}],["guid",{"_index":112,"t":{},"b":{"2":{},"15":{},"32":{},"35":{},"36":{}}}],["guidelin",{"_index":14593,"t":{},"b":{"70":{}}}],["guidelogo",{"_index":9915,"t":{"35":{}},"b":{}}],["guy",{"_index":7461,"t":{},"b":{"15":{}}}],["gvi",{"_index":1840,"t":{},"b":{"3":{},"20":{}}}],["gvi(vh.ndof",{"_index":1837,"t":{},"b":{"3":{},"20":{}}}],["gvi,gvj",{"_index":1841,"t":{},"b":{"3":{},"20":{}}}],["gvj",{"_index":1838,"t":{},"b":{"3":{},"20":{}}}],["gx",{"_index":12106,"t":{},"b":{"48":{}}}],["gx)*(i",{"_index":12135,"t":{},"b":{"48":{}}}],["gy",{"_index":12108,"t":{},"b":{"48":{}}}],["gzip",{"_index":10099,"t":{},"b":{"35":{}}}],["h",{"_index":47,"t":{},"b":{"2":{},"4":{},"5":{},"11":{},"13":{},"14":{},"16":{},"22":{},"24":{},"25":{},"40":{},"41":{},"42":{},"45":{},"47":{},"48":{},"50":{},"54":{},"55":{},"61":{},"71":{},"76":{}}}],["h(\\mathcal{t}_h",{"_index":5494,"t":{},"b":{"13":{}}}],["h(\\textrm{curl",{"_index":3938,"t":{},"b":{"11":{}}}],["h(\\textrm{div",{"_index":3915,"t":{},"b":{"11":{}}}],["h(div",{"_index":2460,"t":{},"b":{"4":{},"48":{}}}],["h(i",{"_index":10875,"t":{},"b":{"40":{}}}],["h(t",{"_index":10878,"t":{},"b":{"40":{},"42":{}}}],["h(v_{0",{"_index":7034,"t":{},"b":{"13":{}}}],["h(v_{i",{"_index":7036,"t":{},"b":{"13":{}}}],["h(v_{nv",{"_index":7035,"t":{},"b":{"13":{}}}],["h){x",{"_index":9309,"t":{},"b":{"25":{},"45":{},"61":{}}}],["h*atan2(ep",{"_index":5508,"t":{},"b":{"13":{},"24":{}}}],["h*h*h/6",{"_index":7178,"t":{},"b":{"13":{}}}],["h*i",{"_index":13710,"t":{},"b":{"54":{}}}],["h*n",{"_index":14646,"t":{},"b":{"71":{}}}],["h*n)+lefta",{"_index":14645,"t":{},"b":{"71":{}}}],["h*n)+leftk",{"_index":14650,"t":{},"b":{"71":{}}}],["h,\\quad",{"_index":10701,"t":{},"b":{"40":{}}}],["h,h",{"_index":8524,"t":{},"b":{"19":{},"40":{}}}],["h,h[,\\quad",{"_index":10687,"t":{},"b":{"40":{}}}],["h,hgrad",{"_index":6490,"t":{},"b":{"13":{}}}],["h,hmax",{"_index":6489,"t":{},"b":{"13":{}}}],["h,int",{"_index":6461,"t":{},"b":{"13":{}}}],["h1",{"_index":6966,"t":{},"b":{"13":{},"48":{}}}],["h10",{"_index":11883,"t":{},"b":{"48":{}}}],["h1e",{"_index":12193,"t":{},"b":{"48":{}}}],["h1err",{"_index":12201,"t":{},"b":{"48":{}}}],["h1err0",{"_index":12197,"t":{},"b":{"48":{}}}],["h2",{"_index":6967,"t":{},"b":{"13":{}}}],["h<x_3<h",{"_index":10698,"t":{},"b":{"40":{}}}],["h[]./count",{"_index":4887,"t":{},"b":{"11":{},"48":{}}}],["h[].max",{"_index":5496,"t":{},"b":{"13":{},"41":{},"48":{}}}],["h[].max^2",{"_index":12059,"t":{},"b":{"48":{}}}],["h[].min",{"_index":7173,"t":{},"b":{"13":{},"48":{}}}],["h[].n",{"_index":7174,"t":{},"b":{"13":{}}}],["h\\sim",{"_index":12043,"t":{},"b":{"48":{}}}],["h^1",{"_index":11893,"t":{},"b":{"48":{}}}],["h^1(\\omega",{"_index":4262,"t":{},"b":{"11":{},"14":{},"45":{},"68":{},"69":{},"72":{},"79":{}}}],["h^1(\\omega)\\left",{"_index":7372,"t":{},"b":{"14":{}}}],["h^1(\\omega)\\tim",{"_index":7377,"t":{},"b":{"14":{}}}],["h^1(\\omega)^2",{"_index":2917,"t":{},"b":{"4":{},"14":{},"40":{}}}],["h^1(\\omega^n",{"_index":11327,"t":{},"b":{"43":{}}}],["h^1(\\omega_{\\sigma})^2",{"_index":10767,"t":{},"b":{"40":{}}}],["h^1_0(\\omega",{"_index":4990,"t":{},"b":{"11":{},"14":{},"39":{},"47":{},"49":{},"50":{},"69":{}}}],["h^1_0(\\omega)^2",{"_index":11374,"t":{},"b":{"45":{}}}],["h^1_0(\\omega)^2;\\quad",{"_index":11380,"t":{},"b":{"45":{}}}],["h^1_0(`\\omega",{"_index":12350,"t":{},"b":{"50":{}}}],["h^2(\\omega",{"_index":12031,"t":{},"b":{"48":{}}}],["h^2(\\omega_\\sigma\\cap",{"_index":10790,"t":{},"b":{"40":{}}}],["h^2(\\textrm{near",{"_index":12162,"t":{},"b":{"48":{}}}],["h^m(\\omega",{"_index":7357,"t":{},"b":{"14":{}}}],["h^{1}(\\omega",{"_index":3819,"t":{},"b":{"11":{}}}],["h^{1}(\\omega)^{2",{"_index":1408,"t":{},"b":{"3":{}}}],["h^{1}(]0,1[^2",{"_index":4006,"t":{},"b":{"11":{},"45":{}}}],["h^{1}(]0,1[^2)^{2",{"_index":4015,"t":{},"b":{"11":{}}}],["h^{1}(]0,1[^3",{"_index":4051,"t":{},"b":{"11":{}}}],["h^{1}(]0,1[^3)^{2",{"_index":4058,"t":{},"b":{"11":{}}}],["h^{1}_0(\\omega",{"_index":12374,"t":{},"b":{"50":{}}}],["h^{\\frac12}(\\gamma",{"_index":7489,"t":{},"b":{"15":{}}}],["h_0(doubl",{"_index":2284,"t":{},"b":{"4":{}}}],["h_1",{"_index":13666,"t":{},"b":{"54":{}}}],["h_e",{"_index":4893,"t":{},"b":{"11":{}}}],["h_i",{"_index":2286,"t":{},"b":{"4":{}}}],["h_k",{"_index":4896,"t":{},"b":{"11":{}}}],["h_k^2",{"_index":4890,"t":{},"b":{"11":{}}}],["h_n",{"_index":12270,"t":{},"b":{"48":{},"54":{}}}],["h_nv(doubl",{"_index":2285,"t":{},"b":{"4":{}}}],["h_z^t\\frac{\\parti",{"_index":12448,"t":{},"b":{"51":{}}}],["h_z^t}{\\partial",{"_index":12445,"t":{},"b":{"51":{}}}],["h_z}{\\partial",{"_index":12442,"t":{},"b":{"51":{}}}],["h_{\\phi",{"_index":12427,"t":{},"b":{"51":{}}}],["h_{e",{"_index":12252,"t":{},"b":{"48":{}}}],["h_{j",{"_index":5988,"t":{},"b":{"13":{}}}],["h_{max",{"_index":7325,"t":{},"b":{"14":{}}}],["h_{min",{"_index":7323,"t":{},"b":{"14":{}}}],["h_{n+1}(x",{"_index":12267,"t":{},"b":{"48":{}}}],["h_{t",{"_index":12257,"t":{},"b":{"48":{}}}],["h_{t}^{2",{"_index":12247,"t":{},"b":{"48":{}}}],["hack",{"_index":5283,"t":{},"b":{"13":{}}}],["half",{"_index":1911,"t":{},"b":{"3":{},"13":{},"54":{},"69":{},"76":{}}}],["halfday",{"_index":1297,"t":{},"b":{"3":{}}}],["hand",{"_index":1348,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"15":{},"20":{},"21":{},"22":{},"33":{},"48":{},"50":{},"68":{},"76":{},"79":{}}}],["handbook",{"_index":306,"t":{},"b":{"2":{}}}],["handl",{"_index":961,"t":{},"b":{"3":{},"7":{},"10":{},"12":{},"13":{},"15":{},"21":{},"33":{},"54":{},"57":{},"71":{}}}],["handles,varargout",{"_index":14677,"t":{},"b":{"71":{}}}],["hang",{"_index":110,"t":{},"b":{"2":{},"13":{},"60":{},"72":{}}}],["hang2006",{"_index":108,"t":{},"b":{"2":{},"13":{}}}],["hang2006].a",{"_index":6674,"t":{},"b":{"13":{}}}],["hansen’",{"_index":729,"t":{},"b":{"3":{}}}],["hard",{"_index":14595,"t":{},"b":{"70":{}}}],["harmon",{"_index":3434,"t":{},"b":{"5":{},"16":{}}}],["hassan",{"_index":417,"t":{},"b":{"2":{}}}],["hat",{"_index":4145,"t":{},"b":{"11":{},"76":{}}}],["hat{f",{"_index":2873,"t":{},"b":{"4":{}}}],["hat{f}_{i+nj",{"_index":2880,"t":{},"b":{"4":{}}}],["hat{k",{"_index":2552,"t":{},"b":{"4":{}}}],["hat{n}_0",{"_index":10214,"t":{},"b":{"37":{}}}],["hat{x",{"_index":4164,"t":{},"b":{"11":{},"15":{}}}],["hat{x}^i_1,...,\\hat{x}^i_d",{"_index":4747,"t":{},"b":{"11":{}}}],["hat{x}^i_k",{"_index":4746,"t":{},"b":{"11":{}}}],["hausdorff",{"_index":7067,"t":{},"b":{"13":{}}}],["have",{"_index":1305,"t":{},"b":{"3":{},"13":{}}}],["hazard",{"_index":1268,"t":{},"b":{"3":{}}}],["hbox",{"_index":4976,"t":{},"b":{"11":{},"40":{},"42":{},"45":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"74":{},"77":{},"79":{}}}],["hbox{and",{"_index":14366,"t":{},"b":{"65":{}}}],["hbox{given",{"_index":14354,"t":{},"b":{"65":{}}}],["hbox{hooke'",{"_index":10777,"t":{},"b":{"40":{}}}],["hbox{in",{"_index":14706,"t":{},"b":{"72":{}}}],["hct",{"_index":3902,"t":{},"b":{"11":{},"60":{}}}],["hdf5",{"_index":10021,"t":{},"b":{"35":{}}}],["hdr",{"_index":141,"t":{},"b":{"2":{}}}],["heart",{"_index":3539,"t":{},"b":{"8":{},"15":{}}}],["heat",{"_index":3454,"t":{"68":{},"69":{}},"b":{"6":{},"16":{},"41":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"79":{},"80":{}}}],["heatexb.ep",{"_index":14564,"t":{},"b":{"69":{}}}],["heatexchanger.ep",{"_index":14569,"t":{},"b":{"69":{}}}],["hecht",{"_index":65,"t":{},"b":{"2":{},"13":{},"29":{},"30":{},"33":{},"34":{},"66":{}}}],["hecht1992",{"_index":132,"t":{},"b":{"2":{},"13":{}}}],["hecht1998",{"_index":64,"t":{},"b":{"2":{},"12":{},"13":{}}}],["hecht1998_2",{"_index":148,"t":{},"b":{"2":{},"13":{}}}],["hecht2002",{"_index":94,"t":{},"b":{"2":{},"4":{},"33":{}}}],["height",{"_index":6065,"t":{},"b":{"13":{},"42":{},"43":{},"53":{},"54":{}}}],["held",{"_index":11913,"t":{},"b":{"48":{},"69":{}}}],["helix",{"_index":6595,"t":{},"b":{"13":{}}}],["hello",{"_index":9115,"t":{},"b":{"21":{}}}],["helmholtz",{"_index":3284,"t":{},"b":{"5":{},"6":{},"8":{},"10":{},"16":{},"81":{}}}],["helmholtz’",{"_index":14131,"t":{},"b":{"62":{},"63":{}}}],["help",{"_index":1123,"t":{},"b":{"3":{},"4":{},"5":{},"15":{},"17":{},"19":{},"35":{},"70":{},"72":{},"76":{}}}],["henc",{"_index":4184,"t":{},"b":{"11":{},"13":{},"42":{},"60":{},"66":{},"76":{},"80":{}}}],["henri",{"_index":3685,"t":{},"b":{"10":{},"29":{}}}],["here",{"_index":483,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"26":{},"27":{},"35":{},"37":{},"38":{},"40":{},"45":{},"47":{},"48":{},"49":{},"51":{},"53":{},"56":{},"60":{},"62":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"74":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["hermitian",{"_index":13798,"t":{},"b":{"58":{}}}],["hermitien",{"_index":9030,"t":{},"b":{"21":{}}}],["hessian",{"_index":1062,"t":{},"b":{"3":{},"12":{},"13":{},"20":{},"54":{}}}],["hessiana",{"_index":1762,"t":{},"b":{"3":{},"20":{}}}],["hessianarea",{"_index":1763,"t":{},"b":{"3":{},"20":{}}}],["hessianj",{"_index":1139,"t":{},"b":{"3":{}}}],["hessianjbuff",{"_index":1138,"t":{},"b":{"3":{}}}],["hessianl",{"_index":1136,"t":{},"b":{"3":{}}}],["hessianlbuff",{"_index":1133,"t":{},"b":{"3":{}}}],["hessianv",{"_index":1812,"t":{},"b":{"3":{},"20":{}}}],["hessianvolume(real[int",{"_index":1813,"t":{},"b":{"3":{},"20":{}}}],["heterogen",{"_index":3637,"t":{},"b":{"8":{},"10":{}}}],["heurist",{"_index":1957,"t":{},"b":{"3":{},"8":{}}}],["hex",{"_index":6362,"t":{},"b":{"13":{},"48":{}}}],["hh",{"_index":6048,"t":{},"b":{"13":{},"24":{},"25":{}}}],["hh){x",{"_index":6050,"t":{},"b":{"13":{}}}],["hh*t",{"_index":6052,"t":{},"b":{"13":{}}}],["hierarch",{"_index":7922,"t":{},"b":{"15":{},"16":{}}}],["hierarchi",{"_index":8307,"t":{},"b":{"16":{}}}],["high",{"_index":1064,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"12":{},"15":{},"33":{},"35":{},"51":{},"76":{}}}],["higher",{"_index":1645,"t":{},"b":{"3":{},"32":{},"41":{}}}],["highest",{"_index":14313,"t":{},"b":{"65":{}}}],["highli",{"_index":3636,"t":{},"b":{"8":{},"10":{},"12":{}}}],["highlight",{"_index":9839,"t":{},"b":{"32":{},"35":{}}}],["hilbert",{"_index":10956,"t":{},"b":{"41":{}}}],["hill",{"_index":14300,"t":{},"b":{"64":{},"66":{},"77":{}}}],["hilllogo",{"_index":15139,"t":{"77":{}},"b":{}}],["hinder",{"_index":3385,"t":{},"b":{"5":{}}}],["hinit",{"_index":12301,"t":{},"b":{"48":{}}}],["hint",{"_index":10064,"t":{},"b":{"35":{}}}],["hintermuller2002",{"_index":356,"t":{},"b":{"2":{},"50":{}}}],["hintermül",{"_index":357,"t":{},"b":{"2":{}}}],["hip",{"_index":7719,"t":{},"b":{"15":{},"35":{}}}],["hipr",{"_index":8114,"t":{},"b":{"15":{}}}],["hipre_freefem",{"_index":8113,"t":{},"b":{"15":{}}}],["hips_amalg",{"_index":8096,"t":{},"b":{"15":{}}}],["hips_doms",{"_index":8090,"t":{},"b":{"15":{}}}],["hips_dropschur",{"_index":8097,"t":{},"b":{"15":{}}}],["hips_droptol",{"_index":8095,"t":{},"b":{"15":{}}}],["hips_droptol0",{"_index":8092,"t":{},"b":{"15":{}}}],["hips_droptol1",{"_index":8094,"t":{},"b":{"15":{}}}],["hips_freefem",{"_index":7718,"t":{},"b":{"15":{}}}],["hips_prec",{"_index":8091,"t":{},"b":{"15":{}}}],["hiroshima",{"_index":9773,"t":{},"b":{"29":{}}}],["histori",{"_index":9820,"t":{},"b":{"30":{},"32":{},"33":{}}}],["historylogo",{"_index":9853,"t":{"33":{}},"b":{}}],["hj",{"_index":11814,"t":{},"b":{"47":{}}}],["hj(uh,vh",{"_index":11802,"t":{},"b":{"47":{}}}],["hl",{"_index":11307,"t":{},"b":{"43":{}}}],["hl)/l+hl",{"_index":11315,"t":{},"b":{"43":{}}}],["hlagrangian",{"_index":1827,"t":{},"b":{"3":{},"20":{}}}],["hlavácek",{"_index":251,"t":{},"b":{"2":{}}}],["hmax",{"_index":5547,"t":{},"b":{"13":{},"54":{}}}],["hmin",{"_index":5505,"t":{},"b":{"13":{},"24":{},"54":{},"61":{}}}],["hold",{"_index":937,"t":{},"b":{"3":{},"51":{}}}],["hole",{"_index":4410,"t":{},"b":{"11":{},"13":{},"24":{},"48":{},"69":{},"76":{}}}],["holelist",{"_index":6348,"t":{},"b":{"13":{},"53":{}}}],["holland",{"_index":309,"t":{},"b":{"2":{}}}],["home)/.freefem++.pref",{"_index":10133,"t":{},"b":{"35":{}}}],["homebrew",{"_index":9995,"t":{},"b":{"35":{}}}],["homogen",{"_index":3852,"t":{},"b":{"11":{},"40":{},"41":{},"69":{},"72":{}}}],["hood",{"_index":11495,"t":{},"b":{"45":{}}}],["hookean",{"_index":8261,"t":{"37":{}},"b":{"16":{},"37":{},"46":{},"51":{}}}],["hooke’",{"_index":10663,"t":{},"b":{"40":{},"42":{},"64":{}}}],["horgan",{"_index":217,"t":{},"b":{"2":{}}}],["horgan2004",{"_index":216,"t":{},"b":{"2":{},"37":{}}}],["horizont",{"_index":14581,"t":{},"b":{"69":{},"74":{},"78":{},"79":{}}}],["host",{"_index":3396,"t":{},"b":{"5":{},"15":{}}}],["hot",{"_index":14403,"t":{},"b":{"66":{}}}],["hotspot",{"_index":15358,"t":{},"b":{"81":{}}}],["hour",{"_index":9870,"t":{},"b":{"33":{}}}],["how_to.rtf",{"_index":10158,"t":{},"b":{"35":{}}}],["howison",{"_index":283,"t":{},"b":{"2":{}}}],["hpa",{"_index":10112,"t":{},"b":{"35":{}}}],["hpddm",{"_index":3310,"t":{},"b":{"5":{},"6":{},"7":{},"10":{},"16":{},"17":{},"29":{},"34":{},"35":{}}}],["hpddm_krylov_method",{"_index":3336,"t":{},"b":{"5":{}}}],["hpddm_pb_krylov_method",{"_index":3325,"t":{},"b":{"5":{},"10":{}}}],["hpddm_pb_recycl",{"_index":3327,"t":{},"b":{"5":{},"10":{}}}],["hpddm_recycl",{"_index":3337,"t":{},"b":{"5":{}}}],["hphi",{"_index":12504,"t":{},"b":{"51":{}}}],["hphi*vhr",{"_index":12528,"t":{},"b":{"51":{}}}],["hr",{"_index":11309,"t":{},"b":{"43":{},"51":{}}}],["hr){x",{"_index":11312,"t":{},"b":{"43":{}}}],["hr*m+dx(hphi)*x)*n.i",{"_index":12522,"t":{},"b":{"51":{}}}],["hr*m+dx(hphi)*x)*n.x",{"_index":12517,"t":{},"b":{"51":{}}}],["hr*n.i",{"_index":12520,"t":{},"b":{"51":{}}}],["hr*n.x",{"_index":12512,"t":{},"b":{"51":{}}}],["hs",{"_index":6351,"t":{},"b":{"13":{},"48":{}}}],["hs^3)/6",{"_index":6357,"t":{},"b":{"13":{},"48":{}}}],["hsieh",{"_index":421,"t":{},"b":{"2":{}}}],["hsize",{"_index":7228,"t":{},"b":{"13":{}}}],["hsl",{"_index":873,"t":{},"b":{"3":{}}}],["hslope",{"_index":14039,"t":{},"b":{"61":{}}}],["hslope*(l",{"_index":14048,"t":{},"b":{"61":{}}}],["hslope*t",{"_index":14047,"t":{},"b":{"61":{}}}],["hsv",{"_index":8559,"t":{},"b":{"19":{},"27":{},"54":{}}}],["htool",{"_index":8252,"t":{},"b":{"16":{},"34":{}}}],["htriangl",{"_index":4898,"t":{},"b":{"11":{},"13":{},"41":{},"48":{},"55":{}}}],["http://en.wikipedia.org/wiki/hsv_color_spac",{"_index":9744,"t":{},"b":{"27":{}}}],["http://jolivet.perso.enseeiht.fr",{"_index":9780,"t":{},"b":{"29":{}}}],["http://mirror.cyberbits.eu/gnu/gsl/gsl",{"_index":10024,"t":{},"b":{"35":{}}}],["http://nines.cs.kuleuven.be/research/ecf/mtables.html",{"_index":4738,"t":{},"b":{"11":{}}}],["http://www.mpich.org/static/downloads/3.3.2/mpich",{"_index":10009,"t":{},"b":{"35":{}}}],["https://aur.archlinux.org/freefem",{"_index":9976,"t":{},"b":{"35":{}}}],["https://doi.org/10.1090/mcom/3447",{"_index":3437,"t":{},"b":{"5":{}}}],["https://download.open",{"_index":10002,"t":{},"b":{"35":{}}}],["https://freefem.org",{"_index":9814,"t":{},"b":{"30":{}}}],["https://github.com/freefem/freefem",{"_index":10027,"t":{},"b":{"35":{}}}],["https://github.com/karlaprzbr",{"_index":9791,"t":{},"b":{"29":{}}}],["https://github.com/sgarnotel",{"_index":9787,"t":{},"b":{"29":{}}}],["https://sites.google.com/a/comfos.org/comfo",{"_index":9779,"t":{},"b":{"29":{}}}],["https://www.linkedin.com/in/loancannard",{"_index":9795,"t":{},"b":{"29":{}}}],["https://www.ljll.math.upmc.fr/auliac",{"_index":9762,"t":{},"b":{"29":{}}}],["https://www.ljll.math.upmc.fr/hecht",{"_index":9757,"t":{},"b":{"29":{}}}],["https://www.ljll.math.upmc.fr/lehyar",{"_index":9771,"t":{},"b":{"29":{}}}],["https://www.ljll.math.upmc.fr/nataf",{"_index":9782,"t":{},"b":{"29":{}}}],["https://www.ljll.math.upmc.fr/pironneau",{"_index":9765,"t":{},"b":{"29":{}}}],["hue",{"_index":8560,"t":{},"b":{"19":{},"27":{}}}],["huge",{"_index":3472,"t":{},"b":{"7":{},"11":{},"19":{},"39":{},"50":{}}}],["hull",{"_index":4419,"t":{},"b":{"11":{},"13":{}}}],["husmann",{"_index":9981,"t":{},"b":{"35":{}}}],["hx",{"_index":2937,"t":{},"b":{"4":{}}}],["hy",{"_index":2938,"t":{},"b":{"4":{}}}],["hy))/(2*(hx+hi",{"_index":2943,"t":{},"b":{"4":{}}}],["hyaric",{"_index":9768,"t":{},"b":{"29":{}}}],["hybrid",{"_index":305,"t":{},"b":{"2":{},"15":{}}}],["hydrodynam",{"_index":8304,"t":{},"b":{"16":{}}}],["hyperbol",{"_index":5089,"t":{},"b":{"12":{},"41":{},"65":{}}}],["hyperbola",{"_index":14333,"t":{},"b":{"65":{}}}],["hyperboloid",{"_index":14336,"t":{},"b":{"65":{}}}],["hypo(sqrt(hh*hh+rr*rr)*nn",{"_index":6057,"t":{},"b":{"13":{}}}],["hypo(t",{"_index":6051,"t":{},"b":{"13":{}}}],["hypothesi",{"_index":4183,"t":{},"b":{"11":{}}}],["hypr",{"_index":7721,"t":{},"b":{"15":{},"17":{}}}],["hypre_freefem",{"_index":7720,"t":{},"b":{"15":{}}}],["hz",{"_index":12505,"t":{},"b":{"51":{}}}],["hz)*ewall(vhr",{"_index":12556,"t":{},"b":{"51":{}}}],["hz*dy(vhphi",{"_index":12537,"t":{},"b":{"51":{}}}],["hz*n.i",{"_index":12513,"t":{},"b":{"51":{}}}],["hz*n.x",{"_index":12519,"t":{},"b":{"51":{}}}],["h}^h{u(x_1,x_2,x_3)dx_3",{"_index":10705,"t":{},"b":{"40":{}}}],["h}_{\\rho}^t,{h}_{\\phi}^t,{h}_{z}^t",{"_index":12437,"t":{},"b":{"51":{}}}],["i(1",{"_index":9037,"t":{},"b":{"21":{}}}],["i(15",{"_index":13969,"t":{},"b":{"60":{}}}],["i(t",{"_index":6500,"t":{},"b":{"13":{}}}],["i(x",{"_index":7290,"t":{},"b":{"14":{}}}],["i)?1:0",{"_index":7639,"t":{},"b":{"15":{}}}],["i){x",{"_index":5242,"t":{},"b":{"13":{}}}],["i*0.1",{"_index":8582,"t":{},"b":{"19":{},"27":{}}}],["i*dt",{"_index":5474,"t":{},"b":{"13":{}}}],["i*pii",{"_index":7685,"t":{},"b":{"15":{},"26":{}}}],["i*sin",{"_index":8823,"t":{},"b":{"21":{}}}],["i*uuu",{"_index":9519,"t":{},"b":{"26":{}}}],["i+1",{"_index":4918,"t":{},"b":{"11":{},"20":{},"21":{},"73":{}}}],["i+1)%4",{"_index":5253,"t":{},"b":{"13":{}}}],["i+1)*cos(t",{"_index":5243,"t":{},"b":{"13":{}}}],["i+1)*sin(t",{"_index":5244,"t":{},"b":{"13":{}}}],["i+1)*u[i",{"_index":745,"t":{},"b":{"3":{},"20":{}}}],["i+1)*u[i]*u[i]*0.5",{"_index":737,"t":{},"b":{"3":{},"20":{}}}],["i+th.nv",{"_index":2083,"t":{},"b":{"3":{}}}],["i+vh.ndof",{"_index":2043,"t":{},"b":{"3":{}}}],["i,i",{"_index":8532,"t":{},"b":{"19":{}}}],["i,j",{"_index":1267,"t":{},"b":{"3":{},"11":{},"14":{},"21":{},"26":{},"45":{}}}],["i,j,c",{"_index":1109,"t":{},"b":{"3":{}}}],["i,j,k",{"_index":2578,"t":{},"b":{"4":{}}}],["i,j\\leq",{"_index":1039,"t":{},"b":{"3":{}}}],["i.",{"_index":557,"t":{},"b":{"3":{},"5":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"41":{},"49":{},"60":{},"64":{},"65":{},"67":{},"72":{},"74":{},"76":{}}}],["i../download/install/includ",{"_index":2899,"t":{},"b":{"4":{}}}],["i.max",{"_index":13962,"t":{},"b":{"60":{}}}],["i.n",{"_index":8940,"t":{},"b":{"21":{}}}],["i/10",{"_index":8552,"t":{},"b":{"19":{},"25":{},"27":{}}}],["i/2",{"_index":5419,"t":{},"b":{"13":{},"24":{},"63":{}}}],["i/20",{"_index":14091,"t":{},"b":{"61":{}}}],["i/o",{"_index":9112,"t":{},"b":{"21":{},"52":{},"53":{},"54":{},"57":{}}}],["i/ologo",{"_index":12575,"t":{"52":{}},"b":{}}],["i/real(n",{"_index":9743,"t":{},"b":{"27":{}}}],["i0",{"_index":7205,"t":{},"b":{"13":{}}}],["i01",{"_index":5046,"t":{},"b":{"11":{}}}],["i01'*du1dn",{"_index":5059,"t":{},"b":{"11":{}}}],["i0:i1",{"_index":7211,"t":{},"b":{"13":{}}}],["i1",{"_index":4761,"t":{},"b":{"11":{},"13":{}}}],["i1(6",{"_index":12326,"t":{},"b":{"49":{}}}],["i1(nni",{"_index":9273,"t":{},"b":{"22":{}}}],["i1(t",{"_index":9266,"t":{},"b":{"22":{},"49":{}}}],["i10",{"_index":5048,"t":{},"b":{"11":{}}}],["i10'*du0dn",{"_index":5066,"t":{},"b":{"11":{}}}],["i1l",{"_index":4763,"t":{},"b":{"11":{}}}],["i2",{"_index":4765,"t":{},"b":{"11":{}}}],["i2(6",{"_index":12327,"t":{},"b":{"49":{}}}],["i2(t",{"_index":12324,"t":{},"b":{"49":{}}}],["i2l",{"_index":4767,"t":{},"b":{"11":{}}}],["i3(6",{"_index":12328,"t":{},"b":{"49":{}}}],["i3(t",{"_index":12325,"t":{},"b":{"49":{}}}],["i686",{"_index":10103,"t":{},"b":{"35":{}}}],["i[i",{"_index":8938,"t":{},"b":{"21":{}}}],["i\\)th",{"_index":5077,"t":{},"b":{"11":{}}}],["i\\arg(z",{"_index":13644,"t":{},"b":{"54":{}}}],["i\\in",{"_index":7334,"t":{},"b":{"14":{}}}],["i\\l",{"_index":3520,"t":{},"b":{"8":{},"10":{}}}],["i\\leq",{"_index":1075,"t":{},"b":{"3":{}}}],["i\\n",{"_index":4998,"t":{},"b":{"11":{}}}],["i\\neq",{"_index":4121,"t":{},"b":{"11":{},"14":{}}}],["i^{\\mathrm{th",{"_index":6682,"t":{},"b":{"13":{}}}],["i^{th",{"_index":6699,"t":{},"b":{"13":{}}}],["i_",{"_index":7288,"t":{},"b":{"14":{}}}],["i_0",{"_index":4179,"t":{},"b":{"11":{}}}],["i_0,i_1,i_2",{"_index":4146,"t":{},"b":{"11":{}}}],["i_0^c",{"_index":7194,"t":{},"b":{"13":{}}}],["i_1",{"_index":4180,"t":{},"b":{"11":{},"37":{}}}],["i_1^c",{"_index":7195,"t":{},"b":{"13":{}}}],["i_2",{"_index":4181,"t":{},"b":{"11":{}}}],["i_b",{"_index":14180,"t":{},"b":{"63":{}}}],["i_k",{"_index":2558,"t":{},"b":{"4":{}}}],["i_l",{"_index":4337,"t":{},"b":{"11":{}}}],["i_{\\max",{"_index":532,"t":{},"b":{"3":{}}}],["i_{\\omega",{"_index":7333,"t":{},"b":{"14":{}}}],["i_{a})(\\mathbf{c",{"_index":2483,"t":{},"b":{"4":{},"11":{}}}],["i_{a})}{2|t_k|}(\\mathbf{x",{"_index":4321,"t":{},"b":{"11":{}}}],["i_{a})}{2|t|}(x",{"_index":2494,"t":{},"b":{"4":{}}}],["i_{a},i_{b},i_{c",{"_index":2477,"t":{},"b":{"4":{},"11":{}}}],["i_{b})(\\mathbf{a",{"_index":2486,"t":{},"b":{"4":{},"11":{}}}],["i_{b})}{2|t_k|}(\\mathbf{x",{"_index":4324,"t":{},"b":{"11":{}}}],["i_{b})}{2|t|}(x",{"_index":2498,"t":{},"b":{"4":{}}}],["i_{c})(\\mathbf{b",{"_index":2480,"t":{},"b":{"4":{},"11":{}}}],["i_{c})}{2|t_k|}(\\mathbf{x",{"_index":4318,"t":{},"b":{"11":{}}}],["i_{c})}{2|t|}(x",{"_index":2490,"t":{},"b":{"4":{}}}],["i_{k",{"_index":2451,"t":{},"b":{"4":{}}}],["ib",{"_index":15016,"t":{},"b":{"75":{}}}],["ic",{"_index":15018,"t":{},"b":{"75":{}}}],["ic0",{"_index":7240,"t":{},"b":{"13":{}}}],["ic0:ic1",{"_index":7244,"t":{},"b":{"13":{}}}],["ic0:ic1).max",{"_index":7250,"t":{},"b":{"13":{}}}],["ic0:ic1).min",{"_index":7252,"t":{},"b":{"13":{}}}],["ic1",{"_index":7242,"t":{},"b":{"13":{}}}],["ic1)/hsiz",{"_index":7247,"t":{},"b":{"13":{}}}],["icas",{"_index":5147,"t":{},"b":{"13":{}}}],["icntl",{"_index":7754,"t":{},"b":{"15":{},"26":{}}}],["icntl(1",{"_index":7786,"t":{},"b":{"15":{}}}],["icntl(10",{"_index":7798,"t":{},"b":{"15":{}}}],["icntl(11",{"_index":7799,"t":{},"b":{"15":{}}}],["icntl(12",{"_index":7770,"t":{},"b":{"15":{}}}],["icntl(13",{"_index":7800,"t":{},"b":{"15":{}}}],["icntl(14",{"_index":7801,"t":{},"b":{"15":{}}}],["icntl(15",{"_index":7803,"t":{},"b":{"15":{}}}],["icntl(16",{"_index":7804,"t":{},"b":{"15":{}}}],["icntl(17",{"_index":7805,"t":{},"b":{"15":{}}}],["icntl(18",{"_index":7760,"t":{},"b":{"15":{}}}],["icntl(18).th",{"_index":7757,"t":{},"b":{"15":{}}}],["icntl(19",{"_index":7806,"t":{},"b":{"15":{}}}],["icntl(2",{"_index":7788,"t":{},"b":{"15":{}}}],["icntl(20",{"_index":7808,"t":{},"b":{"15":{}}}],["icntl(21",{"_index":7809,"t":{},"b":{"15":{}}}],["icntl(22",{"_index":7810,"t":{},"b":{"15":{}}}],["icntl(23",{"_index":7814,"t":{},"b":{"15":{}}}],["icntl(24",{"_index":7817,"t":{},"b":{"15":{}}}],["icntl(25",{"_index":7818,"t":{},"b":{"15":{}}}],["icntl(26",{"_index":7819,"t":{},"b":{"15":{}}}],["icntl(27",{"_index":7821,"t":{},"b":{"15":{}}}],["icntl(28",{"_index":7824,"t":{},"b":{"15":{}}}],["icntl(29",{"_index":7825,"t":{},"b":{"15":{}}}],["icntl(3",{"_index":7790,"t":{},"b":{"15":{}}}],["icntl(30",{"_index":7826,"t":{},"b":{"15":{}}}],["icntl(31",{"_index":7827,"t":{},"b":{"15":{}}}],["icntl(32",{"_index":7828,"t":{},"b":{"15":{}}}],["icntl(33",{"_index":7829,"t":{},"b":{"15":{}}}],["icntl(34",{"_index":7830,"t":{},"b":{"15":{}}}],["icntl(35",{"_index":7831,"t":{},"b":{"15":{}}}],["icntl(36",{"_index":7832,"t":{},"b":{"15":{}}}],["icntl(37",{"_index":7833,"t":{},"b":{"15":{}}}],["icntl(38",{"_index":7834,"t":{},"b":{"15":{}}}],["icntl(39",{"_index":7835,"t":{},"b":{"15":{}}}],["icntl(4",{"_index":7791,"t":{},"b":{"15":{}}}],["icntl(40",{"_index":7836,"t":{},"b":{"15":{},"26":{}}}],["icntl(5",{"_index":7756,"t":{},"b":{"15":{}}}],["icntl(6",{"_index":7769,"t":{},"b":{"15":{}}}],["icntl(7",{"_index":7768,"t":{},"b":{"15":{}}}],["icntl(8",{"_index":7796,"t":{},"b":{"15":{}}}],["icntl(9",{"_index":7797,"t":{},"b":{"15":{}}}],["icntl(i",{"_index":7781,"t":{},"b":{"15":{}}}],["icntl[ii",{"_index":9740,"t":{},"b":{"26":{}}}],["icntl[iii",{"_index":9734,"t":{},"b":{"26":{}}}],["icon",{"_index":9934,"t":{},"b":{"35":{}}}],["iconst",{"_index":2125,"t":{},"b":{"3":{}}}],["iconst/econst",{"_index":1929,"t":{},"b":{"3":{}}}],["id",{"_index":2687,"t":{},"b":{"4":{},"12":{},"15":{},"37":{},"45":{},"46":{},"75":{}}}],["id_",{"_index":3534,"t":{},"b":{"8":{}}}],["idea",{"_index":2740,"t":{},"b":{"4":{},"5":{},"7":{},"9":{},"11":{},"12":{},"13":{},"15":{},"18":{},"45":{}}}],["ideal",{"_index":5083,"t":{},"b":{"12":{},"51":{}}}],["ident",{"_index":552,"t":{},"b":{"3":{},"4":{},"14":{},"37":{},"41":{},"45":{},"60":{},"77":{},"79":{}}}],["identif",{"_index":5231,"t":{},"b":{"13":{},"15":{}}}],["identifi",{"_index":1341,"t":{},"b":{"3":{},"11":{},"66":{},"70":{}}}],["identifier(",{"_index":4522,"t":{},"b":{"11":{}}}],["idf",{"_index":3796,"t":{},"b":{"11":{}}}],["idiom",{"_index":9906,"t":{},"b":{"34":{},"70":{}}}],["idmesh",{"_index":3792,"t":{},"b":{"11":{}}}],["idmesh3",{"_index":3793,"t":{},"b":{"11":{}}}],["idp",{"_index":3481,"t":{},"b":{"7":{}}}],["idspac",{"_index":3791,"t":{},"b":{"11":{}}}],["idspace(idmesh,<idf",{"_index":3776,"t":{},"b":{"11":{}}}],["idspace(idmesh3,<idf",{"_index":3785,"t":{},"b":{"11":{}}}],["idspace(idmeshs,<idf",{"_index":3790,"t":{},"b":{"11":{}}}],["ie",{"_index":15022,"t":{},"b":{"75":{}}}],["ieee",{"_index":380,"t":{},"b":{"2":{}}}],["if(",{"_index":5934,"t":{},"b":{"13":{},"24":{}}}],["if((volr11",{"_index":5942,"t":{},"b":{"13":{},"24":{}}}],["if(1",{"_index":1731,"t":{},"b":{"3":{},"20":{}}}],["if(anew",{"_index":14479,"t":{},"b":{"67":{}}}],["if(debug",{"_index":8463,"t":{},"b":{"18":{}}}],["if(debugdj",{"_index":8625,"t":{},"b":{"20":{}}}],["if(dplot",{"_index":9463,"t":{},"b":{"26":{}}}],["if(dt",{"_index":11640,"t":{},"b":{"45":{}}}],["if(err",{"_index":12397,"t":{},"b":{"50":{},"73":{},"74":{}}}],["if(ffplot",{"_index":1718,"t":{},"b":{"3":{},"20":{}}}],["if(ipart",{"_index":9418,"t":{},"b":{"26":{}}}],["if(it",{"_index":1500,"t":{},"b":{"3":{}}}],["if(k",{"_index":14511,"t":{},"b":{"67":{}}}],["if(mpirank",{"_index":9406,"t":{},"b":{"26":{}}}],["if(nerr",{"_index":8634,"t":{},"b":{"20":{}}}],["if(statu",{"_index":8488,"t":{},"b":{"18":{}}}],["if(vdebug",{"_index":9414,"t":{},"b":{"26":{}}}],["iff",{"_index":3525,"t":{},"b":{"8":{}}}],["ifmacro",{"_index":9178,"t":{},"b":{"21":{},"60":{}}}],["ifmacro(aa",{"_index":9184,"t":{},"b":{"21":{},"60":{}}}],["ifmacro(aa,cas1",{"_index":9181,"t":{},"b":{"21":{}}}],["ifmacro(cas",{"_index":9188,"t":{},"b":{"21":{}}}],["ifstream",{"_index":5396,"t":{},"b":{"13":{},"21":{},"26":{},"52":{},"67":{}}}],["ignor",{"_index":859,"t":{},"b":{"3":{},"11":{},"35":{}}}],["ii",{"_index":274,"t":{},"b":{"2":{},"11":{},"13":{},"15":{},"21":{},"24":{},"26":{},"40":{}}}],["ii(0:d.n",{"_index":8904,"t":{},"b":{"21":{}}}],["ii1",{"_index":1453,"t":{},"b":{"3":{}}}],["ii2",{"_index":1454,"t":{},"b":{"3":{}}}],["iii",{"_index":8043,"t":{},"b":{"15":{},"26":{}}}],["iinclud",{"_index":2810,"t":{},"b":{"4":{}}}],["ijmax(a",{"_index":8965,"t":{},"b":{"21":{}}}],["ijmin(a",{"_index":8967,"t":{},"b":{"21":{}}}],["ik",{"_index":12379,"t":{},"b":{"50":{}}}],["ill",{"_index":14125,"t":{},"b":{"62":{}}}],["illustr",{"_index":8164,"t":{},"b":{"15":{},"76":{}}}],["ilu",{"_index":8026,"t":{},"b":{"15":{}}}],["ilu(k",{"_index":7903,"t":{},"b":{"15":{}}}],["ilu0",{"_index":8036,"t":{},"b":{"15":{}}}],["iluk",{"_index":7948,"t":{},"b":{"15":{}}}],["ilut",{"_index":7947,"t":{},"b":{"15":{},"53":{}}}],["im",{"_index":13599,"t":{},"b":{"54":{},"60":{}}}],["imag",{"_index":6511,"t":{},"b":{"13":{},"21":{},"32":{},"54":{}}}],["imag(c",{"_index":13600,"t":{},"b":{"54":{}}}],["imag(v",{"_index":14225,"t":{},"b":{"63":{}}}],["imag(v)^2",{"_index":15435,"t":{},"b":{"81":{}}}],["imag(z",{"_index":8818,"t":{},"b":{"21":{}}}],["imag(z1",{"_index":8831,"t":{},"b":{"21":{}}}],["imaginari",{"_index":8830,"t":{},"b":{"21":{},"39":{},"51":{},"54":{},"60":{},"63":{},"81":{}}}],["imax",{"_index":542,"t":{},"b":{"3":{}}}],["immedi",{"_index":1624,"t":{},"b":{"3":{}}}],["impact",{"_index":15367,"t":{},"b":{"81":{}}}],["imped",{"_index":3615,"t":{},"b":{"8":{}}}],["implement",{"_index":20,"t":{},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"15":{},"33":{},"37":{},"41":{},"43":{},"45":{},"46":{},"50":{},"60":{},"67":{},"72":{},"75":{},"76":{},"77":{}}}],["impli",{"_index":2472,"t":{},"b":{"4":{},"7":{},"11":{},"12":{},"13":{},"79":{}}}],["implicit",{"_index":5241,"t":{},"b":{"13":{},"16":{},"21":{},"41":{},"56":{},"57":{},"65":{},"70":{},"79":{}}}],["implicitli",{"_index":245,"t":{},"b":{"2":{},"8":{},"60":{},"76":{}}}],["import",{"_index":1967,"t":{},"b":{"3":{},"7":{},"11":{},"13":{},"15":{},"19":{},"26":{},"39":{},"40":{},"50":{},"71":{},"72":{}}}],["impos",{"_index":1391,"t":{},"b":{"3":{},"5":{},"9":{},"15":{},"41":{},"54":{},"79":{}}}],["imposs",{"_index":4346,"t":{},"b":{"11":{},"38":{}}}],["improv",{"_index":843,"t":{},"b":{"3":{},"8":{},"10":{},"31":{},"48":{}}}],["imuonde.p",{"_index":14229,"t":{},"b":{"63":{}}}],["in/out",{"_index":8516,"t":{},"b":{"19":{}}}],["in[].sum",{"_index":8716,"t":{},"b":{"20":{}}}],["in[][i",{"_index":8709,"t":{},"b":{"20":{}}}],["in\\mathcal{t}_{h",{"_index":3942,"t":{},"b":{"11":{}}}],["inappropri",{"_index":3369,"t":{},"b":{"5":{}}}],["incid",{"_index":11969,"t":{},"b":{"48":{},"66":{}}}],["incltl(18",{"_index":7761,"t":{},"b":{"15":{}}}],["includ",{"_index":1069,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"12":{},"13":{},"15":{},"18":{},"19":{},"21":{},"26":{},"33":{},"34":{},"35":{},"40":{},"48":{},"51":{},"55":{},"60":{},"70":{},"71":{}}}],["includepath",{"_index":10124,"t":{},"b":{"35":{}}}],["incom",{"_index":11338,"t":{},"b":{"43":{}}}],["incompat",{"_index":5239,"t":{},"b":{"13":{}}}],["incomplet",{"_index":6658,"t":{},"b":{"13":{},"15":{}}}],["incompress",{"_index":338,"t":{},"b":{"2":{},"66":{},"74":{}}}],["incorrect",{"_index":1193,"t":{},"b":{"3":{}}}],["increas",{"_index":830,"t":{},"b":{"3":{},"7":{},"11":{},"13":{},"15":{},"19":{},"41":{},"73":{},"76":{}}}],["increment",{"_index":8375,"t":{},"b":{"18":{},"37":{},"38":{},"58":{}}}],["inctl",{"_index":7752,"t":{},"b":{"15":{}}}],["inctl(18",{"_index":7759,"t":{},"b":{"15":{}}}],["inctl(5",{"_index":7758,"t":{},"b":{"15":{}}}],["inde",{"_index":1003,"t":{},"b":{"3":{},"76":{},"81":{}}}],["indefinit",{"_index":8156,"t":{},"b":{"15":{},"60":{}}}],["independ",{"_index":2787,"t":{},"b":{"4":{},"8":{},"13":{},"15":{},"41":{},"45":{},"48":{},"65":{}}}],["independli",{"_index":6538,"t":{},"b":{"13":{}}}],["index",{"_index":1259,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"21":{},"26":{},"51":{},"54":{},"55":{},"57":{},"60":{},"65":{},"72":{},"79":{},"81":{}}}],["india",{"_index":92,"t":{},"b":{"2":{},"61":{}}}],["indic",{"_index":1174,"t":{},"b":{"3":{},"11":{},"12":{},"13":{},"15":{},"21":{},"41":{},"48":{},"57":{},"60":{},"65":{},"66":{},"72":{}}}],["indicator2",{"_index":12261,"t":{},"b":{"48":{}}}],["indicator2(0",{"_index":12262,"t":{},"b":{"48":{}}}],["individu",{"_index":10238,"t":{},"b":{"37":{}}}],["induc",{"_index":3507,"t":{},"b":{"8":{}}}],["ineffici",{"_index":1017,"t":{},"b":{"3":{}}}],["ineqc",{"_index":2026,"t":{},"b":{"3":{},"20":{}}}],["ineqc(x",{"_index":8720,"t":{},"b":{"20":{}}}],["inequ",{"_index":350,"t":{},"b":{"2":{},"3":{},"16":{},"20":{},"38":{},"45":{},"50":{}}}],["inequalitylogo",{"_index":12344,"t":{"50":{}},"b":{}}],["inetutil",{"_index":10100,"t":{},"b":{"35":{}}}],["inexact",{"_index":3382,"t":{},"b":{"5":{},"6":{},"10":{}}}],["inexpens",{"_index":3620,"t":{},"b":{"8":{}}}],["inf",{"_index":2913,"t":{},"b":{"4":{},"16":{}}}],["inf(\\eta)}}\\right)^p.\\label{eq",{"_index":5570,"t":{},"b":{"13":{}}}],["inf_{\\mathbf{v}_h\\in",{"_index":11436,"t":{},"b":{"45":{}}}],["inf_{q_h\\in",{"_index":11438,"t":{},"b":{"45":{}}}],["infeas",{"_index":1020,"t":{},"b":{"3":{}}}],["infeasible_problem_detect",{"_index":1221,"t":{},"b":{"3":{}}}],["infin",{"_index":11188,"t":{},"b":{"41":{},"48":{},"65":{},"66":{}}}],["inflow",{"_index":9363,"t":{},"b":{"25":{},"61":{},"66":{},"74":{}}}],["info",{"_index":8125,"t":{},"b":{"15":{},"35":{}}}],["inforamt",{"_index":5545,"t":{},"b":{"13":{}}}],["inforc",{"_index":2674,"t":{},"b":{"4":{},"66":{}}}],["inform",{"_index":268,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"15":{},"17":{},"18":{},"35":{},"48":{},"53":{},"54":{},"55":{},"60":{},"65":{}}}],["information.th",{"_index":5601,"t":{},"b":{"13":{}}}],["infti",{"_index":1155,"t":{},"b":{"3":{},"41":{},"45":{},"66":{}}}],["infty\\)).also",{"_index":5574,"t":{},"b":{"13":{}}}],["infty\\right.\\right",{"_index":7352,"t":{},"b":{"14":{}}}],["ingredi",{"_index":3217,"t":{},"b":{"5":{},"10":{},"15":{}}}],["init",{"_index":2806,"t":{},"b":{"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"18":{},"26":{},"35":{},"38":{},"41":{},"42":{},"45":{},"60":{},"66":{},"74":{}}}],["init(i)i",{"_index":3005,"t":{},"b":{"5":{}}}],["init(u",{"_index":3072,"t":{},"b":{"5":{},"7":{},"10":{}}}],["init(u)[u,u",{"_index":3357,"t":{},"b":{"5":{}}}],["init_fe_add",{"_index":2673,"t":{},"b":{"4":{}}}],["init_fe_p2h",{"_index":2678,"t":{},"b":{"4":{}}}],["init_static_f",{"_index":2671,"t":{},"b":{"4":{}}}],["initi",{"_index":525,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"17":{},"20":{},"24":{},"25":{},"35":{},"37":{},"41":{},"45":{},"46":{},"48":{},"50":{},"54":{},"61":{},"62":{},"65":{},"67":{},"68":{},"73":{},"77":{},"79":{},"80":{}}}],["initializit",{"_index":2730,"t":{},"b":{"4":{}}}],["initialstddev",{"_index":803,"t":{},"b":{"3":{},"20":{}}}],["initpart",{"_index":3380,"t":{},"b":{"5":{}}}],["initu(n",{"_index":7576,"t":{},"b":{"15":{},"26":{}}}],["initu(njpart",{"_index":7569,"t":{},"b":{"15":{},"26":{}}}],["inlet",{"_index":7962,"t":{},"b":{"15":{}}}],["inner",{"_index":3392,"t":{},"b":{"5":{},"9":{},"12":{},"13":{},"15":{},"24":{},"37":{},"60":{},"76":{},"77":{}}}],["inneredge(t",{"_index":10366,"t":{},"b":{"37":{}}}],["innerellipseextens",{"_index":10365,"t":{},"b":{"37":{}}}],["innerellipseextension)*innerradius*cos(t",{"_index":10367,"t":{},"b":{"37":{}}}],["innerradiu",{"_index":10360,"t":{},"b":{"37":{}}}],["innerradius*sin(t",{"_index":10368,"t":{},"b":{"37":{}}}],["input",{"_index":860,"t":{},"b":{"3":{},"5":{},"12":{},"13":{},"15":{},"33":{},"52":{},"69":{}}}],["input/output",{"_index":6853,"t":{},"b":{"13":{}}}],["inquir",{"_index":5576,"t":{},"b":{"13":{},"24":{},"25":{},"54":{},"61":{}}}],["inria",{"_index":71,"t":{},"b":{"2":{},"35":{}}}],["inscrib",{"_index":5493,"t":{},"b":{"13":{}}}],["insert",{"_index":3588,"t":{},"b":{"8":{},"13":{},"51":{},"52":{}}}],["insid",{"_index":3824,"t":{},"b":{"11":{},"13":{},"14":{},"15":{},"38":{},"42":{},"48":{},"51":{},"54":{},"60":{},"66":{},"76":{}}}],["inside)(u2*v2",{"_index":10485,"t":{},"b":{"38":{}}}],["instal",{"_index":875,"t":{"35":{}},"b":{"3":{},"4":{},"13":{},"15":{},"19":{},"32":{},"35":{},"36":{},"39":{}}}],["instanc",{"_index":2750,"t":{},"b":{"4":{},"8":{},"12":{},"13":{},"63":{},"65":{},"69":{},"72":{},"76":{},"78":{},"79":{}}}],["instead",{"_index":1173,"t":{},"b":{"3":{},"5":{},"35":{},"39":{},"48":{},"66":{},"70":{},"72":{},"79":{}}}],["institut",{"_index":6661,"t":{},"b":{"13":{},"29":{}}}],["instruct",{"_index":2978,"t":{},"b":{"4":{},"35":{},"77":{}}}],["insufficient_memori",{"_index":1238,"t":{},"b":{"3":{}}}],["int",{"_index":677,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"63":{},"66":{},"67":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["int(1+5*(square(x",{"_index":5666,"t":{},"b":{"13":{}}}],["int(2*pi*rr/h)/4)*4;//numb",{"_index":6062,"t":{},"b":{"13":{}}}],["int(th.be(k).el",{"_index":5341,"t":{},"b":{"13":{}}}],["int(th[k].adj((e",{"_index":5336,"t":{},"b":{"13":{}}}],["int(th[k][0",{"_index":5330,"t":{},"b":{"13":{}}}],["int(th[k][1",{"_index":5331,"t":{},"b":{"13":{}}}],["int(th[k][2",{"_index":5332,"t":{},"b":{"13":{}}}],["int,int",{"_index":6163,"t":{},"b":{"13":{},"48":{}}}],["int,real",{"_index":13915,"t":{},"b":{"60":{}}}],["int0d",{"_index":10166,"t":{},"b":{"36":{}}}],["int1d",{"_index":10165,"t":{},"b":{"36":{},"54":{},"59":{}}}],["int1d(th",{"_index":4498,"t":{},"b":{"11":{},"37":{},"38":{},"40":{},"42":{},"43":{},"45":{},"46":{},"48":{},"51":{},"54":{},"55":{},"59":{},"61":{},"62":{},"67":{},"68":{},"72":{},"79":{}}}],["int1d(th)([u,v]'*[n.x,n.i",{"_index":14975,"t":{},"b":{"74":{}}}],["int1d(th)(f",{"_index":4623,"t":{},"b":{"11":{}}}],["int1d(th)(f*w",{"_index":4572,"t":{},"b":{"11":{}}}],["int1d(th)(k*v*w",{"_index":4575,"t":{},"b":{"11":{}}}],["int1d(th,1)(((n.x*u1+n.y*u2)>0)*(n.x*u1+n.y*u2)*v*vh",{"_index":15216,"t":{},"b":{"77":{}}}],["int1d(th,1,2,3,4)(1./lenedg",{"_index":9300,"t":{},"b":{"24":{}}}],["int1d(th,2)(k*v*w",{"_index":4576,"t":{},"b":{"11":{}}}],["int1d(th1",{"_index":10478,"t":{},"b":{"38":{}}}],["int1d(th1,1,3,4)(1./lenedge)+int1d(th2,1,2,3)(1./lenedg",{"_index":9299,"t":{},"b":{"24":{}}}],["int1d(th2",{"_index":6852,"t":{},"b":{"13":{},"38":{}}}],["int1d(th[0",{"_index":5044,"t":{},"b":{"11":{}}}],["int1d(th[1",{"_index":5039,"t":{},"b":{"11":{}}}],["int1d(th[i",{"_index":5034,"t":{},"b":{"11":{}}}],["int1d(th[mpirank],interior)(square(u",{"_index":7486,"t":{},"b":{"15":{}}}],["int2d",{"_index":13603,"t":{},"b":{"54":{},"59":{},"76":{}}}],["int2d(disk",{"_index":11880,"t":{},"b":{"48":{}}}],["int2d(disk)((dx(u",{"_index":11884,"t":{},"b":{"48":{}}}],["int2d(disk)((dy(u",{"_index":11886,"t":{},"b":{"48":{}}}],["int2d(disk)(err^2",{"_index":11882,"t":{},"b":{"48":{}}}],["int2d(meshname)(1*v",{"_index":3492,"t":{},"b":{"7":{},"10":{}}}],["int2d(meshname)(f*v",{"_index":3713,"t":{},"b":{"10":{}}}],["int2d(meshname)(grad(u",{"_index":3491,"t":{},"b":{"7":{},"10":{}}}],["int2d(sh",{"_index":11270,"t":{},"b":{"42":{},"66":{},"69":{}}}],["int2d(sh)(vold*vv/dt",{"_index":14438,"t":{},"b":{"66":{}}}],["int2d(t0h",{"_index":12190,"t":{},"b":{"48":{}}}],["int2d(th",{"_index":637,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["int2d(th)((dy(u1",{"_index":4856,"t":{},"b":{"11":{}}}],["int2d(th)((dy(v1",{"_index":4860,"t":{},"b":{"11":{}}}],["int2d(th)((v/dt+(u1*dx(v)+u2*dy(v)))*vh",{"_index":15219,"t":{},"b":{"77":{}}}],["int2d(th)((x",{"_index":12134,"t":{},"b":{"48":{}}}],["int2d(th)(0.5*dx(v)*dx(w",{"_index":1985,"t":{},"b":{"3":{}}}],["int2d(th)(0.5*f(dx(w)*dx(w",{"_index":619,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(1",{"_index":12088,"t":{},"b":{"48":{}}}],["int2d(th)(1*p",{"_index":4862,"t":{},"b":{"11":{}}}],["int2d(th)(1*q",{"_index":4858,"t":{},"b":{"11":{}}}],["int2d(th)(1*v",{"_index":12297,"t":{},"b":{"48":{}}}],["int2d(th)(1.*vh",{"_index":9285,"t":{},"b":{"22":{}}}],["int2d(th)(2*rho*sin(y)*v*w",{"_index":1815,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(boundaryedg",{"_index":13743,"t":{},"b":{"55":{}}}],["int2d(th)(chik",{"_index":4871,"t":{},"b":{"11":{}}}],["int2d(th)(convect([u1",{"_index":11621,"t":{},"b":{"45":{}}}],["int2d(th)(div(u",{"_index":9170,"t":{},"b":{"21":{}}}],["int2d(th)(dx(err)^2",{"_index":12202,"t":{},"b":{"48":{}}}],["int2d(th)(dx(err0)^2",{"_index":12198,"t":{},"b":{"48":{}}}],["int2d(th)(dx(psi)*dx(w)+dy(psi)*dy(w",{"_index":14414,"t":{},"b":{"66":{}}}],["int2d(th)(dx(u)*dx(v",{"_index":14652,"t":{},"b":{"71":{}}}],["int2d(th)(dx(u1)*dx(u1",{"_index":10546,"t":{},"b":{"39":{}}}],["int2d(th)(dx(uue)^2",{"_index":12194,"t":{},"b":{"48":{}}}],["int2d(th)(dx(v)*dx(w)+dy(v)*dy(w",{"_index":2016,"t":{},"b":{"3":{}}}],["int2d(th)(etak*v",{"_index":12295,"t":{},"b":{"48":{}}}],["int2d(th)(f",{"_index":4679,"t":{},"b":{"11":{},"48":{}}}],["int2d(th)(f*vh",{"_index":9283,"t":{},"b":{"22":{}}}],["int2d(th)(f*w",{"_index":4577,"t":{},"b":{"11":{}}}],["int2d(th)(f1*w",{"_index":1988,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(f2*w",{"_index":1990,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(grad(ux",{"_index":9176,"t":{},"b":{"21":{}}}],["int2d(th)(h1err)/h1",{"_index":12206,"t":{},"b":{"48":{}}}],["int2d(th)(h1err0)/h1",{"_index":12205,"t":{},"b":{"48":{}}}],["int2d(th)(ie*(u",{"_index":15034,"t":{},"b":{"75":{}}}],["int2d(th)(internaledg",{"_index":13750,"t":{},"b":{"55":{}}}],["int2d(th)(k*v*w",{"_index":4550,"t":{},"b":{"11":{}}}],["int2d(th)(k*w",{"_index":4562,"t":{},"b":{"11":{}}}],["int2d(th)(ntonedg",{"_index":13758,"t":{},"b":{"55":{}}}],["int2d(th)(nuedg",{"_index":13760,"t":{},"b":{"55":{}}}],["int2d(th)(p*dx(v1",{"_index":11604,"t":{},"b":{"45":{}}}],["int2d(th)(p*dy(v1",{"_index":11606,"t":{},"b":{"45":{}}}],["int2d(th)(p*q",{"_index":10391,"t":{},"b":{"37":{}}}],["int2d(th)(rho*rho*sin(y)*v",{"_index":1810,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(sqrt(rho4*sin2",{"_index":1728,"t":{},"b":{"3":{},"20":{}}}],["int2d(th)(u*u",{"_index":8489,"t":{},"b":{"18":{}}}],["int2d(th)(u1*u1",{"_index":10549,"t":{},"b":{"39":{}}}],["int2d(th)(u1*u2",{"_index":10539,"t":{},"b":{"39":{}}}],["int2d(th)(u^2+v^2+r",{"_index":14513,"t":{},"b":{"67":{}}}],["int2d(th)(uh*vh",{"_index":12381,"t":{},"b":{"50":{}}}],["int2d(th)(uu*w",{"_index":11753,"t":{},"b":{"46":{}}}],["int2d(th)(v",{"_index":14930,"t":{},"b":{"74":{}}}],["int2d(th)(v*dx(u)*dt",{"_index":14932,"t":{},"b":{"74":{}}}],["int2d(th)(v*dy(u)*dt",{"_index":14934,"t":{},"b":{"74":{}}}],["int2d(th)(v*vh/dt",{"_index":15212,"t":{},"b":{"77":{}}}],["int2d(th)(vo*vh/dt",{"_index":15217,"t":{},"b":{"77":{}}}],["int2d(th,2)(k*v*w",{"_index":4578,"t":{},"b":{"11":{}}}],["int2d(th,i)(1",{"_index":5927,"t":{},"b":{"13":{},"24":{}}}],["int2d(th,i)(i",{"_index":5931,"t":{},"b":{"13":{},"24":{}}}],["int2d(th,i)(x",{"_index":5929,"t":{},"b":{"13":{},"24":{}}}],["int2d(th,i)(z",{"_index":5933,"t":{},"b":{"13":{},"24":{}}}],["int2d(th0",{"_index":12049,"t":{},"b":{"48":{}}}],["int2d(th0)((uu",{"_index":12057,"t":{},"b":{"48":{}}}],["int2d(th0)(f*(u0",{"_index":12061,"t":{},"b":{"48":{}}}],["int2d(th1",{"_index":6989,"t":{},"b":{"13":{},"21":{},"38":{}}}],["int2d(th2",{"_index":6850,"t":{},"b":{"13":{},"21":{},"38":{}}}],["int2d(th3,i)(1",{"_index":9277,"t":{},"b":{"22":{}}}],["int2d(th3,i)(1./area",{"_index":9278,"t":{},"b":{"22":{}}}],["int2d(th[0",{"_index":5042,"t":{},"b":{"11":{}}}],["int2d(th[1",{"_index":5037,"t":{},"b":{"11":{}}}],["int2d(th[i",{"_index":5033,"t":{},"b":{"11":{}}}],["int2d(th[mpirank",{"_index":7481,"t":{},"b":{"15":{}}}],["int2d(thc)(grad(u)'*grad(v",{"_index":9562,"t":{},"b":{"26":{}}}],["int2d(thi)(f*v",{"_index":9560,"t":{},"b":{"26":{}}}],["int2d(thi)(grad(u)'*grad(v",{"_index":9559,"t":{},"b":{"26":{}}}],["int2d(thi)(phii",{"_index":9476,"t":{},"b":{"26":{}}}],["int2d(thi)(real(pij[njpart])<0",{"_index":9478,"t":{},"b":{"26":{}}}],["int3d",{"_index":13604,"t":{},"b":{"54":{},"59":{}}}],["int3d(meshname)(div(u",{"_index":3162,"t":{},"b":{"5":{}}}],["int3d(meshname)(grad(u",{"_index":2998,"t":{},"b":{"5":{}}}],["int3d(meshname)(v",{"_index":3000,"t":{},"b":{"5":{}}}],["int3d(th",{"_index":4504,"t":{},"b":{"11":{},"13":{},"15":{},"25":{},"40":{},"48":{},"54":{},"59":{}}}],["int3d(th)(f",{"_index":4716,"t":{},"b":{"11":{}}}],["int3d(th)(f*v",{"_index":8070,"t":{},"b":{"15":{}}}],["int3d(th)(k*v*w",{"_index":4526,"t":{},"b":{"11":{}}}],["int3d(th)(k*w",{"_index":4553,"t":{},"b":{"11":{}}}],["int3d(th,qford",{"_index":4718,"t":{},"b":{"11":{}}}],["int3d(th,qfv",{"_index":4717,"t":{},"b":{"11":{}}}],["int3d(th,r11)(1",{"_index":5941,"t":{},"b":{"13":{},"24":{}}}],["int3d(th3",{"_index":7047,"t":{},"b":{"13":{},"25":{}}}],["int3d(th3)(1",{"_index":9333,"t":{},"b":{"25":{}}}],["int3d(th3)(square(u",{"_index":9332,"t":{},"b":{"25":{}}}],["int3d(thi",{"_index":7538,"t":{},"b":{"15":{}}}],["int3d(thi)(pijstar,j",{"_index":7663,"t":{},"b":{"15":{}}}],["int[int",{"_index":1452,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"40":{},"48":{},"53":{},"54":{},"60":{}}}],["int[int,int",{"_index":6410,"t":{},"b":{"13":{},"15":{}}}],["int[str",{"_index":9102,"t":{},"b":{"21":{}}}],["int\\limits_{\\omega}(h^t_{\\rho}a_1+h^t_{\\phi}a_2+h^t_{z}a_3)d\\omega",{"_index":12439,"t":{},"b":{"51":{}}}],["int\\limits_{\\omega}\\frac{\\parti",{"_index":12444,"t":{},"b":{"51":{}}}],["int\\limits_{\\omega}h_z^t",{"_index":12440,"t":{},"b":{"51":{}}}],["int][int",{"_index":13950,"t":{},"b":{"60":{}}}],["int_\\gamma",{"_index":10719,"t":{},"b":{"40":{},"42":{}}}],["int_\\gamma\\alpha(u^n",{"_index":4786,"t":{},"b":{"11":{},"68":{},"79":{}}}],["int_\\omega",{"_index":656,"t":{},"b":{"3":{},"11":{},"39":{},"40":{},"42":{},"47":{},"48":{},"50":{},"68":{},"72":{},"73":{}}}],["int_\\omega((\\mathbf{u}\\cdot\\nabla",{"_index":14816,"t":{},"b":{"73":{}}}],["int_\\omega(\\delta\\kappa\\nabla",{"_index":15069,"t":{},"b":{"75":{}}}],["int_\\omega(\\frac12|\\nabla",{"_index":14728,"t":{},"b":{"72":{}}}],["int_\\omega(\\frac{c^{n+1",{"_index":15174,"t":{},"b":{"77":{}}}],["int_\\omega(\\frac{u^n",{"_index":15259,"t":{},"b":{"79":{}}}],["int_\\omega(\\kappa\\nabla",{"_index":15067,"t":{},"b":{"75":{}}}],["int_\\omega(a(u,v)w_1+b(u,v)w_2",{"_index":14740,"t":{},"b":{"72":{}}}],["int_\\omega\\nabla\\varphi\\cdot\\nabla",{"_index":14766,"t":{},"b":{"72":{}}}],["int_\\omega|\\varphi",{"_index":14768,"t":{},"b":{"72":{}}}],["int_\\sigma\\alpha",{"_index":4986,"t":{},"b":{"11":{}}}],["int_b",{"_index":15071,"t":{},"b":{"75":{}}}],["int_c",{"_index":15072,"t":{},"b":{"75":{}}}],["int_d",{"_index":15073,"t":{},"b":{"75":{}}}],["int_e(\\alpha|n\\cdot",{"_index":15177,"t":{},"b":{"77":{}}}],["int_e(u",{"_index":14985,"t":{},"b":{"75":{}}}],["int_k",{"_index":4889,"t":{},"b":{"11":{}}}],["int_omega",{"_index":614,"t":{},"b":{"3":{},"20":{}}}],["int_{",{"_index":2468,"t":{},"b":{"4":{},"11":{}}}],["int_{\\gamma",{"_index":4473,"t":{},"b":{"11":{}}}],["int_{\\gamma_1\\cup",{"_index":4658,"t":{},"b":{"11":{}}}],["int_{\\gamma_1}f(x,y)d",{"_index":4654,"t":{},"b":{"11":{}}}],["int_{\\gamma_d",{"_index":12220,"t":{},"b":{"48":{}}}],["int_{\\gamma_f^n}({\\parti",{"_index":11335,"t":{},"b":{"43":{}}}],["int_{\\gamma_h}f(\\mathbf{x})d",{"_index":4622,"t":{},"b":{"11":{}}}],["int_{\\gamma_i",{"_index":10487,"t":{},"b":{"38":{}}}],["int_{\\gamma_n}\\mathbf{g}\\cdot",{"_index":10765,"t":{},"b":{"40":{}}}],["int_{\\gamma_r",{"_index":4483,"t":{},"b":{"11":{}}}],["int_{\\gamma_{13",{"_index":4811,"t":{},"b":{"11":{},"68":{}}}],["int_{\\gamma_{p",{"_index":11648,"t":{},"b":{"46":{}}}],["int_{\\omega",{"_index":592,"t":{},"b":{"3":{},"11":{},"41":{},"46":{},"50":{},"64":{},"76":{}}}],["int_{\\omega^n",{"_index":11334,"t":{},"b":{"43":{}}}],["int_{\\omega^n}\\nabla",{"_index":11328,"t":{},"b":{"43":{}}}],["int_{\\omega_0",{"_index":10210,"t":{},"b":{"37":{}}}],["int_{\\omega_0}\\kappa[\\bf_{n",{"_index":10220,"t":{},"b":{"37":{}}}],["int_{\\omega_0}\\left\\{\\kappa[\\bf_{n",{"_index":10224,"t":{},"b":{"37":{}}}],["int_{\\omega_0}\\left\\{{\\p",{"_index":10230,"t":{},"b":{"37":{}}}],["int_{\\omega_h}f(x,i",{"_index":4678,"t":{},"b":{"11":{}}}],["int_{\\omega_i",{"_index":7524,"t":{},"b":{"15":{}}}],["int_{\\omega_i}\\nabla",{"_index":4984,"t":{},"b":{"11":{}}}],["int_{\\omega_i}f",{"_index":4987,"t":{},"b":{"11":{}}}],["int_{\\omega_j",{"_index":4996,"t":{},"b":{"11":{}}}],["int_{\\omega_j}(\\nabla",{"_index":4988,"t":{},"b":{"11":{}}}],["int_{\\omega_{\\sigma",{"_index":10763,"t":{},"b":{"40":{}}}],["int_{\\omega}(\\nabla\\cdot(\\kappa\\nabla",{"_index":15064,"t":{},"b":{"75":{}}}],["int_{\\omega}\\frac{\\partial^{|\\alpha",{"_index":7358,"t":{},"b":{"14":{}}}],["int_{\\omega}\\left(|\\parti",{"_index":7348,"t":{},"b":{"14":{}}}],["int_{\\omega}\\mathbf{f}\\cdot",{"_index":11378,"t":{},"b":{"45":{}}}],["int_{\\omega}\\mathbf{f}\\cdot\\mathbf{v",{"_index":11389,"t":{},"b":{"45":{}}}],["int_{\\omega}\\mathbf{u}\\cdot",{"_index":11379,"t":{},"b":{"45":{}}}],["int_{\\omega}\\mu",{"_index":12320,"t":{},"b":{"49":{}}}],["int_{\\omega}\\nabla",{"_index":11399,"t":{},"b":{"45":{},"48":{},"76":{}}}],["int_{\\omega}\\nabla\\mathbf{u}\\cdot",{"_index":11386,"t":{},"b":{"45":{}}}],["int_{\\omega}\\p",{"_index":11446,"t":{},"b":{"45":{}}}],["int_{\\omega}\\phi_i\\phi_j",{"_index":4291,"t":{},"b":{"11":{}}}],["int_{\\omega}\\textrm{div}\\mathbf{u",{"_index":11390,"t":{},"b":{"45":{}}}],["int_{\\omega}\\textrm{div}\\mathbf{v",{"_index":11388,"t":{},"b":{"45":{}}}],["int_{\\omega}\\{u^m+\\tau",{"_index":10919,"t":{},"b":{"41":{}}}],["int_{\\omega}\\{u^{m+1}v",{"_index":10917,"t":{},"b":{"41":{}}}],["int_{\\omega}\\{u^{m+1}v+\\tau\\nabla",{"_index":10921,"t":{},"b":{"41":{}}}],["int_{\\omega}f(u",{"_index":12039,"t":{},"b":{"48":{}}}],["int_{\\omega}f\\phi_i",{"_index":15124,"t":{},"b":{"76":{}}}],["int_{\\omega}fu",{"_index":1359,"t":{},"b":{"3":{}}}],["int_{\\omega}fv",{"_index":15116,"t":{},"b":{"76":{}}}],["int_{\\omega}fv\\nonumb",{"_index":12322,"t":{},"b":{"49":{}}}],["int_{\\omega}q",{"_index":11382,"t":{},"b":{"45":{}}}],["int_{\\omega}v\\delta",{"_index":15112,"t":{},"b":{"76":{}}}],["int_{\\omega}vw\\end{split",{"_index":7345,"t":{},"b":{"14":{}}}],["int_{\\omega}{\\nabla",{"_index":14552,"t":{},"b":{"69":{}}}],["int_{\\omega}{f",{"_index":12349,"t":{},"b":{"50":{}}}],["int_{\\omega}|\\nabla",{"_index":12033,"t":{},"b":{"48":{}}}],["int_{\\omega}|w(x,y)|^2\\text{d",{"_index":7337,"t":{},"b":{"14":{}}}],["int_{\\p",{"_index":10213,"t":{},"b":{"37":{}}}],["int_{\\p\\omega",{"_index":10923,"t":{},"b":{"41":{}}}],["int_{\\parti",{"_index":4892,"t":{},"b":{"11":{}}}],["int_{d}f(\\mathbf{x",{"_index":4601,"t":{},"b":{"11":{}}}],["int_{d}{f(\\boldx",{"_index":13811,"t":{},"b":{"59":{}}}],["int_{e^m",{"_index":2519,"t":{},"b":{"4":{}}}],["int_{e_\\gamma",{"_index":15180,"t":{},"b":{"77":{}}}],["int_{gamma_r",{"_index":4500,"t":{},"b":{"11":{}}}],["int_{k_i",{"_index":4876,"t":{},"b":{"11":{}}}],["int_{omega",{"_index":4495,"t":{},"b":{"11":{}}}],["int_{t_h",{"_index":15078,"t":{},"b":{"76":{}}}],["int_{t_h}f",{"_index":15083,"t":{},"b":{"76":{}}}],["intalledg",{"_index":5122,"t":{},"b":{"12":{},"54":{},"77":{}}}],["intalledges(th",{"_index":4552,"t":{},"b":{"11":{},"48":{},"54":{},"77":{}}}],["intalledges(th)((1",{"_index":15220,"t":{},"b":{"77":{}}}],["intalledges(th)(f*w",{"_index":4564,"t":{},"b":{"11":{}}}],["intalledges(th)(k*v*w",{"_index":4551,"t":{},"b":{"11":{}}}],["intalledges(th)(vh*(mean(v)*(n.x*u1+n.y*u2",{"_index":15214,"t":{},"b":{"77":{}}}],["intallfac",{"_index":13605,"t":{},"b":{"54":{}}}],["intallfaces(th",{"_index":4545,"t":{},"b":{"11":{}}}],["intallfaces(th)(f*w",{"_index":4560,"t":{},"b":{"11":{}}}],["intallfaces(th)(k*v*w",{"_index":4543,"t":{},"b":{"11":{}}}],["integ",{"_index":798,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"15":{},"18":{},"21":{},"26":{},"52":{},"54":{},"55":{},"56":{},"60":{},"66":{}}}],["integr",{"_index":459,"t":{},"b":{"2":{},"4":{},"11":{},"12":{},"35":{},"37":{},"41":{},"42":{},"45":{},"51":{},"52":{},"54":{},"60":{},"70":{},"72":{},"76":{},"77":{}}}],["integral(",{"_index":12277,"t":{},"b":{"48":{}}}],["intel",{"_index":5107,"t":{},"b":{"12":{},"35":{}}}],["intens",{"_index":10810,"t":{},"b":{"40":{},"51":{}}}],["inter",{"_index":8182,"t":{},"b":{"15":{}}}],["interact",{"_index":3616,"t":{},"b":{"8":{},"12":{},"34":{},"42":{},"66":{}}}],["intercommun",{"_index":8193,"t":{},"b":{"15":{}}}],["intercommunc",{"_index":8195,"t":{},"b":{"15":{}}}],["interconnect",{"_index":2689,"t":{},"b":{"4":{}}}],["interest",{"_index":1653,"t":{},"b":{"3":{},"5":{},"8":{},"15":{},"17":{},"35":{},"81":{}}}],["interfac",{"_index":713,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"26":{},"29":{},"34":{},"36":{},"39":{},"60":{},"72":{}}}],["interg",{"_index":13494,"t":{},"b":{"54":{}}}],["interij",{"_index":9475,"t":{},"b":{"26":{}}}],["interior",{"_index":21,"t":{},"b":{"2":{},"3":{},"13":{},"15":{},"48":{},"49":{},"69":{}}}],["intermediari",{"_index":1111,"t":{},"b":{"3":{}}}],["intern",{"_index":3341,"t":{},"b":{"5":{},"12":{},"13":{},"15":{},"26":{},"35":{},"49":{},"51":{},"54":{},"60":{},"69":{},"70":{},"72":{},"76":{},"77":{}}}],["internal_error",{"_index":1241,"t":{},"b":{"3":{}}}],["internaledg",{"_index":13749,"t":{},"b":{"55":{}}}],["internet",{"_index":15362,"t":{},"b":{"81":{}}}],["internship",{"_index":9790,"t":{},"b":{"29":{}}}],["interpl",{"_index":3888,"t":{},"b":{"11":{}}}],["interpol",{"_index":1457,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"25":{},"33":{},"34":{},"40":{},"48":{},"54":{},"60":{},"79":{}}}],["interpolate(\\(w_h\\),\\(v_h",{"_index":4927,"t":{},"b":{"11":{}}}],["interpolate(v3h",{"_index":4932,"t":{},"b":{"11":{}}}],["interpolate(vh",{"_index":4912,"t":{},"b":{"11":{}}}],["interpolate(vh0",{"_index":5049,"t":{},"b":{"11":{}}}],["interpolate(vh1",{"_index":5047,"t":{},"b":{"11":{}}}],["interpolate(vh4",{"_index":4956,"t":{},"b":{"11":{}}}],["interpolate(wh",{"_index":4913,"t":{},"b":{"11":{},"54":{}}}],["interpolate(wh4",{"_index":4959,"t":{},"b":{"11":{}}}],["interpolate(whi",{"_index":7603,"t":{},"b":{"15":{},"26":{}}}],["interpolate(whij",{"_index":7683,"t":{},"b":{"15":{},"26":{}}}],["interpret",{"_index":1644,"t":{},"b":{"3":{},"8":{},"70":{},"81":{}}}],["interprocess",{"_index":8368,"t":{},"b":{"18":{}}}],["interrupt",{"_index":8399,"t":{},"b":{"18":{}}}],["intersci",{"_index":325,"t":{},"b":{"2":{}}}],["intersect",{"_index":3653,"t":{},"b":{"8":{},"10":{},"12":{},"13":{},"26":{},"45":{},"70":{}}}],["interv",{"_index":1337,"t":{},"b":{"3":{},"8":{},"10":{},"13":{},"14":{},"60":{},"68":{},"79":{}}}],["intf",{"_index":12086,"t":{},"b":{"48":{}}}],["intn(meshname)(v",{"_index":3168,"t":{},"b":{"5":{}}}],["intra",{"_index":8180,"t":{},"b":{"15":{}}}],["intra)commun",{"_index":8196,"t":{},"b":{"15":{}}}],["intracommun",{"_index":8192,"t":{},"b":{"15":{}}}],["intric",{"_index":3592,"t":{},"b":{"8":{}}}],["intrins",{"_index":7064,"t":{},"b":{"13":{}}}],["introduc",{"_index":1046,"t":{},"b":{"3":{},"8":{},"13":{},"15":{},"37":{},"38":{},"40":{},"48":{},"49":{},"64":{}}}],["introduct",{"_index":9,"t":{},"b":{"2":{},"3":{},"7":{},"8":{},"12":{},"15":{},"17":{},"28":{},"34":{},"36":{},"44":{}}}],["introductionlogo",{"_index":9892,"t":{"34":{}},"b":{}}],["intuit",{"_index":964,"t":{},"b":{"3":{}}}],["int{\\omega",{"_index":1602,"t":{},"b":{"3":{}}}],["int{\\omega}{2\\rho\\sin(\\phi)wv",{"_index":1630,"t":{},"b":{"3":{}}}],["int{\\omega}{\\frac{1}{2",{"_index":1591,"t":{},"b":{"3":{}}}],["int{\\omega}{\\int_{0}^{\\rho(\\theta,\\phi",{"_index":1578,"t":{},"b":{"3":{}}}],["int{\\omega}{\\left",{"_index":1565,"t":{},"b":{"3":{}}}],["int{\\omega}{\\rho^{2}\\sin(\\phi)v",{"_index":1627,"t":{},"b":{"3":{}}}],["int{\\omega}{\\sqrt",{"_index":1570,"t":{},"b":{"3":{}}}],["int{\\omega}{\\sqrt{g",{"_index":1569,"t":{},"b":{"3":{}}}],["inv",{"_index":13305,"t":{},"b":{"53":{}}}],["inv(a1",{"_index":9069,"t":{},"b":{"21":{}}}],["invalid",{"_index":5438,"t":{},"b":{"13":{}}}],["invalid_number_detect",{"_index":1239,"t":{},"b":{"3":{}}}],["invalid_opt",{"_index":1236,"t":{},"b":{"3":{}}}],["invalid_problem_definit",{"_index":1233,"t":{},"b":{"3":{}}}],["invari",{"_index":15234,"t":{},"b":{"78":{}}}],["invdiff",{"_index":13609,"t":{},"b":{"54":{}}}],["invdiff(a",{"_index":13610,"t":{},"b":{"54":{}}}],["invdiffnp",{"_index":13613,"t":{},"b":{"54":{}}}],["invdiffnp(a",{"_index":13614,"t":{},"b":{"54":{}}}],["invdiffpo",{"_index":13616,"t":{},"b":{"54":{}}}],["invdiffpos(a",{"_index":13617,"t":{},"b":{"54":{}}}],["invers",{"_index":469,"t":{},"b":{"2":{},"5":{},"8":{},"11":{},"15":{},"21":{},"22":{},"37":{},"39":{},"48":{},"54":{},"58":{},"60":{},"75":{}}}],["invert",{"_index":3383,"t":{},"b":{"5":{},"39":{}}}],["invit",{"_index":11361,"t":{},"b":{"44":{}}}],["involv",{"_index":1270,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"12":{},"15":{},"34":{},"37":{},"42":{},"60":{}}}],["invp",{"_index":7907,"t":{},"b":{"15":{}}}],["io",{"_index":2827,"t":{},"b":{"4":{}}}],["iohdf5",{"_index":13372,"t":{},"b":{"53":{}}}],["iostream",{"_index":2765,"t":{},"b":{"4":{}}}],["iovtk",{"_index":6872,"t":{},"b":{"13":{},"19":{},"27":{},"36":{},"53":{},"55":{},"61":{}}}],["ip",{"_index":1016,"t":{},"b":{"3":{}}}],["iparm",{"_index":7904,"t":{},"b":{"15":{}}}],["iparm(14",{"_index":8042,"t":{},"b":{"15":{}}}],["iparm(16",{"_index":7957,"t":{},"b":{"15":{}}}],["iparm(20",{"_index":8116,"t":{},"b":{"15":{}}}],["iparm.txt",{"_index":7918,"t":{},"b":{"15":{}}}],["iparm[0",{"_index":7912,"t":{},"b":{"15":{}}}],["iparm[1",{"_index":7913,"t":{},"b":{"15":{}}}],["iparm[10",{"_index":8018,"t":{},"b":{"15":{}}}],["iparm[11",{"_index":8019,"t":{},"b":{"15":{}}}],["iparm[12",{"_index":8021,"t":{},"b":{"15":{}}}],["iparm[13",{"_index":8023,"t":{},"b":{"15":{}}}],["iparm[14",{"_index":8024,"t":{},"b":{"15":{}}}],["iparm[15",{"_index":8027,"t":{},"b":{"15":{}}}],["iparm[16",{"_index":8028,"t":{},"b":{"15":{}}}],["iparm[2",{"_index":8008,"t":{},"b":{"15":{}}}],["iparm[3",{"_index":8009,"t":{},"b":{"15":{}}}],["iparm[4",{"_index":8010,"t":{},"b":{"15":{}}}],["iparm[5",{"_index":8011,"t":{},"b":{"15":{}}}],["iparm[6",{"_index":8012,"t":{},"b":{"15":{}}}],["iparm[63",{"_index":7914,"t":{},"b":{"15":{}}}],["iparm[7",{"_index":8013,"t":{},"b":{"15":{}}}],["iparm[8",{"_index":8015,"t":{},"b":{"15":{}}}],["iparm[9",{"_index":8017,"t":{},"b":{"15":{}}}],["iparm[i",{"_index":7910,"t":{},"b":{"15":{}}}],["iparm[ii",{"_index":7959,"t":{},"b":{"15":{}}}],["iparm[iii",{"_index":8044,"t":{},"b":{"15":{}}}],["iparms[0",{"_index":8118,"t":{},"b":{"15":{}}}],["iparms[1",{"_index":8119,"t":{},"b":{"15":{}}}],["iparms[10",{"_index":8135,"t":{},"b":{"15":{}}}],["iparms[11",{"_index":8136,"t":{},"b":{"15":{}}}],["iparms[12",{"_index":8138,"t":{},"b":{"15":{}}}],["iparms[13",{"_index":8139,"t":{},"b":{"15":{}}}],["iparms[14",{"_index":8140,"t":{},"b":{"15":{}}}],["iparms[15",{"_index":8142,"t":{},"b":{"15":{}}}],["iparms[16",{"_index":8143,"t":{},"b":{"15":{}}}],["iparms[17",{"_index":8145,"t":{},"b":{"15":{}}}],["iparms[18",{"_index":8146,"t":{},"b":{"15":{}}}],["iparms[19",{"_index":8147,"t":{},"b":{"15":{}}}],["iparms[2",{"_index":8122,"t":{},"b":{"15":{}}}],["iparms[3",{"_index":8123,"t":{},"b":{"15":{}}}],["iparms[4",{"_index":8124,"t":{},"b":{"15":{}}}],["iparms[5",{"_index":8126,"t":{},"b":{"15":{}}}],["iparms[6",{"_index":8128,"t":{},"b":{"15":{}}}],["iparms[7",{"_index":8131,"t":{},"b":{"15":{}}}],["iparms[8",{"_index":8132,"t":{},"b":{"15":{}}}],["iparms[9",{"_index":8134,"t":{},"b":{"15":{}}}],["ipart",{"_index":7662,"t":{},"b":{"15":{},"26":{}}}],["ipart?0",{"_index":7630,"t":{},"b":{"15":{}}}],["ipgradvolum",{"_index":1822,"t":{},"b":{"3":{},"20":{}}}],["iphessianlag",{"_index":1828,"t":{},"b":{"3":{},"20":{}}}],["ipj(p",{"_index":2557,"t":{},"b":{"4":{}}}],["ipopt",{"_index":861,"t":{},"b":{"3":{},"20":{},"29":{},"34":{},"53":{}}}],["ipopt(/*fit",{"_index":1200,"t":{},"b":{"3":{}}}],["ipopt([a",{"_index":1184,"t":{},"b":{"3":{}}}],["ipopt([b",{"_index":1490,"t":{},"b":{"3":{}}}],["ipopt(a",{"_index":1198,"t":{},"b":{"3":{}}}],["ipopt(area",{"_index":1871,"t":{},"b":{"3":{},"20":{}}}],["ipopt(b",{"_index":1199,"t":{},"b":{"3":{}}}],["ipopt(j",{"_index":1141,"t":{},"b":{"3":{}}}],["ipopt.opt",{"_index":1314,"t":{},"b":{"3":{}}}],["ipopt/ipopt",{"_index":879,"t":{},"b":{"3":{}}}],["ipopt’",{"_index":1252,"t":{},"b":{"3":{}}}],["ipvolum",{"_index":1819,"t":{},"b":{"3":{},"20":{}}}],["iq",{"_index":5418,"t":{},"b":{"13":{},"24":{}}}],["iq%10",{"_index":5421,"t":{},"b":{"13":{},"24":{}}}],["iq/10",{"_index":5423,"t":{},"b":{"13":{},"24":{}}}],["irecv(processor(10",{"_index":7449,"t":{},"b":{"15":{}}}],["irecv(processor(jpart[j",{"_index":7558,"t":{},"b":{"15":{}}}],["iron",{"_index":12342,"t":{},"b":{"49":{}}}],["irregular",{"_index":12093,"t":{},"b":{"48":{}}}],["irrot",{"_index":14367,"t":{"66":{}},"b":{"66":{},"77":{},"79":{}}}],["isdir",{"_index":13439,"t":{},"b":{"53":{}}}],["isend(processor(10",{"_index":7448,"t":{},"b":{"15":{}}}],["isend(processor(int",{"_index":8219,"t":{},"b":{"15":{}}}],["isend(processor(jpart[j",{"_index":7561,"t":{},"b":{"15":{}}}],["isinf",{"_index":13620,"t":{},"b":{"54":{}}}],["isinf(a",{"_index":13621,"t":{},"b":{"54":{}}}],["isinmesh",{"_index":13509,"t":{},"b":{"54":{}}}],["ismetr",{"_index":3892,"t":{},"b":{"11":{},"13":{},"24":{},"25":{},"47":{},"48":{},"54":{}}}],["isnan",{"_index":13622,"t":{},"b":{"54":{}}}],["isnan(a",{"_index":13623,"t":{},"b":{"54":{}}}],["isnorm",{"_index":13624,"t":{},"b":{"54":{}}}],["isn’t",{"_index":6551,"t":{},"b":{"13":{},"35":{},"70":{},"81":{}}}],["iso",{"_index":4354,"t":{},"b":{"11":{},"13":{},"19":{},"25":{},"53":{},"54":{}}}],["iso690",{"_index":9817,"t":{},"b":{"30":{}}}],["isolin",{"_index":7181,"t":{},"b":{"13":{},"25":{},"53":{}}}],["isoline(th",{"_index":7189,"t":{},"b":{"13":{},"53":{}}}],["isolvalu",{"_index":5385,"t":{},"b":{"13":{}}}],["isometr",{"_index":7135,"t":{},"b":{"13":{}}}],["isometric(th.nv",{"_index":7131,"t":{},"b":{"13":{}}}],["isometric[ii",{"_index":7132,"t":{},"b":{"13":{}}}],["isotrop",{"_index":2283,"t":{},"b":{"4":{},"13":{},"40":{},"48":{},"54":{}}}],["isovalu",{"_index":2979,"t":{},"b":{"4":{},"13":{},"19":{},"38":{},"39":{},"48":{},"49":{},"54":{},"71":{},"76":{}}}],["issn",{"_index":9806,"t":{},"b":{"30":{}}}],["issu",{"_index":1229,"t":{},"b":{"3":{},"7":{},"31":{}}}],["isus",{"_index":8144,"t":{},"b":{"15":{}}}],["it1",{"_index":2950,"t":{},"b":{"4":{}}}],["item",{"_index":5618,"t":{},"b":{"13":{},"54":{},"60":{},"76":{}}}],["iter",{"_index":182,"t":{},"b":{"2":{},"3":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"20":{},"25":{},"26":{},"37":{},"38":{},"39":{},"41":{},"45":{},"50":{},"54":{},"60":{},"61":{},"64":{},"66":{},"67":{},"74":{},"77":{},"79":{},"80":{}}}],["iter%10",{"_index":2013,"t":{},"b":{"3":{}}}],["iter%200",{"_index":8721,"t":{},"b":{"20":{}}}],["iter>1",{"_index":1491,"t":{},"b":{"3":{}}}],["iterrefin",{"_index":7883,"t":{},"b":{"15":{}}}],["itmax",{"_index":3306,"t":{},"b":{"5":{},"10":{}}}],["ito",{"_index":344,"t":{},"b":{"2":{}}}],["ito2003",{"_index":343,"t":{},"b":{"2":{},"50":{}}}],["itself",{"_index":3309,"t":{},"b":{"5":{},"8":{},"11":{}}}],["ittt",{"_index":9403,"t":{},"b":{"26":{}}}],["it’",{"_index":2731,"t":{},"b":{"4":{},"13":{},"51":{},"52":{}}}],["iv",{"_index":707,"t":{},"b":{"3":{},"11":{}}}],["iv*v4",{"_index":4949,"t":{},"b":{"11":{}}}],["iv0",{"_index":4952,"t":{},"b":{"11":{}}}],["iv34",{"_index":4931,"t":{},"b":{"11":{}}}],["iv34*a1",{"_index":4938,"t":{},"b":{"11":{}}}],["iv4t0",{"_index":4955,"t":{},"b":{"11":{}}}],["ivalu",{"_index":10521,"t":{},"b":{"39":{},"54":{}}}],["ivan",{"_index":252,"t":{},"b":{"2":{}}}],["ivt0",{"_index":4953,"t":{},"b":{"11":{}}}],["iw4",{"_index":4958,"t":{},"b":{"11":{}}}],["iw4v",{"_index":4961,"t":{},"b":{"11":{}}}],["iwanami",{"_index":275,"t":{},"b":{"2":{}}}],["ix",{"_index":5420,"t":{},"b":{"13":{},"24":{}}}],["ix,iy,iz",{"_index":5938,"t":{},"b":{"13":{},"24":{}}}],["ixx",{"_index":4967,"t":{},"b":{"11":{}}}],["ixx*dd",{"_index":4970,"t":{},"b":{"11":{}}}],["iy",{"_index":5422,"t":{},"b":{"13":{},"24":{}}}],["iz",{"_index":5920,"t":{},"b":{"13":{},"24":{}}}],["i}_{k",{"_index":12366,"t":{},"b":{"50":{}}}],["i~1,2,3",{"_index":10702,"t":{},"b":{"40":{}}}],["j",{"_index":303,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{},"21":{},"25":{},"26":{},"27":{},"30":{},"37":{},"41":{},"43":{},"46":{},"47":{},"55":{},"57":{},"60":{},"64":{},"67":{},"68":{},"72":{},"75":{},"81":{}}}],["j%10",{"_index":11357,"t":{},"b":{"43":{}}}],["j'_b",{"_index":15003,"t":{},"b":{"75":{}}}],["j'_c",{"_index":15006,"t":{},"b":{"75":{}}}],["j'_d",{"_index":15007,"t":{},"b":{"75":{}}}],["j(1",{"_index":9038,"t":{},"b":{"21":{}}}],["j(15",{"_index":13970,"t":{},"b":{"60":{}}}],["j(\\mathbf{u})((\\mathbf{v}),(\\mathbf{w",{"_index":11667,"t":{},"b":{"46":{}}}],["j(\\mathbf{x",{"_index":548,"t":{},"b":{"3":{}}}],["j(\\mathbf{x})\\|_p\\l",{"_index":554,"t":{},"b":{"3":{}}}],["j(\\mathbf{x})\\|_p^2\\l",{"_index":558,"t":{},"b":{"3":{}}}],["j(\\mathbf{x}^{(0)})\\|_p",{"_index":555,"t":{},"b":{"3":{}}}],["j(j",{"_index":8955,"t":{},"b":{"21":{}}}],["j(real[int",{"_index":15031,"t":{},"b":{"75":{}}}],["j(u",{"_index":588,"t":{},"b":{"3":{},"20":{},"47":{},"50":{}}}],["j(u1",{"_index":10282,"t":{},"b":{"37":{}}}],["j(u^n",{"_index":11789,"t":{},"b":{"47":{}}}],["j(u_{1},u_{2",{"_index":11646,"t":{},"b":{"46":{}}}],["j(un",{"_index":11756,"t":{},"b":{"46":{}}}],["j(v_{1},v_{2",{"_index":1416,"t":{},"b":{"3":{}}}],["j(x",{"_index":495,"t":{},"b":{"3":{}}}],["j(x)||_p\\leq",{"_index":566,"t":{},"b":{"3":{}}}],["j(x)||_p^2\\leq",{"_index":571,"t":{},"b":{"3":{}}}],["j(x_0)||_p",{"_index":568,"t":{},"b":{"3":{}}}],["j(z",{"_index":15049,"t":{},"b":{"75":{}}}],["j){th",{"_index":7579,"t":{},"b":{"15":{}}}],["j+1",{"_index":4266,"t":{},"b":{"11":{},"41":{}}}],["j.max",{"_index":13963,"t":{},"b":{"60":{}}}],["j0",{"_index":13625,"t":{},"b":{"54":{}}}],["j0(x",{"_index":13627,"t":{},"b":{"54":{}}}],["j1",{"_index":13628,"t":{},"b":{"54":{}}}],["j1(x",{"_index":13629,"t":{},"b":{"54":{}}}],["j16",{"_index":10058,"t":{},"b":{"35":{}}}],["j:h^{1}(\\omega)^{2}\\longrightarrow",{"_index":1415,"t":{},"b":{"3":{}}}],["j<nbproc",{"_index":10018,"t":{},"b":{"35":{}}}],["j[k",{"_index":13958,"t":{},"b":{"60":{}}}],["j\\end{split",{"_index":4122,"t":{},"b":{"11":{}}}],["j\\le",{"_index":3563,"t":{},"b":{"8":{},"49":{}}}],["j\\ne",{"_index":4813,"t":{},"b":{"11":{}}}],["j^{th",{"_index":14799,"t":{},"b":{"72":{}}}],["j_",{"_index":13738,"t":{},"b":{"54":{}}}],["j_i",{"_index":7553,"t":{},"b":{"15":{}}}],["j_k",{"_index":2560,"t":{},"b":{"4":{}}}],["j_l",{"_index":4334,"t":{},"b":{"11":{}}}],["j_n(x",{"_index":13632,"t":{},"b":{"54":{}}}],["j_{c}(x)^{t}\\lambda",{"_index":1028,"t":{},"b":{"3":{}}}],["j_{c}(x_{\\mu})^{t}\\lambda_{\\mu",{"_index":972,"t":{},"b":{"3":{}}}],["j_{k",{"_index":2450,"t":{},"b":{"4":{}}}],["jacc",{"_index":1096,"t":{},"b":{"3":{}}}],["jacc(real[int",{"_index":1191,"t":{},"b":{"3":{}}}],["jaccbuff",{"_index":1103,"t":{},"b":{"3":{}}}],["jack",{"_index":5149,"t":{},"b":{"13":{}}}],["jacobi",{"_index":8318,"t":{},"b":{"17":{}}}],["jacobian",{"_index":1097,"t":{},"b":{"3":{}}}],["jacqu",{"_index":9750,"t":{},"b":{"29":{},"34":{}}}],["japan",{"_index":9776,"t":{},"b":{"29":{}}}],["japanes",{"_index":9904,"t":{},"b":{"34":{}}}],["java",{"_index":876,"t":{},"b":{"3":{}}}],["jean",{"_index":203,"t":{},"b":{"2":{}}}],["jeff",{"_index":286,"t":{},"b":{"2":{}}}],["jenkin",{"_index":10119,"t":{},"b":{"35":{}}}],["jindrich",{"_index":250,"t":{},"b":{"2":{}}}],["jipopt",{"_index":877,"t":{},"b":{"3":{}}}],["jj",{"_index":8964,"t":{},"b":{"21":{}}}],["jn",{"_index":13630,"t":{},"b":{"54":{}}}],["jn(n",{"_index":13631,"t":{},"b":{"54":{}}}],["join",{"_index":5155,"t":{},"b":{"13":{},"69":{}}}],["jolivet",{"_index":3687,"t":{},"b":{"10":{},"29":{}}}],["jonathan",{"_index":121,"t":{},"b":{"2":{}}}],["josa",{"_index":399,"t":{},"b":{"2":{}}}],["joukowski",{"_index":11956,"t":{},"b":{"48":{}}}],["joukowski0(psi0",{"_index":11999,"t":{},"b":{"48":{}}}],["joukowski1(psi1,vh",{"_index":12004,"t":{},"b":{"48":{}}}],["journal",{"_index":229,"t":{},"b":{"2":{},"30":{}}}],["jp",{"_index":7669,"t":{},"b":{"15":{},"26":{}}}],["jpart",{"_index":7548,"t":{},"b":{"15":{},"26":{}}}],["jpart(npart",{"_index":7659,"t":{},"b":{"15":{},"26":{}}}],["jpart.n",{"_index":7554,"t":{},"b":{"15":{}}}],["jpart.resize(njpart",{"_index":7667,"t":{},"b":{"15":{},"26":{}}}],["jpart[j",{"_index":9484,"t":{},"b":{"26":{}}}],["jpart[jp",{"_index":7682,"t":{},"b":{"15":{},"26":{}}}],["jpart[njpart",{"_index":7666,"t":{},"b":{"15":{},"26":{}}}],["jump",{"_index":5121,"t":{},"b":{"12":{},"48":{},"54":{},"77":{}}}],["jump(c",{"_index":13635,"t":{},"b":{"54":{}}}],["june",{"_index":10154,"t":{},"b":{"35":{}}}],["justifi",{"_index":3644,"t":{},"b":{"8":{}}}],["juzawa",{"_index":11625,"t":{},"b":{"45":{}}}],["j}{\\partial",{"_index":497,"t":{},"b":{"3":{}}}],["k",{"_index":261,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"19":{},"21":{},"26":{},"39":{},"40":{},"41":{},"43":{},"45":{},"48":{},"50":{},"51":{},"54":{},"61":{},"62":{},"66":{},"67":{},"68":{},"79":{},"81":{}}}],["k(j",{"_index":2356,"t":{},"b":{"4":{}}}],["k(j),(nu(i,j),i",{"_index":2350,"t":{},"b":{"4":{}}}],["k(phat",{"_index":2577,"t":{},"b":{"4":{}}}],["k*(dx(u)*dx(v",{"_index":4828,"t":{},"b":{"11":{},"68":{}}}],["k*(dx(v",{"_index":15315,"t":{},"b":{"79":{}}}],["k*(dx(v)*dx(vv",{"_index":14435,"t":{},"b":{"66":{}}}],["k*u",{"_index":12174,"t":{},"b":{"48":{}}}],["k+1",{"_index":10524,"t":{},"b":{"39":{}}}],["k+1\\)th",{"_index":10526,"t":{},"b":{"39":{}}}],["k.edgeorientation(0",{"_index":2618,"t":{},"b":{"4":{}}}],["k.edgeorientation(1",{"_index":2620,"t":{},"b":{"4":{}}}],["k.edgeorientation(2",{"_index":2622,"t":{},"b":{"4":{}}}],["k.ohtsuka",{"_index":9879,"t":{},"b":{"33":{}}}],["k/c)^2",{"_index":14164,"t":{},"b":{"62":{}}}],["k0",{"_index":4221,"t":{},"b":{"11":{}}}],["k1",{"_index":4224,"t":{},"b":{"11":{}}}],["k2",{"_index":4227,"t":{},"b":{"11":{}}}],["k>1",{"_index":5447,"t":{},"b":{"13":{}}}],["k[int",{"_index":3723,"t":{},"b":{"10":{}}}],["k\\)th",{"_index":10525,"t":{},"b":{"39":{}}}],["k\\,v\\,w",{"_index":4528,"t":{},"b":{"11":{}}}],["k\\,w",{"_index":4554,"t":{},"b":{"11":{}}}],["k\\geq",{"_index":1523,"t":{},"b":{"3":{}}}],["k\\in",{"_index":7527,"t":{},"b":{"15":{}}}],["k^2",{"_index":12524,"t":{},"b":{"51":{}}}],["k^m",{"_index":14024,"t":{},"b":{"61":{}}}],["k^m|\\nabla",{"_index":14034,"t":{},"b":{"61":{}}}],["k^{2}v",{"_index":14132,"t":{},"b":{"62":{}}}],["k^{m+1",{"_index":14026,"t":{},"b":{"61":{}}}],["k^{m+1}\\frac{\\epsilon^m}{k^m",{"_index":14025,"t":{},"b":{"61":{}}}],["k_0",{"_index":3643,"t":{},"b":{"8":{},"10":{},"11":{},"51":{}}}],["k_0^2\\vec{h",{"_index":12417,"t":{},"b":{"51":{}}}],["k_1",{"_index":3654,"t":{},"b":{"8":{},"10":{},"11":{}}}],["k_1(\\gamma_i",{"_index":10808,"t":{},"b":{"40":{}}}],["k_2",{"_index":4210,"t":{},"b":{"11":{}}}],["k_2(\\gamma",{"_index":10835,"t":{},"b":{"40":{}}}],["k_2(\\gamma_i",{"_index":10809,"t":{},"b":{"40":{}}}],["k_i",{"_index":4235,"t":{},"b":{"11":{},"48":{}}}],["k_iu_",{"_index":12159,"t":{},"b":{"48":{}}}],["k_l(\\gamma_k",{"_index":10784,"t":{},"b":{"40":{}}}],["k_m",{"_index":7929,"t":{},"b":{"15":{}}}],["ka",{"_index":1978,"t":{},"b":{"3":{},"51":{}}}],["kahou",{"_index":7464,"t":{},"b":{"15":{}}}],["kamal",{"_index":418,"t":{},"b":{"2":{}}}],["kappa",{"_index":4453,"t":{},"b":{"11":{},"37":{},"40":{},"61":{},"66":{},"69":{},"79":{}}}],["kappa(x",{"_index":14991,"t":{},"b":{"75":{}}}],["kappa*(dx(u)*dx(v",{"_index":4496,"t":{},"b":{"11":{}}}],["kappa*(grad(u)'*grad(v",{"_index":4505,"t":{},"b":{"11":{}}}],["kappa[\\bf",{"_index":10211,"t":{},"b":{"37":{}}}],["kappa[\\bf_{n",{"_index":10261,"t":{},"b":{"37":{}}}],["kappa\\frac{\\parti",{"_index":14529,"t":{},"b":{"68":{},"79":{}}}],["kappa\\geq",{"_index":4487,"t":{},"b":{"11":{}}}],["kappa\\mu_t",{"_index":14002,"t":{},"b":{"61":{}}}],["kappa\\mu_t^{m+1",{"_index":14037,"t":{},"b":{"61":{}}}],["kappa\\n",{"_index":4784,"t":{},"b":{"11":{}}}],["kappa\\nabla",{"_index":14532,"t":{},"b":{"68":{},"79":{}}}],["kappa_0",{"_index":4468,"t":{},"b":{"11":{}}}],["kappa_0>0",{"_index":4488,"t":{},"b":{"11":{}}}],["kappa_2",{"_index":14547,"t":{},"b":{"69":{}}}],["kappa_t",{"_index":14001,"t":{},"b":{"61":{}}}],["kappa_t^{m+1",{"_index":14036,"t":{},"b":{"61":{}}}],["kappa{\\parti",{"_index":15298,"t":{},"b":{"79":{}}}],["karl",{"_index":347,"t":{},"b":{"2":{}}}],["karla",{"_index":9788,"t":{},"b":{"29":{}}}],["karush",{"_index":942,"t":{},"b":{"3":{}}}],["karypi",{"_index":153,"t":{},"b":{"2":{}}}],["karypis1995",{"_index":152,"t":{},"b":{"2":{},"15":{}}}],["kazufumi",{"_index":345,"t":{},"b":{"2":{}}}],["kc2",{"_index":14136,"t":{},"b":{"62":{}}}],["kdf",{"_index":5079,"t":{},"b":{"11":{}}}],["keep",{"_index":1134,"t":{},"b":{"3":{},"7":{},"11":{},"13":{},"15":{},"54":{},"70":{}}}],["keep/drop",{"_index":8541,"t":{},"b":{"19":{}}}],["keepbackvertic",{"_index":5583,"t":{},"b":{"13":{},"54":{}}}],["kept",{"_index":6831,"t":{},"b":{"13":{},"15":{},"69":{}}}],["kernel",{"_index":4489,"t":{},"b":{"11":{},"33":{}}}],["key",{"_index":2661,"t":{},"b":{"4":{},"15":{},"19":{},"35":{},"39":{},"70":{},"75":{}}}],["keyboard",{"_index":8514,"t":{},"b":{"19":{},"52":{}}}],["keyr",{"_index":10105,"t":{},"b":{"35":{}}}],["keyword",{"_index":1092,"t":{},"b":{"3":{},"4":{},"11":{},"12":{},"13":{},"14":{},"15":{},"36":{},"39":{},"45":{},"49":{},"60":{},"70":{},"72":{},"76":{},"77":{},"81":{}}}],["keywork",{"_index":10519,"t":{},"b":{"39":{}}}],["kg/cm^2",{"_index":10356,"t":{},"b":{"37":{},"46":{}}}],["kind",{"_index":352,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"18":{},"54":{},"60":{}}}],["kineticturbul",{"_index":14118,"t":{},"b":{"61":{}}}],["kineticturbulence(k",{"_index":14070,"t":{},"b":{"61":{}}}],["kirchhoff",{"_index":10188,"t":{},"b":{"37":{}}}],["kirchoff",{"_index":10192,"t":{},"b":{"37":{}}}],["kiter",{"_index":7595,"t":{},"b":{"15":{},"26":{}}}],["kj/n",{"_index":2864,"t":{},"b":{"4":{}}}],["kj/n+lj'/m",{"_index":2869,"t":{},"b":{"4":{}}}],["kk",{"_index":2553,"t":{},"b":{"4":{}}}],["kkk",{"_index":1698,"t":{},"b":{"3":{},"20":{}}}],["kkk<nadapt",{"_index":1873,"t":{},"b":{"3":{},"20":{}}}],["kkt",{"_index":1007,"t":{},"b":{"3":{}}}],["km^2",{"_index":7227,"t":{},"b":{"13":{}}}],["kn",{"_index":13908,"t":{},"b":{"60":{}}}],["kn_<doubl",{"_index":2568,"t":{},"b":{"4":{}}}],["kn_<long",{"_index":8179,"t":{},"b":{"15":{}}}],["know",{"_index":3138,"t":{},"b":{"5":{},"15":{},"48":{},"69":{},"70":{},"72":{},"81":{}}}],["knowledg",{"_index":3551,"t":{},"b":{"8":{},"11":{}}}],["known",{"_index":1042,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"45":{},"48":{},"60":{},"64":{},"72":{}}}],["kohji",{"_index":9772,"t":{},"b":{"29":{},"34":{}}}],["kokusai",{"_index":9774,"t":{},"b":{"29":{}}}],["kp",{"_index":14058,"t":{},"b":{"61":{}}}],["kp)*q",{"_index":14073,"t":{},"b":{"61":{}}}],["kpi",{"_index":2543,"t":{},"b":{"4":{}}}],["kroneck",{"_index":7264,"t":{},"b":{"14":{},"42":{},"64":{}}}],["kronecker’",{"_index":10676,"t":{},"b":{"40":{}}}],["krylov",{"_index":3316,"t":{},"b":{"5":{},"7":{},"8":{},"10":{},"15":{},"16":{},"60":{}}}],["krylov’",{"_index":7940,"t":{},"b":{"15":{}}}],["ksphpddm",{"_index":8308,"t":{},"b":{"16":{}}}],["kspilt",{"_index":9407,"t":{},"b":{"26":{}}}],["ksplit",{"_index":7691,"t":{},"b":{"15":{},"26":{}}}],["ksplit*nloc",{"_index":9419,"t":{},"b":{"26":{}}}],["kuhn",{"_index":943,"t":{},"b":{"3":{}}}],["kumar",{"_index":154,"t":{},"b":{"2":{}}}],["kunisch",{"_index":346,"t":{},"b":{"2":{}}}],["kutta",{"_index":11955,"t":{},"b":{"48":{}}}],["kx",{"_index":8708,"t":{},"b":{"20":{}}}],["k|\\nabla",{"_index":14010,"t":{},"b":{"61":{}}}],["l",{"_index":59,"t":{},"b":{"2":{},"3":{},"4":{},"10":{},"11":{},"13":{},"15":{},"19":{},"22":{},"25":{},"27":{},"35":{},"38":{},"40":{},"41":{},"42":{},"43":{},"48":{},"49":{},"54":{},"55":{},"61":{},"63":{},"66":{},"72":{},"73":{},"79":{}}}],["l(0",{"_index":9293,"t":{},"b":{"22":{}}}],["l(0,0",{"_index":6035,"t":{},"b":{"13":{}}}],["l(0,1",{"_index":6033,"t":{},"b":{"13":{}}}],["l(0,vh",{"_index":15128,"t":{},"b":{"76":{}}}],["l(1",{"_index":9291,"t":{},"b":{"22":{}}}],["l(1,0",{"_index":6032,"t":{},"b":{"13":{}}}],["l(1,1",{"_index":6034,"t":{},"b":{"13":{}}}],["l(2,0",{"_index":6031,"t":{},"b":{"13":{}}}],["l(2,1",{"_index":6030,"t":{},"b":{"13":{}}}],["l(f,v",{"_index":4447,"t":{},"b":{"11":{}}}],["l(unused,v",{"_index":15127,"t":{},"b":{"76":{}}}],["l)(k*w",{"_index":4555,"t":{},"b":{"11":{}}}],["l))^2",{"_index":14052,"t":{},"b":{"61":{}}}],["l)^2+(hslope*(l",{"_index":14051,"t":{},"b":{"61":{}}}],["l)bfg",{"_index":1143,"t":{},"b":{"3":{}}}],["l){x",{"_index":6499,"t":{},"b":{"13":{},"25":{},"43":{},"61":{}}}],["l*(t",{"_index":14198,"t":{},"b":{"63":{}}}],["l*x",{"_index":11198,"t":{},"b":{"41":{},"54":{}}}],["l+g",{"_index":14196,"t":{},"b":{"63":{}}}],["l,int",{"_index":6411,"t":{},"b":{"13":{}}}],["l,l){x",{"_index":6496,"t":{},"b":{"13":{}}}],["l,real",{"_index":6462,"t":{},"b":{"13":{}}}],["l/2",{"_index":14842,"t":{},"b":{"73":{}}}],["l0",{"_index":2609,"t":{},"b":{"4":{}}}],["l01",{"_index":7162,"t":{},"b":{"13":{}}}],["l1",{"_index":2612,"t":{},"b":{"4":{},"48":{}}}],["l1(t",{"_index":5774,"t":{},"b":{"13":{},"40":{}}}],["l11",{"_index":7163,"t":{},"b":{"13":{}}}],["l111",{"_index":9413,"t":{},"b":{"26":{}}}],["l1111",{"_index":7161,"t":{},"b":{"13":{}}}],["l2",{"_index":2613,"t":{},"b":{"4":{},"15":{},"26":{},"42":{},"48":{},"74":{}}}],["l2(26",{"_index":5798,"t":{},"b":{"13":{}}}],["l2(n/2",{"_index":5814,"t":{},"b":{"13":{},"40":{}}}],["l2(t",{"_index":5777,"t":{},"b":{"13":{},"40":{}}}],["l2error",{"_index":14782,"t":{},"b":{"72":{}}}],["l2error(2",{"_index":14774,"t":{},"b":{"72":{}}}],["l2error[n",{"_index":14779,"t":{},"b":{"72":{}}}],["l3",{"_index":12117,"t":{},"b":{"48":{}}}],["l3(8",{"_index":5799,"t":{},"b":{"13":{}}}],["l3(t",{"_index":5781,"t":{},"b":{"13":{}}}],["l4",{"_index":12119,"t":{},"b":{"48":{}}}],["l4(20",{"_index":5800,"t":{},"b":{"13":{}}}],["l4(t",{"_index":5783,"t":{},"b":{"13":{}}}],["l5(8",{"_index":5801,"t":{},"b":{"13":{}}}],["l5(t",{"_index":5785,"t":{},"b":{"13":{}}}],["l6",{"_index":5921,"t":{},"b":{"13":{},"24":{}}}],["l6(30",{"_index":5802,"t":{},"b":{"13":{}}}],["l6(t",{"_index":5790,"t":{},"b":{"13":{}}}],["l7(8",{"_index":5803,"t":{},"b":{"13":{}}}],["l7(t",{"_index":5791,"t":{},"b":{"13":{}}}],["l8(30",{"_index":5804,"t":{},"b":{"13":{}}}],["l8(t",{"_index":5794,"t":{},"b":{"13":{}}}],["l;label",{"_index":6497,"t":{},"b":{"13":{}}}],["l\\:u",{"_index":7746,"t":{},"b":{"15":{}}}],["l^2",{"_index":4290,"t":{},"b":{"11":{},"15":{},"37":{},"41":{},"46":{},"48":{},"50":{},"72":{},"74":{}}}],["l^2(0,t;h^1(\\omega",{"_index":4775,"t":{},"b":{"11":{},"68":{},"79":{}}}],["l^2(0,t;v",{"_index":10959,"t":{},"b":{"41":{}}}],["l^2(\\gamma_n)^2",{"_index":10760,"t":{},"b":{"40":{}}}],["l^2(\\omega",{"_index":3812,"t":{},"b":{"11":{},"14":{},"15":{},"45":{},"48":{},"50":{}}}],["l^2(\\omega))^d",{"_index":14734,"t":{},"b":{"72":{}}}],["l^2(\\omega)\\left",{"_index":7347,"t":{},"b":{"14":{},"45":{}}}],["l^2(\\omega)\\quad\\foral",{"_index":7362,"t":{},"b":{"14":{}}}],["l^2(\\omega)\\tim",{"_index":7376,"t":{},"b":{"14":{}}}],["l^2(\\omega)^2",{"_index":7375,"t":{},"b":{"14":{},"45":{}}}],["l^2(\\omega)^2,\\nabla.\\mathbf{v}\\in",{"_index":12226,"t":{},"b":{"48":{}}}],["l^2(\\omega)^2\\tim",{"_index":10759,"t":{},"b":{"40":{}}}],["l^2(\\omega)~:~\\nabla",{"_index":14733,"t":{},"b":{"72":{}}}],["l^intfi",{"_index":9335,"t":{},"b":{"25":{}}}],["l^t",{"_index":3728,"t":{},"b":{"10":{},"15":{}}}],["l^{2}(\\omega",{"_index":1401,"t":{},"b":{"3":{},"11":{}}}],["l^{2}(\\omega)\\right.\\right",{"_index":3931,"t":{},"b":{"11":{}}}],["l^{2}(\\omega)^d\\left|\\textrm{curl",{"_index":3955,"t":{},"b":{"11":{}}}],["l^{2}(\\omega)^d\\left|\\textrm{div",{"_index":3929,"t":{},"b":{"11":{}}}],["l^{2}(\\omega)^d\\right.\\right",{"_index":3956,"t":{},"b":{"11":{}}}],["l^{2}(\\partial\\omega",{"_index":1404,"t":{},"b":{"3":{}}}],["l^{\\infty}(0,t;h)\\cap",{"_index":10969,"t":{},"b":{"41":{}}}],["l_1",{"_index":6800,"t":{},"b":{"13":{}}}],["l_1\\cap",{"_index":10792,"t":{},"b":{"40":{}}}],["l_i",{"_index":6788,"t":{},"b":{"13":{}}}],["l_m\\cap",{"_index":10793,"t":{},"b":{"40":{}}}],["l_{10",{"_index":6804,"t":{},"b":{"13":{}}}],["la",{"_index":136,"t":{},"b":{"2":{},"39":{}}}],["la1",{"_index":3778,"t":{},"b":{"11":{}}}],["la_i",{"_index":3797,"t":{},"b":{"11":{}}}],["lab",{"_index":5151,"t":{},"b":{"13":{},"15":{},"18":{},"24":{},"48":{}}}],["label",{"_index":2992,"t":{},"b":{"5":{},"9":{},"11":{},"13":{},"15":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"40":{},"42":{},"45":{},"46":{},"48":{},"51":{},"53":{},"54":{},"55":{},"60":{},"63":{},"66":{},"69":{},"70":{},"71":{},"73":{},"74":{},"76":{},"81":{}}}],["label:eq:edge03d",{"_index":3944,"t":{},"b":{"11":{}}}],["labeldown",{"_index":6008,"t":{},"b":{"13":{},"24":{}}}],["labelmid",{"_index":4067,"t":{},"b":{"11":{},"13":{},"24":{}}}],["labelup",{"_index":6006,"t":{},"b":{"13":{},"24":{}}}],["label{eq",{"_index":14535,"t":{},"b":{"68":{}}}],["labesl",{"_index":6437,"t":{},"b":{"13":{}}}],["laboratoir",{"_index":9749,"t":{},"b":{"29":{},"34":{}}}],["laboratori",{"_index":10828,"t":{},"b":{"40":{}}}],["labs[i",{"_index":5152,"t":{},"b":{"13":{}}}],["lagragian",{"_index":4143,"t":{},"b":{"11":{}}}],["lagrang",{"_index":962,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"16":{},"22":{},"36":{},"54":{},"56":{}}}],["lagrangian",{"_index":1128,"t":{},"b":{"3":{},"11":{},"12":{},"13":{},"16":{},"20":{},"33":{}}}],["lak",{"_index":3781,"t":{},"b":{"11":{}}}],["lake",{"_index":6286,"t":{},"b":{"13":{}}}],["lam",{"_index":10673,"t":{},"b":{"40":{},"42":{},"64":{}}}],["lambda",{"_index":1137,"t":{},"b":{"3":{},"13":{},"16":{},"20":{},"38":{},"39":{},"40":{},"42":{},"46":{},"50":{},"51":{},"54":{},"62":{},"64":{}}}],["lambda(\\hat{x",{"_index":4186,"t":{},"b":{"11":{}}}],["lambda*(dx(u",{"_index":10857,"t":{},"b":{"40":{}}}],["lambda*div(u1",{"_index":10748,"t":{},"b":{"40":{}}}],["lambda*div(u1,u2,u3)*div(v1,v2,v3",{"_index":6184,"t":{},"b":{"13":{}}}],["lambda*div(w,s)*div(uu,vv",{"_index":10732,"t":{},"b":{"40":{},"42":{}}}],["lambda*v",{"_index":10459,"t":{},"b":{"38":{}}}],["lambda*v1",{"_index":10479,"t":{},"b":{"38":{}}}],["lambda*v2",{"_index":10483,"t":{},"b":{"38":{}}}],["lambda[0",{"_index":10552,"t":{},"b":{"39":{}}}],["lambda[0]*hessianvolume(x",{"_index":1831,"t":{},"b":{"3":{},"20":{}}}],["lambda[1",{"_index":10555,"t":{},"b":{"39":{}}}],["lambda[10",{"_index":10581,"t":{},"b":{"39":{}}}],["lambda[11",{"_index":10583,"t":{},"b":{"39":{}}}],["lambda[12",{"_index":10586,"t":{},"b":{"39":{}}}],["lambda[13",{"_index":10589,"t":{},"b":{"39":{}}}],["lambda[14",{"_index":10592,"t":{},"b":{"39":{}}}],["lambda[15",{"_index":10594,"t":{},"b":{"39":{}}}],["lambda[16",{"_index":10597,"t":{},"b":{"39":{}}}],["lambda[17",{"_index":10600,"t":{},"b":{"39":{}}}],["lambda[18",{"_index":10603,"t":{},"b":{"39":{}}}],["lambda[19",{"_index":10606,"t":{},"b":{"39":{}}}],["lambda[2",{"_index":10558,"t":{},"b":{"39":{}}}],["lambda[3",{"_index":10561,"t":{},"b":{"39":{}}}],["lambda[4",{"_index":10563,"t":{},"b":{"39":{}}}],["lambda[5",{"_index":10566,"t":{},"b":{"39":{}}}],["lambda[6",{"_index":10569,"t":{},"b":{"39":{}}}],["lambda[7",{"_index":10572,"t":{},"b":{"39":{}}}],["lambda[8",{"_index":10575,"t":{},"b":{"39":{}}}],["lambda[9",{"_index":10578,"t":{},"b":{"39":{}}}],["lambda\\delta_{ij}\\textrm{div}\\mathbf{u}+2\\mu",{"_index":10675,"t":{},"b":{"40":{}}}],["lambda\\geq",{"_index":12356,"t":{},"b":{"50":{}}}],["lambda\\in\\mathbb{r}^{m",{"_index":1131,"t":{},"b":{"3":{}}}],["lambda\\varphi",{"_index":14166,"t":{},"b":{"62":{}}}],["lambda^2",{"_index":8281,"t":{},"b":{"16":{}}}],["lambda^k_1",{"_index":4125,"t":{},"b":{"11":{}}}],["lambda^k_i",{"_index":2921,"t":{},"b":{"4":{}}}],["lambda^k_i\\lambda^k_{i+1",{"_index":2927,"t":{},"b":{"4":{}}}],["lambda^k_{1}(x,i",{"_index":4126,"t":{},"b":{"11":{}}}],["lambda^k_{1}(x,y)(2\\lambda^k_1(x,i",{"_index":4136,"t":{},"b":{"11":{}}}],["lambda^{k}_{0",{"_index":3831,"t":{},"b":{"11":{}}}],["lambda^{k}_{1",{"_index":3832,"t":{},"b":{"11":{}}}],["lambda^{k}_{2",{"_index":3833,"t":{},"b":{"11":{}}}],["lambda^{k}_{3",{"_index":3835,"t":{},"b":{"11":{}}}],["lambda^{k}_{i",{"_index":3836,"t":{},"b":{"11":{}}}],["lambda_0",{"_index":12360,"t":{},"b":{"50":{}}}],["lambda_0(x,i",{"_index":4188,"t":{},"b":{"11":{}}}],["lambda_1(x,i",{"_index":4189,"t":{},"b":{"11":{}}}],["lambda_2(p",{"_index":4252,"t":{},"b":{"11":{}}}],["lambda_2(x,i",{"_index":4190,"t":{},"b":{"11":{}}}],["lambda_i",{"_index":4187,"t":{},"b":{"11":{}}}],["lambda_i(p",{"_index":4229,"t":{},"b":{"11":{}}}],["lambda_i(x,y),~i",{"_index":15098,"t":{},"b":{"76":{}}}],["lambda_i)_{i",{"_index":4152,"t":{},"b":{"11":{}}}],["lambda_j",{"_index":4402,"t":{},"b":{"11":{}}}],["lambda_j\\}_{j",{"_index":4396,"t":{},"b":{"11":{}}}],["lambda_k",{"_index":15102,"t":{},"b":{"76":{}}}],["lambda_{i,k",{"_index":3263,"t":{},"b":{"5":{},"8":{},"10":{}}}],["lambda_{k",{"_index":12363,"t":{},"b":{"50":{}}}],["lambda_{k+1",{"_index":12368,"t":{},"b":{"50":{}}}],["lambda_{k+1},v",{"_index":12371,"t":{},"b":{"50":{}}}],["lambda_{k_1}(x,i",{"_index":4295,"t":{},"b":{"11":{}}}],["lambda_{k_2}(x,i",{"_index":4296,"t":{},"b":{"11":{}}}],["lambda_{k_3}(x,i",{"_index":4297,"t":{},"b":{"11":{}}}],["lambda_{n,m",{"_index":10531,"t":{},"b":{"39":{}}}],["lambda}(x)}{\\sin(\\lambda\\pi",{"_index":13739,"t":{},"b":{"54":{}}}],["lamda",{"_index":7097,"t":{},"b":{"13":{}}}],["lame",{"_index":10747,"t":{},"b":{"40":{}}}],["lame([u",{"_index":14273,"t":{},"b":{"64":{}}}],["lame([u1,u2,u3],[v1,v2,v3",{"_index":6183,"t":{},"b":{"13":{}}}],["lamedeform.ep",{"_index":14284,"t":{},"b":{"64":{}}}],["lamevect.ep",{"_index":14279,"t":{},"b":{"64":{}}}],["lamé’",{"_index":14250,"t":{},"b":{"64":{}}}],["langl",{"_index":1589,"t":{},"b":{"3":{},"41":{}}}],["langrang",{"_index":4256,"t":{},"b":{"11":{}}}],["languag",{"_index":89,"t":{"56":{}},"b":{"2":{},"6":{},"7":{},"10":{},"12":{},"15":{},"18":{},"32":{},"33":{},"34":{},"35":{},"45":{},"56":{},"60":{},"70":{},"76":{}}}],["lap",{"_index":3010,"t":{},"b":{"5":{},"13":{},"42":{},"49":{}}}],["lap(0",{"_index":11273,"t":{},"b":{"42":{}}}],["lap(xh",{"_index":11274,"t":{},"b":{"42":{}}}],["lap2domega",{"_index":6986,"t":{},"b":{"13":{}}}],["lap2domega1",{"_index":6988,"t":{},"b":{"13":{}}}],["lap3d",{"_index":9331,"t":{},"b":{"25":{}}}],["lapacian",{"_index":8786,"t":{},"b":{"21":{}}}],["lapack",{"_index":9064,"t":{},"b":{"21":{},"35":{},"53":{}}}],["lapack.cpp",{"_index":9080,"t":{},"b":{"21":{}}}],["lapdirectsolve(rhsi",{"_index":3017,"t":{},"b":{"5":{}}}],["lapf",{"_index":3007,"t":{},"b":{"5":{}}}],["lapfevhi",{"_index":3014,"t":{},"b":{"5":{}}}],["laplac",{"_index":1971,"t":{},"b":{"3":{},"4":{},"7":{},"16":{},"21":{},"38":{},"39":{},"48":{},"49":{},"62":{},"71":{},"72":{},"79":{}}}],["laplace(phi",{"_index":14748,"t":{},"b":{"72":{}}}],["laplace(u,v,solv",{"_index":14651,"t":{},"b":{"71":{}}}],["laplacemixt",{"_index":12234,"t":{},"b":{"48":{}}}],["laplacert.edp",{"_index":12231,"t":{},"b":{"48":{}}}],["laplace’",{"_index":14341,"t":{},"b":{"65":{},"72":{}}}],["laplacian",{"_index":7315,"t":{},"b":{"14":{},"15":{},"21":{},"55":{},"60":{}}}],["laplacian(u",{"_index":13902,"t":{},"b":{"60":{}}}],["lapmesh",{"_index":3003,"t":{},"b":{"5":{}}}],["lapwritesummari",{"_index":3018,"t":{},"b":{"5":{}}}],["larg",{"_index":27,"t":{"61":{}},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{},"16":{},"40":{},"48":{},"50":{},"51":{},"61":{},"63":{},"66":{},"73":{},"80":{}}}],["largang",{"_index":12501,"t":{},"b":{"51":{}}}],["largediag",{"_index":7881,"t":{},"b":{"15":{}}}],["larger",{"_index":1334,"t":{},"b":{"3":{},"5":{},"13":{},"51":{},"69":{}}}],["largest",{"_index":3265,"t":{},"b":{"5":{},"39":{},"54":{}}}],["last",{"_index":1289,"t":{},"b":{"3":{},"5":{},"11":{},"12":{},"13":{},"15":{},"33":{},"35":{},"38":{},"40":{},"41":{}}}],["last_operatortyp",{"_index":2601,"t":{},"b":{"4":{}}}],["later",{"_index":3038,"t":{},"b":{"5":{},"12":{},"19":{},"51":{},"65":{},"69":{},"76":{}}}],["latest",{"_index":9826,"t":{},"b":{"32":{},"35":{}}}],["latest.ex",{"_index":10063,"t":{},"b":{"35":{}}}],["latex",{"_index":14591,"t":{},"b":{"70":{}}}],["latter",{"_index":3586,"t":{},"b":{"8":{}}}],["lauch",{"_index":8461,"t":{},"b":{"18":{}}}],["launch",{"_index":2846,"t":{},"b":{"4":{},"13":{},"19":{},"26":{},"35":{}}}],["launcher",{"_index":9942,"t":{},"b":{"35":{}}}],["launchff++.ex",{"_index":9943,"t":{},"b":{"35":{}}}],["law",{"_index":10664,"t":{},"b":{"40":{},"42":{},"64":{},"79":{}}}],["lawrenc",{"_index":8099,"t":{},"b":{"15":{}}}],["lay",{"_index":4207,"t":{},"b":{"11":{}}}],["layer",{"_index":3679,"t":{},"b":{"9":{},"13":{},"24":{}}}],["lazi",{"_index":15360,"t":{},"b":{"81":{}}}],["lb",{"_index":1148,"t":{},"b":{"3":{},"20":{}}}],["lb/ub",{"_index":1923,"t":{},"b":{"3":{}}}],["lb1",{"_index":1473,"t":{},"b":{"3":{},"11":{}}}],["lb2",{"_index":1474,"t":{},"b":{"3":{}}}],["lb_i",{"_index":3799,"t":{},"b":{"11":{}}}],["lbb",{"_index":14302,"t":{},"b":{"65":{},"78":{}}}],["lbfg",{"_index":2128,"t":{},"b":{"3":{}}}],["lbk",{"_index":3783,"t":{},"b":{"11":{}}}],["ld_library_path",{"_index":2757,"t":{},"b":{"4":{}}}],["ldl^t",{"_index":3185,"t":{},"b":{"5":{}}}],["ldot",{"_index":5963,"t":{},"b":{"13":{},"37":{}}}],["le",{"_index":3533,"t":{},"b":{"8":{},"10":{},"11":{},"29":{},"45":{},"48":{},"50":{}}}],["lead",{"_index":800,"t":{},"b":{"3":{},"11":{},"15":{},"33":{},"40":{},"51":{},"60":{}}}],["leader",{"_index":8198,"t":{},"b":{"15":{}}}],["learn",{"_index":3483,"t":{"70":{}},"b":{"7":{},"31":{},"66":{},"69":{},"70":{},"72":{},"76":{},"77":{},"79":{}}}],["led",{"_index":9859,"t":{},"b":{"33":{}}}],["left",{"_index":1531,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"37":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"50":{},"51":{},"62":{},"64":{},"68":{},"72":{},"76":{},"81":{}}}],["left(0,0\\right",{"_index":4701,"t":{},"b":{"11":{}}}],["left(0,1\\right",{"_index":4703,"t":{},"b":{"11":{}}}],["left(0,\\frac{1}{2}\\right",{"_index":4684,"t":{},"b":{"11":{}}}],["left(0,\\frac{1}{4}\\right",{"_index":4707,"t":{},"b":{"11":{}}}],["left(0,\\frac{3}{4}\\right",{"_index":4708,"t":{},"b":{"11":{}}}],["left(1,0\\right",{"_index":4702,"t":{},"b":{"11":{}}}],["left(2\\rho^{3}\\sin^{2}(\\phi",{"_index":1603,"t":{},"b":{"3":{}}}],["left(\\begin{array}{c",{"_index":1620,"t":{},"b":{"3":{}}}],["left(\\begin{array}{ccc",{"_index":7029,"t":{},"b":{"13":{}}}],["left(\\begin{array}{cc}a_{11,i",{"_index":2299,"t":{},"b":{"4":{}}}],["left(\\begin{matrix}\\mu/(x_{1",{"_index":981,"t":{},"b":{"3":{}}}],["left(\\begin{matrix}\\mu/(x_{u,1",{"_index":976,"t":{},"b":{"3":{}}}],["left(\\begin{matrix}{\\parti",{"_index":14372,"t":{},"b":{"66":{}}}],["left(\\delta_{ia}\\delta_{jb}\\right)_{ij",{"_index":13960,"t":{},"b":{"60":{}}}],["left(\\frac{1}{2},0\\right",{"_index":4683,"t":{},"b":{"11":{}}}],["left(\\frac{1}{2},\\frac{1}{2}\\right",{"_index":4682,"t":{},"b":{"11":{}}}],["left(\\frac{1}{2},\\frac{1}{4}\\right",{"_index":4713,"t":{},"b":{"11":{}}}],["left(\\frac{1}{3},\\frac{1}{3}\\right",{"_index":4681,"t":{},"b":{"11":{}}}],["left(\\frac{1}{4},0\\right",{"_index":4709,"t":{},"b":{"11":{}}}],["left(\\frac{1}{4},\\frac{1}{2}\\right",{"_index":4712,"t":{},"b":{"11":{}}}],["left(\\frac{1}{4},\\frac{1}{4},\\frac{1}{4}\\right",{"_index":4721,"t":{},"b":{"11":{}}}],["left(\\frac{1}{4},\\frac{1}{4}\\right",{"_index":4711,"t":{},"b":{"11":{}}}],["left(\\frac{1}{4},\\frac{3}{4}\\right",{"_index":4705,"t":{},"b":{"11":{}}}],["left(\\frac{3}{4},0\\right",{"_index":4710,"t":{},"b":{"11":{}}}],["left(\\frac{3}{4},\\frac{1}{4}\\right",{"_index":4706,"t":{},"b":{"11":{}}}],["left(\\frac{6",{"_index":4686,"t":{},"b":{"11":{}}}],["left(\\frac{6+\\sqrt{15}}{21},\\frac{6+\\sqrt{15}}{21}\\right",{"_index":4691,"t":{},"b":{"11":{}}}],["left(\\frac{6+\\sqrt{15}}{21},\\frac{9",{"_index":4692,"t":{},"b":{"11":{}}}],["left(\\frac{9",{"_index":4694,"t":{},"b":{"11":{}}}],["left(\\frac{9+2\\sqrt{15}}{21},\\frac{6",{"_index":4690,"t":{},"b":{"11":{}}}],["left(\\frac{\\parti",{"_index":496,"t":{},"b":{"3":{}}}],["left(\\int_{\\omega}\\left",{"_index":10950,"t":{},"b":{"41":{}}}],["left(\\int_{\\omega}|\\nabla",{"_index":11896,"t":{},"b":{"48":{}}}],["left(\\int_{\\omega}|u_h",{"_index":11891,"t":{},"b":{"48":{}}}],["left(\\int_{\\omega}|w(x,y)|^2\\text{d",{"_index":7342,"t":{},"b":{"14":{}}}],["left(\\mu/(x_{u,1",{"_index":986,"t":{},"b":{"3":{}}}],["left(\\p",{"_index":10892,"t":{},"b":{"41":{}}}],["left(\\sum_{k",{"_index":4277,"t":{},"b":{"11":{}}}],["left(n",{"_index":6837,"t":{},"b":{"13":{}}}],["left(t",{"_index":5884,"t":{},"b":{"13":{},"24":{}}}],["left(u^{m",{"_index":11109,"t":{},"b":{"41":{}}}],["left(x",{"_index":11143,"t":{},"b":{"41":{}}}],["left({1\\ov",{"_index":5567,"t":{},"b":{"13":{}}}],["left({1\\over\\mathtt{err",{"_index":5563,"t":{},"b":{"13":{}}}],["left({\\mathbf",{"_index":3542,"t":{},"b":{"8":{}}}],["left(|\\mathbf{u}(\\mathbf{x}+\\tau\\delta\\mathbf{x",{"_index":10634,"t":{},"b":{"40":{}}}],["left,right",{"_index":6042,"t":{},"b":{"13":{}}}],["left[2\\mu\\epsilon_{ij}(\\mathbf{v})\\epsilon_{ij}(\\mathbf{w",{"_index":11244,"t":{},"b":{"42":{}}}],["left\\langl",{"_index":1167,"t":{},"b":{"3":{}}}],["left\\lbrac",{"_index":927,"t":{},"b":{"3":{}}}],["left\\{(\\grad",{"_index":10221,"t":{},"b":{"37":{}}}],["left\\{\\begin{array}{c",{"_index":3884,"t":{},"b":{"11":{}}}],["left\\{\\begin{array}{cc",{"_index":12369,"t":{},"b":{"50":{}}}],["left\\{\\begin{array}{cl",{"_index":4807,"t":{},"b":{"11":{},"68":{}}}],["left\\{\\frac{\\mathbf{b}+\\mathbf{c}}{2",{"_index":2499,"t":{},"b":{"4":{},"11":{}}}],["left\\{\\mathbf{w}\\in",{"_index":3928,"t":{},"b":{"11":{}}}],["left\\{h_{\\rho}(\\rho,z),ih_{\\phi}(\\rho,z),h_z(\\rho,z)\\right\\}\\tim",{"_index":12429,"t":{},"b":{"51":{}}}],["left\\{q\\in",{"_index":11381,"t":{},"b":{"45":{}}}],["left\\{w(x,y)\\left",{"_index":15104,"t":{},"b":{"76":{}}}],["left\\{w\\in",{"_index":7371,"t":{},"b":{"14":{}}}],["left\\{w\\left",{"_index":3771,"t":{},"b":{"11":{}}}],["lefta(t",{"_index":14634,"t":{},"b":{"71":{}}}],["leftarrow",{"_index":3558,"t":{},"b":{"8":{},"10":{}}}],["leftk(t",{"_index":14639,"t":{},"b":{"71":{}}}],["left|\\int_{d}f(\\mathbf{x",{"_index":4607,"t":{},"b":{"11":{}}}],["legend",{"_index":8004,"t":{},"b":{"15":{}}}],["lehoucq",{"_index":236,"t":{},"b":{"2":{}}}],["lehoucq1998",{"_index":235,"t":{},"b":{"2":{},"39":{}}}],["leman",{"_index":7223,"t":{},"b":{"13":{}}}],["leman.ep",{"_index":7261,"t":{},"b":{"13":{}}}],["lemanlake.pgm",{"_index":7224,"t":{},"b":{"13":{}}}],["len",{"_index":454,"t":{},"b":{"2":{},"18":{}}}],["lenedg",{"_index":4899,"t":{},"b":{"11":{},"48":{},"55":{}}}],["length",{"_index":2518,"t":{},"b":{"4":{},"11":{},"13":{},"14":{},"19":{},"43":{},"48":{},"53":{},"54":{},"55":{},"64":{},"66":{},"72":{}}}],["leq",{"_index":2891,"t":{},"b":{"4":{},"11":{},"50":{},"54":{}}}],["less",{"_index":1271,"t":{},"b":{"3":{},"4":{},"13":{},"20":{},"35":{},"79":{}}}],["let",{"_index":3905,"t":{},"b":{"11":{},"15":{},"48":{}}}],["let’",{"_index":1538,"t":{},"b":{"3":{},"11":{},"76":{},"81":{}}}],["level",{"_index":99,"t":{},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"20":{},"33":{},"35":{},"41":{},"48":{},"54":{},"55":{},"72":{},"75":{},"77":{},"78":{}}}],["levelset",{"_index":4532,"t":{},"b":{"11":{},"13":{}}}],["lexer",{"_index":9840,"t":{},"b":{"32":{}}}],["lexic",{"_index":12592,"t":{},"b":{"52":{}}}],["lfil",{"_index":8022,"t":{},"b":{"15":{}}}],["lfil0",{"_index":8020,"t":{},"b":{"15":{}}}],["lfloor",{"_index":838,"t":{},"b":{"3":{},"60":{}}}],["lg",{"_index":13639,"t":{},"b":{"54":{}}}],["lg_fem",{"_index":2818,"t":{},"b":{"4":{},"39":{}}}],["lg_mesh",{"_index":2819,"t":{},"b":{"4":{},"39":{}}}],["lg_mesh3",{"_index":2820,"t":{},"b":{"4":{}}}],["lgamma",{"_index":13637,"t":{},"b":{"54":{}}}],["lgamma(x",{"_index":13640,"t":{},"b":{"54":{}}}],["lgbmo",{"_index":13383,"t":{},"b":{"53":{}}}],["li",{"_index":2158,"t":{},"b":{"3":{},"8":{},"10":{},"13":{}}}],["lib",{"_index":10097,"t":{},"b":{"35":{}}}],["libc",{"_index":13892,"t":{},"b":{"60":{}}}],["libff",{"_index":8370,"t":{},"b":{"18":{}}}],["libgsl",{"_index":9962,"t":{},"b":{"35":{}}}],["libgsl2",{"_index":10048,"t":{},"b":{"35":{}}}],["libhdf5",{"_index":9964,"t":{},"b":{"35":{}}}],["liblapack",{"_index":9965,"t":{},"b":{"35":{}}}],["libmicroutil",{"_index":10086,"t":{},"b":{"35":{}}}],["libopenmpi",{"_index":9966,"t":{},"b":{"35":{}}}],["librairi",{"_index":8115,"t":{},"b":{"15":{}}}],["librari",{"_index":727,"t":{},"b":{"3":{},"4":{},"7":{},"15":{},"18":{},"19":{},"21":{},"33":{},"34":{},"35":{},"36":{},"39":{},"44":{},"53":{},"54":{},"55":{},"60":{},"71":{}}}],["librarieslogo",{"_index":12606,"t":{"53":{}},"b":{}}],["library.hpddm",{"_index":3693,"t":{},"b":{"10":{}}}],["library/freefem++/edp",{"_index":10128,"t":{},"b":{"35":{}}}],["library/freefem++/lib",{"_index":10126,"t":{},"b":{"35":{}}}],["licenc",{"_index":8040,"t":{},"b":{"15":{},"35":{}}}],["licens",{"_index":6665,"t":{},"b":{"13":{},"15":{}}}],["lid",{"_index":11248,"t":{},"b":{"42":{},"78":{}}}],["life",{"_index":2159,"t":{},"b":{"3":{},"56":{}}}],["lift",{"_index":11957,"t":{},"b":{"48":{},"66":{}}}],["light",{"_index":8538,"t":{},"b":{"19":{},"27":{},"71":{}}}],["likegnu.ep",{"_index":8556,"t":{},"b":{"19":{}}}],["lim_{\\lambda\\rightarrow",{"_index":13736,"t":{},"b":{"54":{}}}],["lim_{\\tau",{"_index":10898,"t":{},"b":{"41":{}}}],["lim_{\\tau\\to",{"_index":10638,"t":{},"b":{"40":{}}}],["lim_{h\\rightarrow",{"_index":5487,"t":{},"b":{"13":{}}}],["limit",{"_index":226,"t":{},"b":{"2":{},"13":{},"51":{},"54":{},"77":{}}}],["line",{"_index":24,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"19":{},"21":{},"26":{},"35":{},"36":{},"39":{},"40":{},"41":{},"48":{},"52":{},"55":{},"69":{},"70":{},"72":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{}}}],["linear",{"_index":183,"t":{"46":{},"47":{}},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"20":{},"34":{},"37":{},"39":{},"40":{},"43":{},"45":{},"46":{},"47":{},"48":{},"54":{},"56":{},"65":{},"68":{},"72":{},"73":{},"76":{},"79":{}}}],["linearcg",{"_index":13636,"t":{},"b":{"54":{}}}],["linearcg(boundaryproblem",{"_index":10493,"t":{},"b":{"38":{}}}],["linearcg(divup",{"_index":11283,"t":{},"b":{"42":{},"45":{}}}],["linearcg(dj",{"_index":8631,"t":{},"b":{"20":{}}}],["linearcg(dj0",{"_index":8635,"t":{},"b":{"20":{}}}],["linearcg(juzawa",{"_index":11636,"t":{},"b":{"45":{}}}],["lineargc",{"_index":8632,"t":{},"b":{"20":{}}}],["lineargmr",{"_index":8638,"t":{},"b":{"20":{},"54":{}}}],["lineargmres(dj0",{"_index":8637,"t":{},"b":{"20":{}}}],["lineborder(a",{"_index":12094,"t":{},"b":{"48":{}}}],["lineborder(a,b,1",{"_index":12110,"t":{},"b":{"48":{}}}],["lineborder(b,c,2",{"_index":12111,"t":{},"b":{"48":{}}}],["lineborder(c,d,3",{"_index":12112,"t":{},"b":{"48":{}}}],["lineborder(d,a,4",{"_index":12113,"t":{},"b":{"48":{}}}],["linesearch",{"_index":1343,"t":{},"b":{"3":{}}}],["linf",{"_index":7739,"t":{},"b":{"15":{},"26":{}}}],["link",{"_index":720,"t":{},"b":{"3":{},"4":{},"13":{},"19":{},"35":{},"53":{},"71":{},"72":{}}}],["linker",{"_index":2726,"t":{},"b":{"4":{}}}],["linux",{"_index":2734,"t":{},"b":{"4":{},"18":{},"35":{}}}],["linux/unix",{"_index":2748,"t":{},"b":{"4":{}}}],["lion",{"_index":9752,"t":{},"b":{"29":{},"34":{},"72":{}}}],["liquid",{"_index":15236,"t":{},"b":{"78":{}}}],["list",{"_index":1211,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"17":{},"18":{},"19":{},"26":{},"35":{},"53":{},"60":{},"71":{}}}],["listoftf",{"_index":2669,"t":{},"b":{"4":{}}}],["littl",{"_index":13767,"t":{},"b":{"55":{},"79":{}}}],["livermor",{"_index":8100,"t":{},"b":{"15":{}}}],["ljll",{"_index":9753,"t":{},"b":{"29":{},"36":{}}}],["ll",{"_index":2987,"t":{},"b":{"5":{},"8":{},"10":{},"13":{},"41":{}}}],["ll*i",{"_index":11199,"t":{},"b":{"41":{}}}],["llab",{"_index":6209,"t":{},"b":{"13":{}}}],["llapack",{"_index":9082,"t":{},"b":{"21":{}}}],["llvm",{"_index":10017,"t":{},"b":{"35":{}}}],["lm",{"_index":1282,"t":{},"b":{"3":{},"20":{},"39":{}}}],["lmi",{"_index":1484,"t":{},"b":{"3":{}}}],["ln",{"_index":955,"t":{},"b":{"3":{},"18":{},"37":{}}}],["ln(1+u",{"_index":8644,"t":{},"b":{"20":{}}}],["ln(1+x",{"_index":595,"t":{},"b":{"3":{},"47":{}}}],["ln(x_{i",{"_index":958,"t":{},"b":{"3":{}}}],["ln\\left(x",{"_index":13467,"t":{},"b":{"54":{}}}],["lndir",{"_index":10101,"t":{},"b":{"35":{}}}],["lo",{"_index":2105,"t":{},"b":{"3":{}}}],["lo(2*vh.ndof",{"_index":2091,"t":{},"b":{"3":{}}}],["lo[i",{"_index":2111,"t":{},"b":{"3":{}}}],["lo[i+vh.ndof",{"_index":2115,"t":{},"b":{"3":{}}}],["load",{"_index":721,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"36":{},"37":{},"39":{},"40":{},"48":{},"50":{},"53":{},"55":{},"61":{},"71":{},"72":{}}}],["load\"msh3",{"_index":6208,"t":{},"b":{"13":{}}}],["load(10",{"_index":5910,"t":{},"b":{"13":{},"24":{}}}],["load(t",{"_index":5900,"t":{},"b":{"13":{},"24":{}}}],["load.edp",{"_index":2741,"t":{},"b":{"4":{}}}],["load.link",{"_index":2664,"t":{},"b":{"4":{}}}],["load/convect_dervieux.edp",{"_index":2905,"t":{},"b":{"4":{}}}],["loadflag",{"_index":12614,"t":{},"b":{"53":{}}}],["loadfunc(init",{"_index":2809,"t":{},"b":{"4":{}}}],["loadlibari",{"_index":2760,"t":{},"b":{"4":{}}}],["loadpath",{"_index":10125,"t":{},"b":{"35":{}}}],["loadvec",{"_index":12613,"t":{},"b":{"53":{}}}],["load”element_p1bl",{"_index":3840,"t":{},"b":{"11":{}}}],["load”element_p1dc1",{"_index":3822,"t":{},"b":{"11":{}}}],["load”element_p2bulle3",{"_index":3847,"t":{},"b":{"11":{}}}],["loan",{"_index":9792,"t":{},"b":{"29":{}}}],["local",{"_index":650,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"20":{},"26":{},"48":{},"56":{},"65":{},"75":{}}}],["local_comm",{"_index":8197,"t":{},"b":{"15":{}}}],["locat",{"_index":8414,"t":{},"b":{"18":{},"48":{},"71":{}}}],["lock",{"_index":4417,"t":{},"b":{"11":{},"18":{},"39":{},"50":{}}}],["log",{"_index":8127,"t":{},"b":{"15":{},"33":{},"54":{},"72":{},"81":{}}}],["log(1+u",{"_index":8651,"t":{},"b":{"20":{}}}],["log(1.+u",{"_index":11793,"t":{},"b":{"47":{}}}],["log(\\mathtt{ratio",{"_index":5556,"t":{},"b":{"13":{}}}],["log(l2error[0]/l2error[1])/log(2",{"_index":14783,"t":{},"b":{"72":{}}}],["log(real(v)^2",{"_index":15434,"t":{},"b":{"81":{}}}],["log(x",{"_index":13641,"t":{},"b":{"54":{}}}],["log(z",{"_index":13642,"t":{},"b":{"54":{}}}],["log(|z",{"_index":13643,"t":{},"b":{"54":{}}}],["log10",{"_index":13645,"t":{},"b":{"54":{}}}],["log10(x",{"_index":13646,"t":{},"b":{"54":{}}}],["logarithm",{"_index":13638,"t":{},"b":{"54":{},"60":{}}}],["logic",{"_index":7855,"t":{},"b":{"15":{},"69":{}}}],["long",{"_index":1909,"t":{},"b":{"3":{},"11":{},"12":{},"14":{},"15":{},"18":{},"60":{},"69":{}}}],["longer",{"_index":1345,"t":{},"b":{"3":{},"33":{},"59":{},"65":{}}}],["longest",{"_index":4897,"t":{},"b":{"11":{},"13":{},"48":{}}}],["longrightarrow",{"_index":2467,"t":{},"b":{"4":{},"11":{},"38":{},"76":{}}}],["look",{"_index":1313,"t":{},"b":{"3":{},"19":{},"41":{},"48":{},"81":{}}}],["loop",{"_index":576,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"50":{},"52":{},"57":{},"58":{},"61":{},"65":{},"68":{},"72":{},"73":{},"77":{},"79":{},"80":{},"81":{}}}],["loopcount",{"_index":10426,"t":{},"b":{"37":{}}}],["loopmax",{"_index":10427,"t":{},"b":{"37":{}}}],["loopslogo",{"_index":13788,"t":{"57":{}},"b":{}}],["loos",{"_index":15257,"t":{},"b":{"79":{}}}],["loption",{"_index":7006,"t":{},"b":{"13":{}}}],["loptions(0",{"_index":7008,"t":{},"b":{"13":{}}}],["loptions(1",{"_index":7009,"t":{},"b":{"13":{}}}],["loptions(10",{"_index":7091,"t":{},"b":{"13":{}}}],["loptions(11",{"_index":7094,"t":{},"b":{"13":{}}}],["loptions(12",{"_index":7095,"t":{},"b":{"13":{}}}],["loptions(2",{"_index":7011,"t":{},"b":{"13":{}}}],["loptions(3",{"_index":7012,"t":{},"b":{"13":{}}}],["loptions(4",{"_index":7015,"t":{},"b":{"13":{}}}],["loptions(5",{"_index":7016,"t":{},"b":{"13":{}}}],["loptions(6",{"_index":7017,"t":{},"b":{"13":{}}}],["loptions(7",{"_index":7086,"t":{},"b":{"13":{}}}],["loptions(8",{"_index":7088,"t":{},"b":{"13":{}}}],["loptions(9",{"_index":7090,"t":{},"b":{"13":{}}}],["lorentz",{"_index":5109,"t":{},"b":{"12":{}}}],["lorenz",{"_index":18,"t":{},"b":{"2":{}}}],["lose",{"_index":4259,"t":{},"b":{"11":{},"72":{}}}],["loss",{"_index":15256,"t":{},"b":{"79":{}}}],["lost",{"_index":4420,"t":{},"b":{"11":{},"13":{},"69":{},"70":{}}}],["lot",{"_index":4428,"t":{},"b":{"11":{},"26":{},"35":{},"55":{}}}],["loui",{"_index":9751,"t":{},"b":{"29":{},"34":{}}}],["low",{"_index":1298,"t":{},"b":{"3":{},"42":{},"78":{}}}],["lower",{"_index":1087,"t":{},"b":{"3":{},"8":{},"13":{},"19":{},"24":{},"27":{},"35":{},"40":{},"41":{},"48":{},"54":{},"64":{},"73":{}}}],["lower(35",{"_index":5692,"t":{},"b":{"13":{},"48":{}}}],["lower(t",{"_index":5687,"t":{},"b":{"13":{},"48":{}}}],["lower/down",{"_index":6009,"t":{},"b":{"13":{}}}],["lowest",{"_index":15357,"t":{},"b":{"81":{}}}],["lp",{"_index":14872,"t":{},"b":{"73":{}}}],["lparam",{"_index":7700,"t":{},"b":{"15":{},"26":{},"60":{}}}],["lparams(sym",{"_index":9735,"t":{},"b":{"26":{}}}],["lparams[0",{"_index":7777,"t":{},"b":{"15":{}}}],["lparams[1",{"_index":7778,"t":{},"b":{"15":{}}}],["lparams[i",{"_index":7909,"t":{},"b":{"15":{}}}],["lparams[i+1",{"_index":7780,"t":{},"b":{"15":{}}}],["lrint",{"_index":13647,"t":{},"b":{"54":{}}}],["lrint(a",{"_index":13648,"t":{},"b":{"54":{}}}],["lround",{"_index":13649,"t":{},"b":{"54":{}}}],["lround(a",{"_index":13650,"t":{},"b":{"54":{}}}],["ls.ex",{"_index":13720,"t":{},"b":{"54":{}}}],["lshape.ep",{"_index":5458,"t":{},"b":{"13":{}}}],["ltime",{"_index":13651,"t":{},"b":{"54":{}}}],["lu",{"_index":3184,"t":{},"b":{"5":{},"8":{},"10":{},"11":{},"12":{},"15":{},"37":{},"41":{},"46":{},"47":{},"48":{},"55":{},"60":{},"66":{},"71":{},"72":{},"76":{}}}],["lu/choleski",{"_index":8237,"t":{},"b":{"16":{}}}],["lu1",{"_index":14870,"t":{},"b":{"73":{}}}],["lu2",{"_index":14871,"t":{},"b":{"73":{}}}],["lucquin",{"_index":6,"t":{},"b":{"2":{}}}],["lucquin1998",{"_index":279,"t":{},"b":{"2":{},"41":{}}}],["lump",{"_index":12292,"t":{},"b":{"48":{},"74":{}}}],["lvf1",{"_index":1987,"t":{},"b":{"3":{},"20":{}}}],["lvf1(0",{"_index":1993,"t":{},"b":{"3":{},"20":{}}}],["lvf2",{"_index":1989,"t":{},"b":{"3":{},"20":{}}}],["lvf2(0",{"_index":1995,"t":{},"b":{"3":{},"20":{}}}],["lxyz",{"_index":6166,"t":{},"b":{"13":{},"40":{}}}],["lz",{"_index":1283,"t":{},"b":{"3":{},"20":{}}}],["lz/2",{"_index":15252,"t":{},"b":{"79":{}}}],["lz2",{"_index":1435,"t":{},"b":{"3":{}}}],["lzi",{"_index":1481,"t":{},"b":{"3":{}}}],["lzi2",{"_index":1482,"t":{},"b":{"3":{}}}],["l},\\omega_{\\sigma",{"_index":10762,"t":{},"b":{"40":{}}}],["lément",{"_index":139,"t":{},"b":{"2":{}}}],["l’analys",{"_index":208,"t":{},"b":{"2":{}}}],["l’implément",{"_index":420,"t":{},"b":{"2":{}}}],["m",{"_index":78,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"19":{},"21":{},"24":{},"25":{},"26":{},"37":{},"41":{},"46":{},"50":{},"51":{},"54":{},"60":{},"65":{},"67":{},"68":{},"75":{},"76":{},"77":{},"79":{},"80":{}}}],["m(v_0",{"_index":7026,"t":{},"b":{"13":{}}}],["m(v_1",{"_index":7027,"t":{},"b":{"13":{}}}],["m(v_{nv",{"_index":7079,"t":{},"b":{"13":{}}}],["m(v_{nv}))^t",{"_index":7028,"t":{},"b":{"13":{}}}],["m*(vhphi*hr",{"_index":12527,"t":{},"b":{"51":{}}}],["m*diff",{"_index":12394,"t":{},"b":{"50":{}}}],["m*dt",{"_index":15337,"t":{},"b":{"80":{}}}],["m*hphi",{"_index":12548,"t":{},"b":{"51":{}}}],["m*hr",{"_index":12533,"t":{},"b":{"51":{}}}],["m*i",{"_index":8773,"t":{},"b":{"21":{}}}],["m*u",{"_index":4850,"t":{},"b":{"11":{},"50":{},"68":{}}}],["m*uu",{"_index":11776,"t":{},"b":{"46":{}}}],["m*vhphi)*(dx(hr",{"_index":12549,"t":{},"b":{"51":{}}}],["m*vhr",{"_index":12535,"t":{},"b":{"51":{}}}],["m+1",{"_index":5962,"t":{},"b":{"13":{},"61":{}}}],["m,\\quad",{"_index":10982,"t":{},"b":{"41":{}}}],["m/(ne*radius))^2+2",{"_index":12523,"t":{},"b":{"51":{}}}],["m/2",{"_index":2894,"t":{},"b":{"4":{}}}],["m0",{"_index":9021,"t":{},"b":{"21":{}}}],["m01",{"_index":9023,"t":{},"b":{"21":{}}}],["m1",{"_index":9025,"t":{},"b":{"21":{},"74":{}}}],["m11",{"_index":6308,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m11*vv",{"_index":6322,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m11,m12,m22",{"_index":5602,"t":{},"b":{"13":{}}}],["m11,m21,m22,m31,m32,m33",{"_index":7037,"t":{},"b":{"13":{}}}],["m11[],m12[],m22",{"_index":5603,"t":{},"b":{"13":{}}}],["m2",{"_index":9027,"t":{},"b":{"21":{}}}],["m21",{"_index":6312,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m21*vv",{"_index":6323,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m22",{"_index":6316,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m22*vv",{"_index":6324,"t":{},"b":{"13":{},"24":{},"25":{}}}],["m4",{"_index":10019,"t":{},"b":{"35":{}}}],["m\\tau",{"_index":10952,"t":{},"b":{"41":{}}}],["m\\time",{"_index":15074,"t":{},"b":{"75":{}}}],["m^2*vhphi*hphi)/x",{"_index":12544,"t":{},"b":{"51":{}}}],["m^2*vhr*hr",{"_index":12529,"t":{},"b":{"51":{}}}],["m^i",{"_index":4264,"t":{},"b":{"11":{}}}],["m_1",{"_index":3628,"t":{},"b":{"8":{}}}],["m_1,m_2,m_3",{"_index":4336,"t":{},"b":{"11":{}}}],["m_2",{"_index":3629,"t":{},"b":{"8":{}}}],["m_h",{"_index":4026,"t":{},"b":{"11":{}}}],["m_j",{"_index":5200,"t":{},"b":{"13":{}}}],["m_{1",{"_index":7030,"t":{},"b":{"13":{}}}],["m_{11",{"_index":5586,"t":{},"b":{"13":{}}}],["m_{12",{"_index":5587,"t":{},"b":{"13":{}}}],["m_{2",{"_index":7031,"t":{},"b":{"13":{}}}],["m_{22",{"_index":5588,"t":{},"b":{"13":{}}}],["m_{3",{"_index":7032,"t":{},"b":{"13":{}}}],["m_{a",{"_index":13959,"t":{},"b":{"60":{}}}],["m_{aniso",{"_index":7033,"t":{},"b":{"13":{}}}],["m_{asm",{"_index":3645,"t":{},"b":{"8":{}}}],["m_{h",{"_index":4013,"t":{},"b":{"11":{},"45":{}}}],["m_{i",{"_index":5961,"t":{},"b":{"13":{}}}],["m_{ij",{"_index":4791,"t":{},"b":{"11":{},"41":{},"68":{}}}],["m_{ij}),\\quad",{"_index":11003,"t":{},"b":{"41":{}}}],["m_{iso",{"_index":7025,"t":{},"b":{"13":{}}}],["m_{i}+1",{"_index":5960,"t":{},"b":{"13":{}}}],["ma",{"_index":8112,"t":{},"b":{"15":{}}}],["mac",{"_index":8528,"t":{},"b":{"19":{},"35":{}}}],["macfem",{"_index":9855,"t":{},"b":{"33":{}}}],["macfem/pcfem",{"_index":9875,"t":{},"b":{"33":{}}}],["mach",{"_index":14524,"t":{},"b":{"67":{}}}],["mach.ep",{"_index":14523,"t":{},"b":{"67":{}}}],["machin",{"_index":3469,"t":{},"b":{"7":{},"35":{}}}],["maco",{"_index":2736,"t":{},"b":{"4":{},"12":{},"32":{},"35":{}}}],["macosx",{"_index":7773,"t":{},"b":{"15":{}}}],["macosx_deployment_target",{"_index":2901,"t":{},"b":{"4":{}}}],["macro",{"_index":1376,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"21":{},"24":{},"25":{},"26":{},"37":{},"40":{},"42":{},"45":{},"46":{},"48":{},"51":{},"60":{},"61":{},"64":{},"66":{},"67":{},"70":{},"71":{},"73":{},"74":{},"77":{}}}],["macro.edp",{"_index":9242,"t":{},"b":{"21":{}}}],["macro_ddm.idp",{"_index":3343,"t":{},"b":{"5":{}}}],["macromates.com",{"_index":10153,"t":{},"b":{"35":{}}}],["made",{"_index":1545,"t":{},"b":{"3":{},"13":{},"15":{},"37":{},"41":{},"49":{},"61":{},"63":{},"76":{}}}],["magenta",{"_index":8578,"t":{},"b":{"19":{},"27":{}}}],["magnet",{"_index":12408,"t":{},"b":{"51":{},"81":{}}}],["magnitud",{"_index":817,"t":{},"b":{"3":{},"39":{}}}],["main",{"_index":1965,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"15":{},"71":{},"81":{}}}],["main(int",{"_index":8441,"t":{},"b":{"18":{}}}],["maintain",{"_index":9861,"t":{},"b":{"33":{},"35":{}}}],["major",{"_index":2872,"t":{},"b":{"4":{},"7":{},"21":{},"37":{}}}],["make",{"_index":675,"t":{},"b":{"3":{},"4":{},"7":{},"8":{},"11":{},"13":{},"15":{},"18":{},"19":{},"26":{},"31":{},"33":{},"35":{},"38":{},"39":{},"40":{},"41":{},"44":{},"46":{},"52":{},"56":{},"60":{},"62":{},"68":{},"70":{},"73":{},"76":{}}}],["make_constraint",{"_index":1321,"t":{},"b":{"3":{}}}],["make_paramet",{"_index":1319,"t":{},"b":{"3":{}}}],["makefil",{"_index":2679,"t":{},"b":{"4":{}}}],["makefile.am",{"_index":2683,"t":{},"b":{"4":{}}}],["makeilutprecond",{"_index":13371,"t":{},"b":{"53":{}}}],["makepkg",{"_index":9979,"t":{},"b":{"35":{}}}],["malloc",{"_index":8383,"t":{},"b":{"18":{}}}],["man",{"_index":10102,"t":{},"b":{"35":{}}}],["manag",{"_index":9848,"t":{},"b":{"32":{},"35":{},"60":{},"70":{}}}],["managenemt",{"_index":14928,"t":{},"b":{"74":{}}}],["mandatori",{"_index":13784,"t":{},"b":{"56":{}}}],["mani",{"_index":907,"t":{},"b":{"3":{},"8":{},"12":{},"13":{},"35":{},"56":{},"70":{}}}],["manifold",{"_index":6581,"t":{},"b":{"13":{}}}],["manipul",{"_index":5126,"t":{},"b":{"12":{},"13":{},"34":{},"49":{},"52":{},"56":{},"66":{}}}],["manner",{"_index":1190,"t":{},"b":{"3":{},"5":{},"41":{}}}],["manual",{"_index":1833,"t":{},"b":{"3":{},"12":{},"13":{},"34":{},"72":{},"76":{}}}],["manuali",{"_index":11594,"t":{},"b":{"45":{}}}],["map",{"_index":1596,"t":{},"b":{"3":{},"13":{},"14":{},"18":{},"21":{},"53":{},"60":{},"71":{}}}],["map(wij",{"_index":8808,"t":{},"b":{"21":{}}}],["map[\"1",{"_index":13953,"t":{},"b":{"60":{}}}],["map[2",{"_index":13954,"t":{},"b":{"60":{}}}],["map[\\\"1",{"_index":13956,"t":{},"b":{"60":{}}}],["mapsto",{"_index":1192,"t":{},"b":{"3":{},"11":{},"41":{},"73":{}}}],["mar",{"_index":9834,"t":{},"b":{"32":{}}}],["march",{"_index":4416,"t":{},"b":{"11":{}}}],["marea_{1}^{fc",{"_index":6704,"t":{},"b":{"13":{}}}],["marea_{2}^{fc",{"_index":6706,"t":{},"b":{"13":{}}}],["marea_{i}^{fc",{"_index":6702,"t":{},"b":{"13":{}}}],["margaret",{"_index":46,"t":{},"b":{"2":{}}}],["mari",{"_index":144,"t":{},"b":{"2":{}}}],["marini",{"_index":3979,"t":{},"b":{"11":{}}}],["mark",{"_index":370,"t":{},"b":{"2":{},"13":{}}}],["marker",{"_index":6700,"t":{},"b":{"13":{}}}],["marmousi.edp",{"_index":3447,"t":{},"b":{"6":{}}}],["marmousi2.edp",{"_index":3450,"t":{},"b":{"6":{}}}],["marrocco",{"_index":6839,"t":{},"b":{"13":{}}}],["mass",{"_index":10398,"t":{},"b":{"37":{},"48":{},"50":{},"74":{}}}],["mass*varu1",{"_index":10428,"t":{},"b":{"37":{}}}],["mass1d",{"_index":10392,"t":{},"b":{"37":{}}}],["massiv",{"_index":7744,"t":{},"b":{"15":{},"35":{}}}],["masson",{"_index":448,"t":{},"b":{"2":{}}}],["master",{"_index":1954,"t":{},"b":{"3":{},"5":{},"9":{},"12":{},"18":{}}}],["master1",{"_index":8452,"t":{},"b":{"18":{}}}],["mat",{"_index":9012,"t":{},"b":{"21":{},"74":{}}}],["mat(vh",{"_index":9019,"t":{},"b":{"21":{}}}],["mat_dervieux",{"_index":13385,"t":{},"b":{"53":{}}}],["mat_dervieux.cpp",{"_index":2906,"t":{},"b":{"4":{}}}],["mat_psi",{"_index":13387,"t":{},"b":{"53":{}}}],["match",{"_index":1277,"t":{},"b":{"3":{},"5":{},"16":{},"76":{}}}],["materi",{"_index":225,"t":{},"b":{"2":{},"37":{},"40":{},"42":{},"46":{},"49":{},"51":{},"81":{}}}],["materialslogo",{"_index":10172,"t":{"37":{}},"b":{}}],["math",{"_index":277,"t":{},"b":{"2":{},"11":{},"30":{}}}],["math/0501496",{"_index":463,"t":{},"b":{"2":{}}}],["math:1.0",{"_index":8130,"t":{},"b":{"15":{}}}],["math:`0",{"_index":4581,"t":{},"b":{"11":{}}}],["math:`0.3",{"_index":5237,"t":{},"b":{"13":{}}}],["math:`\\pm",{"_index":5251,"t":{},"b":{"13":{}}}],["math:`mathbf{u}_h",{"_index":11533,"t":{},"b":{"45":{}}}],["math:`p_h",{"_index":11539,"t":{},"b":{"45":{}}}],["math:`q^1",{"_index":4412,"t":{},"b":{"11":{}}}],["mathbb{c",{"_index":7269,"t":{},"b":{"14":{}}}],["mathbb{c}\\leftrightarrow",{"_index":7270,"t":{},"b":{"14":{}}}],["mathbb{n",{"_index":7265,"t":{},"b":{"14":{}}}],["mathbb{n}\\leftrightarrow",{"_index":7267,"t":{},"b":{"14":{}}}],["mathbb{n}^2",{"_index":7364,"t":{},"b":{"14":{}}}],["mathbb{n}_*}^2",{"_index":10534,"t":{},"b":{"39":{}}}],["mathbb{p",{"_index":12222,"t":{},"b":{"48":{}}}],["mathbb{p}_1",{"_index":13819,"t":{},"b":{"59":{}}}],["mathbb{p}_2",{"_index":13853,"t":{},"b":{"59":{}}}],["mathbb{p}_3",{"_index":13821,"t":{},"b":{"59":{}}}],["mathbb{p}_5",{"_index":13827,"t":{},"b":{"59":{}}}],["mathbb{p}_7",{"_index":13833,"t":{},"b":{"59":{}}}],["mathbb{p}_9",{"_index":13842,"t":{},"b":{"59":{}}}],["mathbb{r",{"_index":504,"t":{},"b":{"3":{},"14":{},"65":{}}}],["mathbb{r^1",{"_index":6584,"t":{},"b":{"13":{}}}],["mathbb{r^2",{"_index":6368,"t":{},"b":{"13":{}}}],["mathbb{r^3",{"_index":6366,"t":{},"b":{"13":{}}}],["mathbb{r}\\),i.",{"_index":7308,"t":{},"b":{"14":{}}}],["mathbb{r}\\leftrightarrow",{"_index":7268,"t":{},"b":{"14":{}}}],["mathbb{r}^2",{"_index":2303,"t":{},"b":{"4":{},"11":{}}}],["mathbb{r}^3",{"_index":4147,"t":{},"b":{"11":{},"13":{},"40":{}}}],["mathbb{r}^d",{"_index":7272,"t":{},"b":{"14":{},"65":{},"73":{}}}],["mathbb{r}^n",{"_index":492,"t":{},"b":{"3":{},"10":{},"73":{}}}],["mathbb{r}^{2",{"_index":1398,"t":{},"b":{"3":{}}}],["mathbb{r}^{d+1",{"_index":14347,"t":{},"b":{"65":{}}}],["mathbb{r}^{d\\tim",{"_index":14326,"t":{},"b":{"65":{}}}],["mathbb{r}^{n",{"_index":2428,"t":{},"b":{"4":{}}}],["mathbb{r}{\\tim",{"_index":10530,"t":{},"b":{"39":{}}}],["mathbb{v",{"_index":12229,"t":{},"b":{"48":{}}}],["mathbb{v};\\quad\\mathbf{v",{"_index":12227,"t":{},"b":{"48":{}}}],["mathbb{v}_0",{"_index":12218,"t":{},"b":{"48":{}}}],["mathbf",{"_index":3518,"t":{},"b":{"8":{},"10":{},"73":{}}}],["mathbf{",{"_index":11493,"t":{},"b":{"45":{},"48":{},"71":{}}}],["mathbf{0",{"_index":12215,"t":{},"b":{"48":{},"64":{}}}],["mathbf{\\alpha",{"_index":11060,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}\\tau",{"_index":11140,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}^m(\\mathbf{x}(t",{"_index":11115,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}^m(x",{"_index":11118,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}^m(x)\\cdot",{"_index":11132,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}^m(x)t),0\\l",{"_index":11139,"t":{},"b":{"41":{}}}],["mathbf{\\alpha}^m\\tau",{"_index":11144,"t":{},"b":{"41":{}}}],["mathbf{\\delta",{"_index":14818,"t":{},"b":{"73":{}}}],["mathbf{\\nabla",{"_index":11224,"t":{},"b":{"42":{}}}],["mathbf{\\omega}^{k}_{ij",{"_index":2436,"t":{},"b":{"4":{}}}],["mathbf{\\phi",{"_index":2404,"t":{},"b":{"4":{},"13":{}}}],["mathbf{\\phi(x,i",{"_index":6214,"t":{},"b":{"13":{}}}],["mathbf{\\phi}(t_h",{"_index":5436,"t":{},"b":{"13":{}}}],["mathbf{\\phi}(x,i",{"_index":5433,"t":{},"b":{"13":{}}}],["mathbf{\\psi",{"_index":2416,"t":{},"b":{"4":{}}}],["mathbf{\\xi}_j",{"_index":4598,"t":{},"b":{"11":{}}}],["mathbf{a",{"_index":2484,"t":{},"b":{"4":{},"11":{}}}],["mathbf{a}&\\mathbf{\\mathbf{b",{"_index":11453,"t":{},"b":{"45":{}}}],["mathbf{a}&b",{"_index":11478,"t":{},"b":{"45":{}}}],["mathbf{a}(x,t)\\in",{"_index":11099,"t":{},"b":{"41":{}}}],["mathbf{a}),\\quad",{"_index":4319,"t":{},"b":{"11":{}}}],["mathbf{a},\\mathbf{b},\\mathbf{c",{"_index":2476,"t":{},"b":{"4":{},"11":{}}}],["mathbf{b",{"_index":693,"t":{},"b":{"3":{},"4":{},"11":{},"45":{}}}],["mathbf{b}&0",{"_index":11454,"t":{},"b":{"45":{}}}],["mathbf{b}),\\quad",{"_index":4322,"t":{},"b":{"11":{}}}],["mathbf{b}^*p_h^n",{"_index":11538,"t":{},"b":{"45":{}}}],["mathbf{b}^t\\mathbf{x",{"_index":691,"t":{},"b":{"3":{}}}],["mathbf{c",{"_index":2481,"t":{},"b":{"4":{},"11":{}}}],["mathbf{e}^{0},\\mathbf{e}^{1},\\mathbf{e}^{2",{"_index":2478,"t":{},"b":{"4":{}}}],["mathbf{e}^{0}_{1}\\),\\(\\alpha_{2",{"_index":2505,"t":{},"b":{"4":{}}}],["mathbf{e}^{0}_{2",{"_index":2503,"t":{},"b":{"4":{}}}],["mathbf{e}^{1},\\mathbf{e}^{2},\\mathbf{e}^{3",{"_index":4316,"t":{},"b":{"11":{}}}],["mathbf{e}^{1}_{1",{"_index":2508,"t":{},"b":{"4":{}}}],["mathbf{e}^{1}_{2",{"_index":2506,"t":{},"b":{"4":{}}}],["mathbf{e}^{2}_{1",{"_index":2512,"t":{},"b":{"4":{}}}],["mathbf{e}^{2}_{2",{"_index":2510,"t":{},"b":{"4":{}}}],["mathbf{e}^{m",{"_index":2516,"t":{},"b":{"4":{}}}],["mathbf{e}^{m}_{1",{"_index":2515,"t":{},"b":{"4":{}}}],["mathbf{e}^{m}_{2",{"_index":2514,"t":{},"b":{"4":{}}}],["mathbf{f",{"_index":2466,"t":{},"b":{"4":{},"11":{},"40":{},"45":{},"64":{}}}],["mathbf{f},\\mathbf{g})\\in",{"_index":10758,"t":{},"b":{"40":{}}}],["mathbf{f},\\mathbf{v",{"_index":11394,"t":{},"b":{"45":{}}}],["mathbf{f},\\mathbf{v}_h",{"_index":11416,"t":{},"b":{"45":{}}}],["mathbf{f}.n_{",{"_index":2469,"t":{},"b":{"4":{},"11":{}}}],["mathbf{f}:\\omega\\to",{"_index":7311,"t":{},"b":{"14":{}}}],["mathbf{f}\\cdot",{"_index":10718,"t":{},"b":{"40":{}}}],["mathbf{f}\\in",{"_index":11363,"t":{},"b":{"45":{}}}],["mathbf{f}_h",{"_index":11456,"t":{},"b":{"45":{}}}],["mathbf{f}_h(x,i",{"_index":4329,"t":{},"b":{"11":{}}}],["mathbf{f}_h^{\\epsilon",{"_index":11483,"t":{},"b":{"45":{}}}],["mathbf{g",{"_index":10680,"t":{},"b":{"40":{},"42":{},"64":{}}}],["mathbf{g}\\cdot",{"_index":10720,"t":{},"b":{"40":{},"42":{}}}],["mathbf{g}_n",{"_index":12217,"t":{},"b":{"48":{}}}],["mathbf{g}_n.n",{"_index":12216,"t":{},"b":{"48":{}}}],["mathbf{h",{"_index":11228,"t":{},"b":{"42":{}}}],["mathbf{h}\\cdot",{"_index":11246,"t":{},"b":{"42":{}}}],["mathbf{h}^t",{"_index":12436,"t":{},"b":{"51":{}}}],["mathbf{i",{"_index":3589,"t":{},"b":{"8":{},"13":{}}}],["mathbf{n",{"_index":4475,"t":{},"b":{"11":{},"40":{},"45":{}}}],["mathbf{n}_{i_l",{"_index":4335,"t":{},"b":{"11":{}}}],["mathbf{rh",{"_index":3565,"t":{},"b":{"8":{}}}],["mathbf{rhs}_i)_{i",{"_index":3599,"t":{},"b":{"8":{}}}],["mathbf{rhs}_j",{"_index":3607,"t":{},"b":{"8":{}}}],["mathbf{u",{"_index":3567,"t":{},"b":{"8":{},"37":{},"40":{},"42":{},"45":{},"46":{},"48":{},"64":{},"73":{},"74":{},"77":{},"78":{}}}],["mathbf{u}(\\mathbf{x",{"_index":14904,"t":{},"b":{"74":{}}}],["mathbf{u}(\\mathbf{x})+\\tau\\delta\\mathbf{x",{"_index":10635,"t":{},"b":{"40":{}}}],["mathbf{u}(\\mathbf{x})\\delta",{"_index":14905,"t":{},"b":{"74":{}}}],["mathbf{u}(\\mathbf{x})\\in",{"_index":10715,"t":{},"b":{"40":{}}}],["mathbf{u}(\\mathbf{x}+\\tau\\delta\\mathbf{x",{"_index":10627,"t":{},"b":{"40":{}}}],["mathbf{u}(\\mathbf{x}_{\\tau",{"_index":13521,"t":{},"b":{"54":{}}}],["mathbf{u}(x",{"_index":10778,"t":{},"b":{"40":{}}}],["mathbf{u}(x_1,x_2,x_3",{"_index":10696,"t":{},"b":{"40":{}}}],["mathbf{u}+\\nabla",{"_index":11365,"t":{},"b":{"45":{},"73":{}}}],["mathbf{u},p)\\in",{"_index":11391,"t":{},"b":{"45":{}}}],["mathbf{u}.\\nabla",{"_index":15141,"t":{},"b":{"77":{}}}],["mathbf{u}:\\nabla",{"_index":14808,"t":{},"b":{"73":{}}}],["mathbf{u}\\cdot",{"_index":11400,"t":{},"b":{"45":{}}}],["mathbf{u}\\cdot\\nabla",{"_index":14806,"t":{},"b":{"73":{},"74":{}}}],["mathbf{u}\\cdot\\nabla\\mathbf{u",{"_index":14891,"t":{},"b":{"74":{}}}],["mathbf{u}\\in",{"_index":15242,"t":{},"b":{"78":{}}}],["mathbf{u}^0",{"_index":14894,"t":{},"b":{"74":{}}}],["mathbf{u}^m",{"_index":14899,"t":{},"b":{"74":{}}}],["mathbf{u}^mo\\mathbf{x}^m",{"_index":14898,"t":{},"b":{"74":{}}}],["mathbf{u}^{m+1",{"_index":14908,"t":{},"b":{"74":{}}}],["mathbf{u}_\\gamma",{"_index":11226,"t":{},"b":{"42":{},"74":{}}}],["mathbf{u}_h",{"_index":11455,"t":{},"b":{"45":{}}}],["mathbf{u}_h,p_h",{"_index":11432,"t":{},"b":{"45":{}}}],["mathbf{u}_h\\|_{1,\\omega",{"_index":11433,"t":{},"b":{"45":{}}}],["mathbf{u}_h^\\epsilon\\|_{1,\\omega",{"_index":11485,"t":{},"b":{"45":{}}}],["mathbf{u}_h^n",{"_index":11536,"t":{},"b":{"45":{}}}],["mathbf{u}_h^{\\epsilon",{"_index":11479,"t":{},"b":{"45":{}}}],["mathbf{u}_n",{"_index":10217,"t":{},"b":{"37":{}}}],["mathbf{u}_{\\gamma",{"_index":11370,"t":{},"b":{"45":{}}}],["mathbf{u}_{\\gamma}\\cdot",{"_index":11492,"t":{},"b":{"45":{}}}],["mathbf{u}_{h},p_{h",{"_index":11411,"t":{},"b":{"45":{}}}],["mathbf{u}_{k,r",{"_index":10789,"t":{},"b":{"40":{}}}],["mathbf{u}_{k,r}(x",{"_index":10787,"t":{},"b":{"40":{}}}],["mathbf{u}_{n",{"_index":10219,"t":{},"b":{"37":{}}}],["mathbf{u}_{n+1",{"_index":10218,"t":{},"b":{"37":{}}}],["mathbf{u}o\\mathbf{x}(x",{"_index":14903,"t":{},"b":{"74":{}}}],["mathbf{u}|_\\gamma",{"_index":14895,"t":{},"b":{"74":{}}}],["mathbf{u}|_{\\gamma_{out",{"_index":14901,"t":{},"b":{"74":{}}}],["mathbf{u}|_{t",{"_index":14893,"t":{},"b":{"74":{}}}],["mathbf{v",{"_index":2459,"t":{},"b":{"4":{},"11":{},"40":{},"42":{},"45":{},"46":{},"48":{},"64":{},"73":{}}}],["mathbf{v}(\\omega",{"_index":11373,"t":{},"b":{"45":{}}}],["mathbf{v},q)\\in",{"_index":11396,"t":{},"b":{"45":{}}}],["mathbf{v}.n",{"_index":12221,"t":{},"b":{"48":{}}}],["mathbf{v}\\in",{"_index":10721,"t":{},"b":{"40":{},"45":{},"48":{}}}],["mathbf{v}\\tim",{"_index":11392,"t":{},"b":{"45":{}}}],["mathbf{v}_h",{"_index":11403,"t":{},"b":{"45":{}}}],["mathbf{v}_h\\in",{"_index":11422,"t":{},"b":{"45":{}}}],["mathbf{v}_h\\subset",{"_index":11401,"t":{},"b":{"45":{}}}],["mathbf{v}_h\\tim",{"_index":11469,"t":{},"b":{"45":{}}}],["mathbf{v}_h\\|_{1,\\omega",{"_index":11429,"t":{},"b":{"45":{}}}],["mathbf{v}_h\\|_{1,\\omega}^2\\quad",{"_index":11421,"t":{},"b":{"45":{}}}],["mathbf{v}_h^n",{"_index":11535,"t":{},"b":{"45":{}}}],["mathbf{v}_h^{\\epsilon},p_h^{\\epsilon})\\in",{"_index":11468,"t":{},"b":{"45":{}}}],["mathbf{v}_h}\\frac{b(\\mathbf{v}_h,q_h",{"_index":11428,"t":{},"b":{"45":{}}}],["mathbf{v}_i",{"_index":3703,"t":{},"b":{"10":{}}}],["mathbf{v}_{h",{"_index":11412,"t":{},"b":{"45":{}}}],["mathbf{v}_{ik",{"_index":3658,"t":{},"b":{"8":{}}}],["mathbf{v}_{|k",{"_index":3981,"t":{},"b":{"11":{}}}],["mathbf{v}_{|k}(x,i",{"_index":2462,"t":{},"b":{"4":{},"11":{}}}],["mathbf{v}_{|k}(x,y,z",{"_index":3919,"t":{},"b":{"11":{}}}],["mathbf{w",{"_index":3923,"t":{},"b":{"11":{},"37":{},"42":{},"45":{},"46":{}}}],["mathbf{w})(\\bf_{n",{"_index":10227,"t":{},"b":{"37":{}}}],["mathbf{w})\\bf_{n",{"_index":10229,"t":{},"b":{"37":{}}}],["mathbf{w},%\\`{u",{"_index":11247,"t":{},"b":{"42":{}}}],["mathbf{w},\\end{split",{"_index":10233,"t":{},"b":{"37":{}}}],["mathbf{w}\\end{split",{"_index":10262,"t":{},"b":{"37":{}}}],["mathbf{w}\\in",{"_index":3930,"t":{},"b":{"11":{},"42":{},"45":{}}}],["mathbf{x",{"_index":537,"t":{},"b":{"3":{},"8":{},"13":{},"40":{},"41":{},"54":{}}}],["mathbf{x}((m",{"_index":11116,"t":{},"b":{"41":{}}}],["mathbf{x}((m+1)\\tau",{"_index":11137,"t":{},"b":{"41":{}}}],["mathbf{x}(\\mathbf{x",{"_index":13518,"t":{},"b":{"54":{}}}],["mathbf{x}(t",{"_index":11135,"t":{},"b":{"41":{}}}],["mathbf{x})\\in",{"_index":4100,"t":{},"b":{"11":{}}}],["mathbf{x})\\not\\in",{"_index":4101,"t":{},"b":{"11":{}}}],["mathbf{x})\\right",{"_index":499,"t":{},"b":{"3":{}}}],["mathbf{x}^{(0",{"_index":530,"t":{},"b":{"3":{}}}],["mathbf{x}_{\\tau",{"_index":13519,"t":{},"b":{"54":{}}}],["mathbf{y}\\in",{"_index":5485,"t":{},"b":{"13":{}}}],["mathcal",{"_index":3513,"t":{},"b":{"8":{},"10":{}}}],["mathcal{a",{"_index":1584,"t":{},"b":{"3":{},"11":{}}}],["mathcal{a^",{"_index":4215,"t":{},"b":{"11":{}}}],["mathcal{a}(\\rho",{"_index":1564,"t":{},"b":{"3":{}}}],["mathcal{a}_i",{"_index":7582,"t":{},"b":{"15":{}}}],["mathcal{c",{"_index":12345,"t":{},"b":{"50":{}}}],["mathcal{c}^0(\\omega",{"_index":7493,"t":{},"b":{"15":{}}}],["mathcal{c}^2",{"_index":11653,"t":{},"b":{"46":{}}}],["mathcal{e}_{k",{"_index":12251,"t":{},"b":{"48":{}}}],["mathcal{f}(\\omega^n",{"_index":11337,"t":{},"b":{"43":{}}}],["mathcal{f}(x,i",{"_index":11329,"t":{},"b":{"43":{}}}],["mathcal{h",{"_index":5565,"t":{},"b":{"13":{}}}],["mathcal{i}_{k",{"_index":12362,"t":{},"b":{"50":{}}}],["mathcal{l}(u,\\lambda",{"_index":12357,"t":{},"b":{"50":{}}}],["mathcal{l}_m",{"_index":7928,"t":{},"b":{"15":{}}}],["mathcal{m",{"_index":5562,"t":{},"b":{"13":{}}}],["mathcal{m}_i",{"_index":2287,"t":{},"b":{"4":{}}}],["mathcal{n}^{\\gamma_i}_{hi",{"_index":7510,"t":{},"b":{"15":{}}}],["mathcal{n}_h}_i",{"_index":7508,"t":{},"b":{"15":{}}}],["mathcal{o",{"_index":1643,"t":{},"b":{"3":{}}}],["mathcal{o}(i",{"_index":3561,"t":{},"b":{"8":{},"10":{}}}],["mathcal{o}(n",{"_index":9863,"t":{},"b":{"33":{}}}],["mathcal{o}_i",{"_index":7635,"t":{},"b":{"15":{}}}],["mathcal{t}^\\triangle_{h",{"_index":3906,"t":{},"b":{"11":{}}}],["mathcal{t}_h",{"_index":4016,"t":{},"b":{"11":{},"13":{},"14":{},"15":{},"48":{},"76":{}}}],["mathcal{t}_h\\}_{h\\downarrow",{"_index":11010,"t":{},"b":{"41":{},"48":{}}}],["mathcal{t}_h\\}_{h\\rightarrow",{"_index":5486,"t":{},"b":{"13":{}}}],["mathcal{t}_h}^*_{ij",{"_index":7668,"t":{},"b":{"15":{}}}],["mathcal{t}_h}_i",{"_index":7506,"t":{},"b":{"15":{}}}],["mathcal{t}_{h",{"_index":2461,"t":{},"b":{"4":{},"11":{}}}],["mathcal{t}_{h}\\;\\;\\textrm{ther",{"_index":3814,"t":{},"b":{"11":{}}}],["mathcal{t}_{h}\\quad",{"_index":4007,"t":{},"b":{"11":{},"45":{}}}],["mathcal{v",{"_index":1585,"t":{},"b":{"3":{}}}],["mathcal{v}(\\rho_{0})\\geq",{"_index":1654,"t":{},"b":{"3":{}}}],["mathcal{v}(\\rho_{0})\\leq",{"_index":1641,"t":{},"b":{"3":{}}}],["mathcal{v}(\\rho_{\\mathrm{object",{"_index":1636,"t":{},"b":{"3":{}}}],["mathcal{v}(\\rho_{object",{"_index":1846,"t":{},"b":{"3":{}}}],["mathcal{v}_{\\mathrm{max",{"_index":1635,"t":{},"b":{"3":{}}}],["mathcal{v}_{\\mathrm{min",{"_index":1655,"t":{},"b":{"3":{}}}],["mathemat",{"_index":31,"t":{"44":{}},"b":{"2":{},"3":{},"5":{},"8":{},"11":{},"12":{},"13":{},"14":{},"30":{},"33":{},"37":{},"41":{},"44":{},"48":{},"50":{},"53":{},"76":{},"79":{}}}],["mathr",{"_index":6525,"t":{},"b":{"13":{}}}],["mathrm",{"_index":1079,"t":{},"b":{"3":{}}}],["mathrm{(constraint",{"_index":1082,"t":{},"b":{"3":{}}}],["mathrm{1\\!\\!i}_{\\mathcal{o}_i",{"_index":7638,"t":{},"b":{"15":{}}}],["mathrm{1\\!\\!i}_{o_i",{"_index":7645,"t":{},"b":{"15":{}}}],["mathrm{a.",{"_index":1413,"t":{},"b":{"3":{}}}],["mathrm{and",{"_index":1547,"t":{},"b":{"3":{}}}],["mathrm{curl}\\mathbf{",{"_index":11905,"t":{},"b":{"48":{}}}],["mathrm{diam}(\\mathcal{o})^{3",{"_index":1658,"t":{},"b":{"3":{}}}],["mathrm{div}\\mathbf{",{"_index":11903,"t":{},"b":{"48":{}}}],["mathrm{find",{"_index":948,"t":{},"b":{"3":{}}}],["mathrm{lb",{"_index":1084,"t":{},"b":{"3":{}}}],["mathrm{or",{"_index":1170,"t":{},"b":{"3":{}}}],["mathrm{s.t",{"_index":1073,"t":{},"b":{"3":{}}}],["mathrm{span",{"_index":3830,"t":{},"b":{"11":{}}}],["mathrm{ub",{"_index":1083,"t":{},"b":{"3":{}}}],["mathrm{with",{"_index":925,"t":{},"b":{"3":{}}}],["mathtt{bi",{"_index":7535,"t":{},"b":{"15":{}}}],["mathtt{coef}^2",{"_index":5564,"t":{},"b":{"13":{}}}],["mathtt{dfft}(\\hat{f},1)/\\sqrt{n",{"_index":2877,"t":{},"b":{"4":{}}}],["mathtt{dfft}(f",{"_index":2874,"t":{},"b":{"4":{}}}],["mathtt{dfft}(f,\\varepsilon)_{k",{"_index":2858,"t":{},"b":{"4":{}}}],["mathtt{dfft}(f,m,\\varepsilon)_{k+nl",{"_index":2866,"t":{},"b":{"4":{}}}],["mathtt{err}\\,\\,\\mathtt{coef}^2",{"_index":5568,"t":{},"b":{"13":{}}}],["mathtt{etak}[i",{"_index":4874,"t":{},"b":{"11":{}}}],["mathtt{f[][}i\\mathtt",{"_index":15134,"t":{},"b":{"76":{}}}],["mathtt{f}(x,i",{"_index":15133,"t":{},"b":{"76":{}}}],["mathtt{intalledges}(\\mathtt{th",{"_index":15198,"t":{},"b":{"77":{}}}],["mathtt{kpi",{"_index":2453,"t":{},"b":{"4":{}}}],["mathtt{nbofnod",{"_index":2455,"t":{},"b":{"4":{}}}],["mathtt{nppi",{"_index":2454,"t":{},"b":{"4":{}}}],["mathtt{ong}[i",{"_index":7533,"t":{},"b":{"15":{}}}],["mathtt{region",{"_index":5643,"t":{},"b":{"13":{}}}],["mathtt{tgv",{"_index":4806,"t":{},"b":{"11":{},"68":{}}}],["mathtt{u[][}i\\mathtt",{"_index":15132,"t":{},"b":{"76":{}}}],["mathtt{u}(x,i",{"_index":15131,"t":{},"b":{"76":{}}}],["mathtt{vh.ndof",{"_index":15138,"t":{},"b":{"76":{}}}],["mati",{"_index":9017,"t":{},"b":{"21":{}}}],["mati(vh",{"_index":9020,"t":{},"b":{"21":{}}}],["matid",{"_index":8628,"t":{},"b":{"20":{}}}],["matlab",{"_index":5128,"t":{"71":{}},"b":{"12":{},"19":{},"60":{},"71":{},"81":{}}}],["matlab/octav",{"_index":8510,"t":{},"b":{"19":{}}}],["matload",{"_index":8301,"t":{},"b":{"16":{}}}],["matnest",{"_index":8253,"t":{},"b":{"16":{}}}],["matric",{"_index":724,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"45":{},"51":{},"54":{},"56":{},"60":{},"68":{},"70":{},"74":{},"76":{},"80":{}}}],["matricecreuse.hpp",{"_index":2708,"t":{},"b":{"4":{}}}],["matricecreuse_tpl.hpp",{"_index":2709,"t":{},"b":{"4":{}}}],["matrix",{"_index":160,"t":{"80":{}},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"26":{},"33":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"55":{},"57":{},"58":{},"60":{},"62":{},"68":{},"70":{},"74":{},"75":{},"76":{},"77":{},"80":{},"81":{}}}],["matrix(\\(p",{"_index":7771,"t":{},"b":{"15":{}}}],["matrix/vector",{"_index":8302,"t":{},"b":{"16":{}}}],["matrix<complex",{"_index":7454,"t":{},"b":{"15":{},"21":{},"58":{},"60":{}}}],["matrix<pr#prfe#k",{"_index":3276,"t":{},"b":{"5":{}}}],["matrix<pr#prfe#k>[int",{"_index":3182,"t":{},"b":{"5":{}}}],["matrix<prfe#k",{"_index":3146,"t":{},"b":{"5":{}}}],["matrix<prfe#k>[int",{"_index":3109,"t":{},"b":{"5":{}}}],["matrix<r",{"_index":8996,"t":{},"b":{"21":{},"25":{},"60":{}}}],["matrix[int",{"_index":5050,"t":{},"b":{"11":{},"15":{},"26":{},"60":{}}}],["matrix–vector",{"_index":8277,"t":{},"b":{"16":{}}}],["matter",{"_index":1057,"t":{},"b":{"3":{},"35":{},"72":{}}}],["matupwind0",{"_index":13388,"t":{},"b":{"53":{}}}],["matupwind1",{"_index":13386,"t":{},"b":{"53":{}}}],["matur",{"_index":5081,"t":{},"b":{"12":{}}}],["max",{"_index":5939,"t":{},"b":{"13":{},"15":{},"18":{},"21":{},"24":{},"25":{},"26":{},"40":{},"41":{},"45":{},"46":{},"48":{},"54":{},"64":{},"77":{}}}],["max((zmax",{"_index":6292,"t":{},"b":{"13":{}}}],["max(.01",{"_index":6078,"t":{},"b":{"13":{}}}],["max(0,u",{"_index":12358,"t":{},"b":{"50":{}}}],["max(\\mathtt{cutoff},|\\eta|)}\\right)^p",{"_index":5566,"t":{},"b":{"13":{}}}],["max(a",{"_index":13653,"t":{},"b":{"54":{}}}],["max(b",{"_index":13535,"t":{},"b":{"54":{}}}],["max(disc1",{"_index":1862,"t":{},"b":{"3":{},"20":{}}}],["max(ep",{"_index":14112,"t":{},"b":{"61":{}}}],["max(k",{"_index":11200,"t":{},"b":{"41":{},"61":{}}}],["max(lb",{"_index":1860,"t":{},"b":{"3":{},"20":{}}}],["max(max(lb",{"_index":1859,"t":{},"b":{"3":{},"20":{}}}],["max(min(fn/etastar,3.),0.3333",{"_index":12300,"t":{},"b":{"48":{}}}],["max(nloc/10",{"_index":7695,"t":{},"b":{"15":{},"26":{}}}],["max(nufin",{"_index":14881,"t":{},"b":{"73":{}}}],["max(t",{"_index":14108,"t":{},"b":{"61":{}}}],["max(unssd",{"_index":9460,"t":{},"b":{"26":{}}}],["max(x,y),0",{"_index":11201,"t":{},"b":{"41":{}}}],["max\\{\\textrm{diam}(t_k",{"_index":5495,"t":{},"b":{"13":{}}}],["max_{\\lambda\\in",{"_index":12355,"t":{},"b":{"50":{}}}],["max_{x\\in\\omega}\\vert",{"_index":11052,"t":{},"b":{"41":{}}}],["maxcputim",{"_index":1293,"t":{},"b":{"3":{}}}],["maxdf",{"_index":4364,"t":{},"b":{"11":{}}}],["maxi",{"_index":13936,"t":{},"b":{"60":{}}}],["maxim",{"_index":1014,"t":{},"b":{"3":{},"13":{},"21":{}}}],["maximum",{"_index":531,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"39":{},"41":{},"54":{},"60":{},"66":{}}}],["maximum_cputime_exceed",{"_index":1226,"t":{},"b":{"3":{}}}],["maximum_iterations_exceed",{"_index":1220,"t":{},"b":{"3":{}}}],["maxit",{"_index":1292,"t":{},"b":{"3":{},"20":{},"39":{},"51":{},"62":{}}}],["maxj",{"_index":13938,"t":{},"b":{"60":{}}}],["maxlay",{"_index":6109,"t":{},"b":{"13":{},"24":{}}}],["maxlayerst",{"_index":6061,"t":{},"b":{"13":{}}}],["maxrang",{"_index":8363,"t":{},"b":{"18":{}}}],["maxsubdiv",{"_index":5579,"t":{},"b":{"13":{},"24":{},"41":{},"54":{},"67":{}}}],["maxwel",{"_index":3285,"t":{},"b":{"5":{},"6":{},"8":{},"10":{},"16":{},"51":{},"81":{}}}],["maxwell_cobracavity.edp",{"_index":3427,"t":{},"b":{"5":{},"6":{}}}],["mayb",{"_index":1311,"t":{},"b":{"3":{},"20":{}}}],["mb",{"_index":7072,"t":{},"b":{"13":{},"32":{}}}],["mbox",{"_index":3885,"t":{},"b":{"11":{},"15":{},"43":{},"66":{},"74":{},"76":{}}}],["mbox{and",{"_index":4808,"t":{},"b":{"11":{}}}],["mbox{and}\\quad",{"_index":4049,"t":{},"b":{"11":{},"68":{}}}],["mbox{els",{"_index":4803,"t":{},"b":{"11":{},"15":{},"68":{}}}],["mbox{for",{"_index":10232,"t":{},"b":{"37":{},"40":{}}}],["mbox{if",{"_index":4800,"t":{},"b":{"11":{},"13":{},"15":{},"68":{}}}],["mbox{in",{"_index":11868,"t":{},"b":{"48":{}}}],["mbox{in}\\;\\omega",{"_index":10463,"t":{},"b":{"38":{}}}],["mbox{in}~~\\omega",{"_index":14254,"t":{},"b":{"64":{}}}],["mbox{on",{"_index":11874,"t":{},"b":{"48":{}}}],["mbox{or",{"_index":4812,"t":{},"b":{"11":{}}}],["mbox{th",{"_index":4817,"t":{},"b":{"11":{},"68":{}}}],["mbox{with",{"_index":14727,"t":{},"b":{"72":{}}}],["mbyte",{"_index":7083,"t":{},"b":{"13":{}}}],["mccormick",{"_index":1328,"t":{},"b":{"3":{}}}],["mcoars",{"_index":3411,"t":{},"b":{"5":{}}}],["mdi",{"_index":14941,"t":{},"b":{"74":{}}}],["mdiff",{"_index":12393,"t":{},"b":{"50":{}}}],["mdiff(n",{"_index":12392,"t":{},"b":{"50":{}}}],["mdv",{"_index":1821,"t":{},"b":{"3":{},"20":{}}}],["mdx",{"_index":14939,"t":{},"b":{"74":{}}}],["me",{"_index":4201,"t":{},"b":{"11":{},"26":{}}}],["mean",{"_index":920,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"37":{},"40":{},"54":{},"65":{},"66":{},"67":{},"76":{}}}],["mean(\\eta_n",{"_index":12274,"t":{},"b":{"48":{}}}],["meant",{"_index":2907,"t":{},"b":{"4":{},"12":{}}}],["measur",{"_index":4611,"t":{},"b":{"11":{},"13":{},"14":{},"15":{},"37":{},"59":{}}}],["meat",{"_index":14210,"t":{},"b":{"63":{}}}],["mechan",{"_index":334,"t":{},"b":{"2":{},"13":{},"40":{},"42":{},"64":{}}}],["media",{"_index":441,"t":{},"b":{"2":{}}}],["medit",{"_index":1664,"t":{},"b":{"3":{},"4":{},"13":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"36":{},"48":{},"50":{},"53":{}}}],["medit(\"box",{"_index":6117,"t":{},"b":{"13":{},"24":{}}}],["medit(\"c8x8x8",{"_index":9340,"t":{},"b":{"25":{}}}],["medit(\"con",{"_index":6083,"t":{},"b":{"13":{}}}],["medit(\"cub",{"_index":6360,"t":{},"b":{"13":{}}}],["medit(\"cube\",th",{"_index":6145,"t":{},"b":{"13":{}}}],["medit(\"d\"+mpirank",{"_index":3708,"t":{},"b":{"10":{}}}],["medit(\"hex",{"_index":6355,"t":{},"b":{"13":{}}}],["medit(\"initi",{"_index":7136,"t":{},"b":{"13":{}}}],["medit(\"isometr",{"_index":7137,"t":{},"b":{"13":{}}}],["medit(\"metr",{"_index":7061,"t":{},"b":{"13":{}}}],["medit(\"sol",{"_index":7056,"t":{},"b":{"13":{}}}],["medit(\"sol1",{"_index":6958,"t":{},"b":{"13":{}}}],["medit(\"sol2domain",{"_index":6968,"t":{},"b":{"13":{}}}],["medit(\"solut",{"_index":6992,"t":{},"b":{"13":{}}}],["medit(\"spher",{"_index":6130,"t":{},"b":{"13":{},"24":{}}}],["medit(\"sphere\",th3sph,wait",{"_index":6764,"t":{},"b":{"13":{}}}],["medit(\"sphererefinedomain\",wait",{"_index":6765,"t":{},"b":{"13":{}}}],["medit(\"sphererefinelocal\",wait",{"_index":6767,"t":{},"b":{"13":{}}}],["medit(\"surfacemesh",{"_index":7116,"t":{},"b":{"13":{}}}],["medit(\"th",{"_index":6044,"t":{},"b":{"13":{}}}],["medit(\"th\"+mpirank",{"_index":3697,"t":{},"b":{"10":{}}}],["medit(\"th3",{"_index":9280,"t":{},"b":{"22":{}}}],["medit(\"thh",{"_index":7153,"t":{},"b":{"13":{}}}],["medit(\"u",{"_index":7179,"t":{},"b":{"13":{},"19":{},"27":{}}}],["medit(\"uh",{"_index":12152,"t":{},"b":{"48":{},"50":{}}}],["medit(\"v\"+mpirank",{"_index":3706,"t":{},"b":{"10":{}}}],["medit(cmm",{"_index":1720,"t":{},"b":{"3":{},"20":{}}}],["medit.bi",{"_index":6964,"t":{},"b":{"13":{}}}],["meditff",{"_index":6963,"t":{},"b":{"13":{}}}],["medium",{"_index":12413,"t":{},"b":{"51":{}}}],["megabyt",{"_index":7815,"t":{},"b":{"15":{}}}],["meh",{"_index":6535,"t":{},"b":{"13":{},"20":{}}}],["mehrotra_algorithm",{"_index":1185,"t":{},"b":{"3":{}}}],["mem",{"_index":7071,"t":{},"b":{"13":{}}}],["member",{"_index":1387,"t":{},"b":{"3":{},"29":{},"52":{}}}],["membran",{"_index":4182,"t":{},"b":{"11":{},"19":{},"65":{},"69":{},"72":{}}}],["membrane.ep",{"_index":14753,"t":{},"b":{"72":{}}}],["membranelogo",{"_index":14699,"t":{"72":{}},"b":{}}],["membraneth.ep",{"_index":14754,"t":{},"b":{"72":{}}}],["membrane’",{"_index":14711,"t":{},"b":{"72":{}}}],["memori",{"_index":1962,"t":{},"b":{"3":{},"8":{},"13":{},"15":{},"18":{},"22":{},"74":{}}}],["mention",{"_index":1254,"t":{},"b":{"3":{},"71":{},"76":{}}}],["mere",{"_index":10078,"t":{},"b":{"35":{}}}],["merg",{"_index":5996,"t":{},"b":{"13":{},"15":{},"50":{},"54":{}}}],["mersenn",{"_index":13889,"t":{},"b":{"60":{}}}],["mesh",{"_index":67,"t":{"13":{},"24":{}},"b":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"56":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["mesh'",{"_index":9305,"t":{},"b":{"24":{}}}],["mesh','off",{"_index":14686,"t":{},"b":{"71":{}}}],["mesh.msh",{"_index":6776,"t":{},"b":{"13":{}}}],["mesh.th",{"_index":5608,"t":{},"b":{"13":{}}}],["mesh.thi",{"_index":6711,"t":{},"b":{"13":{}}}],["mesh1",{"_index":6860,"t":{},"b":{"13":{}}}],["mesh3",{"_index":1712,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"20":{},"22":{},"24":{},"25":{},"40":{},"48":{},"53":{},"54":{},"58":{},"60":{}}}],["mesh31",{"_index":6926,"t":{},"b":{"13":{}}}],["mesh3[int",{"_index":7453,"t":{},"b":{"15":{}}}],["mesh[int",{"_index":5000,"t":{},"b":{"11":{},"15":{},"26":{}}}],["mesh_nam",{"_index":5197,"t":{},"b":{"13":{}}}],["mesh_sample.msh",{"_index":6805,"t":{},"b":{"13":{}}}],["mesharea",{"_index":5270,"t":{},"b":{"13":{}}}],["meshfil",{"_index":13357,"t":{},"b":{"53":{}}}],["meshfilenam",{"_index":13690,"t":{},"b":{"54":{}}}],["meshgenqa",{"_index":13355,"t":{},"b":{"53":{}}}],["meshl",{"_index":4595,"t":{},"b":{"11":{},"13":{},"36":{}}}],["meshn",{"_index":3057,"t":{},"b":{"5":{}}}],["meshn[int",{"_index":3054,"t":{},"b":{"5":{}}}],["meshnam",{"_index":2995,"t":{},"b":{"5":{},"7":{},"10":{}}}],["meshpoint",{"_index":2771,"t":{},"b":{"4":{}}}],["meshpoint.hpp",{"_index":2710,"t":{},"b":{"4":{}}}],["meshpointstack(stack",{"_index":2773,"t":{},"b":{"4":{}}}],["meshs1",{"_index":6948,"t":{},"b":{"13":{}}}],["meshsiz",{"_index":12281,"t":{},"b":{"48":{}}}],["meshsizecomput",{"_index":12275,"t":{},"b":{"48":{}}}],["meshsizecomputation(th",{"_index":12285,"t":{},"b":{"48":{}}}],["meshsupportofvertic",{"_index":2231,"t":{},"b":{"4":{}}}],["meshsurface.idp",{"_index":6350,"t":{},"b":{"13":{},"48":{}}}],["meshversionformat",{"_index":2177,"t":{},"b":{"4":{},"13":{}}}],["messag",{"_index":1919,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"26":{},"70":{}}}],["meta",{"_index":1949,"t":{},"b":{"3":{}}}],["method",{"_index":48,"t":{"73":{}},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"19":{},"21":{},"29":{},"33":{},"35":{},"36":{},"37":{},"38":{},"39":{},"41":{},"43":{},"45":{},"46":{},"48":{},"50":{},"51":{},"52":{},"54":{},"55":{},"60":{},"61":{},"67":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{}}}],["meti",{"_index":3666,"t":{},"b":{"9":{},"10":{},"15":{},"26":{},"34":{},"53":{}}}],["metis_at_plus_a",{"_index":7892,"t":{},"b":{"15":{}}}],["metisdu",{"_index":13391,"t":{},"b":{"53":{}}}],["metisdual(nupart",{"_index":9433,"t":{},"b":{"26":{}}}],["metisnod",{"_index":13390,"t":{},"b":{"53":{}}}],["metis–unstructur",{"_index":156,"t":{},"b":{"2":{}}}],["metric",{"_index":1552,"t":{},"b":{"3":{},"4":{},"12":{},"13":{},"48":{},"54":{}}}],["metric.1",{"_index":5592,"t":{},"b":{"13":{}}}],["metric.if",{"_index":5554,"t":{},"b":{"13":{}}}],["metric/delaunay",{"_index":5514,"t":{},"b":{"13":{}}}],["metricku",{"_index":13392,"t":{},"b":{"53":{}}}],["metricpk",{"_index":13393,"t":{},"b":{"53":{}}}],["mf",{"_index":8276,"t":{},"b":{"16":{}}}],["mg",{"_index":8241,"t":{},"b":{"16":{}}}],["mh",{"_index":4024,"t":{},"b":{"11":{},"42":{},"45":{},"73":{}}}],["mh(sh",{"_index":11268,"t":{},"b":{"42":{}}}],["mh(th",{"_index":4021,"t":{},"b":{"11":{},"45":{}}}],["mh(th,p1",{"_index":14852,"t":{},"b":{"73":{}}}],["michael",{"_index":358,"t":{},"b":{"2":{}}}],["michel",{"_index":415,"t":{},"b":{"2":{}}}],["micro",{"_index":15235,"t":{},"b":{"78":{}}}],["microdisk",{"_index":396,"t":{},"b":{"2":{}}}],["micromet",{"_index":12452,"t":{},"b":{"51":{}}}],["microsoft",{"_index":9918,"t":{},"b":{"35":{}}}],["microwav",{"_index":382,"t":{},"b":{"2":{},"51":{},"63":{}}}],["mid",{"_index":3909,"t":{},"b":{"11":{},"13":{},"72":{}}}],["middl",{"_index":2475,"t":{},"b":{"4":{},"11":{},"13":{},"79":{}}}],["midpoint",{"_index":3377,"t":{},"b":{"5":{},"11":{}}}],["mignot",{"_index":444,"t":{},"b":{"2":{}}}],["million",{"_index":3743,"t":{},"b":{"10":{}}}],["min",{"_index":770,"t":{},"b":{"3":{},"13":{},"15":{},"21":{},"24":{},"25":{},"26":{},"41":{},"43":{},"46":{},"48":{},"54":{},"64":{},"77":{}}}],["min(3,max(1/3,\\eta_n",{"_index":12272,"t":{},"b":{"48":{}}}],["min(a",{"_index":13654,"t":{},"b":{"54":{}}}],["min(dt",{"_index":11639,"t":{},"b":{"45":{}}}],["min(k",{"_index":12561,"t":{},"b":{"51":{}}}],["min(max(a",{"_index":13676,"t":{},"b":{"54":{}}}],["min(max(b",{"_index":13678,"t":{},"b":{"54":{}}}],["min(tp",{"_index":14110,"t":{},"b":{"61":{}}}],["min/max",{"_index":8533,"t":{},"b":{"19":{},"81":{}}}],["min_{\\varphi",{"_index":14724,"t":{},"b":{"72":{}}}],["min_{b",{"_index":14982,"t":{},"b":{"75":{}}}],["min_{u\\in",{"_index":12347,"t":{},"b":{"50":{}}}],["minarea",{"_index":5476,"t":{},"b":{"13":{}}}],["mind",{"_index":1135,"t":{},"b":{"3":{},"49":{}}}],["mingw",{"_index":2744,"t":{},"b":{"4":{},"35":{}}}],["mingw32",{"_index":10071,"t":{},"b":{"35":{}}}],["mingw64",{"_index":10072,"t":{},"b":{"35":{}}}],["mini",{"_index":2120,"t":{},"b":{"3":{},"12":{},"20":{},"60":{}}}],["minim",{"_index":502,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"13":{},"15":{},"16":{},"20":{},"21":{},"35":{},"40":{},"46":{},"47":{},"55":{}}}],["minimum",{"_index":699,"t":{},"b":{"3":{},"13":{},"14":{},"33":{},"48":{},"54":{},"60":{},"72":{}}}],["minj",{"_index":13934,"t":{},"b":{"60":{}}}],["minnesota",{"_index":7939,"t":{},"b":{"15":{}}}],["minor",{"_index":1206,"t":{},"b":{"3":{},"37":{}}}],["mint",{"_index":5465,"t":{},"b":{"13":{},"43":{},"54":{}}}],["mint0",{"_index":5462,"t":{},"b":{"13":{}}}],["mint0/5",{"_index":5468,"t":{},"b":{"13":{}}}],["mintcc",{"_index":11354,"t":{},"b":{"43":{}}}],["mintti",{"_index":10104,"t":{},"b":{"35":{}}}],["minu",{"_index":556,"t":{},"b":{"3":{},"48":{},"69":{}}}],["mirror",{"_index":10107,"t":{},"b":{"35":{}}}],["misc",{"_index":9296,"t":{},"b":{"23":{},"24":{},"25":{}}}],["miscellan",{"_index":8283,"t":{},"b":{"16":{}}}],["misclogo",{"_index":9308,"t":{"25":{}},"b":{}}],["miss",{"_index":1918,"t":{},"b":{"3":{},"11":{}}}],["mistak",{"_index":15088,"t":{},"b":{"76":{}}}],["mix",{"_index":304,"t":{},"b":{"2":{},"3":{},"11":{},"13":{},"48":{},"54":{},"64":{},"65":{},"72":{},"79":{}}}],["mkdir",{"_index":13435,"t":{},"b":{"53":{}}}],["mla",{"_index":9818,"t":{},"b":{"30":{}}}],["mlsl",{"_index":1926,"t":{},"b":{"3":{}}}],["mlump",{"_index":14935,"t":{},"b":{"74":{}}}],["mm",{"_index":10548,"t":{},"b":{"39":{}}}],["mm.bb",{"_index":6867,"t":{},"b":{"13":{}}}],["mm.face",{"_index":6868,"t":{},"b":{"13":{}}}],["mm.point",{"_index":6869,"t":{},"b":{"13":{}}}],["mm;rm",{"_index":6866,"t":{},"b":{"13":{}}}],["mmap",{"_index":8366,"t":{},"b":{"18":{},"53":{}}}],["mmd_at_plus_a",{"_index":7880,"t":{},"b":{"15":{}}}],["mmd_ata",{"_index":7891,"t":{},"b":{"15":{}}}],["mmg",{"_index":8244,"t":{},"b":{"16":{},"34":{}}}],["mmg3d",{"_index":7117,"t":{},"b":{"13":{},"53":{}}}],["mmg3d(th",{"_index":7134,"t":{},"b":{"13":{}}}],["mmgs(ths,hmin",{"_index":6488,"t":{},"b":{"13":{}}}],["mo",{"_index":7128,"t":{},"b":{"13":{}}}],["mod",{"_index":13597,"t":{},"b":{"54":{}}}],["mode",{"_index":376,"t":{},"b":{"2":{},"3":{},"4":{},"9":{},"11":{},"13":{},"15":{},"21":{},"23":{},"35":{},"37":{},"39":{},"40":{},"51":{},"52":{},"70":{}}}],["mode.el",{"_index":9842,"t":{},"b":{"32":{},"35":{}}}],["model",{"_index":101,"t":{},"b":{"2":{},"11":{},"12":{},"13":{},"19":{},"27":{},"29":{},"41":{},"44":{},"48":{},"51":{},"53":{},"54":{},"61":{},"66":{},"70":{}}}],["modelslogo",{"_index":11360,"t":{"44":{}},"b":{}}],["modern",{"_index":12404,"t":{},"b":{"51":{}}}],["modeslogo",{"_index":12398,"t":{"51":{}},"b":{}}],["modif",{"_index":2970,"t":{},"b":{"4":{},"18":{},"40":{},"60":{}}}],["modifi",{"_index":2682,"t":{},"b":{"4":{},"8":{},"13":{},"15":{},"18":{},"26":{},"35":{},"42":{},"60":{},"77":{}}}],["modul",{"_index":2761,"t":{},"b":{"4":{},"35":{},"81":{}}}],["modulef",{"_index":6829,"t":{},"b":{"13":{}}}],["modulu",{"_index":10805,"t":{},"b":{"40":{},"42":{},"64":{}}}],["moivr",{"_index":8835,"t":{},"b":{"21":{}}}],["molecular",{"_index":14170,"t":{},"b":{"63":{}}}],["moment",{"_index":3963,"t":{},"b":{"11":{},"13":{}}}],["monochromat",{"_index":14128,"t":{},"b":{"62":{},"63":{}}}],["monoton",{"_index":1326,"t":{},"b":{"3":{}}}],["more",{"_index":786,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"19":{},"22":{},"24":{},"26":{},"27":{},"33":{},"45":{},"50":{},"53":{},"54":{},"60":{},"65":{},"69":{},"70":{},"71":{},"73":{},"76":{},"81":{}}}],["moreov",{"_index":3390,"t":{},"b":{"5":{},"12":{},"13":{}}}],["moric",{"_index":9766,"t":{},"b":{"29":{}}}],["morlay",{"_index":13879,"t":{},"b":{"60":{}}}],["morley",{"_index":2981,"t":{},"b":{"4":{},"11":{},"16":{}}}],["morley.cpp",{"_index":2667,"t":{},"b":{"4":{}}}],["mors",{"_index":8985,"t":{},"b":{"21":{}}}],["mortar",{"_index":5406,"t":{},"b":{"13":{},"54":{}}}],["mortar.cpp",{"_index":2711,"t":{},"b":{"4":{}}}],["motion",{"_index":8525,"t":{},"b":{"19":{}}}],["motiv",{"_index":4160,"t":{},"b":{"11":{}}}],["mous",{"_index":2847,"t":{},"b":{"4":{},"19":{}}}],["mouth",{"_index":5877,"t":{},"b":{"13":{}}}],["move",{"_index":1659,"t":{},"b":{"3":{},"11":{},"13":{},"40":{},"42":{},"54":{},"64":{},"78":{}}}],["movedmesh.ep",{"_index":5471,"t":{},"b":{"13":{}}}],["movedth",{"_index":13655,"t":{},"b":{"54":{}}}],["movemesh",{"_index":5430,"t":{},"b":{"13":{},"36":{},"37":{},"40":{},"42":{},"43":{},"46":{},"53":{},"54":{}}}],["movemesh(th",{"_index":5470,"t":{},"b":{"13":{},"37":{},"40":{},"42":{},"43":{},"46":{},"54":{},"64":{}}}],["movemesh(th,[phi1",{"_index":5437,"t":{},"b":{"13":{}}}],["movemesh(th,[x+u1*coef,y+u2*coef,z+u3*coef],label",{"_index":6197,"t":{},"b":{"13":{}}}],["movemesh(th1",{"_index":6518,"t":{},"b":{"13":{}}}],["movemesh(thfin",{"_index":6284,"t":{},"b":{"13":{}}}],["movemesh(thsd",{"_index":7151,"t":{},"b":{"13":{}}}],["movemesh(zoom",{"_index":10823,"t":{},"b":{"40":{}}}],["movemesh23",{"_index":1694,"t":{},"b":{"3":{},"13":{},"20":{},"53":{}}}],["movemesh23(th",{"_index":1713,"t":{},"b":{"3":{},"13":{},"20":{},"24":{}}}],["movemesh23(th,transfo",{"_index":6485,"t":{},"b":{"13":{}}}],["movemesh23(th2",{"_index":6218,"t":{},"b":{"13":{}}}],["movemesh23(thsq1",{"_index":6261,"t":{},"b":{"13":{}}}],["movemesh23(thsq2",{"_index":6264,"t":{},"b":{"13":{}}}],["movemesh23(thsq3",{"_index":6267,"t":{},"b":{"13":{}}}],["movemesh23(thx,transfo",{"_index":6442,"t":{},"b":{"13":{}}}],["movemesh23(thy,transfo",{"_index":6448,"t":{},"b":{"13":{}}}],["movemesh23(thz,transfo",{"_index":6453,"t":{},"b":{"13":{}}}],["movemesh2d3dsurf",{"_index":13394,"t":{},"b":{"53":{}}}],["movemesh3",{"_index":13395,"t":{},"b":{"53":{}}}],["movemesh3(th",{"_index":6152,"t":{},"b":{"13":{},"40":{}}}],["movemesh3(th,transfo",{"_index":6198,"t":{},"b":{"13":{}}}],["movemesh3d",{"_index":13396,"t":{},"b":{"53":{}}}],["movemeshl",{"_index":6624,"t":{},"b":{"13":{}}}],["movemeshs(th1",{"_index":6517,"t":{},"b":{"13":{}}}],["mp",{"_index":2772,"t":{},"b":{"4":{}}}],["mp.p.i",{"_index":2776,"t":{},"b":{"4":{}}}],["mp.p.x",{"_index":2775,"t":{},"b":{"4":{}}}],["mpi",{"_index":731,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"12":{},"15":{},"16":{},"20":{},"26":{},"29":{},"35":{}}}],["mpi.ex",{"_index":9956,"t":{},"b":{"35":{}}}],["mpi.org/release/open",{"_index":10003,"t":{},"b":{"35":{}}}],["mpi/mpich",{"_index":9992,"t":{},"b":{"35":{}}}],["mpi/openmpi",{"_index":9989,"t":{},"b":{"35":{}}}],["mpi/v4.0/openmpi",{"_index":10004,"t":{},"b":{"35":{}}}],["mpi\\bin\\mpiexec.ex",{"_index":9953,"t":{},"b":{"35":{}}}],["mpi_allgath",{"_index":8225,"t":{},"b":{"15":{}}}],["mpi_allreduce(&",{"_index":7590,"t":{},"b":{"15":{}}}],["mpi_any_sourc",{"_index":7392,"t":{},"b":{"15":{}}}],["mpi_barri",{"_index":7431,"t":{},"b":{"15":{}}}],["mpi_comm",{"_index":7407,"t":{},"b":{"15":{}}}],["mpi_comm_split",{"_index":8186,"t":{},"b":{"15":{}}}],["mpi_comm_split(mpi_comm",{"_index":7415,"t":{},"b":{"15":{}}}],["mpi_comm_world",{"_index":7393,"t":{},"b":{"15":{}}}],["mpi_gath",{"_index":8223,"t":{},"b":{"15":{}}}],["mpi_group",{"_index":7409,"t":{},"b":{"15":{}}}],["mpi_intercomm_cr",{"_index":8201,"t":{},"b":{"15":{}}}],["mpi_intercomm_merg",{"_index":8194,"t":{},"b":{"15":{}}}],["mpi_mpich",{"_index":9993,"t":{},"b":{"35":{}}}],["mpi_op",{"_index":7394,"t":{},"b":{"15":{}}}],["mpi_openmpi",{"_index":9991,"t":{},"b":{"35":{}}}],["mpi_reduc",{"_index":3549,"t":{},"b":{"8":{}}}],["mpi_request",{"_index":7418,"t":{},"b":{"15":{}}}],["mpi_sum",{"_index":7592,"t":{},"b":{"15":{}}}],["mpi_type<r>::typ",{"_index":7591,"t":{},"b":{"15":{}}}],["mpi_undefin",{"_index":7390,"t":{},"b":{"15":{}}}],["mpiaffinegmres(dj0",{"_index":7628,"t":{},"b":{"15":{},"26":{}}}],["mpiallgather(a",{"_index":7456,"t":{},"b":{"15":{}}}],["mpiallgather(data",{"_index":8224,"t":{},"b":{"15":{}}}],["mpiallreduce(a",{"_index":7460,"t":{},"b":{"15":{}}}],["mpiallreduce(aa",{"_index":9674,"t":{},"b":{"26":{}}}],["mpialltoall(a",{"_index":7455,"t":{},"b":{"15":{}}}],["mpialltoall(data",{"_index":8221,"t":{},"b":{"15":{}}}],["mpianysourc",{"_index":7391,"t":{},"b":{"15":{}}}],["mpiband",{"_index":7402,"t":{},"b":{"15":{}}}],["mpibarrier(comm",{"_index":7430,"t":{},"b":{"15":{}}}],["mpibxor",{"_index":7403,"t":{},"b":{"15":{}}}],["mpicg",{"_index":7587,"t":{},"b":{"15":{},"26":{}}}],["mpich",{"_index":9988,"t":{},"b":{"35":{}}}],["mpicomm",{"_index":3046,"t":{},"b":{"5":{},"15":{},"26":{}}}],["mpicomms",{"_index":7421,"t":{},"b":{"15":{}}}],["mpicommworld",{"_index":2169,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"15":{}}}],["mpigather(a",{"_index":7457,"t":{},"b":{"15":{}}}],["mpigather(data",{"_index":8222,"t":{},"b":{"15":{}}}],["mpigc",{"_index":7593,"t":{},"b":{"15":{}}}],["mpigmr",{"_index":7586,"t":{},"b":{"15":{}}}],["mpigmres2d.edp",{"_index":9393,"t":{},"b":{"26":{}}}],["mpigmresmacro.idp",{"_index":9397,"t":{},"b":{"26":{}}}],["mpigroup",{"_index":7385,"t":{},"b":{"15":{}}}],["mpiland",{"_index":7399,"t":{},"b":{"15":{}}}],["mpilineargmres(dj",{"_index":7631,"t":{},"b":{"15":{},"26":{}}}],["mpilor",{"_index":7400,"t":{},"b":{"15":{}}}],["mpilxor",{"_index":7401,"t":{},"b":{"15":{}}}],["mpimax",{"_index":7395,"t":{},"b":{"15":{},"26":{}}}],["mpimaxloc",{"_index":8231,"t":{},"b":{"15":{}}}],["mpimin",{"_index":7396,"t":{},"b":{"15":{}}}],["mpiminloc",{"_index":8232,"t":{},"b":{"15":{}}}],["mpiplot",{"_index":9396,"t":{},"b":{"26":{}}}],["mpiplot.idp",{"_index":7696,"t":{},"b":{"15":{},"26":{}}}],["mpiprod",{"_index":7398,"t":{},"b":{"15":{}}}],["mpirank",{"_index":2845,"t":{},"b":{"4":{},"15":{},"26":{},"70":{}}}],["mpirank(comm",{"_index":3045,"t":{},"b":{"5":{},"15":{},"26":{}}}],["mpirank(comm)%2",{"_index":8188,"t":{},"b":{"15":{}}}],["mpirank:0",{"_index":2840,"t":{},"b":{"4":{}}}],["mpireduce(a",{"_index":7459,"t":{},"b":{"15":{}}}],["mpireduce(data",{"_index":8230,"t":{},"b":{"15":{}}}],["mpireduce(uc",{"_index":7609,"t":{},"b":{"15":{},"26":{}}}],["mpirequest",{"_index":7387,"t":{},"b":{"15":{}}}],["mpirequest[int",{"_index":7419,"t":{},"b":{"15":{}}}],["mpirun",{"_index":3333,"t":{},"b":{"5":{},"7":{},"10":{},"15":{},"20":{},"26":{},"35":{}}}],["mpiscatter(a",{"_index":7458,"t":{},"b":{"15":{}}}],["mpiscatter(data",{"_index":8226,"t":{},"b":{"15":{}}}],["mpisiz",{"_index":7388,"t":{},"b":{"15":{},"26":{}}}],["mpisize(ccc",{"_index":8212,"t":{},"b":{"15":{}}}],["mpisize(comm",{"_index":3042,"t":{},"b":{"5":{},"15":{},"26":{}}}],["mpisum",{"_index":7397,"t":{},"b":{"15":{},"26":{}}}],["mpiundefin",{"_index":7389,"t":{},"b":{"15":{}}}],["mpiwait(req",{"_index":7433,"t":{},"b":{"15":{}}}],["mpiwaitany(reqarray",{"_index":7432,"t":{},"b":{"15":{}}}],["mpiwaitany(rq",{"_index":7565,"t":{},"b":{"15":{}}}],["mpiworld",{"_index":9416,"t":{},"b":{"26":{}}}],["mpiwtick",{"_index":7436,"t":{},"b":{"15":{}}}],["mpiwtim",{"_index":7434,"t":{},"b":{"15":{},"26":{}}}],["mrclass",{"_index":9809,"t":{},"b":{"30":{}}}],["mrnumber",{"_index":9811,"t":{},"b":{"30":{}}}],["ms",{"_index":9926,"t":{},"b":{"35":{}}}],["msh",{"_index":2336,"t":{},"b":{"4":{},"13":{},"36":{}}}],["msh3",{"_index":1663,"t":{},"b":{"3":{},"5":{},"13":{},"15":{},"20":{},"22":{},"24":{},"25":{},"36":{},"48":{},"53":{}}}],["mshmet",{"_index":6994,"t":{},"b":{"13":{},"34":{},"53":{}}}],["mshmet(th",{"_index":7000,"t":{},"b":{"13":{}}}],["mshmet(th3",{"_index":7172,"t":{},"b":{"13":{}}}],["mshmet(th3,u3",{"_index":7057,"t":{},"b":{"13":{}}}],["mshptg.cpp",{"_index":2712,"t":{},"b":{"4":{}}}],["msi",{"_index":10068,"t":{},"b":{"35":{}}}],["msmpi",{"_index":9924,"t":{},"b":{"35":{}}}],["msmpisdk.msi",{"_index":9928,"t":{},"b":{"35":{}}}],["msmpisetup.ex",{"_index":9929,"t":{},"b":{"35":{}}}],["msync",{"_index":13317,"t":{},"b":{"53":{}}}],["msys2",{"_index":10062,"t":{},"b":{"35":{}}}],["mth",{"_index":12087,"t":{},"b":{"48":{}}}],["mthi",{"_index":3698,"t":{},"b":{"10":{}}}],["mtune",{"_index":10114,"t":{},"b":{"35":{}}}],["mu",{"_index":947,"t":{},"b":{"3":{},"13":{},"25":{},"37":{},"40":{},"41":{},"42":{},"46":{},"48":{},"49":{},"50":{},"64":{},"65":{}}}],["mu)/(\\lambda+\\mu",{"_index":10714,"t":{},"b":{"40":{}}}],["mu*(dy(u",{"_index":10865,"t":{},"b":{"40":{}}}],["mu*t*12*x^2",{"_index":10947,"t":{},"b":{"41":{}}}],["mu+\\lambda",{"_index":14252,"t":{},"b":{"64":{}}}],["mu/(x_{n",{"_index":983,"t":{},"b":{"3":{}}}],["mu/(x_{u,n",{"_index":979,"t":{},"b":{"3":{}}}],["mu>0",{"_index":14350,"t":{},"b":{"65":{}}}],["mu\\delta",{"_index":10888,"t":{},"b":{"41":{}}}],["mu\\delta\\varphi",{"_index":14348,"t":{},"b":{"65":{}}}],["mu\\left(\\p",{"_index":11849,"t":{},"b":{"48":{}}}],["mu\\left(n_x(x,y)+\\frac{\\p",{"_index":11840,"t":{},"b":{"48":{}}}],["mu\\rightarrow",{"_index":1004,"t":{},"b":{"3":{}}}],["mu_1\\chi_1+\\mu_2\\chi_2+\\mu_3\\chi_3",{"_index":12323,"t":{},"b":{"49":{}}}],["mu_i",{"_index":12304,"t":{},"b":{"49":{}}}],["mu_i\\delta",{"_index":12309,"t":{},"b":{"49":{}}}],["mu_i\\p_n",{"_index":12310,"t":{},"b":{"49":{}}}],["mu_j\\p_n",{"_index":12312,"t":{},"b":{"49":{}}}],["mu_t",{"_index":13999,"t":{},"b":{"61":{}}}],["mu_t\\nabla\\epsilon",{"_index":14008,"t":{},"b":{"61":{}}}],["much",{"_index":1067,"t":{},"b":{"3":{},"8":{},"17":{},"51":{},"53":{},"66":{},"72":{}}}],["muinit",{"_index":1329,"t":{},"b":{"3":{}}}],["multi",{"_index":3449,"t":{},"b":{"6":{},"8":{},"12":{},"13":{},"34":{},"36":{},"66":{},"72":{},"76":{}}}],["multicolor",{"_index":8025,"t":{},"b":{"15":{}}}],["multicor",{"_index":3467,"t":{},"b":{"7":{},"8":{}}}],["multidimensionnel",{"_index":9886,"t":{},"b":{"33":{}}}],["multifront",{"_index":3579,"t":{},"b":{"8":{},"15":{}}}],["multigrid",{"_index":7925,"t":{},"b":{"15":{},"16":{},"17":{}}}],["multilevel",{"_index":7923,"t":{},"b":{"15":{},"16":{}}}],["multiphys",{"_index":8322,"t":{},"b":{"17":{}}}],["multipl",{"_index":1176,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"33":{},"34":{},"54":{},"58":{},"60":{},"66":{},"81":{}}}],["multipli",{"_index":963,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"22":{},"41":{},"45":{},"54":{},"66":{},"76":{},"79":{},"80":{}}}],["multithread",{"_index":8315,"t":{},"b":{"17":{}}}],["multivari",{"_index":778,"t":{},"b":{"3":{}}}],["mumin",{"_index":1342,"t":{},"b":{"3":{}}}],["mump",{"_index":870,"t":{},"b":{"3":{},"5":{},"6":{},"7":{},"8":{},"10":{},"12":{},"15":{},"17":{},"26":{},"34":{},"53":{}}}],["mumps_freefem",{"_index":7710,"t":{},"b":{"15":{},"26":{}}}],["mumps_freefem.dl",{"_index":7775,"t":{},"b":{"15":{}}}],["mumps_freefem.dylib",{"_index":7772,"t":{},"b":{"15":{}}}],["mumps_freefem.so",{"_index":7774,"t":{},"b":{"15":{}}}],["mumps_seq",{"_index":10131,"t":{},"b":{"35":{},"53":{}}}],["mumpslparam",{"_index":9741,"t":{},"b":{"26":{}}}],["mumpslparams(42",{"_index":9736,"t":{},"b":{"26":{}}}],["mumpslparams[0",{"_index":9737,"t":{},"b":{"26":{}}}],["mumpslparams[1",{"_index":9738,"t":{},"b":{"26":{}}}],["mumpslparams[ii+2",{"_index":9739,"t":{},"b":{"26":{}}}],["mustrategi",{"_index":1324,"t":{},"b":{"3":{}}}],["mut",{"_index":14061,"t":{},"b":{"61":{}}}],["mut/0.41",{"_index":14116,"t":{},"b":{"61":{}}}],["mutex",{"_index":8440,"t":{},"b":{"18":{}}}],["muwav",{"_index":15433,"t":{},"b":{"81":{}}}],["muwave(v",{"_index":14217,"t":{},"b":{"63":{}}}],["muwave(v,w",{"_index":15430,"t":{},"b":{"81":{}}}],["mv2i",{"_index":6281,"t":{},"b":{"13":{}}}],["mv2x",{"_index":6280,"t":{},"b":{"13":{}}}],["mv2z",{"_index":6282,"t":{},"b":{"13":{}}}],["mvol_{1",{"_index":6690,"t":{},"b":{"13":{}}}],["mvol_{2",{"_index":6695,"t":{},"b":{"13":{}}}],["mvol_{i",{"_index":6686,"t":{},"b":{"13":{}}}],["mwall(hr",{"_index":12518,"t":{},"b":{"51":{}}}],["my_permc",{"_index":7893,"t":{},"b":{"15":{}}}],["my_permr",{"_index":7895,"t":{},"b":{"15":{}}}],["mycode.edp",{"_index":14603,"t":{},"b":{"70":{}}}],["myfeprefix",{"_index":3554,"t":{},"b":{"8":{}}}],["myfeprefix#scalprod(u,v",{"_index":3553,"t":{},"b":{"8":{}}}],["myfeprefix#update(ui",{"_index":3557,"t":{},"b":{"8":{}}}],["myfunct",{"_index":2763,"t":{},"b":{"4":{},"35":{}}}],["myfunction(stack",{"_index":2769,"t":{},"b":{"4":{}}}],["myfunction.cpp",{"_index":2762,"t":{},"b":{"4":{}}}],["myfunction.dylib",{"_index":2814,"t":{},"b":{"4":{}}}],["myfunction.o",{"_index":2813,"t":{},"b":{"4":{}}}],["myparallelscript.edp",{"_index":9957,"t":{},"b":{"35":{}}}],["myprefix",{"_index":3571,"t":{},"b":{"8":{}}}],["myprefix#a(ui",{"_index":3570,"t":{},"b":{"8":{}}}],["mysequentialscript.edp",{"_index":9951,"t":{},"b":{"35":{}}}],["mysteri",{"_index":15352,"t":{},"b":{"80":{}}}],["myvarf",{"_index":3569,"t":{},"b":{"8":{}}}],["myvarf(varfnam",{"_index":3135,"t":{},"b":{"5":{}}}],["myvarfrhs(varfnam",{"_index":3167,"t":{},"b":{"5":{}}}],["m}\\int_{\\omega",{"_index":7368,"t":{},"b":{"14":{}}}],["méthode",{"_index":137,"t":{},"b":{"2":{}}}],["n",{"_index":835,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"27":{},"33":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"46":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"60":{},"64":{},"68":{},"71":{},"72":{},"73":{},"74":{},"77":{},"81":{}}}],["n%50",{"_index":14970,"t":{},"b":{"74":{}}}],["n(\\mathbf{x",{"_index":10915,"t":{},"b":{"41":{}}}],["n(t",{"_index":12177,"t":{},"b":{"48":{}}}],["n)}\\label{derivbasisfunc",{"_index":4255,"t":{},"b":{"11":{}}}],["n)}label{basisfunc",{"_index":4233,"t":{},"b":{"11":{}}}],["n)}{(vec",{"_index":4231,"t":{},"b":{"11":{}}}],["n*2",{"_index":7564,"t":{},"b":{"15":{}}}],["n*dt",{"_index":11205,"t":{},"b":{"41":{}}}],["n*n*12",{"_index":6543,"t":{},"b":{"13":{}}}],["n*tau",{"_index":11037,"t":{},"b":{"41":{}}}],["n+1",{"_index":9067,"t":{},"b":{"21":{},"22":{}}}],["n+1)^3",{"_index":6540,"t":{},"b":{"13":{}}}],["n,\\vec",{"_index":4214,"t":{},"b":{"11":{}}}],["n,m",{"_index":6369,"t":{},"b":{"13":{}}}],["n,m)\\in",{"_index":10533,"t":{},"b":{"39":{}}}],["n,n",{"_index":8534,"t":{},"b":{"19":{}}}],["n,real[int,int",{"_index":6409,"t":{},"b":{"13":{}}}],["n,vec",{"_index":4232,"t":{},"b":{"11":{}}}],["n.i",{"_index":4584,"t":{},"b":{"11":{},"55":{}}}],["n.x",{"_index":4583,"t":{},"b":{"11":{},"55":{}}}],["n.x*dx(u)+n.y*dy(u",{"_index":14488,"t":{},"b":{"67":{}}}],["n.x*u1+n.y*u2)/2)*jump(v",{"_index":15222,"t":{},"b":{"77":{}}}],["n.x*v1",{"_index":15185,"t":{},"b":{"77":{}}}],["n.x*v1+n.y*v2",{"_index":15201,"t":{},"b":{"77":{}}}],["n.x,n.i",{"_index":15202,"t":{},"b":{"77":{}}}],["n.y*dy(u",{"_index":4902,"t":{},"b":{"11":{},"48":{}}}],["n.y*v2",{"_index":15186,"t":{},"b":{"77":{}}}],["n.z",{"_index":4585,"t":{},"b":{"11":{},"55":{}}}],["n/2",{"_index":2892,"t":{},"b":{"4":{}}}],["n/2)*jump(cc",{"_index":15190,"t":{},"b":{"77":{}}}],["n1",{"_index":9281,"t":{},"b":{"22":{}}}],["n<0",{"_index":14409,"t":{},"b":{"66":{},"77":{}}}],["n>0",{"_index":14407,"t":{},"b":{"66":{}}}],["n>1",{"_index":4308,"t":{},"b":{"11":{}}}],["n>3",{"_index":14878,"t":{},"b":{"73":{}}}],["n[0],ni",{"_index":6418,"t":{},"b":{"13":{}}}],["n[1],nz",{"_index":6419,"t":{},"b":{"13":{}}}],["n[2",{"_index":6420,"t":{},"b":{"13":{}}}],["n\\approx",{"_index":3741,"t":{},"b":{"10":{}}}],["n\\cdot",{"_index":15178,"t":{},"b":{"77":{}}}],["n\\n\\n",{"_index":14797,"t":{},"b":{"72":{}}}],["n\\right",{"_index":10924,"t":{},"b":{"41":{}}}],["n\\right)(\\mathbf{x},t",{"_index":10894,"t":{},"b":{"41":{}}}],["n\\time",{"_index":2865,"t":{},"b":{"4":{},"13":{}}}],["n\\to",{"_index":11546,"t":{},"b":{"45":{}}}],["n\\varphi",{"_index":11986,"t":{},"b":{"48":{}}}],["n^0",{"_index":4387,"t":{},"b":{"11":{}}}],["n^1\\log",{"_index":4386,"t":{},"b":{"11":{}}}],["n^2+m^2",{"_index":10532,"t":{},"b":{"39":{}}}],["n^i",{"_index":4388,"t":{},"b":{"11":{}}}],["n^k_k",{"_index":2932,"t":{},"b":{"4":{}}}],["n^k_{i+2}\\}_{i",{"_index":2928,"t":{},"b":{"4":{}}}],["n_",{"_index":6782,"t":{},"b":{"13":{}}}],["n_0",{"_index":4218,"t":{},"b":{"11":{}}}],["n_0(p",{"_index":4219,"t":{},"b":{"11":{}}}],["n_0,\\vec",{"_index":4217,"t":{},"b":{"11":{}}}],["n_1(p",{"_index":4222,"t":{},"b":{"11":{}}}],["n_1,n_2,n_3",{"_index":10658,"t":{},"b":{"40":{}}}],["n_2(p",{"_index":4225,"t":{},"b":{"11":{}}}],["n_2(p),i",{"_index":4244,"t":{},"b":{"11":{}}}],["n_c",{"_index":3218,"t":{},"b":{"5":{},"8":{},"10":{}}}],["n_e",{"_index":6810,"t":{},"b":{"13":{},"51":{}}}],["n_edge)_{1",{"_index":6936,"t":{},"b":{"13":{}}}],["n_i",{"_index":4173,"t":{},"b":{"11":{}}}],["n_i(p",{"_index":4234,"t":{},"b":{"11":{}}}],["n_i(p),vec",{"_index":4230,"t":{},"b":{"11":{}}}],["n_o",{"_index":12464,"t":{},"b":{"51":{}}}],["n_p",{"_index":7491,"t":{},"b":{"15":{}}}],["n_p:&\\nonumb",{"_index":7501,"t":{},"b":{"15":{}}}],["n_q\\time",{"_index":4742,"t":{},"b":{"11":{}}}],["n_t",{"_index":6781,"t":{},"b":{"13":{},"14":{},"41":{},"76":{}}}],["n_t\\nonumb",{"_index":10984,"t":{},"b":{"41":{}}}],["n_t\\quad",{"_index":6809,"t":{},"b":{"13":{}}}],["n_tri)_{1",{"_index":6907,"t":{},"b":{"13":{}}}],["n_v",{"_index":6780,"t":{},"b":{"13":{},"14":{},"76":{}}}],["n_v\\quad",{"_index":6808,"t":{},"b":{"13":{}}}],["n_x",{"_index":4172,"t":{},"b":{"11":{},"43":{}}}],["n_x(x+\\delta",{"_index":11837,"t":{},"b":{"48":{}}}],["n_x(x,y),n_y(x,y),n_z(x,i",{"_index":11835,"t":{},"b":{"48":{}}}],["n_x(x,y)\\delta",{"_index":11836,"t":{},"b":{"48":{}}}],["n_x/\\p",{"_index":11850,"t":{},"b":{"48":{}}}],["n_x}{\\p",{"_index":11841,"t":{},"b":{"48":{}}}],["n_y(x,y)\\delta",{"_index":11845,"t":{},"b":{"48":{}}}],["n_y/\\p",{"_index":11847,"t":{},"b":{"48":{}}}],["n_z",{"_index":4174,"t":{},"b":{"11":{}}}],["n_{1",{"_index":5641,"t":{},"b":{"13":{}}}],["n_{be",{"_index":7322,"t":{},"b":{"14":{}}}],["n_{e",{"_index":2470,"t":{},"b":{"4":{},"11":{}}}],["n_{edg",{"_index":6934,"t":{},"b":{"13":{}}}],["n_{edge})_2",{"_index":6937,"t":{},"b":{"13":{}}}],["n_{i_lj_l",{"_index":4333,"t":{},"b":{"11":{}}}],["n_{i_lj_l}|\\mathbf{e^{i_l}}|f_{j_l}(m^{i_l})\\phi_{i_lj_l",{"_index":4332,"t":{},"b":{"11":{}}}],["n_{k",{"_index":12254,"t":{},"b":{"48":{}}}],["n_{l",{"_index":5637,"t":{},"b":{"13":{}}}],["n_{p",{"_index":7858,"t":{},"b":{"15":{}}}],["n_{t",{"_index":12259,"t":{},"b":{"48":{}}}],["n_{tet",{"_index":6884,"t":{},"b":{"13":{}}}],["n_{tet})_1",{"_index":6903,"t":{},"b":{"13":{}}}],["n_{tet})_2",{"_index":6904,"t":{},"b":{"13":{}}}],["n_{tet})_3",{"_index":6905,"t":{},"b":{"13":{}}}],["n_{tet})_4",{"_index":6906,"t":{},"b":{"13":{}}}],["n_{tri",{"_index":6885,"t":{},"b":{"13":{}}}],["n_{tri})_1",{"_index":6935,"t":{},"b":{"13":{}}}],["n_{tri})_2",{"_index":6908,"t":{},"b":{"13":{}}}],["n_{tri})_3",{"_index":6909,"t":{},"b":{"13":{}}}],["n_{v",{"_index":6728,"t":{},"b":{"13":{}}}],["nabla",{"_index":511,"t":{},"b":{"3":{},"11":{},"14":{},"15":{},"39":{},"41":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"61":{},"64":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"75":{},"76":{},"78":{}}}],["nabla(\\delta\\kappa\\cdot\\nabla",{"_index":15002,"t":{},"b":{"75":{}}}],["nabla(\\kappa(b",{"_index":14987,"t":{},"b":{"75":{}}}],["nabla(\\kappa\\cdot\\nabla\\delta",{"_index":15001,"t":{},"b":{"75":{}}}],["nabla(\\nabla\\varphi",{"_index":14316,"t":{},"b":{"65":{}}}],["nabla(u",{"_index":12036,"t":{},"b":{"48":{},"50":{}}}],["nabla.(\\kappa",{"_index":4458,"t":{},"b":{"11":{}}}],["nabla.\\mathbf{f",{"_index":7310,"t":{},"b":{"14":{}}}],["nabla.\\mathbf{u",{"_index":14241,"t":{},"b":{"64":{}}}],["nabla.\\mathbf{v",{"_index":11235,"t":{},"b":{"42":{}}}],["nabla.u",{"_index":12223,"t":{},"b":{"48":{},"64":{}}}],["nabla.v",{"_index":12219,"t":{},"b":{"48":{},"64":{}}}],["nabla\\cdot",{"_index":11366,"t":{},"b":{"45":{},"61":{},"66":{},"67":{},"73":{},"74":{},"78":{}}}],["nabla\\cdot(\\kappa",{"_index":4452,"t":{},"b":{"11":{}}}],["nabla\\cdot(\\kappa\\nabla",{"_index":14404,"t":{},"b":{"66":{},"68":{},"75":{},"79":{}}}],["nabla\\cdot(\\kappa\\nabla{u",{"_index":14549,"t":{},"b":{"69":{}}}],["nabla\\cdot(\\kappa_t^m\\nabla\\theta",{"_index":13993,"t":{},"b":{"61":{}}}],["nabla\\cdot(\\kappa_t^m\\nabla\\theta^{m+1",{"_index":14017,"t":{},"b":{"61":{}}}],["nabla\\cdot(\\mu_t\\nabla",{"_index":13996,"t":{},"b":{"61":{}}}],["nabla\\cdot(\\mu_t^m\\nabla",{"_index":14020,"t":{},"b":{"61":{}}}],["nabla\\cdot\\mathbf{u",{"_index":11225,"t":{},"b":{"42":{},"74":{}}}],["nabla\\cdot\\nabla",{"_index":14807,"t":{},"b":{"73":{}}}],["nabla\\mathbf{u",{"_index":11229,"t":{},"b":{"42":{}}}],["nabla\\mathbf{u}^t)\\mathbf{n",{"_index":11230,"t":{},"b":{"42":{}}}],["nabla\\mathbf{v",{"_index":11387,"t":{},"b":{"45":{}}}],["nabla\\tim",{"_index":11506,"t":{},"b":{"45":{},"66":{}}}],["nabla\\varphi\\cdot",{"_index":14361,"t":{},"b":{"65":{},"72":{}}}],["nabla\\varphi\\cdot\\nabla",{"_index":14735,"t":{},"b":{"72":{}}}],["nabla^2",{"_index":11787,"t":{},"b":{"47":{}}}],["nabla^{2}",{"_index":15365,"t":{},"b":{"81":{}}}],["nabla_p",{"_index":4250,"t":{},"b":{"11":{}}}],["naca0012",{"_index":5679,"t":{},"b":{"13":{},"48":{},"66":{}}}],["naca0012.ep",{"_index":5693,"t":{},"b":{"13":{}}}],["naca12",{"_index":14385,"t":{},"b":{"66":{}}}],["nad",{"_index":15200,"t":{},"b":{"77":{}}}],["nadapt",{"_index":1665,"t":{},"b":{"3":{},"20":{},"25":{}}}],["nair",{"_index":12495,"t":{},"b":{"51":{}}}],["name",{"_index":509,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"35":{},"41":{},"48":{},"53":{},"54":{},"56":{},"60":{},"69":{},"71":{},"72":{},"76":{},"77":{}}}],["namespac",{"_index":2527,"t":{},"b":{"4":{}}}],["nan",{"_index":393,"t":{},"b":{"2":{},"21":{},"54":{}}}],["nan([str",{"_index":13656,"t":{},"b":{"54":{}}}],["nataf",{"_index":3686,"t":{},"b":{"10":{},"15":{},"29":{}}}],["nation",{"_index":8101,"t":{},"b":{"15":{}}}],["natur",{"_index":3393,"t":{},"b":{"5":{},"8":{},"10":{},"13":{},"15":{},"16":{},"40":{},"42":{},"54":{}}}],["natural_convection.edp",{"_index":3451,"t":{},"b":{"6":{}}}],["natural_convection_3d_obstacle.edp",{"_index":3452,"t":{},"b":{"6":{}}}],["naver",{"_index":14889,"t":{},"b":{"73":{}}}],["navier",{"_index":298,"t":{"45":{},"73":{},"74":{}},"b":{"2":{},"4":{},"6":{},"12":{},"15":{},"16":{},"41":{},"42":{},"45":{},"50":{},"61":{},"73":{},"74":{},"78":{}}}],["navierstok",{"_index":14082,"t":{},"b":{"61":{}}}],["navierstokes(0",{"_index":9390,"t":{},"b":{"25":{}}}],["navierstokes([ux",{"_index":9380,"t":{},"b":{"25":{}}}],["navierstokes(uph",{"_index":9388,"t":{},"b":{"25":{}}}],["navier–stok",{"_index":8263,"t":{},"b":{"16":{},"17":{}}}],["nb",{"_index":2539,"t":{},"b":{"4":{},"13":{},"21":{},"24":{},"64":{}}}],["nbarrow",{"_index":13660,"t":{},"b":{"54":{}}}],["nbbe",{"_index":2338,"t":{},"b":{"4":{}}}],["nbboundaryel",{"_index":5319,"t":{},"b":{"13":{}}}],["nbc",{"_index":7188,"t":{},"b":{"13":{}}}],["nbcoef",{"_index":8987,"t":{},"b":{"21":{}}}],["nbdof",{"_index":2433,"t":{},"b":{"4":{}}}],["nbe",{"_index":5949,"t":{},"b":{"13":{}}}],["nbedg",{"_index":6945,"t":{},"b":{"13":{}}}],["nbiso",{"_index":1496,"t":{},"b":{"3":{},"15":{},"20":{},"25":{},"26":{},"45":{},"48":{},"51":{},"54":{},"81":{}}}],["nbiter",{"_index":541,"t":{},"b":{"3":{},"5":{},"15":{},"20":{},"26":{},"38":{},"42":{},"45":{},"54":{},"61":{},"75":{}}}],["nbiterlin",{"_index":752,"t":{},"b":{"3":{},"20":{},"75":{}}}],["nbjacobi",{"_index":5553,"t":{},"b":{"13":{},"41":{},"54":{},"67":{}}}],["nbnomanifold",{"_index":6582,"t":{},"b":{"13":{}}}],["nboffacetcl",{"_index":6696,"t":{},"b":{"13":{},"53":{}}}],["nbofhol",{"_index":6347,"t":{},"b":{"13":{},"53":{}}}],["nbofregion",{"_index":6128,"t":{},"b":{"13":{},"24":{},"25":{},"48":{},"53":{}}}],["nbp",{"_index":13503,"t":{},"b":{"54":{}}}],["nbproc",{"_index":9954,"t":{},"b":{"35":{}}}],["nbregul",{"_index":7002,"t":{},"b":{"13":{}}}],["nbsmooth",{"_index":5552,"t":{},"b":{"13":{},"41":{},"54":{},"67":{}}}],["nbt",{"_index":2312,"t":{},"b":{"4":{},"66":{}}}],["nbtetrahedra",{"_index":6917,"t":{},"b":{"13":{}}}],["nbtriangl",{"_index":5268,"t":{},"b":{"13":{}}}],["nbv",{"_index":2281,"t":{},"b":{"4":{}}}],["nbv,nbe,nbt,nbq",{"_index":2349,"t":{},"b":{"4":{}}}],["nbvertic",{"_index":5288,"t":{},"b":{"13":{}}}],["nbvx",{"_index":1507,"t":{},"b":{"3":{},"13":{},"20":{},"24":{},"41":{},"48":{},"54":{},"67":{},"74":{}}}],["nc",{"_index":3623,"t":{},"b":{"8":{},"13":{},"15":{},"26":{}}}],["ncav",{"_index":12493,"t":{},"b":{"51":{}}}],["nce",{"_index":2260,"t":{},"b":{"4":{}}}],["ncolumn",{"_index":13966,"t":{},"b":{"60":{}}}],["ncomm",{"_index":7416,"t":{},"b":{"15":{}}}],["ncomm1(mpicommworld",{"_index":7412,"t":{},"b":{"15":{}}}],["ncomm2(comm",{"_index":7414,"t":{},"b":{"15":{}}}],["ncurs",{"_index":10106,"t":{},"b":{"35":{}}}],["ncv",{"_index":10527,"t":{},"b":{"39":{},"51":{},"62":{}}}],["ndt",{"_index":11633,"t":{},"b":{"45":{}}}],["ne",{"_index":2256,"t":{},"b":{"4":{},"51":{},"55":{}}}],["ne(i",{"_index":2343,"t":{},"b":{"4":{}}}],["ne^2*(region",{"_index":12499,"t":{},"b":{"51":{}}}],["near",{"_index":1353,"t":{},"b":{"3":{},"4":{},"12":{},"13":{},"40":{},"62":{}}}],["nearest",{"_index":4393,"t":{},"b":{"11":{},"54":{}}}],["nearli",{"_index":2165,"t":{},"b":{"3":{}}}],["neca",{"_index":249,"t":{},"b":{"2":{}}}],["necas2017",{"_index":248,"t":{},"b":{"2":{},"40":{}}}],["necessari",{"_index":1652,"t":{},"b":{"3":{},"5":{},"8":{},"13":{},"15":{},"33":{},"35":{},"36":{},"39":{},"52":{},"65":{},"66":{},"71":{},"75":{}}}],["necessarili",{"_index":1907,"t":{},"b":{"3":{},"8":{},"48":{}}}],["nedelec",{"_index":3747,"t":{},"b":{"10":{},"11":{}}}],["need",{"_index":508,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"12":{},"13":{},"15":{},"19":{},"26":{},"35":{},"39":{},"53":{},"54":{},"60":{},"68":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["neg",{"_index":1208,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"45":{}}}],["neigbor",{"_index":3648,"t":{},"b":{"8":{}}}],["neighbor",{"_index":3060,"t":{},"b":{"5":{},"8":{},"10":{}}}],["neighborhood",{"_index":6527,"t":{},"b":{"13":{},"15":{},"40":{},"53":{}}}],["neo",{"_index":8260,"t":{"37":{}},"b":{"16":{},"37":{},"46":{},"51":{}}}],["neohookeaninc",{"_index":10401,"t":{},"b":{"37":{}}}],["neq",{"_index":3034,"t":{},"b":{"5":{},"13":{},"62":{},"65":{},"66":{}}}],["nerr",{"_index":8618,"t":{},"b":{"20":{}}}],["nest",{"_index":3397,"t":{},"b":{"5":{},"16":{}}}],["netg",{"_index":13410,"t":{},"b":{"53":{}}}],["netgen",{"_index":13409,"t":{},"b":{"53":{}}}],["netgload",{"_index":13412,"t":{},"b":{"53":{}}}],["netgstl",{"_index":13411,"t":{},"b":{"53":{}}}],["neumann",{"_index":3234,"t":{},"b":{"5":{},"9":{},"10":{},"11":{},"36":{},"41":{},"65":{},"69":{},"71":{},"72":{}}}],["neumman",{"_index":6971,"t":{},"b":{"13":{}}}],["nev",{"_index":10501,"t":{},"b":{"39":{},"51":{},"54":{},"62":{}}}],["never",{"_index":7518,"t":{},"b":{"15":{},"18":{}}}],["nevertheless",{"_index":14445,"t":{},"b":{"67":{},"70":{}}}],["new",{"_index":82,"t":{"36":{}},"b":{"2":{},"3":{},"4":{},"5":{},"9":{},"11":{},"12":{},"13":{},"15":{},"18":{},"20":{},"21":{},"30":{},"33":{},"34":{},"35":{},"36":{},"43":{},"48":{},"50":{},"54":{},"56":{},"60":{},"70":{},"73":{},"77":{}}}],["new2old",{"_index":4092,"t":{},"b":{"11":{},"13":{},"22":{}}}],["newer",{"_index":2738,"t":{},"b":{"4":{}}}],["newest",{"_index":10051,"t":{},"b":{"35":{}}}],["newlabel",{"_index":6746,"t":{},"b":{"13":{}}}],["newlabel,nbofregion",{"_index":6753,"t":{},"b":{"13":{}}}],["newlabel2",{"_index":6755,"t":{},"b":{"13":{}}}],["newlabel2,sizeofvolum",{"_index":6763,"t":{},"b":{"13":{}}}],["newmacro",{"_index":9174,"t":{},"b":{"21":{},"60":{}}}],["newsolv",{"_index":13413,"t":{},"b":{"53":{}}}],["newton",{"_index":349,"t":{"73":{}},"b":{"2":{},"3":{},"16":{},"37":{},"46":{},"47":{},"61":{},"73":{},"74":{},"75":{}}}],["newton'",{"_index":10424,"t":{},"b":{"37":{},"46":{}}}],["newton’",{"_index":10236,"t":{},"b":{"37":{}}}],["newuoa",{"_index":13319,"t":{},"b":{"53":{}}}],["next",{"_index":2172,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["ngradstor",{"_index":1960,"t":{},"b":{"3":{}}}],["nh",{"_index":4867,"t":{},"b":{"11":{},"48":{}}}],["nh(th",{"_index":4866,"t":{},"b":{"11":{},"48":{}}}],["nicolson",{"_index":10992,"t":{},"b":{"41":{}}}],["nit",{"_index":7991,"t":{},"b":{"15":{}}}],["niter",{"_index":4999,"t":{},"b":{"11":{},"73":{}}}],["njpart",{"_index":7546,"t":{},"b":{"15":{},"26":{}}}],["nlayer",{"_index":9459,"t":{},"b":{"26":{}}}],["nlcg",{"_index":686,"t":{},"b":{"3":{},"20":{},"54":{},"75":{}}}],["nlcg(dj",{"_index":539,"t":{},"b":{"3":{},"20":{}}}],["nloc",{"_index":7692,"t":{},"b":{"15":{},"26":{}}}],["nlock",{"_index":8394,"t":{},"b":{"18":{}}}],["nlopt",{"_index":726,"t":{},"b":{"3":{},"29":{},"34":{},"53":{}}}],["nloptauglag",{"_index":13351,"t":{},"b":{"53":{}}}],["nloptauglag(j",{"_index":2123,"t":{},"b":{"3":{}}}],["nloptauglageq",{"_index":13352,"t":{},"b":{"53":{}}}],["nloptbobyqa",{"_index":13346,"t":{},"b":{"53":{}}}],["nloptcobyla",{"_index":13341,"t":{},"b":{"53":{}}}],["nloptcrs2",{"_index":13339,"t":{},"b":{"53":{}}}],["nloptdirect",{"_index":13320,"t":{},"b":{"53":{}}}],["nloptdirectl",{"_index":13321,"t":{},"b":{"53":{}}}],["nloptdirectlnosc",{"_index":13325,"t":{},"b":{"53":{}}}],["nloptdirectlrand",{"_index":13322,"t":{},"b":{"53":{}}}],["nloptdirectlrandnosc",{"_index":13326,"t":{},"b":{"53":{}}}],["nloptdirectnosc",{"_index":13324,"t":{},"b":{"53":{}}}],["nloptdirectsc",{"_index":13323,"t":{},"b":{"53":{}}}],["nloptisr",{"_index":13347,"t":{},"b":{"53":{}}}],["nloptlbfg",{"_index":13331,"t":{},"b":{"53":{}}}],["nloptmlsl",{"_index":13349,"t":{},"b":{"53":{}}}],["nloptmlslld",{"_index":13350,"t":{},"b":{"53":{}}}],["nloptmma",{"_index":13340,"t":{},"b":{"53":{}}}],["nloptmma(j",{"_index":2132,"t":{},"b":{"3":{}}}],["nloptneldermead",{"_index":13344,"t":{},"b":{"53":{}}}],["nloptnewuoa",{"_index":13342,"t":{},"b":{"53":{}}}],["nloptnewuoabound",{"_index":13343,"t":{},"b":{"53":{}}}],["nloptorigdirect",{"_index":13327,"t":{},"b":{"53":{}}}],["nloptorigdirectl",{"_index":13328,"t":{},"b":{"53":{}}}],["nloptpraxi",{"_index":13332,"t":{},"b":{"53":{}}}],["nloptsbplx",{"_index":13345,"t":{},"b":{"53":{}}}],["nloptslsqp",{"_index":13348,"t":{},"b":{"53":{}}}],["nloptslsqp(j",{"_index":2142,"t":{},"b":{"3":{}}}],["nloptstogo",{"_index":13329,"t":{},"b":{"53":{}}}],["nloptstogorand",{"_index":13330,"t":{},"b":{"53":{}}}],["nlopttnewton",{"_index":13335,"t":{},"b":{"53":{}}}],["nlopttnewtonprecond",{"_index":13337,"t":{},"b":{"53":{}}}],["nlopttnewtonprecondrestart",{"_index":13338,"t":{},"b":{"53":{}}}],["nlopttnewtonrestart",{"_index":13336,"t":{},"b":{"53":{}}}],["nloptvar1",{"_index":13333,"t":{},"b":{"53":{}}}],["nloptvar2",{"_index":13334,"t":{},"b":{"53":{}}}],["nloptxxxxxx(j",{"_index":1904,"t":{},"b":{"3":{}}}],["nlower",{"_index":12334,"t":{},"b":{"49":{}}}],["nm",{"_index":12461,"t":{},"b":{"51":{}}}],["nm^2*(region",{"_index":12498,"t":{},"b":{"51":{}}}],["nmm",{"_index":8391,"t":{},"b":{"18":{}}}],["nn",{"_index":1364,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"45":{},"48":{},"54":{},"61":{},"63":{},"74":{},"78":{}}}],["nn*3",{"_index":11592,"t":{},"b":{"45":{}}}],["nn[0",{"_index":6024,"t":{},"b":{"13":{}}}],["nn[1",{"_index":6026,"t":{},"b":{"13":{}}}],["nn[2",{"_index":6028,"t":{},"b":{"13":{}}}],["nnb",{"_index":9260,"t":{},"b":{"22":{}}}],["nned",{"_index":9450,"t":{},"b":{"26":{}}}],["nni",{"_index":9261,"t":{},"b":{"22":{},"53":{},"54":{}}}],["nnn",{"_index":9442,"t":{},"b":{"26":{}}}],["nnn+nlayer",{"_index":9461,"t":{},"b":{"26":{}}}],["nnn0",{"_index":9445,"t":{},"b":{"26":{}}}],["nnn1",{"_index":9449,"t":{},"b":{"26":{}}}],["nnplu",{"_index":14038,"t":{},"b":{"61":{}}}],["nnx",{"_index":13404,"t":{},"b":{"53":{},"54":{}}}],["nnz",{"_index":7985,"t":{},"b":{"15":{},"53":{}}}],["no^2*(region",{"_index":12497,"t":{},"b":{"51":{}}}],["noconfirm",{"_index":10089,"t":{},"b":{"35":{}}}],["nodal",{"_index":2456,"t":{},"b":{"4":{},"71":{}}}],["node",{"_index":2457,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"76":{},"80":{}}}],["noequil",{"_index":7887,"t":{},"b":{"15":{}}}],["noglob",{"_index":3114,"t":{},"b":{"5":{},"9":{}}}],["nold",{"_index":12564,"t":{},"b":{"51":{}}}],["nomeshgener",{"_index":5606,"t":{},"b":{"13":{},"54":{}}}],["non",{"_index":195,"t":{"46":{},"47":{}},"b":{"2":{},"3":{},"5":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"20":{},"26":{},"33":{},"34":{},"37":{},"38":{},"39":{},"40":{},"43":{},"46":{},"47":{},"48":{},"54":{},"62":{},"65":{},"66":{},"72":{},"81":{}}}],["nonconform",{"_index":4257,"t":{},"b":{"11":{}}}],["none",{"_index":1303,"t":{},"b":{"3":{},"5":{},"9":{},"11":{},"15":{},"21":{},"38":{},"53":{},"54":{}}}],["nonipopt_exception_thrown",{"_index":1235,"t":{},"b":{"3":{}}}],["nonlin",{"_index":11775,"t":{},"b":{"46":{}}}],["nonlin([uu",{"_index":11755,"t":{},"b":{"46":{}}}],["nonlinear",{"_index":29,"t":{},"b":{"2":{},"3":{},"6":{},"12":{},"16":{},"17":{},"37":{},"46":{},"51":{},"73":{},"75":{},"79":{}}}],["nonlinearli",{"_index":224,"t":{},"b":{"2":{}}}],["nonoverlap",{"_index":8292,"t":{},"b":{"16":{}}}],["nonselfadjoint",{"_index":172,"t":{},"b":{"2":{}}}],["nonsymmetr",{"_index":8155,"t":{},"b":{"15":{}}}],["nonumb",{"_index":3229,"t":{},"b":{"5":{},"40":{},"41":{},"51":{}}}],["nonumber\\end{split",{"_index":12426,"t":{},"b":{"51":{}}}],["nonzero",{"_index":8157,"t":{},"b":{"15":{},"21":{}}}],["norefin",{"_index":7896,"t":{},"b":{"15":{}}}],["norm",{"_index":2308,"t":{},"b":{"4":{},"5":{},"15":{},"37":{},"41":{},"46":{},"48":{},"50":{}}}],["norm(v[].max",{"_index":8784,"t":{},"b":{"21":{}}}],["norm(v[].min",{"_index":8785,"t":{},"b":{"21":{}}}],["normal",{"_index":777,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"19":{},"27":{},"36":{},"37":{},"40":{},"42":{},"45":{},"48":{},"49":{},"55":{},"65":{},"66":{},"72":{},"77":{}}}],["normal’",{"_index":4586,"t":{},"b":{"11":{}}}],["norowperm",{"_index":7894,"t":{},"b":{"15":{}}}],["north",{"_index":308,"t":{},"b":{"2":{}}}],["noshowbas",{"_index":12594,"t":{},"b":{"52":{}}}],["noshowpo",{"_index":12600,"t":{},"b":{"52":{}}}],["noslip",{"_index":9362,"t":{},"b":{"25":{}}}],["not\\in",{"_index":4804,"t":{},"b":{"11":{}}}],["not_enough_degrees_of_freedom",{"_index":1231,"t":{},"b":{"3":{}}}],["notaregion",{"_index":13764,"t":{},"b":{"55":{}}}],["notat",{"_index":2426,"t":{},"b":{"4":{},"11":{},"12":{},"13":{},"14":{},"37":{},"38":{},"46":{},"52":{},"59":{},"68":{},"75":{}}}],["notationslogo",{"_index":7262,"t":{"14":{}},"b":{}}],["note",{"_index":560,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"11":{},"13":{},"15":{},"19":{},"32":{},"35":{},"37":{},"38":{},"39":{},"41":{},"45":{},"48":{},"50":{},"52":{},"54":{},"58":{},"59":{},"60":{},"62":{},"66":{},"69":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{}}}],["notepad++,an",{"_index":10161,"t":{},"b":{"35":{}}}],["noth",{"_index":485,"t":{},"b":{"3":{},"19":{},"35":{},"41":{},"55":{}}}],["notic",{"_index":5227,"t":{},"b":{"13":{},"41":{},"42":{},"45":{},"49":{},"72":{},"76":{},"77":{}}}],["notion",{"_index":2337,"t":{},"b":{"4":{}}}],["notran",{"_index":7884,"t":{},"b":{"15":{}}}],["notsplittedmesh.ep",{"_index":5660,"t":{},"b":{"13":{}}}],["now",{"_index":2660,"t":{},"b":{"4":{},"7":{},"8":{},"11":{},"13":{},"15":{},"19":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"47":{},"48":{},"50":{},"51":{},"66":{},"68":{},"72":{},"76":{},"77":{},"79":{}}}],["np",{"_index":1667,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"15":{},"20":{},"26":{},"52":{}}}],["np/2",{"_index":1709,"t":{},"b":{"3":{},"20":{}}}],["npart",{"_index":7661,"t":{},"b":{"15":{},"26":{}}}],["npcol",{"_index":7857,"t":{},"b":{"15":{}}}],["npij",{"_index":9448,"t":{},"b":{"26":{}}}],["nppi",{"_index":2448,"t":{},"b":{"4":{}}}],["nprow",{"_index":7856,"t":{},"b":{"15":{}}}],["nq",{"_index":2258,"t":{},"b":{"4":{}}}],["nrow",{"_index":13964,"t":{},"b":{"60":{}}}],["nrs_k",{"_index":2396,"t":{},"b":{"4":{}}}],["ns",{"_index":2267,"t":{},"b":{"4":{},"18":{},"25":{},"26":{},"45":{},"61":{}}}],["ns.i",{"_index":4588,"t":{},"b":{"11":{}}}],["ns.x",{"_index":4587,"t":{},"b":{"11":{}}}],["ns.z",{"_index":4589,"t":{},"b":{"11":{}}}],["ns](int",{"_index":2270,"t":{},"b":{"4":{}}}],["nsprojp.ep",{"_index":14978,"t":{},"b":{"74":{}}}],["nsproju.ep",{"_index":14979,"t":{},"b":{"74":{}}}],["nsrh",{"_index":9389,"t":{},"b":{"25":{}}}],["nsuzawacahouetchabart.edp",{"_index":11559,"t":{},"b":{"45":{}}}],["nt",{"_index":2257,"t":{},"b":{"4":{},"13":{}}}],["nt](int",{"_index":2387,"t":{},"b":{"4":{}}}],["ntb",{"_index":6542,"t":{},"b":{"13":{}}}],["nte",{"_index":13757,"t":{},"b":{"55":{}}}],["ntonedg",{"_index":13756,"t":{},"b":{"55":{},"77":{}}}],["ntonedge)*vh*(al*abs(n.x*u1+n.y*u2",{"_index":15221,"t":{},"b":{"77":{}}}],["ntonedge)*w*(al*abs(n",{"_index":15189,"t":{},"b":{"77":{}}}],["nu",{"_index":3267,"t":{},"b":{"5":{},"15":{},"22":{},"40":{},"45":{},"49":{},"61":{},"64":{},"73":{},"74":{},"80":{}}}],["nu(1:3",{"_index":2313,"t":{},"b":{"4":{}}}],["nu(i",{"_index":2326,"t":{},"b":{"4":{}}}],["nu*(dx(u)*dx(uu",{"_index":15331,"t":{},"b":{"80":{}}}],["nu*(dx(u)*dx(v",{"_index":12343,"t":{},"b":{"49":{}}}],["nu*(dx(u)*dx(w",{"_index":14949,"t":{},"b":{"74":{}}}],["nu*(dx(v)*dx(w",{"_index":14957,"t":{},"b":{"74":{}}}],["nu*(grad(u1",{"_index":11602,"t":{},"b":{"45":{}}}],["nu*pm",{"_index":11632,"t":{},"b":{"45":{}}}],["nu/cnu",{"_index":14885,"t":{},"b":{"73":{}}}],["nu/sqrt(0.09",{"_index":14043,"t":{},"b":{"61":{}}}],["nu\\delta",{"_index":11519,"t":{},"b":{"45":{},"74":{}}}],["nu\\delta\\mathbf{u",{"_index":14892,"t":{},"b":{"74":{}}}],["nu_i",{"_index":10649,"t":{},"b":{"40":{},"48":{}}}],["nu_x",{"_index":11857,"t":{},"b":{"48":{}}}],["nube(1:2",{"_index":2339,"t":{},"b":{"4":{}}}],["nubmer",{"_index":5326,"t":{},"b":{"13":{}}}],["nuedg",{"_index":13759,"t":{},"b":{"55":{}}}],["nuep",{"_index":14044,"t":{},"b":{"61":{}}}],["nufin",{"_index":14822,"t":{},"b":{"73":{}}}],["null",{"_index":1112,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"13":{},"15":{},"81":{}}}],["number",{"_index":521,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"17":{},"19":{},"21":{},"24":{},"26":{},"30":{},"33":{},"39":{},"41":{},"44":{},"45":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"60":{},"61":{},"62":{},"63":{},"66":{},"69":{},"70":{},"72":{},"74":{},"75":{},"76":{},"78":{},"79":{},"81":{}}}],["numberslogo",{"_index":14168,"t":{"63":{}},"b":{}}],["numbers}\\right.\\right",{"_index":15108,"t":{},"b":{"76":{}}}],["numbr",{"_index":6552,"t":{},"b":{"13":{}}}],["numer",{"_index":102,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"12":{},"15":{},"16":{},"19":{},"29":{},"30":{},"48":{},"51":{},"61":{},"67":{}}}],["numerical",{"_index":12032,"t":{},"b":{"48":{}}}],["numu",{"_index":14042,"t":{},"b":{"61":{}}}],["numériqu",{"_index":209,"t":{},"b":{"2":{}}}],["nupart",{"_index":9432,"t":{},"b":{"26":{}}}],["nupart(thg.nt",{"_index":9431,"t":{},"b":{"26":{}}}],["nupart.n",{"_index":9434,"t":{},"b":{"26":{}}}],["nupart[i",{"_index":9436,"t":{},"b":{"26":{}}}],["nupper",{"_index":12331,"t":{},"b":{"49":{}}}],["nutriangl",{"_index":13761,"t":{},"b":{"55":{}}}],["nutshel",{"_index":15361,"t":{},"b":{"81":{}}}],["nv",{"_index":2255,"t":{},"b":{"4":{},"11":{},"13":{}}}],["nvb",{"_index":6539,"t":{},"b":{"13":{}}}],["nvg",{"_index":2259,"t":{},"b":{"4":{}}}],["nw",{"_index":2815,"t":{},"b":{"4":{},"18":{},"35":{}}}],["nw.ex",{"_index":9940,"t":{},"b":{"35":{}}}],["nx",{"_index":6023,"t":{},"b":{"13":{},"21":{},"55":{}}}],["nx*ni",{"_index":8766,"t":{},"b":{"21":{}}}],["nx*y/ni",{"_index":8770,"t":{},"b":{"21":{}}}],["nx,ny,nz",{"_index":6382,"t":{},"b":{"13":{}}}],["nx/2",{"_index":8792,"t":{},"b":{"21":{}}}],["nxm",{"_index":9062,"t":{},"b":{"21":{}}}],["nxn",{"_index":8639,"t":{},"b":{"20":{}}}],["nxnxn",{"_index":9395,"t":{},"b":{"26":{}}}],["nxyz",{"_index":6161,"t":{},"b":{"13":{},"40":{}}}],["ny",{"_index":6025,"t":{},"b":{"13":{},"21":{},"55":{}}}],["ny/2",{"_index":8793,"t":{},"b":{"21":{}}}],["nz",{"_index":6027,"t":{},"b":{"13":{},"22":{},"55":{}}}],["n{\\int_{\\gamma_{13",{"_index":14539,"t":{},"b":{"68":{}}}],["n{\\int_{\\omega",{"_index":14538,"t":{},"b":{"68":{}}}],["n}\\in",{"_index":3523,"t":{},"b":{"8":{}}}],["n}\\time",{"_index":3536,"t":{},"b":{"8":{}}}],["n}_i",{"_index":3516,"t":{},"b":{"8":{},"10":{}}}],["n}_i)_{i",{"_index":3514,"t":{},"b":{"8":{},"10":{}}}],["n}_j",{"_index":3610,"t":{},"b":{"8":{}}}],["n}{\\frac{j_{\\lambda}(x)\\cos(\\lambda\\pi",{"_index":13737,"t":{},"b":{"54":{}}}],["n×m",{"_index":6370,"t":{},"b":{"13":{}}}],["nédélec",{"_index":3368,"t":{},"b":{"5":{}}}],["o",{"_index":219,"t":{},"b":{"2":{},"4":{},"11":{},"18":{},"33":{},"35":{}}}],["o(\\delta",{"_index":14814,"t":{},"b":{"73":{}}}],["o(\\tau",{"_index":11130,"t":{},"b":{"41":{}}}],["o(h",{"_index":4282,"t":{},"b":{"11":{}}}],["o(h^2",{"_index":14789,"t":{},"b":{"72":{}}}],["o,n",{"_index":5638,"t":{},"b":{"13":{}}}],["o_i,n_l",{"_index":6013,"t":{},"b":{"13":{}}}],["o_{1",{"_index":5640,"t":{},"b":{"13":{}}}],["o_{n_{l}},n_{n_{l",{"_index":5642,"t":{},"b":{"13":{}}}],["objc",{"_index":10088,"t":{},"b":{"35":{}}}],["object",{"_index":764,"t":{},"b":{"3":{},"13":{},"15":{},"39":{},"60":{},"63":{},"64":{},"81":{}}}],["object_insid",{"_index":1868,"t":{},"b":{"3":{},"20":{}}}],["objfact",{"_index":1829,"t":{},"b":{"3":{},"20":{}}}],["objfact*hessianarea(x",{"_index":1830,"t":{},"b":{"3":{},"20":{}}}],["objvalu",{"_index":1340,"t":{},"b":{"3":{}}}],["obligatori",{"_index":1912,"t":{},"b":{"3":{}}}],["observ",{"_index":10872,"t":{},"b":{"40":{},"75":{}}}],["obsolet",{"_index":5575,"t":{},"b":{"13":{}}}],["obtain",{"_index":1201,"t":{},"b":{"3":{},"5":{},"13":{},"15":{},"19":{},"37":{},"40":{},"41":{},"45":{},"48":{},"49":{},"51":{},"60":{},"66":{},"67":{},"72":{}}}],["obtain.(remark",{"_index":7084,"t":{},"b":{"13":{}}}],["obviou",{"_index":1917,"t":{},"b":{"3":{}}}],["obvious",{"_index":1280,"t":{},"b":{"3":{},"75":{}}}],["occupi",{"_index":11951,"t":{},"b":{"48":{},"49":{}}}],["occur",{"_index":1106,"t":{},"b":{"3":{},"40":{},"49":{}}}],["ocean",{"_index":5112,"t":{},"b":{"12":{}}}],["octav",{"_index":5129,"t":{},"b":{"12":{},"19":{},"71":{},"81":{}}}],["octavelogo",{"_index":14618,"t":{"71":{}},"b":{}}],["od",{"_index":15152,"t":{},"b":{"77":{}}}],["odd",{"_index":2896,"t":{},"b":{"4":{}}}],["oden",{"_index":331,"t":{},"b":{"2":{}}}],["offer",{"_index":3398,"t":{},"b":{"5":{},"8":{},"13":{},"17":{},"33":{}}}],["offic",{"_index":10141,"t":{},"b":{"35":{}}}],["offici",{"_index":9897,"t":{},"b":{"34":{}}}],["offset",{"_index":8432,"t":{},"b":{"18":{}}}],["ofstream",{"_index":4847,"t":{},"b":{"11":{},"13":{},"19":{},"21":{},"26":{},"27":{},"41":{},"51":{},"52":{},"54":{},"67":{},"72":{},"75":{},"79":{}}}],["ogden",{"_index":193,"t":{},"b":{"2":{}}}],["ogden1984",{"_index":192,"t":{},"b":{"2":{},"37":{}}}],["ohtsuka",{"_index":260,"t":{},"b":{"2":{},"29":{},"34":{}}}],["ohtsuka2000",{"_index":259,"t":{},"b":{"2":{},"40":{}}}],["oientat",{"_index":6158,"t":{},"b":{"13":{}}}],["ok",{"_index":749,"t":{},"b":{"3":{},"4":{},"13":{},"18":{},"20":{}}}],["old",{"_index":2325,"t":{},"b":{"4":{},"11":{},"13":{},"24":{},"27":{},"33":{},"35":{},"54":{}}}],["old2new",{"_index":4090,"t":{},"b":{"11":{},"13":{},"22":{}}}],["old2new(0:th.nv",{"_index":4086,"t":{},"b":{"11":{},"22":{}}}],["older",{"_index":6200,"t":{},"b":{"13":{},"35":{}}}],["oldest",{"_index":10047,"t":{},"b":{"35":{}}}],["oldu",{"_index":11028,"t":{},"b":{"41":{}}}],["oldu*v",{"_index":11040,"t":{},"b":{"41":{}}}],["oldu1",{"_index":1982,"t":{},"b":{"3":{}}}],["oldu2",{"_index":1983,"t":{},"b":{"3":{}}}],["olivi",{"_index":5,"t":{},"b":{"2":{},"29":{}}}],["olverlap",{"_index":9423,"t":{},"b":{"26":{}}}],["omega",{"_index":1397,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"14":{},"15":{},"37":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"49":{},"50":{},"51":{},"54":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"75":{},"76":{},"77":{},"79":{}}}],["omega&,\\qquad",{"_index":11978,"t":{},"b":{"48":{}}}],["omega/c",{"_index":12419,"t":{},"b":{"51":{}}}],["omega\\),i.",{"_index":7319,"t":{},"b":{"14":{}}}],["omega\\end{split",{"_index":11368,"t":{},"b":{"45":{}}}],["omega\\setminu",{"_index":10757,"t":{},"b":{"40":{},"48":{}}}],["omega\\subset",{"_index":14345,"t":{},"b":{"65":{}}}],["omega\\subset\\mathbb{r}^2",{"_index":10618,"t":{},"b":{"40":{},"76":{}}}],["omega\\subset\\mathbb{r}^{2",{"_index":1355,"t":{},"b":{"3":{}}}],["omega\\tim",{"_index":10617,"t":{},"b":{"40":{},"41":{},"74":{}}}],["omega\\times(0,t",{"_index":14527,"t":{},"b":{"68":{},"77":{},"79":{}}}],["omega\\times]0,t[\\subset",{"_index":14346,"t":{},"b":{"65":{}}}],["omega\\to",{"_index":7316,"t":{},"b":{"14":{}}}],["omega^0",{"_index":11322,"t":{},"b":{"43":{}}}],["omega^0_h",{"_index":4413,"t":{},"b":{"11":{}}}],["omega^n",{"_index":11323,"t":{},"b":{"43":{}}}],["omega^{72",{"_index":11359,"t":{},"b":{"43":{}}}],["omega^{n+1",{"_index":11336,"t":{},"b":{"43":{}}}],["omega_0",{"_index":10203,"t":{},"b":{"37":{}}}],["omega_0\\cap\\omega_1",{"_index":4973,"t":{},"b":{"11":{}}}],["omega_0^{t",{"_index":10208,"t":{},"b":{"37":{}}}],["omega_1",{"_index":4367,"t":{},"b":{"11":{},"13":{},"38":{}}}],["omega_1\\cap\\omega_2\\neq\\emptyset",{"_index":10446,"t":{},"b":{"38":{}}}],["omega_1\\cup\\omega_2\\quad",{"_index":10436,"t":{},"b":{"38":{}}}],["omega_2",{"_index":4368,"t":{},"b":{"11":{},"38":{}}}],["omega_\\el",{"_index":4608,"t":{},"b":{"11":{}}}],["omega_h",{"_index":4618,"t":{},"b":{"11":{},"13":{},"14":{},"76":{}}}],["omega_i",{"_index":3192,"t":{},"b":{"5":{},"13":{},"15":{},"38":{},"49":{}}}],["omega_i,~i",{"_index":4977,"t":{},"b":{"11":{}}}],["omega_j",{"_index":4600,"t":{},"b":{"11":{}}}],["omega_{0",{"_index":10183,"t":{},"b":{"37":{}}}],["omega_{1}}\\int_{t",{"_index":4531,"t":{},"b":{"11":{}}}],["omega_{1}}}\\int_{\\p",{"_index":4547,"t":{},"b":{"11":{}}}],["omega_{2d",{"_index":5955,"t":{},"b":{"13":{}}}],["omega_{3d",{"_index":5954,"t":{},"b":{"13":{}}}],["omega_{\\sigma",{"_index":10756,"t":{},"b":{"40":{}}}],["omega_{\\sigma}\\cap",{"_index":10788,"t":{},"b":{"40":{}}}],["omega_{l}}\\int_{t,\\phi",{"_index":4542,"t":{},"b":{"11":{}}}],["omega_{l}}\\int_{t,\\phi<0",{"_index":4535,"t":{},"b":{"11":{}}}],["omega|^{\\frac2d",{"_index":4491,"t":{},"b":{"11":{}}}],["omit",{"_index":549,"t":{},"b":{"3":{},"13":{},"40":{},"41":{},"51":{}}}],["ommand",{"_index":6778,"t":{},"b":{"13":{}}}],["ompgetmaxthread",{"_index":13418,"t":{},"b":{"53":{}}}],["ompgetnumthread",{"_index":13417,"t":{},"b":{"53":{}}}],["ompsetnumthread",{"_index":13416,"t":{},"b":{"53":{}}}],["on",{"_index":732,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"19":{},"21":{},"24":{},"26":{},"31":{},"33":{},"34":{},"35":{},"37":{},"39":{},"40":{},"41":{},"42":{},"48":{},"49":{},"50":{},"54":{},"57":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{}}}],["on(",{"_index":14402,"t":{},"b":{"66":{}}}],["on(0",{"_index":7052,"t":{},"b":{"13":{},"25":{}}}],["on(1",{"_index":644,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"39":{},"40":{},"41":{},"42":{},"45":{},"47":{},"48":{},"50":{},"60":{},"63":{},"69":{},"73":{},"74":{},"78":{},"80":{}}}],["on(1,2,4,u1",{"_index":11550,"t":{},"b":{"45":{}}}],["on(1,u1",{"_index":6188,"t":{},"b":{"13":{}}}],["on(10",{"_index":7539,"t":{},"b":{"15":{},"26":{},"66":{}}}],["on(2",{"_index":4830,"t":{},"b":{"11":{},"25":{},"37":{},"41":{},"42":{},"45":{},"48":{},"63":{},"67":{},"68":{},"74":{},"79":{},"81":{}}}],["on(2,4,u",{"_index":14540,"t":{},"b":{"68":{}}}],["on(3",{"_index":4909,"t":{},"b":{"11":{},"45":{},"74":{},"78":{},"80":{}}}],["on(3,u1",{"_index":11549,"t":{},"b":{"45":{}}}],["on(310",{"_index":7158,"t":{},"b":{"13":{}}}],["on(311",{"_index":7159,"t":{},"b":{"13":{}}}],["on(4",{"_index":12240,"t":{},"b":{"48":{},"64":{}}}],["on(98",{"_index":14589,"t":{},"b":{"69":{}}}],["on(99",{"_index":14588,"t":{},"b":{"69":{}}}],["on(a",{"_index":11347,"t":{},"b":{"43":{},"48":{},"49":{}}}],["on(aa",{"_index":15025,"t":{},"b":{"75":{}}}],["on(b",{"_index":11343,"t":{},"b":{"43":{}}}],["on(b1",{"_index":9318,"t":{},"b":{"25":{},"61":{}}}],["on(b2",{"_index":14085,"t":{},"b":{"61":{}}}],["on(b3",{"_index":14087,"t":{},"b":{"61":{}}}],["on(b5",{"_index":14074,"t":{},"b":{"61":{}}}],["on(b6",{"_index":14069,"t":{},"b":{"61":{}}}],["on(c",{"_index":14400,"t":{},"b":{"66":{},"76":{}}}],["on(c0",{"_index":11936,"t":{},"b":{"48":{},"69":{}}}],["on(c1",{"_index":11937,"t":{},"b":{"48":{},"69":{}}}],["on(c2",{"_index":11939,"t":{},"b":{"48":{}}}],["on(ca,u",{"_index":14653,"t":{},"b":{"71":{}}}],["on(exterior",{"_index":7483,"t":{},"b":{"15":{}}}],["on(gamma",{"_index":5035,"t":{},"b":{"11":{}}}],["on(gamma1",{"_index":14751,"t":{},"b":{"72":{}}}],["on(gamma1,phi",{"_index":14778,"t":{},"b":{"72":{}}}],["on(gd",{"_index":4502,"t":{},"b":{"11":{}}}],["on(inflow",{"_index":9387,"t":{},"b":{"25":{}}}],["on(inlet",{"_index":7975,"t":{},"b":{"15":{}}}],["on(insid",{"_index":10447,"t":{},"b":{"38":{}}}],["on(interior",{"_index":7482,"t":{},"b":{"15":{}}}],["on(lab",{"_index":8483,"t":{},"b":{"18":{}}}],["on(label",{"_index":13657,"t":{},"b":{"54":{}}}],["on(noslip",{"_index":9386,"t":{},"b":{"25":{}}}],["on(outsid",{"_index":10448,"t":{},"b":{"38":{}}}],["on(r",{"_index":10862,"t":{},"b":{"40":{}}}],["on(right",{"_index":11763,"t":{},"b":{"46":{}}}],["on(u",{"_index":4580,"t":{},"b":{"11":{}}}],["on(upp",{"_index":12002,"t":{},"b":{"48":{}}}],["on(wal",{"_index":7974,"t":{},"b":{"15":{}}}],["onc",{"_index":1175,"t":{},"b":{"3":{},"8":{},"11":{},"35":{},"45":{},"70":{}}}],["one(vh.ndof",{"_index":14937,"t":{},"b":{"74":{}}}],["oneoper",{"_index":2785,"t":{},"b":{"4":{}}}],["oneoperator(map_type[typeid(r).name()]),f(ff",{"_index":2804,"t":{},"b":{"4":{}}}],["oneoperator0",{"_index":2784,"t":{},"b":{"4":{}}}],["oneoperator0s(func",{"_index":2803,"t":{},"b":{"4":{}}}],["oneoperator0s<double>(myfunct",{"_index":2808,"t":{},"b":{"4":{}}}],["ong",{"_index":7532,"t":{},"b":{"15":{},"26":{}}}],["ong10",{"_index":9576,"t":{},"b":{"26":{}}}],["ongamma",{"_index":1393,"t":{},"b":{"3":{}}}],["ongi",{"_index":7597,"t":{},"b":{"15":{}}}],["ongo",{"_index":3691,"t":{},"b":{"10":{}}}],["onlin",{"_index":1255,"t":{},"b":{"3":{},"12":{},"19":{}}}],["onto",{"_index":3070,"t":{},"b":{"5":{}}}],["ooc",{"_index":7812,"t":{},"b":{"15":{}}}],["op",{"_index":4928,"t":{},"b":{"11":{},"15":{},"39":{},"51":{},"54":{},"62":{}}}],["op(u1",{"_index":14156,"t":{},"b":{"62":{}}}],["op(vh",{"_index":10540,"t":{},"b":{"39":{},"51":{},"62":{}}}],["op1.n",{"_index":10506,"t":{},"b":{"39":{}}}],["op_di",{"_index":2590,"t":{},"b":{"4":{}}}],["op_dx",{"_index":2589,"t":{},"b":{"4":{}}}],["op_dxx",{"_index":2591,"t":{},"b":{"4":{}}}],["op_dxz",{"_index":2598,"t":{},"b":{"4":{}}}],["op_dyx",{"_index":2593,"t":{},"b":{"4":{}}}],["op_dyz",{"_index":2600,"t":{},"b":{"4":{}}}],["op_dz",{"_index":2595,"t":{},"b":{"4":{}}}],["op_dzi",{"_index":2599,"t":{},"b":{"4":{}}}],["op_dzx",{"_index":2597,"t":{},"b":{"4":{}}}],["op_dzz",{"_index":2596,"t":{},"b":{"4":{}}}],["op_id",{"_index":2588,"t":{},"b":{"4":{}}}],["open",{"_index":1543,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"31":{},"35":{},"40":{},"52":{},"72":{},"76":{}}}],["open(1,fil",{"_index":2346,"t":{},"b":{"4":{}}}],["openbla",{"_index":9907,"t":{},"b":{"34":{},"35":{}}}],["opengl",{"_index":5104,"t":{},"b":{"12":{},"13":{},"19":{}}}],["openmpi",{"_index":9987,"t":{},"b":{"35":{}}}],["oper",{"_index":2438,"t":{},"b":{"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"16":{},"18":{},"21":{},"32":{},"33":{},"36":{},"39":{},"41":{},"45":{},"48":{},"50":{},"54":{},"56":{},"57":{},"58":{},"59":{},"60":{},"62":{},"66":{},"69":{},"72":{},"77":{},"79":{}}}],["operator()(stack",{"_index":2796,"t":{},"b":{"4":{}}}],["operatorslogo",{"_index":13792,"t":{"58":{}},"b":{}}],["operatortyp",{"_index":2587,"t":{},"b":{"4":{}}}],["oplu",{"_index":3829,"t":{},"b":{"11":{}}}],["oppos",{"_index":10827,"t":{},"b":{"40":{}}}],["opposit",{"_index":2934,"t":{},"b":{"4":{},"11":{},"13":{},"52":{},"60":{}}}],["opt",{"_index":3389,"t":{},"b":{"5":{},"13":{}}}],["optfil",{"_index":1312,"t":{},"b":{"3":{}}}],["optic",{"_index":395,"t":{},"b":{"2":{},"51":{}}}],["optim",{"_index":49,"t":{"68":{},"75":{}},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"19":{},"20":{},"26":{},"27":{},"29":{},"35":{},"63":{},"67":{},"68":{},"75":{},"80":{}}}],["optimi",{"_index":1682,"t":{},"b":{"3":{},"20":{}}}],["optimizationlogo",{"_index":476,"t":{"3":{}},"b":{}}],["optimizationslogo",{"_index":8617,"t":{"20":{}},"b":{}}],["optimum",{"_index":991,"t":{},"b":{"3":{}}}],["optin",{"_index":6392,"t":{},"b":{"13":{}}}],["option",{"_index":292,"t":{},"b":{"2":{},"3":{},"5":{},"8":{},"10":{},"13":{},"15":{},"35":{},"36":{},"39":{},"41":{},"53":{},"54":{},"71":{},"72":{},"76":{}}}],["optionalparamet",{"_index":5199,"t":{},"b":{"13":{}}}],["optomechan",{"_index":12405,"t":{},"b":{"51":{}}}],["or/and",{"_index":6139,"t":{},"b":{"13":{}}}],["ora",{"_index":3180,"t":{},"b":{"5":{},"6":{},"8":{},"9":{},"10":{}}}],["order",{"_index":161,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"19":{},"21":{},"26":{},"27":{},"35":{},"41":{},"46":{},"48":{},"51":{},"53":{},"54":{},"60":{},"65":{},"69":{},"71":{},"72":{},"81":{}}}],["ordinari",{"_index":11071,"t":{},"b":{"41":{},"51":{}}}],["orego",{"_index":8268,"t":{},"b":{"16":{}}}],["organ",{"_index":6726,"t":{},"b":{"13":{},"78":{}}}],["orient",{"_index":2473,"t":{},"b":{"4":{},"11":{},"13":{},"39":{},"48":{},"54":{},"69":{},"76":{},"77":{}}}],["orientation,label",{"_index":6444,"t":{},"b":{"13":{}}}],["orientation,reffac",{"_index":6487,"t":{},"b":{"13":{}}}],["origin",{"_index":854,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"13":{},"15":{},"41":{},"54":{},"64":{},"69":{}}}],["orthogon",{"_index":1888,"t":{},"b":{"3":{},"4":{},"11":{},"51":{}}}],["orthonorm",{"_index":4203,"t":{},"b":{"11":{}}}],["os",{"_index":5102,"t":{},"b":{"12":{},"19":{},"21":{},"27":{},"35":{}}}],["oscil",{"_index":8273,"t":{},"b":{"16":{}}}],["oseen",{"_index":8247,"t":{},"b":{"16":{},"73":{}}}],["ostream",{"_index":13542,"t":{},"b":{"54":{}}}],["osx",{"_index":9996,"t":{},"b":{"35":{}}}],["other",{"_index":1914,"t":{},"b":{"3":{},"13":{},"24":{},"33":{},"76":{},"81":{}}}],["otherwis",{"_index":569,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"19":{},"35":{},"55":{},"58":{},"64":{},"65":{},"77":{}}}],["otim",{"_index":10212,"t":{},"b":{"37":{}}}],["ou1",{"_index":8701,"t":{},"b":{"20":{}}}],["ou2",{"_index":8702,"t":{},"b":{"20":{}}}],["ousid",{"_index":9398,"t":{},"b":{"26":{}}}],["out",{"_index":1351,"t":{},"b":{"3":{},"13":{},"19":{},"21":{},"33":{},"41":{},"48":{},"54":{},"70":{},"76":{}}}],["out(\"err02.csv",{"_index":11035,"t":{},"b":{"41":{}}}],["outcom",{"_index":9868,"t":{},"b":{"33":{}}}],["outdat",{"_index":10050,"t":{},"b":{"35":{}}}],["outer",{"_index":2933,"t":{},"b":{"4":{},"11":{},"15":{},"21":{},"37":{},"60":{}}}],["outeredge(n",{"_index":10373,"t":{},"b":{"37":{}}}],["outeredge(t",{"_index":10369,"t":{},"b":{"37":{}}}],["outerradiu",{"_index":10363,"t":{},"b":{"37":{}}}],["outerradius*sin(t",{"_index":10371,"t":{},"b":{"37":{}}}],["outflow",{"_index":13987,"t":{},"b":{"61":{},"74":{}}}],["outflux",{"_index":14945,"t":{},"b":{"74":{}}}],["outil",{"_index":133,"t":{},"b":{"2":{}}}],["outlet",{"_index":11595,"t":{},"b":{"45":{},"74":{}}}],["output",{"_index":1316,"t":{},"b":{"3":{},"4":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"21":{},"27":{},"35":{},"39":{},"51":{},"52":{},"53":{},"54":{},"58":{},"60":{},"64":{},"69":{},"72":{},"74":{}}}],["outsid",{"_index":1681,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"38":{},"48":{},"51":{},"54":{},"55":{},"66":{},"76":{}}}],["outward",{"_index":13755,"t":{},"b":{"55":{}}}],["oven",{"_index":14169,"t":{},"b":{"63":{}}}],["over",{"_index":3024,"t":{},"b":{"5":{},"10":{},"11":{},"13":{},"33":{},"37":{},"39":{},"40":{},"41":{},"43":{},"45":{},"51":{},"62":{},"65":{},"66":{},"72":{},"76":{}}}],["overal",{"_index":7945,"t":{},"b":{"15":{}}}],["overlap",{"_index":3020,"t":{},"b":{"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"26":{},"38":{}}}],["overlin",{"_index":10710,"t":{},"b":{"40":{}}}],["overline{\\gamma_d",{"_index":12154,"t":{},"b":{"48":{}}}],["overline{\\gamma_d}\\cap\\overline{\\gamma_n",{"_index":12156,"t":{},"b":{"48":{}}}],["overline{\\mathbf{x}+\\mathbf{u}(\\mathbf{x}),\\mathbf{x}+\\tau\\delta\\mathbf{x",{"_index":10626,"t":{},"b":{"40":{}}}],["overline{\\mathbf{x},\\mathbf{x}+\\tau\\delta\\mathbf{x",{"_index":10625,"t":{},"b":{"40":{}}}],["overline{\\omega_1}\\cup",{"_index":12305,"t":{},"b":{"49":{}}}],["overline{\\omega_2}\\cup",{"_index":12306,"t":{},"b":{"49":{}}}],["overline{\\omega_3",{"_index":12307,"t":{},"b":{"49":{}}}],["overline{\\omega_{i}}\\cap\\overline{\\omega_{j",{"_index":12314,"t":{},"b":{"49":{}}}],["overline{\\sigma}_{ij",{"_index":10709,"t":{},"b":{"40":{}}}],["overline{\\varepsilon}_{ij",{"_index":10708,"t":{},"b":{"40":{}}}],["overline{f},\\overline{g",{"_index":10707,"t":{},"b":{"40":{}}}],["overline{q^iq^j",{"_index":4652,"t":{},"b":{"11":{}}}],["overline{u",{"_index":10711,"t":{},"b":{"40":{}}}],["overline{u}(x_1,x_2",{"_index":10697,"t":{},"b":{"40":{}}}],["overline{u}_3\\equiv",{"_index":10706,"t":{},"b":{"40":{}}}],["overline{u}_i(x_1,x_2",{"_index":10703,"t":{},"b":{"40":{}}}],["overrightarrow",{"_index":4165,"t":{},"b":{"11":{}}}],["overthrust.edp",{"_index":3448,"t":{},"b":{"6":{}}}],["overview",{"_index":14619,"t":{},"b":{"71":{}}}],["overwrit",{"_index":1102,"t":{},"b":{"3":{}}}],["overwritten",{"_index":1910,"t":{},"b":{"3":{},"13":{}}}],["ow",{"_index":14887,"t":{},"b":{"73":{}}}],["owith",{"_index":7551,"t":{},"b":{"15":{}}}],["ox",{"_index":6389,"t":{},"b":{"13":{}}}],["ox,real",{"_index":6463,"t":{},"b":{"13":{}}}],["oxborrow",{"_index":369,"t":{},"b":{"2":{}}}],["oxborrow2007",{"_index":368,"t":{},"b":{"2":{},"51":{}}}],["oy",{"_index":6390,"t":{},"b":{"13":{}}}],["oy,real",{"_index":6464,"t":{},"b":{"13":{}}}],["oz",{"_index":6391,"t":{},"b":{"13":{},"64":{}}}],["oz,int",{"_index":6465,"t":{},"b":{"13":{}}}],["p",{"_index":36,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"25":{},"26":{},"30":{},"36":{},"37":{},"38":{},"41":{},"42":{},"45":{},"48":{},"53":{},"54":{},"55":{},"60":{},"61":{},"66":{},"67":{},"71":{},"73":{},"74":{},"75":{},"78":{},"80":{},"81":{}}}],["p(\\xi,\\eta",{"_index":4662,"t":{},"b":{"11":{}}}],["p(i/20.,0.999",{"_index":14094,"t":{},"b":{"61":{}}}],["p(k(phat",{"_index":2605,"t":{},"b":{"4":{}}}],["p(real[int",{"_index":561,"t":{},"b":{"3":{},"11":{},"60":{}}}],["p(u",{"_index":9303,"t":{},"b":{"24":{}}}],["p(x,i",{"_index":4661,"t":{},"b":{"11":{}}}],["p(x,yy,i",{"_index":9359,"t":{},"b":{"25":{}}}],["p(x_1,x_2,x_3",{"_index":10619,"t":{},"b":{"40":{}}}],["p(z",{"_index":14334,"t":{},"b":{"65":{}}}],["p))/\\delta",{"_index":11987,"t":{},"b":{"48":{}}}],["p))\\delta",{"_index":15065,"t":{},"b":{"75":{}}}],["p)}{|p|}\\geq",{"_index":15240,"t":{},"b":{"78":{}}}],["p*(dx(ush",{"_index":7971,"t":{},"b":{"15":{}}}],["p*(dx(uu",{"_index":15333,"t":{},"b":{"80":{}}}],["p*(dx(v1)+dy(v2",{"_index":12236,"t":{},"b":{"48":{}}}],["p*dx(v1",{"_index":11500,"t":{},"b":{"45":{}}}],["p*dy(v2",{"_index":11501,"t":{},"b":{"45":{}}}],["p*ph",{"_index":9384,"t":{},"b":{"25":{}}}],["p*pp*1.e",{"_index":15332,"t":{},"b":{"80":{}}}],["p*psh*(1.e",{"_index":7970,"t":{},"b":{"15":{}}}],["p*q",{"_index":11600,"t":{},"b":{"45":{}}}],["p*q*(0.000001",{"_index":11499,"t":{},"b":{"45":{}}}],["p*q*1e",{"_index":12235,"t":{},"b":{"48":{}}}],["p+d",{"_index":15385,"t":{},"b":{"81":{}}}],["p+d*t",{"_index":15383,"t":{},"b":{"81":{}}}],["p,a1,a2",{"_index":4208,"t":{},"b":{"11":{}}}],["p,b,t",{"_index":8612,"t":{},"b":{"19":{}}}],["p,b,t,nv,nbe,nt,label",{"_index":14669,"t":{},"b":{"71":{}}}],["p.16",{"_index":11150,"t":{},"b":{"41":{}}}],["p.32",{"_index":10637,"t":{},"b":{"40":{}}}],["p.43",{"_index":10674,"t":{},"b":{"40":{}}}],["p.i",{"_index":2611,"t":{},"b":{"4":{},"55":{},"60":{}}}],["p.x",{"_index":2610,"t":{},"b":{"4":{},"55":{},"60":{}}}],["p.z",{"_index":13763,"t":{},"b":{"55":{}}}],["p/\\mu",{"_index":11869,"t":{},"b":{"48":{}}}],["p/\\p",{"_index":12214,"t":{},"b":{"48":{}}}],["p0",{"_index":608,"t":{},"b":{"3":{},"4":{},"11":{},"12":{},"13":{},"19":{},"20":{},"24":{},"26":{},"36":{},"41":{},"48":{},"49":{},"51":{},"55":{},"60":{},"66":{}}}],["p0*(1",{"_index":5711,"t":{},"b":{"13":{},"24":{}}}],["p00",{"_index":5718,"t":{},"b":{"13":{},"24":{}}}],["p00[0",{"_index":5761,"t":{},"b":{"13":{},"24":{}}}],["p00[1",{"_index":5765,"t":{},"b":{"13":{},"24":{}}}],["p01",{"_index":5719,"t":{},"b":{"13":{},"24":{}}}],["p01[0",{"_index":5734,"t":{},"b":{"13":{},"24":{}}}],["p01[1",{"_index":5738,"t":{},"b":{"13":{},"24":{}}}],["p03d",{"_index":13874,"t":{},"b":{"60":{}}}],["p0edg",{"_index":3867,"t":{},"b":{"11":{},"60":{}}}],["p1",{"_index":1433,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"54":{},"56":{},"60":{},"62":{},"63":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["p1*t^3",{"_index":5717,"t":{},"b":{"13":{},"24":{}}}],["p1,p0",{"_index":9876,"t":{},"b":{"33":{}}}],["p11",{"_index":5722,"t":{},"b":{"13":{},"24":{}}}],["p11[0",{"_index":5743,"t":{},"b":{"13":{},"24":{}}}],["p11[1",{"_index":5747,"t":{},"b":{"13":{},"24":{}}}],["p13d",{"_index":13875,"t":{},"b":{"60":{}}}],["p1_",{"_index":4156,"t":{},"b":{"11":{}}}],["p1_{",{"_index":4151,"t":{},"b":{"11":{}}}],["p1_{2d",{"_index":4150,"t":{},"b":{"11":{}}}],["p1b",{"_index":3826,"t":{},"b":{"11":{},"60":{},"61":{},"78":{}}}],["p1b3d",{"_index":13876,"t":{},"b":{"60":{}}}],["p1bl",{"_index":13877,"t":{},"b":{"60":{}}}],["p1bl,p1bl3d",{"_index":3839,"t":{},"b":{"11":{}}}],["p1bl3d",{"_index":13878,"t":{},"b":{"60":{}}}],["p1dc",{"_index":3821,"t":{},"b":{"11":{},"12":{},"36":{},"37":{},"45":{},"46":{},"47":{},"60":{}}}],["p1edg",{"_index":3869,"t":{},"b":{"11":{},"60":{}}}],["p1nc",{"_index":3961,"t":{},"b":{"11":{},"60":{},"72":{}}}],["p2",{"_index":1162,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{},"21":{},"22":{},"25":{},"26":{},"36":{},"39":{},"40":{},"42":{},"45":{},"48":{},"51":{},"60":{},"64":{},"66":{},"71":{},"72":{},"73":{},"76":{},"80":{}}}],["p2,p2",{"_index":3355,"t":{},"b":{"5":{}}}],["p2,p2,p1",{"_index":3067,"t":{},"b":{"5":{},"10":{},"25":{}}}],["p21",{"_index":5726,"t":{},"b":{"13":{},"24":{}}}],["p21[0",{"_index":5752,"t":{},"b":{"13":{},"24":{}}}],["p21[1",{"_index":5756,"t":{},"b":{"13":{},"24":{}}}],["p23d",{"_index":9329,"t":{},"b":{"25":{},"60":{}}}],["p2b",{"_index":3845,"t":{},"b":{"11":{},"60":{}}}],["p2b3d",{"_index":3846,"t":{},"b":{"11":{}}}],["p2br",{"_index":2953,"t":{},"b":{"4":{},"11":{},"60":{}}}],["p2dc",{"_index":3848,"t":{},"b":{"11":{},"12":{},"60":{}}}],["p2edg",{"_index":3872,"t":{},"b":{"11":{},"60":{}}}],["p2h",{"_index":3851,"t":{},"b":{"11":{},"60":{}}}],["p2morley",{"_index":3881,"t":{},"b":{"11":{},"60":{}}}],["p2pnc",{"_index":3962,"t":{},"b":{"11":{}}}],["p3",{"_index":3853,"t":{},"b":{"11":{},"60":{}}}],["p3dc",{"_index":3857,"t":{},"b":{"11":{},"60":{}}}],["p3edg",{"_index":3874,"t":{},"b":{"11":{},"60":{}}}],["p4",{"_index":3860,"t":{},"b":{"11":{},"60":{}}}],["p4dc",{"_index":3864,"t":{},"b":{"11":{},"60":{}}}],["p4edg",{"_index":3876,"t":{},"b":{"11":{},"60":{}}}],["p5edg",{"_index":3878,"t":{},"b":{"11":{},"60":{}}}],["p[].linfti",{"_index":14873,"t":{},"b":{"73":{}}}],["p[].max",{"_index":11644,"t":{},"b":{"45":{}}}],["p\\be",{"_index":10194,"t":{},"b":{"37":{}}}],["p\\cdot\\nabla",{"_index":15070,"t":{},"b":{"75":{}}}],["p\\cdot\\nabla\\delta",{"_index":15068,"t":{},"b":{"75":{}}}],["p\\in",{"_index":5364,"t":{},"b":{"13":{},"45":{}}}],["p\\mathbf{n",{"_index":11231,"t":{},"b":{"42":{}}}],["p\\nabla\\cdot",{"_index":14456,"t":{},"b":{"67":{}}}],["p\\not\\in",{"_index":5365,"t":{},"b":{"13":{}}}],["p\\omega",{"_index":10916,"t":{},"b":{"41":{},"49":{}}}],["p\\omega\\tim",{"_index":10895,"t":{},"b":{"41":{}}}],["p\\omega_h",{"_index":4621,"t":{},"b":{"11":{}}}],["p\\time",{"_index":1934,"t":{},"b":{"3":{}}}],["p^1",{"_index":4992,"t":{},"b":{"11":{}}}],["p^2",{"_index":11866,"t":{},"b":{"48":{}}}],["p^2_{dc|h",{"_index":3849,"t":{},"b":{"11":{}}}],["p^2_{h",{"_index":3843,"t":{},"b":{"11":{}}}],["p^3_{dc|h",{"_index":3859,"t":{},"b":{"11":{}}}],["p^3_{h",{"_index":3856,"t":{},"b":{"11":{}}}],["p^4_{dc|h",{"_index":3866,"t":{},"b":{"11":{}}}],["p^4_{h",{"_index":3863,"t":{},"b":{"11":{}}}],["p^m",{"_index":14461,"t":{},"b":{"67":{},"74":{}}}],["p^m}(p^{m+1",{"_index":14467,"t":{},"b":{"67":{}}}],["p^n",{"_index":11555,"t":{},"b":{"45":{}}}],["p^n)^t",{"_index":11556,"t":{},"b":{"45":{}}}],["p^t",{"_index":7767,"t":{},"b":{"15":{}}}],["p^{br}_k",{"_index":2911,"t":{},"b":{"4":{}}}],["p^{hct}_{h",{"_index":3907,"t":{},"b":{"11":{}}}],["p^{m+1",{"_index":14021,"t":{},"b":{"61":{},"67":{},"74":{}}}],["p^{n+1",{"_index":11520,"t":{},"b":{"45":{}}}],["p_0",{"_index":9872,"t":{},"b":{"33":{}}}],["p_0\\},~~~i",{"_index":4378,"t":{},"b":{"11":{}}}],["p_1",{"_index":3871,"t":{},"b":{"11":{},"13":{},"33":{},"48":{},"77":{}}}],["p_1^2",{"_index":3912,"t":{},"b":{"11":{}}}],["p_1^2,p_0",{"_index":3968,"t":{},"b":{"11":{}}}],["p_1^2\\right.\\right",{"_index":3982,"t":{},"b":{"11":{}}}],["p_1^{dc",{"_index":15173,"t":{},"b":{"77":{}}}],["p_2",{"_index":3873,"t":{},"b":{"11":{},"33":{}}}],["p_2^2",{"_index":3973,"t":{},"b":{"11":{}}}],["p_3",{"_index":3875,"t":{},"b":{"11":{}}}],["p_4",{"_index":3877,"t":{},"b":{"11":{}}}],["p_5",{"_index":3880,"t":{},"b":{"11":{}}}],["p_c",{"_index":7867,"t":{},"b":{"15":{}}}],["p_h",{"_index":7642,"t":{},"b":{"15":{},"45":{}}}],["p_h\\|_{0,\\omega",{"_index":11434,"t":{},"b":{"45":{}}}],["p_h^0",{"_index":11532,"t":{},"b":{"45":{}}}],["p_h^\\epsilon",{"_index":11480,"t":{},"b":{"45":{}}}],["p_h^n",{"_index":11534,"t":{},"b":{"45":{}}}],["p_h^n+\\rho_n\\mathbf{b}\\mathbf{u}_h^n",{"_index":11541,"t":{},"b":{"45":{}}}],["p_h^{\\epsilon",{"_index":11477,"t":{},"b":{"45":{}}}],["p_h^{\\epsilon}\\|_{0,\\omega}\\l",{"_index":11486,"t":{},"b":{"45":{}}}],["p_h^{n+1",{"_index":11540,"t":{},"b":{"45":{}}}],["p_h}\\frac{(\\mathbf{u},\\nabla",{"_index":15239,"t":{},"b":{"78":{}}}],["p_i",{"_index":4462,"t":{},"b":{"11":{},"26":{},"46":{}}}],["p_j",{"_index":11659,"t":{},"b":{"46":{}}}],["p_k",{"_index":2559,"t":{},"b":{"4":{},"11":{}}}],["p_n",{"_index":12315,"t":{},"b":{"49":{}}}],["p_n\\varphi",{"_index":11953,"t":{},"b":{"48":{}}}],["p_n{v",{"_index":3886,"t":{},"b":{"11":{}}}],["p_pi_h[p",{"_index":2554,"t":{},"b":{"4":{}}}],["p_r",{"_index":7864,"t":{},"b":{"15":{}}}],["p_t",{"_index":11065,"t":{},"b":{"41":{}}}],["p_x",{"_index":4460,"t":{},"b":{"11":{}}}],["p_x(\\kappa",{"_index":4459,"t":{},"b":{"11":{}}}],["p_x\\psi)^2",{"_index":12023,"t":{},"b":{"48":{}}}],["p_y(\\kappa",{"_index":4461,"t":{},"b":{"11":{}}}],["p_y\\psi)^2",{"_index":12024,"t":{},"b":{"48":{}}}],["p_z",{"_index":4464,"t":{},"b":{"11":{}}}],["p_z(\\kappa",{"_index":4463,"t":{},"b":{"11":{}}}],["p_{0",{"_index":3868,"t":{},"b":{"11":{}}}],["p_{1",{"_index":3820,"t":{},"b":{"11":{},"45":{},"48":{}}}],["p_{2",{"_index":3842,"t":{},"b":{"11":{},"45":{},"48":{}}}],["p_{2}\\right.\\right",{"_index":11496,"t":{},"b":{"45":{}}}],["p_{3",{"_index":3854,"t":{},"b":{"11":{}}}],["p_{4",{"_index":3861,"t":{},"b":{"11":{}}}],["p_{5",{"_index":3879,"t":{},"b":{"11":{}}}],["p_{a",{"_index":11649,"t":{},"b":{"46":{}}}],["p_{c",{"_index":7863,"t":{},"b":{"15":{}}}],["p_{c}^{t",{"_index":7866,"t":{},"b":{"15":{}}}],["p_{h},q_{h",{"_index":4029,"t":{},"b":{"11":{}}}],["p_{k",{"_index":2449,"t":{},"b":{"4":{}}}],["p_{n",{"_index":12092,"t":{},"b":{"48":{}}}],["p_{p",{"_index":2447,"t":{},"b":{"4":{}}}],["p_{x}x",{"_index":11090,"t":{},"b":{"41":{}}}],["pa",{"_index":10358,"t":{},"b":{"37":{},"45":{},"46":{}}}],["pa(2",{"_index":5824,"t":{},"b":{"13":{}}}],["pa*",{"_index":11761,"t":{},"b":{"46":{}}}],["pa[0",{"_index":5827,"t":{},"b":{"13":{}}}],["pa[1",{"_index":5829,"t":{},"b":{"13":{}}}],["paa",{"_index":11611,"t":{},"b":{"45":{}}}],["paaaqi",{"_index":6276,"t":{},"b":{"13":{}}}],["paaaqyi",{"_index":6344,"t":{},"b":{"13":{}}}],["paaaqyy\",nbofregion",{"_index":6744,"t":{},"b":{"13":{}}}],["paacq",{"_index":6125,"t":{},"b":{"13":{},"24":{}}}],["pack",{"_index":15056,"t":{},"b":{"75":{}}}],["packag",{"_index":712,"t":{},"b":{"3":{},"12":{},"15":{},"19":{},"32":{},"35":{},"36":{},"39":{},"72":{}}}],["pacman",{"_index":10053,"t":{},"b":{"35":{}}}],["pactoy",{"_index":10108,"t":{},"b":{"35":{}}}],["page",{"_index":8410,"t":{},"b":{"18":{},"30":{},"35":{}}}],["pair",{"_index":904,"t":{},"b":{"3":{},"11":{},"13":{},"21":{},"54":{},"71":{}}}],["pal",{"_index":14805,"t":{},"b":{"72":{}}}],["palett",{"_index":14800,"t":{},"b":{"72":{}}}],["pam",{"_index":11609,"t":{},"b":{"45":{}}}],["panal",{"_index":2724,"t":{},"b":{"4":{}}}],["panel",{"_index":900,"t":{},"b":{"3":{}}}],["paper",{"_index":3446,"t":{},"b":{"6":{}}}],["par",{"_index":7751,"t":{},"b":{"15":{},"26":{}}}],["parabol",{"_index":174,"t":{},"b":{"2":{},"12":{},"65":{},"79":{}}}],["parabola",{"_index":14332,"t":{},"b":{"65":{}}}],["paraboloid",{"_index":14335,"t":{},"b":{"65":{}}}],["parad",{"_index":7982,"t":{},"b":{"15":{}}}],["paragraph",{"_index":7005,"t":{},"b":{"13":{}}}],["parallel",{"_index":467,"t":{},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"20":{},"21":{},"26":{},"29":{},"33":{},"35":{},"37":{},"48":{},"51":{},"54":{},"60":{},"71":{}}}],["parallelepip",{"_index":10739,"t":{},"b":{"40":{}}}],["parallelizationlogo",{"_index":7381,"t":{"15":{},"26":{}},"b":{}}],["paramet",{"_index":512,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"53":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"77":{},"78":{},"79":{},"80":{}}}],["parameter",{"_index":4161,"t":{},"b":{"11":{},"13":{}}}],["parameter.thi",{"_index":7087,"t":{},"b":{"13":{}}}],["parameterslogo",{"_index":3662,"t":{"9":{}},"b":{}}],["parametr",{"_index":1642,"t":{},"b":{"3":{},"13":{},"24":{},"60":{},"76":{}}}],["parametriz",{"_index":1526,"t":{},"b":{"3":{}}}],["paramfil",{"_index":850,"t":{},"b":{"3":{}}}],["parasail",{"_index":8103,"t":{},"b":{"15":{}}}],["paraview",{"_index":8509,"t":{},"b":{"19":{},"27":{}}}],["pardiso",{"_index":8316,"t":{},"b":{"17":{},"53":{}}}],["parent",{"_index":3095,"t":{},"b":{"5":{}}}],["parenthes",{"_index":12069,"t":{},"b":{"48":{}}}],["parenthesi",{"_index":14613,"t":{},"b":{"70":{}}}],["pari",{"_index":214,"t":{},"b":{"2":{},"29":{},"34":{}}}],["parm",{"_index":7723,"t":{},"b":{"15":{}}}],["parmet",{"_index":7098,"t":{},"b":{"13":{}}}],["parmeti",{"_index":7873,"t":{},"b":{"15":{},"34":{}}}],["parmmg",{"_index":8246,"t":{},"b":{"16":{},"34":{},"36":{}}}],["parmmg.edp",{"_index":8293,"t":{},"b":{"16":{}}}],["parms_freefem",{"_index":7722,"t":{},"b":{"15":{}}}],["pars",{"_index":14616,"t":{},"b":{"70":{}}}],["parser",{"_index":10147,"t":{},"b":{"35":{}}}],["parsymbfact",{"_index":7879,"t":{},"b":{"15":{}}}],["parsymfact",{"_index":7871,"t":{},"b":{"15":{}}}],["part",{"_index":1145,"t":{},"b":{"3":{},"8":{},"11":{},"12":{},"13":{},"15":{},"19":{},"20":{},"21":{},"24":{},"26":{},"38":{},"39":{},"40":{},"44":{},"46":{},"48":{},"49":{},"51":{},"54":{},"57":{},"60":{},"63":{},"65":{},"68":{},"69":{},"72":{},"76":{},"78":{},"79":{},"81":{}}}],["part[][i",{"_index":9435,"t":{},"b":{"26":{}}}],["parti",{"_index":10030,"t":{},"b":{"35":{}}}],["partial",{"_index":175,"t":{"65":{}},"b":{"2":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"24":{},"33":{},"34":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"51":{},"62":{},"64":{},"65":{},"66":{},"72":{},"76":{},"79":{}}}],["partial\\boldsymbol{n",{"_index":15288,"t":{},"b":{"79":{}}}],["partial\\hat{\\epsilon}/\\partial\\phi",{"_index":12422,"t":{},"b":{"51":{}}}],["partial\\omega",{"_index":605,"t":{},"b":{"3":{},"11":{},"14":{},"40":{},"42":{},"65":{},"66":{},"76":{}}}],["partial\\omega\\setminus\\overline{\\gamma_d",{"_index":10682,"t":{},"b":{"40":{}}}],["partial\\omega\\setminus\\overline{\\gamma_n}\\right",{"_index":10768,"t":{},"b":{"40":{}}}],["partial\\omega_h",{"_index":15095,"t":{},"b":{"76":{}}}],["partial\\varphi/\\parti",{"_index":14327,"t":{},"b":{"65":{}}}],["partial\\varphi\\over\\parti",{"_index":14337,"t":{},"b":{"65":{}}}],["partial^2",{"_index":5517,"t":{},"b":{"13":{},"62":{},"65":{}}}],["partial^2\\varphi/\\parti",{"_index":14328,"t":{},"b":{"65":{}}}],["partial^2\\varphi\\over\\parti",{"_index":14319,"t":{},"b":{"65":{}}}],["partial^2f/\\parti",{"_index":7317,"t":{},"b":{"14":{}}}],["partial_i",{"_index":13607,"t":{},"b":{"54":{},"73":{}}}],["partial_j",{"_index":10685,"t":{},"b":{"40":{}}}],["partial_n",{"_index":14900,"t":{},"b":{"74":{}}}],["partial_n\\varphi",{"_index":14765,"t":{},"b":{"72":{}}}],["partial_t",{"_index":13994,"t":{},"b":{"61":{},"66":{},"67":{},"68":{},"74":{},"77":{},"79":{}}}],["partial_t\\epsilon+u\\nabla\\epsilon",{"_index":14005,"t":{},"b":{"61":{}}}],["partial_t\\rho+\\bar",{"_index":14448,"t":{},"b":{"67":{}}}],["partial_t\\theta+u\\nabla\\theta",{"_index":13992,"t":{},"b":{"61":{}}}],["partial_x",{"_index":13606,"t":{},"b":{"54":{}}}],["partial_z",{"_index":13608,"t":{},"b":{"54":{}}}],["partial_{\\phi",{"_index":1568,"t":{},"b":{"3":{}}}],["partial_{\\phi}\\rho)^{2",{"_index":1560,"t":{},"b":{"3":{}}}],["partial_{\\theta",{"_index":1566,"t":{},"b":{"3":{}}}],["partial_{\\theta}\\rho)^{2",{"_index":1557,"t":{},"b":{"3":{}}}],["partial_{\\theta}\\rho\\partial_{\\phi}\\rho",{"_index":1558,"t":{},"b":{"3":{}}}],["particip",{"_index":3048,"t":{},"b":{"5":{},"9":{}}}],["particl",{"_index":15146,"t":{},"b":{"77":{}}}],["particul",{"_index":15160,"t":{},"b":{"77":{}}}],["particular",{"_index":3193,"t":{},"b":{"5":{},"11":{},"13":{},"15":{},"17":{},"49":{},"71":{}}}],["particularli",{"_index":12340,"t":{},"b":{"49":{}}}],["partiel",{"_index":213,"t":{},"b":{"2":{},"13":{}}}],["partion",{"_index":9417,"t":{},"b":{"26":{}}}],["partit",{"_index":158,"t":{},"b":{"2":{},"5":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"17":{},"26":{}}}],["partition",{"_index":3677,"t":{},"b":{"9":{},"15":{}}}],["pascal",{"_index":6954,"t":{},"b":{"13":{},"19":{},"33":{}}}],["pass",{"_index":789,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"39":{},"81":{}}}],["past",{"_index":3497,"t":{},"b":{"7":{},"10":{},"35":{},"45":{}}}],["pastix",{"_index":7716,"t":{},"b":{"15":{},"26":{}}}],["patch",{"_index":10040,"t":{},"b":{"35":{},"71":{}}}],["path",{"_index":9932,"t":{},"b":{"35":{},"54":{},"71":{},"77":{}}}],["pattern",{"_index":3401,"t":{},"b":{"5":{},"8":{},"15":{},"40":{}}}],["paul",{"_index":282,"t":{},"b":{"2":{}}}],["paus",{"_index":8590,"t":{},"b":{"19":{},"27":{}}}],["pax",{"_index":10109,"t":{},"b":{"35":{}}}],["pay",{"_index":8172,"t":{},"b":{"15":{}}}],["pb",{"_index":3323,"t":{},"b":{"5":{},"7":{},"10":{},"15":{},"18":{},"21":{},"38":{}}}],["pb(2",{"_index":5825,"t":{},"b":{"13":{}}}],["pb(u",{"_index":3720,"t":{},"b":{"10":{}}}],["pb(vh",{"_index":3721,"t":{},"b":{"10":{}}}],["pb1",{"_index":10475,"t":{},"b":{"38":{}}}],["pb2",{"_index":10480,"t":{},"b":{"38":{}}}],["pb4p",{"_index":14962,"t":{},"b":{"74":{}}}],["pb4u",{"_index":14947,"t":{},"b":{"74":{}}}],["pb4v",{"_index":14955,"t":{},"b":{"74":{}}}],["pb[0",{"_index":5831,"t":{},"b":{"13":{}}}],["pb[1",{"_index":5833,"t":{},"b":{"13":{}}}],["pba(bi",{"_index":3715,"t":{},"b":{"10":{}}}],["pbc",{"_index":4216,"t":{},"b":{"11":{}}}],["pbdirectsolve(bi",{"_index":3722,"t":{},"b":{"10":{}}}],["pbfgmres(x0",{"_index":3419,"t":{},"b":{"5":{}}}],["pbfgmres(x0i",{"_index":3494,"t":{},"b":{"7":{},"10":{}}}],["pbwithhpddm()1",{"_index":3322,"t":{},"b":{"5":{},"10":{}}}],["pbwithhpddmkrylov()1",{"_index":3329,"t":{},"b":{"5":{}}}],["pbwritesummari",{"_index":3496,"t":{},"b":{"7":{},"10":{}}}],["pc(2",{"_index":5826,"t":{},"b":{"13":{}}}],["pc(complex",{"_index":8816,"t":{},"b":{"21":{}}}],["pc(conj(z2",{"_index":8840,"t":{},"b":{"21":{}}}],["pc(polar(abs(z2",{"_index":8839,"t":{},"b":{"21":{}}}],["pc(z1",{"_index":8824,"t":{},"b":{"21":{}}}],["pc(z1*z2",{"_index":8827,"t":{},"b":{"21":{}}}],["pc(z1+z2",{"_index":8826,"t":{},"b":{"21":{}}}],["pc(z1/z2",{"_index":8828,"t":{},"b":{"21":{}}}],["pc(z1^z2",{"_index":8841,"t":{},"b":{"21":{}}}],["pc(z2",{"_index":8825,"t":{},"b":{"21":{}}}],["pc[0",{"_index":5835,"t":{},"b":{"13":{}}}],["pc[1",{"_index":5836,"t":{},"b":{"13":{}}}],["pcd",{"_index":8249,"t":{},"b":{"16":{}}}],["pcfem",{"_index":9856,"t":{},"b":{"33":{}}}],["pcg",{"_index":8041,"t":{},"b":{"15":{}}}],["pchpddm",{"_index":8309,"t":{},"b":{"16":{}}}],["pci",{"_index":7600,"t":{},"b":{"15":{},"26":{}}}],["pci'*pii",{"_index":7604,"t":{},"b":{"15":{},"26":{}}}],["pci*uc",{"_index":7612,"t":{},"b":{"15":{},"26":{}}}],["pcm2rnm",{"_index":13419,"t":{},"b":{"53":{}}}],["pd",{"_index":14617,"t":{},"b":{"70":{}}}],["pde",{"_index":1894,"t":{},"b":{"3":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"33":{},"36":{},"41":{},"42":{},"65":{},"66":{},"70":{},"72":{},"75":{},"76":{},"79":{}}}],["pdf",{"_index":1214,"t":{},"b":{"3":{},"34":{}}}],["pdj",{"_index":7598,"t":{},"b":{"15":{},"26":{}}}],["pdjc",{"_index":7613,"t":{},"b":{"15":{},"26":{}}}],["peacewis",{"_index":2980,"t":{},"b":{"4":{}}}],["pearson",{"_index":90,"t":{},"b":{"2":{}}}],["pecley",{"_index":14441,"t":{},"b":{"66":{}}}],["peculiar",{"_index":1956,"t":{},"b":{"3":{}}}],["peer_comm",{"_index":8200,"t":{},"b":{"15":{}}}],["pena",{"_index":8700,"t":{},"b":{"20":{},"67":{}}}],["penal",{"_index":4845,"t":{},"b":{"11":{},"39":{},"50":{}}}],["penalti",{"_index":11467,"t":{},"b":{"45":{},"50":{},"51":{},"61":{},"76":{}}}],["per",{"_index":2279,"t":{},"b":{"4":{},"7":{},"10":{},"13":{},"15":{},"24":{},"48":{},"51":{}}}],["percentag",{"_index":7802,"t":{},"b":{"15":{}}}],["perfect",{"_index":5085,"t":{},"b":{"12":{}}}],["perform",{"_index":894,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"13":{},"18":{},"35":{},"76":{}}}],["perio",{"_index":6320,"t":{},"b":{"13":{},"24":{},"25":{}}}],["period",{"_index":1662,"t":{},"b":{"3":{},"11":{},"13":{},"16":{},"20":{},"21":{},"22":{},"24":{},"25":{},"45":{},"48":{},"54":{},"60":{},"81":{}}}],["perl",{"_index":10082,"t":{},"b":{"35":{}}}],["perm",{"_index":7906,"t":{},"b":{"15":{}}}],["permc",{"_index":7706,"t":{},"b":{"15":{}}}],["permeabl",{"_index":11339,"t":{},"b":{"43":{}}}],["permitt",{"_index":11906,"t":{},"b":{"48":{},"51":{}}}],["permr",{"_index":7705,"t":{},"b":{"15":{}}}],["permut",{"_index":4091,"t":{},"b":{"11":{},"15":{},"22":{}}}],["perpendicular",{"_index":5598,"t":{},"b":{"13":{},"64":{},"79":{}}}],["perspect",{"_index":11157,"t":{},"b":{"41":{}}}],["perturb",{"_index":1308,"t":{},"b":{"3":{}}}],["petrov",{"_index":14305,"t":{},"b":{"65":{}}}],["petsc",{"_index":8233,"t":{"17":{}},"b":{"15":{},"16":{},"17":{},"29":{},"34":{},"35":{},"36":{}}}],["petsc.edp",{"_index":8236,"t":{},"b":{"16":{}}}],["petsc/slepc",{"_index":10032,"t":{},"b":{"35":{}}}],["pgm",{"_index":7220,"t":{},"b":{"13":{}}}],["ph",{"_index":609,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"25":{},"41":{},"47":{},"48":{},"49":{},"51":{},"78":{}}}],["ph(th",{"_index":607,"t":{},"b":{"3":{},"13":{},"20":{},"41":{},"47":{},"48":{},"49":{},"51":{},"78":{}}}],["phantom{(i",{"_index":3231,"t":{},"b":{"5":{}}}],["phase",{"_index":7792,"t":{},"b":{"15":{},"51":{}}}],["phat",{"_index":2564,"t":{},"b":{"4":{}}}],["phat,rnmk_",{"_index":2604,"t":{},"b":{"4":{}}}],["phd",{"_index":9761,"t":{},"b":{"29":{}}}],["phenomena",{"_index":3612,"t":{},"b":{"8":{},"12":{}}}],["phenomenon",{"_index":14135,"t":{},"b":{"62":{}}}],["phg",{"_index":9425,"t":{},"b":{"26":{}}}],["phg(thg",{"_index":9424,"t":{},"b":{"26":{}}}],["phi",{"_index":1548,"t":{},"b":{"3":{},"13":{},"20":{},"45":{},"48":{},"72":{}}}],["phi(1",{"_index":2412,"t":{},"b":{"4":{},"13":{}}}],["phi(2",{"_index":2413,"t":{},"b":{"4":{},"13":{}}}],["phi(3",{"_index":2414,"t":{},"b":{"4":{},"13":{}}}],["phi(t_{h",{"_index":6151,"t":{},"b":{"13":{}}}],["phi(x,i",{"_index":6147,"t":{},"b":{"13":{}}}],["phi)(k*v*w",{"_index":4533,"t":{},"b":{"11":{}}}],["phi)(k*w",{"_index":4557,"t":{},"b":{"11":{}}}],["phi*(dy(u1",{"_index":11509,"t":{},"b":{"45":{}}}],["phi1",{"_index":2405,"t":{},"b":{"4":{},"13":{}}}],["phi1(x,i",{"_index":6215,"t":{},"b":{"13":{}}}],["phi1(x,y,z",{"_index":6148,"t":{},"b":{"13":{}}}],["phi2",{"_index":2406,"t":{},"b":{"4":{},"13":{}}}],["phi2(x,i",{"_index":6216,"t":{},"b":{"13":{}}}],["phi2(x,y,z",{"_index":6149,"t":{},"b":{"13":{}}}],["phi3",{"_index":2407,"t":{},"b":{"4":{},"13":{}}}],["phi3(x,i",{"_index":6217,"t":{},"b":{"13":{}}}],["phi3(x,y,z",{"_index":6150,"t":{},"b":{"13":{}}}],["phi[][vh(i,0",{"_index":14796,"t":{},"b":{"72":{}}}],["phi[][vh(i,j",{"_index":14793,"t":{},"b":{"72":{}}}],["phi_1",{"_index":15096,"t":{},"b":{"76":{}}}],["phi_1(x,i",{"_index":5442,"t":{},"b":{"13":{}}}],["phi_1(x,y),\\phi_2(x,i",{"_index":5434,"t":{},"b":{"13":{}}}],["phi_2(x,i",{"_index":5444,"t":{},"b":{"13":{}}}],["phi_6",{"_index":15097,"t":{},"b":{"76":{}}}],["phi_i",{"_index":4114,"t":{},"b":{"11":{},"26":{},"76":{}}}],["phi_i(m^i",{"_index":4268,"t":{},"b":{"11":{}}}],["phi_i(m^j",{"_index":4269,"t":{},"b":{"11":{}}}],["phi_i(q^i",{"_index":4118,"t":{},"b":{"11":{}}}],["phi_i(q^j",{"_index":4120,"t":{},"b":{"11":{}}}],["phi_i(x,i",{"_index":4133,"t":{},"b":{"11":{},"76":{}}}],["phi_i/\\p",{"_index":4272,"t":{},"b":{"11":{}}}],["phi_i\\qquad",{"_index":11442,"t":{},"b":{"45":{}}}],["phi_j",{"_index":4289,"t":{},"b":{"11":{},"26":{}}}],["phi_j,\\phi_i),\\qquad",{"_index":11004,"t":{},"b":{"41":{}}}],["phi_j/\\p",{"_index":11447,"t":{},"b":{"45":{}}}],["phi_j\\cdot",{"_index":11441,"t":{},"b":{"45":{}}}],["phi_k",{"_index":4096,"t":{},"b":{"11":{},"76":{}}}],["phi_k(x,i",{"_index":3767,"t":{},"b":{"11":{}}}],["phi_x(t),\\phi_y(t",{"_index":5196,"t":{},"b":{"13":{}}}],["phi_{k_1}(x,i",{"_index":4123,"t":{},"b":{"11":{}}}],["phi_{k_2}(x,i",{"_index":4138,"t":{},"b":{"11":{}}}],["phiexact",{"_index":14772,"t":{},"b":{"72":{}}}],["phiexact)^2",{"_index":14781,"t":{},"b":{"72":{}}}],["phii",{"_index":9458,"t":{},"b":{"26":{}}}],["phii(thii",{"_index":9455,"t":{},"b":{"26":{}}}],["phii[].min",{"_index":9480,"t":{},"b":{"26":{}}}],["philip",{"_index":43,"t":{},"b":{"2":{}}}],["philipp",{"_index":205,"t":{},"b":{"2":{}}}],["phix(real",{"_index":8875,"t":{},"b":{"21":{}}}],["phix(t",{"_index":8879,"t":{},"b":{"21":{}}}],["phiy(real",{"_index":8877,"t":{},"b":{"21":{}}}],["phiy(t",{"_index":8880,"t":{},"b":{"21":{}}}],["photoelast",{"_index":10829,"t":{},"b":{"40":{}}}],["physic",{"_index":3614,"t":{},"b":{"8":{},"12":{},"34":{},"66":{},"81":{}}}],["physicist",{"_index":15363,"t":{},"b":{"81":{}}}],["pi",{"_index":6085,"t":{},"b":{"13":{},"15":{},"24":{},"55":{},"58":{},"67":{},"76":{}}}],["pi(\\mathbf{x",{"_index":10657,"t":{},"b":{"40":{}}}],["pi){x",{"_index":5786,"t":{},"b":{"13":{},"24":{},"76":{}}}],["pi*i",{"_index":1679,"t":{},"b":{"3":{},"20":{},"39":{}}}],["pi*x",{"_index":10537,"t":{},"b":{"39":{}}}],["pi/2",{"_index":5856,"t":{},"b":{"13":{},"15":{},"24":{},"25":{},"38":{},"73":{}}}],["pi/2){x",{"_index":7469,"t":{},"b":{"15":{},"38":{}}}],["pi/2,2*y*pi",{"_index":6467,"t":{},"b":{"13":{}}}],["pi/2.+0.0001",{"_index":6646,"t":{},"b":{"13":{}}}],["pi/2[x]0",{"_index":9306,"t":{},"b":{"24":{}}}],["pi/2[x]0,2pi",{"_index":6296,"t":{},"b":{"13":{},"25":{}}}],["pi/3",{"_index":1856,"t":{},"b":{"3":{},"20":{}}}],["pi^*_i",{"_index":7647,"t":{},"b":{"15":{}}}],["pi^2_0)^m",{"_index":7649,"t":{},"b":{"15":{}}}],["pi^2_1",{"_index":7648,"t":{},"b":{"15":{}}}],["pi^2_c)^m",{"_index":7644,"t":{},"b":{"15":{}}}],["pi^2_p",{"_index":7640,"t":{},"b":{"15":{}}}],["pi^2_v",{"_index":7641,"t":{},"b":{"15":{}}}],["pi_h",{"_index":4569,"t":{},"b":{"11":{},"14":{}}}],["pi_h\\boldsymbol{f",{"_index":2430,"t":{},"b":{"4":{}}}],["pi_h_alpha(const",{"_index":2566,"t":{},"b":{"4":{}}}],["pi_i",{"_index":7492,"t":{},"b":{"15":{},"26":{}}}],["pi_i)_{i",{"_index":7490,"t":{},"b":{"15":{}}}],["pi_i\\g",{"_index":7494,"t":{},"b":{"15":{}}}],["pi_j",{"_index":7547,"t":{},"b":{"15":{}}}],["pi_{h",{"_index":2439,"t":{},"b":{"4":{}}}],["pi_{i",{"_index":3524,"t":{},"b":{"8":{}}}],["pick",{"_index":3625,"t":{},"b":{"8":{},"48":{}}}],["pictur",{"_index":1886,"t":{},"b":{"3":{}}}],["piec",{"_index":3509,"t":{},"b":{"8":{},"11":{},"12":{},"13":{},"69":{}}}],["piecewis",{"_index":1634,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"76":{},"77":{}}}],["pierr",{"_index":143,"t":{},"b":{"2":{},"10":{},"29":{}}}],["pii",{"_index":7653,"t":{},"b":{"15":{},"26":{}}}],["pii*ui",{"_index":7566,"t":{},"b":{"15":{},"26":{}}}],["piistar",{"_index":7654,"t":{},"b":{"15":{}}}],["pij",{"_index":9489,"t":{},"b":{"26":{}}}],["pij(npij",{"_index":7656,"t":{},"b":{"15":{},"26":{}}}],["pij[0",{"_index":9492,"t":{},"b":{"26":{}}}],["pij[j",{"_index":7658,"t":{},"b":{"15":{},"26":{}}}],["pij[jp",{"_index":7672,"t":{},"b":{"15":{},"26":{}}}],["pij[njpart",{"_index":7664,"t":{},"b":{"15":{},"26":{}}}],["pij[njpart][].min",{"_index":9479,"t":{},"b":{"26":{}}}],["pij_alpha[kk",{"_index":2556,"t":{},"b":{"4":{}}}],["pijstar",{"_index":7665,"t":{},"b":{"15":{}}}],["pilut",{"_index":8121,"t":{},"b":{"15":{}}}],["pino",{"_index":9882,"t":{},"b":{"33":{}}}],["piola",{"_index":10191,"t":{},"b":{"37":{}}}],["pipe",{"_index":13421,"t":{},"b":{"53":{}}}],["pironneau",{"_index":4,"t":{},"b":{"2":{},"29":{},"33":{}}}],["pironneau1998",{"_index":3,"t":{},"b":{"2":{},"3":{}}}],["pivot",{"_index":1332,"t":{},"b":{"3":{},"11":{},"15":{},"60":{}}}],["pivtol",{"_index":1331,"t":{},"b":{"3":{}}}],["pi}{2},frac",{"_index":6468,"t":{},"b":{"13":{}}}],["pi}{2}[\\times]0,2\\pi",{"_index":6469,"t":{},"b":{"13":{}}}],["pk",{"_index":3066,"t":{},"b":{"5":{},"10":{},"11":{},"15":{},"26":{}}}],["pkg",{"_index":10041,"t":{},"b":{"35":{}}}],["pkgfile",{"_index":10083,"t":{},"b":{"35":{}}}],["pkpart",{"_index":3371,"t":{},"b":{"5":{}}}],["pkt",{"_index":3347,"t":{},"b":{"5":{}}}],["place",{"_index":878,"t":{},"b":{"3":{},"13":{},"18":{},"60":{},"70":{}}}],["plain",{"_index":10691,"t":{},"b":{"40":{}}}],["plan",{"_index":1901,"t":{},"b":{"3":{},"13":{},"25":{}}}],["planar",{"_index":14701,"t":{},"b":{"72":{}}}],["plandfft",{"_index":12629,"t":{},"b":{"53":{}}}],["plandfft(u",{"_index":8806,"t":{},"b":{"21":{}}}],["plane",{"_index":4176,"t":{},"b":{"11":{},"13":{},"25":{},"40":{},"48":{},"63":{},"79":{}}}],["plastic",{"_index":255,"t":{},"b":{"2":{}}}],["plate",{"_index":10615,"t":{},"b":{"40":{},"49":{},"64":{},"71":{},"79":{}}}],["platform",{"_index":9917,"t":{},"b":{"35":{}}}],["play",{"_index":1001,"t":{},"b":{"3":{},"37":{}}}],["pleas",{"_index":9799,"t":{},"b":{"30":{},"51":{}}}],["pleasant",{"_index":14611,"t":{},"b":{"70":{}}}],["plot",{"_index":682,"t":{"71":{}},"b":{"3":{},"4":{},"9":{},"11":{},"12":{},"13":{},"15":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["plot([a1",{"_index":2958,"t":{},"b":{"4":{}}}],["plot([curves(0",{"_index":7243,"t":{},"b":{"13":{}}}],["plot([th",{"_index":13659,"t":{},"b":{"54":{}}}],["plot([u",{"_index":14278,"t":{},"b":{"64":{},"78":{}}}],["plot([u1",{"_index":11558,"t":{},"b":{"45":{},"48":{},"73":{}}}],["plot([u1n,u2n",{"_index":10430,"t":{},"b":{"37":{}}}],["plot([un",{"_index":11781,"t":{},"b":{"46":{}}}],["plot([uu",{"_index":10735,"t":{},"b":{"40":{},"42":{},"46":{}}}],["plot([uu,vv",{"_index":10736,"t":{},"b":{"40":{}}}],["plot([ux",{"_index":9360,"t":{},"b":{"25":{},"61":{}}}],["plot([xx",{"_index":8555,"t":{},"b":{"19":{},"27":{},"61":{}}}],["plot([xy(0",{"_index":7210,"t":{},"b":{"13":{}}}],["plot([yi",{"_index":14095,"t":{},"b":{"61":{}}}],["plot(a(50",{"_index":5217,"t":{},"b":{"13":{},"24":{},"70":{}}}],["plot(a(nn",{"_index":5245,"t":{},"b":{"13":{}}}],["plot(a0(n",{"_index":5013,"t":{},"b":{"11":{}}}],["plot(bb(nn",{"_index":5264,"t":{},"b":{"13":{}}}],["plot(c",{"_index":15168,"t":{},"b":{"77":{}}}],["plot(c01",{"_index":5172,"t":{},"b":{"13":{},"24":{}}}],["plot(cc",{"_index":15193,"t":{},"b":{"77":{}}}],["plot(coef",{"_index":11530,"t":{},"b":{"45":{}}}],["plot(cp",{"_index":12020,"t":{},"b":{"48":{}}}],["plot(curve1(100",{"_index":7216,"t":{},"b":{"13":{}}}],["plot(disk",{"_index":11878,"t":{},"b":{"48":{}}}],["plot(ehsqr",{"_index":12570,"t":{},"b":{"51":{}}}],["plot(err",{"_index":11881,"t":{},"b":{"48":{}}}],["plot(ev[i",{"_index":10551,"t":{},"b":{"39":{}}}],["plot(f",{"_index":14608,"t":{},"b":{"70":{}}}],["plot(fh",{"_index":5513,"t":{},"b":{"13":{},"24":{}}}],["plot(fxi",{"_index":5401,"t":{},"b":{"13":{}}}],["plot(g",{"_index":6846,"t":{},"b":{"13":{},"70":{}}}],["plot(ik",{"_index":12390,"t":{},"b":{"50":{}}}],["plot(n",{"_index":10870,"t":{},"b":{"40":{}}}],["plot(nu",{"_index":9275,"t":{},"b":{"22":{},"49":{}}}],["plot(p",{"_index":9356,"t":{},"b":{"25":{},"48":{},"74":{},"80":{}}}],["plot(part",{"_index":9437,"t":{},"b":{"26":{}}}],["plot(phi",{"_index":14752,"t":{},"b":{"72":{}}}],["plot(phi,wait",{"_index":14758,"t":{},"b":{"72":{}}}],["plot(pii",{"_index":9464,"t":{},"b":{"26":{}}}],["plot(pij[j",{"_index":9491,"t":{},"b":{"26":{}}}],["plot(pij[njpart",{"_index":9482,"t":{},"b":{"26":{}}}],["plot(plat",{"_index":10826,"t":{},"b":{"40":{}}}],["plot(psi",{"_index":12014,"t":{},"b":{"48":{},"66":{}}}],["plot(psi0",{"_index":12003,"t":{},"b":{"48":{}}}],["plot(psi1",{"_index":12007,"t":{},"b":{"48":{}}}],["plot(r",{"_index":14514,"t":{},"b":{"67":{}}}],["plot(r1",{"_index":14522,"t":{},"b":{"67":{}}}],["plot(reg",{"_index":12329,"t":{},"b":{"49":{}}}],["plot(rho",{"_index":1732,"t":{},"b":{"3":{},"20":{},"48":{}}}],["plot(sh",{"_index":11262,"t":{},"b":{"42":{},"81":{}}}],["plot(spher",{"_index":1719,"t":{},"b":{"3":{},"20":{}}}],["plot(sumphi",{"_index":9466,"t":{},"b":{"26":{}}}],["plot(t",{"_index":14120,"t":{},"b":{"61":{}}}],["plot(t0h",{"_index":12188,"t":{},"b":{"48":{}}}],["plot(th",{"_index":1885,"t":{},"b":{"3":{},"11":{},"13":{},"19":{},"20":{},"21":{},"24":{},"25":{},"27":{},"37":{},"38":{},"40":{},"43":{},"46":{},"47":{},"48":{},"51":{},"61":{},"63":{},"67":{},"70":{},"72":{},"73":{},"74":{}}}],["plot(th,thm",{"_index":6202,"t":{},"b":{"13":{}}}],["plot(th,wait",{"_index":6740,"t":{},"b":{"13":{},"69":{}}}],["plot(th1",{"_index":5650,"t":{},"b":{"13":{},"21":{},"24":{},"37":{},"38":{},"40":{},"42":{},"46":{}}}],["plot(th1,wait",{"_index":14282,"t":{},"b":{"64":{}}}],["plot(th2",{"_index":6059,"t":{},"b":{"13":{},"24":{}}}],["plot(th2,wait",{"_index":5658,"t":{},"b":{"13":{}}}],["plot(th3",{"_index":9279,"t":{},"b":{"22":{},"24":{},"25":{}}}],["plot(th33",{"_index":6270,"t":{},"b":{"13":{}}}],["plot(th3sph",{"_index":6770,"t":{},"b":{"13":{}}}],["plot(th3sphrefin",{"_index":6771,"t":{},"b":{"13":{}}}],["plot(th3sphrefine2",{"_index":6772,"t":{},"b":{"13":{}}}],["plot(thfin",{"_index":6277,"t":{},"b":{"13":{}}}],["plot(thi",{"_index":9490,"t":{},"b":{"26":{}}}],["plot(thmv2",{"_index":6285,"t":{},"b":{"13":{}}}],["plot(thwithhol",{"_index":5225,"t":{},"b":{"13":{},"24":{}}}],["plot(thwithouthol",{"_index":5222,"t":{},"b":{"13":{},"24":{}}}],["plot(thxi",{"_index":5391,"t":{},"b":{"13":{}}}],["plot(u",{"_index":1396,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"24":{},"38":{},"41":{},"43":{},"48":{},"49":{},"56":{},"62":{},"63":{},"68":{},"69":{},"74":{},"76":{},"79":{}}}],["plot(u,[ex,ey],wait",{"_index":14659,"t":{},"b":{"71":{}}}],["plot(u,u,wait",{"_index":10461,"t":{},"b":{"38":{}}}],["plot(u0",{"_index":5069,"t":{},"b":{"11":{},"48":{}}}],["plot(u1",{"_index":2014,"t":{},"b":{"3":{},"20":{},"21":{},"38":{},"67":{}}}],["plot(u2",{"_index":9337,"t":{},"b":{"25":{}}}],["plot(ud",{"_index":15050,"t":{},"b":{"75":{}}}],["plot(uh",{"_index":4350,"t":{},"b":{"11":{},"19":{},"21":{},"22":{},"27":{},"48":{},"50":{}}}],["plot(ui1",{"_index":1495,"t":{},"b":{"3":{}}}],["plot(ur",{"_index":8781,"t":{},"b":{"21":{}}}],["plot(uu[i",{"_index":9090,"t":{},"b":{"21":{},"60":{}}}],["plot(v",{"_index":4444,"t":{},"b":{"11":{},"62":{},"66":{},"79":{}}}],["plot(v,fil",{"_index":15230,"t":{},"b":{"77":{}}}],["plot(vi",{"_index":14228,"t":{},"b":{"63":{}}}],["plot(vm",{"_index":15436,"t":{},"b":{"81":{}}}],["plot(vr",{"_index":14226,"t":{},"b":{"63":{}}}],["plot(w",{"_index":8780,"t":{},"b":{"21":{},"45":{}}}],["plot(wij",{"_index":8810,"t":{},"b":{"21":{}}}],["plot(zcp",{"_index":12022,"t":{},"b":{"48":{}}}],["plot(zoom",{"_index":10851,"t":{},"b":{"40":{}}}],["plot(zpsi",{"_index":12016,"t":{},"b":{"48":{}}}],["plot.gp",{"_index":8589,"t":{},"b":{"19":{},"27":{}}}],["plot3d",{"_index":1692,"t":{},"b":{"3":{},"20":{}}}],["plot3d(gradarea(rc",{"_index":1878,"t":{},"b":{"3":{},"20":{}}}],["plot3d(lb",{"_index":1867,"t":{},"b":{"3":{},"20":{}}}],["plot3d(rc",{"_index":1876,"t":{},"b":{"3":{},"20":{}}}],["plot3d(rho",{"_index":1735,"t":{},"b":{"3":{},"20":{}}}],["plotmpiall(mesh",{"_index":7697,"t":{},"b":{"15":{},"26":{}}}],["plotmpiall(thi",{"_index":9493,"t":{},"b":{"26":{}}}],["plu",{"_index":1245,"t":{},"b":{"3":{},"11":{},"52":{},"65":{},"72":{}}}],["plug",{"_index":14411,"t":{},"b":{"66":{}}}],["pluge",{"_index":6367,"t":{},"b":{"13":{}}}],["plugin",{"_index":2983,"t":{},"b":{"4":{},"11":{},"13":{},"16":{},"18":{},"21":{},"35":{},"36":{},"60":{}}}],["pluginslogo",{"_index":8323,"t":{"18":{}},"b":{}}],["pm",{"_index":10456,"t":{},"b":{"38":{},"40":{},"45":{}}}],["pmmap",{"_index":8420,"t":{},"b":{"18":{}}}],["po",{"_index":12583,"t":{},"b":{"52":{}}}],["point",{"_index":22,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"24":{},"26":{},"27":{},"33":{},"40":{},"42":{},"43":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"60":{},"64":{},"69":{},"71":{},"72":{},"73":{},"76":{},"77":{},"79":{},"81":{}}}],["pointer",{"_index":4430,"t":{},"b":{"11":{},"15":{},"18":{}}}],["pointeur",{"_index":2791,"t":{},"b":{"4":{}}}],["points(3",{"_index":12623,"t":{},"b":{"53":{}}}],["points.bi",{"_index":6589,"t":{},"b":{"13":{}}}],["points.thi",{"_index":6626,"t":{},"b":{"13":{}}}],["points/el",{"_index":6593,"t":{},"b":{"13":{}}}],["poisson",{"_index":4449,"t":{},"b":{"11":{},"13":{},"15":{},"21":{},"24":{},"25":{},"48":{},"60":{},"76":{}}}],["poisson(u",{"_index":5535,"t":{},"b":{"13":{},"24":{},"76":{}}}],["poisson(u,v",{"_index":15117,"t":{},"b":{"76":{}}}],["poisson0",{"_index":12048,"t":{},"b":{"48":{}}}],["poisson1",{"_index":8997,"t":{},"b":{"21":{}}}],["poisson1b",{"_index":8999,"t":{},"b":{"21":{}}}],["poisson2",{"_index":9001,"t":{},"b":{"21":{}}}],["poisson2b",{"_index":9003,"t":{},"b":{"21":{}}}],["poisson’",{"_index":5521,"t":{},"b":{"13":{},"24":{},"25":{},"38":{},"40":{},"48":{},"60":{},"64":{},"76":{}}}],["polar",{"_index":8833,"t":{},"b":{"21":{},"48":{},"54":{},"79":{}}}],["polar(2.82887",{"_index":8852,"t":{},"b":{"21":{}}}],["polar(a",{"_index":13671,"t":{},"b":{"54":{}}}],["pold",{"_index":14946,"t":{},"b":{"74":{},"80":{}}}],["polygon",{"_index":7321,"t":{},"b":{"14":{},"72":{},"76":{},"77":{}}}],["polyhedr",{"_index":6667,"t":{},"b":{"13":{}}}],["polymorph",{"_index":13773,"t":{},"b":{"56":{},"70":{}}}],["polynom",{"_index":4751,"t":{},"b":{"11":{}}}],["polynomi",{"_index":458,"t":{},"b":{"2":{},"11":{},"12":{},"16":{},"60":{},"65":{},"76":{}}}],["popsiz",{"_index":837,"t":{},"b":{"3":{}}}],["popul",{"_index":841,"t":{},"b":{"3":{}}}],["pord",{"_index":7795,"t":{},"b":{"15":{}}}],["portion",{"_index":8154,"t":{},"b":{"15":{},"37":{}}}],["pose",{"_index":1832,"t":{},"b":{"3":{},"11":{},"62":{},"65":{}}}],["posit",{"_index":564,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"21":{},"26":{},"39":{},"41":{},"45":{},"46":{},"49":{},"52":{},"54":{},"60":{},"61":{},"81":{}}}],["posix",{"_index":8369,"t":{},"b":{"18":{}}}],["possess",{"_index":7274,"t":{},"b":{"14":{}}}],["possibili",{"_index":6550,"t":{},"b":{"13":{}}}],["possibl",{"_index":1066,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"15":{},"20":{},"35":{},"36":{},"51":{},"60":{},"65":{},"67":{},"68":{},"69":{},"71":{},"72":{},"74":{},"75":{},"76":{},"77":{}}}],["possible.tru",{"_index":5584,"t":{},"b":{"13":{}}}],["post",{"_index":6010,"t":{},"b":{"13":{},"19":{},"29":{},"53":{},"58":{}}}],["post(sem",{"_index":8429,"t":{},"b":{"18":{}}}],["post(smff",{"_index":8485,"t":{},"b":{"18":{}}}],["post\\n",{"_index":8484,"t":{},"b":{"18":{}}}],["posteriori",{"_index":5087,"t":{},"b":{"12":{}}}],["postscript",{"_index":5095,"t":{},"b":{"12":{},"13":{},"19":{},"27":{},"76":{}}}],["potenti",{"_index":10171,"t":{},"b":{"36":{},"40":{},"48":{},"71":{}}}],["potential(psi",{"_index":14398,"t":{},"b":{"66":{}}}],["poum",{"_index":3531,"t":{},"b":{"8":{}}}],["pour",{"_index":135,"t":{},"b":{"2":{}}}],["pow",{"_index":13672,"t":{},"b":{"54":{}}}],["pow(a",{"_index":13673,"t":{},"b":{"54":{}}}],["pow(nu,1.5)/4.1",{"_index":14045,"t":{},"b":{"61":{}}}],["power",{"_index":5520,"t":{},"b":{"13":{},"14":{},"15":{},"17":{},"54":{},"58":{},"77":{},"79":{},"81":{}}}],["powershel",{"_index":9947,"t":{},"b":{"35":{}}}],["pp",{"_index":9379,"t":{},"b":{"25":{},"42":{},"45":{},"61":{},"73":{},"78":{},"80":{}}}],["pp(21",{"_index":14090,"t":{},"b":{"61":{}}}],["pp*(dx(u",{"_index":15245,"t":{},"b":{"78":{},"80":{}}}],["pp.70–75",{"_index":11007,"t":{},"b":{"41":{}}}],["pp[i",{"_index":14093,"t":{},"b":{"61":{}}}],["ppc",{"_index":2725,"t":{},"b":{"4":{}}}],["ppm2rnm",{"_index":7219,"t":{},"b":{"13":{}}}],["ppp",{"_index":10385,"t":{},"b":{"37":{},"42":{},"45":{}}}],["ppp[].sum",{"_index":10395,"t":{},"b":{"37":{}}}],["ppsc",{"_index":471,"t":{},"b":{"2":{}}}],["pqaaayyq",{"_index":6359,"t":{},"b":{"13":{},"48":{}}}],["pr",{"_index":3128,"t":{},"b":{"5":{},"10":{}}}],["pr#a",{"_index":3133,"t":{},"b":{"5":{},"10":{}}}],["pr#a(prfe#k[int",{"_index":3152,"t":{},"b":{"5":{}}}],["pr#aeprec",{"_index":3298,"t":{},"b":{"5":{}}}],["pr#aeprec(pr#prfe#k[int",{"_index":3297,"t":{},"b":{"5":{}}}],["pr#aglob",{"_index":3147,"t":{},"b":{"5":{}}}],["pr#aglobeprec",{"_index":3293,"t":{},"b":{"5":{}}}],["pr#ar",{"_index":3183,"t":{},"b":{"5":{}}}],["pr#arbelow",{"_index":3174,"t":{},"b":{"5":{}}}],["pr#ard",{"_index":3148,"t":{},"b":{"5":{}}}],["pr#ard[mpirank(prmesh#commddm",{"_index":3150,"t":{},"b":{"5":{}}}],["pr#ardbelow",{"_index":3130,"t":{},"b":{"5":{}}}],["pr#ardeprec",{"_index":3295,"t":{},"b":{"5":{}}}],["pr#at",{"_index":3155,"t":{},"b":{"5":{}}}],["pr#at(prfe#k[int",{"_index":3153,"t":{},"b":{"5":{}}}],["pr#coarsefgmr",{"_index":3421,"t":{},"b":{"5":{}}}],["pr#corr",{"_index":3222,"t":{},"b":{"5":{}}}],["pr#directsolv",{"_index":3134,"t":{},"b":{"5":{}}}],["pr#directsolve(k[int",{"_index":3724,"t":{},"b":{"10":{}}}],["pr#directsolve(prfe#k[int",{"_index":3157,"t":{},"b":{"5":{}}}],["pr#e",{"_index":3273,"t":{},"b":{"5":{}}}],["pr#ecm",{"_index":3305,"t":{},"b":{"5":{}}}],["pr#fgmre",{"_index":3214,"t":{},"b":{"5":{}}}],["pr#fgmres(k[int",{"_index":3730,"t":{},"b":{"10":{}}}],["pr#fgmres(pr#prfe#k[int",{"_index":3211,"t":{},"b":{"5":{}}}],["pr#hpddmop",{"_index":3321,"t":{},"b":{"5":{}}}],["pr#ncoarsespac",{"_index":3226,"t":{},"b":{"5":{}}}],["pr#prec",{"_index":3175,"t":{},"b":{"5":{}}}],["pr#prec(pr#prfe#k[int",{"_index":3205,"t":{},"b":{"5":{}}}],["pr#prec1",{"_index":3201,"t":{},"b":{"5":{},"10":{}}}],["pr#prec1(pr#prfe#k[int",{"_index":3200,"t":{},"b":{"5":{}}}],["pr#prec2level",{"_index":3210,"t":{},"b":{"5":{}}}],["pr#prec2level(pr#prfe#k[int",{"_index":3255,"t":{},"b":{"5":{}}}],["pr#prfe",{"_index":3140,"t":{},"b":{"5":{}}}],["pr#prfe#coarsevhi",{"_index":3423,"t":{},"b":{"5":{}}}],["pr#prfe#fpk",{"_index":3292,"t":{},"b":{"5":{}}}],["pr#prfe#k[int",{"_index":3199,"t":{},"b":{"5":{}}}],["pr#prfe#k[int][int",{"_index":3274,"t":{},"b":{"5":{}}}],["pr#prfe#prmesh#binexactc",{"_index":3422,"t":{},"b":{"5":{}}}],["pr#prfe#prmesh#pc",{"_index":3252,"t":{},"b":{"5":{}}}],["pr#prfe#upd",{"_index":3300,"t":{},"b":{"5":{}}}],["pr#prfe#vhglob",{"_index":3294,"t":{},"b":{"5":{}}}],["pr#prfe#vhi",{"_index":3304,"t":{},"b":{"5":{}}}],["pr#q",{"_index":3250,"t":{},"b":{"5":{}}}],["pr#q(pr#prfe#k[int",{"_index":3249,"t":{},"b":{"5":{}}}],["pr#scalprod",{"_index":3216,"t":{},"b":{"5":{}}}],["pr#thcoars",{"_index":3290,"t":{},"b":{"5":{}}}],["pr#verbos",{"_index":3141,"t":{},"b":{"5":{}}}],["pr#vhcoars",{"_index":3291,"t":{},"b":{"5":{}}}],["pr#withhpddm",{"_index":3320,"t":{},"b":{"5":{},"10":{}}}],["pr#withhpddmkrylov",{"_index":3328,"t":{},"b":{"5":{},"10":{}}}],["pr#writesummari",{"_index":3143,"t":{},"b":{"5":{}}}],["pr#z",{"_index":3266,"t":{},"b":{"5":{}}}],["pr#zcm",{"_index":3301,"t":{},"b":{"5":{}}}],["pr#zcmi",{"_index":3302,"t":{},"b":{"5":{}}}],["practic",{"_index":3077,"t":{},"b":{"5":{},"11":{},"51":{}}}],["pre",{"_index":13793,"t":{},"b":{"58":{}}}],["prec",{"_index":7618,"t":{},"b":{"15":{}}}],["precis",{"_index":1350,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"15":{},"52":{},"76":{}}}],["precismesh",{"_index":6588,"t":{},"b":{"13":{}}}],["precon",{"_index":540,"t":{},"b":{"3":{},"11":{},"15":{},"20":{},"26":{},"45":{},"54":{},"60":{}}}],["precondit",{"_index":584,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"16":{},"45":{},"50":{},"54":{},"60":{}}}],["precondition",{"_index":470,"t":{},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"45":{},"60":{}}}],["preconditionn",{"_index":672,"t":{},"b":{"3":{},"15":{},"20":{},"26":{}}}],["predict",{"_index":3581,"t":{},"b":{"8":{},"72":{}}}],["prefer",{"_index":10140,"t":{},"b":{"35":{}}}],["prefix",{"_index":1951,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"13":{},"35":{}}}],["prepar",{"_index":5092,"t":{},"b":{"12":{}}}],["preparata",{"_index":76,"t":{},"b":{"2":{}}}],["preparata1985",{"_index":75,"t":{},"b":{"2":{},"33":{}}}],["preprint",{"_index":462,"t":{},"b":{"2":{}}}],["preprocess",{"_index":7704,"t":{},"b":{"15":{}}}],["preprocessor",{"_index":11721,"t":{},"b":{"46":{}}}],["prescrib",{"_index":5090,"t":{},"b":{"12":{},"13":{},"37":{},"61":{},"66":{}}}],["present",{"_index":2156,"t":{},"b":{"3":{},"9":{},"11":{},"13":{},"15":{},"19":{},"27":{},"38":{},"50":{},"76":{},"77":{}}}],["preserv",{"_index":6713,"t":{},"b":{"13":{},"21":{},"54":{},"61":{}}}],["press",{"_index":14605,"t":{},"b":{"70":{}}}],["pressur",{"_index":2915,"t":{},"b":{"4":{},"16":{},"25":{},"42":{},"45":{},"48":{},"61":{},"62":{},"67":{},"73":{},"74":{},"78":{}}}],["prev",{"_index":13662,"t":{},"b":{"54":{}}}],["previou",{"_index":473,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["previous",{"_index":1253,"t":{},"b":{"3":{},"5":{},"13":{},"48":{},"60":{}}}],["prfe",{"_index":3065,"t":{},"b":{"5":{},"10":{}}}],["prfe#dih",{"_index":3082,"t":{},"b":{"5":{}}}],["prfe#dih[i",{"_index":3110,"t":{},"b":{"5":{}}}],["prfe#dk",{"_index":3081,"t":{},"b":{"5":{}}}],["prfe#dk[i",{"_index":3111,"t":{},"b":{"5":{}}}],["prfe#dk[mpirank(prmesh#commddm",{"_index":3108,"t":{},"b":{"5":{}}}],["prfe#fpk",{"_index":3097,"t":{},"b":{"5":{}}}],["prfe#k",{"_index":3096,"t":{},"b":{"5":{}}}],["prfe#k[int",{"_index":3151,"t":{},"b":{"5":{}}}],["prfe#k[int][int",{"_index":3107,"t":{},"b":{"5":{}}}],["prfe#mdef",{"_index":3102,"t":{},"b":{"5":{}}}],["prfe#minit",{"_index":3103,"t":{},"b":{"5":{}}}],["prfe#ndofglob",{"_index":3100,"t":{},"b":{"5":{}}}],["prfe#prmesh",{"_index":3094,"t":{},"b":{"5":{}}}],["prfe#prmesh#npart",{"_index":3149,"t":{},"b":{"5":{}}}],["prfe#rih",{"_index":3115,"t":{},"b":{"5":{}}}],["prfe#rih[mpirank(prmesh#commddm",{"_index":3116,"t":{},"b":{"5":{}}}],["prfe#scalprod",{"_index":3093,"t":{},"b":{"5":{}}}],["prfe#scalprod(scalar[int",{"_index":3121,"t":{},"b":{"5":{}}}],["prfe#transferfromvhi",{"_index":3340,"t":{},"b":{"5":{}}}],["prfe#transferfromvhi(us,vht,pkt,rest",{"_index":3344,"t":{},"b":{"5":{}}}],["prfe#upd",{"_index":3083,"t":{},"b":{"5":{},"10":{}}}],["prfe#update(k[int",{"_index":3701,"t":{},"b":{"10":{}}}],["prfe#update(scalar[int",{"_index":3117,"t":{},"b":{"5":{}}}],["prfe#vhglob",{"_index":3112,"t":{},"b":{"5":{}}}],["prfe#vhi",{"_index":3099,"t":{},"b":{"5":{},"10":{}}}],["price",{"_index":293,"t":{},"b":{"2":{}}}],["primal",{"_index":359,"t":{},"b":{"2":{},"3":{}}}],["princip",{"_index":5131,"t":{},"b":{"13":{},"40":{}}}],["principl",{"_index":2162,"t":{},"b":{"3":{},"8":{},"11":{},"15":{},"41":{}}}],["print",{"_index":1317,"t":{},"b":{"3":{},"5":{},"13":{},"15":{},"35":{},"52":{},"72":{},"79":{}}}],["printf",{"_index":8468,"t":{},"b":{"18":{}}}],["printf(\"cc",{"_index":8464,"t":{},"b":{"18":{}}}],["printf(\"end",{"_index":8476,"t":{},"b":{"18":{}}}],["printlevel",{"_index":1315,"t":{},"b":{"3":{}}}],["printout",{"_index":5096,"t":{},"b":{"12":{}}}],["printstat",{"_index":7886,"t":{},"b":{"15":{}}}],["prism",{"_index":5997,"t":{},"b":{"13":{}}}],["prismat",{"_index":5987,"t":{},"b":{"13":{}}}],["prmesh",{"_index":3027,"t":{},"b":{"5":{},"10":{}}}],["prmesh#arrayintersect",{"_index":3061,"t":{},"b":{"5":{}}}],["prmesh#ath",{"_index":3055,"t":{},"b":{"5":{}}}],["prmesh#ath[mpirank(prmesh#commddm",{"_index":3056,"t":{},"b":{"5":{}}}],["prmesh#binexactc",{"_index":3407,"t":{},"b":{"5":{}}}],["prmesh#coars",{"_index":3406,"t":{},"b":{"5":{}}}],["prmesh#commc",{"_index":3050,"t":{},"b":{"5":{}}}],["prmesh#commddm",{"_index":3047,"t":{},"b":{"5":{}}}],["prmesh#commself",{"_index":3053,"t":{},"b":{"5":{}}}],["prmesh#exclud",{"_index":3044,"t":{},"b":{"5":{}}}],["prmesh#npart",{"_index":3041,"t":{},"b":{"5":{}}}],["prmesh#numberintersect",{"_index":3059,"t":{},"b":{"5":{}}}],["prmesh#pc",{"_index":3043,"t":{},"b":{"5":{}}}],["prmesh#pcs+prmesh#npart",{"_index":3049,"t":{},"b":{"5":{}}}],["prmesh#thglob",{"_index":3113,"t":{},"b":{"5":{}}}],["prmesh#thi",{"_index":3058,"t":{},"b":{"5":{},"10":{}}}],["probabl",{"_index":14097,"t":{},"b":{"61":{}}}],["probem1",{"_index":12245,"t":{},"b":{"48":{}}}],["problem",{"_index":244,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["problem(u",{"_index":6849,"t":{},"b":{"13":{}}}],["problem2",{"_index":7053,"t":{},"b":{"13":{}}}],["problem2(u3",{"_index":7046,"t":{},"b":{"13":{}}}],["problemat",{"_index":1210,"t":{},"b":{"3":{}}}],["problemlogo",{"_index":11222,"t":{"42":{},"49":{},"61":{}},"b":{}}],["problemslogo",{"_index":10497,"t":{"39":{},"41":{},"43":{},"47":{},"48":{}},"b":{}}],["proc",{"_index":7410,"t":{},"b":{"15":{}}}],["proc1",{"_index":7404,"t":{},"b":{"15":{}}}],["proc2",{"_index":7405,"t":{},"b":{"15":{}}}],["proce",{"_index":5137,"t":{},"b":{"13":{},"49":{}}}],["procedur",{"_index":1695,"t":{},"b":{"3":{},"8":{},"12":{},"13":{},"17":{},"51":{},"54":{},"79":{}}}],["proceed",{"_index":125,"t":{},"b":{"2":{}}}],["process",{"_index":526,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{},"19":{},"26":{},"79":{}}}],["processor",{"_index":3395,"t":{},"b":{"5":{},"7":{},"8":{},"15":{}}}],["processor(0",{"_index":7610,"t":{},"b":{"15":{},"26":{}}}],["processor(1",{"_index":7441,"t":{},"b":{"15":{}}}],["processor(10",{"_index":7443,"t":{},"b":{"15":{}}}],["processor(comm",{"_index":7427,"t":{},"b":{"15":{}}}],["processor(i",{"_index":7425,"t":{},"b":{"15":{}}}],["processor(int",{"_index":8213,"t":{},"b":{"15":{}}}],["processor(mpianysourc",{"_index":7426,"t":{},"b":{"15":{}}}],["processor(mpicomm",{"_index":8214,"t":{},"b":{"15":{}}}],["processor(rlead",{"_index":8209,"t":{},"b":{"15":{}}}],["processorblock",{"_index":7437,"t":{},"b":{"15":{}}}],["processorblock(i",{"_index":7428,"t":{},"b":{"15":{}}}],["processorblock(int",{"_index":8215,"t":{},"b":{"15":{}}}],["processorblock(mpianysourc",{"_index":7429,"t":{},"b":{"15":{}}}],["prode",{"_index":14063,"t":{},"b":{"61":{}}}],["prode*kp/epp*0.09/0.126",{"_index":14115,"t":{},"b":{"61":{}}}],["prodk",{"_index":14062,"t":{},"b":{"61":{}}}],["produc",{"_index":3372,"t":{},"b":{"5":{},"7":{},"13":{},"72":{},"74":{}}}],["product",{"_index":2307,"t":{},"b":{"4":{},"5":{},"8":{},"11":{},"12":{},"14":{},"15":{},"21":{},"39":{},"50":{},"51":{},"54":{},"58":{},"60":{},"64":{},"66":{},"73":{}}}],["professor",{"_index":9748,"t":{},"b":{"29":{}}}],["profil",{"_index":11941,"t":{},"b":{"48":{},"66":{}}}],["program",{"_index":30,"t":{},"b":{"2":{},"3":{},"12":{},"13":{},"15":{},"18":{},"33":{},"34":{},"35":{},"41":{},"48":{},"54":{},"62":{},"63":{},"66":{},"69":{},"70":{},"72":{},"75":{},"76":{}}}],["progress",{"_index":8105,"t":{},"b":{"15":{}}}],["prohibit",{"_index":3583,"t":{},"b":{"8":{}}}],["project",{"_index":1843,"t":{"74":{}},"b":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"33":{},"48":{},"50":{},"54":{},"60":{},"66":{},"73":{},"74":{},"78":{}}}],["projection(a",{"_index":13675,"t":{},"b":{"54":{}}}],["prolong",{"_index":11073,"t":{},"b":{"41":{}}}],["proof",{"_index":4275,"t":{},"b":{"11":{},"72":{}}}],["propag",{"_index":3283,"t":{},"b":{"5":{},"8":{},"10":{},"71":{},"80":{},"81":{}}}],["propagationlogo",{"_index":15353,"t":{"81":{}},"b":{}}],["properti",{"_index":4144,"t":{},"b":{"11":{},"13":{},"14":{},"42":{},"54":{},"64":{},"76":{}}}],["proport",{"_index":5118,"t":{},"b":{"12":{},"13":{},"48":{},"63":{},"79":{}}}],["propos",{"_index":1632,"t":{},"b":{"3":{},"11":{},"47":{},"74":{}}}],["prototyp",{"_index":513,"t":{},"b":{"3":{},"7":{},"11":{},"54":{},"60":{}}}],["provabl",{"_index":3639,"t":{},"b":{"8":{}}}],["prove",{"_index":2912,"t":{},"b":{"4":{},"8":{},"15":{},"79":{}}}],["provid",{"_index":725,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"15":{},"16":{},"17":{},"35":{},"36":{},"37":{},"67":{},"70":{}}}],["prudhomm",{"_index":9878,"t":{},"b":{"33":{}}}],["ps",{"_index":5223,"t":{},"b":{"13":{},"19":{},"54":{},"62":{},"63":{},"64":{},"67":{},"69":{},"72":{},"74":{},"75":{},"77":{}}}],["psemaphor",{"_index":8424,"t":{},"b":{"18":{}}}],["pseudo",{"_index":3370,"t":{},"b":{"5":{},"13":{},"24":{},"54":{}}}],["psh",{"_index":7965,"t":{},"b":{"15":{}}}],["psi",{"_index":4198,"t":{},"b":{"11":{},"45":{},"48":{},"66":{}}}],["psi(1",{"_index":2421,"t":{},"b":{"4":{}}}],["psi(2",{"_index":2422,"t":{},"b":{"4":{}}}],["psi0",{"_index":11998,"t":{},"b":{"48":{}}}],["psi0(0.99",{"_index":12010,"t":{},"b":{"48":{}}}],["psi0(0.99,0.01",{"_index":12009,"t":{},"b":{"48":{}}}],["psi1",{"_index":2417,"t":{},"b":{"4":{},"48":{}}}],["psi1(0.99",{"_index":12012,"t":{},"b":{"48":{}}}],["psi1(0.99,0.01",{"_index":12011,"t":{},"b":{"48":{}}}],["psi2",{"_index":2418,"t":{},"b":{"4":{}}}],["psi\\mbox",{"_index":14374,"t":{},"b":{"66":{}}}],["psi_i",{"_index":4197,"t":{},"b":{"11":{}}}],["psi_i(x",{"_index":4196,"t":{},"b":{"11":{}}}],["psi_i)_{i",{"_index":4155,"t":{},"b":{"11":{}}}],["psi|_{c",{"_index":14377,"t":{},"b":{"66":{}}}],["pt",{"_index":2548,"t":{},"b":{"4":{}}}],["pt[p",{"_index":2555,"t":{},"b":{"4":{}}}],["ptap",{"_index":8254,"t":{},"b":{"16":{}}}],["pthread",{"_index":8492,"t":{},"b":{"18":{}}}],["ptmerg",{"_index":6012,"t":{},"b":{"13":{},"54":{}}}],["ptr",{"_index":2842,"t":{},"b":{"4":{}}}],["pu",{"_index":11340,"t":{},"b":{"43":{}}}],["public",{"_index":2534,"t":{},"b":{"4":{}}}],["publish",{"_index":8508,"t":{},"b":{"19":{}}}],["pull",{"_index":9824,"t":{},"b":{"31":{}}}],["pure",{"_index":1197,"t":{"77":{}},"b":{"3":{},"4":{},"64":{},"66":{},"77":{}}}],["purpos",{"_index":1051,"t":{},"b":{"3":{},"5":{},"12":{},"19":{},"54":{}}}],["put",{"_index":536,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"26":{},"35":{},"39":{},"41":{},"45":{},"66":{},"74":{},"81":{}}}],["pv",{"_index":11344,"t":{},"b":{"43":{},"79":{}}}],["pw",{"_index":4494,"t":{},"b":{"11":{}}}],["pygment",{"_index":9849,"t":{},"b":{"32":{}}}],["pyramid",{"_index":5998,"t":{},"b":{"13":{}}}],["python",{"_index":10043,"t":{},"b":{"35":{}}}],["python2",{"_index":10060,"t":{},"b":{"35":{}}}],["python3",{"_index":10061,"t":{},"b":{"35":{}}}],["p|_\\gamma",{"_index":15063,"t":{},"b":{"75":{}}}],["p}(\\xi_1,\\xi_2,\\xi_3",{"_index":10620,"t":{},"b":{"40":{}}}],["pérez",{"_index":9789,"t":{},"b":{"29":{}}}],["q",{"_index":1853,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"20":{},"25":{},"37":{},"42":{},"43":{},"45":{},"48":{},"51":{},"61":{},"65":{},"73":{},"74":{},"76":{},"81":{}}}],["q*n",{"_index":13919,"t":{},"b":{"60":{}}}],["q+e",{"_index":15388,"t":{},"b":{"81":{}}}],["q+e*t",{"_index":15386,"t":{},"b":{"81":{}}}],["q00",{"_index":5720,"t":{},"b":{"13":{},"24":{}}}],["q00[0",{"_index":5735,"t":{},"b":{"13":{},"24":{}}}],["q00[1",{"_index":5739,"t":{},"b":{"13":{},"24":{}}}],["q01",{"_index":5721,"t":{},"b":{"13":{},"24":{}}}],["q01[0",{"_index":5736,"t":{},"b":{"13":{},"24":{}}}],["q01[1",{"_index":5740,"t":{},"b":{"13":{},"24":{}}}],["q1",{"_index":5709,"t":{},"b":{"13":{},"24":{}}}],["q1*3*(1",{"_index":5713,"t":{},"b":{"13":{},"24":{}}}],["q10",{"_index":5723,"t":{},"b":{"13":{},"24":{}}}],["q10[0",{"_index":5744,"t":{},"b":{"13":{},"24":{}}}],["q10[1",{"_index":5748,"t":{},"b":{"13":{},"24":{}}}],["q11",{"_index":5725,"t":{},"b":{"13":{},"24":{}}}],["q11[0",{"_index":5745,"t":{},"b":{"13":{},"24":{}}}],["q11[1",{"_index":5749,"t":{},"b":{"13":{},"24":{}}}],["q2",{"_index":5710,"t":{},"b":{"13":{},"24":{}}}],["q2*3*(1",{"_index":5715,"t":{},"b":{"13":{},"24":{}}}],["q20",{"_index":5727,"t":{},"b":{"13":{},"24":{}}}],["q20[0",{"_index":5753,"t":{},"b":{"13":{},"24":{}}}],["q20[1",{"_index":5757,"t":{},"b":{"13":{},"24":{}}}],["q21",{"_index":5729,"t":{},"b":{"13":{},"24":{}}}],["q21[0",{"_index":5754,"t":{},"b":{"13":{},"24":{}}}],["q21[1",{"_index":5758,"t":{},"b":{"13":{},"24":{}}}],["q30",{"_index":5730,"t":{},"b":{"13":{},"24":{}}}],["q30[0",{"_index":5762,"t":{},"b":{"13":{},"24":{}}}],["q30[1",{"_index":5766,"t":{},"b":{"13":{},"24":{}}}],["q31",{"_index":5731,"t":{},"b":{"13":{},"24":{}}}],["q31[0",{"_index":5763,"t":{},"b":{"13":{},"24":{}}}],["q31[1",{"_index":5767,"t":{},"b":{"13":{},"24":{}}}],["q\\delta",{"_index":14910,"t":{},"b":{"74":{}}}],["q\\hbox{~vertex",{"_index":4384,"t":{},"b":{"11":{}}}],["q\\in",{"_index":11384,"t":{},"b":{"45":{},"60":{}}}],["q\\over",{"_index":11333,"t":{},"b":{"43":{}}}],["q^0",{"_index":4404,"t":{},"b":{"11":{}}}],["q^0_i",{"_index":4399,"t":{},"b":{"11":{}}}],["q^0_j",{"_index":4394,"t":{},"b":{"11":{}}}],["q^0q^1",{"_index":4409,"t":{},"b":{"11":{}}}],["q^1",{"_index":4392,"t":{},"b":{"11":{},"13":{}}}],["q^1\\in",{"_index":4405,"t":{},"b":{"11":{}}}],["q^1_i",{"_index":6887,"t":{},"b":{"13":{}}}],["q^1_x",{"_index":6886,"t":{},"b":{"13":{}}}],["q^1_x\\quad",{"_index":6811,"t":{},"b":{"13":{}}}],["q^1_y\\quad",{"_index":6812,"t":{},"b":{"13":{}}}],["q^1_z",{"_index":6888,"t":{},"b":{"13":{}}}],["q^2_i",{"_index":6890,"t":{},"b":{"13":{}}}],["q^2_x",{"_index":6889,"t":{},"b":{"13":{}}}],["q^2_x\\quad",{"_index":6813,"t":{},"b":{"13":{}}}],["q^2_y\\quad",{"_index":6814,"t":{},"b":{"13":{}}}],["q^2_z",{"_index":6891,"t":{},"b":{"13":{}}}],["q^5",{"_index":6802,"t":{},"b":{"13":{}}}],["q^6",{"_index":6801,"t":{},"b":{"13":{}}}],["q^9",{"_index":6795,"t":{},"b":{"13":{}}}],["q^i",{"_index":4113,"t":{},"b":{"11":{},"13":{},"14":{},"76":{}}}],["q^i,~i",{"_index":15101,"t":{},"b":{"76":{}}}],["q^i\\not\\in",{"_index":7335,"t":{},"b":{"14":{}}}],["q^i_x,q^i_i",{"_index":6784,"t":{},"b":{"13":{}}}],["q^i_x,q^i_y,q^i_z",{"_index":6910,"t":{},"b":{"13":{}}}],["q^iq^j",{"_index":4613,"t":{},"b":{"11":{},"14":{}}}],["q^iq^j||/2",{"_index":4631,"t":{},"b":{"11":{}}}],["q^j",{"_index":4626,"t":{},"b":{"11":{},"14":{}}}],["q^{10",{"_index":6797,"t":{},"b":{"13":{}}}],["q^{12",{"_index":6796,"t":{},"b":{"13":{}}}],["q^{14",{"_index":6794,"t":{},"b":{"13":{}}}],["q^{14}_x\\quad",{"_index":6815,"t":{},"b":{"13":{}}}],["q^{14}_y\\quad",{"_index":6816,"t":{},"b":{"13":{}}}],["q^{6",{"_index":6799,"t":{},"b":{"13":{}}}],["q^{i_1",{"_index":6790,"t":{},"b":{"13":{}}}],["q^{i_2",{"_index":6791,"t":{},"b":{"13":{}}}],["q^{j_1",{"_index":6915,"t":{},"b":{"13":{}}}],["q^{j_2},\\,q^{j_3",{"_index":6916,"t":{},"b":{"13":{}}}],["q^{k_1",{"_index":4124,"t":{},"b":{"11":{},"13":{}}}],["q^{k_1},q^{k_2},q^{k_3",{"_index":7327,"t":{},"b":{"14":{}}}],["q^{k_1}q^{k_2}q^{k_3",{"_index":4660,"t":{},"b":{"11":{}}}],["q^{k_2",{"_index":4137,"t":{},"b":{"11":{}}}],["q^{k_2},\\,q^{k_3",{"_index":6786,"t":{},"b":{"13":{}}}],["q^{k_2},q^{k_3",{"_index":4128,"t":{},"b":{"11":{}}}],["q^{k_4",{"_index":6912,"t":{},"b":{"13":{}}}],["q^{k_b",{"_index":4303,"t":{},"b":{"11":{}}}],["q^{k_i",{"_index":4103,"t":{},"b":{"11":{}}}],["q^{k_i}+q^{k_{i+1}})/2",{"_index":4265,"t":{},"b":{"11":{}}}],["q^{k_i}}{d+1",{"_index":4108,"t":{},"b":{"11":{}}}],["q^{k_j",{"_index":7329,"t":{},"b":{"14":{}}}],["q^{n_v}_i",{"_index":6893,"t":{},"b":{"13":{}}}],["q^{n_v}_x",{"_index":6892,"t":{},"b":{"13":{}}}],["q^{n_v}_z",{"_index":6894,"t":{},"b":{"13":{}}}],["q_1\\varphi_1+\\cdot",{"_index":11409,"t":{},"b":{"45":{}}}],["q_c",{"_index":7765,"t":{},"b":{"15":{}}}],["q_h",{"_index":11408,"t":{},"b":{"45":{}}}],["q_h\\in",{"_index":11425,"t":{},"b":{"45":{}}}],["q_h\\|_{0,\\omega}\\quad",{"_index":11431,"t":{},"b":{"45":{}}}],["q_h\\|_{0,\\omega}\\right",{"_index":11439,"t":{},"b":{"45":{}}}],["q_i",{"_index":13746,"t":{},"b":{"55":{}}}],["q_j",{"_index":13747,"t":{},"b":{"55":{}}}],["q_{h",{"_index":11418,"t":{},"b":{"45":{}}}],["q_{m_w}\\varphi_{m_w",{"_index":11410,"t":{},"b":{"45":{}}}],["qf1",{"_index":4749,"t":{},"b":{"11":{}}}],["qf1(1",{"_index":4750,"t":{},"b":{"11":{}}}],["qf1)(x^2",{"_index":4762,"t":{},"b":{"11":{}}}],["qf11to25",{"_index":4740,"t":{},"b":{"11":{},"53":{}}}],["qf1d",{"_index":13424,"t":{},"b":{"53":{}}}],["qf1pe",{"_index":4628,"t":{},"b":{"11":{},"59":{}}}],["qf1pelump",{"_index":4651,"t":{},"b":{"11":{},"59":{}}}],["qf1pelump)(x^2",{"_index":4764,"t":{},"b":{"11":{}}}],["qf1pt",{"_index":3991,"t":{},"b":{"11":{},"59":{}}}],["qf1ptlump",{"_index":4700,"t":{},"b":{"11":{},"59":{}}}],["qf1ptlump)(x^2",{"_index":4768,"t":{},"b":{"11":{}}}],["qf2",{"_index":4754,"t":{},"b":{"11":{}}}],["qf2(1",{"_index":4755,"t":{},"b":{"11":{}}}],["qf2)(x^2",{"_index":4766,"t":{},"b":{"11":{}}}],["qf2d",{"_index":13425,"t":{},"b":{"53":{}}}],["qf2pe",{"_index":4629,"t":{},"b":{"11":{},"59":{}}}],["qf2pe)(f",{"_index":4656,"t":{},"b":{"11":{}}}],["qf2pt",{"_index":3993,"t":{},"b":{"11":{},"45":{},"59":{}}}],["qf2pt4p1",{"_index":4704,"t":{},"b":{"11":{},"59":{}}}],["qf3",{"_index":4758,"t":{},"b":{"11":{}}}],["qf3(1",{"_index":4759,"t":{},"b":{"11":{}}}],["qf3d",{"_index":13426,"t":{},"b":{"53":{}}}],["qf3pe",{"_index":4632,"t":{},"b":{"11":{},"59":{}}}],["qf4pe",{"_index":4636,"t":{},"b":{"11":{},"59":{}}}],["qf5pe",{"_index":4643,"t":{},"b":{"11":{},"59":{}}}],["qf5pt",{"_index":3987,"t":{},"b":{"11":{},"59":{}}}],["qf7pt",{"_index":3996,"t":{},"b":{"11":{},"59":{}}}],["qf9pt",{"_index":3998,"t":{},"b":{"11":{},"59":{}}}],["qfe",{"_index":4624,"t":{},"b":{"11":{},"54":{},"59":{}}}],["qfnbpe",{"_index":4880,"t":{},"b":{"11":{},"48":{}}}],["qforder",{"_index":4625,"t":{},"b":{"11":{},"25":{},"37":{},"46":{},"48":{},"54":{},"59":{}}}],["qft",{"_index":4680,"t":{},"b":{"11":{},"45":{}}}],["qfv",{"_index":4719,"t":{},"b":{"11":{}}}],["qfv1",{"_index":4000,"t":{},"b":{"11":{},"59":{}}}],["qfv1lump",{"_index":4730,"t":{},"b":{"11":{},"59":{}}}],["qfv2",{"_index":4002,"t":{},"b":{"11":{},"59":{}}}],["qfv5",{"_index":3988,"t":{},"b":{"11":{},"59":{}}}],["qh",{"_index":4033,"t":{},"b":{"11":{},"80":{}}}],["qh(th",{"_index":15329,"t":{},"b":{"80":{}}}],["qpp(comm",{"_index":8190,"t":{},"b":{"15":{}}}],["qq1",{"_index":4748,"t":{},"b":{"11":{}}}],["qq2",{"_index":4752,"t":{},"b":{"11":{}}}],["qq3",{"_index":4756,"t":{},"b":{"11":{}}}],["qqp(processor(0",{"_index":8207,"t":{},"b":{"15":{}}}],["qquad",{"_index":4780,"t":{},"b":{"11":{},"40":{},"45":{},"48":{},"66":{},"76":{},"77":{}}}],["qquad\\mathbb{v",{"_index":12225,"t":{},"b":{"48":{}}}],["qsrt(2",{"_index":13803,"t":{},"b":{"58":{}}}],["quad",{"_index":596,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"15":{},"24":{},"37":{},"38":{},"39":{},"40":{},"43":{},"45":{},"46":{},"48":{},"50":{},"64":{},"66":{},"68":{},"69":{},"72":{},"76":{},"77":{}}}],["quad\\mathrm{on",{"_index":12228,"t":{},"b":{"48":{}}}],["quad\\mbox{where}\\quad",{"_index":15150,"t":{},"b":{"77":{}}}],["quadrangl",{"_index":5120,"t":{},"b":{"12":{},"38":{}}}],["quadrat",{"_index":688,"t":{},"b":{"3":{},"11":{},"12":{},"33":{},"51":{},"65":{}}}],["quadratur",{"_index":456,"t":{"59":{}},"b":{"2":{},"4":{},"11":{},"54":{},"55":{},"58":{},"59":{},"77":{}}}],["quadratureformular.cpp",{"_index":2713,"t":{},"b":{"4":{}}}],["quadratureformular.hpp",{"_index":2714,"t":{},"b":{"4":{}}}],["quadrilater",{"_index":2202,"t":{},"b":{"4":{},"11":{},"13":{}}}],["quadrilaterals](int",{"_index":2203,"t":{},"b":{"4":{}}}],["quadtre",{"_index":4390,"t":{},"b":{"11":{},"33":{}}}],["quad}\\omega\\subset",{"_index":14318,"t":{},"b":{"65":{}}}],["qualifi",{"_index":14757,"t":{},"b":{"72":{},"76":{}}}],["qualify",{"_index":15171,"t":{},"b":{"77":{}}}],["qualiti",{"_index":113,"t":{},"b":{"2":{},"12":{},"13":{},"15":{},"51":{},"81":{}}}],["quantil",{"_index":8935,"t":{},"b":{"21":{},"60":{}}}],["quantiti",{"_index":3664,"t":{},"b":{"9":{},"37":{},"54":{}}}],["quantum",{"_index":12406,"t":{},"b":{"51":{}}}],["quasi",{"_index":14995,"t":{},"b":{"75":{}}}],["quation",{"_index":210,"t":{},"b":{"2":{}}}],["question",{"_index":9931,"t":{},"b":{"35":{}}}],["quick",{"_index":2155,"t":{},"b":{"3":{},"33":{},"66":{}}}],["quickli",{"_index":5086,"t":{},"b":{"12":{},"35":{}}}],["quiet",{"_index":6717,"t":{},"b":{"13":{}}}],["quit",{"_index":8585,"t":{},"b":{"19":{},"27":{},"45":{}}}],["quiver",{"_index":14676,"t":{},"b":{"71":{}}}],["quot",{"_index":7699,"t":{},"b":{"15":{},"21":{},"41":{},"60":{}}}],["r",{"_index":315,"t":{},"b":{"2":{},"3":{},"4":{},"8":{},"9":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"24":{},"40":{},"41":{},"48":{},"54":{},"55":{},"56":{},"60":{},"63":{},"67":{},"73":{},"79":{},"81":{}}}],["r(n",{"_index":5817,"t":{},"b":{"13":{},"40":{}}}],["r(t",{"_index":5811,"t":{},"b":{"13":{},"40":{}}}],["r(theta,phi)*cos(phi",{"_index":1704,"t":{},"b":{"3":{},"20":{}}}],["r(theta,phi)*cos(theta)*sin(phi",{"_index":1702,"t":{},"b":{"3":{},"20":{}}}],["r(theta,phi)*sin(theta)*sin(phi",{"_index":1703,"t":{},"b":{"3":{},"20":{}}}],["r){x",{"_index":14838,"t":{},"b":{"73":{}}}],["r*2*pi/h",{"_index":6372,"t":{},"b":{"13":{}}}],["r*cos(t",{"_index":5233,"t":{},"b":{"13":{},"24":{},"48":{}}}],["r*log(i",{"_index":13783,"t":{},"b":{"56":{}}}],["r*rh)/dt",{"_index":14499,"t":{},"b":{"67":{}}}],["r*sin(t",{"_index":5234,"t":{},"b":{"13":{},"24":{},"48":{}}}],["r*sin(y*pi*2",{"_index":6378,"t":{},"b":{"13":{}}}],["r+j",{"_index":15393,"t":{},"b":{"81":{}}}],["r+j*t",{"_index":15391,"t":{},"b":{"81":{}}}],["r+r*cos(y*pi*2))*cos(x*pi*2",{"_index":6374,"t":{},"b":{"13":{}}}],["r+r*cos(y*pi*2))*sin(x*pi*2",{"_index":6376,"t":{},"b":{"13":{}}}],["r,\\theta",{"_index":12166,"t":{},"b":{"48":{}}}],["r,real",{"_index":6492,"t":{},"b":{"13":{}}}],["r/2*exp",{"_index":1367,"t":{},"b":{"3":{}}}],["r/4",{"_index":14840,"t":{},"b":{"73":{}}}],["r/4){x",{"_index":14841,"t":{},"b":{"73":{}}}],["r0",{"_index":1672,"t":{},"b":{"3":{},"20":{}}}],["r1",{"_index":5648,"t":{},"b":{"13":{},"24":{},"67":{}}}],["r11",{"_index":5922,"t":{},"b":{"13":{},"24":{}}}],["r1t",{"_index":6071,"t":{},"b":{"13":{}}}],["r2",{"_index":2547,"t":{},"b":{"4":{},"13":{},"24":{},"48":{}}}],["r2(0.0",{"_index":2550,"t":{},"b":{"4":{}}}],["r2(0.5",{"_index":2549,"t":{},"b":{"4":{}}}],["r2t",{"_index":6072,"t":{},"b":{"13":{}}}],["r3",{"_index":6113,"t":{},"b":{"13":{},"24":{}}}],["r4",{"_index":6115,"t":{},"b":{"13":{},"24":{}}}],["r4t",{"_index":6074,"t":{},"b":{"13":{}}}],["r\\partial_t",{"_index":15280,"t":{},"b":{"79":{}}}],["r\\right.\\right",{"_index":3774,"t":{},"b":{"11":{}}}],["r^2",{"_index":4315,"t":{},"b":{"11":{}}}],["r^2}\\partial",{"_index":15276,"t":{},"b":{"79":{}}}],["r^d",{"_index":4450,"t":{},"b":{"11":{}}}],["r^{2",{"_index":3844,"t":{},"b":{"11":{}}}],["r^{2}\\sin(\\phi",{"_index":1579,"t":{},"b":{"3":{}}}],["r^{3/2",{"_index":5523,"t":{},"b":{"13":{}}}],["r^{\\#{\\mathcal",{"_index":3521,"t":{},"b":{"8":{}}}],["r^{d",{"_index":11100,"t":{},"b":{"41":{}}}],["r^{d},~d",{"_index":11097,"t":{},"b":{"41":{}}}],["r^{n",{"_index":4307,"t":{},"b":{"11":{}}}],["r^{n_c\\time",{"_index":3627,"t":{},"b":{"8":{}}}],["r_0",{"_index":7930,"t":{},"b":{"15":{}}}],["r_1,\\theta_1",{"_index":12165,"t":{},"b":{"48":{}}}],["r_c",{"_index":8110,"t":{},"b":{"15":{}}}],["r_h",{"_index":4027,"t":{},"b":{"11":{}}}],["r_i",{"_index":3088,"t":{},"b":{"5":{},"8":{},"10":{}}}],["r_i\\,r_j^t",{"_index":3564,"t":{},"b":{"8":{},"10":{}}}],["r_i\\,r_j^t)\\,d_j",{"_index":3605,"t":{},"b":{"8":{}}}],["r_i\\,r_j^t\\,d_j",{"_index":3562,"t":{},"b":{"8":{},"10":{}}}],["r_i\\,r_j^t\\,d_j\\,{\\mathbf",{"_index":3609,"t":{},"b":{"8":{}}}],["r_i\\,{\\mathbf",{"_index":3530,"t":{},"b":{"8":{},"10":{}}}],["r_i^t",{"_index":3129,"t":{},"b":{"5":{},"8":{},"10":{}}}],["r_i^t\\,d_i\\,r_i\\text",{"_index":3535,"t":{},"b":{"8":{}}}],["r_j",{"_index":3596,"t":{},"b":{"8":{}}}],["r_j,\\theta_j",{"_index":12164,"t":{},"b":{"48":{}}}],["r_j^t",{"_index":3090,"t":{},"b":{"5":{},"8":{},"10":{}}}],["r_j^t\\,d_j",{"_index":3601,"t":{},"b":{"8":{}}}],["r_j^{1/2}\\sin(\\theta_j/2",{"_index":12163,"t":{},"b":{"48":{}}}],["r_k^{1/2",{"_index":10785,"t":{},"b":{"40":{}}}],["r_{h",{"_index":4014,"t":{},"b":{"11":{}}}],["ra",{"_index":3179,"t":{},"b":{"5":{},"6":{},"8":{},"9":{},"10":{},"15":{},"26":{}}}],["raaq",{"_index":7177,"t":{},"b":{"13":{}}}],["raaq\",region",{"_index":6752,"t":{},"b":{"13":{}}}],["rad",{"_index":15322,"t":{},"b":{"79":{}}}],["radian",{"_index":12460,"t":{},"b":{"51":{}}}],["radiat",{"_index":15296,"t":{},"b":{"79":{}}}],["radiu",{"_index":5236,"t":{},"b":{"13":{},"24":{},"37":{},"51":{},"69":{}}}],["radius*cos((t",{"_index":12482,"t":{},"b":{"51":{}}}],["radius*cos(angle))*(1",{"_index":12479,"t":{},"b":{"51":{}}}],["radius*cos(angle))*(t",{"_index":12472,"t":{},"b":{"51":{}}}],["radius*sin((t",{"_index":12484,"t":{},"b":{"51":{}}}],["radius+3",{"_index":12458,"t":{},"b":{"51":{}}}],["radiussearch",{"_index":12617,"t":{},"b":{"53":{}}}],["radui",{"_index":6406,"t":{},"b":{"13":{}}}],["rag",{"_index":1697,"t":{},"b":{"3":{}}}],["ramp",{"_index":13975,"t":{},"b":{"61":{}}}],["ran",{"_index":13989,"t":{},"b":{"61":{}}}],["randinit",{"_index":13680,"t":{},"b":{"54":{}}}],["randinit(900",{"_index":15422,"t":{},"b":{"81":{}}}],["randinit(random",{"_index":8362,"t":{},"b":{"18":{}}}],["randinit(se",{"_index":13681,"t":{},"b":{"54":{},"60":{}}}],["randint31",{"_index":13682,"t":{},"b":{"54":{},"60":{}}}],["randint32",{"_index":13684,"t":{},"b":{"54":{},"60":{}}}],["random",{"_index":796,"t":{},"b":{"3":{},"18":{},"53":{},"54":{},"60":{},"81":{}}}],["randomli",{"_index":4400,"t":{},"b":{"11":{}}}],["randreal1",{"_index":13685,"t":{},"b":{"54":{},"60":{},"81":{}}}],["randreal1()*0.5i",{"_index":15425,"t":{},"b":{"81":{}}}],["randreal2",{"_index":13686,"t":{},"b":{"54":{},"60":{}}}],["randreal3",{"_index":13687,"t":{},"b":{"54":{},"60":{}}}],["randres53",{"_index":13688,"t":{},"b":{"54":{},"60":{}}}],["rang",{"_index":8312,"t":{},"b":{"17":{},"18":{},"19":{},"27":{},"51":{},"60":{},"65":{}}}],["rank",{"_index":3025,"t":{},"b":{"5":{},"8":{},"9":{},"15":{}}}],["rannacher’",{"_index":14980,"t":{},"b":{"74":{}}}],["raphson",{"_index":714,"t":{},"b":{"3":{},"47":{}}}],["rare",{"_index":4424,"t":{},"b":{"11":{},"65":{},"70":{},"77":{}}}],["rate",{"_index":265,"t":{},"b":{"2":{},"3":{},"72":{}}}],["ratio",{"_index":4228,"t":{},"b":{"11":{},"13":{},"40":{},"41":{},"53":{},"54":{},"61":{},"64":{},"67":{},"72":{}}}],["raugel",{"_index":432,"t":{},"b":{"2":{},"4":{},"11":{}}}],["raviart",{"_index":200,"t":{},"b":{"2":{},"4":{},"11":{},"12":{},"33":{},"48":{},"72":{}}}],["raviart1998",{"_index":199,"t":{},"b":{"2":{},"37":{}}}],["raviart–thoma",{"_index":3367,"t":{},"b":{"5":{}}}],["raw",{"_index":9061,"t":{},"b":{"21":{}}}],["rawvector",{"_index":10522,"t":{},"b":{"39":{}}}],["raxicurvatur",{"_index":12624,"t":{},"b":{"53":{}}}],["ray",{"_index":194,"t":{},"b":{"2":{}}}],["rbnn1",{"_index":3247,"t":{},"b":{"5":{},"9":{}}}],["rbnn2",{"_index":3244,"t":{},"b":{"5":{},"9":{}}}],["rc",{"_index":1872,"t":{},"b":{"3":{},"13":{},"20":{}}}],["rc*cos(i",{"_index":1883,"t":{},"b":{"3":{},"20":{}}}],["rc*cos(x)*sin(i",{"_index":1881,"t":{},"b":{"3":{},"20":{}}}],["rc*sin(x)*sin(i",{"_index":1882,"t":{},"b":{"3":{},"20":{}}}],["rc[]'*rc",{"_index":8761,"t":{},"b":{"20":{}}}],["rc[i]*cos(t",{"_index":5260,"t":{},"b":{"13":{}}}],["rc[i]*sin(t",{"_index":5262,"t":{},"b":{"13":{}}}],["rci",{"_index":7599,"t":{},"b":{"15":{},"26":{}}}],["rci*u",{"_index":7608,"t":{},"b":{"15":{},"26":{}}}],["rdown",{"_index":4072,"t":{},"b":{"11":{},"13":{},"15":{},"25":{}}}],["re",{"_index":1727,"t":{},"b":{"3":{},"13":{},"20":{},"33":{},"37":{},"45":{},"46":{},"47":{},"48":{},"53":{},"54":{},"58":{},"60":{},"69":{}}}],["re(v(x",{"_index":14129,"t":{},"b":{"62":{}}}],["reach",{"_index":1688,"t":{},"b":{"3":{},"9":{},"50":{}}}],["reaction",{"_index":11249,"t":{},"b":{"42":{}}}],["read",{"_index":2322,"t":{},"b":{"4":{},"8":{},"13":{},"15":{},"18":{},"26":{},"35":{},"37":{},"48":{},"52":{},"53":{},"54":{},"69":{},"70":{},"72":{}}}],["read(sharedata",{"_index":8431,"t":{},"b":{"18":{}}}],["read/writ",{"_index":2402,"t":{},"b":{"4":{},"13":{}}}],["readabl",{"_index":14570,"t":{},"b":{"69":{},"75":{}}}],["readdir",{"_index":13428,"t":{},"b":{"53":{}}}],["reader",{"_index":8319,"t":{},"b":{"17":{}}}],["readmesh",{"_index":6854,"t":{},"b":{"13":{},"54":{}}}],["readmesh(\"condensor.msh",{"_index":14585,"t":{},"b":{"69":{}}}],["readmesh(\"mesh.msh",{"_index":6777,"t":{},"b":{"13":{}}}],["readmesh(\"th_circle.mesh",{"_index":14486,"t":{},"b":{"67":{}}}],["readmesh(\"thff.msh",{"_index":6858,"t":{},"b":{"13":{}}}],["readmesh(\"toto.msh",{"_index":6847,"t":{},"b":{"13":{}}}],["readmesh(file_nam",{"_index":6779,"t":{},"b":{"13":{}}}],["readmesh(meshfilenam",{"_index":13689,"t":{},"b":{"54":{}}}],["readmesh3",{"_index":6922,"t":{},"b":{"13":{},"54":{}}}],["readmesh3(\"th",{"_index":12142,"t":{},"b":{"48":{}}}],["readmesh3(\"th3.mesh",{"_index":6923,"t":{},"b":{"13":{}}}],["readmesh3(\"th3ff.msh",{"_index":6925,"t":{},"b":{"13":{}}}],["readmesh3(meshfilenam",{"_index":13691,"t":{},"b":{"54":{}}}],["readmeshs(\"th.mesh",{"_index":6856,"t":{},"b":{"13":{}}}],["readmeshs(\"ths.mesh",{"_index":6946,"t":{},"b":{"13":{}}}],["readmeshs(\"thsff.msh",{"_index":6947,"t":{},"b":{"13":{}}}],["readpcm",{"_index":13420,"t":{},"b":{"53":{}}}],["readsol",{"_index":13389,"t":{},"b":{"53":{}}}],["real",{"_index":574,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"58":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["real(c",{"_index":13692,"t":{},"b":{"54":{}}}],["real(u",{"_index":8779,"t":{},"b":{"21":{}}}],["real(v",{"_index":14224,"t":{},"b":{"63":{}}}],["real(z",{"_index":8817,"t":{},"b":{"21":{}}}],["real(z1",{"_index":8829,"t":{},"b":{"21":{}}}],["real[int",{"_index":515,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"38":{},"39":{},"42":{},"45":{},"48":{},"50":{},"51":{},"53":{},"54":{},"56":{},"57":{},"58":{},"60":{},"61":{},"62":{},"68":{},"72":{},"74":{},"75":{},"77":{},"80":{}}}],["real[int,int",{"_index":1093,"t":{},"b":{"3":{},"13":{},"20":{},"21":{},"39":{}}}],["real[str",{"_index":8895,"t":{},"b":{"21":{},"60":{}}}],["real_pastix_freefem",{"_index":7715,"t":{},"b":{"15":{},"26":{}}}],["real_superlu",{"_index":7874,"t":{},"b":{"15":{}}}],["real_superlu_dist_freefem",{"_index":7712,"t":{},"b":{"15":{},"26":{}}}],["realdefaultopastix",{"_index":7727,"t":{},"b":{"15":{}}}],["realdefaulttosuperludist",{"_index":7725,"t":{},"b":{"15":{},"26":{}}}],["realiz",{"_index":7935,"t":{},"b":{"15":{},"45":{},"60":{}}}],["realli",{"_index":15364,"t":{},"b":{"81":{}}}],["rear",{"_index":11963,"t":{},"b":{"48":{}}}],["rearrang",{"_index":897,"t":{},"b":{"3":{}}}],["reasearch",{"_index":9785,"t":{},"b":{"29":{}}}],["reason",{"_index":1835,"t":{},"b":{"3":{},"13":{},"15":{},"65":{}}}],["rebas",{"_index":10084,"t":{},"b":{"35":{}}}],["reboot",{"_index":10144,"t":{},"b":{"35":{}}}],["rebuild",{"_index":6657,"t":{},"b":{"13":{},"36":{},"74":{}}}],["rebuildbord",{"_index":6650,"t":{},"b":{"13":{}}}],["rebuildborder(th",{"_index":6644,"t":{},"b":{"13":{}}}],["rebuildboundari",{"_index":6656,"t":{},"b":{"13":{}}}],["rebuilt",{"_index":2545,"t":{},"b":{"4":{}}}],["recal",{"_index":3598,"t":{},"b":{"8":{},"11":{},"15":{},"41":{},"72":{}}}],["receiv",{"_index":7442,"t":{},"b":{"15":{},"26":{}}}],["recent",{"_index":9984,"t":{},"b":{"35":{}}}],["recircul",{"_index":14912,"t":{},"b":{"74":{}}}],["recogn",{"_index":1154,"t":{},"b":{"3":{}}}],["recommend",{"_index":3688,"t":{},"b":{"10":{},"15":{},"37":{}}}],["recompil",{"_index":9871,"t":{},"b":{"33":{}}}],["recomput",{"_index":676,"t":{},"b":{"3":{}}}],["reconfigur",{"_index":2721,"t":{},"b":{"4":{},"35":{}}}],["reconstruct",{"_index":4516,"t":{},"b":{"11":{},"13":{},"60":{}}}],["reconstruct/refin",{"_index":6733,"t":{},"b":{"13":{}}}],["reconstructdmesh.edp",{"_index":8291,"t":{},"b":{"16":{}}}],["reconstrut",{"_index":6651,"t":{},"b":{"13":{}}}],["recopi",{"_index":15057,"t":{},"b":{"75":{}}}],["record",{"_index":12402,"t":{},"b":{"51":{}}}],["recov",{"_index":3400,"t":{},"b":{"5":{},"73":{}}}],["rect",{"_index":7231,"t":{},"b":{"13":{}}}],["rectangl",{"_index":5134,"t":{},"b":{"13":{},"40":{},"42":{},"64":{},"69":{},"79":{}}}],["rectangular",{"_index":3158,"t":{},"b":{"5":{},"8":{},"10":{},"15":{},"63":{},"79":{}}}],["recurs",{"_index":7076,"t":{},"b":{"13":{},"15":{},"16":{}}}],["recv",{"_index":7439,"t":{},"b":{"15":{},"26":{}}}],["recv(processor(10",{"_index":7447,"t":{},"b":{"15":{}}}],["recv(processor(int",{"_index":8218,"t":{},"b":{"15":{}}}],["recycl",{"_index":3318,"t":{},"b":{"5":{},"7":{},"10":{}}}],["red",{"_index":8564,"t":{},"b":{"19":{},"27":{}}}],["redefin",{"_index":4191,"t":{},"b":{"11":{},"13":{}}}],["redion",{"_index":5183,"t":{},"b":{"13":{},"24":{}}}],["redistributedmesh.edp",{"_index":8294,"t":{},"b":{"16":{}}}],["reduc",{"_index":3634,"t":{},"b":{"8":{},"9":{},"11":{},"12":{},"15":{},"48":{},"51":{},"69":{},"70":{}}}],["reducesum1(r",{"_index":7589,"t":{},"b":{"15":{}}}],["reducingfil",{"_index":8088,"t":{},"b":{"15":{}}}],["reduct",{"_index":846,"t":{},"b":{"3":{},"51":{}}}],["reel",{"_index":6736,"t":{},"b":{"13":{}}}],["reentrant",{"_index":13774,"t":{},"b":{"56":{},"70":{}}}],["ref",{"_index":6483,"t":{},"b":{"13":{}}}],["ref2",{"_index":6194,"t":{},"b":{"13":{},"40":{}}}],["ref_1(int",{"_index":2184,"t":{},"b":{"4":{}}}],["ref_ne(int",{"_index":2195,"t":{},"b":{"4":{}}}],["ref_nq(int",{"_index":2209,"t":{},"b":{"4":{}}}],["ref_nt(int",{"_index":2201,"t":{},"b":{"4":{}}}],["ref_nv(int",{"_index":2188,"t":{},"b":{"4":{}}}],["ref_{1}^{fc",{"_index":6703,"t":{},"b":{"13":{}}}],["ref_{2}^{fc",{"_index":6705,"t":{},"b":{"13":{}}}],["ref_{i}^{fc",{"_index":6701,"t":{},"b":{"13":{}}}],["refactor",{"_index":10491,"t":{},"b":{"38":{}}}],["refbe(1:nbb",{"_index":2341,"t":{},"b":{"4":{}}}],["refbe(k",{"_index":2344,"t":{},"b":{"4":{}}}],["refcard",{"_index":7908,"t":{},"b":{"15":{}}}],["refcounter.hpp",{"_index":2715,"t":{},"b":{"4":{}}}],["refe",{"_index":5630,"t":{},"b":{"13":{}}}],["refedg",{"_index":6520,"t":{},"b":{"13":{}}}],["refer",{"_index":705,"t":{},"b":{"3":{},"4":{},"6":{},"8":{},"11":{},"13":{},"17":{},"18":{},"19":{},"30":{},"36":{},"37":{},"41":{},"51":{},"53":{},"54":{},"56":{},"57":{},"60":{},"71":{},"72":{},"76":{},"77":{}}}],["referenc",{"_index":6832,"t":{},"b":{"13":{},"18":{}}}],["referenceslogo",{"_index":13771,"t":{"56":{}},"b":{}}],["reffac",{"_index":6132,"t":{},"b":{"13":{}}}],["reffacelow",{"_index":4071,"t":{},"b":{"11":{},"13":{},"15":{},"22":{},"25":{}}}],["reffacemid",{"_index":7114,"t":{},"b":{"13":{},"15":{},"22":{},"25":{}}}],["reffaceup",{"_index":4069,"t":{},"b":{"11":{},"13":{},"15":{},"22":{},"25":{}}}],["refi",{"_index":6434,"t":{},"b":{"13":{}}}],["refin",{"_index":123,"t":{},"b":{"2":{},"5":{},"9":{},"13":{},"15":{},"19":{},"26":{},"54":{},"76":{}}}],["refineiniti",{"_index":7900,"t":{},"b":{"15":{}}}],["refinesphere.edp",{"_index":6739,"t":{},"b":{"13":{}}}],["reflect",{"_index":1203,"t":{},"b":{"3":{},"13":{},"51":{}}}],["reflexion",{"_index":15368,"t":{},"b":{"81":{}}}],["refpoint",{"_index":6625,"t":{},"b":{"13":{}}}],["refract",{"_index":12453,"t":{},"b":{"51":{},"81":{}}}],["refresh",{"_index":8519,"t":{},"b":{"19":{}}}],["refriger",{"_index":13981,"t":{},"b":{"61":{}}}],["refs(1:nbv",{"_index":2319,"t":{},"b":{"4":{}}}],["refs(i",{"_index":2329,"t":{},"b":{"4":{}}}],["refs(k",{"_index":2334,"t":{},"b":{"4":{}}}],["reft",{"_index":5631,"t":{},"b":{"13":{}}}],["reft(1:nbt",{"_index":2320,"t":{},"b":{"4":{}}}],["reft(i",{"_index":2328,"t":{},"b":{"4":{}}}],["reft(k",{"_index":2335,"t":{},"b":{"4":{}}}],["reftet",{"_index":6131,"t":{},"b":{"13":{},"22":{},"53":{}}}],["reftri",{"_index":6519,"t":{},"b":{"13":{},"53":{}}}],["refx",{"_index":6430,"t":{},"b":{"13":{}}}],["refz",{"_index":6438,"t":{},"b":{"13":{}}}],["ref{not",{"_index":14158,"t":{},"b":{"62":{}}}],["reg",{"_index":12144,"t":{},"b":{"48":{},"49":{},"51":{}}}],["reg(0",{"_index":5021,"t":{},"b":{"11":{}}}],["reg(0,0,0",{"_index":12146,"t":{},"b":{"48":{}}}],["reg(0,0,0.7",{"_index":12148,"t":{},"b":{"48":{}}}],["reg(0.4",{"_index":12332,"t":{},"b":{"49":{}}}],["reg(0.9",{"_index":12335,"t":{},"b":{"49":{}}}],["reg(1",{"_index":5024,"t":{},"b":{"11":{}}}],["reg(2",{"_index":5002,"t":{},"b":{"11":{}}}],["reg(i",{"_index":5028,"t":{},"b":{"11":{}}}],["reg(xl+1",{"_index":12494,"t":{},"b":{"51":{}}}],["reg(xr",{"_index":12496,"t":{},"b":{"51":{}}}],["regard",{"_index":10755,"t":{},"b":{"40":{}}}],["region",{"_index":1050,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"24":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"63":{},"66":{},"71":{}}}],["regionlist",{"_index":6129,"t":{},"b":{"13":{},"24":{},"25":{},"48":{},"53":{}}}],["regionlist.th",{"_index":6709,"t":{},"b":{"13":{}}}],["regtest",{"_index":1668,"t":{},"b":{"3":{},"20":{}}}],["regular",{"_index":4471,"t":{},"b":{"11":{},"13":{},"15":{},"39":{},"41":{},"45":{},"48":{},"60":{}}}],["regularization’",{"_index":7003,"t":{},"b":{"13":{}}}],["reiniti",{"_index":1685,"t":{},"b":{"3":{}}}],["rel",{"_index":565,"t":{},"b":{"3":{},"5":{},"10":{},"13":{},"15":{},"39":{},"45":{},"48":{},"54":{}}}],["relat",{"_index":856,"t":{},"b":{"3":{},"7":{},"12":{},"13":{},"15":{},"37":{},"40":{},"42":{},"64":{},"65":{}}}],["relationship",{"_index":4195,"t":{},"b":{"11":{},"64":{}}}],["relax",{"_index":1323,"t":{},"b":{"3":{},"13":{},"54":{}}}],["relax_bound",{"_index":1322,"t":{},"b":{"3":{}}}],["releas",{"_index":264,"t":{},"b":{"2":{},"13":{},"15":{},"32":{},"33":{},"35":{},"36":{}}}],["reles",{"_index":9916,"t":{},"b":{"35":{}}}],["relev",{"_index":1330,"t":{},"b":{"3":{},"5":{},"54":{}}}],["reli",{"_index":3550,"t":{},"b":{"8":{},"37":{}}}],["reliabl",{"_index":1274,"t":{},"b":{"3":{}}}],["remain",{"_index":960,"t":{},"b":{"3":{},"76":{}}}],["remaind",{"_index":13595,"t":{},"b":{"54":{},"58":{}}}],["remark",{"_index":575,"t":{},"b":{"3":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"26":{},"39":{},"45":{},"50":{},"64":{},"66":{}}}],["remedi",{"_index":3388,"t":{},"b":{"5":{}}}],["rememb",{"_index":1961,"t":{},"b":{"3":{},"11":{}}}],["remesh",{"_index":5429,"t":{},"b":{"13":{},"43":{},"48":{}}}],["remeshind",{"_index":12284,"t":{},"b":{"48":{}}}],["remeshindicator(th",{"_index":12302,"t":{},"b":{"48":{}}}],["remot",{"_index":8199,"t":{},"b":{"15":{}}}],["remov",{"_index":1262,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"20":{},"21":{},"26":{},"61":{},"72":{},"75":{},"79":{},"80":{}}}],["removedupl",{"_index":6587,"t":{},"b":{"13":{}}}],["remplac",{"_index":6364,"t":{},"b":{"13":{}}}],["render",{"_index":1691,"t":{},"b":{"3":{},"19":{}}}],["renum",{"_index":6622,"t":{},"b":{"13":{},"53":{}}}],["renumb",{"_index":6433,"t":{},"b":{"13":{},"60":{}}}],["renumt",{"_index":5632,"t":{},"b":{"13":{}}}],["renumv",{"_index":4094,"t":{},"b":{"11":{},"13":{},"22":{}}}],["reopen",{"_index":10076,"t":{},"b":{"35":{}}}],["reorder",{"_index":8087,"t":{},"b":{"15":{}}}],["repart",{"_index":5560,"t":{},"b":{"13":{}}}],["repeat",{"_index":11490,"t":{},"b":{"45":{}}}],["repeatedli",{"_index":10079,"t":{},"b":{"35":{}}}],["replac",{"_index":3311,"t":{},"b":{"5":{},"8":{},"10":{},"11":{},"40":{},"45":{},"65":{},"69":{},"72":{},"76":{},"77":{}}}],["replacetinypivot",{"_index":7872,"t":{},"b":{"15":{}}}],["replot",{"_index":8592,"t":{},"b":{"19":{},"27":{}}}],["report",{"_index":72,"t":{},"b":{"2":{},"12":{},"13":{},"15":{},"31":{}}}],["repositori",{"_index":8306,"t":{},"b":{"16":{},"31":{},"32":{},"35":{}}}],["repres",{"_index":2298,"t":{},"b":{"4":{},"5":{},"13":{},"15":{},"48":{},"66":{}}}],["represent",{"_index":1553,"t":{},"b":{"3":{},"15":{}}}],["reproduc",{"_index":8303,"t":{},"b":{"16":{}}}],["req",{"_index":7422,"t":{},"b":{"15":{}}}],["reqarray(10",{"_index":7423,"t":{},"b":{"15":{}}}],["request",{"_index":6666,"t":{},"b":{"13":{},"15":{},"31":{},"39":{},"54":{},"60":{},"62":{}}}],["requir",{"_index":1058,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"12":{},"13":{},"34":{},"35":{},"45":{},"48":{},"65":{},"74":{},"76":{},"79":{}}}],["rescal",{"_index":820,"t":{},"b":{"3":{},"13":{},"41":{},"54":{},"67":{}}}],["research",{"_index":3692,"t":{},"b":{"10":{},"12":{},"13":{},"29":{}}}],["reserv",{"_index":486,"t":{},"b":{"3":{}}}],["reset",{"_index":5628,"t":{},"b":{"13":{},"19":{},"48":{},"52":{}}}],["residu",{"_index":700,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"12":{},"13":{},"15":{},"26":{},"37":{},"45":{},"46":{},"47":{},"48":{},"50":{},"55":{}}}],["residu^2",{"_index":11813,"t":{},"b":{"47":{}}}],["resiz",{"_index":3166,"t":{},"b":{"5":{},"13":{},"21":{},"60":{}}}],["resolut",{"_index":3052,"t":{},"b":{"5":{},"9":{},"13":{},"15":{}}}],["resolv",{"_index":15414,"t":{},"b":{"81":{}}}],["reson",{"_index":379,"t":{},"b":{"2":{},"51":{},"62":{}}}],["resonator’",{"_index":12431,"t":{},"b":{"51":{}}}],["resp",{"_index":1930,"t":{},"b":{"3":{},"13":{},"15":{},"37":{}}}],["respect",{"_index":849,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{},"35":{},"37":{},"39":{},"40":{},"41":{},"46":{},"48":{},"55":{},"60":{},"65":{},"69":{},"75":{},"78":{},"79":{}}}],["respectli",{"_index":3794,"t":{},"b":{"11":{}}}],["respons",{"_index":3661,"t":{},"b":{"8":{}}}],["resquest",{"_index":7424,"t":{},"b":{"15":{}}}],["rest",{"_index":3348,"t":{},"b":{"5":{},"15":{},"37":{},"62":{}}}],["restart",{"_index":246,"t":{},"b":{"2":{},"3":{},"5":{},"16":{},"20":{},"35":{},"73":{}}}],["restor",{"_index":9129,"t":{},"b":{"21":{}}}],["restoration_fail",{"_index":1222,"t":{},"b":{"3":{}}}],["restrain",{"_index":1521,"t":{},"b":{"3":{}}}],["restrict",{"_index":899,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"76":{}}}],["result",{"_index":527,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"27":{},"33":{},"35":{},"41":{},"48":{},"50":{},"54":{},"60":{},"62":{},"63":{},"64":{},"67":{},"72":{},"74":{},"76":{},"77":{},"78":{},"79":{}}}],["result’",{"_index":6714,"t":{},"b":{"13":{}}}],["retain",{"_index":1054,"t":{},"b":{"3":{},"5":{}}}],["retriev",{"_index":13961,"t":{},"b":{"60":{}}}],["return",{"_index":573,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"18":{},"20":{},"21":{},"24":{},"26":{},"35":{},"38":{},"39":{},"41":{},"42":{},"45":{},"47":{},"49":{},"52":{},"54":{},"55":{},"58":{},"60":{},"71":{},"75":{},"77":{},"81":{}}}],["reus",{"_index":4004,"t":{},"b":{"11":{},"16":{},"41":{},"42":{},"45":{},"66":{}}}],["reusabl",{"_index":14601,"t":{},"b":{"70":{}}}],["revc",{"_index":7575,"t":{},"b":{"15":{}}}],["reveal",{"_index":1209,"t":{},"b":{"3":{}}}],["revers",{"_index":2876,"t":{},"b":{"4":{},"13":{},"54":{},"77":{}}}],["review",{"_index":51,"t":{},"b":{"2":{}}}],["revolut",{"_index":11159,"t":{},"b":{"41":{},"77":{}}}],["rewind",{"_index":9136,"t":{},"b":{"21":{}}}],["rewrit",{"_index":7465,"t":{},"b":{"15":{},"33":{},"49":{},"50":{}}}],["rewritten",{"_index":10187,"t":{},"b":{"37":{}}}],["rey",{"_index":11571,"t":{},"b":{"45":{},"73":{}}}],["reylnod",{"_index":14040,"t":{},"b":{"61":{}}}],["reynold",{"_index":11489,"t":{},"b":{"45":{},"74":{},"78":{}}}],["rff",{"_index":8446,"t":{},"b":{"18":{}}}],["rfloor",{"_index":840,"t":{},"b":{"3":{},"60":{}}}],["rgbformula",{"_index":14801,"t":{},"b":{"72":{}}}],["rgmre",{"_index":7627,"t":{},"b":{"15":{},"26":{}}}],["rgraph.hpp",{"_index":2526,"t":{},"b":{"4":{}}}],["rh",{"_index":743,"t":{},"b":{"3":{},"5":{},"6":{},"10":{},"11":{},"16":{},"20":{},"36":{},"50":{},"67":{},"68":{}}}],["rh(th",{"_index":4022,"t":{},"b":{"11":{}}}],["rh*convect([u1,v1",{"_index":14504,"t":{},"b":{"67":{}}}],["rh*u",{"_index":14510,"t":{},"b":{"67":{}}}],["rh[int",{"_index":4040,"t":{},"b":{"11":{}}}],["rho",{"_index":1528,"t":{},"b":{"3":{},"11":{},"20":{},"25":{},"41":{},"48":{},"51":{},"67":{}}}],["rho(0,\\phi",{"_index":1549,"t":{},"b":{"3":{}}}],["rho(2\\pi,\\phi",{"_index":1550,"t":{},"b":{"3":{}}}],["rho(\\partial_{\\phi}\\rho)^{2}\\sin^{2}(\\phi",{"_index":1605,"t":{},"b":{"3":{}}}],["rho(\\partial_{\\theta}\\rho)^{2",{"_index":1604,"t":{},"b":{"3":{}}}],["rho(\\theta,\\phi",{"_index":1533,"t":{},"b":{"3":{}}}],["rho(t_k",{"_index":5492,"t":{},"b":{"13":{}}}],["rho(theta,phi",{"_index":1733,"t":{},"b":{"3":{},"20":{}}}],["rho*dxrho2",{"_index":1748,"t":{},"b":{"3":{},"20":{}}}],["rho*dyrho2*sin2",{"_index":1749,"t":{},"b":{"3":{},"20":{}}}],["rho*rho*rho",{"_index":1806,"t":{},"b":{"3":{},"20":{}}}],["rho/\\epsilon",{"_index":11904,"t":{},"b":{"48":{}}}],["rho/dt",{"_index":9381,"t":{},"b":{"25":{}}}],["rho2",{"_index":1723,"t":{},"b":{"3":{},"20":{}}}],["rho2*dx(rho",{"_index":1776,"t":{},"b":{"3":{},"20":{}}}],["rho2*dx(rho)*dx(v",{"_index":1753,"t":{},"b":{"3":{},"20":{}}}],["rho2*dx(w)*dx(v",{"_index":1792,"t":{},"b":{"3":{},"20":{}}}],["rho2*dxrho2",{"_index":1745,"t":{},"b":{"3":{},"20":{}}}],["rho2*dy(rho)*sin2*dy(v",{"_index":1754,"t":{},"b":{"3":{},"20":{}}}],["rho2*dyrho2*sin2",{"_index":1746,"t":{},"b":{"3":{},"20":{}}}],["rho2*dyrho2*sin2)*sqrtpsi",{"_index":1774,"t":{},"b":{"3":{},"20":{}}}],["rho2*rho2*sin2",{"_index":1773,"t":{},"b":{"3":{},"20":{}}}],["rho2*sin2*dy(rho",{"_index":1777,"t":{},"b":{"3":{},"20":{}}}],["rho2*sin2*dy(w)*dy(v",{"_index":1793,"t":{},"b":{"3":{},"20":{}}}],["rho2*sin2*square(dy(rho",{"_index":1730,"t":{},"b":{"3":{},"20":{}}}],["rho2*square(dx(rho",{"_index":1729,"t":{},"b":{"3":{},"20":{}}}],["rho3",{"_index":1805,"t":{},"b":{"3":{},"20":{}}}],["rho4",{"_index":1725,"t":{},"b":{"3":{},"20":{}}}],["rho[].max",{"_index":12265,"t":{},"b":{"48":{}}}],["rho[].min",{"_index":12264,"t":{},"b":{"48":{}}}],["rho^2",{"_index":12443,"t":{},"b":{"51":{}}}],["rho^m",{"_index":14465,"t":{},"b":{"67":{}}}],["rho^{2",{"_index":1559,"t":{},"b":{"3":{}}}],["rho^{2}(\\partial_{\\phi}\\rho)^{2}\\sin^{2}(\\phi)}d\\theta",{"_index":1573,"t":{},"b":{"3":{}}}],["rho^{2}(\\partial_{\\theta}\\rho)^{2",{"_index":1571,"t":{},"b":{"3":{}}}],["rho^{2}\\partial_{\\phi}\\rho\\sin^{2}(\\phi)\\partial_{\\phi",{"_index":1607,"t":{},"b":{"3":{}}}],["rho^{2}\\partial_{\\theta}\\rho\\partial_{\\theta",{"_index":1606,"t":{},"b":{"3":{}}}],["rho^{2}\\sin^{2}(\\phi",{"_index":1556,"t":{},"b":{"3":{}}}],["rho^{4}\\sin^{2}(\\phi",{"_index":1572,"t":{},"b":{"3":{}}}],["rho^{m+1",{"_index":14464,"t":{},"b":{"67":{}}}],["rho_n\\l",{"_index":11544,"t":{},"b":{"45":{}}}],["rho_{0",{"_index":1637,"t":{},"b":{"3":{}}}],["rho_{0}\\geq\\rho_{\\mathrm{object",{"_index":1640,"t":{},"b":{"3":{}}}],["rho_{\\mathrm{object",{"_index":1633,"t":{},"b":{"3":{}}}],["rho_{\\mathrm{object}}\\|_{\\infty}^{3",{"_index":1650,"t":{},"b":{"3":{}}}],["rho_{object",{"_index":1844,"t":{},"b":{"3":{}}}],["rhoo",{"_index":1706,"t":{},"b":{"3":{},"20":{}}}],["rhoo(x,y)*cos(i",{"_index":1717,"t":{},"b":{"3":{},"20":{}}}],["rhoo(x,y)*cos(x)*sin(i",{"_index":1715,"t":{},"b":{"3":{},"20":{}}}],["rhoo(x,y)*sin(x)*sin(i",{"_index":1716,"t":{},"b":{"3":{},"20":{}}}],["rhoplot",{"_index":1711,"t":{},"b":{"3":{},"20":{}}}],["rho}\\frac{\\parti",{"_index":12446,"t":{},"b":{"51":{}}}],["rho}n_{\\rho}d\\gamma",{"_index":12449,"t":{},"b":{"51":{}}}],["rhs(vh,vh",{"_index":15226,"t":{},"b":{"77":{}}}],["rhs(vo,vh",{"_index":15223,"t":{},"b":{"77":{}}}],["rhsi",{"_index":3013,"t":{},"b":{"5":{}}}],["rhsi(0",{"_index":3011,"t":{},"b":{"5":{}}}],["rhs}_i",{"_index":3604,"t":{},"b":{"8":{}}}],["rhs}_j",{"_index":3602,"t":{},"b":{"8":{}}}],["ri[j",{"_index":7560,"t":{},"b":{"15":{}}}],["richard",{"_index":122,"t":{},"b":{"2":{},"6":{}}}],["ridg",{"_index":7092,"t":{},"b":{"13":{}}}],["ridgeangl",{"_index":7078,"t":{},"b":{"13":{}}}],["ridgeangledetect",{"_index":6645,"t":{},"b":{"13":{}}}],["right",{"_index":1534,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"22":{},"35":{},"37":{},"38":{},"41":{},"43":{},"45":{},"46":{},"48":{},"50":{},"51":{},"52":{},"59":{},"60":{},"64":{},"67":{},"68":{},"70":{},"76":{},"77":{}}}],["right(n",{"_index":5908,"t":{},"b":{"13":{},"24":{}}}],["right(t",{"_index":5897,"t":{},"b":{"13":{},"24":{}}}],["right)\\approx",{"_index":11142,"t":{},"b":{"41":{}}}],["right)\\end{split",{"_index":1561,"t":{},"b":{"3":{},"4":{},"45":{}}}],["right)\\textrm",{"_index":11106,"t":{},"b":{"41":{}}}],["right)^2",{"_index":11177,"t":{},"b":{"41":{}}}],["right)^{\\frac{1}{2",{"_index":12256,"t":{},"b":{"48":{}}}],["right..\\end{split",{"_index":7517,"t":{},"b":{"15":{}}}],["right.\\end{split",{"_index":1034,"t":{},"b":{"3":{},"11":{},"13":{},"41":{},"43":{}}}],["right.\\right",{"_index":3817,"t":{},"b":{"11":{},"45":{}}}],["right.\\right\\}\\end{split",{"_index":3887,"t":{},"b":{"11":{}}}],["right\\rangl",{"_index":1166,"t":{},"b":{"3":{}}}],["right\\rbrac",{"_index":1414,"t":{},"b":{"3":{}}}],["right\\rbrace\\end{split",{"_index":1537,"t":{},"b":{"3":{}}}],["right\\}&\\theta\\in",{"_index":11017,"t":{},"b":{"41":{}}}],["right\\}\\end{split",{"_index":11466,"t":{},"b":{"45":{}}}],["righta(t",{"_index":14630,"t":{},"b":{"71":{}}}],["rightarrow",{"_index":1921,"t":{},"b":{"3":{},"10":{},"11":{},"41":{}}}],["righthand",{"_index":7823,"t":{},"b":{"15":{}}}],["rightk(t",{"_index":14637,"t":{},"b":{"71":{}}}],["right|\\quad",{"_index":4668,"t":{},"b":{"11":{}}}],["right|_{\\p\\omega",{"_index":10938,"t":{},"b":{"41":{}}}],["rigid",{"_index":7120,"t":{},"b":{"13":{},"72":{}}}],["ring",{"_index":11818,"t":{},"b":{"48":{}}}],["rint",{"_index":13693,"t":{},"b":{"54":{}}}],["rint(a",{"_index":13694,"t":{},"b":{"54":{}}}],["riski",{"_index":14261,"t":{},"b":{"64":{}}}],["ritz",{"_index":3332,"t":{},"b":{"5":{}}}],["rk",{"_index":8202,"t":{},"b":{"15":{}}}],["rlabel",{"_index":5300,"t":{},"b":{"13":{}}}],["rleader",{"_index":8205,"t":{},"b":{"15":{}}}],["rlow",{"_index":6288,"t":{},"b":{"13":{},"22":{}}}],["rm",{"_index":11180,"t":{},"b":{"41":{}}}],["rmax",{"_index":6333,"t":{},"b":{"13":{}}}],["rmax*f1",{"_index":6335,"t":{},"b":{"13":{}}}],["rmax*f2",{"_index":6337,"t":{},"b":{"13":{}}}],["rmax*f3",{"_index":6339,"t":{},"b":{"13":{}}}],["rmdir",{"_index":13430,"t":{},"b":{"53":{}}}],["rmid",{"_index":4068,"t":{},"b":{"11":{},"13":{},"15":{},"22":{},"25":{}}}],["rmin",{"_index":6325,"t":{},"b":{"13":{}}}],["rmin*f1",{"_index":6327,"t":{},"b":{"13":{}}}],["rmin*f2",{"_index":6329,"t":{},"b":{"13":{}}}],["rmin*f3",{"_index":6331,"t":{},"b":{"13":{}}}],["rminternaledg",{"_index":5636,"t":{},"b":{"13":{}}}],["rminternalfac",{"_index":6133,"t":{},"b":{"13":{}}}],["rmj(njpart",{"_index":7680,"t":{},"b":{"15":{},"26":{}}}],["rmj[j",{"_index":7550,"t":{},"b":{"15":{}}}],["rmj[j]*vrecv[j",{"_index":7567,"t":{},"b":{"15":{},"26":{}}}],["rmj[jp",{"_index":7686,"t":{},"b":{"15":{},"26":{}}}],["rmj[jp]'*uuu",{"_index":9523,"t":{},"b":{"26":{}}}],["rmledg",{"_index":5635,"t":{},"b":{"13":{}}}],["rmlface",{"_index":6134,"t":{},"b":{"13":{}}}],["rmlpoint",{"_index":6635,"t":{},"b":{"13":{}}}],["rmuonde.p",{"_index":14227,"t":{},"b":{"63":{}}}],["rn_",{"_index":2625,"t":{},"b":{"4":{}}}],["rnm.hpp",{"_index":2529,"t":{},"b":{"4":{}}}],["rnm_op.hpp",{"_index":2717,"t":{},"b":{"4":{}}}],["rnm_opc.hpp",{"_index":2716,"t":{},"b":{"4":{}}}],["rnm_tpl.hpp",{"_index":2718,"t":{},"b":{"4":{}}}],["rnmk_",{"_index":2565,"t":{},"b":{"4":{}}}],["rnumber",{"_index":5313,"t":{},"b":{"13":{}}}],["rnumbers(0.55",{"_index":5316,"t":{},"b":{"13":{}}}],["robert",{"_index":302,"t":{},"b":{"2":{}}}],["roberts1993",{"_index":301,"t":{},"b":{"2":{},"45":{}}}],["robin",{"_index":3195,"t":{},"b":{"5":{},"9":{},"11":{},"65":{},"79":{}}}],["robust",{"_index":1056,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"16":{}}}],["rocquencourt",{"_index":151,"t":{},"b":{"2":{}}}],["rod",{"_index":15271,"t":{},"b":{"79":{}}}],["roger",{"_index":297,"t":{},"b":{"2":{}}}],["roland",{"_index":330,"t":{},"b":{"2":{}}}],["role",{"_index":1002,"t":{},"b":{"3":{},"37":{}}}],["roll",{"_index":10049,"t":{},"b":{"35":{}}}],["rom",{"_index":10159,"t":{},"b":{"35":{}}}],["room",{"_index":13976,"t":{},"b":{"61":{}}}],["root",{"_index":2719,"t":{},"b":{"4":{},"15":{},"51":{},"54":{}}}],["rot\\psi",{"_index":11504,"t":{},"b":{"45":{}}}],["rotat",{"_index":5431,"t":{"77":{}},"b":{"13":{},"19":{},"41":{},"42":{},"64":{},"66":{},"77":{}}}],["roughli",{"_index":811,"t":{},"b":{"3":{},"41":{}}}],["round",{"_index":13505,"t":{},"b":{"54":{}}}],["round(a",{"_index":13695,"t":{},"b":{"54":{}}}],["routin",{"_index":1893,"t":{},"b":{"3":{},"4":{},"15":{}}}],["row",{"_index":2871,"t":{},"b":{"4":{},"11":{},"13":{},"14":{},"15":{},"21":{}}}],["rowperm",{"_index":7868,"t":{},"b":{"15":{}}}],["rp",{"_index":11183,"t":{},"b":{"41":{}}}],["rq",{"_index":7417,"t":{},"b":{"15":{}}}],["rq(n*2",{"_index":7557,"t":{},"b":{"15":{}}}],["rq[j+n",{"_index":7562,"t":{},"b":{"15":{}}}],["rr",{"_index":1674,"t":{},"b":{"3":{},"13":{},"20":{},"67":{}}}],["rr)*cos(x)*cos(x)*sin2",{"_index":1852,"t":{},"b":{"3":{},"20":{}}}],["rr)*cos(y)*cos(y)))*(1+0.1*cos(7*x",{"_index":1850,"t":{},"b":{"3":{},"20":{}}}],["rr){x",{"_index":6055,"t":{},"b":{"13":{},"67":{}}}],["rr*gaussian(x",{"_index":1854,"t":{},"b":{"3":{},"20":{}}}],["rr*t",{"_index":6053,"t":{},"b":{"13":{}}}],["rra",{"_index":10231,"t":{},"b":{"37":{}}}],["rra,\\end{split",{"_index":10260,"t":{},"b":{"37":{}}}],["rra\\end{split",{"_index":10215,"t":{},"b":{"37":{}}}],["rreal[int",{"_index":1690,"t":{},"b":{"3":{}}}],["rs_1",{"_index":11181,"t":{},"b":{"41":{}}}],["rs_2",{"_index":11182,"t":{},"b":{"41":{}}}],["rstad",{"_index":189,"t":{},"b":{"2":{}}}],["rt",{"_index":8242,"t":{},"b":{"16":{}}}],["rt0",{"_index":3104,"t":{},"b":{"5":{},"11":{},"48":{},"60":{}}}],["rt03d",{"_index":3913,"t":{},"b":{"11":{},"60":{}}}],["rt0_{h",{"_index":4314,"t":{},"b":{"11":{}}}],["rt0ortho",{"_index":3936,"t":{},"b":{"11":{},"60":{}}}],["rt1",{"_index":3965,"t":{},"b":{"11":{},"60":{}}}],["rt1ortho",{"_index":3969,"t":{},"b":{"11":{},"60":{}}}],["rt2",{"_index":3971,"t":{},"b":{"11":{},"60":{}}}],["rt2ortho",{"_index":3974,"t":{},"b":{"11":{},"60":{}}}],["rtet",{"_index":9276,"t":{},"b":{"22":{}}}],["rule",{"_index":10134,"t":{},"b":{"35":{},"41":{},"81":{}}}],["run",{"_index":3498,"t":{},"b":{"7":{},"10":{},"12":{},"15":{},"19":{},"32":{},"35":{},"38":{},"48":{},"70":{},"71":{},"76":{}}}],["runner",{"_index":10142,"t":{},"b":{"35":{}}}],["runtim",{"_index":1294,"t":{},"b":{"3":{},"35":{}}}],["rup",{"_index":4070,"t":{},"b":{"11":{},"13":{},"15":{},"22":{},"25":{}}}],["rx",{"_index":6386,"t":{},"b":{"13":{}}}],["rx*cos(x)*cos(i",{"_index":6470,"t":{},"b":{"13":{}}}],["rx*cos(x)*sin(i",{"_index":6474,"t":{},"b":{"13":{}}}],["rx*sin(x)*cos(i",{"_index":6473,"t":{},"b":{"13":{}}}],["rx,real",{"_index":6458,"t":{},"b":{"13":{}}}],["rx,ry,rz,h,l,0.,0.,0.,orient",{"_index":6491,"t":{},"b":{"13":{}}}],["ry",{"_index":6387,"t":{},"b":{"13":{}}}],["ry*cos(x)*cos(i",{"_index":6476,"t":{},"b":{"13":{}}}],["ry*cos(x)*sin(i",{"_index":6471,"t":{},"b":{"13":{}}}],["ry*sin(x)*sin(i",{"_index":6475,"t":{},"b":{"13":{}}}],["ry,real",{"_index":6459,"t":{},"b":{"13":{}}}],["rz",{"_index":6388,"t":{},"b":{"13":{}}}],["rz*cos(x",{"_index":6477,"t":{},"b":{"13":{}}}],["rz*sin(x",{"_index":6472,"t":{},"b":{"13":{}}}],["rz,real",{"_index":6460,"t":{},"b":{"13":{}}}],["r}\\partial",{"_index":15273,"t":{},"b":{"79":{}}}],["r}j",{"_index":14984,"t":{},"b":{"75":{}}}],["réduit",{"_index":425,"t":{},"b":{"2":{}}}],["s",{"_index":391,"t":{},"b":{"2":{},"3":{},"5":{},"9":{},"13":{},"15":{},"20":{},"21":{},"24":{},"26":{},"33":{},"35":{},"37":{},"40":{},"42":{},"46":{},"48":{},"51":{},"52":{},"54":{},"55":{},"60":{},"66":{},"75":{},"81":{}}}],["s(4:3",{"_index":13859,"t":{},"b":{"60":{}}}],["s(nm",{"_index":12491,"t":{},"b":{"51":{}}}],["s(t",{"_index":12481,"t":{},"b":{"51":{}}}],["s)*ddfe2",{"_index":11759,"t":{},"b":{"46":{}}}],["s)*dfe2",{"_index":11762,"t":{},"b":{"46":{}}}],["s+u",{"_index":15396,"t":{},"b":{"81":{}}}],["s+u*t",{"_index":15394,"t":{},"b":{"81":{}}}],["s0",{"_index":2972,"t":{},"b":{"4":{}}}],["s1",{"_index":8351,"t":{},"b":{"18":{},"48":{}}}],["s1(5:10",{"_index":13861,"t":{},"b":{"60":{}}}],["s2",{"_index":12124,"t":{},"b":{"48":{},"60":{}}}],["s3",{"_index":12127,"t":{},"b":{"48":{}}}],["s4",{"_index":12130,"t":{},"b":{"48":{}}}],["s^c_{k1}(\\theta_k",{"_index":10794,"t":{},"b":{"40":{}}}],["s^c_{k2}(\\theta_k",{"_index":10801,"t":{},"b":{"40":{}}}],["s^c_{kl}(\\theta_k",{"_index":10786,"t":{},"b":{"40":{}}}],["s^d",{"_index":3405,"t":{},"b":{"5":{}}}],["s_1",{"_index":13667,"t":{},"b":{"54":{}}}],["s_n",{"_index":13669,"t":{},"b":{"54":{}}}],["s_{i",{"_index":912,"t":{},"b":{"3":{}}}],["s_{i}\\leq",{"_index":913,"t":{},"b":{"3":{}}}],["sa",{"_index":10515,"t":{},"b":{"39":{}}}],["sa1",{"_index":3779,"t":{},"b":{"11":{}}}],["sa_i",{"_index":3798,"t":{},"b":{"11":{}}}],["saad",{"_index":180,"t":{},"b":{"2":{},"15":{}}}],["saad2003",{"_index":179,"t":{},"b":{"2":{},"15":{}}}],["saccomandi",{"_index":220,"t":{},"b":{"2":{}}}],["saddl",{"_index":12354,"t":{},"b":{"50":{}}}],["sadovski",{"_index":10174,"t":{},"b":{"37":{}}}],["safe",{"_index":1272,"t":{},"b":{"3":{},"11":{},"22":{},"26":{}}}],["safer",{"_index":3593,"t":{},"b":{"8":{}}}],["saint",{"_index":11657,"t":{},"b":{"46":{}}}],["sak",{"_index":3782,"t":{},"b":{"11":{}}}],["sam",{"_index":284,"t":{},"b":{"2":{}}}],["same",{"_index":755,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"16":{},"18":{},"19":{},"21":{},"24":{},"35":{},"41":{},"45":{},"48":{},"54":{},"56":{},"60":{},"69":{},"70":{},"73":{},"76":{},"79":{}}}],["samepattern",{"_index":7888,"t":{},"b":{"15":{}}}],["samepattern_samerowperm",{"_index":7889,"t":{},"b":{"15":{}}}],["sampl",{"_index":792,"t":{},"b":{"3":{},"13":{}}}],["satisfi",{"_index":993,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"24":{},"37":{},"40":{},"41":{},"45":{},"48":{},"50":{},"66":{},"68":{},"72":{},"73":{},"74":{},"76":{},"78":{},"79":{}}}],["satur",{"_index":8561,"t":{},"b":{"19":{},"27":{}}}],["save",{"_index":1689,"t":{},"b":{"3":{},"5":{},"9":{},"11":{},"13":{},"16":{},"19":{},"27":{},"36":{},"51":{},"53":{},"54":{},"67":{},"71":{},"72":{},"79":{}}}],["savegmsh",{"_index":6881,"t":{},"b":{"13":{},"53":{}}}],["savegmsh(th",{"_index":6882,"t":{},"b":{"13":{}}}],["savegmsh(th3",{"_index":6933,"t":{},"b":{"13":{}}}],["savehdf5sol",{"_index":13373,"t":{},"b":{"53":{}}}],["savemesh",{"_index":6859,"t":{},"b":{"13":{},"54":{},"71":{}}}],["savemesh(th",{"_index":5427,"t":{},"b":{"13":{},"19":{},"27":{},"48":{},"54":{},"67":{},"69":{}}}],["savemesh(th,\"capacitor.msh",{"_index":14662,"t":{},"b":{"71":{}}}],["savemesh(th,\"export_mesh.msh",{"_index":8607,"t":{},"b":{"19":{}}}],["savemesh(th,\"mm\",[x,y,u",{"_index":6864,"t":{},"b":{"13":{}}}],["savemesh(th,\"th.mesh",{"_index":6861,"t":{},"b":{"13":{}}}],["savemesh(th,\"th.msh",{"_index":14755,"t":{},"b":{"72":{}}}],["savemesh(th1",{"_index":6775,"t":{},"b":{"13":{}}}],["savemesh(th3",{"_index":6554,"t":{},"b":{"13":{}}}],["savemesh(th3,\"th3.mesh",{"_index":6927,"t":{},"b":{"13":{}}}],["savemesh(th3ff,\"th3ff.msh",{"_index":6928,"t":{},"b":{"13":{}}}],["savemesh(thff,\"thff.msh",{"_index":6862,"t":{},"b":{"13":{}}}],["savemesh(ths,\"ths.mesh",{"_index":6949,"t":{},"b":{"13":{}}}],["savemesh(thsff,\"thsff.msh",{"_index":6950,"t":{},"b":{"13":{}}}],["savemesh(thss,\"gammasplit.mesh",{"_index":6564,"t":{},"b":{"13":{}}}],["savesol",{"_index":2359,"t":{},"b":{"4":{},"13":{},"53":{}}}],["savesol(\"f1phist3dth3.sol",{"_index":2411,"t":{},"b":{"4":{}}}],["savesol(\"f2psist2dth3.solb",{"_index":2420,"t":{},"b":{"4":{}}}],["savesurfacemesh",{"_index":6549,"t":{},"b":{"13":{}}}],["savesurfacemesh(th3",{"_index":6556,"t":{},"b":{"13":{}}}],["savesurfacemesh(ths3",{"_index":6562,"t":{},"b":{"13":{}}}],["savesurfmesh(th,filename_mesh",{"_index":6565,"t":{},"b":{"13":{}}}],["savesurfmesh(th,filename_points,filename_fac",{"_index":6566,"t":{},"b":{"13":{}}}],["savevec",{"_index":12615,"t":{},"b":{"53":{}}}],["savevtk",{"_index":6874,"t":{},"b":{"13":{},"53":{}}}],["savevtk(\"th.vtk\",th",{"_index":6875,"t":{},"b":{"13":{}}}],["savevtk(\"th3.vtk\",th3",{"_index":6930,"t":{},"b":{"13":{}}}],["savevtk(\"ths.vtk\",th",{"_index":6951,"t":{},"b":{"13":{}}}],["savevtk(\"u.vtu",{"_index":8605,"t":{},"b":{"19":{},"27":{}}}],["savevtk(filenam",{"_index":13375,"t":{},"b":{"53":{}}}],["saw",{"_index":8005,"t":{},"b":{"15":{}}}],["sb1",{"_index":3780,"t":{},"b":{"11":{}}}],["sb_i",{"_index":3800,"t":{},"b":{"11":{}}}],["sbl",{"_index":3784,"t":{},"b":{"11":{}}}],["scalabl",{"_index":3386,"t":{},"b":{"5":{},"7":{},"10":{}}}],["scalapack",{"_index":7750,"t":{},"b":{"15":{},"34":{}}}],["scalar",{"_index":1094,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"19":{},"27":{},"50":{},"51":{},"54":{},"58":{},"60":{},"64":{},"65":{},"66":{},"71":{}}}],["scalar[int",{"_index":3123,"t":{},"b":{"5":{}}}],["scale",{"_index":28,"t":{},"b":{"2":{},"3":{},"5":{},"10":{},"13":{},"15":{},"16":{},"19":{},"40":{},"54":{},"66":{}}}],["scalec",{"_index":7708,"t":{},"b":{"15":{}}}],["scaler",{"_index":7707,"t":{},"b":{"15":{}}}],["scan",{"_index":12330,"t":{},"b":{"49":{}}}],["scatter",{"_index":3744,"t":{},"b":{"10":{},"16":{}}}],["scene",{"_index":6961,"t":{},"b":{"13":{}}}],["sch_gilu0",{"_index":8037,"t":{},"b":{"15":{}}}],["scharwz",{"_index":7594,"t":{},"b":{"15":{}}}],["schema",{"_index":14525,"t":{"68":{}},"b":{"67":{},"68":{},"80":{}}}],["scheme",{"_index":8235,"t":{},"b":{"16":{},"38":{},"41":{},"65":{},"67":{},"70":{},"79":{}}}],["schole",{"_index":11171,"t":{},"b":{"41":{}}}],["schroding",{"_index":8271,"t":{},"b":{"16":{}}}],["schur",{"_index":7807,"t":{},"b":{"15":{},"16":{}}}],["schursymmetr",{"_index":8038,"t":{},"b":{"15":{}}}],["schwartz",{"_index":7921,"t":{},"b":{"15":{}}}],["schwarz",{"_index":3178,"t":{},"b":{"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{},"16":{},"26":{},"38":{}}}],["schwarzparallel.edp",{"_index":7466,"t":{},"b":{"15":{}}}],["schwarz’",{"_index":5127,"t":{},"b":{"12":{}}}],["scienc",{"_index":439,"t":{},"b":{"2":{},"8":{},"16":{},"29":{}}}],["scientif",{"_index":10,"t":{},"b":{"2":{},"15":{},"29":{},"41":{},"52":{}}}],["scilab",{"_index":13909,"t":{},"b":{"60":{}}}],["scitech",{"_index":9983,"t":{},"b":{"35":{}}}],["scope",{"_index":10143,"t":{},"b":{"35":{}}}],["scotch",{"_index":3678,"t":{},"b":{"9":{},"15":{},"34":{},"53":{}}}],["screen",{"_index":8512,"t":{},"b":{"19":{},"70":{}}}],["script",{"_index":858,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"10":{},"11":{},"13":{},"15":{},"17":{},"18":{},"19":{},"21":{},"26":{},"35":{},"45":{},"55":{},"58":{},"60":{},"67":{},"68":{},"71":{},"80":{}}}],["script.edp",{"_index":7954,"t":{},"b":{"15":{},"21":{}}}],["seach",{"_index":9259,"t":{},"b":{"22":{},"26":{}}}],["search",{"_index":25,"t":{},"b":{"2":{},"3":{},"4":{},"11":{},"20":{},"35":{},"71":{}}}],["search_direction_becomes_too_smal",{"_index":1223,"t":{},"b":{"3":{}}}],["searchmethod",{"_index":4425,"t":{},"b":{"11":{},"22":{},"26":{}}}],["second",{"_index":1194,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"13":{},"15":{},"18":{},"19":{},"21":{},"27":{},"38":{},"45":{},"46":{},"48":{},"54":{},"60":{},"65":{},"69":{},"72":{},"76":{}}}],["secondli",{"_index":7218,"t":{},"b":{"13":{},"18":{},"43":{}}}],["section",{"_index":885,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"13":{},"15":{},"19":{},"35":{},"36":{},"37":{},"39":{},"41":{},"48":{},"51":{},"54":{},"60":{},"64":{},"66":{},"70":{},"71":{},"74":{},"76":{},"79":{}}}],["secur",{"_index":14111,"t":{},"b":{"61":{}}}],["sed",{"_index":10110,"t":{},"b":{"35":{}}}],["see",{"_index":767,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"24":{},"25":{},"26":{},"33":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"48":{},"49":{},"50":{},"52":{},"54":{},"55":{},"57":{},"58":{},"60":{},"62":{},"66":{},"69":{},"70":{},"72":{},"76":{},"77":{},"81":{}}}],["seed",{"_index":795,"t":{},"b":{"3":{},"18":{},"54":{},"60":{}}}],["seek",{"_index":4777,"t":{},"b":{"11":{},"37":{},"68":{},"79":{}}}],["seekg",{"_index":12580,"t":{},"b":{"52":{}}}],["seem",{"_index":1000,"t":{},"b":{"3":{},"8":{},"26":{},"81":{}}}],["seemingli",{"_index":4385,"t":{},"b":{"11":{}}}],["seen",{"_index":3375,"t":{},"b":{"5":{},"8":{}}}],["seg",{"_index":6383,"t":{},"b":{"13":{}}}],["seg1(t",{"_index":5837,"t":{},"b":{"13":{}}}],["seg2(20",{"_index":5845,"t":{},"b":{"13":{}}}],["seg2(t",{"_index":5840,"t":{},"b":{"13":{}}}],["segment",{"_index":4612,"t":{},"b":{"11":{},"13":{},"14":{},"36":{},"40":{},"51":{}}}],["segment(n",{"_index":6639,"t":{},"b":{"13":{}}}],["segment(n,[0,0,x],orient",{"_index":6642,"t":{},"b":{"13":{}}}],["segment(n,[0,x,0],orient",{"_index":6640,"t":{},"b":{"13":{}}}],["segment(n,[x,0,1],orient",{"_index":6641,"t":{},"b":{"13":{}}}],["segment(nx,[5.*x,cos(pi*x),sin(pi*x",{"_index":6623,"t":{},"b":{"13":{}}}],["segment(nx,[torex,torey,torez],removedupl",{"_index":6591,"t":{},"b":{"13":{}}}],["seldom",{"_index":1916,"t":{},"b":{"3":{},"76":{}}}],["select",{"_index":3269,"t":{},"b":{"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"60":{},"71":{}}}],["self",{"_index":1541,"t":{},"b":{"3":{},"5":{},"75":{}}}],["sem",{"_index":8385,"t":{},"b":{"18":{}}}],["sem,const",{"_index":8389,"t":{},"b":{"18":{}}}],["sem_c",{"_index":8439,"t":{},"b":{"18":{}}}],["sem_ff",{"_index":8438,"t":{},"b":{"18":{}}}],["sem_post",{"_index":8376,"t":{},"b":{"18":{}}}],["sem_trywait",{"_index":8401,"t":{},"b":{"18":{}}}],["sem_wait",{"_index":8378,"t":{},"b":{"18":{}}}],["semaphor",{"_index":8367,"t":{},"b":{"18":{},"53":{}}}],["semaphore.c",{"_index":8371,"t":{},"b":{"18":{}}}],["semaphore.cpp",{"_index":8494,"t":{},"b":{"18":{}}}],["semaphore.h",{"_index":8372,"t":{},"b":{"18":{}}}],["semaphore.o",{"_index":8491,"t":{},"b":{"18":{}}}],["semaphore’",{"_index":8397,"t":{},"b":{"18":{}}}],["semi",{"_index":15302,"t":{},"b":{"79":{}}}],["semicolon",{"_index":13775,"t":{},"b":{"56":{},"70":{}}}],["semimajor",{"_index":14742,"t":{},"b":{"72":{}}}],["semiminor",{"_index":14743,"t":{},"b":{"72":{}}}],["seminorm",{"_index":11894,"t":{},"b":{"48":{}}}],["semismooth",{"_index":364,"t":{},"b":{"2":{}}}],["semi–smooth",{"_index":348,"t":{},"b":{"2":{}}}],["send",{"_index":7438,"t":{},"b":{"15":{},"26":{}}}],["send(processor(10",{"_index":7446,"t":{},"b":{"15":{}}}],["send(processor(int",{"_index":8217,"t":{},"b":{"15":{}}}],["send/rec",{"_index":7681,"t":{},"b":{"15":{}}}],["send/recv",{"_index":7674,"t":{},"b":{"15":{}}}],["send/revc",{"_index":9535,"t":{},"b":{"26":{}}}],["sendrecvuv(comm",{"_index":9544,"t":{},"b":{"26":{}}}],["senior",{"_index":9781,"t":{},"b":{"29":{}}}],["sens",{"_index":398,"t":{},"b":{"2":{},"3":{},"5":{},"8":{},"13":{},"37":{},"41":{}}}],["sent",{"_index":3253,"t":{},"b":{"5":{}}}],["separ",{"_index":2688,"t":{},"b":{"4":{},"13":{},"35":{},"41":{},"56":{},"70":{},"75":{},"79":{}}}],["seprat",{"_index":13380,"t":{},"b":{"53":{}}}],["seqddm",{"_index":3062,"t":{},"b":{"5":{},"9":{}}}],["sequel",{"_index":3594,"t":{},"b":{"8":{}}}],["sequenc",{"_index":945,"t":{},"b":{"3":{},"7":{},"13":{},"71":{}}}],["sequenti",{"_index":869,"t":{},"b":{"3":{},"5":{},"8":{},"9":{},"10":{},"15":{},"16":{},"17":{},"35":{}}}],["seri",{"_index":8104,"t":{},"b":{"15":{}}}],["serial",{"_index":9986,"t":{},"b":{"35":{}}}],["set",{"_index":362,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"26":{},"27":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"60":{},"65":{},"66":{},"69":{},"71":{},"72":{},"75":{},"76":{},"77":{}}}],["set(a",{"_index":7736,"t":{},"b":{"15":{},"26":{},"50":{},"55":{},"60":{}}}],["set(aa",{"_index":7977,"t":{},"b":{"15":{},"22":{}}}],["set(g",{"_index":9005,"t":{},"b":{"21":{}}}],["set(pbhpddmop,sparam",{"_index":3324,"t":{},"b":{"5":{},"10":{}}}],["setany<r>(f(stack",{"_index":2797,"t":{},"b":{"4":{}}}],["setecurveabciss",{"_index":12625,"t":{},"b":{"53":{}}}],["setenv",{"_index":13441,"t":{},"b":{"53":{}}}],["setminu",{"_index":7504,"t":{},"b":{"15":{},"38":{}}}],["settt",{"_index":9404,"t":{},"b":{"26":{}}}],["setw",{"_index":12603,"t":{},"b":{"52":{}}}],["setw(10",{"_index":9106,"t":{},"b":{"21":{}}}],["setw(3",{"_index":9105,"t":{},"b":{"21":{}}}],["seven",{"_index":8326,"t":{},"b":{"18":{}}}],["sever",{"_index":455,"t":{},"b":{"2":{},"3":{},"8":{},"12":{},"13":{},"15":{},"34":{},"65":{}}}],["sff",{"_index":7693,"t":{},"b":{"15":{},"26":{}}}],["sgn(i_{a",{"_index":2485,"t":{},"b":{"4":{},"11":{}}}],["sgn(i_{b",{"_index":2479,"t":{},"b":{"4":{},"11":{}}}],["sgn(i_{c",{"_index":2482,"t":{},"b":{"4":{},"11":{}}}],["sh",{"_index":10384,"t":{},"b":{"37":{},"42":{},"46":{},"66":{},"69":{},"81":{}}}],["sh(0.5",{"_index":14420,"t":{},"b":{"66":{}}}],["sh(th",{"_index":10383,"t":{},"b":{"37":{},"46":{}}}],["sh1",{"_index":5625,"t":{},"b":{"13":{}}}],["shade",{"_index":5195,"t":{},"b":{"13":{}}}],["shake",{"_index":13814,"t":{},"b":{"59":{}}}],["shall",{"_index":4776,"t":{},"b":{"11":{},"40":{},"48":{},"68":{},"69":{},"72":{},"77":{},"79":{}}}],["shamo",{"_index":77,"t":{},"b":{"2":{}}}],["shape",{"_index":1544,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"20":{},"40":{},"41":{},"42":{},"48":{},"49":{},"64":{}}}],["shape.ep",{"_index":5819,"t":{},"b":{"13":{}}}],["shape_at_\"+kkk",{"_index":1877,"t":{},"b":{"3":{},"20":{}}}],["shape_evolut",{"_index":1736,"t":{},"b":{"3":{},"20":{}}}],["shapegradi",{"_index":1879,"t":{},"b":{"3":{},"20":{}}}],["shapeswitch",{"_index":1669,"t":{},"b":{"3":{},"20":{}}}],["share",{"_index":3119,"t":{},"b":{"5":{},"8":{},"10":{},"18":{}}}],["sharedata",{"_index":8422,"t":{},"b":{"18":{}}}],["sharedata(\"shar",{"_index":8481,"t":{},"b":{"18":{}}}],["sharedata(filenam",{"_index":8421,"t":{},"b":{"18":{}}}],["sharp",{"_index":5504,"t":{},"b":{"13":{}}}],["sharpli",{"_index":5502,"t":{},"b":{"13":{}}}],["shd",{"_index":8444,"t":{},"b":{"18":{}}}],["shear",{"_index":10804,"t":{},"b":{"40":{}}}],["shell",{"_index":2751,"t":{},"b":{"4":{},"13":{},"35":{},"53":{}}}],["shewchuk",{"_index":120,"t":{},"b":{"2":{},"13":{}}}],["shewchuk1998",{"_index":119,"t":{},"b":{"2":{},"13":{}}}],["shift",{"_index":10500,"t":{},"b":{"39":{},"51":{},"54":{},"62":{}}}],["shock",{"_index":5557,"t":{},"b":{"13":{},"65":{},"67":{},"68":{},"75":{}}}],["shockslogo",{"_index":14443,"t":{"67":{}},"b":{}}],["short",{"_index":883,"t":{},"b":{"3":{},"81":{}}}],["shortcut",{"_index":8515,"t":{},"b":{"19":{},"35":{}}}],["show",{"_index":1760,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"16":{},"19":{},"35":{},"38":{},"40":{},"41":{},"54":{},"66":{},"71":{},"72":{},"74":{},"75":{},"76":{},"78":{},"79":{}}}],["showbas",{"_index":12591,"t":{},"b":{"52":{}}}],["showbord",{"_index":13406,"t":{},"b":{"53":{}}}],["shown",{"_index":5133,"t":{},"b":{"13":{},"14":{},"40":{},"41":{},"42":{},"54":{},"63":{},"64":{},"66":{},"71":{},"76":{},"77":{},"78":{},"79":{}}}],["showpo",{"_index":12597,"t":{},"b":{"52":{}}}],["shpere",{"_index":6407,"t":{},"b":{"13":{}}}],["shrinkag",{"_index":7077,"t":{},"b":{"13":{}}}],["shur",{"_index":10434,"t":{},"b":{"38":{}}}],["shur(iluk",{"_index":7990,"t":{},"b":{"15":{}}}],["shwarz",{"_index":7633,"t":{},"b":{"15":{},"26":{}}}],["si",{"_index":109,"t":{},"b":{"2":{},"13":{},"21":{},"35":{}}}],["si[1",{"_index":9103,"t":{},"b":{"21":{}}}],["si[50",{"_index":9104,"t":{},"b":{"21":{}}}],["si[j",{"_index":7563,"t":{},"b":{"15":{}}}],["siam",{"_index":50,"t":{},"b":{"2":{},"8":{}}}],["side",{"_index":1428,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"15":{},"20":{},"21":{},"22":{},"40":{},"41":{},"42":{},"48":{},"50":{},"60":{},"64":{},"76":{}}}],["sigi",{"_index":11196,"t":{},"b":{"41":{}}}],["sigma",{"_index":806,"t":{},"b":{"3":{},"11":{},"13":{},"20":{},"39":{},"40":{},"41":{},"42":{},"46":{},"48":{},"51":{},"54":{},"62":{},"64":{}}}],["sigma(u",{"_index":14237,"t":{},"b":{"64":{}}}],["sigma(u):e(v",{"_index":11730,"t":{},"b":{"46":{}}}],["sigma*sigma",{"_index":8738,"t":{},"b":{"20":{}}}],["sigma*x*(vhr*hr",{"_index":12553,"t":{},"b":{"51":{}}}],["sigma.\\end{split",{"_index":4983,"t":{},"b":{"11":{}}}],["sigma11",{"_index":11286,"t":{},"b":{"42":{}}}],["sigma11([x+uu",{"_index":11291,"t":{},"b":{"42":{}}}],["sigma12",{"_index":11288,"t":{},"b":{"42":{}}}],["sigma12([x+uu",{"_index":11295,"t":{},"b":{"42":{}}}],["sigma12*(n.y*w+n.x*",{"_index":11299,"t":{},"b":{"42":{}}}],["sigma22",{"_index":11287,"t":{},"b":{"42":{}}}],["sigma22([x+uu",{"_index":11293,"t":{},"b":{"42":{}}}],["sigma22*n.y*",{"_index":11298,"t":{},"b":{"42":{}}}],["sigma>0",{"_index":5489,"t":{},"b":{"13":{}}}],["sigma\\in\\mathbb{r",{"_index":1132,"t":{},"b":{"3":{}}}],["sigma\\quad",{"_index":5491,"t":{},"b":{"13":{}}}],["sigma_1",{"_index":10831,"t":{},"b":{"40":{}}}],["sigma_2",{"_index":10832,"t":{},"b":{"40":{}}}],["sigma_d",{"_index":10814,"t":{},"b":{"40":{}}}],["sigma_i^k",{"_index":7509,"t":{},"b":{"15":{}}}],["sigma_i^k({u_h}^\\ell_i",{"_index":7526,"t":{},"b":{"15":{}}}],["sigma_i^k({u_h}^{\\ell}_{|i",{"_index":7529,"t":{},"b":{"15":{}}}],["sigma_i^k({v_h",{"_index":7511,"t":{},"b":{"15":{}}}],["sigma_{1j}(\\mathbf{x})n_j",{"_index":10659,"t":{},"b":{"40":{}}}],["sigma_{22})^2+4\\sigma_{12}^2",{"_index":10834,"t":{},"b":{"40":{}}}],["sigma_{2j}(\\mathbf{x})n_j",{"_index":10660,"t":{},"b":{"40":{}}}],["sigma_{3i",{"_index":10699,"t":{},"b":{"40":{}}}],["sigma_{3j}(\\mathbf{x})n_j",{"_index":10661,"t":{},"b":{"40":{}}}],["sigma_{ij",{"_index":10665,"t":{},"b":{"40":{},"42":{}}}],["sigma_{ij}(\\mathbf{v",{"_index":10770,"t":{},"b":{"40":{}}}],["sigma_{ij}(\\mathbf{v})\\varepsilon_{ij}(\\mathbf{v})/2",{"_index":10769,"t":{},"b":{"40":{}}}],["sigma_{ij}(\\mathbf{x",{"_index":10662,"t":{},"b":{"40":{}}}],["sigma_{ij}(u",{"_index":14238,"t":{},"b":{"64":{}}}],["sigma_{ij}n_j",{"_index":10688,"t":{},"b":{"40":{}}}],["sign",{"_index":2655,"t":{},"b":{"4":{},"11":{},"13":{},"38":{},"48":{},"52":{},"54":{},"55":{},"62":{}}}],["sign(a",{"_index":13696,"t":{},"b":{"54":{}}}],["signal",{"_index":8400,"t":{},"b":{"18":{},"62":{},"81":{}}}],["signal’",{"_index":15356,"t":{},"b":{"81":{}}}],["signbit",{"_index":13697,"t":{},"b":{"54":{}}}],["signbit(a",{"_index":13698,"t":{},"b":{"54":{}}}],["signe*e.i",{"_index":2658,"t":{},"b":{"4":{}}}],["signe*e.x",{"_index":2659,"t":{},"b":{"4":{}}}],["signif",{"_index":8007,"t":{},"b":{"15":{}}}],["signific",{"_index":7820,"t":{},"b":{"15":{}}}],["sigx",{"_index":11195,"t":{},"b":{"41":{}}}],["silica",{"_index":12451,"t":{},"b":{"51":{}}}],["sim",{"_index":4490,"t":{},"b":{"11":{},"60":{}}}],["simeq",{"_index":10904,"t":{},"b":{"41":{}}}],["similar",{"_index":1608,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"40":{},"41":{},"60":{},"69":{}}}],["similarli",{"_index":3154,"t":{},"b":{"5":{},"10":{},"40":{},"48":{},"71":{}}}],["simon",{"_index":9783,"t":{},"b":{"29":{}}}],["simpl",{"_index":905,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"40":{},"60":{},"72":{},"73":{},"81":{}}}],["simple.edp",{"_index":3381,"t":{},"b":{"5":{},"6":{}}}],["simplest",{"_index":3221,"t":{},"b":{"5":{},"8":{},"10":{},"77":{}}}],["simpli",{"_index":1320,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"15":{},"37":{},"64":{},"76":{},"77":{}}}],["simplic",{"_index":10811,"t":{},"b":{"40":{},"45":{},"59":{},"79":{}}}],["simplif",{"_index":7065,"t":{},"b":{"13":{}}}],["simplifi",{"_index":1722,"t":{},"b":{"3":{},"7":{},"10":{},"20":{},"48":{},"81":{}}}],["simul",{"_index":373,"t":{},"b":{"2":{},"13":{},"15":{},"19":{},"29":{},"54":{},"71":{},"79":{},"81":{}}}],["sin",{"_index":11821,"t":{},"b":{"48":{},"54":{}}}],["sin(2*pi",{"_index":5834,"t":{},"b":{"13":{}}}],["sin(2.*pi*t",{"_index":13864,"t":{},"b":{"60":{}}}],["sin(5.0*i",{"_index":5509,"t":{},"b":{"13":{},"24":{}}}],["sin(\\phi",{"_index":1583,"t":{},"b":{"3":{}}}],["sin(\\pi",{"_index":4109,"t":{},"b":{"11":{},"60":{}}}],["sin(atan2(y,x)/2)*sqrt",{"_index":12175,"t":{},"b":{"48":{}}}],["sin(dag",{"_index":5830,"t":{},"b":{"13":{}}}],["sin(i*pi/10",{"_index":13780,"t":{},"b":{"56":{}}}],["sin(nx)*\\sin(mi",{"_index":10536,"t":{},"b":{"39":{}}}],["sin(pi*(i",{"_index":14222,"t":{},"b":{"63":{}}}],["sin(pi*t",{"_index":5855,"t":{},"b":{"13":{}}}],["sin(pi*x",{"_index":9008,"t":{},"b":{"21":{},"70":{}}}],["sin(pi*x)*cos(pi*i",{"_index":9085,"t":{},"b":{"21":{},"60":{},"70":{}}}],["sin(t",{"_index":5213,"t":{},"b":{"13":{},"15":{},"24":{},"25":{},"38":{},"41":{},"48":{},"70":{},"75":{},"76":{},"77":{}}}],["sin(t)*r",{"_index":14830,"t":{},"b":{"73":{}}}],["sin(t)/2",{"_index":14826,"t":{},"b":{"73":{}}}],["sin(theta",{"_index":13699,"t":{},"b":{"54":{},"66":{}}}],["sin(tt",{"_index":13868,"t":{},"b":{"60":{}}}],["sin(v",{"_index":6403,"t":{},"b":{"13":{}}}],["sin(x",{"_index":4343,"t":{},"b":{"11":{},"13":{},"24":{},"25":{}}}],["sin(x)*cos(i",{"_index":2777,"t":{},"b":{"4":{},"13":{},"24":{},"25":{}}}],["sin(x)*sin(i",{"_index":6303,"t":{},"b":{"13":{},"24":{},"25":{}}}],["sin(x*2*pi+x0)*sin(y*2*pi+y0)*sin(z*2*pi+z0",{"_index":12140,"t":{},"b":{"48":{}}}],["sin(x+\\pi/4.)*cos(y+\\pi/4",{"_index":12070,"t":{},"b":{"48":{}}}],["sin(x+pi/4.)*cos(y+pi/4",{"_index":12075,"t":{},"b":{"48":{}}}],["sin(x^2",{"_index":14773,"t":{},"b":{"72":{}}}],["sin(x^2+y^2",{"_index":14762,"t":{},"b":{"72":{}}}],["sin(xx*pi*2",{"_index":8337,"t":{},"b":{"18":{}}}],["sin(y)*sin(x",{"_index":6121,"t":{},"b":{"13":{},"24":{}}}],["sin(y*pi)/10",{"_index":5460,"t":{},"b":{"13":{}}}],["sin2",{"_index":1699,"t":{},"b":{"3":{},"20":{}}}],["sin\\left(\\pi{i",{"_index":14174,"t":{},"b":{"63":{}}}],["singl",{"_index":7897,"t":{},"b":{"15":{},"33":{},"51":{}}}],["singular",{"_index":5522,"t":{},"b":{"13":{},"40":{},"48":{}}}],["sinh",{"_index":13700,"t":{},"b":{"54":{}}}],["sinh(theta",{"_index":13701,"t":{},"b":{"54":{}}}],["sinh(x",{"_index":13702,"t":{},"b":{"54":{}}}],["sit",{"_index":11250,"t":{},"b":{"42":{}}}],["site",{"_index":13977,"t":{},"b":{"61":{},"72":{}}}],["situat",{"_index":13601,"t":{},"b":{"54":{}}}],["six",{"_index":3850,"t":{},"b":{"11":{}}}],["size",{"_index":791,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"26":{},"32":{},"33":{},"39":{},"41":{},"48":{},"54":{},"55":{},"56":{},"60":{},"64":{},"68":{},"72":{},"76":{}}}],["size(f)/m",{"_index":2870,"t":{},"b":{"4":{}}}],["size(hmax",{"_index":7103,"t":{},"b":{"13":{}}}],["size(hmin",{"_index":7101,"t":{},"b":{"13":{}}}],["size.it",{"_index":5546,"t":{},"b":{"13":{}}}],["size/2",{"_index":8206,"t":{},"b":{"15":{}}}],["size_t",{"_index":8418,"t":{},"b":{"18":{}}}],["sizeof(cff",{"_index":8470,"t":{},"b":{"18":{}}}],["sizeof(rff",{"_index":8474,"t":{},"b":{"18":{}}}],["sizeof(statu",{"_index":8455,"t":{},"b":{"18":{}}}],["sizeofvolum",{"_index":6735,"t":{},"b":{"13":{}}}],["sizeoverlap",{"_index":9412,"t":{},"b":{"26":{}}}],["sizeoverlaps*2",{"_index":9443,"t":{},"b":{"26":{}}}],["sizestack",{"_index":2829,"t":{},"b":{"4":{}}}],["ski",{"_index":4514,"t":{},"b":{"11":{}}}],["skin",{"_index":15094,"t":{},"b":{"76":{}}}],["skip",{"_index":5400,"t":{},"b":{"13":{},"21":{},"50":{}}}],["skipcomment(fil",{"_index":9134,"t":{},"b":{"21":{}}}],["skipcomment(ifstream",{"_index":9123,"t":{},"b":{"21":{}}}],["slack",{"_index":908,"t":{},"b":{"3":{}}}],["slave",{"_index":8426,"t":{},"b":{"18":{}}}],["slave1",{"_index":8450,"t":{},"b":{"18":{}}}],["sleep",{"_index":13422,"t":{},"b":{"53":{}}}],["slepc",{"_index":8234,"t":{},"b":{"15":{},"16":{},"17":{},"34":{},"35":{}}}],["slepc.edp",{"_index":8270,"t":{},"b":{"16":{}}}],["slepclogo",{"_index":8310,"t":{"17":{}},"b":{}}],["slice",{"_index":14697,"t":{},"b":{"71":{}}}],["slide",{"_index":3689,"t":{},"b":{"10":{},"40":{},"61":{}}}],["slightli",{"_index":1887,"t":{},"b":{"3":{}}}],["sline(nx",{"_index":6630,"t":{},"b":{"13":{}}}],["slip",{"_index":5946,"t":{},"b":{"13":{},"15":{},"61":{},"66":{}}}],["slope",{"_index":5539,"t":{},"b":{"13":{}}}],["slow",{"_index":1947,"t":{},"b":{"3":{},"8":{},"66":{},"77":{}}}],["slower",{"_index":1068,"t":{},"b":{"3":{}}}],["slowli",{"_index":11547,"t":{},"b":{"45":{}}}],["sm",{"_index":10514,"t":{},"b":{"39":{}}}],["small",{"_index":1279,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"18":{},"39":{},"40":{},"42":{},"46":{},"48":{},"64":{},"71":{},"77":{},"79":{},"81":{}}}],["smaller",{"_index":821,"t":{},"b":{"3":{},"8":{},"13":{},"15":{},"74":{}}}],["smallest",{"_index":6156,"t":{},"b":{"13":{},"39":{}}}],["smart",{"_index":1055,"t":{},"b":{"3":{}}}],["smc(\"ff",{"_index":8480,"t":{},"b":{"18":{}}}],["smff(\"ff",{"_index":8425,"t":{},"b":{"18":{}}}],["smile",{"_index":5846,"t":{},"b":{"13":{}}}],["smileface.ep",{"_index":5876,"t":{},"b":{"13":{}}}],["sminu",{"_index":14418,"t":{},"b":{"66":{}}}],["sminus(70",{"_index":14397,"t":{},"b":{"66":{}}}],["sminus(t",{"_index":14394,"t":{},"b":{"66":{}}}],["smith",{"_index":186,"t":{},"b":{"2":{}}}],["smith1996",{"_index":185,"t":{},"b":{"2":{},"15":{}}}],["smj",{"_index":7675,"t":{},"b":{"15":{}}}],["smj(njpart",{"_index":7679,"t":{},"b":{"15":{},"26":{}}}],["smj[j",{"_index":7549,"t":{},"b":{"15":{}}}],["smj[j]*ui",{"_index":7556,"t":{},"b":{"15":{},"26":{}}}],["smj[jp",{"_index":7684,"t":{},"b":{"15":{},"26":{}}}],["smooth",{"_index":891,"t":{},"b":{"3":{},"13":{},"15":{},"53":{},"54":{},"66":{}}}],["smoother",{"_index":8117,"t":{},"b":{"15":{}}}],["smoothing+swap",{"_index":7074,"t":{},"b":{"13":{}}}],["sne",{"_index":8258,"t":{},"b":{"16":{}}}],["soap",{"_index":11816,"t":{},"b":{"48":{},"49":{}}}],["sobolev",{"_index":14731,"t":{},"b":{"72":{}}}],["societi",{"_index":9778,"t":{},"b":{"29":{}}}],["soft",{"_index":11305,"t":{},"b":{"42":{}}}],["softwar",{"_index":69,"t":{},"b":{"2":{},"3":{},"7":{},"12":{},"13":{},"15":{},"19":{},"29":{},"33":{},"35":{},"53":{},"72":{}}}],["sol",{"_index":2357,"t":{},"b":{"4":{},"13":{},"15":{},"20":{},"21":{},"36":{},"41":{},"80":{}}}],["sol(aa.n",{"_index":7979,"t":{},"b":{"15":{}}}],["sol(xh.ndof",{"_index":15345,"t":{},"b":{"80":{}}}],["sol1",{"_index":6960,"t":{},"b":{"13":{}}}],["sol2",{"_index":6959,"t":{},"b":{"13":{}}}],["solatedg",{"_index":2362,"t":{},"b":{"4":{}}}],["solathexahedra",{"_index":2367,"t":{},"b":{"4":{}}}],["solatpentahedra",{"_index":2366,"t":{},"b":{"4":{}}}],["solatquadrilater",{"_index":2364,"t":{},"b":{"4":{}}}],["solattetrahedra",{"_index":2365,"t":{},"b":{"4":{}}}],["solattriangl",{"_index":2363,"t":{},"b":{"4":{}}}],["solatvertic",{"_index":2361,"t":{},"b":{"4":{}}}],["solb",{"_index":2358,"t":{},"b":{"4":{},"13":{}}}],["solid",{"_index":11232,"t":{},"b":{"42":{},"64":{}}}],["solut",{"_index":242,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"13":{},"15":{},"20":{},"21":{},"24":{},"25":{},"26":{},"36":{},"38":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"60":{},"61":{},"62":{},"64":{},"66":{},"69":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{}}}],["solutions](int",{"_index":2262,"t":{},"b":{"4":{}}}],["solv",{"_index":481,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"54":{},"55":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["solvabl",{"_index":11008,"t":{},"b":{"41":{}}}],["solve_succeed",{"_index":1218,"t":{},"b":{"3":{}}}],["solved_to_acceptable_level",{"_index":1219,"t":{},"b":{"3":{}}}],["solveiniti",{"_index":7885,"t":{},"b":{"15":{}}}],["solver",{"_index":667,"t":{"80":{}},"b":{"3":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"34":{},"37":{},"38":{},"39":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"55":{},"60":{},"62":{},"66":{},"68":{},"74":{},"76":{},"80":{},"81":{}}}],["solver’",{"_index":7709,"t":{},"b":{"15":{}}}],["somehow",{"_index":2161,"t":{},"b":{"3":{}}}],["someth",{"_index":8513,"t":{},"b":{"19":{},"35":{},"66":{},"70":{}}}],["sometim",{"_index":4423,"t":{},"b":{"11":{},"13":{},"15":{},"51":{}}}],["somewhat",{"_index":1127,"t":{},"b":{"3":{}}}],["soon",{"_index":1648,"t":{},"b":{"3":{}}}],["sophist",{"_index":3638,"t":{},"b":{"8":{}}}],["sopops",{"_index":1959,"t":{},"b":{"3":{}}}],["sora",{"_index":3181,"t":{},"b":{"5":{},"9":{}}}],["sorbonn",{"_index":9754,"t":{},"b":{"29":{},"34":{}}}],["sorder",{"_index":4087,"t":{},"b":{"11":{},"22":{}}}],["sorensen",{"_index":237,"t":{},"b":{"2":{}}}],["sorri",{"_index":7467,"t":{},"b":{"15":{}}}],["sort",{"_index":7203,"t":{},"b":{"13":{},"21":{},"54":{},"60":{}}}],["sort(a",{"_index":13704,"t":{},"b":{"54":{}}}],["sort(d",{"_index":8906,"t":{},"b":{"21":{}}}],["sort(sord",{"_index":4089,"t":{},"b":{"11":{},"22":{}}}],["sostopfuncvalu",{"_index":1952,"t":{},"b":{"3":{}}}],["sostoprelxtol",{"_index":1953,"t":{},"b":{"3":{}}}],["sound(u",{"_index":14153,"t":{},"b":{"62":{}}}],["sound.ep",{"_index":14154,"t":{},"b":{"62":{}}}],["sourc",{"_index":1891,"t":{},"b":{"3":{},"5":{},"15":{},"16":{},"31":{},"32":{},"35":{},"62":{},"63":{}}}],["sources.git",{"_index":10028,"t":{},"b":{"35":{}}}],["sources/src/femlib",{"_index":2524,"t":{},"b":{"4":{}}}],["soution",{"_index":2386,"t":{},"b":{"4":{}}}],["sp",{"_index":3307,"t":{},"b":{"5":{},"10":{}}}],["space",{"_index":780,"t":{},"b":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"27":{},"36":{},"38":{},"40":{},"41":{},"45":{},"48":{},"51":{},"53":{},"54":{},"56":{},"60":{},"71":{},"72":{},"76":{},"78":{},"81":{}}}],["span",{"_index":2920,"t":{},"b":{"4":{},"8":{}}}],["spanish",{"_index":9899,"t":{},"b":{"34":{}}}],["sparam",{"_index":7702,"t":{},"b":{"15":{},"60":{}}}],["sparc",{"_index":12557,"t":{},"b":{"51":{}}}],["spars",{"_index":159,"t":{},"b":{"2":{},"3":{},"8":{},"10":{},"11":{},"15":{},"21":{},"26":{},"45":{},"55":{},"56":{},"60":{},"74":{},"76":{}}}],["sparsea",{"_index":4920,"t":{},"b":{"11":{}}}],["sparsea*5",{"_index":4923,"t":{},"b":{"11":{}}}],["sparseb",{"_index":4924,"t":{},"b":{"11":{}}}],["sparseb(0,0",{"_index":4925,"t":{},"b":{"11":{}}}],["sparsesolv",{"_index":4512,"t":{},"b":{"11":{},"13":{},"15":{},"21":{},"22":{},"25":{},"26":{},"55":{},"60":{}}}],["sparsiti",{"_index":1333,"t":{},"b":{"3":{},"8":{}}}],["spatial",{"_index":3036,"t":{},"b":{"5":{},"9":{}}}],["spd",{"_index":3734,"t":{},"b":{"10":{},"15":{}}}],["speak",{"_index":4271,"t":{},"b":{"11":{}}}],["spec",{"_index":10150,"t":{},"b":{"35":{}}}],["special",{"_index":4422,"t":{},"b":{"11":{},"13":{},"15":{},"19":{},"35":{},"37":{}}}],["specialist",{"_index":14592,"t":{},"b":{"70":{}}}],["specif",{"_index":788,"t":{},"b":{"3":{},"15":{},"33":{},"60":{},"76":{}}}],["specifi",{"_index":799,"t":{},"b":{"3":{},"5":{},"7":{},"9":{},"10":{},"12":{},"13":{},"15":{},"39":{},"54":{},"60":{},"71":{},"76":{},"80":{}}}],["specimen",{"_index":5880,"t":{},"b":{"13":{},"24":{}}}],["spectrum",{"_index":3640,"t":{},"b":{"8":{},"10":{},"39":{}}}],["speed",{"_index":848,"t":{},"b":{"3":{},"7":{},"11":{},"12":{},"13":{},"41":{},"42":{},"48":{},"70":{},"78":{}}}],["speedup",{"_index":3753,"t":{},"b":{"10":{}}}],["spenc",{"_index":3431,"t":{},"b":{"5":{}}}],["spent",{"_index":3145,"t":{},"b":{"5":{}}}],["spetic",{"_index":12041,"t":{},"b":{"48":{}}}],["sph.mesh",{"_index":12143,"t":{},"b":{"48":{}}}],["sphere",{"_index":1656,"t":{},"b":{"3":{},"13":{},"20":{},"24":{},"48":{},"51":{}}}],["sphere(0.5",{"_index":6354,"t":{},"b":{"13":{},"48":{}}}],["sphere(1",{"_index":7147,"t":{},"b":{"13":{}}}],["sphere(r",{"_index":6405,"t":{},"b":{"13":{}}}],["spheric",{"_index":1525,"t":{},"b":{"3":{},"16":{}}}],["spk",{"_index":9410,"t":{},"b":{"26":{}}}],["splimesh4",{"_index":13448,"t":{},"b":{"53":{}}}],["spline",{"_index":8325,"t":{},"b":{"18":{}}}],["spline1",{"_index":8343,"t":{},"b":{"18":{}}}],["spline1(gslinterpcsplin",{"_index":8341,"t":{},"b":{"18":{}}}],["spline1(t",{"_index":8352,"t":{},"b":{"18":{}}}],["spline1.d(t",{"_index":8354,"t":{},"b":{"18":{}}}],["spline1.dd(t",{"_index":8356,"t":{},"b":{"18":{}}}],["spline11",{"_index":8345,"t":{},"b":{"18":{}}}],["spline11(dsplin",{"_index":8344,"t":{},"b":{"18":{}}}],["spline2",{"_index":8347,"t":{},"b":{"18":{}}}],["spline2(gslinterpsteffen",{"_index":8346,"t":{},"b":{"18":{}}}],["spline3",{"_index":8350,"t":{},"b":{"18":{}}}],["spline3(gslinterpcsplin",{"_index":8348,"t":{},"b":{"18":{}}}],["spline33(dspline(0",{"_index":8349,"t":{},"b":{"18":{}}}],["split",{"_index":3404,"t":{},"b":{"5":{},"9":{},"11":{},"13":{},"15":{},"20":{},"26":{},"54":{}}}],["splite",{"_index":8764,"t":{},"b":{"20":{}}}],["splitedg",{"_index":13443,"t":{},"b":{"53":{}}}],["splitedgemesh",{"_index":13444,"t":{},"b":{"53":{}}}],["splitin2",{"_index":5599,"t":{},"b":{"13":{},"54":{}}}],["splitmesh",{"_index":5659,"t":{},"b":{"13":{},"54":{}}}],["splitmesh(th",{"_index":5661,"t":{},"b":{"13":{}}}],["splitmesh(th0",{"_index":13706,"t":{},"b":{"54":{}}}],["splitmesh12",{"_index":13445,"t":{},"b":{"53":{}}}],["splitmesh3",{"_index":13446,"t":{},"b":{"53":{}}}],["splitmesh4",{"_index":13447,"t":{},"b":{"53":{}}}],["splitmesh6",{"_index":13449,"t":{},"b":{"53":{}}}],["splitpbedg",{"_index":5577,"t":{},"b":{"13":{},"41":{},"47":{},"48":{},"54":{},"61":{},"67":{}}}],["splittedmesh.ep",{"_index":5664,"t":{},"b":{"13":{}}}],["splitting.each",{"_index":5619,"t":{},"b":{"13":{}}}],["splot",{"_index":14803,"t":{},"b":{"72":{}}}],["splu",{"_index":14417,"t":{},"b":{"66":{}}}],["splus(70",{"_index":14396,"t":{},"b":{"66":{}}}],["splus(t",{"_index":14393,"t":{},"b":{"66":{}}}],["spot",{"_index":5440,"t":{},"b":{"13":{}}}],["sprec",{"_index":3213,"t":{},"b":{"5":{}}}],["springer",{"_index":80,"t":{},"b":{"2":{}}}],["sprintf(ff",{"_index":8458,"t":{},"b":{"18":{}}}],["spuriou",{"_index":10518,"t":{},"b":{"39":{},"51":{},"79":{}}}],["sqrt",{"_index":1772,"t":{},"b":{"3":{},"20":{},"48":{},"54":{},"63":{}}}],["sqrt(1./(rr+(e",{"_index":1849,"t":{},"b":{"3":{},"20":{}}}],["sqrt(2",{"_index":6174,"t":{},"b":{"13":{},"40":{},"42":{},"64":{}}}],["sqrt(2.)*1i",{"_index":8815,"t":{},"b":{"21":{}}}],["sqrt(3",{"_index":6291,"t":{},"b":{"13":{}}}],["sqrt(4",{"_index":6289,"t":{},"b":{"13":{}}}],["sqrt(a",{"_index":13707,"t":{},"b":{"54":{}}}],["sqrt(a^2",{"_index":13537,"t":{},"b":{"54":{}}}],["sqrt(arealac/th.area",{"_index":7257,"t":{},"b":{"13":{}}}],["sqrt(ehr[i]^2",{"_index":12567,"t":{},"b":{"51":{}}}],["sqrt(err0",{"_index":7487,"t":{},"b":{"15":{}}}],["sqrt(etak",{"_index":12287,"t":{},"b":{"48":{}}}],["sqrt(ev[i])*radiu",{"_index":12574,"t":{},"b":{"51":{}}}],["sqrt(int2d(th)((phi",{"_index":14780,"t":{},"b":{"72":{}}}],["sqrt(int2d(th)((u",{"_index":10948,"t":{},"b":{"41":{}}}],["sqrt(int2d(th)((uu",{"_index":11300,"t":{},"b":{"42":{}}}],["sqrt(int2d(th)(square(u",{"_index":14972,"t":{},"b":{"74":{}}}],["sqrt(lambda)x",{"_index":8279,"t":{},"b":{"16":{}}}],["sqrt(mdiff'*diff",{"_index":12395,"t":{},"b":{"50":{}}}],["sqrt(rho",{"_index":12263,"t":{},"b":{"48":{}}}],["sqrt(rho2*rho2*sin2",{"_index":1744,"t":{},"b":{"3":{},"20":{}}}],["sqrt(square((ax",{"_index":12102,"t":{},"b":{"48":{}}}],["sqrt(square(x",{"_index":7185,"t":{},"b":{"13":{}}}],["sqrt(u'*(w",{"_index":12383,"t":{},"b":{"50":{}}}],["sqrt(u*u+v*v",{"_index":14521,"t":{},"b":{"67":{}}}],["sqrt(w",{"_index":11777,"t":{},"b":{"46":{}}}],["sqrt(w1",{"_index":10429,"t":{},"b":{"37":{}}}],["sqrt(x*x",{"_index":6982,"t":{},"b":{"13":{}}}],["sqrt(x^2+y^2",{"_index":6970,"t":{},"b":{"13":{},"48":{}}}],["sqrt2",{"_index":6173,"t":{},"b":{"13":{},"40":{},"42":{},"64":{}}}],["sqrtpsi",{"_index":1739,"t":{},"b":{"3":{},"20":{}}}],["sqrtpsi3",{"_index":1764,"t":{},"b":{"3":{},"20":{}}}],["sqrt{(\\sigma_{11",{"_index":10833,"t":{},"b":{"40":{}}}],["sqrt{(x",{"_index":7182,"t":{},"b":{"13":{}}}],["sqrt{1/3}}{2",{"_index":13826,"t":{},"b":{"59":{}}}],["sqrt{15})|t_k|}{1200",{"_index":4698,"t":{},"b":{"11":{}}}],["sqrt{15}}{21},\\frac{6",{"_index":4687,"t":{},"b":{"11":{}}}],["sqrt{15}}{21},\\frac{9+2\\sqrt{15}}{21}\\right",{"_index":4689,"t":{},"b":{"11":{}}}],["sqrt{15}}{21}\\right",{"_index":4688,"t":{},"b":{"11":{}}}],["sqrt{3/5}}{2",{"_index":13832,"t":{},"b":{"59":{}}}],["sqrt{30})g\\left",{"_index":13835,"t":{},"b":{"59":{}}}],["sqrt{30}}{72}||q^iq^j",{"_index":4641,"t":{},"b":{"11":{}}}],["sqrt{a(v,v",{"_index":10957,"t":{},"b":{"41":{}}}],["sqrt{x^2",{"_index":13468,"t":{},"b":{"54":{}}}],["sqrt{x^2+1}\\right",{"_index":13482,"t":{},"b":{"54":{}}}],["squar",{"_index":2833,"t":{},"b":{"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"15":{},"16":{},"21":{},"24":{},"37":{},"39":{},"42":{},"48":{},"53":{},"54":{},"56":{},"64":{},"79":{}}}],["square((ay",{"_index":12103,"t":{},"b":{"48":{}}}],["square((x",{"_index":8734,"t":{},"b":{"20":{}}}],["square((y<0.5?y*ny:(i",{"_index":8797,"t":{},"b":{"21":{}}}],["square(1",{"_index":2944,"t":{},"b":{"4":{}}}],["square(10",{"_index":2973,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"18":{},"19":{},"21":{},"22":{},"24":{},"25":{},"27":{},"45":{},"47":{},"48":{},"56":{},"64":{},"80":{}}}],["square(10,10",{"_index":3350,"t":{},"b":{"5":{},"10":{},"13":{},"70":{}}}],["square(10,20,[x*pi",{"_index":6466,"t":{},"b":{"13":{}}}],["square(100",{"_index":12044,"t":{},"b":{"48":{}}}],["square(100,100",{"_index":3696,"t":{},"b":{"10":{}}}],["square(12",{"_index":11027,"t":{},"b":{"41":{}}}],["square(16",{"_index":10940,"t":{},"b":{"41":{}}}],["square(2",{"_index":4340,"t":{},"b":{"11":{},"13":{},"21":{},"24":{}}}],["square(2*np",{"_index":1677,"t":{},"b":{"3":{},"20":{}}}],["square(2.*pi",{"_index":8807,"t":{},"b":{"21":{}}}],["square(2.*pi)*(squar",{"_index":8794,"t":{},"b":{"21":{}}}],["square(20",{"_index":5646,"t":{},"b":{"13":{},"20":{},"21":{},"24":{},"39":{},"50":{},"60":{}}}],["square(3",{"_index":4910,"t":{},"b":{"11":{},"13":{},"24":{}}}],["square(30",{"_index":4432,"t":{},"b":{"11":{},"79":{}}}],["square(30,20",{"_index":3352,"t":{},"b":{"5":{}}}],["square(35",{"_index":6255,"t":{},"b":{"13":{}}}],["square(4",{"_index":4911,"t":{},"b":{"11":{},"13":{},"24":{}}}],["square(5",{"_index":5078,"t":{},"b":{"11":{},"13":{},"24":{}}}],["square(5+i*3,5+i*3",{"_index":12055,"t":{},"b":{"48":{}}}],["square(5,5",{"_index":2822,"t":{},"b":{"4":{},"11":{},"19":{},"27":{}}}],["square(50,50",{"_index":3490,"t":{},"b":{"7":{}}}],["square(8",{"_index":11494,"t":{},"b":{"45":{}}}],["square(a",{"_index":13708,"t":{},"b":{"54":{}}}],["square(c0",{"_index":1778,"t":{},"b":{"3":{},"20":{}}}],["square(c1",{"_index":1781,"t":{},"b":{"3":{},"20":{}}}],["square(c2",{"_index":1783,"t":{},"b":{"3":{},"20":{}}}],["square(i",{"_index":1370,"t":{},"b":{"3":{},"13":{},"20":{}}}],["square(m",{"_index":11197,"t":{},"b":{"41":{}}}],["square(n",{"_index":5142,"t":{},"b":{"13":{},"24":{},"46":{}}}],["square(nc",{"_index":9421,"t":{},"b":{"26":{}}}],["square(nloc",{"_index":9420,"t":{},"b":{"26":{}}}],["square(nn",{"_index":1373,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"78":{}}}],["square(nnx",{"_index":13709,"t":{},"b":{"54":{}}}],["square(np",{"_index":1708,"t":{},"b":{"3":{},"20":{}}}],["square(nx",{"_index":6029,"t":{},"b":{"13":{},"21":{}}}],["square(nx,ny,[x0+(x1",{"_index":6428,"t":{},"b":{"13":{}}}],["square(nx,nz,[x0+(x1",{"_index":6425,"t":{},"b":{"13":{}}}],["square(ny,nz,[y0+(y1",{"_index":6421,"t":{},"b":{"13":{}}}],["square(real(i)/n",{"_index":8336,"t":{},"b":{"18":{}}}],["square(rho",{"_index":1724,"t":{},"b":{"3":{},"20":{}}}],["square(rho2",{"_index":1726,"t":{},"b":{"3":{},"20":{}}}],["square(sin(i",{"_index":1700,"t":{},"b":{"3":{},"20":{}}}],["square(x",{"_index":1738,"t":{},"b":{"3":{},"20":{}}}],["square3",{"_index":6365,"t":{},"b":{"13":{}}}],["square3(10",{"_index":4076,"t":{},"b":{"11":{}}}],["square3(n,n",{"_index":6637,"t":{},"b":{"13":{}}}],["square3(n,n,[1,y,x",{"_index":6576,"t":{},"b":{"13":{}}}],["square3(n,n,[2*x,0,y],orient",{"_index":6574,"t":{},"b":{"13":{}}}],["square3(n,n,[2*x,1,y],orient",{"_index":6572,"t":{},"b":{"13":{}}}],["square3(n,n,[2*x,y,0],orient",{"_index":6570,"t":{},"b":{"13":{}}}],["square3(n,n,[2*x,y,1],orient",{"_index":6516,"t":{},"b":{"13":{}}}],["square3(n,n,[2,y,x],orient",{"_index":6578,"t":{},"b":{"13":{}}}],["square3(nx,ny,[torex,torey,torez",{"_index":6510,"t":{},"b":{"13":{}}}],["square3(nx,ny,[torex,torey,torez],orient",{"_index":6379,"t":{},"b":{"13":{}}}],["srandom",{"_index":13353,"t":{},"b":{"53":{},"60":{}}}],["srandom(10",{"_index":8365,"t":{},"b":{"18":{}}}],["srandomdev",{"_index":8361,"t":{},"b":{"18":{},"53":{},"60":{}}}],["src/femlib/element_p2h.cpp",{"_index":2681,"t":{},"b":{"4":{}}}],["src/femlib/fespace.cpp",{"_index":2675,"t":{},"b":{"4":{}}}],["ss",{"_index":9097,"t":{},"b":{"21":{}}}],["ss[\"1",{"_index":9098,"t":{},"b":{"21":{}}}],["ss[\"2",{"_index":9099,"t":{},"b":{"21":{}}}],["ss[\"3",{"_index":9100,"t":{},"b":{"21":{}}}],["ssd",{"_index":5411,"t":{},"b":{"13":{},"24":{},"54":{}}}],["ssd(th.nt",{"_index":5416,"t":{},"b":{"13":{},"24":{}}}],["ssd.n",{"_index":5417,"t":{},"b":{"13":{},"24":{}}}],["ssd[i",{"_index":5424,"t":{},"b":{"13":{},"24":{}}}],["ssd[t1",{"_index":5414,"t":{},"b":{"13":{},"24":{}}}],["ssd[t2",{"_index":5415,"t":{},"b":{"13":{},"24":{}}}],["ssp",{"_index":8707,"t":{},"b":{"20":{}}}],["ssp[kx",{"_index":8710,"t":{},"b":{"20":{}}}],["ssp[kx+in[].sum",{"_index":8712,"t":{},"b":{"20":{}}}],["ssptofef",{"_index":8714,"t":{},"b":{"20":{}}}],["ssptofef(best1",{"_index":8729,"t":{},"b":{"20":{}}}],["ssptofef(u1",{"_index":8719,"t":{},"b":{"20":{}}}],["sss",{"_index":8693,"t":{},"b":{"20":{}}}],["st(real",{"_index":5854,"t":{},"b":{"13":{}}}],["st^{2d",{"_index":2379,"t":{},"b":{"4":{}}}],["st^{3d",{"_index":2408,"t":{},"b":{"4":{}}}],["st_{xx}^{2d",{"_index":2381,"t":{},"b":{"4":{}}}],["st_{xx}^{3d",{"_index":2370,"t":{},"b":{"4":{}}}],["st_{xy}^{2d",{"_index":2382,"t":{},"b":{"4":{}}}],["st_{xy}^{3d",{"_index":2371,"t":{},"b":{"4":{}}}],["st_{xz}^{3d",{"_index":2372,"t":{},"b":{"4":{}}}],["st_{yx}^{2d",{"_index":2383,"t":{},"b":{"4":{}}}],["st_{yx}^{3d",{"_index":2373,"t":{},"b":{"4":{}}}],["st_{yy}^{2d",{"_index":2384,"t":{},"b":{"4":{}}}],["st_{yy}^{3d",{"_index":2374,"t":{},"b":{"4":{}}}],["st_{yz}^{3d",{"_index":2375,"t":{},"b":{"4":{}}}],["st_{zx}^{3d",{"_index":2376,"t":{},"b":{"4":{}}}],["st_{zy}^{3d",{"_index":2377,"t":{},"b":{"4":{}}}],["st_{zz}^{3d",{"_index":2378,"t":{},"b":{"4":{}}}],["stabil",{"_index":1335,"t":{},"b":{"3":{},"16":{},"41":{},"65":{},"73":{},"78":{}}}],["stabl",{"_index":11166,"t":{},"b":{"41":{},"77":{}}}],["stack",{"_index":2770,"t":{},"b":{"4":{}}}],["stage",{"_index":12409,"t":{},"b":{"51":{}}}],["stagnat",{"_index":3463,"t":{},"b":{"7":{}}}],["stall",{"_index":4407,"t":{},"b":{"11":{}}}],["stand",{"_index":1085,"t":{},"b":{"3":{},"7":{},"11":{},"14":{},"40":{}}}],["standard",{"_index":804,"t":{},"b":{"3":{},"5":{},"17":{},"21":{},"36":{},"37":{},"51":{},"52":{},"60":{},"78":{}}}],["start",{"_index":790,"t":{},"b":{"3":{},"7":{},"8":{},"9":{},"11":{},"15":{},"20":{},"21":{},"38":{},"45":{},"48":{},"51":{},"65":{},"70":{},"73":{},"76":{},"77":{}}}],["start(0:in[].sum",{"_index":8723,"t":{},"b":{"20":{}}}],["start(0:vh.ndof",{"_index":2095,"t":{},"b":{"3":{}}}],["start(2*in[].sum",{"_index":8722,"t":{},"b":{"20":{}}}],["start(2*vh.ndof",{"_index":2089,"t":{},"b":{"3":{}}}],["start(in[].sum:2*in[].sum",{"_index":8724,"t":{},"b":{"20":{}}}],["start(vh.ndof:2*vh.ndof",{"_index":2097,"t":{},"b":{"3":{}}}],["startedlogo",{"_index":15075,"t":{"76":{}},"b":{}}],["startshap",{"_index":1683,"t":{},"b":{"3":{},"20":{}}}],["starttol",{"_index":1979,"t":{},"b":{"3":{},"20":{}}}],["stat",{"_index":13438,"t":{},"b":{"53":{}}}],["state",{"_index":3479,"t":{},"b":{"7":{},"11":{},"13":{},"16":{},"40":{},"54":{},"62":{},"72":{},"75":{},"77":{},"79":{}}}],["statement",{"_index":5472,"t":{},"b":{"13":{},"41":{},"51":{},"56":{},"70":{},"71":{}}}],["static",{"_index":2537,"t":{"47":{},"48":{}},"b":{"4":{},"8":{},"12":{},"15":{},"39":{},"40":{},"44":{},"47":{},"48":{}}}],["stationari",{"_index":14081,"t":{},"b":{"61":{},"81":{}}}],["statist",{"_index":13917,"t":{},"b":{"60":{}}}],["statu",{"_index":2324,"t":{},"b":{"4":{},"15":{},"18":{}}}],["status",{"_index":1216,"t":{},"b":{"3":{}}}],["std",{"_index":2528,"t":{},"b":{"4":{},"21":{}}}],["stdio.h",{"_index":8437,"t":{},"b":{"18":{}}}],["stdlib.h",{"_index":8436,"t":{},"b":{"18":{}}}],["steadi",{"_index":8262,"t":{"73":{}},"b":{"16":{},"61":{},"73":{},"74":{},"77":{}}}],["steel",{"_index":14410,"t":{},"b":{"66":{}}}],["stefan’",{"_index":15297,"t":{},"b":{"79":{}}}],["step",{"_index":828,"t":{},"b":{"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"35":{},"41":{},"42":{},"43":{},"54":{},"61":{},"70":{},"71":{},"74":{},"76":{},"79":{}}}],["step_",{"_index":3727,"t":{},"b":{"10":{}}}],["stephan",{"_index":9980,"t":{},"b":{"35":{}}}],["stepper",{"_index":8264,"t":{},"b":{"16":{},"17":{}}}],["sth",{"_index":1707,"t":{},"b":{"3":{},"20":{}}}],["stiff",{"_index":10955,"t":{},"b":{"41":{},"45":{},"76":{}}}],["still",{"_index":1250,"t":{},"b":{"3":{},"13":{},"33":{},"65":{},"72":{},"79":{},"81":{}}}],["stl",{"_index":9866,"t":{},"b":{"33":{}}}],["stochast",{"_index":1955,"t":{},"b":{"3":{},"13":{}}}],["stoke",{"_index":299,"t":{"45":{},"73":{},"74":{},"78":{},"80":{}},"b":{"2":{},"4":{},"12":{},"15":{},"16":{},"25":{},"41":{},"42":{},"45":{},"50":{},"61":{},"64":{},"68":{},"73":{},"74":{},"78":{},"80":{},"81":{}}}],["stokes(0",{"_index":7978,"t":{},"b":{"15":{}}}],["stokes(vh",{"_index":7976,"t":{},"b":{"15":{}}}],["stop",{"_index":545,"t":{},"b":{"3":{},"5":{},"11":{},"13":{},"15":{},"20":{},"45":{},"50":{},"54":{},"60":{},"70":{}}}],["stopabsftol",{"_index":1940,"t":{},"b":{"3":{}}}],["stopabsxtol",{"_index":1938,"t":{},"b":{"3":{}}}],["stopfunc",{"_index":546,"t":{},"b":{"3":{},"54":{}}}],["stopfunc(int",{"_index":581,"t":{},"b":{"3":{}}}],["stopfuncvalu",{"_index":1936,"t":{},"b":{"3":{}}}],["stopmaxfev",{"_index":1941,"t":{},"b":{"3":{}}}],["stopmaxfunev",{"_index":832,"t":{},"b":{"3":{},"20":{}}}],["stopmaxit",{"_index":774,"t":{},"b":{"3":{}}}],["stoprelftol",{"_index":1939,"t":{},"b":{"3":{}}}],["stoprelxtol",{"_index":1937,"t":{},"b":{"3":{}}}],["stoptim",{"_index":1942,"t":{},"b":{"3":{}}}],["stoptolfun",{"_index":772,"t":{},"b":{"3":{}}}],["stoptolfunhist",{"_index":822,"t":{},"b":{"3":{}}}],["stoptolx",{"_index":825,"t":{},"b":{"3":{},"20":{}}}],["stoptolxfactor",{"_index":829,"t":{},"b":{"3":{}}}],["storag",{"_index":1299,"t":{},"b":{"3":{},"4":{},"11":{},"12":{},"15":{},"26":{}}}],["storagetot",{"_index":13711,"t":{},"b":{"54":{}}}],["storageus",{"_index":13712,"t":{},"b":{"54":{}}}],["store",{"_index":611,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"39":{},"41":{},"47":{},"51":{},"54":{},"60":{},"62":{},"71":{},"72":{},"75":{},"76":{},"79":{}}}],["stp",{"_index":697,"t":{},"b":{"3":{}}}],["straight",{"_index":7085,"t":{},"b":{"13":{},"69":{}}}],["strain",{"_index":10179,"t":{},"b":{"37":{},"40":{},"64":{}}}],["strang",{"_index":14719,"t":{},"b":{"72":{}}}],["strategi",{"_index":363,"t":{},"b":{"2":{},"3":{},"11":{},"15":{},"60":{}}}],["stream",{"_index":7787,"t":{},"b":{"15":{},"21":{},"45":{},"52":{}}}],["streamlin",{"_index":11503,"t":{},"b":{"45":{},"66":{}}}],["strength",{"_index":8150,"t":{},"b":{"15":{}}}],["stress",{"_index":10176,"t":{},"b":{"37":{},"40":{},"42":{},"61":{},"64":{}}}],["stressk11",{"_index":10402,"t":{},"b":{"37":{}}}],["stressk11(u1",{"_index":10343,"t":{},"b":{"37":{}}}],["stressk12",{"_index":10406,"t":{},"b":{"37":{}}}],["stressk12(u1",{"_index":10344,"t":{},"b":{"37":{}}}],["stressk21",{"_index":10408,"t":{},"b":{"37":{}}}],["stressk21(u1",{"_index":10345,"t":{},"b":{"37":{}}}],["stressk22",{"_index":10410,"t":{},"b":{"37":{}}}],["stressk22(u1",{"_index":10346,"t":{},"b":{"37":{}}}],["strict",{"_index":1945,"t":{},"b":{"3":{}}}],["strictli",{"_index":4270,"t":{},"b":{"11":{}}}],["string",{"_index":851,"t":{},"b":{"3":{},"5":{},"10":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"24":{},"26":{},"27":{},"37":{},"52":{},"53":{},"54":{},"56":{},"58":{},"60":{}}}],["string[str",{"_index":9096,"t":{},"b":{"21":{}}}],["stringif",{"_index":9238,"t":{},"b":{"21":{}}}],["stringification(aa",{"_index":9182,"t":{},"b":{"21":{}}}],["stringification(cas",{"_index":9187,"t":{},"b":{"21":{}}}],["stringification(file1.edp",{"_index":9240,"t":{},"b":{"21":{}}}],["stringification(file1.edp)cout",{"_index":9241,"t":{},"b":{"21":{}}}],["strip",{"_index":2729,"t":{},"b":{"4":{}}}],["striplin",{"_index":14621,"t":{},"b":{"71":{}}}],["strk11",{"_index":10386,"t":{},"b":{"37":{}}}],["strk12",{"_index":10387,"t":{},"b":{"37":{}}}],["strk21",{"_index":10388,"t":{},"b":{"37":{}}}],["strk22",{"_index":10389,"t":{},"b":{"37":{}}}],["strong",{"_index":9862,"t":{},"b":{"33":{},"41":{},"70":{},"72":{}}}],["strongli",{"_index":1124,"t":{},"b":{"3":{},"15":{},"64":{}}}],["stroustrup",{"_index":86,"t":{},"b":{"2":{}}}],["stroustrup2000",{"_index":85,"t":{},"b":{"2":{},"33":{}}}],["strtod",{"_index":13713,"t":{},"b":{"54":{}}}],["strtod(text",{"_index":13715,"t":{},"b":{"54":{}}}],["strtol",{"_index":13716,"t":{},"b":{"54":{}}}],["strtol(text",{"_index":13717,"t":{},"b":{"54":{}}}],["struct",{"_index":2774,"t":{},"b":{"4":{},"18":{},"20":{}}}],["struct/class",{"_index":2778,"t":{},"b":{"4":{}}}],["structhess",{"_index":1121,"t":{},"b":{"3":{}}}],["structjac",{"_index":1122,"t":{},"b":{"3":{}}}],["structjacc",{"_index":1265,"t":{},"b":{"3":{},"20":{}}}],["structur",{"_index":1105,"t":{"42":{}},"b":{"3":{},"4":{},"8":{},"12":{},"13":{},"15":{},"18":{},"34":{},"38":{},"42":{},"49":{},"54":{},"70":{},"80":{}}}],["structured/unstructur",{"_index":6997,"t":{},"b":{"13":{}}}],["student",{"_index":287,"t":{},"b":{"2":{},"12":{},"29":{}}}],["studi",{"_index":6627,"t":{},"b":{"13":{},"65":{},"70":{},"76":{},"81":{}}}],["sub",{"_index":1927,"t":{},"b":{"3":{},"4":{},"8":{},"10":{},"11":{},"13":{},"15":{},"21":{},"48":{},"49":{},"54":{}}}],["subdivid",{"_index":14756,"t":{},"b":{"72":{}}}],["subdivis",{"_index":2541,"t":{},"b":{"4":{},"13":{},"54":{}}}],["subdomain",{"_index":3029,"t":{},"b":{"5":{},"8":{},"9":{},"10":{},"15":{},"26":{},"51":{}}}],["subgroup",{"_index":8176,"t":{},"b":{"15":{}}}],["subject",{"_index":1243,"t":{},"b":{"3":{},"15":{},"40":{},"41":{},"42":{},"64":{}}}],["submatrix",{"_index":8174,"t":{},"b":{"15":{}}}],["submesh",{"_index":3023,"t":{},"b":{"5":{},"9":{}}}],["subopt",{"_index":1924,"t":{},"b":{"3":{}}}],["subpart",{"_index":6621,"t":{},"b":{"13":{}}}],["subregion",{"_index":5410,"t":{},"b":{"13":{},"54":{}}}],["subroutin",{"_index":874,"t":{},"b":{"3":{},"72":{}}}],["subseg",{"_index":6583,"t":{},"b":{"13":{}}}],["subsequ",{"_index":3208,"t":{},"b":{"5":{},"17":{},"45":{},"52":{}}}],["subset",{"_index":3511,"t":{},"b":{"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"39":{},"41":{},"69":{},"73":{},"75":{}}}],["subsidiari",{"_index":1963,"t":{},"b":{"3":{}}}],["subspac",{"_index":3317,"t":{},"b":{"5":{},"7":{},"10":{},"15":{},"40":{},"69":{},"72":{}}}],["substitut",{"_index":3204,"t":{},"b":{"5":{},"10":{}}}],["substr",{"_index":13860,"t":{},"b":{"60":{}}}],["substract",{"_index":13794,"t":{},"b":{"58":{}}}],["substructur",{"_index":8240,"t":{},"b":{"16":{}}}],["subsystem",{"_index":10070,"t":{},"b":{"35":{},"65":{}}}],["succe",{"_index":1202,"t":{},"b":{"3":{}}}],["succeed",{"_index":8413,"t":{},"b":{"18":{}}}],["success",{"_index":783,"t":{},"b":{"3":{},"13":{},"75":{}}}],["such",{"_index":493,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"17":{},"19":{},"26":{},"27":{},"34":{},"36":{},"38":{},"40":{},"41":{},"43":{},"45":{},"48":{},"49":{},"50":{},"51":{},"56":{},"60":{},"65":{},"66":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"80":{}}}],["sudo",{"_index":9961,"t":{},"b":{"35":{}}}],["sufac",{"_index":4590,"t":{},"b":{"11":{}}}],["suffer",{"_index":3618,"t":{},"b":{"8":{}}}],["suffici",{"_index":1651,"t":{},"b":{"3":{},"8":{},"11":{},"65":{},"74":{}}}],["suffix",{"_index":2758,"t":{},"b":{"4":{}}}],["suggest",{"_index":965,"t":{},"b":{"3":{},"45":{}}}],["suit",{"_index":8098,"t":{},"b":{"15":{},"65":{}}}],["suitabl",{"_index":1006,"t":{},"b":{"3":{},"5":{},"13":{}}}],["suitespars",{"_index":9913,"t":{},"b":{"34":{},"35":{}}}],["sum",{"_index":1964,"t":{},"b":{"3":{},"8":{},"11":{},"20":{},"21":{},"26":{},"48":{}}}],["sum^d_{i,j",{"_index":14321,"t":{},"b":{"65":{}}}],["sum_i\\lambda_i",{"_index":15099,"t":{},"b":{"76":{}}}],["sum_j",{"_index":7657,"t":{},"b":{"15":{}}}],["sum_k",{"_index":4106,"t":{},"b":{"11":{},"46":{}}}],["sum_k{c[k]m_{i[k",{"_index":13957,"t":{},"b":{"60":{}}}],["sum_{1\\l",{"_index":3650,"t":{},"b":{"8":{}}}],["sum_{\\el",{"_index":4602,"t":{},"b":{"11":{},"59":{}}}],["sum_{e\\in",{"_index":12250,"t":{},"b":{"48":{}}}],["sum_{i",{"_index":3187,"t":{},"b":{"5":{},"8":{},"10":{},"11":{},"15":{},"41":{},"45":{},"48":{},"76":{}}}],["sum_{i,j",{"_index":14256,"t":{},"b":{"64":{}}}],["sum_{i,j}{a_{ij}b_{ij",{"_index":13801,"t":{},"b":{"58":{}}}],["sum_{j",{"_index":2859,"t":{},"b":{"4":{},"5":{},"8":{},"10":{},"11":{},"76":{}}}],["sum_{j\\in",{"_index":3560,"t":{},"b":{"8":{},"10":{},"15":{}}}],["sum_{k",{"_index":2442,"t":{},"b":{"4":{},"11":{},"41":{},"76":{}}}],["sum_{l",{"_index":10782,"t":{},"b":{"40":{}}}],["sum_{p",{"_index":13633,"t":{},"b":{"54":{}}}],["sum_{t\\in\\mathtt{th}}\\int_{\\parti",{"_index":15199,"t":{},"b":{"77":{}}}],["sum_{|\\alpha|\\l",{"_index":7367,"t":{},"b":{"14":{}}}],["summ",{"_index":9467,"t":{},"b":{"26":{}}}],["summari",{"_index":3144,"t":{},"b":{"5":{},"10":{},"44":{},"62":{},"65":{},"66":{},"69":{},"72":{},"74":{},"77":{},"79":{},"81":{}}}],["sumphi",{"_index":7660,"t":{},"b":{"15":{},"26":{}}}],["sumphi[].max",{"_index":9486,"t":{},"b":{"26":{}}}],["sumphi[].min",{"_index":9485,"t":{},"b":{"26":{}}}],["sup",{"_index":2914,"t":{},"b":{"4":{},"16":{}}}],["sup(\\eta",{"_index":5569,"t":{},"b":{"13":{}}}],["sup\\{|\\mathbf{x",{"_index":5484,"t":{},"b":{"13":{}}}],["sup_{\\mathbf{v}_h\\in",{"_index":11427,"t":{},"b":{"45":{}}}],["sup_{p\\in",{"_index":15238,"t":{},"b":{"78":{}}}],["superlu",{"_index":5088,"t":{},"b":{"12":{},"15":{},"17":{},"34":{},"53":{}}}],["superlu_dist",{"_index":7713,"t":{},"b":{"15":{},"26":{}}}],["supernod",{"_index":7853,"t":{},"b":{"15":{}}}],["superposit",{"_index":11958,"t":{},"b":{"48":{}}}],["supp",{"_index":7643,"t":{},"b":{"15":{},"26":{},"51":{}}}],["supp(p_i",{"_index":9454,"t":{},"b":{"26":{}}}],["supp(p_j",{"_index":9453,"t":{},"b":{"26":{}}}],["supp(phi_j",{"_index":9451,"t":{},"b":{"26":{}}}],["supp(th",{"_index":12502,"t":{},"b":{"51":{}}}],["suppi",{"_index":9438,"t":{},"b":{"26":{}}}],["suppi>0",{"_index":9441,"t":{},"b":{"26":{}}}],["suppii",{"_index":9470,"t":{},"b":{"26":{}}}],["suppii[].max",{"_index":9472,"t":{},"b":{"26":{}}}],["supplementari",{"_index":12500,"t":{},"b":{"51":{}}}],["suppli",{"_index":8286,"t":{},"b":{"16":{}}}],["support",{"_index":1913,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"19":{},"26":{},"32":{},"35":{},"41":{},"54":{},"72":{}}}],["support](char",{"_index":2210,"t":{},"b":{"4":{}}}],["suppos",{"_index":479,"t":{},"b":{"3":{},"13":{},"15":{},"40":{},"69":{}}}],["suppress",{"_index":1118,"t":{},"b":{"3":{}}}],["sur",{"_index":419,"t":{},"b":{"2":{}}}],["sure",{"_index":3806,"t":{},"b":{"11":{},"26":{},"48":{}}}],["surf",{"_index":8250,"t":{},"b":{"16":{},"71":{}}}],["surf.edp",{"_index":3456,"t":{},"b":{"6":{},"13":{}}}],["surf.mesh",{"_index":6555,"t":{},"b":{"13":{}}}],["surfac",{"_index":1517,"t":{},"b":{"3":{},"6":{},"11":{},"12":{},"13":{},"16":{},"20":{},"24":{},"25":{},"33":{},"34":{},"36":{},"40":{},"43":{},"48":{},"51":{},"53":{},"66":{},"72":{}}}],["surfacehex(int[int",{"_index":6408,"t":{},"b":{"13":{}}}],["surfacehex(n",{"_index":6353,"t":{},"b":{"13":{},"48":{}}}],["surfacesplit.mesh",{"_index":6563,"t":{},"b":{"13":{}}}],["surfreal.mesh",{"_index":6557,"t":{},"b":{"13":{}}}],["surpass",{"_index":1902,"t":{},"b":{"3":{}}}],["surround",{"_index":1647,"t":{},"b":{"3":{},"51":{},"79":{}}}],["suspect",{"_index":3657,"t":{},"b":{"8":{}}}],["sussex",{"_index":323,"t":{},"b":{"2":{}}}],["svd",{"_index":8275,"t":{},"b":{"16":{}}}],["svh(sth",{"_index":1710,"t":{},"b":{"3":{},"20":{}}}],["swap",{"_index":7124,"t":{},"b":{"13":{},"53":{},"54":{}}}],["swap(a",{"_index":13718,"t":{},"b":{"54":{}}}],["sweep",{"_index":8141,"t":{},"b":{"15":{}}}],["switch",{"_index":3319,"t":{},"b":{"5":{},"10":{},"13":{},"19":{},"24":{},"48":{},"53":{}}}],["sx",{"_index":5928,"t":{},"b":{"13":{},"24":{},"40":{}}}],["sx/s+1.5",{"_index":5935,"t":{},"b":{"13":{},"24":{}}}],["sxi",{"_index":10854,"t":{},"b":{"40":{}}}],["sy",{"_index":5930,"t":{},"b":{"13":{},"24":{},"40":{}}}],["sy)^2",{"_index":10868,"t":{},"b":{"40":{}}}],["sy/s+1.5",{"_index":5936,"t":{},"b":{"13":{},"24":{}}}],["sylvain",{"_index":9758,"t":{},"b":{"29":{}}}],["sym",{"_index":4521,"t":{},"b":{"11":{},"15":{},"26":{},"39":{},"51":{},"54":{},"60":{},"62":{}}}],["symbol",{"_index":7854,"t":{},"b":{"15":{},"37":{},"42":{},"64":{},"70":{}}}],["symetr",{"_index":11745,"t":{},"b":{"46":{}}}],["symmet",{"_index":8986,"t":{},"b":{"21":{}}}],["symmetr",{"_index":411,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"13":{},"15":{},"26":{},"39":{},"40":{},"45":{},"46":{},"54":{}}}],["symmetri",{"_index":7747,"t":{},"b":{"15":{},"40":{},"41":{},"51":{},"69":{},"79":{}}}],["symmetrizecsr",{"_index":13451,"t":{},"b":{"53":{}}}],["symposium",{"_index":128,"t":{},"b":{"2":{}}}],["synchron",{"_index":3084,"t":{},"b":{"5":{},"10":{},"15":{},"18":{}}}],["syntax",{"_index":1110,"t":{},"b":{"3":{},"8":{},"13":{},"18":{},"32":{},"33":{},"35":{},"60":{},"70":{},"71":{},"76":{},"77":{},"79":{}}}],["system",{"_index":162,"t":{"64":{},"78":{}},"b":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"19":{},"21":{},"32":{},"33":{},"34":{},"35":{},"40":{},"42":{},"45":{},"48":{},"51":{},"54":{},"64":{},"65":{},"66":{},"72":{},"74":{},"76":{},"77":{},"78":{}}}],["system(command",{"_index":13719,"t":{},"b":{"54":{}}}],["system(ff",{"_index":8460,"t":{},"b":{"18":{}}}],["systemat",{"_index":14597,"t":{},"b":{"70":{}}}],["syu",{"_index":10054,"t":{},"b":{"35":{}}}],["syuu",{"_index":10069,"t":{},"b":{"35":{}}}],["sz",{"_index":5932,"t":{},"b":{"13":{},"24":{}}}],["sz/s+1.5",{"_index":5937,"t":{},"b":{"13":{},"24":{}}}],["t",{"_index":19,"t":{},"b":{"2":{},"4":{},"11":{},"13":{},"15":{},"18":{},"21":{},"24":{},"25":{},"26":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"49":{},"51":{},"54":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"76":{},"77":{},"79":{},"80":{}}}],["t(k.t",{"_index":2653,"t":{},"b":{"4":{}}}],["t(n",{"_index":5818,"t":{},"b":{"13":{},"40":{}}}],["t(t",{"_index":5812,"t":{},"b":{"13":{},"40":{}}}],["t(x",{"_index":3825,"t":{},"b":{"11":{}}}],["t)*pb[0]+t*pc[0",{"_index":5838,"t":{},"b":{"13":{}}}],["t)*pb[1]+t*pc[1",{"_index":5839,"t":{},"b":{"13":{}}}],["t)*pc[0]+t*pa[0",{"_index":5841,"t":{},"b":{"13":{}}}],["t)*pc[1]+t*pa[1",{"_index":5842,"t":{},"b":{"13":{}}}],["t)*t^2",{"_index":5716,"t":{},"b":{"13":{},"24":{}}}],["t)+(tip",{"_index":10839,"t":{},"b":{"40":{}}}],["t)+tip*t",{"_index":10842,"t":{},"b":{"40":{}}}],["t)\\boldx_0+t\\boldx_1",{"_index":13818,"t":{},"b":{"59":{}}}],["t)^2*t",{"_index":5714,"t":{},"b":{"13":{},"24":{}}}],["t)^3",{"_index":5712,"t":{},"b":{"13":{},"24":{}}}],["t)q^i_x+tq^j_x",{"_index":4614,"t":{},"b":{"11":{}}}],["t)q^i_y+tq^j_i",{"_index":4615,"t":{},"b":{"11":{}}}],["t*(hr",{"_index":11314,"t":{},"b":{"43":{}}}],["t*l",{"_index":14834,"t":{},"b":{"73":{}}}],["t*x^2*(1",{"_index":11048,"t":{},"b":{"41":{}}}],["t*x^4",{"_index":10939,"t":{},"b":{"41":{}}}],["t*x^4)^2",{"_index":10949,"t":{},"b":{"41":{}}}],["t+1",{"_index":12081,"t":{},"b":{"48":{}}}],["t+dt",{"_index":10946,"t":{},"b":{"41":{}}}],["t,\\,0\\leq",{"_index":11822,"t":{},"b":{"48":{}}}],["t,\\,i",{"_index":11820,"t":{},"b":{"48":{}}}],["t.edgeorientation(i",{"_index":2656,"t":{},"b":{"4":{}}}],["t/\\tau",{"_index":10971,"t":{},"b":{"41":{}}}],["t/dt",{"_index":9391,"t":{},"b":{"25":{},"45":{},"80":{}}}],["t/tau",{"_index":11045,"t":{},"b":{"41":{}}}],["t0",{"_index":14107,"t":{},"b":{"61":{}}}],["t0h",{"_index":12182,"t":{},"b":{"48":{}}}],["t1",{"_index":5254,"t":{},"b":{"13":{},"21":{},"24":{},"48":{}}}],["t1(4:14",{"_index":8863,"t":{},"b":{"21":{}}}],["t1(4:3",{"_index":8860,"t":{},"b":{"21":{}}}],["t1.ffind(abc",{"_index":8869,"t":{},"b":{"21":{}}}],["t1.find(\"abc",{"_index":8865,"t":{},"b":{"21":{}}}],["t1.find(\"abc\",10",{"_index":8868,"t":{},"b":{"21":{}}}],["t1.find(abc",{"_index":8864,"t":{},"b":{"21":{}}}],["t1.length",{"_index":8871,"t":{},"b":{"21":{}}}],["t1.rfind(\"abc",{"_index":8867,"t":{},"b":{"21":{}}}],["t1.rfind(\"abc\",10",{"_index":8870,"t":{},"b":{"21":{}}}],["t1.rfind(abc",{"_index":8866,"t":{},"b":{"21":{}}}],["t1\\cap",{"_index":5412,"t":{},"b":{"13":{}}}],["t2",{"_index":5413,"t":{},"b":{"13":{},"24":{}}}],["t21*s21",{"_index":11739,"t":{},"b":{"46":{}}}],["t55",{"_index":8862,"t":{},"b":{"21":{}}}],["t;label",{"_index":6498,"t":{},"b":{"13":{}}}],["t<0",{"_index":10880,"t":{},"b":{"40":{}}}],["t>0",{"_index":10879,"t":{},"b":{"40":{}}}],["t\\bar",{"_index":14460,"t":{},"b":{"67":{}}}],["t\\cup\\gamma",{"_index":4538,"t":{},"b":{"11":{}}}],["t\\in",{"_index":10965,"t":{},"b":{"41":{}}}],["t\\in]0,t",{"_index":14349,"t":{},"b":{"65":{}}}],["t\\le",{"_index":4617,"t":{},"b":{"11":{},"13":{},"41":{},"76":{}}}],["t\\leq",{"_index":11823,"t":{},"b":{"48":{},"59":{}}}],["t\\mapsto",{"_index":5191,"t":{},"b":{"13":{}}}],["t^0_k",{"_index":4397,"t":{},"b":{"11":{}}}],["t^0_k,{\\cal",{"_index":4372,"t":{},"b":{"11":{}}}],["t^1_k",{"_index":4374,"t":{},"b":{"11":{}}}],["t^2",{"_index":14127,"t":{},"b":{"62":{},"65":{}}}],["t^2)dt",{"_index":13575,"t":{},"b":{"54":{}}}],["t_0\\le",{"_index":5193,"t":{},"b":{"13":{}}}],["t_1",{"_index":5194,"t":{},"b":{"13":{}}}],["t_h",{"_index":2918,"t":{},"b":{"4":{},"15":{},"72":{},"76":{}}}],["t_h(\\omega",{"_index":5435,"t":{},"b":{"13":{}}}],["t_k",{"_index":4095,"t":{},"b":{"11":{},"13":{},"14":{}}}],["t_k\\in",{"_index":4294,"t":{},"b":{"11":{},"13":{}}}],["t_k\\in\\r^3",{"_index":4720,"t":{},"b":{"11":{}}}],["t_k\\}_{k",{"_index":15092,"t":{},"b":{"76":{}}}],["t_k^0",{"_index":4406,"t":{},"b":{"11":{}}}],["t_k^0\\in{\\cal",{"_index":4395,"t":{},"b":{"11":{}}}],["t_k|/12",{"_index":4714,"t":{},"b":{"11":{}}}],["t_k|/3",{"_index":4685,"t":{},"b":{"11":{}}}],["t_k|/4",{"_index":4723,"t":{},"b":{"11":{}}}],["t_k|/6",{"_index":4715,"t":{},"b":{"11":{}}}],["t_{16",{"_index":6798,"t":{},"b":{"13":{}}}],["t_{h}(\\omega",{"_index":6146,"t":{},"b":{"13":{}}}],["t_{h}^i",{"_index":4389,"t":{},"b":{"11":{}}}],["t_{i_k",{"_index":3770,"t":{},"b":{"11":{}}}],["ta1",{"_index":3786,"t":{},"b":{"11":{}}}],["ta_i",{"_index":3804,"t":{},"b":{"11":{}}}],["tab",{"_index":8884,"t":{},"b":{"21":{}}}],["tab(10",{"_index":8881,"t":{},"b":{"21":{}}}],["tab(10:11",{"_index":8892,"t":{},"b":{"21":{}}}],["tab.max",{"_index":8889,"t":{},"b":{"21":{}}}],["tab.min",{"_index":8888,"t":{},"b":{"21":{}}}],["tab.resize(12",{"_index":8891,"t":{},"b":{"21":{}}}],["tab.sort",{"_index":8894,"t":{},"b":{"21":{}}}],["tab.sum",{"_index":8890,"t":{},"b":{"21":{}}}],["tab1(10",{"_index":8882,"t":{},"b":{"21":{}}}],["tab2",{"_index":8883,"t":{},"b":{"21":{}}}],["tab:12",{"_index":8970,"t":{},"b":{"21":{}}}],["tab[1",{"_index":8886,"t":{},"b":{"21":{}}}],["tabata",{"_index":273,"t":{},"b":{"2":{}}}],["tabata1994",{"_index":272,"t":{},"b":{"2":{},"41":{}}}],["tabcpu",{"_index":9369,"t":{},"b":{"25":{}}}],["tabl",{"_index":1212,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"19":{},"71":{}}}],["tag",{"_index":868,"t":{},"b":{"3":{},"15":{}}}],["tak",{"_index":3788,"t":{},"b":{"11":{}}}],["take",{"_index":1180,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"13":{},"15":{},"21":{},"26":{},"38":{},"39":{},"41":{},"45":{},"48":{},"51":{},"66":{},"72":{},"77":{},"79":{}}}],["taken",{"_index":1012,"t":{},"b":{"3":{},"4":{},"37":{},"60":{},"65":{}}}],["talk",{"_index":7936,"t":{},"b":{"15":{}}}],["tan",{"_index":11970,"t":{},"b":{"48":{},"54":{}}}],["tan(theta",{"_index":13722,"t":{},"b":{"54":{}}}],["tangent",{"_index":4175,"t":{},"b":{"11":{},"13":{},"37":{},"45":{}}}],["tangenti",{"_index":10420,"t":{},"b":{"37":{}}}],["tangent’",{"_index":4594,"t":{},"b":{"11":{}}}],["tanh",{"_index":13723,"t":{},"b":{"54":{}}}],["tanh(theta",{"_index":13724,"t":{},"b":{"54":{}}}],["tank",{"_index":10239,"t":{},"b":{"37":{}}}],["tank11",{"_index":10241,"t":{},"b":{"37":{}}}],["tank11(u1",{"_index":10347,"t":{},"b":{"37":{}}}],["tank12",{"_index":10242,"t":{},"b":{"37":{}}}],["tank12(u1",{"_index":10349,"t":{},"b":{"37":{}}}],["tank21",{"_index":10414,"t":{},"b":{"37":{}}}],["tank21(u1",{"_index":10351,"t":{},"b":{"37":{}}}],["tank22",{"_index":10416,"t":{},"b":{"37":{}}}],["tank22(u1",{"_index":10353,"t":{},"b":{"37":{}}}],["tanslat",{"_index":8520,"t":{},"b":{"19":{}}}],["tao",{"_index":8267,"t":{},"b":{"16":{}}}],["tar",{"_index":10006,"t":{},"b":{"35":{}}}],["tarea",{"_index":5304,"t":{},"b":{"13":{}}}],["target",{"_index":3346,"t":{},"b":{"5":{},"35":{},"54":{}}}],["task",{"_index":1623,"t":{},"b":{"3":{},"7":{},"8":{},"35":{}}}],["tau",{"_index":3260,"t":{},"b":{"5":{},"8":{},"40":{},"41":{},"77":{}}}],["tau*(theta*f1",{"_index":11043,"t":{},"b":{"41":{}}}],["tau>0",{"_index":10970,"t":{},"b":{"41":{}}}],["tau\\left\\{\\theta",{"_index":11001,"t":{},"b":{"41":{}}}],["taught",{"_index":14602,"t":{},"b":{"70":{}}}],["tau|\\delta\\mathbf{x}|\\right",{"_index":10636,"t":{},"b":{"40":{}}}],["taxe(t",{"_index":6049,"t":{},"b":{"13":{}}}],["taylor",{"_index":450,"t":{},"b":{"2":{},"45":{}}}],["taylor2005",{"_index":449,"t":{},"b":{"2":{},"11":{}}}],["taylor’",{"_index":11121,"t":{},"b":{"41":{}}}],["tb1",{"_index":3787,"t":{},"b":{"11":{}}}],["tb_i",{"_index":3805,"t":{},"b":{"11":{}}}],["tbl",{"_index":3789,"t":{},"b":{"11":{}}}],["tcorrespond",{"_index":5329,"t":{},"b":{"13":{}}}],["tdu0dn",{"_index":5065,"t":{},"b":{"11":{}}}],["tdu0dn(vh1.ndof",{"_index":5064,"t":{},"b":{"11":{}}}],["tdu1dn",{"_index":5058,"t":{},"b":{"11":{}}}],["tdu1dn(vh0.ndof",{"_index":5057,"t":{},"b":{"11":{}}}],["te",{"_index":7987,"t":{},"b":{"15":{}}}],["teach",{"_index":5084,"t":{},"b":{"12":{}}}],["team",{"_index":15350,"t":{},"b":{"80":{}}}],["technic",{"_index":1008,"t":{},"b":{"3":{},"13":{},"15":{},"74":{}}}],["techniqu",{"_index":383,"t":{},"b":{"2":{},"5":{},"10":{},"15":{},"19":{},"38":{},"40":{},"45":{}}}],["tediou",{"_index":1612,"t":{},"b":{"3":{}}}],["tell",{"_index":1142,"t":{},"b":{"3":{},"11":{},"15":{}}}],["tellg",{"_index":12582,"t":{},"b":{"52":{}}}],["temam",{"_index":296,"t":{},"b":{"2":{}}}],["temam1977",{"_index":295,"t":{},"b":{"2":{},"45":{}}}],["temperatur",{"_index":13985,"t":{},"b":{"61":{},"63":{},"66":{},"68":{},"69":{},"79":{}}}],["temperature(t",{"_index":14065,"t":{},"b":{"61":{}}}],["temperature(u",{"_index":14232,"t":{},"b":{"63":{}}}],["templat",{"_index":9865,"t":{},"b":{"33":{},"60":{},"70":{}}}],["template<class",{"_index":2783,"t":{},"b":{"4":{},"15":{}}}],["tempmuonde.p",{"_index":14236,"t":{},"b":{"63":{}}}],["temporari",{"_index":15348,"t":{},"b":{"80":{}}}],["ten",{"_index":15254,"t":{},"b":{"79":{}}}],["tension",{"_index":11827,"t":{},"b":{"48":{},"49":{}}}],["tensor",{"_index":2360,"t":{},"b":{"4":{},"13":{},"37":{},"40":{},"42":{},"46":{},"58":{},"64":{}}}],["term",{"_index":1615,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"15":{},"19":{},"21":{},"27":{},"37":{},"39":{},"41":{},"42":{},"45":{},"48":{},"51":{},"58":{},"60":{},"66":{},"70":{},"71":{},"73":{},"76":{},"78":{},"79":{},"80":{}}}],["termin",{"_index":1950,"t":{},"b":{"3":{},"11":{},"13":{},"35":{},"70":{}}}],["terribl",{"_index":4566,"t":{},"b":{"11":{},"60":{}}}],["test",{"_index":553,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"12":{},"13":{},"15":{},"18":{},"20":{},"24":{},"25":{},"37":{},"41":{},"45":{},"48":{},"50":{},"51":{},"54":{},"60":{},"72":{},"76":{},"78":{}}}],["test.edp",{"_index":3334,"t":{},"b":{"5":{},"7":{},"10":{}}}],["test.th",{"_index":6719,"t":{},"b":{"13":{}}}],["testio",{"_index":2828,"t":{},"b":{"4":{}}}],["testsavemedit.solb",{"_index":6993,"t":{},"b":{"13":{}}}],["tet",{"_index":5945,"t":{},"b":{"13":{}}}],["tetahedra",{"_index":6363,"t":{},"b":{"13":{}}}],["tetg",{"_index":6220,"t":{},"b":{"13":{},"53":{}}}],["tetg(th",{"_index":6343,"t":{},"b":{"13":{}}}],["tetg(th0",{"_index":13452,"t":{},"b":{"53":{}}}],["tetg(th33",{"_index":6275,"t":{},"b":{"13":{}}}],["tetg(th3surf",{"_index":6722,"t":{},"b":{"13":{}}}],["tetg(thh",{"_index":6358,"t":{},"b":{"13":{},"48":{}}}],["tetg(ths,switch",{"_index":6743,"t":{},"b":{"13":{}}}],["tetgconvexhul",{"_index":6724,"t":{},"b":{"13":{},"53":{}}}],["tetgen",{"_index":111,"t":{},"b":{"2":{},"13":{},"24":{},"25":{},"34":{},"48":{},"53":{}}}],["tetgen.mor",{"_index":6715,"t":{},"b":{"13":{}}}],["tetgenio",{"_index":6673,"t":{},"b":{"13":{}}}],["tetgreconstruct",{"_index":6712,"t":{},"b":{"13":{},"53":{}}}],["tetgreconstruction(th3",{"_index":7176,"t":{},"b":{"13":{}}}],["tetgreconstruction(th3sph,switch",{"_index":6751,"t":{},"b":{"13":{}}}],["tetgrefin",{"_index":6738,"t":{},"b":{"13":{}}}],["tetgtransfo",{"_index":6720,"t":{},"b":{"13":{},"53":{}}}],["tetgtransfo(th",{"_index":6127,"t":{},"b":{"13":{},"24":{},"25":{}}}],["tetgtransfo(th2",{"_index":6721,"t":{},"b":{"13":{}}}],["tetrahedr",{"_index":114,"t":{},"b":{"2":{},"11":{},"13":{}}}],["tetrahedra",{"_index":5999,"t":{},"b":{"13":{},"54":{},"55":{}}}],["tetrahedra.0",{"_index":6153,"t":{},"b":{"13":{}}}],["tetrahedra.thes",{"_index":6708,"t":{},"b":{"13":{}}}],["tetrahedra.thi",{"_index":6734,"t":{},"b":{"13":{}}}],["tetrahedra](int",{"_index":2385,"t":{},"b":{"4":{}}}],["tetrahedron",{"_index":2400,"t":{},"b":{"4":{},"11":{},"13":{}}}],["tetrahel",{"_index":6271,"t":{},"b":{"13":{}}}],["texliv",{"_index":10057,"t":{},"b":{"35":{}}}],["text",{"_index":3590,"t":{},"b":{"8":{},"11":{},"13":{},"19":{},"52":{},"54":{},"70":{}}}],["textmat",{"_index":9843,"t":{},"b":{"32":{},"35":{}}}],["textmate2",{"_index":10156,"t":{},"b":{"35":{}}}],["textrm",{"_index":4099,"t":{},"b":{"11":{},"41":{},"48":{},"49":{}}}],["textrm{area",{"_index":4129,"t":{},"b":{"11":{}}}],["textrm{curl}\\mathbf{w",{"_index":3945,"t":{},"b":{"11":{}}}],["textrm{diam}(",{"_index":5483,"t":{},"b":{"13":{}}}],["textrm{div",{"_index":3922,"t":{},"b":{"11":{}}}],["textrm{div}\\mathbf{u}_h^{\\epsilon",{"_index":11476,"t":{},"b":{"45":{}}}],["textrm{div}\\mathbf{w",{"_index":11375,"t":{},"b":{"45":{}}}],["textrm{for",{"_index":3813,"t":{},"b":{"11":{},"13":{},"45":{}}}],["textrm{if",{"_index":4293,"t":{},"b":{"11":{}}}],["textrm{in",{"_index":11972,"t":{},"b":{"48":{}}}],["textrm{norm",{"_index":7353,"t":{},"b":{"14":{}}}],["textrm{on",{"_index":7373,"t":{},"b":{"14":{},"48":{}}}],["textrm{scalar",{"_index":7343,"t":{},"b":{"14":{}}}],["textrm{summ",{"_index":4142,"t":{},"b":{"11":{}}}],["textrm{then",{"_index":4676,"t":{},"b":{"11":{}}}],["textstyle{\\int_{\\omega}f_1\\phi_i",{"_index":11464,"t":{},"b":{"45":{}}}],["textstyle{\\int_{\\omega}f_2\\phi_i",{"_index":11465,"t":{},"b":{"45":{}}}],["text{\"ad\"}:&&\\textit{addit",{"_index":3230,"t":{},"b":{"5":{}}}],["text{\"adef1\"}:&&\\textit{adapt",{"_index":3235,"t":{},"b":{"5":{}}}],["text{\"adef2\"}:&&\\textit{adapt",{"_index":3238,"t":{},"b":{"5":{}}}],["text{\"bnn\"}:&&\\textit{balanc",{"_index":3233,"t":{},"b":{"5":{}}}],["text{\"none\"}:&&\\textit{no",{"_index":3242,"t":{},"b":{"5":{}}}],["text{\"rbnn1\"}:&&\\textit{reduc",{"_index":3239,"t":{},"b":{"5":{}}}],["text{\"rbnn2\"}:&&\\textit{reduc",{"_index":3241,"t":{},"b":{"5":{}}}],["text{and",{"_index":931,"t":{},"b":{"3":{}}}],["text{d",{"_index":15082,"t":{},"b":{"76":{},"77":{}}}],["text{det",{"_index":4246,"t":{},"b":{"11":{}}}],["text{det}(a_1",{"_index":4238,"t":{},"b":{"11":{}}}],["text{div}(\\mathbf{f",{"_index":7309,"t":{},"b":{"14":{}}}],["text{d}{x",{"_index":14703,"t":{},"b":{"72":{}}}],["text{d}{x}_1",{"_index":14704,"t":{},"b":{"72":{}}}],["text{d}{x}_2",{"_index":14705,"t":{},"b":{"72":{}}}],["text{ox",{"_index":6398,"t":{},"b":{"13":{}}}],["text{oy",{"_index":6401,"t":{},"b":{"13":{}}}],["text{oz",{"_index":6404,"t":{},"b":{"13":{}}}],["text{ri",{"_index":6399,"t":{},"b":{"13":{}}}],["text{rx",{"_index":6396,"t":{},"b":{"13":{}}}],["text{rz",{"_index":6402,"t":{},"b":{"13":{}}}],["text{with",{"_index":3725,"t":{},"b":{"10":{}}}],["tftp",{"_index":10111,"t":{},"b":{"35":{}}}],["tg",{"_index":13726,"t":{},"b":{"54":{}}}],["tgamma",{"_index":13725,"t":{},"b":{"54":{}}}],["tgamma(x",{"_index":13727,"t":{},"b":{"54":{}}}],["tgv",{"_index":1999,"t":{},"b":{"3":{},"11":{},"20":{},"26":{},"39":{},"48":{},"50":{},"60":{},"68":{},"76":{},"80":{}}}],["tgv*u0",{"_index":4844,"t":{},"b":{"11":{},"68":{}}}],["tgv}\\end{split",{"_index":14536,"t":{},"b":{"68":{}}}],["th",{"_index":1372,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["th(0",{"_index":5353,"t":{},"b":{"13":{}}}],["th(0.01,0.01).region",{"_index":14214,"t":{},"b":{"63":{}}}],["th(0.25",{"_index":5184,"t":{},"b":{"13":{},"24":{}}}],["th(0.5",{"_index":5022,"t":{},"b":{"11":{}}}],["th(0.5,0.5).region",{"_index":15419,"t":{},"b":{"81":{}}}],["th(0.55",{"_index":5298,"t":{},"b":{"13":{}}}],["th(0.75",{"_index":5181,"t":{},"b":{"13":{},"24":{}}}],["th(1",{"_index":5354,"t":{},"b":{"13":{}}}],["th(1.5",{"_index":5025,"t":{},"b":{"11":{}}}],["th(2",{"_index":5001,"t":{},"b":{"11":{},"13":{}}}],["th(3",{"_index":5355,"t":{},"b":{"13":{}}}],["th(30.5,2).region",{"_index":15421,"t":{},"b":{"81":{}}}],["th(4",{"_index":5356,"t":{},"b":{"13":{}}}],["th(5",{"_index":5357,"t":{},"b":{"13":{}}}],["th(6",{"_index":5358,"t":{},"b":{"13":{}}}],["th(7",{"_index":5359,"t":{},"b":{"13":{}}}],["th(7,20.5).region",{"_index":15420,"t":{},"b":{"81":{}}}],["th(8",{"_index":5360,"t":{},"b":{"13":{}}}],["th(a",{"_index":14211,"t":{},"b":{"63":{}}}],["th(i",{"_index":5275,"t":{},"b":{"13":{}}}],["th(i).i",{"_index":5291,"t":{},"b":{"13":{}}}],["th(i).label",{"_index":5292,"t":{},"b":{"13":{}}}],["th(i).x",{"_index":5290,"t":{},"b":{"13":{}}}],["th(mpisiz",{"_index":7470,"t":{},"b":{"15":{}}}],["th(x,y).region",{"_index":15418,"t":{},"b":{"81":{}}}],["th(x1",{"_index":2951,"t":{},"b":{"4":{}}}],["th(xb",{"_index":13751,"t":{},"b":{"55":{}}}],["th(xr",{"_index":13765,"t":{},"b":{"55":{}}}],["th.area",{"_index":7260,"t":{},"b":{"13":{}}}],["th.be(k",{"_index":5321,"t":{},"b":{"13":{}}}],["th.be(k).el",{"_index":5324,"t":{},"b":{"13":{}}}],["th.be(k).label",{"_index":5340,"t":{},"b":{"13":{}}}],["th.be(k).whoinel",{"_index":5327,"t":{},"b":{"13":{}}}],["th.be(k)[0",{"_index":5338,"t":{},"b":{"13":{}}}],["th.be(k)[1",{"_index":5339,"t":{},"b":{"13":{}}}],["th.be(k)[l",{"_index":5322,"t":{},"b":{"13":{}}}],["th.bordermeasur",{"_index":5273,"t":{},"b":{"13":{},"14":{},"24":{}}}],["th.gamma",{"_index":6546,"t":{},"b":{"13":{}}}],["th.hmax",{"_index":7326,"t":{},"b":{"14":{}}}],["th.hmin",{"_index":7324,"t":{},"b":{"14":{}}}],["th.measur",{"_index":5271,"t":{},"b":{"13":{},"14":{},"24":{}}}],["th.nbe",{"_index":2061,"t":{},"b":{"3":{},"13":{},"14":{}}}],["th.nt",{"_index":5269,"t":{},"b":{"13":{},"14":{},"72":{}}}],["th.nv",{"_index":5289,"t":{},"b":{"13":{},"14":{}}}],["th0",{"_index":9297,"t":{},"b":{"24":{},"25":{},"48":{},"54":{}}}],["th1",{"_index":5644,"t":{},"b":{"13":{},"21":{},"24":{},"37":{},"38":{},"40":{},"42":{},"46":{},"64":{}}}],["th1+th2+th11+th22+th5+th6",{"_index":6579,"t":{},"b":{"13":{}}}],["th1+th2+th3+th4",{"_index":6643,"t":{},"b":{"13":{}}}],["th11",{"_index":6571,"t":{},"b":{"13":{}}}],["th2",{"_index":5645,"t":{},"b":{"13":{},"15":{},"21":{},"24":{},"25":{},"38":{}}}],["th22",{"_index":6573,"t":{},"b":{"13":{}}}],["th3",{"_index":2409,"t":{},"b":{"4":{},"13":{},"22":{},"24":{},"25":{}}}],["th3.gamma",{"_index":6548,"t":{},"b":{"13":{}}}],["th3.measur",{"_index":9334,"t":{},"b":{"25":{}}}],["th3.nt",{"_index":7175,"t":{},"b":{"13":{}}}],["th3.nv",{"_index":7058,"t":{},"b":{"13":{}}}],["th31",{"_index":6631,"t":{},"b":{"13":{}}}],["th31+th32",{"_index":6634,"t":{},"b":{"13":{}}}],["th31b",{"_index":6262,"t":{},"b":{"13":{}}}],["th31h",{"_index":6260,"t":{},"b":{"13":{}}}],["th32",{"_index":6632,"t":{},"b":{"13":{}}}],["th32b",{"_index":6265,"t":{},"b":{"13":{}}}],["th32h",{"_index":6263,"t":{},"b":{"13":{}}}],["th33",{"_index":6269,"t":{},"b":{"13":{}}}],["th33b",{"_index":6268,"t":{},"b":{"13":{}}}],["th33h",{"_index":6266,"t":{},"b":{"13":{}}}],["th3ff",{"_index":6924,"t":{},"b":{"13":{}}}],["th3fin",{"_index":6342,"t":{},"b":{"13":{}}}],["th3finhol",{"_index":6346,"t":{},"b":{"13":{}}}],["th3sph",{"_index":6126,"t":{},"b":{"13":{},"24":{}}}],["th3sphrefin",{"_index":6750,"t":{},"b":{"13":{}}}],["th3sphrefine2",{"_index":6762,"t":{},"b":{"13":{}}}],["th3surf",{"_index":6723,"t":{},"b":{"13":{}}}],["th3t",{"_index":6081,"t":{},"b":{"13":{}}}],["th4",{"_index":4939,"t":{},"b":{"11":{},"13":{}}}],["th5",{"_index":6575,"t":{},"b":{"13":{}}}],["th6",{"_index":6577,"t":{},"b":{"13":{}}}],["th[0",{"_index":5054,"t":{},"b":{"11":{},"15":{}}}],["th[1",{"_index":5062,"t":{},"b":{"11":{},"15":{}}}],["th[i",{"_index":5026,"t":{},"b":{"11":{}}}],["th[i][0].i",{"_index":14795,"t":{},"b":{"72":{}}}],["th[i][0].x",{"_index":14794,"t":{},"b":{"72":{}}}],["th[i][j",{"_index":5279,"t":{},"b":{"13":{}}}],["th[i][j].i",{"_index":5281,"t":{},"b":{"13":{},"72":{}}}],["th[i][j].label",{"_index":5282,"t":{},"b":{"13":{}}}],["th[i][j].x",{"_index":5280,"t":{},"b":{"13":{},"72":{}}}],["th[k",{"_index":5277,"t":{},"b":{"13":{},"14":{}}}],["th[k].adj(",{"_index":5328,"t":{},"b":{"13":{},"54":{}}}],["th[k].adj((e",{"_index":5337,"t":{},"b":{"13":{}}}],["th[k].label",{"_index":5333,"t":{},"b":{"13":{}}}],["th[k][i",{"_index":5278,"t":{},"b":{"13":{}}}],["th[tnumber].area",{"_index":5305,"t":{},"b":{"13":{}}}],["th[tnumber].label",{"_index":5309,"t":{},"b":{"13":{}}}],["th[tnumber].region",{"_index":5307,"t":{},"b":{"13":{}}}],["th_circle.mesh",{"_index":14516,"t":{},"b":{"67":{}}}],["th_i",{"_index":3506,"t":{},"b":{"8":{}}}],["th_i)_{i",{"_index":3503,"t":{},"b":{"8":{}}}],["th_{i})_{i",{"_index":3695,"t":{},"b":{"10":{}}}],["thank",{"_index":3474,"t":{},"b":{"7":{},"8":{},"13":{},"15":{},"21":{},"35":{},"75":{}}}],["thc",{"_index":3279,"t":{},"b":{"5":{},"10":{},"26":{}}}],["the_typeoffe_rtortho",{"_index":2662,"t":{},"b":{"4":{}}}],["their",{"_index":4193,"t":{},"b":{"11":{}}}],["themselv",{"_index":14245,"t":{},"b":{"64":{}}}],["theorem",{"_index":3736,"t":{},"b":{"10":{},"41":{},"45":{},"72":{}}}],["theoret",{"_index":262,"t":{},"b":{"2":{},"13":{}}}],["theori",{"_index":253,"t":{},"b":{"2":{},"7":{},"8":{},"37":{},"41":{},"72":{}}}],["therefor",{"_index":787,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"15":{},"26":{},"33":{},"71":{}}}],["thermal",{"_index":4773,"t":{"66":{},"79":{}},"b":{"11":{},"62":{},"66":{},"69":{},"77":{},"79":{}}}],["thermalconduct",{"_index":14526,"t":{},"b":{"68":{}}}],["thermaxi(u",{"_index":15290,"t":{},"b":{"79":{}}}],["thermic",{"_index":14415,"t":{},"b":{"66":{},"79":{}}}],["thermic(u",{"_index":15263,"t":{},"b":{"79":{}}}],["thermic(v",{"_index":14433,"t":{},"b":{"66":{}}}],["thermic.dat",{"_index":15265,"t":{},"b":{"79":{}}}],["thermostat",{"_index":15255,"t":{},"b":{"79":{}}}],["thermradia",{"_index":15326,"t":{},"b":{"79":{}}}],["thermradia(v",{"_index":15314,"t":{},"b":{"79":{}}}],["these",{"_index":5995,"t":{},"b":{"13":{}}}],["theta",{"_index":1616,"t":{},"b":{"3":{},"20":{},"41":{},"48":{},"54":{},"66":{},"72":{},"79":{}}}],["theta)*f0)*v",{"_index":11044,"t":{},"b":{"41":{}}}],["theta)*sin(i",{"_index":8735,"t":{},"b":{"20":{}}}],["theta)*tau*(dx(oldu)*dx(v",{"_index":11041,"t":{},"b":{"41":{}}}],["theta)\\tau",{"_index":10999,"t":{},"b":{"41":{}}}],["theta)f^n\\nonumb",{"_index":10990,"t":{},"b":{"41":{}}}],["theta)f^n\\right",{"_index":11002,"t":{},"b":{"41":{}}}],["theta)u_h^n",{"_index":10987,"t":{},"b":{"41":{}}}],["theta){x",{"_index":14745,"t":{},"b":{"72":{}}}],["theta*0.151952/0.0872665",{"_index":14382,"t":{},"b":{"66":{}}}],["theta*tau*(dx(u)*dx(v",{"_index":11039,"t":{},"b":{"41":{}}}],["theta,\\phi",{"_index":1535,"t":{},"b":{"3":{}}}],["theta,phi",{"_index":1701,"t":{},"b":{"3":{},"20":{}}}],["theta<0.4",{"_index":11058,"t":{},"b":{"41":{}}}],["theta\\in",{"_index":10973,"t":{},"b":{"41":{}}}],["theta\\leq",{"_index":11026,"t":{},"b":{"41":{}}}],["theta^m",{"_index":14015,"t":{},"b":{"61":{}}}],["theta_0)\\vec",{"_index":13998,"t":{},"b":{"61":{}}}],["theta_\\gamma",{"_index":14181,"t":{},"b":{"63":{}}}],["theta_{i",{"_index":5972,"t":{},"b":{"13":{}}}],["theta_{i,0",{"_index":5974,"t":{},"b":{"13":{}}}],["theta_{i,j",{"_index":5975,"t":{},"b":{"13":{}}}],["theta_{i,j})_{j",{"_index":5976,"t":{},"b":{"13":{}}}],["theta_{i}(z_{i,j",{"_index":5966,"t":{},"b":{"13":{}}}],["thetamax",{"_index":5593,"t":{},"b":{"13":{},"54":{}}}],["thff",{"_index":6857,"t":{},"b":{"13":{}}}],["thfinal",{"_index":6274,"t":{},"b":{"13":{}}}],["thg",{"_index":4431,"t":{},"b":{"11":{},"26":{}}}],["thglobal",{"_index":2989,"t":{},"b":{"5":{},"10":{}}}],["thh",{"_index":6352,"t":{},"b":{"13":{},"48":{}}}],["thi",{"_index":6424,"t":{},"b":{"13":{},"15":{},"26":{}}}],["thick",{"_index":4408,"t":{},"b":{"11":{},"13":{},"40":{}}}],["thii",{"_index":7637,"t":{},"b":{"15":{},"26":{}}}],["thij",{"_index":7571,"t":{},"b":{"15":{},"26":{}}}],["thij[j",{"_index":7673,"t":{},"b":{"15":{}}}],["thin",{"_index":9422,"t":{},"b":{"26":{},"40":{}}}],["thing",{"_index":1842,"t":{},"b":{"3":{},"11":{},"13":{}}}],["thinit",{"_index":7068,"t":{},"b":{"13":{}}}],["think",{"_index":15203,"t":{},"b":{"77":{}}}],["third",{"_index":3137,"t":{},"b":{"5":{},"13":{},"15":{},"21":{},"35":{},"60":{},"78":{}}}],["thirdlevelgeneo.edp",{"_index":3444,"t":{},"b":{"6":{}}}],["thl",{"_index":6648,"t":{},"b":{"13":{},"36":{}}}],["thl1",{"_index":6620,"t":{},"b":{"13":{}}}],["thl2",{"_index":6619,"t":{},"b":{"13":{}}}],["thm",{"_index":6196,"t":{},"b":{"13":{},"40":{}}}],["thmv2",{"_index":6283,"t":{},"b":{"13":{}}}],["thnew",{"_index":5543,"t":{},"b":{"13":{},"54":{}}}],["thold",{"_index":5542,"t":{},"b":{"13":{}}}],["thoma",{"_index":202,"t":{},"b":{"2":{},"4":{},"11":{},"12":{},"33":{},"48":{},"72":{}}}],["thomasset",{"_index":437,"t":{},"b":{"2":{}}}],["thomasset2012",{"_index":436,"t":{},"b":{"2":{},"11":{}}}],["thorough",{"_index":9858,"t":{},"b":{"33":{}}}],["those",{"_index":902,"t":{},"b":{"3":{},"5":{},"15":{},"18":{},"35":{},"60":{}}}],["though",{"_index":1247,"t":{},"b":{"3":{}}}],["thought",{"_index":1242,"t":{},"b":{"3":{}}}],["thread",{"_index":8374,"t":{},"b":{"18":{},"35":{}}}],["three",{"_index":116,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"24":{},"27":{},"29":{},"38":{},"40":{},"49":{},"51":{},"54":{},"68":{},"71":{}}}],["three.ep",{"_index":8548,"t":{},"b":{"19":{}}}],["threeg.ep",{"_index":8551,"t":{},"b":{"19":{}}}],["threepoint.ep",{"_index":5912,"t":{},"b":{"13":{}}}],["threshold",{"_index":3271,"t":{},"b":{"5":{},"8":{},"9":{},"10":{},"15":{}}}],["through",{"_index":1188,"t":{},"b":{"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"33":{},"39":{},"71":{},"76":{},"79":{}}}],["ths3",{"_index":6558,"t":{},"b":{"13":{}}}],["ths3.gamma",{"_index":6561,"t":{},"b":{"13":{}}}],["thsd",{"_index":7149,"t":{},"b":{"13":{}}}],["thsg",{"_index":7146,"t":{},"b":{"13":{}}}],["thsq1",{"_index":6244,"t":{},"b":{"13":{}}}],["thsq2",{"_index":6249,"t":{},"b":{"13":{}}}],["thsq3",{"_index":6254,"t":{},"b":{"13":{}}}],["thss",{"_index":6560,"t":{},"b":{"13":{}}}],["thssph",{"_index":6332,"t":{},"b":{"13":{}}}],["thssph2",{"_index":6340,"t":{},"b":{"13":{}}}],["tht",{"_index":3351,"t":{},"b":{"5":{}}}],["thu",{"_index":916,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"15":{},"41":{},"48":{},"51":{},"60":{},"64":{},"65":{},"72":{}}}],["thwithhol",{"_index":5221,"t":{},"b":{"13":{},"24":{}}}],["thwithhole.ep",{"_index":5226,"t":{},"b":{"13":{}}}],["thwithouthol",{"_index":5219,"t":{},"b":{"13":{},"24":{}}}],["thwithouthole.ep",{"_index":5224,"t":{},"b":{"13":{}}}],["thx",{"_index":5286,"t":{},"b":{"13":{}}}],["thx0",{"_index":6441,"t":{},"b":{"13":{}}}],["thx0+thx1+thy0+thy1+thz0+thz1",{"_index":6457,"t":{},"b":{"13":{}}}],["thx1",{"_index":6445,"t":{},"b":{"13":{}}}],["thx[][i",{"_index":5294,"t":{},"b":{"13":{}}}],["thxi",{"_index":5389,"t":{},"b":{"13":{}}}],["thy0",{"_index":6447,"t":{},"b":{"13":{}}}],["thy1",{"_index":6450,"t":{},"b":{"13":{}}}],["thy[][i",{"_index":5295,"t":{},"b":{"13":{}}}],["thz",{"_index":6427,"t":{},"b":{"13":{}}}],["thz0",{"_index":6452,"t":{},"b":{"13":{}}}],["thz1",{"_index":6455,"t":{},"b":{"13":{}}}],["thèse",{"_index":427,"t":{},"b":{"2":{}}}],["tick",{"_index":7435,"t":{},"b":{"15":{},"35":{}}}],["tild",{"_index":4178,"t":{},"b":{"11":{},"67":{}}}],["tilde{\\mathbf{u",{"_index":14909,"t":{},"b":{"74":{}}}],["tilde{f",{"_index":12352,"t":{},"b":{"50":{}}}],["tilde{k",{"_index":2890,"t":{},"b":{"4":{}}}],["tilde{k})^2+(\\tilde{l})^2",{"_index":2887,"t":{},"b":{"4":{}}}],["tilde{l",{"_index":2893,"t":{},"b":{"4":{}}}],["tilde{w}_h\\subset",{"_index":11475,"t":{},"b":{"45":{}}}],["tilde{w}_{h",{"_index":11470,"t":{},"b":{"45":{}}}],["till",{"_index":4414,"t":{},"b":{"11":{}}}],["time",{"_index":1943,"t":{"68":{}},"b":{"3":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"24":{},"25":{},"33":{},"35":{},"38":{},"41":{},"42":{},"45":{},"46":{},"48":{},"51":{},"54":{},"60":{},"61":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"74":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["times[0,\\pi",{"_index":1530,"t":{},"b":{"3":{}}}],["tinsley",{"_index":332,"t":{},"b":{"2":{}}}],["tip",{"_index":585,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"21":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"50":{},"56":{},"58":{},"60":{},"64":{},"65":{},"69":{},"76":{}}}],["titl",{"_index":9803,"t":{},"b":{"30":{},"35":{}}}],["tje",{"_index":2318,"t":{},"b":{"4":{}}}],["tl.i",{"_index":4592,"t":{},"b":{"11":{}}}],["tl.x",{"_index":4591,"t":{},"b":{"11":{}}}],["tl.z",{"_index":4593,"t":{},"b":{"11":{}}}],["tlabel",{"_index":5308,"t":{},"b":{"13":{}}}],["tmax",{"_index":15209,"t":{},"b":{"77":{}}}],["tmp",{"_index":5479,"t":{},"b":{"13":{}}}],["tmp(u[].n",{"_index":5478,"t":{},"b":{"13":{}}}],["tmp;//set",{"_index":5481,"t":{},"b":{"13":{}}}],["tnumber",{"_index":5297,"t":{},"b":{"13":{}}}],["tnumbers(0.55",{"_index":5314,"t":{},"b":{"13":{}}}],["tnumbers[][i",{"_index":5312,"t":{},"b":{"13":{}}}],["tocher",{"_index":423,"t":{},"b":{"2":{}}}],["today",{"_index":3809,"t":{},"b":{"11":{},"49":{}}}],["todo",{"_index":3139,"t":{},"b":{"5":{},"13":{},"15":{},"26":{},"45":{},"53":{},"54":{},"72":{}}}],["togeth",{"_index":3504,"t":{},"b":{"8":{},"15":{},"24":{}}}],["token",{"_index":14615,"t":{},"b":{"70":{}}}],["tol",{"_index":1291,"t":{},"b":{"3":{},"20":{},"37":{},"39":{},"51":{},"54":{},"61":{},"62":{}}}],["told",{"_index":5293,"t":{},"b":{"13":{},"61":{}}}],["toler",{"_index":534,"t":{},"b":{"3":{},"5":{},"9":{},"10":{},"11":{},"13":{},"15":{},"37":{},"60":{}}}],["toliconst/toleconst",{"_index":1935,"t":{},"b":{"3":{}}}],["tolpivot",{"_index":4518,"t":{},"b":{"11":{},"21":{},"60":{}}}],["tolpivotsym",{"_index":4520,"t":{},"b":{"11":{},"60":{}}}],["tool",{"_index":96,"t":{},"b":{"2":{},"4":{},"7":{},"12":{},"13":{},"15":{},"17":{},"19":{},"25":{},"33":{},"35":{},"36":{},"39":{},"46":{},"79":{}}}],["toolchain",{"_index":10081,"t":{},"b":{"35":{}}}],["top",{"_index":3064,"t":{},"b":{"5":{},"10":{},"13":{},"45":{},"51":{},"61":{}}}],["top1(m/2",{"_index":5909,"t":{},"b":{"13":{},"24":{}}}],["top1(t",{"_index":5899,"t":{},"b":{"13":{},"24":{}}}],["top2(m/2",{"_index":5911,"t":{},"b":{"13":{},"24":{}}}],["top2(t",{"_index":5901,"t":{},"b":{"13":{},"24":{}}}],["topa(t",{"_index":14632,"t":{},"b":{"71":{}}}],["topic",{"_index":474,"t":{},"b":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["topk(t",{"_index":14638,"t":{},"b":{"71":{}}}],["topolar(complex",{"_index":8819,"t":{},"b":{"21":{}}}],["topolar(z2",{"_index":8834,"t":{},"b":{"21":{}}}],["topolar(z2^3",{"_index":8836,"t":{},"b":{"21":{}}}],["topolog",{"_index":6522,"t":{},"b":{"13":{}}}],["tore",{"_index":6509,"t":{},"b":{"13":{}}}],["torex",{"_index":6373,"t":{},"b":{"13":{}}}],["torex,torey,torez",{"_index":6592,"t":{},"b":{"13":{}}}],["torey",{"_index":6375,"t":{},"b":{"13":{}}}],["torez",{"_index":6377,"t":{},"b":{"13":{}}}],["toru",{"_index":3455,"t":{},"b":{"6":{},"16":{}}}],["total",{"_index":3101,"t":{},"b":{"5":{},"15":{},"26":{},"37":{},"41":{},"51":{},"54":{},"61":{},"76":{}}}],["toto(i",{"_index":9142,"t":{},"b":{"21":{}}}],["toto({r",{"_index":9143,"t":{},"b":{"21":{}}}],["toto.am_fmt",{"_index":6838,"t":{},"b":{"13":{}}}],["toto.msh",{"_index":6843,"t":{},"b":{"13":{}}}],["toto.nopo",{"_index":6844,"t":{},"b":{"13":{}}}],["toto.th",{"_index":6840,"t":{},"b":{"13":{}}}],["toto.txt",{"_index":9117,"t":{},"b":{"21":{}}}],["toto1",{"_index":8858,"t":{},"b":{"21":{}}}],["toto11",{"_index":8872,"t":{},"b":{"21":{}}}],["touch",{"_index":3578,"t":{},"b":{"8":{},"11":{},"13":{},"36":{}}}],["touchside.esp",{"_index":5678,"t":{},"b":{"13":{}}}],["tournier",{"_index":3432,"t":{},"b":{"5":{},"10":{},"29":{}}}],["toward",{"_index":1005,"t":{},"b":{"3":{},"65":{}}}],["toy",{"_index":8269,"t":{},"b":{"16":{}}}],["tp",{"_index":14057,"t":{},"b":{"61":{}}}],["tp)*q",{"_index":14068,"t":{},"b":{"61":{}}}],["tr",{"_index":10181,"t":{},"b":{"37":{},"54":{}}}],["tr(e",{"_index":11729,"t":{},"b":{"46":{}}}],["tr*id",{"_index":11731,"t":{},"b":{"46":{}}}],["trace",{"_index":13728,"t":{},"b":{"54":{},"69":{},"72":{}}}],["trace([[1",{"_index":13729,"t":{},"b":{"54":{}}}],["traceabl",{"_index":371,"t":{},"b":{"2":{}}}],["traction",{"_index":10207,"t":{},"b":{"37":{}}}],["tradition",{"_index":15093,"t":{},"b":{"76":{}}}],["trail",{"_index":11954,"t":{},"b":{"48":{}}}],["tran",{"_index":7861,"t":{},"b":{"15":{},"26":{}}}],["tranfert",{"_index":7552,"t":{},"b":{"15":{}}}],["tranfo",{"_index":6206,"t":{},"b":{"13":{}}}],["tranform",{"_index":6212,"t":{},"b":{"13":{}}}],["tranpos",{"_index":13799,"t":{},"b":{"58":{}}}],["transact",{"_index":381,"t":{},"b":{"2":{}}}],["transfer",{"_index":3342,"t":{},"b":{"5":{},"8":{},"26":{}}}],["transfer.edp",{"_index":8290,"t":{},"b":{"16":{}}}],["transfer/upd",{"_index":7545,"t":{},"b":{"15":{}}}],["transfert",{"_index":9508,"t":{},"b":{"26":{}}}],["transfo",{"_index":1714,"t":{},"b":{"3":{},"13":{},"20":{},"24":{},"25":{},"40":{}}}],["transform",{"_index":903,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"20":{},"21":{},"36":{}}}],["transient",{"_index":8239,"t":{"80":{}},"b":{"16":{},"68":{},"80":{},"81":{}}}],["transit",{"_index":3577,"t":{},"b":{"8":{}}}],["translat",{"_index":3718,"t":{},"b":{"10":{},"13":{},"66":{}}}],["transmiss",{"_index":11306,"t":{"49":{}},"b":{"42":{},"43":{},"49":{}}}],["transpar",{"_index":8314,"t":{},"b":{"17":{}}}],["transpos",{"_index":1600,"t":{},"b":{"3":{},"5":{},"11":{},"14":{},"15":{},"16":{},"21":{},"37":{},"54":{},"58":{}}}],["transpose–vector",{"_index":8278,"t":{},"b":{"16":{}}}],["trap",{"_index":5235,"t":{},"b":{"13":{},"51":{}}}],["trapezoid",{"_index":13986,"t":{},"b":{"61":{}}}],["treat",{"_index":1023,"t":{},"b":{"3":{},"13":{},"15":{},"36":{},"40":{},"41":{},"60":{},"79":{}}}],["treatment",{"_index":1318,"t":{},"b":{"3":{}}}],["tregion",{"_index":5306,"t":{},"b":{"13":{}}}],["tresca",{"_index":12627,"t":{},"b":{"53":{}}}],["treshold",{"_index":1671,"t":{},"b":{"3":{},"20":{}}}],["tri",{"_index":781,"t":{},"b":{"3":{},"4":{},"7":{},"11":{},"13":{},"18":{},"19":{},"20":{},"21":{},"48":{},"54":{},"57":{},"77":{}}}],["tri_j",{"_index":6913,"t":{},"b":{"13":{}}}],["triangl",{"_index":460,"t":{},"b":{"2":{},"4":{},"11":{},"13":{},"14":{},"24":{},"33":{},"41":{},"48":{},"54":{},"55":{},"64":{},"71":{},"72":{},"76":{},"77":{}}}],["triangle(",{"_index":5274,"t":{},"b":{"13":{}}}],["triangle](int",{"_index":2243,"t":{},"b":{"4":{}}}],["triangles.0",{"_index":6512,"t":{},"b":{"13":{}}}],["triangles.thi",{"_index":6670,"t":{},"b":{"13":{}}}],["triangles](int",{"_index":2196,"t":{},"b":{"4":{}}}],["trianglesupport_1(int",{"_index":2244,"t":{},"b":{"4":{}}}],["trianglesupport_nvsq(int",{"_index":2252,"t":{},"b":{"4":{}}}],["trianglesupport_nvst(int",{"_index":2247,"t":{},"b":{"4":{}}}],["triangle}(q^{k_1},q^{k_2},q^{k_3",{"_index":4130,"t":{},"b":{"11":{}}}],["triangle’",{"_index":6135,"t":{},"b":{"13":{}}}],["triangul",{"_index":62,"t":{},"b":{"2":{},"11":{},"13":{},"14":{},"41":{},"48":{},"69":{},"72":{},"74":{},"76":{}}}],["triangular",{"_index":4993,"t":{},"b":{"11":{},"12":{},"72":{}}}],["triangulate(\"xyf",{"_index":5390,"t":{},"b":{"13":{}}}],["triangulate(xx",{"_index":5404,"t":{},"b":{"13":{}}}],["triangult",{"_index":14890,"t":{},"b":{"74":{}}}],["trick",{"_index":6076,"t":{},"b":{"13":{},"26":{},"50":{},"66":{},"70":{},"73":{}}}],["trigger",{"_index":827,"t":{},"b":{"3":{}}}],["trigonometr",{"_index":13884,"t":{},"b":{"60":{}}}],["tripleqf",{"_index":13427,"t":{},"b":{"53":{}}}],["triplet",{"_index":1269,"t":{},"b":{"3":{},"8":{}}}],["trivial",{"_index":2163,"t":{},"b":{"3":{},"11":{}}}],["troubl",{"_index":1207,"t":{},"b":{"3":{}}}],["true",{"_index":684,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"58":{},"60":{},"61":{},"62":{},"63":{},"69":{},"70":{},"71":{},"72":{},"74":{},"80":{},"81":{}}}],["true,fil",{"_index":14759,"t":{},"b":{"72":{}}}],["true,wait",{"_index":12339,"t":{},"b":{"49":{}}}],["trunc",{"_index":5617,"t":{},"b":{"13":{},"15":{},"36":{},"53":{},"54":{}}}],["trunc\"+i+\".ep",{"_index":5627,"t":{},"b":{"13":{}}}],["trunc(athij[jp",{"_index":9501,"t":{},"b":{"26":{}}}],["trunc(th",{"_index":5027,"t":{},"b":{"11":{},"13":{}}}],["trunc(th,((x<0.5",{"_index":6143,"t":{},"b":{"13":{}}}],["trunc(th0",{"_index":13730,"t":{},"b":{"54":{}}}],["trunc(th3",{"_index":6559,"t":{},"b":{"13":{}}}],["trunc(thg",{"_index":9440,"t":{},"b":{"26":{}}}],["trunc(thi",{"_index":7671,"t":{},"b":{"15":{},"26":{}}}],["truncat",{"_index":6506,"t":{},"b":{"13":{},"15":{},"37":{}}}],["trust",{"_index":1049,"t":{},"b":{"3":{}}}],["trywait",{"_index":13316,"t":{},"b":{"53":{}}}],["trywait(sem",{"_index":8428,"t":{},"b":{"18":{}}}],["trè",{"_index":13904,"t":{},"b":{"60":{},"76":{}}}],["ts",{"_index":8266,"t":{},"b":{"16":{}}}],["ts1",{"_index":6508,"t":{},"b":{"13":{}}}],["ts2",{"_index":6507,"t":{},"b":{"13":{}}}],["tt",{"_index":8857,"t":{},"b":{"21":{},"60":{}}}],["tt[\"a",{"_index":8897,"t":{},"b":{"21":{}}}],["tt[\\\"a",{"_index":8896,"t":{},"b":{"21":{}}}],["tt^1.2",{"_index":14833,"t":{},"b":{"73":{}}}],["ttime",{"_index":14121,"t":{},"b":{"61":{}}}],["ttriangl",{"_index":5318,"t":{},"b":{"13":{}}}],["ttt(10",{"_index":9402,"t":{},"b":{"26":{}}}],["ttt[i",{"_index":9708,"t":{},"b":{"26":{}}}],["ttt[ittt",{"_index":9405,"t":{},"b":{"26":{}}}],["tucker",{"_index":944,"t":{},"b":{"3":{}}}],["turn",{"_index":7014,"t":{},"b":{"13":{}}}],["tutori",{"_index":3457,"t":{"80":{}},"b":{"6":{},"9":{},"10":{},"11":{},"12":{},"17":{},"19":{},"44":{},"60":{},"68":{},"70":{},"80":{},"81":{}}}],["tutoriallogo",{"_index":3683,"t":{"10":{}},"b":{}}],["twice",{"_index":939,"t":{},"b":{"3":{},"70":{}}}],["twister",{"_index":13890,"t":{},"b":{"60":{}}}],["two",{"_index":710,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"24":{},"27":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"48":{},"50":{},"51":{},"54":{},"56":{},"57":{},"60":{},"64":{},"69":{},"71":{},"72":{},"76":{},"77":{},"78":{},"79":{},"81":{}}}],["tx^2(1",{"_index":11050,"t":{},"b":{"41":{}}}],["tx^4",{"_index":10931,"t":{},"b":{"41":{}}}],["tx^4\\right|^2\\right)^{1/2",{"_index":10951,"t":{},"b":{"41":{}}}],["txt,.eps,.gnu",{"_index":5125,"t":{},"b":{"12":{}}}],["type",{"_index":519,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"27":{},"32":{},"33":{},"35":{},"36":{},"39":{},"46":{},"54":{},"55":{},"56":{},"60":{},"65":{},"70":{},"72":{},"76":{},"79":{}}}],["type_k",{"_index":2278,"t":{},"b":{"4":{}}}],["typedef",{"_index":2789,"t":{},"b":{"4":{},"18":{}}}],["typefemrtortho(\"rt0ortho",{"_index":2670,"t":{},"b":{"4":{}}}],["typeoff",{"_index":2535,"t":{},"b":{"4":{}}}],["typeoffe_rt::pi_h_alpha(const",{"_index":2652,"t":{},"b":{"4":{}}}],["typeoffe_rtortho",{"_index":2536,"t":{},"b":{"4":{}}}],["typeoffe_rtortho::data",{"_index":2571,"t":{},"b":{"4":{}}}],["typeoffe_rtortho::fb(const",{"_index":2602,"t":{},"b":{"4":{}}}],["typeslogo",{"_index":13854,"t":{"60":{}},"b":{}}],["typesol_k",{"_index":2395,"t":{},"b":{"4":{}}}],["typic",{"_index":6531,"t":{},"b":{"13":{},"51":{},"66":{},"70":{},"76":{}}}],["tzcode",{"_index":10085,"t":{},"b":{"35":{}}}],["t}((m+1)\\tau",{"_index":11129,"t":{},"b":{"41":{}}}],["t}(0",{"_index":11094,"t":{},"b":{"41":{}}}],["t}(\\epsilon^{m+1",{"_index":14030,"t":{},"b":{"61":{}}}],["t}(\\theta^{m+1",{"_index":14014,"t":{},"b":{"61":{}}}],["t}(k^{m+1",{"_index":14023,"t":{},"b":{"61":{}}}],["t}(u^{m+1",{"_index":14019,"t":{},"b":{"61":{},"67":{}}}],["t}(x,y,m\\tau",{"_index":10903,"t":{},"b":{"41":{}}}],["t}(x,y,t",{"_index":10897,"t":{},"b":{"41":{}}}],["t},0",{"_index":15155,"t":{},"b":{"77":{}}}],["t}[\\mathbf{u}^{m+1",{"_index":14897,"t":{},"b":{"74":{}}}],["t}_n",{"_index":5072,"t":{},"b":{"11":{}}}],["t}_{h}^0",{"_index":4370,"t":{},"b":{"11":{}}}],["t}_{h}^0,{\\cal",{"_index":4421,"t":{},"b":{"11":{}}}],["t}_{h}^1",{"_index":4373,"t":{},"b":{"11":{}}}],["t}_{n",{"_index":10320,"t":{},"b":{"37":{}}}],["t}}_{h}^i",{"_index":4376,"t":{},"b":{"11":{}}}],["u",{"_index":582,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"24":{},"25":{},"26":{},"27":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["u#b",{"_index":3074,"t":{},"b":{"5":{},"10":{}}}],["u#c",{"_index":3075,"t":{},"b":{"5":{},"10":{}}}],["u(0",{"_index":10966,"t":{},"b":{"41":{}}}],["u(0,i",{"_index":12072,"t":{},"b":{"48":{}}}],["u(10",{"_index":735,"t":{},"b":{"3":{},"20":{}}}],["u(20",{"_index":14287,"t":{},"b":{"64":{}}}],["u(2\\pi,i",{"_index":12073,"t":{},"b":{"48":{}}}],["u(3",{"_index":4853,"t":{},"b":{"11":{},"79":{}}}],["u(\\mathbf{x}(t",{"_index":11156,"t":{},"b":{"41":{}}}],["u(\\mathbf{x},0",{"_index":10890,"t":{},"b":{"41":{}}}],["u(n",{"_index":7578,"t":{},"b":{"15":{}}}],["u(n\\tau",{"_index":10972,"t":{},"b":{"41":{}}}],["u(t",{"_index":15283,"t":{},"b":{"79":{}}}],["u(x",{"_index":11155,"t":{},"b":{"41":{}}}],["u(x,0",{"_index":11067,"t":{},"b":{"41":{},"48":{}}}],["u(x,2\\pi",{"_index":12074,"t":{},"b":{"48":{}}}],["u(x,i",{"_index":11825,"t":{},"b":{"48":{},"49":{},"71":{},"76":{}}}],["u(x,m\\tau",{"_index":11136,"t":{},"b":{"41":{}}}],["u(x,t",{"_index":11062,"t":{},"b":{"41":{},"62":{}}}],["u(x,y,0",{"_index":10937,"t":{},"b":{"41":{},"68":{},"79":{}}}],["u(x,y,m\\tau",{"_index":10902,"t":{},"b":{"41":{}}}],["u(x,y,t",{"_index":10900,"t":{},"b":{"41":{}}}],["u(x_\\tau",{"_index":15162,"t":{},"b":{"77":{}}}],["u(x_t",{"_index":15148,"t":{},"b":{"77":{}}}],["u)*(u)*0.25",{"_index":11722,"t":{},"b":{"46":{}}}],["u)*0.5",{"_index":11724,"t":{},"b":{"46":{}}}],["u)/2",{"_index":10460,"t":{},"b":{"38":{}}}],["u)[c]w",{"_index":15179,"t":{},"b":{"77":{}}}],["u*.5",{"_index":8595,"t":{},"b":{"19":{},"27":{}}}],["u*a",{"_index":11792,"t":{},"b":{"47":{}}}],["u*a+u",{"_index":8650,"t":{},"b":{"20":{}}}],["u*b",{"_index":11785,"t":{},"b":{"47":{}}}],["u*uh",{"_index":14497,"t":{},"b":{"67":{}}}],["u*uu+v*vv)/dt",{"_index":15330,"t":{},"b":{"80":{}}}],["u*v",{"_index":4501,"t":{},"b":{"11":{},"13":{},"15":{},"41":{},"62":{}}}],["u*v*(r+1/dt",{"_index":11214,"t":{},"b":{"41":{}}}],["u*v*1.0",{"_index":12246,"t":{},"b":{"48":{}}}],["u*v/dt",{"_index":4827,"t":{},"b":{"11":{},"68":{},"79":{}}}],["u*w/dt",{"_index":14948,"t":{},"b":{"74":{}}}],["u+\\frac{\\overline{\\rho",{"_index":14453,"t":{},"b":{"67":{}}}],["u+\\nabla",{"_index":11512,"t":{},"b":{"45":{},"61":{}}}],["u+c",{"_index":4470,"t":{},"b":{"11":{}}}],["u+u_",{"_index":14155,"t":{},"b":{"62":{}}}],["u,p",{"_index":2908,"t":{},"b":{"4":{},"67":{}}}],["u,u_x",{"_index":3889,"t":{},"b":{"11":{}}}],["u,u_x,u_i",{"_index":3890,"t":{},"b":{"11":{}}}],["u,v",{"_index":10822,"t":{},"b":{"40":{},"64":{},"68":{},"71":{},"76":{}}}],["u.bb",{"_index":8598,"t":{},"b":{"19":{},"27":{}}}],["u.ep",{"_index":15051,"t":{},"b":{"75":{}}}],["u.fac",{"_index":8597,"t":{},"b":{"19":{},"27":{}}}],["u.linfti",{"_index":8620,"t":{},"b":{"20":{}}}],["u.max",{"_index":624,"t":{},"b":{"3":{},"20":{}}}],["u.min",{"_index":623,"t":{},"b":{"3":{},"20":{}}}],["u.n",{"_index":736,"t":{},"b":{"3":{},"13":{},"20":{}}}],["u.point",{"_index":8596,"t":{},"b":{"19":{},"27":{}}}],["u/(1+u",{"_index":8646,"t":{},"b":{"20":{}}}],["u/(1.+u",{"_index":11794,"t":{},"b":{"47":{}}}],["u/\\p",{"_index":10893,"t":{},"b":{"41":{},"48":{}}}],["u/\\parti",{"_index":15118,"t":{},"b":{"76":{}}}],["u0",{"_index":4824,"t":{},"b":{"11":{},"41":{},"48":{},"67":{},"68":{},"71":{},"79":{}}}],["u0)+on(ck,u",{"_index":14654,"t":{},"b":{"71":{}}}],["u0)^2",{"_index":12058,"t":{},"b":{"48":{}}}],["u1",{"_index":1436,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"20":{},"21":{},"25":{},"37":{},"38":{},"39":{},"40":{},"42":{},"45":{},"46":{},"48":{},"66":{},"67":{},"73":{},"77":{}}}],["u1(pp",{"_index":11553,"t":{},"b":{"45":{}}}],["u1(ui.n",{"_index":7531,"t":{},"b":{"15":{}}}],["u1(x,yy,i",{"_index":9357,"t":{},"b":{"25":{}}}],["u1)*vv*alpha",{"_index":11622,"t":{},"b":{"45":{}}}],["u1*u2",{"_index":10538,"t":{},"b":{"39":{},"62":{}}}],["u1*v1",{"_index":10396,"t":{},"b":{"37":{},"48":{}}}],["u1,u2",{"_index":11497,"t":{},"b":{"45":{},"77":{}}}],["u1,u2,u3",{"_index":6177,"t":{},"b":{"13":{}}}],["u1,u2]'*[dx(v1),dy(v1",{"_index":14856,"t":{},"b":{"73":{}}}],["u1,u2]'*[dx(v2),dy(v2",{"_index":14857,"t":{},"b":{"73":{}}}],["u1,u2]'*n<0",{"_index":14432,"t":{},"b":{"66":{}}}],["u1[]'*au1",{"_index":2011,"t":{},"b":{"3":{},"20":{}}}],["u1[].linfti",{"_index":11642,"t":{},"b":{"45":{},"73":{}}}],["u1[].max",{"_index":6192,"t":{},"b":{"13":{},"40":{},"46":{}}}],["u1[].min",{"_index":11778,"t":{},"b":{"46":{}}}],["u1n",{"_index":10403,"t":{},"b":{"37":{}}}],["u1n,u2n",{"_index":10374,"t":{},"b":{"37":{}}}],["u1p",{"_index":14882,"t":{},"b":{"73":{}}}],["u1p,u2p",{"_index":14851,"t":{},"b":{"73":{}}}],["u2",{"_index":1437,"t":{},"b":{"3":{},"4":{},"11":{},"20":{},"21":{},"25":{},"37":{},"38":{},"39":{},"40":{},"42":{},"45":{},"48":{},"62":{},"66":{},"73":{},"77":{}}}],["u2(pp",{"_index":11554,"t":{},"b":{"45":{}}}],["u2)*(finv11(u1",{"_index":10295,"t":{},"b":{"37":{}}}],["u2)*f21(u1",{"_index":10284,"t":{},"b":{"37":{}}}],["u2)*f22(u1",{"_index":10283,"t":{},"b":{"37":{}}}],["u2)*finv21(u1",{"_index":10293,"t":{},"b":{"37":{}}}],["u2)*grad11(w1",{"_index":10338,"t":{},"b":{"37":{}}}],["u2)*grad12(w1",{"_index":10339,"t":{},"b":{"37":{}}}],["u2)*grad21(w1",{"_index":10341,"t":{},"b":{"37":{}}}],["u2)*grad22(w1",{"_index":10342,"t":{},"b":{"37":{}}}],["u2)*v1*alpha",{"_index":11624,"t":{},"b":{"45":{}}}],["u2)^2",{"_index":10291,"t":{},"b":{"37":{}}}],["u2*dy(v))*vv",{"_index":14437,"t":{},"b":{"66":{}}}],["u2*v2",{"_index":10397,"t":{},"b":{"37":{},"45":{},"48":{}}}],["u2,du1,du2",{"_index":14865,"t":{},"b":{"73":{}}}],["u2[]'*au2",{"_index":2012,"t":{},"b":{"3":{},"20":{}}}],["u2[].linfti",{"_index":11643,"t":{},"b":{"45":{},"73":{}}}],["u2e,wait",{"_index":9338,"t":{},"b":{"25":{}}}],["u2n",{"_index":10404,"t":{},"b":{"37":{}}}],["u2p",{"_index":14883,"t":{},"b":{"73":{}}}],["u2vc",{"_index":1458,"t":{},"b":{"3":{},"11":{},"54":{}}}],["u3",{"_index":7041,"t":{},"b":{"13":{},"25":{},"40":{}}}],["u3(x,yy,i",{"_index":9358,"t":{},"b":{"25":{}}}],["u3)'*epsilon(v1",{"_index":10750,"t":{},"b":{"40":{}}}],["u3)*div(v1",{"_index":10749,"t":{},"b":{"40":{}}}],["u3*v3*1.0",{"_index":7048,"t":{},"b":{"13":{}}}],["u3[].max",{"_index":7055,"t":{},"b":{"13":{}}}],["u3[].min",{"_index":7054,"t":{},"b":{"13":{}}}],["u[0",{"_index":740,"t":{},"b":{"3":{},"20":{}}}],["u[1",{"_index":741,"t":{},"b":{"3":{},"20":{}}}],["u[2",{"_index":747,"t":{},"b":{"3":{},"20":{}}}],["u[].linfti",{"_index":8777,"t":{},"b":{"21":{}}}],["u[].max",{"_index":7171,"t":{},"b":{"13":{},"20":{},"25":{},"26":{},"41":{},"48":{}}}],["u[].min",{"_index":7170,"t":{},"b":{"13":{},"41":{},"48":{},"64":{}}}],["u[].n",{"_index":8600,"t":{},"b":{"19":{},"27":{}}}],["u[][i",{"_index":5624,"t":{},"b":{"13":{}}}],["u[][j",{"_index":8601,"t":{},"b":{"19":{},"27":{}}}],["u[i",{"_index":744,"t":{},"b":{"3":{},"20":{}}}],["u[j",{"_index":7581,"t":{},"b":{"15":{}}}],["u\\cdot",{"_index":12035,"t":{},"b":{"48":{},"49":{},"76":{},"77":{}}}],["u\\cdot\\nabla",{"_index":11511,"t":{},"b":{"45":{},"66":{},"77":{}}}],["u\\in",{"_index":2916,"t":{},"b":{"4":{},"41":{},"48":{},"50":{},"72":{},"73":{}}}],["u\\left",{"_index":11184,"t":{},"b":{"41":{}}}],["u\\leq",{"_index":1360,"t":{},"b":{"3":{}}}],["u\\nabla",{"_index":13995,"t":{},"b":{"61":{},"67":{}}}],["u\\nabla\\rho",{"_index":14449,"t":{},"b":{"67":{}}}],["u\\nonumb",{"_index":15066,"t":{},"b":{"75":{}}}],["u\\ov",{"_index":15287,"t":{},"b":{"79":{}}}],["u\\over\\p",{"_index":11513,"t":{},"b":{"45":{}}}],["u\\over\\parti",{"_index":14339,"t":{},"b":{"65":{}}}],["u\\vert^{2",{"_index":1358,"t":{},"b":{"3":{}}}],["u\\|_{0.\\omega}^2\\right)^{1/2",{"_index":7356,"t":{},"b":{"14":{}}}],["u^0",{"_index":7498,"t":{},"b":{"15":{},"41":{}}}],["u^0(\\mathbf{x",{"_index":10913,"t":{},"b":{"41":{}}}],["u^0(x",{"_index":11063,"t":{},"b":{"41":{}}}],["u^0\\in",{"_index":10960,"t":{},"b":{"41":{}}}],["u^0\\nonumb",{"_index":10967,"t":{},"b":{"41":{}}}],["u^0_h",{"_index":12207,"t":{},"b":{"48":{}}}],["u^0_h|^2+\\tau",{"_index":11015,"t":{},"b":{"41":{}}}],["u^0_{|\\gamma",{"_index":7499,"t":{},"b":{"15":{}}}],["u^\\el",{"_index":7503,"t":{},"b":{"15":{}}}],["u^a_h",{"_index":12210,"t":{},"b":{"48":{}}}],["u^m",{"_index":10930,"t":{},"b":{"41":{},"61":{},"67":{},"79":{}}}],["u^m(\\mathbf{x}((m+1)\\tau",{"_index":11125,"t":{},"b":{"41":{}}}],["u^m(\\mathbf{x}(m\\tau",{"_index":11124,"t":{},"b":{"41":{}}}],["u^m(x",{"_index":11131,"t":{},"b":{"41":{}}}],["u^m(x)+o(\\tau",{"_index":11133,"t":{},"b":{"41":{}}}],["u^m(x)\\delta",{"_index":14012,"t":{},"b":{"61":{}}}],["u^m(x,i",{"_index":10901,"t":{},"b":{"41":{}}}],["u^m(x^m(x",{"_index":11138,"t":{},"b":{"41":{}}}],["u^m(x^m(x))\\approx",{"_index":11153,"t":{},"b":{"41":{}}}],["u^m(x^m(x))\\right",{"_index":11111,"t":{},"b":{"41":{}}}],["u^m+u_",{"_index":15306,"t":{},"b":{"79":{}}}],["u^m+{\\nabla",{"_index":14028,"t":{},"b":{"61":{}}}],["u^mv+\\tau",{"_index":10925,"t":{},"b":{"41":{}}}],["u^m}^t|^2",{"_index":14029,"t":{},"b":{"61":{}}}],["u^m}{\\p",{"_index":11126,"t":{},"b":{"41":{}}}],["u^n",{"_index":4778,"t":{},"b":{"11":{},"41":{},"45":{},"47":{},"50":{},"68":{},"79":{}}}],["u^n(x",{"_index":11522,"t":{},"b":{"45":{}}}],["u^n(x)\\tau",{"_index":11523,"t":{},"b":{"45":{}}}],["u^n(x,i",{"_index":15258,"t":{},"b":{"79":{}}}],["u^n+1",{"_index":12378,"t":{},"b":{"50":{}}}],["u^n\\circ",{"_index":11517,"t":{},"b":{"45":{}}}],["u^n\\n",{"_index":4785,"t":{},"b":{"11":{}}}],["u^n\\nabla",{"_index":14533,"t":{},"b":{"68":{},"79":{}}}],["u^n_1",{"_index":10445,"t":{},"b":{"38":{}}}],["u^n_1,\\cdots,u^n_m\\in",{"_index":10996,"t":{},"b":{"41":{}}}],["u^n_1\\phi_1(x)+\\cdots+u^n_m\\phi_m(x),\\quad",{"_index":10995,"t":{},"b":{"41":{}}}],["u^n_2",{"_index":10441,"t":{},"b":{"38":{}}}],["u^t|^2",{"_index":14004,"t":{},"b":{"61":{}}}],["u^{0",{"_index":4816,"t":{},"b":{"11":{},"68":{}}}],["u^{0}(x_{x,t}(0",{"_index":11095,"t":{},"b":{"41":{}}}],["u^{37",{"_index":11167,"t":{},"b":{"41":{}}}],["u^{m",{"_index":10906,"t":{},"b":{"41":{}}}],["u^{m+1",{"_index":10911,"t":{},"b":{"41":{},"61":{},"67":{}}}],["u^{m+1}/\\p",{"_index":10914,"t":{},"b":{"41":{}}}],["u^{m+1}\\cdot",{"_index":10922,"t":{},"b":{"41":{}}}],["u^{m+1}\\ov",{"_index":15303,"t":{},"b":{"79":{}}}],["u^{m+1}v",{"_index":10918,"t":{},"b":{"41":{}}}],["u^{m+1}v+\\tau",{"_index":10928,"t":{},"b":{"41":{}}}],["u^{m}}{\\tau",{"_index":10910,"t":{},"b":{"41":{}}}],["u^{n",{"_index":4782,"t":{},"b":{"11":{},"41":{},"47":{},"68":{},"79":{}}}],["u^{n+1",{"_index":11516,"t":{},"b":{"45":{},"47":{}}}],["u^{n+1}_1",{"_index":10438,"t":{},"b":{"38":{}}}],["u^{n+1}_1|_{\\gamma_1",{"_index":10440,"t":{},"b":{"38":{}}}],["u^{n+1}_2",{"_index":10442,"t":{},"b":{"38":{}}}],["u^{n+1}_2|_{\\gamma_2",{"_index":10444,"t":{},"b":{"38":{}}}],["u_",{"_index":6969,"t":{},"b":{"13":{},"48":{},"62":{},"68":{},"79":{}}}],["u_(nrs_k)_ns_1(doubl",{"_index":2390,"t":{},"b":{"4":{}}}],["u_(nrs_k)_ns_nt(doubl",{"_index":2394,"t":{},"b":{"4":{}}}],["u_(type_k)_1_1(doubl",{"_index":2272,"t":{},"b":{"4":{}}}],["u_(type_k)_1_ns(doubl",{"_index":2275,"t":{},"b":{"4":{}}}],["u_(type_k)_nbv_1(doubl",{"_index":2273,"t":{},"b":{"4":{}}}],["u_(type_k)_nbv_ns(doubl",{"_index":2277,"t":{},"b":{"4":{}}}],["u_0",{"_index":4981,"t":{},"b":{"11":{},"48":{},"68":{},"79":{}}}],["u_0(\\mathbf{x",{"_index":10891,"t":{},"b":{"41":{}}}],["u_0)}{\\parti",{"_index":4979,"t":{},"b":{"11":{}}}],["u_0+\\frac",{"_index":15251,"t":{},"b":{"79":{}}}],["u_0+x",{"_index":15253,"t":{},"b":{"79":{}}}],["u_0,v_0",{"_index":11711,"t":{},"b":{"46":{}}}],["u_0\\in",{"_index":14809,"t":{},"b":{"73":{}}}],["u_1",{"_index":4980,"t":{},"b":{"11":{},"13":{},"38":{},"40":{},"45":{},"68":{},"69":{},"77":{},"79":{}}}],["u_1,u_2",{"_index":11369,"t":{},"b":{"45":{},"78":{}}}],["u_1,u_2,u_3",{"_index":10621,"t":{},"b":{"40":{},"64":{}}}],["u_1_1(doubl",{"_index":2263,"t":{},"b":{"4":{}}}],["u_1_1_1(doubl",{"_index":2271,"t":{},"b":{"4":{}}}],["u_1_1_ns(doubl",{"_index":2274,"t":{},"b":{"4":{}}}],["u_1_1_nt(doubl",{"_index":2391,"t":{},"b":{"4":{}}}],["u_1_nbv_ns(doubl",{"_index":2276,"t":{},"b":{"4":{}}}],["u_1_ns_1(doubl",{"_index":2389,"t":{},"b":{"4":{}}}],["u_1_ns_nt(doubl",{"_index":2393,"t":{},"b":{"4":{}}}],["u_1_nv(doubl",{"_index":2265,"t":{},"b":{"4":{}}}],["u_1|_{\\gamma_i",{"_index":10451,"t":{},"b":{"38":{}}}],["u_2",{"_index":10488,"t":{},"b":{"38":{},"40":{},"45":{},"77":{}}}],["u_2)}{2",{"_index":10458,"t":{},"b":{"38":{}}}],["u_2|_{\\gamma_i",{"_index":10452,"t":{},"b":{"38":{}}}],["u_3",{"_index":10693,"t":{},"b":{"40":{}}}],["u_\\gamma",{"_index":11227,"t":{},"b":{"42":{},"75":{}}}],["u_d",{"_index":14989,"t":{},"b":{"75":{}}}],["u_d)\\delta",{"_index":15000,"t":{},"b":{"75":{}}}],["u_d)^2",{"_index":14986,"t":{},"b":{"75":{}}}],["u_e+273)^2",{"_index":15309,"t":{},"b":{"79":{}}}],["u_e+273)^4",{"_index":15301,"t":{},"b":{"79":{}}}],["u_e\\)",{"_index":12172,"t":{},"b":{"48":{}}}],["u_e\\|_{0,\\omega",{"_index":11890,"t":{},"b":{"48":{}}}],["u_e\\|_{1,\\omega}/h1",{"_index":12208,"t":{},"b":{"48":{}}}],["u_e|^2",{"_index":11892,"t":{},"b":{"48":{}}}],["u_e|_{1,\\omega",{"_index":11895,"t":{},"b":{"48":{}}}],["u_h",{"_index":652,"t":{},"b":{"3":{},"45":{},"48":{},"78":{}}}],["u_h(x,i",{"_index":15110,"t":{},"b":{"76":{}}}],["u_h)|^2",{"_index":4891,"t":{},"b":{"11":{}}}],["u_h\\cdot",{"_index":12038,"t":{},"b":{"48":{}}}],["u_h\\g",{"_index":4288,"t":{},"b":{"11":{}}}],["u_h\\|_{0,\\omega",{"_index":12029,"t":{},"b":{"48":{}}}],["u_h^1,\\cdots,u_h^m)^t",{"_index":10993,"t":{},"b":{"41":{}}}],["u_h^\\el",{"_index":7520,"t":{},"b":{"15":{}}}],["u_h^m",{"_index":10929,"t":{},"b":{"41":{}}}],["u_h^n",{"_index":11557,"t":{},"b":{"45":{}}}],["u_h^n(\\theta",{"_index":11053,"t":{},"b":{"41":{}}}],["u_h^n(x",{"_index":10994,"t":{},"b":{"41":{}}}],["u_h^n,\\phi_i\\right",{"_index":10977,"t":{},"b":{"41":{}}}],["u_h^{\\ell}}_{i",{"_index":7530,"t":{},"b":{"15":{}}}],["u_h^{\\ell}}_{i}\\in",{"_index":7521,"t":{},"b":{"15":{}}}],["u_h^{\\ell}}_{|i",{"_index":7519,"t":{},"b":{"15":{}}}],["u_h^{n+1",{"_index":10976,"t":{},"b":{"41":{}}}],["u_h^{n+1}+(1",{"_index":10986,"t":{},"b":{"41":{}}}],["u_h^{n+\\theta",{"_index":10985,"t":{},"b":{"41":{}}}],["u_h^{n+\\theta},\\phi_i\\right",{"_index":10979,"t":{},"b":{"41":{}}}],["u_h|^2",{"_index":12034,"t":{},"b":{"48":{}}}],["u_h|_{0,\\omega",{"_index":12027,"t":{},"b":{"48":{}}}],["u_h}^{\\ell}_{i",{"_index":7525,"t":{},"b":{"15":{}}}],["u_h}{\\parti",{"_index":4895,"t":{},"b":{"11":{}}}],["u_i",{"_index":3087,"t":{},"b":{"5":{},"11":{},"15":{},"38":{},"40":{},"46":{},"73":{}}}],["u_i)_{i",{"_index":3085,"t":{},"b":{"5":{},"73":{},"76":{}}}],["u_i\\cdot",{"_index":11377,"t":{},"b":{"45":{}}}],["u_i\\cdot\\nabla",{"_index":4985,"t":{},"b":{"11":{}}}],["u_i\\over\\parti",{"_index":14243,"t":{},"b":{"64":{}}}],["u_i^2",{"_index":8623,"t":{},"b":{"20":{}}}],["u_i^\\el",{"_index":7502,"t":{},"b":{"15":{}}}],["u_i_j",{"_index":2268,"t":{},"b":{"4":{}}}],["u_i_j_^k",{"_index":2399,"t":{},"b":{"4":{}}}],["u_i_j_k",{"_index":2282,"t":{},"b":{"4":{}}}],["u_i|_{\\gamma_e^i",{"_index":10455,"t":{},"b":{"38":{}}}],["u_i|_{\\gamma_i",{"_index":10454,"t":{},"b":{"38":{}}}],["u_i}{\\parti",{"_index":10645,"t":{},"b":{"40":{}}}],["u_j",{"_index":3091,"t":{},"b":{"5":{},"11":{},"15":{},"46":{}}}],["u_j\\cdot\\nabla",{"_index":4989,"t":{},"b":{"11":{}}}],["u_j\\over\\parti",{"_index":14244,"t":{},"b":{"64":{}}}],["u_j}{\\parti",{"_index":10647,"t":{},"b":{"40":{}}}],["u_k",{"_index":10779,"t":{},"b":{"40":{},"46":{}}}],["u_k)^2",{"_index":10791,"t":{},"b":{"40":{}}}],["u_k/\\parti",{"_index":10651,"t":{},"b":{"40":{}}}],["u_k\\phi_k(x,i",{"_index":15111,"t":{},"b":{"76":{}}}],["u_k}{\\parti",{"_index":10642,"t":{},"b":{"40":{}}}],["u_nrs_1_1(doubl",{"_index":2388,"t":{},"b":{"4":{}}}],["u_nrs_1_nt(doubl",{"_index":2392,"t":{},"b":{"4":{}}}],["u_ns_1(doubl",{"_index":2264,"t":{},"b":{"4":{}}}],["u_ns_nv(doubl",{"_index":2266,"t":{},"b":{"4":{}}}],["u_r",{"_index":12160,"t":{},"b":{"48":{}}}],["u_r\\in",{"_index":12161,"t":{},"b":{"48":{}}}],["u_ue)w",{"_index":15260,"t":{},"b":{"79":{}}}],["u_{1",{"_index":1969,"t":{},"b":{"3":{}}}],["u_{1,h",{"_index":11462,"t":{},"b":{"45":{}}}],["u_{1},u_{2",{"_index":1424,"t":{},"b":{"3":{},"46":{}}}],["u_{1}\\leq",{"_index":1974,"t":{},"b":{"3":{}}}],["u_{2",{"_index":1970,"t":{},"b":{"3":{},"46":{}}}],["u_{2,h",{"_index":11463,"t":{},"b":{"45":{}}}],["u_{3,4",{"_index":10611,"t":{},"b":{"39":{}}}],["u_{4,3",{"_index":10610,"t":{},"b":{"39":{}}}],["u_{4,3}+u_{3,4",{"_index":10613,"t":{},"b":{"39":{}}}],["u_{\\infti",{"_index":11948,"t":{},"b":{"48":{}}}],["u_{\\infty2x",{"_index":11950,"t":{},"b":{"48":{}}}],["u_{\\lambda",{"_index":10529,"t":{},"b":{"39":{}}}],["u_{ex}(n\\tau)\\vert",{"_index":11055,"t":{},"b":{"41":{}}}],["u_{ex}(n\\tau)\\vert\\max_{x\\in\\omega}\\vert",{"_index":11054,"t":{},"b":{"41":{}}}],["u_{h",{"_index":4046,"t":{},"b":{"11":{}}}],["u_{h},v_{h",{"_index":4028,"t":{},"b":{"11":{}}}],["u_{h}}{\\p",{"_index":12253,"t":{},"b":{"48":{}}}],["u_{i+1",{"_index":14812,"t":{},"b":{"73":{}}}],["u_{k",{"_index":12396,"t":{},"b":{"50":{}}}],["u_{k+1",{"_index":12364,"t":{},"b":{"50":{}}}],["u_{u",{"_index":4815,"t":{},"b":{"11":{},"68":{}}}],["u_{ue})w",{"_index":4787,"t":{},"b":{"11":{},"68":{}}}],["u_{{h",{"_index":12248,"t":{},"b":{"48":{}}}],["u_{{m,n",{"_index":10535,"t":{},"b":{"39":{}}}],["u_{|k",{"_index":2919,"t":{},"b":{"4":{}}}],["ub",{"_index":1149,"t":{},"b":{"3":{},"5":{},"20":{},"45":{}}}],["ub*d/nu",{"_index":11578,"t":{},"b":{"45":{}}}],["ub1",{"_index":1470,"t":{},"b":{"3":{}}}],["ub2",{"_index":1471,"t":{},"b":{"3":{}}}],["ubuntu",{"_index":9828,"t":{},"b":{"32":{},"35":{}}}],["uc",{"_index":3161,"t":{},"b":{"5":{},"15":{},"26":{}}}],["uc(rci.n",{"_index":7606,"t":{},"b":{"15":{},"26":{}}}],["ud",{"_index":13658,"t":{},"b":{"54":{},"75":{}}}],["ud)*du",{"_index":15046,"t":{},"b":{"75":{}}}],["ud)^2",{"_index":15035,"t":{},"b":{"75":{}}}],["ue",{"_index":4822,"t":{},"b":{"11":{},"15":{},"21":{},"25":{},"48":{},"79":{}}}],["ue*v",{"_index":8066,"t":{},"b":{"15":{}}}],["uek^2",{"_index":15325,"t":{},"b":{"79":{}}}],["uex",{"_index":8052,"t":{},"b":{"15":{},"41":{}}}],["uex*n.x",{"_index":8067,"t":{},"b":{"15":{}}}],["uey",{"_index":8056,"t":{},"b":{"15":{}}}],["uey*n.i",{"_index":8068,"t":{},"b":{"15":{}}}],["uez",{"_index":8059,"t":{},"b":{"15":{}}}],["uez*n.z)*v",{"_index":8069,"t":{},"b":{"15":{}}}],["ug",{"_index":4442,"t":{},"b":{"11":{}}}],["ugradv",{"_index":14864,"t":{},"b":{"73":{}}}],["ugradv(du1,du2",{"_index":14863,"t":{},"b":{"73":{}}}],["ugradv(u1,u2",{"_index":14869,"t":{},"b":{"73":{}}}],["ugradv(u1,u2,v1,v2",{"_index":14855,"t":{},"b":{"73":{}}}],["uh",{"_index":636,"t":{},"b":{"3":{},"4":{},"11":{},"13":{},"15":{},"19":{},"20":{},"21":{},"22":{},"25":{},"27":{},"47":{},"48":{},"50":{},"54":{},"55":{},"60":{},"63":{},"67":{},"75":{},"77":{},"78":{}}}],["uh(1",{"_index":4360,"t":{},"b":{"11":{}}}],["uh(10",{"_index":4039,"t":{},"b":{"11":{}}}],["uh(2",{"_index":4358,"t":{},"b":{"11":{}}}],["uh(2,4",{"_index":4357,"t":{},"b":{"11":{}}}],["uh(th",{"_index":13873,"t":{},"b":{"60":{},"63":{},"77":{},"78":{}}}],["uh*convect([u1,v1",{"_index":14506,"t":{},"b":{"67":{}}}],["uh*vh",{"_index":664,"t":{},"b":{"3":{},"20":{}}}],["uh,vh",{"_index":7154,"t":{},"b":{"13":{},"48":{}}}],["uh,vh](n",{"_index":13942,"t":{},"b":{"60":{}}}],["uh.n",{"_index":4365,"t":{},"b":{"11":{}}}],["uh1",{"_index":8991,"t":{},"b":{"21":{}}}],["uh1(th1",{"_index":8990,"t":{},"b":{"21":{}}}],["uh2",{"_index":8993,"t":{},"b":{"21":{}}}],["uh2(th2",{"_index":8992,"t":{},"b":{"21":{}}}],["uh[],l",{"_index":9292,"t":{},"b":{"22":{}}}],["uh[].max",{"_index":2826,"t":{},"b":{"4":{},"11":{},"21":{}}}],["uh[].min",{"_index":2825,"t":{},"b":{"4":{}}}],["uh[][0",{"_index":4363,"t":{},"b":{"11":{}}}],["uhe(0.,0.,0",{"_index":9330,"t":{},"b":{"25":{}}}],["uhe[].max",{"_index":8062,"t":{},"b":{"15":{},"25":{}}}],["uhe[].min",{"_index":8061,"t":{},"b":{"15":{},"25":{}}}],["uhi",{"_index":9376,"t":{},"b":{"25":{}}}],["uhp",{"_index":12377,"t":{},"b":{"50":{}}}],["uhx",{"_index":9375,"t":{},"b":{"25":{}}}],["ui",{"_index":3016,"t":{},"b":{"5":{},"7":{},"10":{},"15":{},"21":{},"26":{}}}],["ui1",{"_index":1486,"t":{},"b":{"3":{}}}],["ui2",{"_index":1487,"t":{},"b":{"3":{}}}],["uin",{"_index":9361,"t":{},"b":{"25":{}}}],["uinfty1",{"_index":14383,"t":{},"b":{"66":{}}}],["uinfty1,uinfty2]'*[i",{"_index":14401,"t":{},"b":{"66":{}}}],["uinfty2",{"_index":14384,"t":{},"b":{"66":{}}}],["um",{"_index":11570,"t":{},"b":{"45":{}}}],["um*2./3",{"_index":11577,"t":{},"b":{"45":{}}}],["umax",{"_index":8619,"t":{},"b":{"20":{},"26":{}}}],["umaxg",{"_index":9677,"t":{},"b":{"26":{}}}],["umfpack",{"_index":4513,"t":{},"b":{"11":{},"12":{},"15":{},"45":{},"51":{},"60":{},"72":{},"76":{},"80":{}}}],["umfpack64",{"_index":13453,"t":{},"b":{"53":{}}}],["un",{"_index":11716,"t":{},"b":{"46":{}}}],["unavail",{"_index":3314,"t":{},"b":{"5":{},"10":{}}}],["unavoid",{"_index":1905,"t":{},"b":{"3":{}}}],["unbound",{"_index":1477,"t":{},"b":{"3":{}}}],["unbounded",{"_index":1152,"t":{},"b":{"3":{}}}],["unchang",{"_index":4345,"t":{},"b":{"11":{}}}],["uncond",{"_index":15206,"t":{},"b":{"77":{}}}],["uncondition",{"_index":11165,"t":{},"b":{"41":{}}}],["unconstrain",{"_index":709,"t":{},"b":{"3":{}}}],["undefin",{"_index":1099,"t":{},"b":{"3":{},"4":{}}}],["undeform",{"_index":10616,"t":{},"b":{"40":{},"64":{}}}],["under",{"_index":602,"t":{},"b":{"3":{},"4":{},"13":{},"15":{},"18":{},"19":{},"32":{},"35":{},"48":{},"64":{},"72":{},"76":{}}}],["underli",{"_index":889,"t":{},"b":{"3":{},"5":{},"10":{},"11":{},"36":{},"37":{}}}],["underscor",{"_index":13786,"t":{},"b":{"56":{}}}],["underset{(v_{1},v_{2})\\in",{"_index":1425,"t":{},"b":{"3":{}}}],["underset{\\rho\\in",{"_index":1638,"t":{},"b":{"3":{}}}],["underset{x\\in",{"_index":923,"t":{},"b":{"3":{}}}],["underset{x\\in\\mathbb{r}^{n",{"_index":950,"t":{},"b":{"3":{}}}],["underset{x\\in\\mathbb{r}^{n}}{\\operatorname{argmin",{"_index":1072,"t":{},"b":{"3":{}}}],["understand",{"_index":5099,"t":{},"b":{"12":{},"15":{},"69":{},"81":{}}}],["unformat",{"_index":2332,"t":{},"b":{"4":{}}}],["unfortun",{"_index":5238,"t":{},"b":{"13":{},"40":{}}}],["unfortunatli",{"_index":2782,"t":{},"b":{"4":{}}}],["uniform",{"_index":5610,"t":{},"b":{"13":{},"24":{},"48":{},"54":{},"66":{},"69":{}}}],["union",{"_index":5148,"t":{},"b":{"13":{},"15":{}}}],["uniqu",{"_index":10968,"t":{},"b":{"41":{},"45":{},"62":{},"65":{},"72":{},"79":{}}}],["unistd.h",{"_index":8435,"t":{},"b":{"18":{}}}],["unit",{"_index":2471,"t":{},"b":{"4":{},"11":{},"13":{},"21":{},"26":{},"37":{},"40":{},"41":{},"45":{},"48":{},"55":{},"56":{},"69":{},"72":{},"76":{},"77":{}}}],["unitari",{"_index":4482,"t":{},"b":{"11":{},"72":{}}}],["uniti",{"_index":3078,"t":{},"b":{"5":{},"8":{},"10":{},"15":{},"16":{},"26":{},"51":{}}}],["univers",{"_index":7938,"t":{},"b":{"15":{},"29":{},"34":{}}}],["universit",{"_index":142,"t":{},"b":{"2":{}}}],["universitair",{"_index":9763,"t":{},"b":{"29":{}}}],["universite.fr",{"_index":9756,"t":{},"b":{"29":{}}}],["unix",{"_index":2753,"t":{},"b":{"4":{},"12":{},"15":{},"19":{},"27":{},"35":{},"60":{}}}],["unknown",{"_index":1024,"t":{},"b":{"3":{},"5":{},"8":{},"10":{},"11":{},"15":{},"33":{},"41":{},"45":{},"54":{},"65":{},"75":{},"76":{}}}],["unless",{"_index":1300,"t":{},"b":{"3":{},"5":{},"13":{},"35":{},"65":{},"76":{}}}],["unlik",{"_index":14737,"t":{},"b":{"72":{}}}],["unlink",{"_index":13429,"t":{},"b":{"53":{}}}],["unlock",{"_index":8430,"t":{},"b":{"18":{}}}],["unpredict",{"_index":4510,"t":{},"b":{"11":{}}}],["unrecoverable_except",{"_index":1232,"t":{},"b":{"3":{}}}],["unsatisfi",{"_index":4493,"t":{},"b":{"11":{}}}],["unset",{"_index":12595,"t":{},"b":{"52":{}}}],["unsetenv",{"_index":13442,"t":{},"b":{"53":{}}}],["unsign",{"_index":13683,"t":{},"b":{"54":{}}}],["unssd",{"_index":9428,"t":{},"b":{"26":{}}}],["unssd>nnn0",{"_index":9446,"t":{},"b":{"26":{}}}],["unssd>nnn1",{"_index":9452,"t":{},"b":{"26":{}}}],["unstabl",{"_index":11057,"t":{},"b":{"41":{}}}],["unstructur",{"_index":5114,"t":{},"b":{"12":{},"33":{}}}],["unsupport",{"_index":1915,"t":{},"b":{"3":{}}}],["unsym",{"_index":7920,"t":{},"b":{"15":{}}}],["unsymmetr",{"_index":7745,"t":{},"b":{"15":{},"26":{}}}],["unsymmetricmatrix",{"_index":8085,"t":{},"b":{"15":{}}}],["until",{"_index":8166,"t":{},"b":{"15":{},"18":{},"35":{},"41":{},"46":{},"77":{}}}],["untouch",{"_index":5386,"t":{},"b":{"13":{}}}],["unus",{"_index":824,"t":{},"b":{"3":{},"11":{},"15":{},"48":{},"76":{}}}],["unzip",{"_index":10044,"t":{},"b":{"35":{}}}],["uo",{"_index":7622,"t":{},"b":{"15":{},"26":{}}}],["uold",{"_index":11204,"t":{},"b":{"41":{},"74":{},"79":{},"80":{}}}],["uold)+square(v",{"_index":14973,"t":{},"b":{"74":{}}}],["uold)/dt",{"_index":11220,"t":{},"b":{"41":{}}}],["uold)/dt*w",{"_index":14952,"t":{},"b":{"74":{}}}],["uold*uu+vold*vv)/dt",{"_index":15335,"t":{},"b":{"80":{}}}],["uold*v*x/dt",{"_index":15294,"t":{},"b":{"79":{}}}],["uold*v/dt",{"_index":15264,"t":{},"b":{"79":{}}}],["up",{"_index":1060,"t":{},"b":{"3":{},"5":{},"8":{},"11":{},"13":{},"19":{},"34":{},"35":{},"40":{},"46":{},"48":{},"49":{},"54":{},"63":{},"67":{}}}],["up(2*vh.ndof",{"_index":2090,"t":{},"b":{"3":{}}}],["up1",{"_index":2976,"t":{},"b":{"4":{},"45":{}}}],["up2",{"_index":2977,"t":{},"b":{"4":{},"45":{}}}],["up[i",{"_index":2109,"t":{},"b":{"3":{}}}],["up[i+vh.ndof",{"_index":2113,"t":{},"b":{"3":{}}}],["updat",{"_index":1288,"t":{},"b":{"3":{},"8":{},"11":{},"13":{},"15":{},"18":{},"19":{},"35":{},"37":{},"41":{},"43":{},"45":{},"46":{},"50":{},"61":{},"67":{},"73":{},"74":{}}}],["update(real[int",{"_index":9540,"t":{},"b":{"26":{}}}],["update(u",{"_index":9636,"t":{},"b":{"26":{}}}],["update(v",{"_index":7585,"t":{},"b":{"15":{},"26":{}}}],["upgrad",{"_index":10038,"t":{},"b":{"35":{},"38":{}}}],["uph",{"_index":4031,"t":{},"b":{"11":{},"25":{},"60":{}}}],["uph(th",{"_index":9374,"t":{},"b":{"25":{},"60":{}}}],["upi",{"_index":9378,"t":{},"b":{"25":{},"61":{}}}],["upon",{"_index":1257,"t":{},"b":{"3":{},"13":{}}}],["upp",{"_index":13545,"t":{},"b":{"54":{}}}],["upper",{"_index":1086,"t":{},"b":{"3":{},"8":{},"13":{},"24":{},"37":{},"40":{},"46":{},"48":{},"63":{},"64":{},"66":{}}}],["upper(35",{"_index":5691,"t":{},"b":{"13":{},"48":{}}}],["upper(t",{"_index":5681,"t":{},"b":{"13":{},"48":{}}}],["upper/top",{"_index":6007,"t":{},"b":{"13":{}}}],["uppper",{"_index":6114,"t":{},"b":{"13":{}}}],["upwind",{"_index":14304,"t":{},"b":{"65":{},"66":{},"77":{}}}],["upx",{"_index":9377,"t":{},"b":{"25":{},"61":{}}}],["upx)*vx",{"_index":14083,"t":{},"b":{"61":{}}}],["upx*n.x/n.i",{"_index":14086,"t":{},"b":{"61":{}}}],["upy)*vi",{"_index":14084,"t":{},"b":{"61":{}}}],["ur",{"_index":8772,"t":{},"b":{"21":{}}}],["url",{"_index":9813,"t":{},"b":{"30":{}}}],["url{http://en.wikipedia.org/wiki/hsv_color_spac",{"_index":8558,"t":{},"b":{"19":{}}}],["us",{"_index":506,"t":{},"b":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"26":{},"30":{},"33":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"56":{},"58":{},"60":{},"61":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"81":{}}}],["usabl",{"_index":13664,"t":{},"b":{"54":{},"55":{}}}],["usag",{"_index":733,"t":{},"b":{"3":{},"26":{},"31":{},"33":{},"35":{},"60":{},"70":{}}}],["useful",{"_index":8357,"t":{},"b":{"18":{}}}],["useless",{"_index":14790,"t":{},"b":{"72":{}}}],["usend",{"_index":7573,"t":{},"b":{"15":{},"26":{}}}],["usend[j",{"_index":7555,"t":{},"b":{"15":{},"26":{}}}],["user",{"_index":98,"t":{},"b":{"2":{},"3":{},"7":{},"8":{},"9":{},"12":{},"13":{},"15":{},"16":{},"17":{},"33":{},"34":{},"35":{},"44":{},"48":{},"76":{}}}],["user_requested_stop",{"_index":1227,"t":{},"b":{"3":{}}}],["users/hecht/library/freefem++/edp",{"_index":10129,"t":{},"b":{"35":{}}}],["users/hecht/library/freefem++/lib",{"_index":10127,"t":{},"b":{"35":{}}}],["user’",{"_index":7755,"t":{},"b":{"15":{},"35":{}}}],["ush",{"_index":7963,"t":{},"b":{"15":{}}}],["usleep",{"_index":13423,"t":{},"b":{"53":{}}}],["usol",{"_index":7045,"t":{},"b":{"13":{}}}],["usol[][ii",{"_index":7059,"t":{},"b":{"13":{}}}],["usr/loc",{"_index":10034,"t":{},"b":{"35":{}}}],["usr/local/bin",{"_index":9920,"t":{},"b":{"35":{}}}],["usr/local/lib/ff",{"_index":9922,"t":{},"b":{"35":{}}}],["usr/local/share/freefem",{"_index":9921,"t":{},"b":{"35":{}}}],["usr/share/gtksourceview",{"_index":10148,"t":{},"b":{"35":{}}}],["usual",{"_index":842,"t":{},"b":{"3":{},"5":{},"11":{},"14":{},"35":{},"65":{},"69":{},"76":{}}}],["usupport_1(doubl",{"_index":2238,"t":{},"b":{"4":{}}}],["usupport_nvse(doubl",{"_index":2241,"t":{},"b":{"4":{}}}],["usupport_nvsq(doubl",{"_index":2253,"t":{},"b":{"4":{}}}],["usupport_nvst(doubl",{"_index":2248,"t":{},"b":{"4":{}}}],["utc+0*00",{"_index":2817,"t":{},"b":{"4":{}}}],["util",{"_index":766,"t":{},"b":{"3":{},"13":{},"35":{}}}],["uu",{"_index":5459,"t":{},"b":{"13":{},"40":{},"41":{},"42":{},"43":{},"46":{},"48":{},"63":{},"64":{},"78":{},"80":{}}}],["uu(3",{"_index":9083,"t":{},"b":{"21":{},"60":{}}}],["uu*v",{"_index":10943,"t":{},"b":{"41":{}}}],["uu1",{"_index":11289,"t":{},"b":{"42":{}}}],["uu1)^2",{"_index":11301,"t":{},"b":{"42":{}}}],["uu[0",{"_index":9084,"t":{},"b":{"21":{},"60":{}}}],["uu[1",{"_index":9086,"t":{},"b":{"21":{},"60":{}}}],["uu[2",{"_index":9089,"t":{},"b":{"21":{},"60":{}}}],["uue",{"_index":12192,"t":{},"b":{"48":{}}}],["uue^2",{"_index":12196,"t":{},"b":{"48":{}}}],["uuu",{"_index":9518,"t":{},"b":{"26":{},"46":{}}}],["ux",{"_index":3893,"t":{},"b":{"11":{},"15":{},"21":{},"25":{},"53":{},"54":{},"60":{},"61":{}}}],["ux(0.5,i/20",{"_index":14092,"t":{},"b":{"61":{}}}],["ux,uy",{"_index":9392,"t":{},"b":{"25":{}}}],["uxh",{"_index":4034,"t":{},"b":{"11":{}}}],["uxh(1",{"_index":4361,"t":{},"b":{"11":{}}}],["uxh(2",{"_index":4359,"t":{},"b":{"11":{}}}],["uxh;//ok",{"_index":4347,"t":{},"b":{"11":{}}}],["uy",{"_index":3894,"t":{},"b":{"11":{},"21":{},"25":{},"53":{},"54":{},"60":{},"61":{}}}],["uyh",{"_index":4035,"t":{},"b":{"11":{}}}],["uyh(1",{"_index":4362,"t":{},"b":{"11":{}}}],["uyzh",{"_index":4077,"t":{},"b":{"11":{}}}],["uz",{"_index":1284,"t":{},"b":{"3":{},"15":{},"20":{},"25":{},"53":{},"54":{}}}],["uz2",{"_index":1434,"t":{},"b":{"3":{}}}],["uzawa",{"_index":4846,"t":{},"b":{"11":{},"42":{},"45":{}}}],["uzi",{"_index":1479,"t":{},"b":{"3":{}}}],["uzi2",{"_index":1480,"t":{},"b":{"3":{}}}],["u|/\\sqrt{u\\cdot\\mathcal{m}_i",{"_index":2304,"t":{},"b":{"4":{}}}],["u|^2",{"_index":591,"t":{},"b":{"3":{},"20":{},"47":{}}}],["u|_\\gamma",{"_index":10437,"t":{},"b":{"38":{},"75":{}}}],["u|_{\\gamma_2",{"_index":15286,"t":{},"b":{"79":{}}}],["u|_{\\gamma_4",{"_index":15285,"t":{},"b":{"79":{}}}],["u|_{\\gamma_{i",{"_index":12311,"t":{},"b":{"49":{}}}],["u|_{\\gamma_{j",{"_index":12313,"t":{},"b":{"49":{}}}],["u|l/\\kappa",{"_index":14442,"t":{},"b":{"66":{}}}],["u||_\\infti",{"_index":8776,"t":{},"b":{"21":{}}}],["u}(x",{"_index":14251,"t":{},"b":{"64":{}}}],["u},\\,{\\mathbf",{"_index":3541,"t":{},"b":{"8":{}}}],["u}:\\nabla",{"_index":14820,"t":{},"b":{"73":{}}}],["u}\\cdot\\nabla",{"_index":14819,"t":{},"b":{"73":{}}}],["u}\\over\\p",{"_index":11510,"t":{},"b":{"45":{}}}],["u}_i",{"_index":3546,"t":{},"b":{"8":{},"10":{},"69":{}}}],["u}_i)_{1\\l",{"_index":3555,"t":{},"b":{"8":{}}}],["u}_j",{"_index":3559,"t":{},"b":{"8":{}}}],["u}_{|\\gamma",{"_index":14550,"t":{},"b":{"69":{}}}],["u}{\\p",{"_index":4455,"t":{},"b":{"11":{},"41":{}}}],["u}{\\parti",{"_index":13543,"t":{},"b":{"54":{},"68":{},"76":{},"79":{}}}],["u}}{\\bar\\rho}\\nabla",{"_index":14454,"t":{},"b":{"67":{}}}],["u}}{{\\p",{"_index":10933,"t":{},"b":{"41":{}}}],["v",{"_index":926,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"24":{},"25":{},"26":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"54":{},"55":{},"60":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{}}}],["v(1,i",{"_index":9148,"t":{},"b":{"21":{}}}],["v(10",{"_index":13951,"t":{},"b":{"60":{}}}],["v(2,i",{"_index":9149,"t":{},"b":{"21":{}}}],["v(20",{"_index":14288,"t":{},"b":{"64":{}}}],["v(4,i",{"_index":9150,"t":{},"b":{"21":{}}}],["v(5,i",{"_index":9151,"t":{},"b":{"21":{}}}],["v(6,i",{"_index":9152,"t":{},"b":{"21":{}}}],["v(\\omega_{\\sigma",{"_index":10766,"t":{},"b":{"40":{}}}],["v(a,b,c",{"_index":4202,"t":{},"b":{"11":{}}}],["v(a0,a1,p",{"_index":4226,"t":{},"b":{"11":{}}}],["v(a0,p,a2",{"_index":4223,"t":{},"b":{"11":{}}}],["v(p,a1,a2",{"_index":4220,"t":{},"b":{"11":{}}}],["v(u.n",{"_index":7584,"t":{},"b":{"15":{},"26":{}}}],["v(vv,1",{"_index":9155,"t":{},"b":{"21":{}}}],["v(vv,2",{"_index":9156,"t":{},"b":{"21":{}}}],["v(vv,4",{"_index":9157,"t":{},"b":{"21":{}}}],["v(vv,5",{"_index":9158,"t":{},"b":{"21":{}}}],["v(vv,6",{"_index":9159,"t":{},"b":{"21":{}}}],["v(x(\\tau),\\tau",{"_index":11083,"t":{},"b":{"41":{}}}],["v(x)\\in",{"_index":11243,"t":{},"b":{"42":{}}}],["v(x,i",{"_index":11330,"t":{},"b":{"43":{},"76":{}}}],["v({\\cal",{"_index":4380,"t":{},"b":{"11":{}}}],["v({\\hbox{{\\cal",{"_index":4375,"t":{},"b":{"11":{}}}],["v)'*a*dde(u",{"_index":11709,"t":{},"b":{"46":{}}}],["v)'*a*de(u",{"_index":11704,"t":{},"b":{"46":{}}}],["v)'*a*e(u",{"_index":11702,"t":{},"b":{"46":{}}}],["v*(u1*dx(vh)+u2*dy(vh",{"_index":15213,"t":{},"b":{"77":{}}}],["v*coef",{"_index":11356,"t":{},"b":{"43":{}}}],["v*convect([xveloc",{"_index":11219,"t":{},"b":{"41":{}}}],["v*vh",{"_index":14498,"t":{},"b":{"67":{}}}],["v*vv/dt",{"_index":14434,"t":{},"b":{"66":{}}}],["v*w*(1+r",{"_index":14218,"t":{},"b":{"63":{}}}],["v*w*k^2)/(1+(wallreflexion+wallabsorption)*wall())^2",{"_index":15431,"t":{},"b":{"81":{}}}],["v*w/dt",{"_index":14956,"t":{},"b":{"74":{},"79":{}}}],["v+uek)^2",{"_index":15324,"t":{},"b":{"79":{}}}],["v,\\quad",{"_index":10963,"t":{},"b":{"41":{}}}],["v,c",{"_index":4204,"t":{},"b":{"11":{}}}],["v,w",{"_index":7344,"t":{},"b":{"14":{},"50":{},"81":{}}}],["v,w)_{1,\\omega",{"_index":7366,"t":{},"b":{"14":{}}}],["v0",{"_index":12047,"t":{},"b":{"48":{}}}],["v0)i",{"_index":6940,"t":{},"b":{"13":{}}}],["v0)x",{"_index":6939,"t":{},"b":{"13":{}}}],["v0)z",{"_index":6941,"t":{},"b":{"13":{}}}],["v0.cpp",{"_index":2702,"t":{},"b":{"4":{}}}],["v0h",{"_index":12046,"t":{},"b":{"48":{},"61":{}}}],["v0h(t0h",{"_index":12189,"t":{},"b":{"48":{}}}],["v0h(th,p0",{"_index":14060,"t":{},"b":{"61":{}}}],["v0h(th0",{"_index":12045,"t":{},"b":{"48":{}}}],["v1",{"_index":1440,"t":{},"b":{"3":{},"4":{},"13":{},"25":{},"37":{},"38":{},"40":{},"45":{},"46":{},"48":{},"67":{},"73":{},"77":{}}}],["v1,v2",{"_index":11498,"t":{},"b":{"45":{},"73":{}}}],["v1,v2,v3",{"_index":6178,"t":{},"b":{"13":{}}}],["v10.1.2",{"_index":9927,"t":{},"b":{"35":{}}}],["v1[].max",{"_index":11780,"t":{},"b":{"46":{}}}],["v1[].min",{"_index":11779,"t":{},"b":{"46":{}}}],["v2",{"_index":1441,"t":{},"b":{"3":{},"4":{},"11":{},"25":{},"37":{},"38":{},"40":{},"45":{},"46":{},"48":{},"73":{},"77":{}}}],["v2*n.i",{"_index":12239,"t":{},"b":{"48":{}}}],["v3",{"_index":7042,"t":{},"b":{"13":{},"25":{},"33":{},"34":{},"40":{}}}],["v3.11",{"_index":9401,"t":{},"b":{"26":{}}}],["v3.34",{"_index":9889,"t":{},"b":{"33":{}}}],["v3.57",{"_index":9890,"t":{},"b":{"33":{}}}],["v3h",{"_index":4934,"t":{},"b":{"11":{}}}],["v3h(th",{"_index":4930,"t":{},"b":{"11":{}}}],["v4",{"_index":4945,"t":{},"b":{"11":{},"33":{},"35":{}}}],["v4.0",{"_index":7118,"t":{},"b":{"13":{},"53":{}}}],["v4.6",{"_index":9827,"t":{},"b":{"32":{}}}],["v4h",{"_index":4933,"t":{},"b":{"11":{}}}],["v4h(th4",{"_index":4929,"t":{},"b":{"11":{}}}],["v[]'*v",{"_index":11812,"t":{},"b":{"47":{}}}],["v[].linfti",{"_index":9669,"t":{},"b":{"26":{}}}],["v[].max",{"_index":8782,"t":{},"b":{"21":{},"77":{}}}],["v[].min",{"_index":8783,"t":{},"b":{"21":{},"64":{},"77":{}}}],["v[k",{"_index":2657,"t":{},"b":{"4":{}}}],["v\\in",{"_index":1587,"t":{},"b":{"3":{},"11":{},"41":{},"45":{},"49":{},"50":{},"69":{}}}],["v\\left(\\vectthree{.}{.}{0}\\right",{"_index":4056,"t":{},"b":{"11":{}}}],["v\\left(\\vectthree{.}{.}{1}\\right",{"_index":4057,"t":{},"b":{"11":{}}}],["v\\left(\\vectthree{.}{0}{.}\\right",{"_index":4054,"t":{},"b":{"11":{}}}],["v\\left(\\vectthree{.}{1}{.}\\right",{"_index":4055,"t":{},"b":{"11":{}}}],["v\\left(\\vectthree{0}{.}{.}\\right",{"_index":4052,"t":{},"b":{"11":{}}}],["v\\left(\\vectthree{1}{.}{.}\\right",{"_index":4053,"t":{},"b":{"11":{}}}],["v\\left(\\vecttwo{.}{0}\\right",{"_index":4011,"t":{},"b":{"11":{}}}],["v\\left(\\vecttwo{.}{1}\\right",{"_index":4012,"t":{},"b":{"11":{}}}],["v\\left(\\vecttwo{0}{.}\\right",{"_index":4009,"t":{},"b":{"11":{}}}],["v\\left(\\vecttwo{1}{.}\\right",{"_index":4010,"t":{},"b":{"11":{}}}],["v\\nonumb",{"_index":12321,"t":{},"b":{"49":{}}}],["v\\text{d",{"_index":15084,"t":{},"b":{"76":{}}}],["v\\time",{"_index":11397,"t":{},"b":{"45":{}}}],["v^2",{"_index":14178,"t":{},"b":{"63":{}}}],["v^{m+1",{"_index":14911,"t":{},"b":{"74":{}}}],["v_0",{"_index":4486,"t":{},"b":{"11":{},"66":{},"68":{}}}],["v_1",{"_index":13668,"t":{},"b":{"54":{}}}],["v_1,\\cdots,v_m)^t",{"_index":7379,"t":{},"b":{"14":{}}}],["v_1,v_2",{"_index":11234,"t":{},"b":{"42":{}}}],["v_1,v_2)\\in",{"_index":11372,"t":{},"b":{"45":{}}}],["v_1\\phi_1+\\cdot",{"_index":11406,"t":{},"b":{"45":{}}}],["v_1\\phi_1+\\cdots+v_m\\phi_m",{"_index":7380,"t":{},"b":{"14":{}}}],["v_g",{"_index":4484,"t":{},"b":{"11":{}}}],["v_h",{"_index":655,"t":{},"b":{"3":{},"4":{},"11":{},"14":{},"15":{},"45":{},"76":{}}}],["v_h(\\mathcal{t}_h,p_0",{"_index":4311,"t":{},"b":{"11":{}}}],["v_h(\\mathcal{t}_h,p_1",{"_index":4313,"t":{},"b":{"11":{}}}],["v_h(\\mathcal{t}_h,p_2",{"_index":12042,"t":{},"b":{"48":{}}}],["v_h(\\omega_0)\\cup",{"_index":4994,"t":{},"b":{"11":{}}}],["v_h(\\omega_1",{"_index":4995,"t":{},"b":{"11":{}}}],["v_h(\\omega_i",{"_index":4997,"t":{},"b":{"11":{}}}],["v_h,\\quad",{"_index":11405,"t":{},"b":{"45":{}}}],["v_h\\subset",{"_index":4261,"t":{},"b":{"11":{}}}],["v_h\\time",{"_index":11404,"t":{},"b":{"45":{}}}],["v_h\\|_{1,\\omega",{"_index":11437,"t":{},"b":{"45":{}}}],["v_h}_i",{"_index":7507,"t":{},"b":{"15":{}}}],["v_h}_i\\in",{"_index":7522,"t":{},"b":{"15":{}}}],["v_i",{"_index":3700,"t":{},"b":{"10":{},"15":{},"45":{}}}],["v_i/\\parti",{"_index":10773,"t":{},"b":{"40":{}}}],["v_i\\over\\parti",{"_index":11240,"t":{},"b":{"42":{}}}],["v_i})_{1\\l",{"_index":3519,"t":{},"b":{"8":{},"10":{}}}],["v_j/\\partial",{"_index":10774,"t":{},"b":{"40":{}}}],["v_j\\over\\parti",{"_index":11241,"t":{},"b":{"42":{}}}],["v_n",{"_index":13670,"t":{},"b":{"54":{}}}],["v_{0",{"_index":4779,"t":{},"b":{"11":{},"68":{}}}],["v_{0,k+1",{"_index":12367,"t":{},"b":{"50":{}}}],["v_{0h",{"_index":653,"t":{},"b":{"3":{}}}],["v_{0h}}_i",{"_index":7512,"t":{},"b":{"15":{}}}],["v_{0i",{"_index":7523,"t":{},"b":{"15":{}}}],["v_{1",{"_index":10489,"t":{},"b":{"38":{}}}],["v_{1},v_{2",{"_index":11660,"t":{},"b":{"46":{}}}],["v_{1},v_{2})\\in",{"_index":1407,"t":{},"b":{"3":{}}}],["v_{1}\\leq",{"_index":1411,"t":{},"b":{"3":{}}}],["v_{1}\\vert^{2",{"_index":1418,"t":{},"b":{"3":{}}}],["v_{1}\\vert_{\\partial\\omega",{"_index":1409,"t":{},"b":{"3":{}}}],["v_{2",{"_index":1412,"t":{},"b":{"3":{},"46":{}}}],["v_{2}\\vert^{2",{"_index":1421,"t":{},"b":{"3":{}}}],["v_{2}\\vert_{\\partial\\omega",{"_index":1410,"t":{},"b":{"3":{}}}],["v_{g,k+1",{"_index":12365,"t":{},"b":{"50":{}}}],["v_{h",{"_index":4047,"t":{},"b":{"11":{}}}],["v_{hi",{"_index":7651,"t":{},"b":{"15":{}}}],["v_{i",{"_index":7024,"t":{},"b":{"13":{}}}],["v_{i,j}^{3d",{"_index":5964,"t":{},"b":{"13":{}}}],["v_{i,k",{"_index":3261,"t":{},"b":{"5":{},"8":{},"10":{}}}],["v_{i,k})^{i",{"_index":3257,"t":{},"b":{"5":{},"10":{}}}],["v_{i1,0}^{3d",{"_index":5984,"t":{},"b":{"13":{}}}],["v_{i1,j+1}^{3d",{"_index":5992,"t":{},"b":{"13":{}}}],["v_{i1,j}^{3d",{"_index":5989,"t":{},"b":{"13":{}}}],["v_{i1,m}^{3d",{"_index":5981,"t":{},"b":{"13":{}}}],["v_{i1}^{2d",{"_index":5978,"t":{},"b":{"13":{}}}],["v_{i2,0}^{3d",{"_index":5985,"t":{},"b":{"13":{}}}],["v_{i2,j+1}^{3d",{"_index":5993,"t":{},"b":{"13":{}}}],["v_{i2,j}^{3d",{"_index":5990,"t":{},"b":{"13":{}}}],["v_{i2,m}^{3d",{"_index":5982,"t":{},"b":{"13":{}}}],["v_{i2}^{2d",{"_index":5979,"t":{},"b":{"13":{}}}],["v_{i3,0}^{3d",{"_index":5986,"t":{},"b":{"13":{}}}],["v_{i3,j+1}^{3d",{"_index":5994,"t":{},"b":{"13":{}}}],["v_{i3,j}^{3d",{"_index":5991,"t":{},"b":{"13":{}}}],["v_{i3,m}^{3d",{"_index":5983,"t":{},"b":{"13":{}}}],["v_{i3}^{2d",{"_index":5980,"t":{},"b":{"13":{}}}],["v_{i}^{2d",{"_index":5958,"t":{},"b":{"13":{}}}],["v_{k+1",{"_index":12370,"t":{},"b":{"50":{}}}],["v_{m_v}\\phi_{m_v",{"_index":11407,"t":{},"b":{"45":{}}}],["v_{|k",{"_index":3816,"t":{},"b":{"11":{},"45":{}}}],["va",{"_index":8064,"t":{},"b":{"15":{},"22":{},"45":{}}}],["va(0",{"_index":8072,"t":{},"b":{"15":{}}}],["va(mh",{"_index":11612,"t":{},"b":{"45":{}}}],["va(vh",{"_index":8071,"t":{},"b":{"15":{},"22":{}}}],["val",{"_index":797,"t":{},"b":{"3":{},"4":{},"20":{}}}],["val(0,0,op_di",{"_index":2648,"t":{},"b":{"4":{}}}],["val(0,1,op_dx",{"_index":2644,"t":{},"b":{"4":{}}}],["val(1,0,op_di",{"_index":2649,"t":{},"b":{"4":{}}}],["val(1,1,op_dx",{"_index":2645,"t":{},"b":{"4":{}}}],["val(2,0,op_di",{"_index":2650,"t":{},"b":{"4":{}}}],["val(2,1,op_dx",{"_index":2646,"t":{},"b":{"4":{}}}],["val(i,j,k",{"_index":2579,"t":{},"b":{"4":{}}}],["val.alway",{"_index":5581,"t":{},"b":{"13":{}}}],["valeur",{"_index":13906,"t":{},"b":{"60":{},"76":{}}}],["valgrind",{"_index":10056,"t":{},"b":{"35":{}}}],["valid",{"_index":1146,"t":{},"b":{"3":{},"5":{},"13":{},"35":{}}}],["valu",{"_index":529,"t":{"39":{}},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"27":{},"35":{},"37":{},"39":{},"40":{},"41":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"60":{},"61":{},"62":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["value.if",{"_index":5600,"t":{},"b":{"13":{}}}],["vanish",{"_index":3714,"t":{},"b":{"10":{}}}],["var",{"_index":12577,"t":{},"b":{"52":{},"60":{}}}],["var^2",{"_index":13883,"t":{},"b":{"60":{}}}],["varargin",{"_index":14679,"t":{},"b":{"71":{}}}],["varea",{"_index":4869,"t":{},"b":{"11":{}}}],["varea(0",{"_index":4873,"t":{},"b":{"11":{}}}],["varepsilon",{"_index":562,"t":{},"b":{"3":{},"11":{},"13":{},"60":{},"73":{}}}],["varepsilon<0",{"_index":13473,"t":{},"b":{"54":{}}}],["varepsilon>0",{"_index":13470,"t":{},"b":{"54":{},"60":{}}}],["varepsilon_{ij",{"_index":10666,"t":{},"b":{"40":{}}}],["varepsilon_{ij}(\\mathbf{v",{"_index":10772,"t":{},"b":{"40":{}}}],["varepsilon_{ij}(u",{"_index":10654,"t":{},"b":{"40":{}}}],["varepsilon||\\nabla",{"_index":567,"t":{},"b":{"3":{}}}],["varf",{"_index":634,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"11":{},"15":{},"20":{},"21":{},"22":{},"25":{},"26":{},"36":{},"37":{},"38":{},"39":{},"42":{},"45":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"60":{},"62":{},"68":{},"70":{},"74":{},"76":{},"77":{},"80":{}}}],["varf(varfnam",{"_index":2994,"t":{},"b":{"5":{},"7":{},"10":{}}}],["varfaprec",{"_index":3287,"t":{},"b":{"5":{},"10":{}}}],["varfeprec",{"_index":3280,"t":{},"b":{"5":{},"10":{}}}],["varfname([u",{"_index":3160,"t":{},"b":{"5":{}}}],["varfname(u,v",{"_index":2997,"t":{},"b":{"5":{},"7":{},"10":{}}}],["varfprec",{"_index":3173,"t":{},"b":{"5":{},"10":{}}}],["varfprecc",{"_index":3415,"t":{},"b":{"5":{}}}],["varfrh",{"_index":3165,"t":{},"b":{"5":{}}}],["vari",{"_index":5503,"t":{},"b":{"13":{},"61":{},"79":{}}}],["variabl",{"_index":487,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"35":{},"37":{},"41":{},"45":{},"49":{},"51":{},"55":{},"56":{},"59":{},"60":{},"65":{},"70":{},"71":{},"75":{},"76":{},"81":{}}}],["variableslogo",{"_index":13740,"t":{"55":{}},"b":{}}],["variant",{"_index":3237,"t":{},"b":{"5":{},"8":{},"9":{},"15":{}}}],["variat",{"_index":333,"t":{"50":{}},"b":{"2":{},"3":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"16":{},"20":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"50":{},"60":{},"61":{},"62":{},"64":{},"68":{},"69":{},"70":{},"72":{},"75":{},"76":{},"79":{}}}],["varieti",{"_index":3487,"t":{},"b":{"7":{},"12":{}}}],["variou",{"_index":3194,"t":{},"b":{"5":{},"7":{},"10":{},"16":{},"35":{},"37":{}}}],["varphi",{"_index":11916,"t":{},"b":{"48":{},"62":{},"65":{},"72":{}}}],["varphi(x",{"_index":11915,"t":{},"b":{"48":{},"65":{},"72":{}}}],["varphi_",{"_index":14761,"t":{},"b":{"72":{}}}],["varphi_0",{"_index":11960,"t":{},"b":{"48":{}}}],["varphi_0(0.99",{"_index":11994,"t":{},"b":{"48":{}}}],["varphi_0+c\\varphi_1",{"_index":11985,"t":{},"b":{"48":{}}}],["varphi_0|_{\\gamma_1",{"_index":11979,"t":{},"b":{"48":{}}}],["varphi_0|_{\\gamma_2",{"_index":11981,"t":{},"b":{"48":{}}}],["varphi_0|_{p",{"_index":11988,"t":{},"b":{"48":{}}}],["varphi_1",{"_index":11962,"t":{},"b":{"48":{}}}],["varphi_1(0.99",{"_index":11995,"t":{},"b":{"48":{}}}],["varphi_1|_{\\gamma_1",{"_index":11983,"t":{},"b":{"48":{}}}],["varphi_1|_{\\gamma_2",{"_index":11984,"t":{},"b":{"48":{}}}],["varphi_1|_{p",{"_index":11992,"t":{},"b":{"48":{}}}],["varphi_c",{"_index":11959,"t":{},"b":{"48":{}}}],["varphi_e|^2",{"_index":14769,"t":{},"b":{"72":{}}}],["varphi_i",{"_index":11914,"t":{},"b":{"48":{}}}],["varphi_i\\nonumb",{"_index":11450,"t":{},"b":{"45":{}}}],["varphi_i\\qquad",{"_index":11448,"t":{},"b":{"45":{}}}],["varphi_x(t",{"_index":5187,"t":{},"b":{"13":{}}}],["varphi_x(t),\\varphi_y(t",{"_index":5192,"t":{},"b":{"13":{}}}],["varphi_y(t",{"_index":5188,"t":{},"b":{"13":{}}}],["varphi_{i}\\;\\text{on",{"_index":11919,"t":{},"b":{"48":{}}}],["varphi|_",{"_index":11945,"t":{},"b":{"48":{}}}],["varphi|_{\\gamma",{"_index":14710,"t":{},"b":{"72":{}}}],["varphi|_{\\gamma_1",{"_index":11973,"t":{},"b":{"48":{},"72":{}}}],["varphi|_{\\gamma_{\\infti",{"_index":11947,"t":{},"b":{"48":{}}}],["varphi}{\\partial\\boldsymbol{n",{"_index":14167,"t":{},"b":{"62":{}}}],["varrow",{"_index":13661,"t":{},"b":{"54":{}}}],["varu1",{"_index":10314,"t":{},"b":{"37":{}}}],["varu2",{"_index":10274,"t":{},"b":{"37":{}}}],["vb",{"_index":9284,"t":{},"b":{"22":{}}}],["vb(0",{"_index":9287,"t":{},"b":{"22":{}}}],["vb1([u1",{"_index":4855,"t":{},"b":{"11":{}}}],["vb2([v1",{"_index":4859,"t":{},"b":{"11":{}}}],["vbc",{"_index":9557,"t":{},"b":{"26":{}}}],["vbc(0",{"_index":9644,"t":{},"b":{"26":{}}}],["vbord",{"_index":1996,"t":{},"b":{"3":{},"20":{}}}],["vbord(0",{"_index":1998,"t":{},"b":{"3":{},"20":{}}}],["vdebug",{"_index":7690,"t":{},"b":{"15":{},"26":{}}}],["vdj",{"_index":11799,"t":{},"b":{"47":{}}}],["vdj(0",{"_index":11811,"t":{},"b":{"47":{}}}],["vdot",{"_index":978,"t":{},"b":{"3":{},"13":{}}}],["vdx(u",{"_index":14931,"t":{},"b":{"74":{}}}],["vdx(vh",{"_index":14940,"t":{},"b":{"74":{}}}],["vdy(u",{"_index":14933,"t":{},"b":{"74":{}}}],["vdy(vh",{"_index":14942,"t":{},"b":{"74":{}}}],["vec",{"_index":4199,"t":{},"b":{"11":{},"76":{}}}],["vector",{"_index":518,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"20":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"48":{},"50":{},"51":{},"53":{},"54":{},"56":{},"60":{},"62":{},"64":{},"65":{},"68":{},"71":{},"72":{},"76":{},"77":{},"80":{}}}],["vectori",{"_index":1931,"t":{},"b":{"3":{},"4":{},"5":{},"11":{},"16":{},"19":{},"27":{},"51":{},"54":{},"60":{}}}],["vectors(int[int",{"_index":7980,"t":{},"b":{"15":{}}}],["vectorx.n",{"_index":13869,"t":{},"b":{"60":{}}}],["vectorx[t",{"_index":13871,"t":{},"b":{"60":{}}}],["vectory[t",{"_index":13872,"t":{},"b":{"60":{}}}],["vectthree{(u_h)_x}{(u_h)_y}{(u_h)_z",{"_index":4081,"t":{},"b":{"11":{}}}],["vectthree{(v_h)_x}{(v_h)_y}{(v_h)_z",{"_index":4082,"t":{},"b":{"11":{}}}],["vectthree{\\alpha^1_{k}}{\\alpha^2_{k}}{\\alpha^3_{k",{"_index":3920,"t":{},"b":{"11":{}}}],["vectthree{\\alpha_{k}}{\\beta_{k}}{\\gamma_{k",{"_index":4059,"t":{},"b":{"11":{}}}],["vectthree{\\beta^1_{k}}{\\beta^2_{k}}{\\beta^3_{k}}\\times\\vectthree{x}{y}{z",{"_index":3943,"t":{},"b":{"11":{}}}],["vectthree{\\p",{"_index":3946,"t":{},"b":{"11":{}}}],["vectthree{x",{"_index":6395,"t":{},"b":{"13":{}}}],["vecttwo{\\alpha^1_{k}}{\\alpha^2_{k",{"_index":3916,"t":{},"b":{"11":{}}}],["vecttwo{\\alpha_{k}}{\\beta_{k",{"_index":2463,"t":{},"b":{"4":{},"11":{}}}],["vecttwo{uxh}{uyh",{"_index":4048,"t":{},"b":{"11":{}}}],["vecttwo{vxh}{vyh",{"_index":4050,"t":{},"b":{"11":{}}}],["vec{",{"_index":12410,"t":{},"b":{"51":{}}}],["vec{h}(\\rho,\\phi,z",{"_index":12428,"t":{},"b":{"51":{}}}],["vec{n}(x,i",{"_index":11834,"t":{},"b":{"48":{}}}],["vedgecount",{"_index":4882,"t":{},"b":{"11":{},"48":{}}}],["vedgecount(0",{"_index":4885,"t":{},"b":{"11":{},"48":{}}}],["veloc",{"_index":2910,"t":{},"b":{"4":{},"25":{},"41":{},"42":{},"45":{},"54":{},"61":{},"66":{},"73":{},"74":{},"77":{},"78":{}}}],["venant",{"_index":11658,"t":{},"b":{"46":{}}}],["vendor",{"_index":3466,"t":{},"b":{"7":{}}}],["vep",{"_index":572,"t":{},"b":{"3":{},"15":{},"20":{},"26":{},"45":{},"54":{}}}],["vera",{"_index":9902,"t":{},"b":{"34":{}}}],["verb",{"_index":8629,"t":{},"b":{"20":{},"42":{}}}],["verbos",{"_index":680,"t":{},"b":{"3":{},"5":{},"9":{},"13":{},"15":{},"18":{},"20":{},"24":{},"26":{},"35":{},"39":{},"41":{},"42":{},"45":{},"48":{},"54":{},"55":{},"61":{},"67":{},"72":{},"73":{},"74":{},"79":{}}}],["veri",{"_index":886,"t":{},"b":{"3":{},"4":{},"7":{},"8":{},"9":{},"11":{},"13":{},"15":{},"19":{},"26":{},"40":{},"46":{},"60":{},"68":{},"70":{},"72":{},"76":{},"77":{},"80":{}}}],["verif",{"_index":4760,"t":{},"b":{"11":{},"26":{},"74":{}}}],["verifi",{"_index":7122,"t":{},"b":{"13":{},"21":{},"54":{}}}],["verlag",{"_index":81,"t":{},"b":{"2":{}}}],["versatil",{"_index":9869,"t":{},"b":{"33":{}}}],["version",{"_index":163,"t":{"36":{}},"b":{"2":{},"3":{},"10":{},"11":{},"12":{},"13":{},"15":{},"19":{},"20":{},"32":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"50":{},"54":{},"55":{},"68":{},"72":{}}}],["version).ex",{"_index":9936,"t":{},"b":{"35":{}}}],["versu",{"_index":8942,"t":{},"b":{"21":{},"79":{}}}],["vert",{"_index":929,"t":{},"b":{"3":{}}}],["vert(rr*nn",{"_index":6058,"t":{},"b":{"13":{}}}],["vert(t",{"_index":6054,"t":{},"b":{"13":{}}}],["vert\\nabla",{"_index":1357,"t":{},"b":{"3":{}}}],["vertex",{"_index":2212,"t":{},"b":{"4":{},"11":{},"13":{},"48":{},"76":{}}}],["vertex1",{"_index":6918,"t":{},"b":{"13":{}}}],["vertex1_1(int",{"_index":2191,"t":{},"b":{"4":{}}}],["vertex1_ne(int",{"_index":2193,"t":{},"b":{"4":{}}}],["vertex1_nq(int",{"_index":2205,"t":{},"b":{"4":{}}}],["vertex1_nt(int",{"_index":2198,"t":{},"b":{"4":{}}}],["vertex2",{"_index":6919,"t":{},"b":{"13":{}}}],["vertex2_1(int",{"_index":2192,"t":{},"b":{"4":{}}}],["vertex2_ne(int",{"_index":2194,"t":{},"b":{"4":{}}}],["vertex2_nq(int",{"_index":2206,"t":{},"b":{"4":{}}}],["vertex2_nt(int",{"_index":2199,"t":{},"b":{"4":{}}}],["vertex3",{"_index":6920,"t":{},"b":{"13":{}}}],["vertex3_1(int",{"_index":2197,"t":{},"b":{"4":{}}}],["vertex3_nq(int",{"_index":2207,"t":{},"b":{"4":{}}}],["vertex3_nt(int",{"_index":2200,"t":{},"b":{"4":{}}}],["vertex4",{"_index":6921,"t":{},"b":{"13":{}}}],["vertex4_1(int",{"_index":2204,"t":{},"b":{"4":{}}}],["vertex4_nq(int",{"_index":2208,"t":{},"b":{"4":{}}}],["vertex](int",{"_index":2213,"t":{},"b":{"4":{}}}],["vertex_1(int",{"_index":2214,"t":{},"b":{"4":{}}}],["vertex_nvg(int",{"_index":2216,"t":{},"b":{"4":{}}}],["vertex_nvse(int",{"_index":2239,"t":{},"b":{"4":{}}}],["vertex_nvsq(int",{"_index":2251,"t":{},"b":{"4":{}}}],["vertex_nvst(int",{"_index":2246,"t":{},"b":{"4":{}}}],["vertex_nvsv(int",{"_index":2234,"t":{},"b":{"4":{}}}],["vertexgeometry_1(int",{"_index":2215,"t":{},"b":{"4":{}}}],["vertexgeometry_nvg(int",{"_index":2217,"t":{},"b":{"4":{}}}],["vertexongeometricvertex",{"_index":2211,"t":{},"b":{"4":{}}}],["vertexonsupportedg",{"_index":2236,"t":{},"b":{"4":{}}}],["vertexonsupportquadrilater",{"_index":2250,"t":{},"b":{"4":{}}}],["vertexonsupporttriangl",{"_index":2242,"t":{},"b":{"4":{}}}],["vertexonsupportvertex",{"_index":2232,"t":{},"b":{"4":{}}}],["vertexsupport_1(int",{"_index":2233,"t":{},"b":{"4":{}}}],["vertexsupport_nvsv(int",{"_index":2235,"t":{},"b":{"4":{}}}],["vertic",{"_index":2179,"t":{},"b":{"4":{},"11":{},"13":{},"14":{},"21":{},"40":{},"42":{},"48":{},"49":{},"51":{},"54":{},"62":{},"64":{},"69":{},"72":{},"76":{}}}],["vertices.tru",{"_index":5578,"t":{},"b":{"13":{}}}],["vertices](int",{"_index":2180,"t":{},"b":{"4":{}}}],["veta(0",{"_index":12298,"t":{},"b":{"48":{}}}],["veta(unus",{"_index":12294,"t":{},"b":{"48":{}}}],["vetak",{"_index":4900,"t":{},"b":{"11":{}}}],["vetak(0",{"_index":4906,"t":{},"b":{"11":{}}}],["vextex",{"_index":5276,"t":{},"b":{"13":{}}}],["vf",{"_index":15113,"t":{},"b":{"76":{}}}],["vfmass1d(p",{"_index":10390,"t":{},"b":{"37":{}}}],["vfmass1d(sh",{"_index":10393,"t":{},"b":{"37":{}}}],["vg",{"_index":4443,"t":{},"b":{"11":{}}}],["vgamma",{"_index":1392,"t":{},"b":{"3":{}}}],["vgamma(0",{"_index":1394,"t":{},"b":{"3":{}}}],["vh",{"_index":617,"t":{},"b":{"3":{},"4":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"50":{},"51":{},"54":{},"55":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{}}}],["vh(0,i",{"_index":2955,"t":{},"b":{"4":{}}}],["vh([x",{"_index":4352,"t":{},"b":{"11":{}}}],["vh(it1",{"_index":2956,"t":{},"b":{"4":{}}}],["vh(th",{"_index":1374,"t":{},"b":{"3":{},"4":{},"10":{},"11":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"48":{},"50":{},"51":{},"55":{},"56":{},"60":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"72":{},"74":{},"75":{},"76":{},"79":{},"80":{},"81":{}}}],["vh(th,[p1,p1,p1",{"_index":6176,"t":{},"b":{"13":{}}}],["vh(th,p1",{"_index":2823,"t":{},"b":{"4":{},"13":{},"21":{},"24":{},"61":{},"71":{}}}],["vh(th,p1);//p1,p2,p0,p1dc,p2dc",{"_index":15205,"t":{},"b":{"77":{}}}],["vh(th,p1dc",{"_index":15183,"t":{},"b":{"77":{}}}],["vh(th,p2",{"_index":14606,"t":{},"b":{"70":{}}}],["vh(th3",{"_index":7168,"t":{},"b":{"13":{},"22":{},"25":{}}}],["vh(th[mpirank",{"_index":7478,"t":{},"b":{"15":{}}}],["vh(thinit",{"_index":7069,"t":{},"b":{"13":{}}}],["vh*convect([u1,v1",{"_index":14508,"t":{},"b":{"67":{}}}],["vh*f",{"_index":12151,"t":{},"b":{"48":{}}}],["vh,vo,u1",{"_index":15207,"t":{},"b":{"77":{}}}],["vh.ndof",{"_index":2028,"t":{},"b":{"3":{},"20":{},"22":{},"50":{}}}],["vh.ndofk",{"_index":2954,"t":{},"b":{"4":{}}}],["vh0",{"_index":5030,"t":{},"b":{"11":{},"55":{}}}],["vh0(th",{"_index":13741,"t":{},"b":{"55":{}}}],["vh0(th[0",{"_index":5029,"t":{},"b":{"11":{}}}],["vh1",{"_index":5032,"t":{},"b":{"11":{},"13":{},"38":{},"40":{}}}],["vh1(th,p1",{"_index":10881,"t":{},"b":{"40":{}}}],["vh1(th1",{"_index":6983,"t":{},"b":{"13":{},"38":{}}}],["vh1(th[1",{"_index":5031,"t":{},"b":{"11":{}}}],["vh2",{"_index":2975,"t":{},"b":{"4":{},"11":{},"13":{},"15":{},"22":{},"25":{},"38":{},"61":{}}}],["vh2(th",{"_index":2974,"t":{},"b":{"4":{},"11":{},"22":{},"61":{}}}],["vh2(th0",{"_index":9341,"t":{},"b":{"25":{}}}],["vh2(th2",{"_index":6848,"t":{},"b":{"13":{},"15":{},"25":{}}}],["vh2(th2,p1",{"_index":10474,"t":{},"b":{"38":{}}}],["vh3",{"_index":7040,"t":{},"b":{"13":{}}}],["vh3(th3",{"_index":7039,"t":{},"b":{"13":{}}}],["vh3p1",{"_index":7044,"t":{},"b":{"13":{}}}],["vh3p1(th3",{"_index":7043,"t":{},"b":{"13":{}}}],["vh4",{"_index":4944,"t":{},"b":{"11":{}}}],["vh4(th4",{"_index":4943,"t":{},"b":{"11":{}}}],["vh4^t",{"_index":4954,"t":{},"b":{"11":{}}}],["vh<complex",{"_index":8771,"t":{},"b":{"21":{},"60":{},"63":{},"81":{}}}],["vh<complex>[int",{"_index":13943,"t":{},"b":{"60":{}}}],["vh[int",{"_index":7577,"t":{},"b":{"15":{},"21":{},"39":{},"51":{},"60":{},"62":{}}}],["vh^t",{"_index":4957,"t":{},"b":{"11":{}}}],["vh_i",{"_index":3515,"t":{},"b":{"8":{},"10":{}}}],["vh_i)_{i",{"_index":3508,"t":{},"b":{"8":{}}}],["vhc",{"_index":7602,"t":{},"b":{"15":{},"26":{}}}],["vhc(thc",{"_index":9430,"t":{},"b":{"26":{}}}],["vhg",{"_index":9427,"t":{},"b":{"26":{}}}],["vhg(thg",{"_index":9426,"t":{},"b":{"26":{}}}],["vhi",{"_index":7652,"t":{},"b":{"15":{},"26":{},"54":{}}}],["vhi(thi,p1",{"_index":9447,"t":{},"b":{"26":{}}}],["vhi[int",{"_index":7655,"t":{},"b":{"15":{},"26":{}}}],["vhii",{"_index":9457,"t":{},"b":{"26":{}}}],["vhii(thii",{"_index":9456,"t":{},"b":{"26":{}}}],["vhj",{"_index":11807,"t":{},"b":{"47":{}}}],["vhj(vh",{"_index":11815,"t":{},"b":{"47":{}}}],["vhname",{"_index":2996,"t":{},"b":{"5":{},"7":{},"10":{}}}],["vhother",{"_index":7480,"t":{},"b":{"15":{}}}],["vhother(th[1",{"_index":7479,"t":{},"b":{"15":{}}}],["vhphi",{"_index":12507,"t":{},"b":{"51":{}}}],["vhphi*hphi",{"_index":12554,"t":{},"b":{"51":{}}}],["vhr",{"_index":12506,"t":{},"b":{"51":{}}}],["vhr*hr",{"_index":12543,"t":{},"b":{"51":{}}}],["vht",{"_index":3345,"t":{},"b":{"5":{}}}],["vhxi",{"_index":5393,"t":{},"b":{"13":{}}}],["vhxy(thxi",{"_index":5392,"t":{},"b":{"13":{}}}],["vhz",{"_index":12508,"t":{},"b":{"51":{}}}],["vhz*hz",{"_index":12555,"t":{},"b":{"51":{}}}],["vh}_c",{"_index":3738,"t":{},"b":{"10":{}}}],["vi",{"_index":3702,"t":{},"b":{"10":{},"15":{},"16":{},"21":{},"26":{},"29":{},"63":{}}}],["vi^2)*r",{"_index":14231,"t":{},"b":{"63":{}}}],["via",{"_index":1304,"t":{},"b":{"3":{},"7":{},"8":{},"10":{},"32":{},"35":{}}}],["vibranc",{"_index":8568,"t":{},"b":{"19":{},"27":{}}}],["vicin",{"_index":2302,"t":{},"b":{"4":{}}}],["view",{"_index":3313,"t":{},"b":{"5":{},"8":{},"19":{},"36":{},"48":{},"69":{},"71":{}}}],["viewpoint",{"_index":8542,"t":{},"b":{"19":{}}}],["vil3(v",{"_index":9153,"t":{},"b":{"21":{}}}],["vil3(v,i",{"_index":9190,"t":{},"b":{"21":{}}}],["vil6(v",{"_index":9147,"t":{},"b":{"21":{}}}],["vil6(v,i",{"_index":9189,"t":{},"b":{"21":{}}}],["vim",{"_index":9851,"t":{},"b":{"32":{}}}],["vindic",{"_index":12282,"t":{},"b":{"48":{}}}],["vindicator(0",{"_index":12286,"t":{},"b":{"48":{}}}],["vipin",{"_index":155,"t":{},"b":{"2":{}}}],["virtual",{"_index":10237,"t":{},"b":{"37":{},"48":{},"72":{}}}],["viscos",{"_index":10896,"t":{},"b":{"41":{},"66":{},"73":{}}}],["viscosityturbul",{"_index":14119,"t":{},"b":{"61":{}}}],["viscosityturbulence(ep",{"_index":14076,"t":{},"b":{"61":{}}}],["viscou",{"_index":339,"t":{},"b":{"2":{},"42":{},"74":{}}}],["visibl",{"_index":10830,"t":{},"b":{"40":{}}}],["visit",{"_index":1897,"t":{},"b":{"3":{},"19":{},"61":{}}}],["visitor",{"_index":13983,"t":{},"b":{"61":{}}}],["viso",{"_index":7186,"t":{},"b":{"13":{},"19":{},"27":{},"48":{},"54":{},"77":{}}}],["viso(0:viso.n",{"_index":8583,"t":{},"b":{"19":{},"27":{}}}],["viso(21",{"_index":12242,"t":{},"b":{"48":{}}}],["viso(31",{"_index":8579,"t":{},"b":{"19":{},"27":{}}}],["viso,cmm",{"_index":15232,"t":{},"b":{"77":{}}}],["viso,th);//to",{"_index":7187,"t":{},"b":{"13":{}}}],["viso.n",{"_index":8580,"t":{},"b":{"19":{},"27":{},"48":{}}}],["viso[i",{"_index":8581,"t":{},"b":{"19":{},"27":{},"48":{}}}],["vista",{"_index":5106,"t":{},"b":{"12":{}}}],["visual",{"_index":2171,"t":{},"b":{"3":{},"11":{},"13":{},"19":{},"20":{},"22":{},"25":{},"27":{},"29":{},"36":{},"70":{},"71":{},"76":{}}}],["visualis",{"_index":6863,"t":{},"b":{"13":{},"36":{}}}],["visualizationlogo",{"_index":8505,"t":{"19":{},"27":{}},"b":{}}],["vit",{"_index":7143,"t":{},"b":{"13":{}}}],["vit[2",{"_index":7145,"t":{},"b":{"13":{}}}],["vizual",{"_index":6965,"t":{},"b":{"13":{}}}],["vizualis",{"_index":6957,"t":{},"b":{"13":{}}}],["vl",{"_index":9282,"t":{},"b":{"22":{}}}],["vl(0",{"_index":9286,"t":{},"b":{"22":{}}}],["vlaplacian",{"_index":13907,"t":{},"b":{"60":{}}}],["vlaplacian(uh",{"_index":13744,"t":{},"b":{"55":{},"60":{}}}],["vm",{"_index":11599,"t":{},"b":{"45":{},"50":{},"81":{}}}],["vm(0",{"_index":14936,"t":{},"b":{"74":{}}}],["vm(mh",{"_index":11610,"t":{},"b":{"45":{}}}],["vm(unus",{"_index":14929,"t":{},"b":{"74":{}}}],["vm(vh",{"_index":12382,"t":{},"b":{"50":{}}}],["vmass",{"_index":4833,"t":{},"b":{"11":{},"37":{},"46":{},"68":{}}}],["vmass(vh",{"_index":4836,"t":{},"b":{"11":{},"37":{},"46":{},"68":{}}}],["vmeshsizen",{"_index":4879,"t":{},"b":{"11":{},"48":{}}}],["vmeshsizen(0",{"_index":4886,"t":{},"b":{"11":{},"48":{}}}],["vn",{"_index":11718,"t":{},"b":{"46":{}}}],["vn)i",{"_index":6943,"t":{},"b":{"13":{}}}],["vn)x",{"_index":6942,"t":{},"b":{"13":{}}}],["vn)z",{"_index":6944,"t":{},"b":{"13":{}}}],["vnvc",{"_index":1865,"t":{},"b":{"3":{},"20":{}}}],["vo",{"_index":15227,"t":{},"b":{"77":{}}}],["vobj",{"_index":1863,"t":{},"b":{"3":{},"20":{}}}],["void",{"_index":2561,"t":{},"b":{"4":{},"18":{}}}],["voisinag",{"_index":12618,"t":{},"b":{"53":{}}}],["vol",{"_index":33,"t":{},"b":{"2":{},"3":{},"13":{},"20":{},"30":{}}}],["vol(b",{"_index":6157,"t":{},"b":{"13":{}}}],["vold",{"_index":14430,"t":{},"b":{"66":{},"74":{},"79":{},"80":{}}}],["vold))/th.area",{"_index":14974,"t":{},"b":{"74":{}}}],["vold*w/dt",{"_index":15319,"t":{},"b":{"79":{}}}],["volr11",{"_index":5940,"t":{},"b":{"13":{},"24":{}}}],["volt",{"_index":11938,"t":{},"b":{"48":{}}}],["voltet",{"_index":6356,"t":{},"b":{"13":{},"48":{}}}],["volum",{"_index":1519,"t":{},"b":{"3":{},"4":{},"13":{},"14":{},"15":{},"20":{},"24":{},"30":{},"37":{},"51":{},"53":{},"55":{},"65":{},"67":{}}}],["volume(lb",{"_index":1864,"t":{},"b":{"3":{},"20":{}}}],["volume(x",{"_index":1820,"t":{},"b":{"3":{},"20":{}}}],["von1",{"_index":11593,"t":{},"b":{"45":{}}}],["vonmis",{"_index":12628,"t":{},"b":{"53":{}}}],["vonu1",{"_index":11607,"t":{},"b":{"45":{}}}],["vonu1(0",{"_index":11617,"t":{},"b":{"45":{}}}],["vonu2",{"_index":11608,"t":{},"b":{"45":{}}}],["vonu2(0",{"_index":11619,"t":{},"b":{"45":{}}}],["voronoi",{"_index":5117,"t":{},"b":{"12":{},"76":{}}}],["voronoï’",{"_index":4418,"t":{},"b":{"11":{}}}],["vortex",{"_index":14375,"t":{},"b":{"66":{}}}],["vortic",{"_index":11491,"t":{},"b":{"45":{},"66":{}}}],["vp",{"_index":1380,"t":{},"b":{"3":{},"79":{}}}],["vp(0",{"_index":1390,"t":{},"b":{"3":{}}}],["vp(vh",{"_index":1389,"t":{},"b":{"3":{}}}],["vp[].linfti",{"_index":15327,"t":{},"b":{"79":{}}}],["vpb",{"_index":7537,"t":{},"b":{"15":{},"26":{}}}],["vpb(0",{"_index":7543,"t":{},"b":{"15":{},"26":{}}}],["vpb(whi",{"_index":9568,"t":{},"b":{"26":{}}}],["vpbc",{"_index":9561,"t":{},"b":{"26":{}}}],["vpbc(vhc",{"_index":7601,"t":{},"b":{"15":{},"26":{}}}],["vpbon",{"_index":7540,"t":{},"b":{"15":{},"26":{}}}],["vpbon(0",{"_index":7542,"t":{},"b":{"15":{},"26":{}}}],["vpbon10onli",{"_index":9565,"t":{},"b":{"26":{}}}],["vpbon10only(0",{"_index":9577,"t":{},"b":{"26":{}}}],["vph",{"_index":4032,"t":{},"b":{"11":{}}}],["vpoisson1",{"_index":8994,"t":{},"b":{"21":{}}}],["vpoisson1(0",{"_index":9000,"t":{},"b":{"21":{}}}],["vpoisson1(uh1",{"_index":8998,"t":{},"b":{"21":{}}}],["vpoisson2",{"_index":8995,"t":{},"b":{"21":{}}}],["vpoisson2(0",{"_index":9004,"t":{},"b":{"21":{}}}],["vpoisson2(uh2",{"_index":9002,"t":{},"b":{"21":{}}}],["vr",{"_index":14216,"t":{},"b":{"63":{}}}],["vrecv",{"_index":7574,"t":{},"b":{"15":{},"26":{}}}],["vrhs1(0",{"_index":11634,"t":{},"b":{"45":{}}}],["vrhs1(uu",{"_index":11620,"t":{},"b":{"45":{}}}],["vrhs2(0",{"_index":11635,"t":{},"b":{"45":{}}}],["vrhs2(v2",{"_index":11623,"t":{},"b":{"45":{}}}],["vs",{"_index":4440,"t":{},"b":{"11":{},"69":{}}}],["vsh",{"_index":7964,"t":{},"b":{"15":{}}}],["vstoke",{"_index":9347,"t":{},"b":{"25":{}}}],["vsupport_1(doubl",{"_index":2245,"t":{},"b":{"4":{}}}],["vsupport_nvsq(doubl",{"_index":2254,"t":{},"b":{"4":{}}}],["vsupport_nvst(doubl",{"_index":2249,"t":{},"b":{"4":{}}}],["vthermic",{"_index":4826,"t":{},"b":{"11":{},"68":{}}}],["vthermic(0",{"_index":4840,"t":{},"b":{"11":{}}}],["vthermic(0,vh",{"_index":14542,"t":{},"b":{"68":{}}}],["vthermic(vh",{"_index":4835,"t":{},"b":{"11":{},"68":{}}}],["vthermic0",{"_index":4831,"t":{},"b":{"11":{},"68":{}}}],["vthermic0(0",{"_index":4838,"t":{},"b":{"11":{}}}],["vthermic0(0,vh",{"_index":14541,"t":{},"b":{"68":{}}}],["vtk",{"_index":6871,"t":{},"b":{"13":{},"19":{},"36":{},"53":{}}}],["vtk/vtu",{"_index":13374,"t":{},"b":{"53":{}}}],["vtk_writer",{"_index":13458,"t":{},"b":{"53":{}}}],["vtk_writer_3d",{"_index":13455,"t":{},"b":{"53":{}}}],["vtkaddmesh",{"_index":13456,"t":{},"b":{"53":{}}}],["vtkaddscalar",{"_index":13457,"t":{},"b":{"53":{}}}],["vtkload",{"_index":6870,"t":{},"b":{"13":{},"53":{}}}],["vtkload3",{"_index":6929,"t":{},"b":{"13":{},"53":{}}}],["vtkloads(\"mymesh.vtk",{"_index":6873,"t":{},"b":{"13":{}}}],["vtu",{"_index":10169,"t":{},"b":{"36":{},"53":{}}}],["vu",{"_index":11601,"t":{},"b":{"45":{},"60":{}}}],["vu(xh",{"_index":11613,"t":{},"b":{"45":{}}}],["vu1",{"_index":11603,"t":{},"b":{"45":{}}}],["vu1(mh",{"_index":11614,"t":{},"b":{"45":{}}}],["vu2",{"_index":11605,"t":{},"b":{"45":{}}}],["vu2(mh",{"_index":11615,"t":{},"b":{"45":{}}}],["vun(0",{"_index":12299,"t":{},"b":{"48":{}}}],["vun(unus",{"_index":12296,"t":{},"b":{"48":{}}}],["vv",{"_index":4942,"t":{},"b":{"11":{},"13":{},"15":{},"21":{},"24":{},"25":{},"26":{},"40":{},"42":{},"43":{},"45":{},"46":{},"64":{},"66":{},"78":{},"80":{}}}],["vv(t,0",{"_index":11256,"t":{},"b":{"42":{}}}],["vv)'*a*de(u",{"_index":11707,"t":{},"b":{"46":{}}}],["vv)*2",{"_index":11705,"t":{},"b":{"46":{}}}],["vv)*df2(un",{"_index":11758,"t":{},"b":{"46":{}}}],["vv*",{"_index":11754,"t":{},"b":{"46":{}}}],["vv*((q/k)*n.i",{"_index":11348,"t":{},"b":{"43":{}}}],["vv1",{"_index":11290,"t":{},"b":{"42":{}}}],["vv1)^2",{"_index":11302,"t":{},"b":{"42":{}}}],["vv2",{"_index":2423,"t":{},"b":{"4":{}}}],["vv3",{"_index":2415,"t":{},"b":{"4":{}}}],["vv3(v",{"_index":9160,"t":{},"b":{"21":{}}}],["vv3(v,vv",{"_index":9192,"t":{},"b":{"21":{}}}],["vv3(vil3",{"_index":9165,"t":{},"b":{"21":{}}}],["vv6(v",{"_index":9154,"t":{},"b":{"21":{}}}],["vv6(v,vv",{"_index":9191,"t":{},"b":{"21":{}}}],["vv6(vil3",{"_index":9164,"t":{},"b":{"21":{}}}],["vv6(vil6",{"_index":9162,"t":{},"b":{"21":{}}}],["vvh",{"_index":9343,"t":{},"b":{"25":{}}}],["vvh(th",{"_index":9342,"t":{},"b":{"25":{}}}],["vvv",{"_index":6716,"t":{},"b":{"13":{},"26":{},"46":{}}}],["vvv))*2",{"_index":11708,"t":{},"b":{"46":{}}}],["vvv[].linfti",{"_index":9520,"t":{},"b":{"26":{}}}],["vx",{"_index":3895,"t":{},"b":{"11":{},"61":{}}}],["vxh",{"_index":4036,"t":{},"b":{"11":{}}}],["vy",{"_index":3896,"t":{},"b":{"11":{},"61":{}}}],["vyh",{"_index":4037,"t":{},"b":{"11":{}}}],["vyzh",{"_index":4078,"t":{},"b":{"11":{}}}],["v|^2",{"_index":14729,"t":{},"b":{"72":{}}}],["v|_{c,u\\cdot",{"_index":14408,"t":{},"b":{"66":{}}}],["v}\\in\\r^{\\#{\\mathc",{"_index":3527,"t":{},"b":{"8":{}}}],["v}\\kappa",{"_index":4474,"t":{},"b":{"11":{}}}],["v}\\right",{"_index":3543,"t":{},"b":{"8":{}}}],["v}^t\\,{\\mathbf",{"_index":3540,"t":{},"b":{"8":{}}}],["v}_i",{"_index":3529,"t":{},"b":{"8":{},"10":{}}}],["v}_i)_{1\\l",{"_index":3522,"t":{},"b":{"8":{}}}],["v}_i\\right",{"_index":3547,"t":{},"b":{"8":{}}}],["v}_j",{"_index":3704,"t":{},"b":{"10":{}}}],["v}{\\operatorname{argmin",{"_index":924,"t":{},"b":{"3":{}}}],["v}{\\partial",{"_index":15080,"t":{},"b":{"76":{}}}],["v}{\\partial\\boldsymbol{n}}|_\\gamma",{"_index":14134,"t":{},"b":{"62":{}}}],["v}{\\partial\\boldsymbol{n}}|_{c,u\\cdot",{"_index":14406,"t":{},"b":{"66":{}}}],["v}}{\\p",{"_index":4478,"t":{},"b":{"11":{}}}],["w",{"_index":190,"t":{},"b":{"2":{},"3":{},"11":{},"19":{},"20":{},"21":{},"27":{},"37":{},"39":{},"40":{},"42":{},"45":{},"46":{},"47":{},"50":{},"63":{},"66":{},"68":{},"72":{},"74":{},"76":{},"77":{},"79":{}}}],["w(x,\\mathbf{v",{"_index":10764,"t":{},"b":{"40":{}}}],["w(x,i",{"_index":15105,"t":{},"b":{"76":{}}}],["w(x,y)\\simeq",{"_index":3763,"t":{},"b":{"11":{}}}],["w+\\int_{\\gamma_2}2w\\quad\\foral",{"_index":14767,"t":{},"b":{"72":{}}}],["w,",{"_index":11715,"t":{},"b":{"46":{}}}],["w,v",{"_index":1628,"t":{},"b":{"3":{}}}],["w,v)\\in",{"_index":1618,"t":{},"b":{"3":{}}}],["w/\\partial",{"_index":7349,"t":{},"b":{"14":{}}}],["w0",{"_index":14424,"t":{},"b":{"66":{}}}],["w0(sh",{"_index":14423,"t":{},"b":{"66":{}}}],["w1",{"_index":10325,"t":{},"b":{"37":{},"80":{}}}],["w1*n.i",{"_index":10421,"t":{},"b":{"37":{}}}],["w1*n.x",{"_index":10418,"t":{},"b":{"37":{}}}],["w1l(nm/4",{"_index":12486,"t":{},"b":{"51":{}}}],["w1l(t",{"_index":12468,"t":{},"b":{"51":{}}}],["w1r(t",{"_index":12471,"t":{},"b":{"51":{}}}],["w2",{"_index":10326,"t":{},"b":{"37":{},"71":{},"80":{}}}],["w2(nm",{"_index":12490,"t":{},"b":{"51":{}}}],["w2(t",{"_index":12473,"t":{},"b":{"51":{}}}],["w2*n)+righta",{"_index":14644,"t":{},"b":{"71":{}}}],["w2*n)+rightk",{"_index":14649,"t":{},"b":{"71":{}}}],["w2*n)+topa",{"_index":14643,"t":{},"b":{"71":{}}}],["w2*n)+topk",{"_index":14648,"t":{},"b":{"71":{}}}],["w2*n.i",{"_index":10419,"t":{},"b":{"37":{}}}],["w2*n.x",{"_index":10422,"t":{},"b":{"37":{}}}],["w2,w2",{"_index":14629,"t":{},"b":{"71":{}}}],["w3l(nm/4",{"_index":12488,"t":{},"b":{"51":{}}}],["w3l(t",{"_index":12476,"t":{},"b":{"51":{}}}],["w3r(nm/4",{"_index":12489,"t":{},"b":{"51":{}}}],["w3r(t",{"_index":12478,"t":{},"b":{"51":{}}}],["w4(nm",{"_index":12487,"t":{},"b":{"51":{}}}],["w4(t",{"_index":12480,"t":{},"b":{"51":{}}}],["w64",{"_index":10080,"t":{},"b":{"35":{}}}],["w\\in",{"_index":4788,"t":{},"b":{"11":{},"68":{},"72":{},"79":{}}}],["w\\quad\\foral",{"_index":14736,"t":{},"b":{"72":{}}}],["w\\|_{0,\\omega",{"_index":7341,"t":{},"b":{"14":{}}}],["w\\|_{0,\\omega}^2+\\|\\nabla",{"_index":7355,"t":{},"b":{"14":{}}}],["w\\|_{1,\\omega",{"_index":7354,"t":{},"b":{"14":{}}}],["w^i",{"_index":4745,"t":{},"b":{"11":{}}}],["w^i,\\hat{x}^i_1,...,\\hat{x}^i_d",{"_index":4744,"t":{},"b":{"11":{}}}],["w_0\\phi_0(x,y)+w_1\\phi_1(x,y)+\\cdots+w_{m",{"_index":3764,"t":{},"b":{"11":{}}}],["w_0\\phi_0+w_1\\phi_1+\\cdots+w_{m",{"_index":3772,"t":{},"b":{"11":{}}}],["w_1,w_2",{"_index":4309,"t":{},"b":{"11":{},"72":{}}}],["w_1/\\p",{"_index":3952,"t":{},"b":{"11":{}}}],["w_1\\in",{"_index":4310,"t":{},"b":{"11":{}}}],["w_2/\\p",{"_index":3947,"t":{},"b":{"11":{}}}],["w_2\\in",{"_index":4312,"t":{},"b":{"11":{}}}],["w_3/\\p",{"_index":3949,"t":{},"b":{"11":{}}}],["w_h",{"_index":4926,"t":{},"b":{"11":{},"45":{}}}],["w_h({\\cal",{"_index":5071,"t":{},"b":{"11":{}}}],["w_h\\in",{"_index":4260,"t":{},"b":{"11":{}}}],["w_h\\subset",{"_index":11402,"t":{},"b":{"45":{}}}],["w_h|^2\\d",{"_index":4279,"t":{},"b":{"11":{}}}],["w_i",{"_index":4795,"t":{},"b":{"11":{},"68":{},"73":{}}}],["w_i)_{i",{"_index":3926,"t":{},"b":{"11":{}}}],["w_i/\\p",{"_index":3925,"t":{},"b":{"11":{}}}],["w_i\\in",{"_index":3773,"t":{},"b":{"11":{}}}],["w_j",{"_index":4809,"t":{},"b":{"11":{},"68":{}}}],["w_k",{"_index":3768,"t":{},"b":{"11":{},"76":{}}}],["w_k\\textrm",{"_index":15107,"t":{},"b":{"76":{}}}],["w_{1},w_{2",{"_index":11661,"t":{},"b":{"46":{}}}],["w_{h",{"_index":11413,"t":{},"b":{"45":{}}}],["w_{|\\gamma_{24",{"_index":4789,"t":{},"b":{"11":{},"68":{}}}],["wait",{"_index":683,"t":{},"b":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"53":{},"54":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"74":{},"77":{},"78":{},"80":{},"81":{}}}],["wait(sem",{"_index":8427,"t":{},"b":{"18":{}}}],["wait(smc",{"_index":8486,"t":{},"b":{"18":{}}}],["wait\\n",{"_index":8465,"t":{},"b":{"18":{}}}],["wall",{"_index":7961,"t":{},"b":{"15":{},"51":{},"62":{},"63":{},"66":{},"81":{}}}],["wallabsorpt",{"_index":15424,"t":{},"b":{"81":{}}}],["wallabsorption[].max",{"_index":15429,"t":{},"b":{"81":{}}}],["wallabsorption[].min",{"_index":15428,"t":{},"b":{"81":{}}}],["wallreflexion",{"_index":15423,"t":{},"b":{"81":{}}}],["wallreflexion[].max",{"_index":15427,"t":{},"b":{"81":{}}}],["wallreflexion[].min",{"_index":15426,"t":{},"b":{"81":{}}}],["walton",{"_index":7112,"t":{},"b":{"13":{}}}],["want",{"_index":480,"t":{},"b":{"3":{},"4":{},"9":{},"11":{},"13":{},"15":{},"20":{},"26":{},"35":{},"39":{},"45":{},"53":{},"64":{},"70":{},"72":{},"77":{},"81":{}}}],["warm",{"_index":1287,"t":{},"b":{"3":{},"61":{}}}],["warmstart",{"_index":1281,"t":{},"b":{"3":{},"20":{}}}],["warn",{"_index":649,"t":{},"b":{"3":{},"4":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"21":{},"26":{},"35":{},"45":{},"48":{},"54":{},"58":{},"60":{},"72":{},"76":{}}}],["wasn’t",{"_index":14708,"t":{},"b":{"72":{}}}],["watch",{"_index":5432,"t":{},"b":{"13":{},"40":{},"70":{}}}],["watdd",{"_index":2563,"t":{},"b":{"4":{}}}],["wave",{"_index":3282,"t":{},"b":{"5":{},"8":{},"10":{},"51":{},"62":{},"63":{},"65":{},"81":{}}}],["wavelength",{"_index":3748,"t":{},"b":{"10":{},"51":{}}}],["wavenumb",{"_index":12420,"t":{},"b":{"51":{},"81":{}}}],["way",{"_index":1091,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"19":{},"27":{},"41":{},"46":{},"48":{},"50":{},"60":{},"61":{},"66":{},"69":{},"72":{},"76":{},"79":{}}}],["weak",{"_index":4448,"t":{},"b":{"11":{},"37":{},"45":{},"49":{},"51":{},"70":{},"72":{},"73":{}}}],["web",{"_index":9794,"t":{},"b":{"29":{},"35":{},"72":{}}}],["websit",{"_index":1898,"t":{},"b":{"3":{},"35":{},"60":{}}}],["wedg",{"_index":1567,"t":{},"b":{"3":{},"11":{}}}],["weierstrass",{"_index":6660,"t":{},"b":{"13":{}}}],["weight",{"_index":3608,"t":{},"b":{"8":{},"11":{},"42":{},"64":{}}}],["welcom",{"_index":9746,"t":{"28":{}},"b":{"28":{},"34":{}}}],["weld",{"_index":12303,"t":{},"b":{"49":{}}}],["well",{"_index":728,"t":{},"b":{"3":{},"5":{},"11":{},"12":{},"16":{},"40":{},"65":{},"69":{},"72":{},"74":{},"76":{},"81":{}}}],["we’r",{"_index":10077,"t":{},"b":{"35":{},"81":{}}}],["wg",{"_index":3335,"t":{},"b":{"5":{},"7":{},"10":{},"51":{}}}],["wget",{"_index":10023,"t":{},"b":{"35":{}}}],["wgm",{"_index":12399,"t":{},"b":{"51":{}}}],["wh",{"_index":1439,"t":{},"b":{"3":{},"11":{},"45":{},"46":{},"54":{},"66":{},"67":{},"69":{}}}],["wh(i,j",{"_index":14798,"t":{},"b":{"72":{}}}],["wh(k,i",{"_index":5076,"t":{},"b":{"11":{}}}],["wh(n",{"_index":13940,"t":{},"b":{"60":{}}}],["wh(sh",{"_index":14422,"t":{},"b":{"66":{},"69":{}}}],["wh(th",{"_index":1438,"t":{},"b":{"3":{},"11":{},"37":{},"45":{},"46":{},"67":{}}}],["wh.ndof",{"_index":5074,"t":{},"b":{"11":{}}}],["wh.ndofk",{"_index":5075,"t":{},"b":{"11":{}}}],["wh.nt",{"_index":5073,"t":{},"b":{"11":{}}}],["wh4",{"_index":4960,"t":{},"b":{"11":{}}}],["wh4(th4",{"_index":4947,"t":{},"b":{"11":{}}}],["wh<complex>[int",{"_index":13945,"t":{},"b":{"60":{}}}],["wh[int",{"_index":13941,"t":{},"b":{"60":{}}}],["whatd",{"_index":2603,"t":{},"b":{"4":{}}}],["whatd[k",{"_index":2585,"t":{},"b":{"4":{}}}],["whatd[op_di",{"_index":2647,"t":{},"b":{"4":{}}}],["whatd[op_dx",{"_index":2642,"t":{},"b":{"4":{}}}],["whatd[op_id",{"_index":2623,"t":{},"b":{"4":{}}}],["whatev",{"_index":3500,"t":{},"b":{"8":{}}}],["wheel",{"_index":8563,"t":{},"b":{"19":{},"27":{}}}],["where/you/want/to/have/files/instal",{"_index":10016,"t":{},"b":{"35":{}}}],["wherea",{"_index":3647,"t":{},"b":{"8":{},"48":{}}}],["whether",{"_index":4548,"t":{},"b":{"11":{},"15":{},"65":{}}}],["whi",{"_index":7541,"t":{},"b":{"15":{},"26":{}}}],["whi(thi",{"_index":7536,"t":{},"b":{"15":{},"26":{}}}],["whij",{"_index":7570,"t":{},"b":{"15":{},"26":{}}}],["whij(thij",{"_index":7677,"t":{},"b":{"15":{},"26":{}}}],["while(1",{"_index":5464,"t":{},"b":{"13":{},"21":{},"73":{}}}],["whisper",{"_index":374,"t":{"51":{}},"b":{"2":{},"23":{},"37":{},"51":{}}}],["whitch",{"_index":6537,"t":{},"b":{"13":{}}}],["white",{"_index":8536,"t":{},"b":{"19":{},"54":{}}}],["whith",{"_index":8229,"t":{},"b":{"15":{}}}],["whji",{"_index":9516,"t":{},"b":{"26":{}}}],["whole",{"_index":1631,"t":{},"b":{"3":{},"18":{},"49":{},"65":{}}}],["whose",{"_index":550,"t":{},"b":{"3":{},"5":{},"8":{},"13":{},"18":{},"37":{},"40":{},"42":{},"49":{},"60":{},"72":{}}}],["wi",{"_index":13663,"t":{},"b":{"54":{}}}],["wide",{"_index":8311,"t":{},"b":{"17":{}}}],["widehat",{"_index":2888,"t":{},"b":{"4":{}}}],["width",{"_index":3030,"t":{},"b":{"5":{},"9":{},"13":{},"52":{},"53":{}}}],["wifi",{"_index":14698,"t":{"81":{}},"b":{"71":{},"80":{},"81":{}}}],["wij",{"_index":8790,"t":{},"b":{"21":{}}}],["wij[][0",{"_index":8799,"t":{},"b":{"21":{}}}],["wiley",{"_index":12,"t":{},"b":{"2":{}}}],["wilmott",{"_index":281,"t":{},"b":{"2":{}}}],["wilmott1995",{"_index":280,"t":{},"b":{"2":{},"41":{}}}],["win64",{"_index":9945,"t":{},"b":{"35":{}}}],["wind",{"_index":14444,"t":{},"b":{"67":{}}}],["window",{"_index":2735,"t":{},"b":{"4":{},"12":{},"13":{},"15":{},"18":{},"19":{},"32":{},"35":{},"51":{},"54":{},"70":{}}}],["window64",{"_index":9925,"t":{},"b":{"35":{}}}],["windowindex",{"_index":12492,"t":{},"b":{"51":{},"54":{},"61":{}}}],["wing",{"_index":8334,"t":{},"b":{"18":{},"48":{},"66":{}}}],["wingat",{"_index":451,"t":{},"b":{"2":{}}}],["wise",{"_index":6160,"t":{},"b":{"13":{}}}],["wish",{"_index":14583,"t":{},"b":{"69":{}}}],["within",{"_index":1248,"t":{},"b":{"3":{},"5":{},"7":{},"10":{},"12":{},"15":{},"19":{},"34":{},"48":{},"60":{},"63":{},"66":{},"69":{},"75":{}}}],["withmeti",{"_index":9409,"t":{},"b":{"26":{}}}],["without",{"_index":1147,"t":{},"b":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{},"17":{},"18":{},"21":{},"24":{},"26":{},"35":{},"38":{},"40":{},"45":{},"54":{},"60":{},"66":{},"77":{},"81":{}}}],["withpartitioning.edp",{"_index":8285,"t":{},"b":{"16":{}}}],["withplot",{"_index":9408,"t":{},"b":{"26":{}}}],["withsurfacemesh",{"_index":13376,"t":{},"b":{"53":{}}}],["won’t",{"_index":1759,"t":{},"b":{"3":{},"52":{}}}],["word",{"_index":10498,"t":{},"b":{"39":{},"75":{}}}],["work",{"_index":776,"t":{},"b":{"3":{},"4":{},"5":{},"8":{},"9":{},"13":{},"15":{},"19":{},"30":{},"33":{},"38":{},"39":{},"41":{},"45":{},"48":{},"58":{},"60":{},"62":{},"70":{},"71":{},"72":{},"79":{}}}],["workspac",{"_index":14620,"t":{},"b":{"71":{}}}],["world",{"_index":7384,"t":{},"b":{"15":{},"29":{}}}],["world'\\n",{"_index":9116,"t":{},"b":{"21":{}}}],["wound",{"_index":10362,"t":{},"b":{"37":{}}}],["wp",{"_index":15349,"t":{},"b":{"80":{}}}],["wpii",{"_index":7678,"t":{},"b":{"15":{},"26":{}}}],["wrap",{"_index":1817,"t":{},"b":{"3":{},"15":{},"20":{}}}],["wrapper",{"_index":3486,"t":{},"b":{"7":{},"10":{},"15":{},"35":{}}}],["wright",{"_index":45,"t":{},"b":{"2":{}}}],["write",{"_index":538,"t":{"80":{}},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"26":{},"33":{},"48":{},"51":{},"52":{},"53":{},"64":{},"66":{},"68":{},"69":{},"70":{},"76":{},"80":{},"81":{}}}],["write(sharedata",{"_index":8433,"t":{},"b":{"18":{}}}],["written",{"_index":1613,"t":{},"b":{"3":{},"7":{},"10":{},"11":{},"15":{},"19":{},"33":{},"34":{},"40":{},"41":{},"42":{},"45":{},"52":{},"64":{},"65":{},"70":{},"76":{},"80":{}}}],["wrong",{"_index":1276,"t":{},"b":{"3":{}}}],["wtime",{"_index":9698,"t":{},"b":{"26":{}}}],["ww",{"_index":4969,"t":{},"b":{"11":{}}}],["www.freefem.org/ff++/textmate2",{"_index":10160,"t":{},"b":{"35":{}}}],["wxh",{"_index":4041,"t":{},"b":{"11":{}}}],["wxh,wyh,wzh](10",{"_index":4079,"t":{},"b":{"11":{}}}],["wxh[5",{"_index":4045,"t":{},"b":{"11":{}}}],["wxh[5](0.5,0.5",{"_index":4043,"t":{},"b":{"11":{}}}],["wxh[5](0.5,0.5,0.5",{"_index":4080,"t":{},"b":{"11":{}}}],["wyh](10",{"_index":4042,"t":{},"b":{"11":{}}}],["w}{\\partial",{"_index":7359,"t":{},"b":{"14":{}}}],["wächter",{"_index":15,"t":{},"b":{"2":{}}}],["wächter2006",{"_index":14,"t":{},"b":{"2":{},"3":{}}}],["x",{"_index":484,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"35":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"50":{},"53":{},"54":{},"55":{},"56":{},"58":{},"60":{},"61":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"79":{},"81":{}}}],["x'",{"_index":5402,"t":{},"b":{"13":{}}}],["x(0:vh.ndof",{"_index":2005,"t":{},"b":{"3":{}}}],["x(20",{"_index":524,"t":{},"b":{"3":{}}}],["x(5",{"_index":7732,"t":{},"b":{"15":{},"26":{}}}],["x(\\tau",{"_index":11092,"t":{},"b":{"41":{}}}],["x(t",{"_index":11079,"t":{},"b":{"41":{}}}],["x(t),t",{"_index":11104,"t":{},"b":{"41":{}}}],["x(vh.ndof:2*vh.ndof",{"_index":2006,"t":{},"b":{"3":{}}}],["x(x",{"_index":13401,"t":{},"b":{"53":{},"77":{}}}],["x)*",{"_index":10861,"t":{},"b":{"40":{}}}],["x)/\\sqrt{1+(\\p",{"_index":11858,"t":{},"b":{"48":{}}}],["x)\\cos(\\pi",{"_index":4110,"t":{},"b":{"11":{},"60":{}}}],["x)^2",{"_index":11049,"t":{},"b":{"41":{}}}],["x)^2+(\\p",{"_index":11859,"t":{},"b":{"48":{}}}],["x)^{2}+1",{"_index":12091,"t":{},"b":{"48":{}}}],["x*(dx(vhr",{"_index":12551,"t":{},"b":{"51":{}}}],["x*(eorto*dx(vhphi)*dx(hphi",{"_index":12538,"t":{},"b":{"51":{}}}],["x*(hr*vhr+hphi*vhphi+hz*vhz",{"_index":12525,"t":{},"b":{"51":{}}}],["x*(x",{"_index":6633,"t":{},"b":{"13":{}}}],["x*(y+1i",{"_index":9010,"t":{},"b":{"21":{}}}],["x*0.1",{"_index":9553,"t":{},"b":{"26":{}}}],["x*0.5",{"_index":4940,"t":{},"b":{"11":{}}}],["x*2",{"_index":5924,"t":{},"b":{"13":{},"24":{}}}],["x*3",{"_index":4433,"t":{},"b":{"11":{}}}],["x*cos(i",{"_index":6110,"t":{},"b":{"13":{},"24":{}}}],["x*i",{"_index":4946,"t":{},"b":{"11":{},"15":{},"21":{},"48":{},"76":{}}}],["x*pi",{"_index":6294,"t":{},"b":{"13":{},"24":{},"25":{}}}],["x*r",{"_index":11207,"t":{},"b":{"41":{}}}],["x*rho*sigx*sigy/2",{"_index":11209,"t":{},"b":{"41":{}}}],["x*scale",{"_index":7258,"t":{},"b":{"13":{}}}],["x*sigx^2",{"_index":11208,"t":{},"b":{"41":{}}}],["x*sin(i",{"_index":6111,"t":{},"b":{"13":{},"24":{}}}],["x*t",{"_index":5475,"t":{},"b":{"13":{}}}],["x*x",{"_index":8573,"t":{},"b":{"19":{},"27":{}}}],["x*x+y*i",{"_index":6290,"t":{},"b":{"13":{},"19":{},"27":{}}}],["x+0.2*uu",{"_index":11303,"t":{},"b":{"42":{}}}],["x+1",{"_index":5647,"t":{},"b":{"13":{},"24":{},"48":{}}}],["x+1)*(i",{"_index":12080,"t":{},"b":{"48":{}}}],["x+3)^2",{"_index":15019,"t":{},"b":{"75":{}}}],["x+\\partial",{"_index":7313,"t":{},"b":{"14":{}}}],["x+coef*uu",{"_index":5466,"t":{},"b":{"13":{}}}],["x+i",{"_index":4088,"t":{},"b":{"11":{},"13":{},"48":{}}}],["x+k*\\sin(y*\\pi)/10",{"_index":5443,"t":{},"b":{"13":{}}}],["x+u",{"_index":10824,"t":{},"b":{"40":{}}}],["x+u*coef",{"_index":14280,"t":{},"b":{"64":{}}}],["x+u1*coef",{"_index":10751,"t":{},"b":{"40":{}}}],["x+u1*coef,y+u2*coef,z+u3*coef],label",{"_index":6199,"t":{},"b":{"13":{}}}],["x+u1n",{"_index":10431,"t":{},"b":{"37":{}}}],["x+un",{"_index":11782,"t":{},"b":{"46":{}}}],["x+uu",{"_index":10737,"t":{},"b":{"40":{},"42":{}}}],["x,0,0",{"_index":6585,"t":{},"b":{"13":{}}}],["x,\\lambda,z_u,z_l)\\in\\mathbb{r}^n\\times\\mathbb{r}^m\\times\\mathbb{r}^n\\times\\mathbb{r}^n",{"_index":1025,"t":{},"b":{"3":{}}}],["x,\\quad\\mu\\left(n_y(x,y)+\\p",{"_index":11846,"t":{},"b":{"48":{}}}],["x,\\sigma_{f},\\lambda)\\mapsto\\sigma_{f}\\nabla^{2}f(x)+\\displaystyle{\\sum_{i",{"_index":1129,"t":{},"b":{"3":{}}}],["x,i",{"_index":2764,"t":{},"b":{"4":{},"11":{},"13":{},"21":{},"40":{},"42":{},"43":{},"46":{},"48":{},"76":{}}}],["x,t",{"_index":11080,"t":{},"b":{"41":{}}}],["x,t)\\mapsto",{"_index":11061,"t":{},"b":{"41":{}}}],["x,t)\\rightarrow",{"_index":11082,"t":{},"b":{"41":{}}}],["x,thi",{"_index":5287,"t":{},"b":{"13":{}}}],["x,y):\\;\\frac{1}{0.3^2}(x",{"_index":11926,"t":{},"b":{"48":{}}}],["x,y);\\;x",{"_index":11819,"t":{},"b":{"48":{}}}],["x,y);\\;x^{2}+y^{2}<1",{"_index":11870,"t":{},"b":{"48":{}}}],["x,y)\\delta",{"_index":11838,"t":{},"b":{"48":{}}}],["x,y)\\in",{"_index":4117,"t":{},"b":{"11":{},"40":{},"54":{},"76":{}}}],["x,y)\\left",{"_index":5186,"t":{},"b":{"13":{}}}],["x,y)\\mbox",{"_index":15077,"t":{},"b":{"76":{}}}],["x,y)\\not\\in",{"_index":13511,"t":{},"b":{"54":{}}}],["x,y+\\delta",{"_index":11832,"t":{},"b":{"48":{}}}],["x,y,0",{"_index":6371,"t":{},"b":{"13":{}}}],["x,y,cos(x)^2+sin(y)^2",{"_index":6505,"t":{},"b":{"13":{}}}],["x,y,u(x,i",{"_index":11824,"t":{},"b":{"48":{}}}],["x,y,z",{"_index":6213,"t":{},"b":{"13":{},"64":{}}}],["x,y,z0],orient",{"_index":6454,"t":{},"b":{"13":{}}}],["x,y,z1],orient",{"_index":6456,"t":{},"b":{"13":{}}}],["x,y0,y],orient",{"_index":6449,"t":{},"b":{"13":{}}}],["x,y1,y],orient",{"_index":6451,"t":{},"b":{"13":{}}}],["x/2)^2",{"_index":11885,"t":{},"b":{"48":{}}}],["x/3",{"_index":2947,"t":{},"b":{"4":{}}}],["x/nx",{"_index":7237,"t":{},"b":{"13":{},"21":{}}}],["x0",{"_index":5138,"t":{},"b":{"13":{},"24":{},"48":{},"67":{}}}],["x0)*x",{"_index":5144,"t":{},"b":{"13":{},"24":{}}}],["x0)*x,y0+(y1",{"_index":6429,"t":{},"b":{"13":{}}}],["x0)*x,z0+(z1",{"_index":6426,"t":{},"b":{"13":{}}}],["x0+(x1",{"_index":5143,"t":{},"b":{"13":{},"24":{}}}],["x0+rr",{"_index":14477,"t":{},"b":{"67":{}}}],["x0+rr*cos(t",{"_index":14474,"t":{},"b":{"67":{}}}],["x0,x,y],orient",{"_index":6443,"t":{},"b":{"13":{}}}],["x0i",{"_index":3212,"t":{},"b":{"5":{},"7":{},"10":{}}}],["x1",{"_index":2948,"t":{},"b":{"4":{},"13":{},"24":{}}}],["x1,x,y],orient",{"_index":6446,"t":{},"b":{"13":{}}}],["x10",{"_index":6221,"t":{},"b":{"13":{}}}],["x10)*x",{"_index":6246,"t":{},"b":{"13":{}}}],["x10+(x11",{"_index":6245,"t":{},"b":{"13":{}}}],["x11",{"_index":6222,"t":{},"b":{"13":{}}}],["x20",{"_index":6228,"t":{},"b":{"13":{}}}],["x20)*x",{"_index":6251,"t":{},"b":{"13":{}}}],["x20+(x21",{"_index":6250,"t":{},"b":{"13":{}}}],["x21",{"_index":6229,"t":{},"b":{"13":{}}}],["x30",{"_index":6236,"t":{},"b":{"13":{}}}],["x30)*x",{"_index":6257,"t":{},"b":{"13":{}}}],["x30+(x31",{"_index":6256,"t":{},"b":{"13":{}}}],["x31",{"_index":6237,"t":{},"b":{"13":{}}}],["x86)\\freefem++\\freefem",{"_index":9955,"t":{},"b":{"35":{}}}],["x86)\\freefem++\\freefem++.ex",{"_index":9950,"t":{},"b":{"35":{}}}],["x86_64",{"_index":9990,"t":{},"b":{"35":{}}}],["x<0",{"_index":12158,"t":{},"b":{"48":{}}}],["x<0.5",{"_index":7166,"t":{},"b":{"13":{}}}],["x<0.5?x*nx:(x",{"_index":8795,"t":{},"b":{"21":{}}}],["x[i",{"_index":2030,"t":{},"b":{"3":{},"20":{}}}],["x[i+in[].sum",{"_index":8717,"t":{},"b":{"20":{}}}],["x[i+th.nv",{"_index":2069,"t":{},"b":{"3":{}}}],["x[i+vh.ndof",{"_index":2031,"t":{},"b":{"3":{}}}],["x\\d",{"_index":4280,"t":{},"b":{"11":{},"48":{}}}],["x\\delta",{"_index":11852,"t":{},"b":{"48":{}}}],["x\\in",{"_index":491,"t":{},"b":{"3":{},"14":{},"40":{},"65":{}}}],["x\\in\\gamma",{"_index":14360,"t":{},"b":{"65":{}}}],["x\\in\\mathbb{r}^d,~d",{"_index":14732,"t":{},"b":{"72":{}}}],["x\\in\\mathbb{r}^{n",{"_index":928,"t":{},"b":{"3":{}}}],["x\\in\\omega",{"_index":14993,"t":{},"b":{"75":{}}}],["x\\in\\omega\\subset",{"_index":14312,"t":{},"b":{"65":{}}}],["x\\in\\omega_i",{"_index":12318,"t":{},"b":{"49":{}}}],["x\\le",{"_index":7304,"t":{},"b":{"14":{},"40":{}}}],["x\\leq",{"_index":933,"t":{},"b":{"3":{}}}],["x\\mapsto",{"_index":7286,"t":{},"b":{"14":{},"79":{}}}],["x\\not\\in",{"_index":7278,"t":{},"b":{"14":{}}}],["x\\not\\in\\omega_i",{"_index":12319,"t":{},"b":{"49":{}}}],["x\\partial",{"_index":5519,"t":{},"b":{"13":{},"54":{}}}],["x\\quad",{"_index":7291,"t":{},"b":{"14":{}}}],["x\\right)(x,y)\\delta",{"_index":11843,"t":{},"b":{"48":{}}}],["x\\right)\\delta",{"_index":11851,"t":{},"b":{"48":{}}}],["x\\text{d",{"_index":7338,"t":{},"b":{"14":{},"76":{}}}],["x\\to",{"_index":11862,"t":{},"b":{"48":{}}}],["x^2",{"_index":4341,"t":{},"b":{"11":{},"13":{},"41":{},"48":{},"54":{},"60":{},"65":{},"76":{}}}],["x^2*(1+y)^3",{"_index":13894,"t":{},"b":{"60":{}}}],["x^2*(x",{"_index":11030,"t":{},"b":{"41":{}}}],["x^2*y^3",{"_index":7378,"t":{},"b":{"14":{}}}],["x^2+(y+3)^2)<1.0001",{"_index":15021,"t":{},"b":{"75":{}}}],["x^2+\\partial^2",{"_index":7318,"t":{},"b":{"14":{}}}],["x^2+y^2",{"_index":11875,"t":{},"b":{"48":{},"73":{}}}],["x^2+y^2)*sin(x^2+y^2",{"_index":14771,"t":{},"b":{"72":{}}}],["x^2+y^2)<1.0001",{"_index":15017,"t":{},"b":{"75":{}}}],["x^2+y^2)\\sin(x^2+y^2",{"_index":14764,"t":{},"b":{"72":{}}}],["x^2+y^2<1",{"_index":11826,"t":{},"b":{"48":{}}}],["x^2_1",{"_index":14342,"t":{},"b":{"65":{}}}],["x^2_1}(x),\\cdots,{\\partial^m\\varphi\\over\\parti",{"_index":14309,"t":{},"b":{"65":{}}}],["x^2_2",{"_index":14343,"t":{},"b":{"65":{}}}],["x^2_d",{"_index":14344,"t":{},"b":{"65":{}}}],["x^3",{"_index":15026,"t":{},"b":{"75":{}}}],["x^4",{"_index":10934,"t":{},"b":{"41":{}}}],["x^m",{"_index":11113,"t":{},"b":{"41":{},"61":{},"67":{}}}],["x^m(x)\\approx",{"_index":14011,"t":{},"b":{"61":{}}}],["x^m_d}(x)\\right",{"_index":14310,"t":{},"b":{"65":{}}}],["x^n",{"_index":11518,"t":{},"b":{"45":{}}}],["x^n(x)\\approx",{"_index":11521,"t":{},"b":{"45":{}}}],["x^{2}_{1",{"_index":14715,"t":{},"b":{"72":{}}}],["x^{\\alpha_1}\\parti",{"_index":7360,"t":{},"b":{"14":{}}}],["x_",{"_index":9249,"t":{},"b":{"21":{},"77":{}}}],["x_0+k_m",{"_index":7926,"t":{},"b":{"15":{}}}],["x_0,x_1]\\time",{"_index":5135,"t":{},"b":{"13":{}}}],["x_1",{"_index":3951,"t":{},"b":{"11":{},"41":{},"65":{}}}],["x_1(doubl",{"_index":2181,"t":{},"b":{"4":{}}}],["x_1,\\delta",{"_index":10630,"t":{},"b":{"40":{}}}],["x_1,\\xi_2",{"_index":10623,"t":{},"b":{"40":{}}}],["x_1,x_2,x_3",{"_index":10628,"t":{},"b":{"40":{}}}],["x_1}(x),\\cdots,{\\partial\\varphi\\over\\parti",{"_index":14307,"t":{},"b":{"65":{}}}],["x_2",{"_index":3954,"t":{},"b":{"11":{},"41":{},"65":{}}}],["x_2,\\delta",{"_index":10631,"t":{},"b":{"40":{}}}],["x_2,\\xi_3",{"_index":10624,"t":{},"b":{"40":{}}}],["x_2}{\\p",{"_index":3950,"t":{},"b":{"11":{}}}],["x_3",{"_index":3948,"t":{},"b":{"11":{},"40":{}}}],["x_3}{\\p",{"_index":3953,"t":{},"b":{"11":{}}}],["x_\\tau",{"_index":15159,"t":{},"b":{"77":{}}}],["x_d}(x),{\\partial^2\\varphi\\over\\parti",{"_index":14308,"t":{},"b":{"65":{}}}],["x_h",{"_index":4025,"t":{},"b":{"11":{},"80":{}}}],["x_i",{"_index":498,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"42":{},"64":{},"65":{}}}],["x_i(t",{"_index":11134,"t":{},"b":{"41":{}}}],["x_i)(\\parti",{"_index":10652,"t":{},"b":{"40":{}}}],["x_i)/2",{"_index":10775,"t":{},"b":{"40":{}}}],["x_i)\\approx",{"_index":10653,"t":{},"b":{"40":{}}}],["x_i\\parti",{"_index":14320,"t":{},"b":{"65":{}}}],["x_i|\\delta\\mathbf{x",{"_index":10650,"t":{},"b":{"40":{}}}],["x_i}(\\mathbf{x}((m+1)\\tau",{"_index":11127,"t":{},"b":{"41":{}}}],["x_i}\\frac{\\parti",{"_index":10643,"t":{},"b":{"40":{}}}],["x_i}\\right",{"_index":10648,"t":{},"b":{"40":{}}}],["x_i}{\\p",{"_index":11128,"t":{},"b":{"41":{}}}],["x_j",{"_index":10646,"t":{},"b":{"40":{},"42":{},"64":{},"65":{}}}],["x_j}+\\left(\\frac{\\parti",{"_index":10644,"t":{},"b":{"40":{}}}],["x_l",{"_index":1032,"t":{},"b":{"3":{}}}],["x_nv(doubl",{"_index":2185,"t":{},"b":{"4":{}}}],["x_q",{"_index":4149,"t":{},"b":{"11":{}}}],["x_t",{"_index":15144,"t":{},"b":{"77":{}}}],["x_u",{"_index":1031,"t":{},"b":{"3":{}}}],["x_{0",{"_index":1071,"t":{},"b":{"3":{},"11":{}}}],["x_{1",{"_index":977,"t":{},"b":{"3":{},"13":{}}}],["x_{1}),\\dot",{"_index":987,"t":{},"b":{"3":{}}}],["x_{1}^{h",{"_index":6675,"t":{},"b":{"13":{}}}],["x_{2",{"_index":6691,"t":{},"b":{"13":{}}}],["x_{2}^{2",{"_index":14716,"t":{},"b":{"72":{}}}],["x_{2}^{h",{"_index":6678,"t":{},"b":{"13":{}}}],["x_{\\mu",{"_index":949,"t":{},"b":{"3":{}}}],["x_{\\mu},\\lambda_{\\mu",{"_index":992,"t":{},"b":{"3":{}}}],["x_{\\mu},\\lambda_{\\mu})\\in\\mathbb{r}^{n}\\times\\mathbb{r}^{m",{"_index":966,"t":{},"b":{"3":{}}}],["x_{dt",{"_index":15158,"t":{},"b":{"77":{}}}],["x_{h",{"_index":4005,"t":{},"b":{"11":{},"45":{}}}],["x_{i",{"_index":915,"t":{},"b":{"3":{},"13":{}}}],["x_{i},y_{i",{"_index":5959,"t":{},"b":{"13":{}}}],["x_{i},y_{i},z_{i",{"_index":6684,"t":{},"b":{"13":{}}}],["x_{i}\\leq",{"_index":1077,"t":{},"b":{"3":{}}}],["x_{i}^{\\mathrm{lb}}\\leq",{"_index":1076,"t":{},"b":{"3":{}}}],["x_{i}^{\\mathrm{ub",{"_index":1078,"t":{},"b":{"3":{}}}],["x_{i}^{h},y_{i}^{h},z_{i}^{h",{"_index":6681,"t":{},"b":{"13":{}}}],["x_{l,1",{"_index":982,"t":{},"b":{"3":{}}}],["x_{l,i",{"_index":959,"t":{},"b":{"3":{}}}],["x_{l,n})\\end{matrix}\\right)\\end{split",{"_index":984,"t":{},"b":{"3":{}}}],["x_{l},x_{u}\\in\\mathbb{r}^{n",{"_index":936,"t":{},"b":{"3":{}}}],["x_{l}\\leq",{"_index":932,"t":{},"b":{"3":{}}}],["x_{n_v",{"_index":6729,"t":{},"b":{"13":{}}}],["x_{n})\\end{matrix}\\right",{"_index":980,"t":{},"b":{"3":{}}}],["x_{n})\\right",{"_index":988,"t":{},"b":{"3":{}}}],["x_{ph",{"_index":4008,"t":{},"b":{"11":{}}}],["x_{t",{"_index":15149,"t":{},"b":{"77":{}}}],["x_{u,i",{"_index":956,"t":{},"b":{"3":{}}}],["x_{u}\\right\\rbrace\\end{split",{"_index":934,"t":{},"b":{"3":{}}}],["x_{x",{"_index":11093,"t":{},"b":{"41":{}}}],["x_{x,t}(0",{"_index":11096,"t":{},"b":{"41":{}}}],["x_{x,t}(\\tau",{"_index":11081,"t":{},"b":{"41":{}}}],["xa",{"_index":11566,"t":{},"b":{"45":{}}}],["xc",{"_index":5247,"t":{},"b":{"13":{}}}],["xc[i",{"_index":5261,"t":{},"b":{"13":{}}}],["xcode",{"_index":2745,"t":{},"b":{"4":{},"35":{}}}],["xe",{"_index":11569,"t":{},"b":{"45":{}}}],["xf",{"_index":10007,"t":{},"b":{"35":{}}}],["xh",{"_index":4023,"t":{},"b":{"11":{},"42":{},"45":{},"66":{},"73":{},"80":{}}}],["xh(sh",{"_index":11263,"t":{},"b":{"42":{}}}],["xh(th",{"_index":4019,"t":{},"b":{"11":{},"45":{},"66":{},"73":{},"80":{}}}],["xh[int",{"_index":4038,"t":{},"b":{"11":{}}}],["xi",{"_index":1140,"t":{},"b":{"3":{},"11":{}}}],["xi_1",{"_index":10622,"t":{},"b":{"40":{}}}],["xiao",{"_index":168,"t":{},"b":{"2":{}}}],["xl",{"_index":7248,"t":{},"b":{"13":{},"51":{}}}],["xl)*(1",{"_index":12470,"t":{},"b":{"51":{}}}],["xl)*(t",{"_index":12477,"t":{},"b":{"51":{}}}],["xl+(radius*cos(angl",{"_index":12469,"t":{},"b":{"51":{}}}],["xlb",{"_index":1160,"t":{},"b":{"3":{}}}],["xlb(n",{"_index":1156,"t":{},"b":{"3":{}}}],["xlim",{"_index":14683,"t":{},"b":{"71":{}}}],["xmax",{"_index":5347,"t":{},"b":{"13":{}}}],["xmin",{"_index":5345,"t":{},"b":{"13":{}}}],["xmin,xmax],[ymin,ymax],[zmin,zmax",{"_index":6384,"t":{},"b":{"13":{}}}],["xp",{"_index":5105,"t":{},"b":{"12":{}}}],["xph",{"_index":4030,"t":{},"b":{"11":{}}}],["xph(th,p1",{"_index":4020,"t":{},"b":{"11":{}}}],["xph(th,p1,period",{"_index":4073,"t":{},"b":{"11":{}}}],["xr",{"_index":12457,"t":{},"b":{"51":{}}}],["xub",{"_index":1161,"t":{},"b":{"3":{}}}],["xub(n",{"_index":1157,"t":{},"b":{"3":{}}}],["xveloc",{"_index":11202,"t":{},"b":{"41":{}}}],["xx",{"_index":517,"t":{},"b":{"3":{},"11":{},"13":{},"15":{},"18":{},"21":{},"22":{},"24":{},"26":{},"60":{}}}],["xx(10",{"_index":8545,"t":{},"b":{"19":{},"27":{}}}],["xx(21",{"_index":14088,"t":{},"b":{"61":{}}}],["xx(n",{"_index":13777,"t":{},"b":{"56":{}}}],["xx(n+1",{"_index":9289,"t":{},"b":{"22":{}}}],["xx1",{"_index":6118,"t":{},"b":{"13":{},"24":{}}}],["xx2",{"_index":6233,"t":{},"b":{"13":{}}}],["xx3max",{"_index":6241,"t":{},"b":{"13":{}}}],["xx3min",{"_index":6240,"t":{},"b":{"13":{}}}],["xx[i",{"_index":8553,"t":{},"b":{"19":{},"27":{},"56":{},"61":{}}}],["xx[i]*t1",{"_index":5255,"t":{},"b":{"13":{}}}],["xx[ii]*t",{"_index":5256,"t":{},"b":{"13":{}}}],["xx[j],yy[j",{"_index":4962,"t":{},"b":{"11":{}}}],["xxx",{"_index":2752,"t":{},"b":{"4":{},"21":{}}}],["xxx.am",{"_index":2331,"t":{},"b":{"4":{}}}],["xxx.am_fmt",{"_index":2323,"t":{},"b":{"4":{}}}],["xxx.amdba",{"_index":2333,"t":{},"b":{"4":{}}}],["xxx.dll",{"_index":2759,"t":{},"b":{"4":{}}}],["xxx.ftq',form",{"_index":2347,"t":{},"b":{"4":{}}}],["xxx.msh",{"_index":2342,"t":{},"b":{"4":{}}}],["xxx.so",{"_index":2754,"t":{},"b":{"4":{}}}],["xxxxxx",{"_index":1906,"t":{},"b":{"3":{}}}],["xy",{"_index":5384,"t":{},"b":{"13":{},"48":{},"53":{},"54":{},"76":{}}}],["xy(0,i",{"_index":7198,"t":{},"b":{"13":{}}}],["xy(1",{"_index":7212,"t":{},"b":{"13":{}}}],["xy(1,i",{"_index":7208,"t":{},"b":{"13":{}}}],["xy(2",{"_index":7209,"t":{},"b":{"13":{}}}],["xy(2,i",{"_index":7201,"t":{},"b":{"13":{}}}],["xy(3",{"_index":7183,"t":{},"b":{"13":{}}}],["xy.m",{"_index":7204,"t":{},"b":{"13":{}}}],["xyf",{"_index":5387,"t":{},"b":{"13":{}}}],["xystyle','off",{"_index":14692,"t":{},"b":{"71":{}}}],["xz",{"_index":13549,"t":{},"b":{"54":{}}}],["x|^2+|\\partial",{"_index":7350,"t":{},"b":{"14":{}}}],["x}+\\frac{\\p",{"_index":4479,"t":{},"b":{"11":{}}}],["x}\\delta",{"_index":11842,"t":{},"b":{"48":{}}}],["x}\\frac{\\p",{"_index":4477,"t":{},"b":{"11":{}}}],["x}\\frac{\\parti",{"_index":15079,"t":{},"b":{"76":{}}}],["x}^m",{"_index":14463,"t":{},"b":{"67":{}}}],["x}_{\\tau",{"_index":15163,"t":{},"b":{"77":{}}}],["x}{\\partial^2",{"_index":14340,"t":{},"b":{"65":{}}}],["x}{\\partial^2\\varphi\\over\\parti",{"_index":14338,"t":{},"b":{"65":{}}}],["x}}{2",{"_index":13529,"t":{},"b":{"54":{}}}],["y",{"_index":1680,"t":{},"b":{"3":{},"4":{},"5":{},"10":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"27":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"60":{},"61":{},"62":{},"63":{},"64":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"81":{}}}],["y'",{"_index":5403,"t":{},"b":{"13":{}}}],["y(i",{"_index":13402,"t":{},"b":{"53":{}}}],["y)/(h*h",{"_index":11573,"t":{},"b":{"45":{}}}],["y)/\\sqrt{1+(\\p",{"_index":11861,"t":{},"b":{"48":{}}}],["y)^2}&\\simeq",{"_index":11860,"t":{},"b":{"48":{}}}],["y*(1",{"_index":14137,"t":{},"b":{"62":{}}}],["y*0.5",{"_index":4941,"t":{},"b":{"11":{}}}],["y*2",{"_index":5925,"t":{},"b":{"13":{},"24":{}}}],["y*3",{"_index":4434,"t":{},"b":{"11":{}}}],["y*cos(z",{"_index":6067,"t":{},"b":{"13":{}}}],["y*i",{"_index":5663,"t":{},"b":{"13":{},"19":{},"27":{}}}],["y*r",{"_index":11210,"t":{},"b":{"41":{}}}],["y*rho*sigx*sigy/2",{"_index":11212,"t":{},"b":{"41":{}}}],["y*scale",{"_index":7259,"t":{},"b":{"13":{}}}],["y*sigy^2",{"_index":11211,"t":{},"b":{"41":{}}}],["y*sin(z",{"_index":6069,"t":{},"b":{"13":{}}}],["y+0.2*vv",{"_index":11304,"t":{},"b":{"42":{}}}],["y+\\int_{\\omega}fu_h",{"_index":12040,"t":{},"b":{"48":{}}}],["y+coef*vv",{"_index":5467,"t":{},"b":{"13":{}}}],["y+f",{"_index":5477,"t":{},"b":{"13":{}}}],["y+k*\\cos(y\\pi)/10",{"_index":5445,"t":{},"b":{"13":{}}}],["y+t\\left(\\p",{"_index":11853,"t":{},"b":{"48":{}}}],["y+u2*coef",{"_index":10752,"t":{},"b":{"40":{}}}],["y+u2n",{"_index":10432,"t":{},"b":{"37":{}}}],["y+v",{"_index":10825,"t":{},"b":{"40":{}}}],["y+v*coef",{"_index":14281,"t":{},"b":{"64":{}}}],["y+vn",{"_index":11783,"t":{},"b":{"46":{}}}],["y+vv",{"_index":10738,"t":{},"b":{"40":{},"42":{}}}],["y+x)^{2}+1)((i",{"_index":12090,"t":{},"b":{"48":{}}}],["y+x+1)*(y+x",{"_index":12078,"t":{},"b":{"48":{}}}],["y,\\quad",{"_index":15140,"t":{},"b":{"77":{}}}],["y,x",{"_index":12168,"t":{},"b":{"48":{}}}],["y,z",{"_index":6138,"t":{},"b":{"13":{}}}],["y/2)^2",{"_index":11887,"t":{},"b":{"48":{}}}],["y/max(x/hh",{"_index":6079,"t":{},"b":{"13":{}}}],["y/ni",{"_index":7238,"t":{},"b":{"13":{}}}],["y0",{"_index":5141,"t":{},"b":{"13":{},"24":{},"48":{},"54":{},"67":{}}}],["y0(x",{"_index":13731,"t":{},"b":{"54":{}}}],["y0)*i",{"_index":5146,"t":{},"b":{"13":{},"24":{}}}],["y0)*x,z0+(z1",{"_index":6422,"t":{},"b":{"13":{}}}],["y0+(y1",{"_index":5145,"t":{},"b":{"13":{},"24":{}}}],["y0+rr*sin(t",{"_index":14475,"t":{},"b":{"67":{}}}],["y1",{"_index":2942,"t":{},"b":{"4":{},"13":{},"24":{},"54":{}}}],["y1(x",{"_index":13732,"t":{},"b":{"54":{}}}],["y1).nutriangl",{"_index":2952,"t":{},"b":{"4":{}}}],["y1+hi",{"_index":2940,"t":{},"b":{"4":{}}}],["y10",{"_index":6223,"t":{},"b":{"13":{}}}],["y10)*i",{"_index":6248,"t":{},"b":{"13":{}}}],["y10+(y11",{"_index":6247,"t":{},"b":{"13":{}}}],["y11",{"_index":6224,"t":{},"b":{"13":{}}}],["y20",{"_index":6230,"t":{},"b":{"13":{}}}],["y20)*i",{"_index":6253,"t":{},"b":{"13":{}}}],["y20+(y21",{"_index":6252,"t":{},"b":{"13":{}}}],["y21",{"_index":6231,"t":{},"b":{"13":{}}}],["y30",{"_index":6238,"t":{},"b":{"13":{}}}],["y30)*i",{"_index":6259,"t":{},"b":{"13":{}}}],["y30+(y31",{"_index":6258,"t":{},"b":{"13":{}}}],["y31",{"_index":6239,"t":{},"b":{"13":{}}}],["y<\\infty\\right.\\right",{"_index":7339,"t":{},"b":{"14":{}}}],["y>0.001)*(y<0.1",{"_index":10882,"t":{},"b":{"40":{}}}],["y\\)if",{"_index":13587,"t":{},"b":{"54":{}}}],["y\\delta",{"_index":11855,"t":{},"b":{"48":{}}}],["y\\in",{"_index":12084,"t":{},"b":{"48":{}}}],["y\\le",{"_index":10817,"t":{},"b":{"40":{}}}],["y\\partial",{"_index":13553,"t":{},"b":{"54":{}}}],["y\\right)(x,y)\\delta",{"_index":11848,"t":{},"b":{"48":{}}}],["y\\right)\\delta",{"_index":11854,"t":{},"b":{"48":{}}}],["y\\right)^{1/2",{"_index":4281,"t":{},"b":{"11":{},"14":{},"48":{}}}],["y\\simeq",{"_index":11839,"t":{},"b":{"48":{}}}],["y\\to",{"_index":11863,"t":{},"b":{"48":{}}}],["y])/5",{"_index":11355,"t":{},"b":{"43":{}}}],["y^2",{"_index":4342,"t":{},"b":{"11":{},"13":{},"14":{},"41":{},"48":{},"60":{},"72":{},"75":{},"76":{}}}],["y^2)*exp(x",{"_index":13899,"t":{},"b":{"60":{}}}],["y^2)<1.0001",{"_index":15020,"t":{},"b":{"75":{}}}],["y^2+x^2",{"_index":8547,"t":{},"b":{"19":{},"27":{}}}],["y^3",{"_index":5507,"t":{},"b":{"13":{},"24":{},"75":{}}}],["y^{\\alpha_2}}\\in",{"_index":7361,"t":{},"b":{"14":{}}}],["y_0,y_1",{"_index":5136,"t":{},"b":{"13":{}}}],["y_1(doubl",{"_index":2182,"t":{},"b":{"4":{}}}],["y_i",{"_index":7199,"t":{},"b":{"13":{}}}],["y_n(x",{"_index":13735,"t":{},"b":{"54":{}}}],["y_nv(doubl",{"_index":2186,"t":{},"b":{"4":{}}}],["y_q",{"_index":4192,"t":{},"b":{"11":{}}}],["y_{1",{"_index":6687,"t":{},"b":{"13":{}}}],["y_{1}^{h",{"_index":6676,"t":{},"b":{"13":{}}}],["y_{2",{"_index":6692,"t":{},"b":{"13":{}}}],["y_{2}^{h",{"_index":6679,"t":{},"b":{"13":{}}}],["y_{i",{"_index":5965,"t":{},"b":{"13":{}}}],["y_{n_v",{"_index":6730,"t":{},"b":{"13":{}}}],["ya",{"_index":11568,"t":{},"b":{"45":{}}}],["yam",{"_index":7063,"t":{},"b":{"13":{}}}],["yang",{"_index":239,"t":{},"b":{"2":{}}}],["yb",{"_index":12455,"t":{},"b":{"51":{}}}],["yb)*t",{"_index":12475,"t":{},"b":{"51":{}}}],["yb).label",{"_index":13752,"t":{},"b":{"55":{}}}],["yb+(yt",{"_index":12474,"t":{},"b":{"51":{}}}],["yc",{"_index":5249,"t":{},"b":{"13":{}}}],["yc[i",{"_index":5263,"t":{},"b":{"13":{}}}],["ye",{"_index":7890,"t":{},"b":{"15":{},"35":{},"45":{}}}],["year",{"_index":9805,"t":{},"b":{"30":{},"33":{}}}],["yellow",{"_index":8566,"t":{},"b":{"19":{},"27":{}}}],["yield",{"_index":3538,"t":{},"b":{"8":{},"45":{}}}],["yj",{"_index":2881,"t":{},"b":{"4":{}}}],["yl",{"_index":7251,"t":{},"b":{"13":{}}}],["ymax",{"_index":5351,"t":{},"b":{"13":{}}}],["ymin",{"_index":5349,"t":{},"b":{"13":{}}}],["yn",{"_index":13733,"t":{},"b":{"54":{}}}],["yn(n",{"_index":13734,"t":{},"b":{"54":{}}}],["york",{"_index":83,"t":{},"b":{"2":{}}}],["young’",{"_index":11242,"t":{},"b":{"42":{},"64":{}}}],["your_installation/src/mpi/ff",{"_index":10037,"t":{},"b":{"35":{}}}],["your_installation/src/nw/freefem",{"_index":10036,"t":{},"b":{"35":{}}}],["yousef",{"_index":181,"t":{},"b":{"2":{}}}],["youssef",{"_index":7937,"t":{},"b":{"15":{}}}],["you’r",{"_index":1900,"t":{},"b":{"3":{},"35":{}}}],["yr).region",{"_index":13766,"t":{},"b":{"55":{}}}],["yt",{"_index":12456,"t":{},"b":{"51":{}}}],["yu",{"_index":392,"t":{},"b":{"2":{}}}],["yve",{"_index":291,"t":{},"b":{"2":{}}}],["yveloc",{"_index":11203,"t":{},"b":{"41":{}}}],["yx",{"_index":7200,"t":{},"b":{"13":{},"54":{}}}],["yy",{"_index":4966,"t":{},"b":{"11":{},"13":{},"18":{},"19":{},"24":{},"25":{},"27":{},"61":{}}}],["yy(10",{"_index":8546,"t":{},"b":{"19":{},"27":{}}}],["yy(21",{"_index":14089,"t":{},"b":{"61":{}}}],["yy(n",{"_index":13778,"t":{},"b":{"56":{}}}],["yy1",{"_index":6120,"t":{},"b":{"13":{},"24":{}}}],["yy2max",{"_index":6235,"t":{},"b":{"13":{}}}],["yy2min",{"_index":6234,"t":{},"b":{"13":{}}}],["yy3",{"_index":6242,"t":{},"b":{"13":{}}}],["yy[i",{"_index":8554,"t":{},"b":{"19":{},"27":{},"56":{},"61":{}}}],["yy[i]*t1",{"_index":5257,"t":{},"b":{"13":{}}}],["yy[ii]*t",{"_index":5258,"t":{},"b":{"13":{}}}],["yz",{"_index":13556,"t":{},"b":{"54":{}}}],["y|^2\\right)\\text{d",{"_index":7351,"t":{},"b":{"14":{}}}],["y}(x,0.9",{"_index":15266,"t":{},"b":{"79":{}}}],["y}\\frac{\\p",{"_index":4480,"t":{},"b":{"11":{}}}],["y}\\frac{\\parti",{"_index":15081,"t":{},"b":{"76":{}}}],["y}_j",{"_index":3606,"t":{},"b":{"8":{}}}],["y}{x",{"_index":3940,"t":{},"b":{"11":{}}}],["z",{"_index":2991,"t":{},"b":{"5":{},"8":{},"10":{},"11":{},"13":{},"19":{},"21":{},"22":{},"24":{},"48":{},"51":{},"53":{},"54":{},"55":{},"60":{},"64":{},"65":{},"72":{},"75":{},"79":{}}}],["z(3",{"_index":15023,"t":{},"b":{"75":{}}}],["z(x_1,x_2",{"_index":14709,"t":{},"b":{"72":{}}}],["z(z",{"_index":13403,"t":{},"b":{"53":{}}}],["z*2",{"_index":5926,"t":{},"b":{"13":{},"24":{}}}],["z*x",{"_index":13782,"t":{},"b":{"56":{}}}],["z+u3*coef",{"_index":10753,"t":{},"b":{"40":{}}}],["z,z",{"_index":8522,"t":{},"b":{"19":{}}}],["z,~~~~\\frac{\\partial\\varphi}{\\partial\\boldsymbol{n}}|_{\\gamma_2",{"_index":14712,"t":{},"b":{"72":{}}}],["z.n",{"_index":15032,"t":{},"b":{"75":{}}}],["z0",{"_index":6019,"t":{},"b":{"13":{},"48":{}}}],["z0)*i",{"_index":6423,"t":{},"b":{"13":{}}}],["z0,z1",{"_index":6037,"t":{},"b":{"13":{}}}],["z1",{"_index":6021,"t":{},"b":{"13":{},"21":{}}}],["z2",{"_index":8814,"t":{},"b":{"21":{}}}],["z<0.5",{"_index":6144,"t":{},"b":{"13":{}}}],["z[0",{"_index":15027,"t":{},"b":{"75":{}}}],["z[1",{"_index":15028,"t":{},"b":{"75":{}}}],["z[2",{"_index":15029,"t":{},"b":{"75":{}}}],["z[i",{"_index":15033,"t":{},"b":{"75":{}}}],["z[j",{"_index":15048,"t":{},"b":{"75":{}}}],["z\\in",{"_index":14725,"t":{},"b":{"72":{}}}],["z\\in\\r^{\\#{\\mathc",{"_index":3622,"t":{},"b":{"8":{}}}],["z\\partial",{"_index":13562,"t":{},"b":{"54":{}}}],["z^2",{"_index":13568,"t":{},"b":{"54":{}}}],["z^t",{"_index":3219,"t":{},"b":{"5":{},"65":{}}}],["z_1(doubl",{"_index":2183,"t":{},"b":{"4":{}}}],["z_h",{"_index":11423,"t":{},"b":{"45":{}}}],["z_i",{"_index":3303,"t":{},"b":{"5":{},"65":{}}}],["z_j",{"_index":14329,"t":{},"b":{"65":{}}}],["z_l",{"_index":998,"t":{},"b":{"3":{}}}],["z_nv(doubl",{"_index":2187,"t":{},"b":{"4":{}}}],["z_u",{"_index":999,"t":{},"b":{"3":{}}}],["z_{1",{"_index":6688,"t":{},"b":{"13":{}}}],["z_{1}^{h",{"_index":6677,"t":{},"b":{"13":{}}}],["z_{2",{"_index":6693,"t":{},"b":{"13":{}}}],["z_{2}^{h",{"_index":6680,"t":{},"b":{"13":{}}}],["z_{i",{"_index":6725,"t":{},"b":{"13":{}}}],["z_{i,j",{"_index":5970,"t":{},"b":{"13":{}}}],["z_{i,j})_{j",{"_index":5967,"t":{},"b":{"13":{}}}],["z_{i,k",{"_index":3275,"t":{},"b":{"5":{}}}],["z_{l",{"_index":1030,"t":{},"b":{"3":{}}}],["z_{l}(x,\\mu",{"_index":989,"t":{},"b":{"3":{}}}],["z_{l}(x_{\\mu},\\mu",{"_index":997,"t":{},"b":{"3":{}}}],["z_{n_v",{"_index":6731,"t":{},"b":{"13":{}}}],["z_{u",{"_index":1029,"t":{},"b":{"3":{}}}],["z_{u}(x,\\mu",{"_index":985,"t":{},"b":{"3":{}}}],["z_{u}(x_{\\mu},\\mu",{"_index":996,"t":{},"b":{"3":{}}}],["zbound",{"_index":4065,"t":{},"b":{"11":{},"13":{},"15":{},"22":{},"24":{},"25":{}}}],["zcp",{"_index":12021,"t":{},"b":{"48":{}}}],["zero",{"_index":1117,"t":{},"b":{"3":{},"4":{},"8":{},"11":{},"13":{},"15":{},"18":{},"21":{},"26":{},"37":{},"38":{},"40":{},"41":{},"45":{},"48":{},"54":{},"60":{},"62":{},"64":{},"66":{},"69":{},"72":{},"73":{},"76":{}}}],["zeropattern",{"_index":8089,"t":{},"b":{"15":{}}}],["zf",{"_index":13898,"t":{},"b":{"60":{}}}],["zgeev",{"_index":13307,"t":{},"b":{"53":{}}}],["zggev",{"_index":13310,"t":{},"b":{"53":{}}}],["zh",{"_index":13901,"t":{},"b":{"60":{}}}],["zheev",{"_index":13315,"t":{},"b":{"53":{}}}],["zhegv",{"_index":13313,"t":{},"b":{"53":{}}}],["zmax",{"_index":5957,"t":{},"b":{"13":{},"15":{},"22":{},"24":{},"25":{}}}],["zmaxt",{"_index":6064,"t":{},"b":{"13":{}}}],["zmin",{"_index":5956,"t":{},"b":{"13":{},"15":{},"22":{},"24":{},"25":{}}}],["zmin(v_{i}^{2d",{"_index":5971,"t":{},"b":{"13":{}}}],["zmin)/zmax",{"_index":6293,"t":{},"b":{"13":{}}}],["zmin,zmax",{"_index":4066,"t":{},"b":{"11":{},"13":{}}}],["zmint",{"_index":6063,"t":{},"b":{"13":{}}}],["zone",{"_index":8423,"t":{},"b":{"18":{},"74":{}}}],["zoom",{"_index":5094,"t":{},"b":{"12":{},"19":{},"27":{},"40":{},"48":{},"66":{},"76":{}}}],["zpsi",{"_index":12015,"t":{},"b":{"48":{}}}],["zvh",{"_index":10853,"t":{},"b":{"40":{},"48":{}}}],["zvh(zoom",{"_index":10852,"t":{},"b":{"40":{},"48":{}}}],["zx",{"_index":13560,"t":{},"b":{"54":{}}}],["zxvf",{"_index":10026,"t":{},"b":{"35":{}}}],["zy",{"_index":13564,"t":{},"b":{"54":{}}}],["zz",{"_index":6112,"t":{},"b":{"13":{},"24":{}}}],["zz1",{"_index":6122,"t":{},"b":{"13":{},"24":{}}}],["zz1max",{"_index":6227,"t":{},"b":{"13":{}}}],["zz1min",{"_index":6226,"t":{},"b":{"13":{}}}],["zz2",{"_index":6232,"t":{},"b":{"13":{}}}],["zz3",{"_index":6243,"t":{},"b":{"13":{}}}],["z{l_z",{"_index":15284,"t":{},"b":{"79":{}}}],["z}\\frac{\\p",{"_index":4481,"t":{},"b":{"11":{}}}]],"pipeline":["stemmer"]};
const LUNR_PAGEDATA = [{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]},
{"version":"2.3.9","fields":["t","b"],"fieldVectors":[],"invertedIndex":[],"pipeline":["stemmer"]}];
const PREVIEW_DATA = {"0":{"t":"","p":"","l":"404.html"},"1":{"t":"ffddm","p":"","l":"_static/html/tutorial-slides.html"},"2":{"t":"Bibliography","p":"\n\t\t\n   \nBibliography¶\n\n\nPIRONNEAU1998\nPIRONNEAU, Olivier and LUCQUIN-DESREUX, Brigitte. Introduction to scientific computing. Wiley, 1998.\n\nWÄCHTER2006\nWÄCHTER, Andreas and BIEGLER, Lorenz T. On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming. Mathematical programming, 2006, vol. 106, no 1, p. 25-57.\n\nFORSGREN2002\nFORSGREN, Anders, GILL, Philip E., and WRIGHT, Margaret H. Interior methods for nonlinear optimization. SIAM review, 2002, vol. 44, no 4, p. 525-597.\n\nGEORGE1996\nGEORGE, P. L. and BOROUCHAKI, H. Automatic triangulation. 1996.\n\nHECHT1998\nHECHT, F. The mesh adapting software: bamg. INRIA report, 1998, vol. 250, p. 252.\n\nPREPARATA1985\nPREPARATA, F. P. and SHAMOS, M. I. Computational Geometry Springer-Verlag. New York, 1985.\n\nSTROUSTRUP2000\nSTROUSTRUP, Bjarne. The C++ programming language. Pearson Education India, 2000.\n\nHECHT2002\nHECHT, Frédéric. C++ Tools to construct our user-level language. ESAIM: Mathematical Modelling and Numerical Analysis, 2002, vol. 36, no 5, p. 809-836.\n\nHANG2006\nSI, Hang. TetGen Users’ guide: A quality tetrahedral mesh generator and three-dimensional delaunay triangulator. 2006\n\nSHEWCHUK1998\nSHEWCHUK, Jonathan Richard. Tetrahedral mesh generation by Delaunay refinement. In : Proceedings of the fourteenth annual symposium on Computational geometry. ACM, 1998. p. 86-95.\n\nHECHT1992\nHECHT, F. Outils et algorithmes pour la méthode des éléments finis. HdR, Université Pierre et Marie Curie, France, 1992.\n\nHECHT1998_2\nHECHT, Frédéric. BAMG: bidimensional anisotropic mesh generator. User Guide. INRIA, Rocquencourt, 1998.\n\nKARYPIS1995\nKARYPIS, George and KUMAR, Vipin. METIS–unstructured graph partitioning and sparse matrix ordering system, version 2.0. 1995.\n\nCAI1989\nCAI, Xiao-Chuan. Some domain decomposition algorithms for nonselfadjoint elliptic and parabolic partial differential equations. 1989.\n\nSAAD2003\nSAAD, Yousef. Iterative methods for sparse linear systems. siam, 2003.\n\nSMITH1996\nSMITH, B. P. Bj rstad and W. Gropp, Domain Decomposition. 1996.\n\nOGDEN1984\nOGDEN, Ray W. Non-linear elastic deformations. 1984.\n\nRAVIART1998\nRAVIART, Pierre-Arnaud, THOMAS, Jean-Marie, CIARLET, Philippe G., et al. Introduction à l’analyse numérique des équations aux dérivées partielles. Paris : Dunod, 1998.\n\nHORGAN2004\nHORGAN, Cornelius O. and SACCOMANDI, Giuseppe. Constitutive models for compressible nonlinearly elastic materials with limiting chain extensibility. Journal of Elasticity, 2004, vol. 77, no 2, p. 123-138.\n\nLEHOUCQ1998\nLEHOUCQ, Richard B., SORENSEN, Danny C., and YANG, Chao. ARPACK users’ guide: solution of large-scale eigenvalue problems with implicitly restarted Arnoldi methods. Siam, 1998.\n\nNECAS2017\nNECAS, Jindrich and HLAVÁCEK, Ivan. Mathematical theory of elastic and elasto-plastic bodies: an introduction. Elsevier, 2017.\n\nOHTSUKA2000\nOHTSUKA, K. Theoretical and Numerical analysis of energy release rate in 2D fracture. INFORMATION, 2000, vol. 3, p. 303-315.\n\nTABATA1994\nTABATA, M. Numerical solutions of partial differential equations II. Iwanami Applied Math, 1994.\n\nLUCQUIN1998\nPIRONNEAU, O. and LUCQUIN-DESREUX, B. Introduction to scientific computing. Wiley, 1998.\n\nWILMOTT1995\nWILMOTT, Paul, HOWISON, Sam and DEWYNNE, Jeff. A student introduction to mathematical finance. 1995.\n\nACHDOU2005\nACHDOU, Yves and PIRONNEAU, Olivier. Computational methods for option pricing. Siam, 2005.\n\nTEMAM1977\nTEMAM, Roger. Navier-Stokes equations: theory and numerical analysis. 1977.\n\nROBERTS1993\nROBERTS, J. E. and THOMAS, J. M. Mixed and Hybrid Methods, Handbook of Numerical Anaysis, Vol. II. North-Holland, 1993, vol. 183, p. 184.\n\nGLOWINSKI1979\nGLOWINSKI, R. and PIRONNEAU, O. On numerical methods for the Stokes problem. In: Energy methods in finite element analysis.(A79-53076 24-39) Chichester, Sussex, England, Wiley-Interscience, 1979, p. 243-264., 1979, p. 243-264.\n\nGLOWINSKI1985\nGLOWINSKI, Roland and ODEN, J. Tinsley. Numerical methods for nonlinear variational problems. Journal of Applied Mechanics, 1985, vol. 52, p. 739.\n\nGLOWINSKI2003\nGLOWINSKI, Roland. Finite element methods for incompressible viscous flow. Handbook of numerical analysis, 2003, vol. 9, p. 3-1176.\n\nITO2003\nITO, Kazufumi and KUNISCH, Karl. Semi–smooth Newton methods for variational inequalities of the first kind. ESAIM: Mathematical Modelling and Numerical Analysis, 2003, vol. 37, no 1, p. 41-62.\n\nHINTERMULLER2002\nHINTERMÜLLER, Michael, ITO, Kazufumi, et KUNISCH, Karl. The primal-dual active set strategy as a semismooth Newton method. SIAM Journal on Optimization, 2002, vol. 13, no 3, p. 865-888.\n\nOXBORROW2007\nOXBORROW, Mark. Traceable 2-D finite-element simulation of the whispering-gallery modes of axisymmetric electromagnetic resonators. IEEE Transactions on Microwave Theory and Techniques, 2007, vol. 55, no 6, p. 1209-1218.\n\nGRUDININ2012\nGRUDININ, Ivan S. and YU, Nan. Finite-element modeling of coupled optical microdisk resonators for displacement sensing. JOSA B, 2012, vol. 29, no 11, p. 3010-3014.\n\nERN2006\nERN, A. and GUERMOND, J. L. Discontinuous Galerkin methods for Friedrichs’ symmetric systems. I. General theory. SIAM J. Numer. Anal.\n\nBERNADOU1980\nBERNADOU, Michel, BOISSERIE, Jean-Marie and HASSAN, Kamal. Sur l’implémentation des éléments finis de Hsieh-Clough-Tocher complet et réduit. 1980. Thèse de doctorat. INRIA.\n\nBERNARDI1985\nBERNARDI, Christine and RAUGEL, Genevieve. Analysis of some finite elements for the Stokes problem. Mathematics of Computation, 1985, p. 71-79.\n\nTHOMASSET2012\nTHOMASSET, François. Implementation of finite element methods for Navier-Stokes equations. Springer Science & Business Media, 2012.\n\nCROUZEIX1984\nCROUZEIX, Michel and MIGNOT, Alain L. Analyse numérique des équations différentielles. Masson, 1984.\n\nTAYLOR2005\nTAYLOR, Mark A., WINGATE, Beth A. and BOS, Len P. Several new quadrature formulas for polynomial integration in the triangle. arXiv preprint math/0501496, 2005.\n\nCHOW1997\nCHOW, Edmond and SAAD, Yousef. Parallel Approximate Inverse Preconditioners. In : PPSC. 1997.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Developers\n\t\t\n\t","l":"bibliography.html"},"3":{"t":"Algorithms & Optimization","p":"\n\t\t\n   \nAlgorithms & Optimization¶\n\nConjugate Gradient/GMRES¶\nSuppose we want to solve the Euler problem (here \\(x\\) has nothing to do with the reserved variable for the first coordinate in FreeFEM):\nfind \\(x\\in \\mathbb{R}^n\\) such that\n\n(24)¶\\[\\nabla J(x)  =  \\left(\\frac{\\partial J}{\\partial x_i} (\\mathbf{x})\\right)  =  0\\]\nwhere \\(J\\) is a function (to minimize for example) from \\(\\mathbb{R}^n\\) to \\(\\mathbb{R}\\).\nIf the function is convex we can use the conjugate gradient algorithm to solve the problem, and we just need the function (named dJ for example) which computes \\(\\nabla J\\), so the parameters are the name of that function with prototype func real[int] dJ(real[int] &xx); which computes \\(\\nabla J\\), and a vector x of type (of course the number 20 can be changed) real[int] x(20); to initialize the process and get the result.\nGiven an initial value \\(\\mathbf{x}^{(0)}\\), a maximum number \\(i_{\\max}\\) of iterations, and an error tolerance \\(0<\\epsilon<1\\):\nPut \\(\\mathbf{x} = \\mathbf{x}^{(0)}\\) and write\n1 NLCG(dJ, x, precon = M, nbiter = imax, eps = epsilon, stop = stopfunc);\n\n\nwill give the solution of \\(\\mathbf{x}\\) of \\(\\nabla J(\\mathbf{x}) = 0\\).\nWe can omit parameters precon, nbiter, eps, stop.\nHere \\(M\\) is the preconditioner whose default is the identity matrix.\nThe stopping test is\n\n\\[\\|\\nabla J(\\mathbf{x})\\|_P\\le \\epsilon\\| \\nabla J(\\mathbf{x}^{(0)})\\|_P\\]\nWriting the minus value in eps = , i.e.,\n1 NLCG(dJ, x, precon = M, nbiter = imax, eps = -epsilon);\n\n\nWe can use the stopping test:\n\n\\[\\| \\nabla J(\\mathbf{x})\\|_P^2\\le \\epsilon\\]\nThe parameters of these three functions are:\n\nnbiter =  set the number of iteration (by default 100)\nprecon =  set the preconditioner function (P for example) by default it is the identity, note the prototype is func real[int] P(real[int] &x).\neps =  set the value of the stop test \\(\\varepsilon\\) (\\( = 10^{-6}\\) by default) if positive then relative test \\(||\\nabla J(x)||_P\\leq \\varepsilon||\\nabla J(x_0)||_P\\), otherwise the absolute test is \\(||\\nabla J(x)||_P^2\\leq |\\varepsilon|\\).\nveps =  set and return the value of the stop test, if positive, then relative test is \\(||\\nabla J(x)||_P\\leq \\varepsilon||\\nabla J(x_0)||_P\\), otherwise the absolute test is \\(||\\nabla J(x)||_P^2\\leq |\\varepsilon|\\).\nThe return value is minus the real stop test (remark: it is useful in loop).\nstop =  stopfunc add your test function to stop before the eps criterion. The prototype for the function stopfunc is\n1 func bool stopfunc(int iter, real[int] u, real[int] g)\n\n\nwhere u is the current solution, and g, the current gradient, is not preconditioned.\n\n\n\nTip\nAlgorithms.edp\nFor a given function \\(b\\), let us find the minimizer \\(u\\) of the function\n\n\\[\\begin{split}\\begin{array}{rcl}\n   J(u) & = & \\frac{1}{2}\\int_{\\Omega} f(|\\nabla u|^2) - \\int_{\\Omega} u b \\\\\n   f(x) & = & ax + x-\\ln(1+x), \\quad f'(x)  =  a+\\frac{x}{1+x}, \\quad f''(x)  =  \\frac{1}{(1+x)^2}\n\\end{array}\\end{split}\\]\nunder the boundary condition \\(u = 0\\) on \\(\\partial\\Omega\\).\n 1 fespace Ph(Th, P0);\n 2 Ph alpha; //store df(|nabla u|^2)\n 3 \n 4 // The function J\n 5 //J(u)  =  1/2 int_Omega f(|nabla u|^2) - int_Omega u b\n 6 func real J (real[int] & u){\n 7    Vh w;\n 8    w[]  =  u;\n 9    real r  =  int2d(Th)(0.5*f(dx(w)*dx(w) + dy(w)*dy(w)) - b*w);\n10    cout << \"J(u)  =  \" << r << \" \" << u.min << \" \" << u.max << endl;\n11    return r;\n12 }\n13 \n14 // The gradient of J\n15 func real[int] dJ (real[int] & u){\n16    Vh w;\n17    w[]  =  u;\n18    alpha  =  df(dx(w)*dx(w) + dy(w)*dy(w));\n19    varf au (uh, vh)\n20        =  int2d(Th)(\n21            alpha*(dx(w)*dx(vh) + dy(w)*dy(vh))\n22          - b*vh\n23       )\n24       + on(1, 2, 3, 4, uh = 0)\n25       ;\n26 \n27    u  =  au(0, Vh);\n28    return u; //warning: no return of local array\n29 }\n\n\nWe also want to construct a preconditioner \\(C\\) with solving the problem:\nfind \\(u_h \\in V_{0h}\\) such that:\n\n\\[\\forall v_h \\in V_{0h}, \\quad \\int_\\Omega \\alpha \\nabla u_h . \\nabla v_h  =  \\int_\\Omega b v_h\\]\nwhere \\(\\alpha = f'(|\\nabla u|^2)\\).\n 1 alpha  =  df(dx(u)*dx(u) + dy(u)*dy(u));\n 2 varf alap (uh, vh)\n 3     =  int2d(Th)(\n 4         alpha*(dx(uh)*dx(vh) + dy(uh)*dy(vh))\n 5    )\n 6    + on(1, 2, 3, 4, uh = 0)\n 7    ;\n 8 \n 9 varf amass(uh, vh)\n10     =  int2d(Th)(\n11         uh*vh\n12    )\n13    + on(1, 2, 3, 4, uh = 0)\n14    ;\n15 \n16 matrix Amass  =  amass(Vh, Vh, solver = CG);\n17 matrix Alap =  alap(Vh, Vh, solver = Cholesky, factorize = 1);\n18 \n19 // Preconditionner\n20 func real[int] C(real[int] & u){\n21    real[int] w  =  u;\n22    u  =  Alap^-1*w;\n23    return u; //warning: no return of local array variable\n24 }\n\n\nTo solve the problem, we make 10 iterations of the conjugate gradient, recompute the preconditioner and restart the conjugate gradient:\n 1 int conv = 0;\n 2 for(int i  =  0; i < 20; i++){\n 3    conv  =  NLCG(dJ, u[], nbiter = 10, precon = C, veps = eps, verbosity = 5);\n 4    if (conv) break;\n 5 \n 6    alpha  =  df(dx(u)*dx(u) + dy(u)*dy(u));\n 7    Alap  =  alap(Vh, Vh, solver = Cholesky, factorize = 1);\n 8    cout << \"Restart with new preconditionner \" << conv << \", eps  = \" << eps << endl;\n 9 }\n10 \n11 // Plot\n12 plot (u, wait = true, cmm = \"solution with NLCG\");\n\n\n\nFor a given symmetric positive matrix \\(A\\), consider the quadratic form\n\n\\[J(\\mathbf{x}) = \\frac{1}{2}\\mathbf{x}^TA\\mathbf{x}-\\mathbf{b}^T\\mathbf{x}\\]\nthen \\(J(\\mathbf{x})\\) is minimized by the solution \\(\\mathbf{x}\\) of \\(A\\mathbf{x} = \\mathbf{b}\\).\nIn this case, we can use the function AffineCG\n1 AffineCG(A, x, precon = M, nbiter = imax, eps = epsilon, stop = stp);\n\n\nIf \\(A\\) is not symmetric, we can use GMRES(Generalized Minimum Residual) algorithm by\n1 AffineGMRES(A, x, precon = M, nbiter = imax, eps = epsilon);\n\n\nAlso, we can use the non-linear version of GMRES algorithm (the function \\(J\\) is just convex)\n1 AffineGMRES(dJ, x, precon = M, nbiter = imax, eps = epsilon);\n\n\nFor the details of these algorithms, refer to [PIRONNEAU1998], Chapter IV, 1.3.\n\n\nAlgorithms for Unconstrained Optimization¶\nTwo algorithms of COOOL package are interfaced with the Newton Raphson method (called Newton) and the BFGS method.\nThese two are directly available in FreeFEM (no dynamical link to load).\nBe careful with these algorithms, because their implementation uses full matrices.\nWe also provide several optimization algorithms from the NLopt library as well as an interface for Hansen’s implementation of CMAES (a MPI version of this one is also available).\n\nExample of usage for BFGS or CMAES¶\n\nTip\nBFGS\n 1 real[int] b(10), u(10);\n 2 \n 3 //J\n 4 func real J (real[int] & u){\n 5    real s  =  0;\n 6    for (int i  =  0; i < u.n; i++)\n 7       s + =  (i+1)*u[i]*u[i]*0.5 - b[i]*u[i];\n 8    if (debugJ)\n 9       cout << \"J  =  \" << s << \", u  =  \" << u[0] << \" \" << u[1] << endl;\n10    return s;\n11 }\n12 \n13 //the gradient of J (this is a affine version (the RHS is in)\n14 func real[int] DJ (real[int] &u){\n15    for (int i  =  0; i < u.n; i++)\n16       u[i]  =  (i+1)*u[i];\n17    if (debugdJ)\n18       cout << \"dJ: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n19    u - =  b;\n20    if (debugdJ)\n21       cout << \"dJ-b: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n22    return u; //return of global variable ok\n23 }\n24 \n25 b = 1;\n26 u = 2;\n27 BFGS(J, DJ, u, eps = 1.e-6, nbiter = 20, nbiterline = 20);\n28 cout << \"BFGS: J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n\n\n\nIt is almost the same a using the CMA evolution strategy except, that since it is a derivative free optimizer, the dJ argument is omitted and there are some other named parameters to control the behavior of the algorithm.\nWith the same objective function as above, an example of utilization would be (see CMAES Variational inequality for a complete example):\n1 load \"ff-cmaes\"\n2 //define J, u, ...\n3 real min  =  cmaes(J, u, stopTolFun = 1e-6, stopMaxIter = 3000);\n4 cout << \"minimum value is \" << min << \" for u  =  \" << u << endl;\n\n\nThis algorithm works with a normal multivariate distribution in the parameters space and tries to adapt its covariance matrix using the information provided by the successive function evaluations (see NLopt documentation for more details).\nTherefore, some specific parameters can be passed to control the starting distribution, size of the sample generations, etc…\nNamed parameters for this are the following:\n\nseed =  Seed for random number generator (val is an integer).\nNo specified value will lead to a clock based seed initialization.\ninitialStdDev =  Value for the standard deviations of the initial covariance matrix ( val is a real).\nIf the value \\(\\sigma\\) is passed, the initial covariance matrix will be set to \\(\\sigma I\\).\nThe expected initial distance between initial \\(X\\) and the \\(argmin\\) should be roughly initialStdDev. Default is 0.3.\ninitialStdDevs =  Same as above except that the argument is an array allowing to set a value of the initial standard deviation for each parameter.\nEntries differing by several orders of magnitude should be avoided (if it can’t be, try rescaling the problem).\nstopTolFun =  Stops the algorithm if function value differences are smaller than the passed one, default is \\(10^{-12}\\).\nstopTolFunHist =  Stops the algorithm if function value differences from the best values are smaller than the passed one, default is 0 (unused).\nstopTolX =  Stopping criteria is triggered if step sizes in the parameters space are smaller than this real value, default is 0.\nstopTolXFactor =  Stopping criteria is triggered when the standard deviation increases more than this value. The default value is \\(10^{3}\\).\nstopMaxFunEval =  Stops the algorithm when stopMaxFunEval function evaluations have been done.\nSet to \\(900(n+3)^{2}\\) by default, where \\(n\\) is the parameters space dimension.\nstopMaxIter =  Integer stopping the search when stopMaxIter generations have been sampled.\nUnused by default.\npopsize =  Integer value used to change the sample size.\nThe default value is \\(4+ \\lfloor 3\\ln (n) \\rfloor\\).\nIncreasing the population size usually improves the global search capabilities at the cost of, at most, a linear reduction of the convergence speed with respect to popsize.\nparamFile =  This string type parameter allows the user to pass all the parameters using an extern file, as in Hansen’s original code.\nMore parameters related to the CMA-ES algorithm can be changed with this file.\nNote that the parameters passed to the CMAES function in the FreeFEM script will be ignored if an input parameters file is given.\n\n\n\n\nIPOPT¶\nThe ff-Ipopt package is an interface for the IPOPT [WÄCHTER2006] optimizer.\nIPOPT is a software library for large scale, non-linear, constrained optimization.\nIt implements a primal-dual interior point method along with filter method based line searches.\nIPOPT needs a direct sparse symmetric linear solver.\nIf your version of FreeFEM has been compiled with the --enable-downlad tag, it will automatically be linked with a sequential version of MUMPS.\nAn alternative to MUMPS would be to download the HSL subroutines (see Compiling and Installing the Java Interface JIPOPT) and place them in the /ipopt/Ipopt-3.10.2/ThirdParty/HSL directory of the FreeFEM downloads folder before compiling.\n\nShort description of the algorithm¶\nIn this section, we give a very brief glimpse at the underlying mathematics of IPOPT.\nFor a deeper introduction on interior methods for nonlinear smooth optimization, one may consult [FORSGREN2002], or [WÄCHTER2006] for more IPOPT specific elements.\nIPOPT is designed to perform optimization for both equality and inequality constrained problems.\nHowever, nonlinear inequalities are rearranged before the beginning of the optimization process in order to restrict the panel of nonlinear constraints to those of the equality kind.\nEach nonlinear inequality is transformed into a pair of simple bound inequalities and nonlinear equality constraints by the introduction of as many slack variables as is needed : \\(c_{i}(x)\\leq 0\\) becomes \\(c_{i}(x) + s_{i}  =  0\\) and \\(s_{i}\\leq 0\\), where \\(s_{i}\\) is added to the initial variables of the problems \\(x_{i}\\).\nThus, for convenience, we will assume that the minimization problem does not contain any nonlinear inequality constraint.\nIt means that, given a function \\(f:\\mathbb{R}^{n}\\mapsto\\mathbb{R}\\), we want to find:\n\n(25)¶\\[\\begin{split}x_{0}  =  \\underset{x\\in V}{\\operatorname{argmin}} f(x) \\\\\n\\mathrm{with}\\ V  =  \\left\\lbrace x\\in\\mathbb{R}^{n}\\ \\vert\\ c(x) =  0 \\ \\text{and}\\ x_{l}\\leq x\\leq x_{u}\\right\\rbrace\\end{split}\\]\nWhere \\(c:\\mathbb{R}^{n}\\rightarrow\\mathbb{R}^{m}\\) and \\(x_{l},x_{u}\\in\\mathbb{R}^{n}\\) and inequalities hold componentwise.\nThe \\(f\\) function as well as the constraints \\(c\\) should be twice-continuously differentiable.\nAs a barrier method, interior points algorithms try to find a Karush-Kuhn-Tucker point for (25) by solving a sequence of problems, unconstrained with respect to the inequality constraints, of the form:\n\n(26)¶\\[\\mathrm{for\\ a\\ given\\ }\\mu > 0,\\ \\mathrm{find}\\ x_{\\mu}  =  \\underset{x\\in\\mathbb{R}^{n}\\ \\vert\\ c(x) = 0}{\\operatorname{argmin}}\\ B(x,\\mu)\\]\nWhere \\(\\mu\\) is a positive real number and\n\n\\[B(x,\\mu)  =  f(x) - \\displaystyle{\\mu\\sum_{i = 1}^{n} \\ln (x_{u,i}-x_{i})} - \\displaystyle{\\mu\\sum_{i = 1}^{m} \\ln(x_{i}-x_{l,i})}\\]\nThe remaining equality constraints are handled with the usual Lagrange multipliers method.\nIf the sequence of barrier parameters \\(\\mu\\) converge to 0, intuition suggests that the sequence of minimizers of (26) converge to a local constrained minimizer of (25).\nFor a given \\(\\mu\\), (26) is solved by finding \\((x_{\\mu},\\lambda_{\\mu})\\in\\mathbb{R}^{n}\\times\\mathbb{R}^{m}\\) such that:\n\n(27)¶\\[\\begin{split}\\nabla B(x_{\\mu},\\mu) + \\displaystyle{\\sum_{i = 1}^{m}\\lambda_{\\mu,i}\\nabla c_{i}(x_{\\mu})} =  \\nabla B(x_{\\mu},\\mu) + J_{c}(x_{\\mu})^{T}\\lambda_{\\mu}& =  0\\\\\nc(x_{\\mu}) & =  0\\end{split}\\]\nThe derivations for \\(\\nabla B\\) only holds for the \\(x\\) variables, so that:\n\n\\[\\begin{split}\\nabla B(x,\\mu)  =  \\nabla f(x) + \\left(\\begin{matrix}\\mu/(x_{u,1}-x_{1}) \\\\ \\vdots \\\\ \\mu/(x_{u,n}-x_{n})\\end{matrix}\\right) - \\left(\\begin{matrix}\\mu/(x_{1}-x_{l,1}) \\\\ \\vdots \\\\ \\mu/(x_{n}-x_{l,n})\\end{matrix}\\right)\\end{split}\\]\nIf we respectively call \\(z_{u}(x,\\mu)  =  \\left(\\mu/(x_{u,1}-x_{1}),\\dots, \\mu/(x_{u,n}-x_{n})\\right)\\) and \\(z_{l}(x,\\mu)\\) the other vector appearing in the above equation, then the optimum \\((x_{\\mu},\\lambda_{\\mu})\\) satisfies:\n\n(28)¶\\[\\nabla f(x_{\\mu}) + J_{c}(x_{\\mu})^{T}\\lambda_{\\mu}+ z_{u}(x_{\\mu},\\mu) - z_{l}(x_{\\mu},\\mu)  =  0 \\quad \\text{and} \\quad c(x_{\\mu})  =  0\\]\nIn this equation, the \\(z_l\\) and \\(z_u\\) vectors seem to play the role of Lagrange multipliers for the simple bound inequalities, and indeed, when \\(\\mu\\rightarrow 0\\), they converge toward some suitable Lagrange multipliers for the KKT conditions, provided some technical assumptions are fulfilled (see [FORSGREN2002]).\nEquation (28) is solved by performing a Newton method in order to find a solution of (27) for each of the decreasing values of \\(\\mu\\).\nSome order 2 conditions are also taken into account to avoid convergence to local maximizers, see [FORSGREN2002] for details about them.\nIn the most classic IP algorithms, the Newton method is directly applied to (27).\nThis is in most case inefficient due to frequent computation of infeasible points.\nThese difficulties are avoided in Primal-Dual interior point methods where (27) is transformed into an extended system where \\(z_u\\) and \\(z_l\\) are treated as unknowns and the barrier problems are finding \\((x,\\lambda,z_u,z_l)\\in\\mathbb{R}^n\\times\\mathbb{R}^m\\times\\mathbb{R}^n\\times\\mathbb{R}^n\\) such that:\n\n(29)¶\\[\\begin{split}\\left\\lbrace\n\\begin{array}{rcl}\n   \\nabla f(x) + J_{c}(x)^{T}\\lambda+ z_{u} - z_{l} &  =  & 0 \\\\\n   c(x) &  =  & 0 \\\\\n   (X_u - X) z_u - \\mu e &  =  & 0 \\\\\n   (X - X_l) z_l - \\mu e &  =  & 0\n\\end{array}\n\\right.\\end{split}\\]\nWhere if \\(a\\) is a vector of \\(\\mathbb{R}^n\\), \\(A\\) denotes the diagonal matrix \\(A = (a_i \\delta_{ij})_{1\\leq i,j\\leq n}\\) and \\(e\\in\\mathbb{R}^{n}  =  (1,1,\\dots,1)\\).\nSolving this nonlinear system by the Newton method is known as being the primal-dual interior point method.\nHere again, more details are available in [FORSGREN2002].\nMost actual implementations introduce features in order to globalize the convergence capability of the method, essentially by adding some line-search steps to the Newton algorithm, or by using trust regions.\nFor the purpose of IPOPT, this is achieved by a filter line search methods, the details of which can be found in [WÄCHTER2006].\nMore IPOPT specific features or implementation details can be found in [WÄCHTER2006].\nWe will just retain that IPOPT is a smart Newton method for solving constrained optimization problems, with global convergence capabilities due to a robust line search method (in the sense that the algorithm will converge no matter the initializer).\nDue to the underlying Newton method, the optimization process requires expressions of all derivatives up to the order 2 of the fitness function as well as those of the constraints.\nFor problems whose Hessian matrices are difficult to compute or lead to high dimensional dense matrices, it is possible to use a BFGS approximation of these objects at the cost of a much slower convergence rate.\n\n\nIPOPT in FreeFEM¶\nCalling the IPOPT optimizer in a FreeFEM script is done with the IPOPT function included in the ff-Ipopt dynamic library.\nIPOPT is designed to solve constrained minimization problems in the form:\n\n\\[\\begin{split}\\mathrm{find} & x_{0}  =  \\underset{x\\in\\mathbb{R}^{n}}{\\operatorname{argmin}} f(x) \\\\\n\\mathrm{s.t.} & \\left\\lbrace\n\\begin{array}{l r}\n   \\forall i\\leq n,\\ x_{i}^{\\mathrm{lb}}\\leq x_{i}\\leq x_{i}^{\\mathrm{ub}} & \\mathrm{\\ (simple\\ bounds)} \\\\\n   \\forall i\\leq m,\\ c_{i}^{\\mathrm{lb}}\\leq c_{i}(x)\\leq c_{i}^{\\mathrm{ub}} & \\mathrm{(constraints\\ functions)}\n\\end{array}\n\\right.\\end{split}\\]\nWhere \\(\\mathrm{ub}\\) and \\(\\mathrm{lb}\\) stand for “upper bound” and “lower bound”.\nIf for some \\(i, 1\\leq i\\leq m\\) we have \\(c_{i}^{\\mathrm{lb}}  =  c_{i}^{\\mathrm{ub}}\\), it means that \\(c_{i}\\) is an equality constraint, and an inequality one if \\(c_{i}^{\\mathrm{lb}} < c_{i}^{\\mathrm{ub}}\\).\nThere are different ways to pass the fitness function and constraints.\nThe more general one is to define the functions using the keyword func.\nAny returned matrix must be a sparse one (type matrix, not a real[int,int]):\n1 func real J (real[int] &X) {...} //Fitness Function, returns a scalar\n2 func real[int] gradJ (real[int] &X) {...} //Gradient is a vector\n3 \n4 func real[int] C (real[int] &X) {...} //Constraints\n5 func matrix jacC (real[int] &X) {...} //Constraints Jacobian\n\n\n\nWarning\nIn the current version of FreeFEM, returning a matrix object that is local to a function block leads to undefined results.\nFor each sparse matrix returning function you define, an extern matrix object has to be declared, whose associated function will overwrite and return on each call.\nHere is an example for jacC:\n1 matrix jacCBuffer; //just declare, no need to define yet\n2 func matrix jacC (real[int] &X){\n3    ...//fill jacCBuffer\n4    return jacCBuffer;\n5 }\n\n\n\n\nWarning\nIPOPT requires the structure of each matrix at the initialization of the algorithm.\nSome errors may occur if the matrices are not constant and are built with the matrix A  =  [I,J,C] syntax, or with an intermediary full matrix (real[int,int]), because any null coefficient is discarded during the construction of the sparse matrix.\nIt is also the case when making matrices linear combinations, for which any zero coefficient will result in the suppression of the matrix from the combination.\nSome controls are available to avoid such problems.\nCheck the named parameter descriptions (checkindex, structhess and structjac can help).\nWe strongly advice to use varf as much as possible for the matrix forging.\n\nThe Hessian returning function is somewhat different because it has to\nbe the Hessian of the Lagrangian function:\n\n\\[(x,\\sigma_{f},\\lambda)\\mapsto\\sigma_{f}\\nabla^{2}f(x)+\\displaystyle{\\sum_{i = 1}^{m}\\lambda_{i}\\nabla^{2}c_{i}(x)}\\ \\mathrm{ where }\\ \\lambda\\in\\mathbb{R}^{m}\\ \\mathrm{ and }\\ \\sigma\\in\\mathbb{R}\\]\nYour Hessian function should then have the following prototype:\n1 matrix hessianLBuffer; //Just to keep it in mind\n2 func matrix hessianL (real[int] &X, real sigma, real[int] &lambda){...}\n\n\nIf the constraints functions are all affine, or if there are only simple bound constraints, or no constraint at all, the Lagrangian Hessian is equal to the fitness function Hessian, one can then omit the sigma and lambda parameters:\n1 matrix hessianJBuffer;\n2 func matrix hessianJ (real[int] &X){...} //Hessian prototype when constraints are affine\n\n\nWhen these functions are defined, IPOPT is called this way:\n1 real[int] Xi  =  ... ; //starting point\n2 IPOPT(J, gradJ, hessianL, C, jacC, Xi, /*some named parameters*/);\n\n\nIf the Hessian is omitted, the interface will tell IPOPT to use the (L)BFGS approximation (it can also be enabled with a named parameter, see further).\nSimple bound or unconstrained problems do not require the constraints part, so the following expressions are valid:\n1 IPOPT(J, gradJ, C, jacC, Xi, ... ); //IPOPT with BFGS\n2 IPOPT(J, gradJ, hessianJ, Xi, ... ); //Newton IPOPT without constraints\n3 IPOPT(J, gradJ, Xi, ... ); //BFGS, no constraints\n\n\nSimple bounds are passed using the lb and ub named parameters, while constraint bounds are passed with the clb and cub ones.\nUnboundedness in some directions can be achieved by using the \\(1e^{19}\\) and \\(-1e^{19}\\) values that IPOPT recognizes as \\(+\\infty\\) and \\(-\\infty\\):\n1 real[int] xlb(n), xub(n), clb(m), cub(m);\n2 //fill the arrays...\n3 IPOPT(J, gradJ, hessianL, C, jacC, Xi, lb = xlb, ub = xub, clb = clb, cub = cub, /*some other named parameters*/);\n\n\nP2 fitness function and affine constraints function : In the case where the fitness function or constraints function can be expressed respectively in the following forms:\n\n\\[\\begin{split}\\begin{array}{c c}\n    \\forall x\\in\\mathbb{R}^{n},\\ f(x)  =  \\frac{1}{2}\\left\\langle Ax,x \\right\\rangle + \\left\\langle b,x\\right\\rangle & (A,b)\\in\\mathcal{M}_{n,n}(\\mathbb{R})\\times\\mathbb{R}^{n} \\\\\n    \\mathrm{or} ,\\ C(x)  =  Ax + b & (A,b)\\in\\mathcal{M}_{m,n}(\\mathbb{R})\\times\\mathbb{R}^{m}\n\\end{array}\\end{split}\\]\nwhere \\(A\\) and \\(b\\) are constant, it is possible to directly pass the \\((A,b)\\) pair instead of defining 3 (or 2) functions.\nIt also indicates to IPOPT that some objects are constant and that they have to be evaluated only once, thus avoiding multiple copies of the same matrix.\nThe syntax is:\n1 // Affine constraints with \"standard\" fitness function\n2 matrix A  =  ... ; //linear part of the constraints\n3 real[int] b  =  ... ; //constant part of constraints\n4 IPOPT(J, gradJ, hessianJ, [A, b], Xi, /*bounds and named parameters*/);\n5 //[b, A] would work as well.\n\n\nNote that if you define the constraints in this way, they don’t contribute to the Hessian, so the Hessian should only take one real[int] as an argument.\n1 // Affine constraints and P2 fitness func\n2 matrix A  =  ... ; //bilinear form matrix\n3 real[int] b  =  ... ; //linear contribution to f\n4 matrix Ac  =  ... ; //linear part of the constraints\n5 real[int] bc  =  ... ; //constant part of constraints\n6 IPOPT([A, b], [Ac, bc], Xi, /*bounds and named parameters*/);\n\n\nIf both objective and constraint functions are given this way, it automatically activates the IPOPT mehrotra_algorithm option (better for linear and quadratic programming according to the documentation).\nOtherwise, this option can only be set through the option file (see the named parameters section).\nA false case is the one of defining \\(f\\) in this manner while using standard functions for the constraints:\n1 matrix A  =  ... ; //bilinear form matrix\n2 real[int] b  =  ... ; //linear contribution to f\n3 func real[int] C(real[int] &X){...} //constraints\n4 func matrix jacC(real[int] &X){...} //constraints Jacobian\n5 IPOPT([A, b], C, jacC, Xi, /*bounds and named parameters*/);\n\n\nIndeed, when passing [A, b] in order to define \\(f\\), the Lagrangian Hessian is automatically built and has the constant \\(x \\mapsto A\\) function, with no way to add possible constraint contributions, leading to incorrect second order derivatives.\nSo, a problem should be defined like that in only two cases:\n\nconstraints are nonlinear but you want to use the BFGS mode (then add bfgs = 1 to the named parameter),\nconstraints are affine, but in this case, compatible to pass in the same way\n\nHere are some other valid definitions of the problem (cases when \\(f\\) is a pure quadratic or linear form, or \\(C\\) a pure linear function, etc…):\n1 // Pure quadratic f - A is a matrix\n2 IPOPT(A, /*constraints arguments*/, Xi, /*bound and named parameters*/);\n3 // Pure linear f - b is a real[int]\n4 IPOPT(b, /*constraints arguments*/, Xi, /*bound and named parameters*/);\n5 // Linear constraints - Ac is a matrix\n6 IPOPT(/*fitness function arguments*/, Ac, Xi, /*bound and named parameters*/);\n\n\nReturned Value : The IPOPT function returns an error code of type int.\nA zero value is obtained when the algorithm succeeds and positive values reflect the fact that IPOPT encounters minor troubles.\nNegative values reveal more problematic cases.\nThe associated IPOPT return tags are listed in the table below.\nThe IPOPT pdf documentation provides a more accurate description of these return statuses:\n\n\n\n\n\n\nSuccess\nFailures\n\n\n\n0 Solve_Succeeded\n\n\n1 Solved_To_Acceptable_Level\n-1 Maximum_Iterations_Exceeded\n\n2 Infeasible_Problem_Detected\n-2 Restoration_Failed\n\n3 Search_Direction_Becomes_Too_Small\n-3 Error_In_Step_Computation\n\n4 Diverging_Iterates\n-4 Maximum_CpuTime_Exceeded\n\n5 User_Requested_Stop\n\n\n6 Feasible_Point_Found\n\n\n\n\n\n\n\n\n\n\nProblem definition issues\nCritical errors\n\n\n\n-10 Not_Enough_Degrees_Of_Freedom\n-100 Unrecoverable_Exception\n\n-11 Invalid_Problem_Definition\n-101 NonIpopt_Exception_Thrown\n\n-12 Invalid_Option\n-102 Insufficient_Memory\n\n-13 Invalid_Number_Detected\n-199 Internal_Error\n\n\n\nNamed Parameters : The available named parameters in this interface are those we thought to be the most subject to variations from one optimization to another, plus a few that are interface specific.\nThough, as one could see at IPOPT Linear solver, there are many parameters that can be changed within IPOPT, affecting the algorithm behavior.\nThese parameters can still be controlled by placing an option file in the execution directory.\nNote that IPOPT’s pdf documentation may provides more information than the previously mentioned online version for certain parameters.\nThe in-script available parameters are:\n\nlb, ub : real[int] for lower and upper simple bounds upon the search variables must be of size \\(n\\) (search space dimension).\nIf two components of the same index in these arrays are equal then the corresponding search variable is fixed.\nBy default IPOPT will remove any fixed variable from the optimization process and always use the fixed value when calling functions.\nIt can be changed using the fixedvar parameter.\nclb, cub : real[int] of size \\(m\\) (number of constraints) for lower and upper constraints bounds.\nEquality between two components of the same index \\(i\\) in clb and cub reflect an equality constraint.\nstructjacc : To pass the greatest possible structure (indexes of non null coefficients) of the constraint Jacobians under the form [I,J] where I and J are two integer arrays.\nIf not defined, the structure of the constraint Jacobians, evaluated in Xi, is used (no issue if the Jacobian is constant or always defined with the same varf, hazardous if it is with a triplet array or if a full matrix is involved).\nstructhess : Same as above but for the Hessian function (unused if \\(f\\) is P2 or less and constraints are affine).\nHere again, keep in mind that it is the Hessian of the Lagrangian function (which is equal to the Hessian of \\(f\\) only if constraints are affine).\nIf no structure is given with this parameter, the Lagrangian Hessian is evaluated on the starting point, with \\(\\sigma = 1\\) and \\(\\lambda  =  (1,1,\\dots,1)\\) (it is safe if all the constraints and fitness function Hessians are constant or build with varf, and here again it is less reliable if built with a triplet array or a full matrix).\ncheckindex : A bool that triggers a dichotomic index search when matrices are copied from FreeFEM functions to IPOPT arrays.\nIt is used to avoid wrong index matching when some null coefficients are removed from the matrices by FreeFEM.\nIt will not solve the problems arising when a too small structure has been given at the initialization of the algorithm.\nEnabled by default (except in cases where all matrices are obviously constant).\nwarmstart : If set to true, the constraints dual variables \\(\\lambda\\), and simple bound dual variables are initialized with the values of the arrays passed to lm, lz and uz named parameters (see below).\nlm : real[int] of size \\(m\\), which is used to get the final values of the constraints dual variables \\(\\lambda\\) and/or initialize them in case of a warm start (the passed array is also updated to the last dual variables values at the end of the algorithm).\nlz, uz : real[int] of size \\(n\\) to get the final values and/or initialize (in case of a warm start) the dual variables associated to simple bounds.\ntol : real, convergence tolerance for the algorithm, the default value is \\(10^{-8}\\).\nmaxiter : int, maximum number of iterations with 3000 as default value.\nmaxcputime : real value, maximum runtime duration. Default is \\(10^{6}\\) (almost 11 and a halfdays).\nbfgs : bool enabling or not the (low-storage) BFGS approximation of the Lagrangian Hessian.\nIt is set to false by default, unless there is no way to compute the Hessian with the functions that have been passed to IPOPT.\nderivativetest : Used to perform a comparison of the derivatives given to IPOPT with finite differences computation.\nThe possible string values are : \"none\" (default), \"first-order\", \"second-order\" and \"only-second-order\".\nThe associated derivative error tolerance can be changed via the option file.\nOne should not care about any error given by it before having tried, and failed, to perform a first optimization.\ndth : Perturbation parameter for the derivative test computations with finite differences.\nSet by default to \\(10^{-8}\\).\ndttol : Tolerance value for the derivative test error detection (default value unknown yet, maybe \\(10^{-5}\\)).\noptfile : string parameter to specify the IPOPT option file name.\nIPOPT will look for a ipopt.opt file by default.\nOptions set in the file will overwrite those defined in the FreeFEM script.\nprintlevel : An int to control IPOPT output print level, set to 5 by default, the possible values are from 0 to 12.\nA description of the output information is available in the PDF documentation of IPOPT.\nfixedvar : string for the definition of simple bound equality constraints treatment : use \"make_parameter\" (default value) to simply remove them from the optimization process (the functions will always be evaluated with the fixed value for those variables), \"make_constraint\" to treat them as any other constraint or \"relax_bounds\" to relax fixing bound constraints.\nmustrategy : a string to choose the update strategy for the barrier parameter \\(\\mu\\).\nThe two possible tags are \"monotone\", to use the monotone (Fiacco-McCormick) strategy, or \"adaptive\" (default setting).\nmuinit : real positive value for the barrier parameter initialization.\nIt is only relevant when mustrategy has been set to monotone.\npivtol : real value to set the pivot tolerance for the linear solver. A smaller number pivots for sparsity, a larger number pivots for stability.\nThe value has to be in the \\([0,1]\\) interval and is set to \\(10^{-6}\\) by default.\nbrf : Bound relax factor: before starting the optimization, the bounds given by the user are relaxed.\nThis option sets the factor for this relaxation.\nIf it is set to zero, then the bound relaxation is disabled.\nThis real has to be positive and its default value is \\(10^{-8}\\).\nobjvalue : An identifier to a real type variable to get the last value of the objective function (best value in case of success).\nmumin : minimum value for the barrier parameter \\(\\mu\\), a real with \\(10^{-11}\\) as default value.\nlinesearch : A boolean which disables the line search when set to false.\nThe line search is activated by default.\nWhen disabled, the method becomes a standard Newton algorithm instead of a primal-dual system.\nThe global convergence is then no longer assured, meaning that many initializers could lead to diverging iterates.\nBut on the other hand, it can be useful when trying to catch a precise local minimum without having some out of control process making the iterate caught by some other near optimum.\n\n\n\n\nSome short examples using IPOPT¶\n\nTip\nIpopt variational inequality\nA very simple example consisting of, given two functions \\(f\\) and \\(g\\) (defined on \\(\\Omega\\subset\\mathbb{R}^{2}\\)), minimizing \\(J(u)  =  \\displaystyle{\\frac{1}{2}\\int_{\\Omega} \\vert\\nabla u\\vert^{2} - \\int_{\\Omega}fu}\\ \\), with \\(u\\leq g\\) almost everywhere:\n 1 // Solve\n 2 //- Delta u  =  f\n 3 //u < g\n 4 //u  =  0 on Gamma\n 5 load \"ff-Ipopt\";\n 6 \n 7 // Parameters\n 8 int nn  =  20;\n 9 func f  =  1.; //rhs function\n10 real r  =  0.03, s  =  0.1;\n11 func g  =  r - r/2*exp(-0.5*(square(x-0.5) + square(y-0.5))/square(s));\n12 \n13 // Mesh\n14 mesh Th  =  square(nn, nn);\n15 \n16 // Fespace\n17 fespace Vh(Th, P2);\n18 Vh u  =  0;\n19 Vh lb  =  -1.e19;\n20 Vh ub  =  g;\n21 \n22 // Macro\n23 macro Grad(u) [dx(u), dy(u)] //\n24 \n25 // Problem\n26 varf vP (u, v)\n27     =  int2d(Th)(\n28         Grad(u)'*Grad(v)\n29    )\n30    - int2d(Th)(\n31         f*v\n32    )\n33    ;\n\n\nHere we build the matrix and second member associated to the function to fully and finally minimize it.\nThe [A,b] syntax for the fitness function is then used to pass it to IPOPT.\n1 matrix A  =  vP(Vh, Vh, solver = CG);\n2 real[int] b  =  vP(0, Vh);\n\n\nWe use simple bounds to impose the boundary condition \\(u = 0\\) on \\(\\partial\\Omega\\), as well as the \\(u\\leq g\\) condition.\n 1 varf vGamma (u, v)  =  on(1, 2, 3, 4, u = 1);\n 2 real[int] onGamma  =  vGamma(0, Vh);\n 3 \n 4 //warning: the boundary conditions are given with lb and ub on border\n 5 ub[]  =  onGamma ? 0. : ub[];\n 6 lb[]  =  onGamma ? 0. : lb[];\n 7 \n 8 // Solve\n 9 IPOPT([A, b], u[], lb = lb[], ub = ub[]);\n10 \n11 // Plot\n12 plot(u);\n\n\n\n\nTip\nIpopt variational inequality 2\nLet \\(\\Omega\\) be a domain of \\(\\mathbb{R}^{2}\\).\n\\(f_{1}, f_{2}\\in L^{2}(\\Omega)\\) and \\(g_{1}, g_{2} \\in L^{2}(\\partial\\Omega)\\) four given functions with \\(g_{1}\\leq g_{2}\\) almost everywhere.\nWe define the space:\n\n\\[V  =  \\left\\lbrace (v_{1},v_{2})\\in H^{1}(\\Omega)^{2} ; v_{1}\\vert_{\\partial\\Omega} = g_{1}, v_{2}\\vert_{\\partial\\Omega} = g_{2}, v_{1}\\leq v_{2}\\ \\mathrm{a.e.}\\ \\right\\rbrace\\]\nas well as the function \\(J:H^{1}(\\Omega)^{2}\\longrightarrow \\mathbb{R}\\):\n\n\\[J(v_{1},v_{2})  =  \\displaystyle{\\frac{1}{2}\\int_{\\Omega}\\vert\\nabla v_{1}\\vert^{2} - \\int_{\\Omega} f_{1}v_{1} + \\frac{1}{2}\\int_{\\Omega}\\vert\\nabla v_{2}\\vert^{2} - \\int_{\\Omega} f_{2}v_{2}}\\]\nThe problem entails finding (numerically) two functions \\((u_{1},u_{2})  =  \\underset{(v_{1},v_{2})\\in V}{\\operatorname{argmin}} J(v_{1},v_{2})\\).\n 1 load \"ff-Ipopt\";\n 2 \n 3 // Parameters\n 4 int nn  =  10;\n 5 func f1  =  10;//right hand side\n 6 func f2  =  -15;\n 7 func g1  =  -0.1;//Boundary condition functions\n 8 func g2  =  0.1;\n 9 \n10 // Mesh\n11 mesh Th  =  square(nn, nn);\n12 \n13 // Fespace\n14 fespace Vh(Th, [P1, P1]);\n15 Vh [uz, uz2]  =  [1, 1];\n16 Vh [lz, lz2]  =  [1, 1];\n17 Vh [u1, u2]  =  [0, 0]; //starting point\n18 \n19 fespace Wh(Th, [P1]);\n20 Wh lm = 1.;\n21 \n22 // Macro\n23 macro Grad(u) [dx(u), dy(u)] //\n24 \n25 // Loop\n26 int iter = 0;\n27 while (++iter){\n28    // Problem\n29    varf vP ([u1, u2], [v1, v2])\n30        =  int2d(Th)(\n31            Grad(u1)'*Grad(v1)\n32          + Grad(u2)'*Grad(v2)\n33       )\n34       - int2d(Th)(\n35            f1*v1\n36          + f2*v2\n37       )\n38       ;\n39 \n40    matrix A  =  vP(Vh, Vh); //fitness function matrix\n41    real[int] b  =  vP(0, Vh); //and linear form\n42 \n43    int[int] II1  =  [0], II2  =  [1];//Constraints matrix\n44    matrix C1  =  interpolate (Wh, Vh, U2Vc = II1);\n45    matrix C2  =  interpolate (Wh, Vh, U2Vc = II2);\n46    matrix CC  =  -1*C1 + C2; // u2 - u1 > 0\n47    Wh cl  =  0; //constraints lower bounds (no upper bounds)\n48 \n49    //Boundary conditions\n50    varf vGamma ([u1, u2], [v1, v2])  =  on(1, 2, 3, 4, u1 = 1, u2 = 1);\n51    real[int] onGamma  =  vGamma(0, Vh);\n52    Vh [ub1, ub2]  =  [g1, g2];\n53    Vh [lb1, lb2]  =  [g1, g2];\n54    ub1[]  =  onGamma ? ub1[] : 1e19; //Unbounded in interior\n55    lb1[]  =  onGamma ? lb1[] : -1e19;\n56 \n57    Vh [uzi, uzi2]  =  [uz, uz2], [lzi, lzi2]  =  [lz, lz2];\n58    Wh lmi  =  lm;\n59    Vh [ui1, ui2]  =  [u1, u2];\n60 \n61    // Solve\n62    IPOPT([b, A], CC, ui1[], lb = lb1[], clb = cl[], ub = ub1[], warmstart = iter>1, uz = uzi[], lz = lzi[], lm = lmi[]);\n63 \n64    // Plot\n65    plot(ui1, ui2, wait = true, nbiso = 60, dim = 3);\n66 \n67    if(iter > 1) break;\n68 \n69    // Mesh adpatation\n70    Th  =  adaptmesh(Th, [ui1, ui2], err = 0.004, nbvx = 100000);\n71    [uz, uz2]  =  [uzi, uzi2];\n72    [lz, lz2]  =  [lzi, lzi2];\n73    [u1, u2]  =  [ui1, ui2];\n74    lm  =  lmi;\n75 }\n\n\n\n\n\n\nFig. 121 Numerical Approximation of the Variational Inequality¶\n\n\n\n\n\nFig. 122 Numerical Approximation of the Variational Inequality¶\n\n\nVariational inequality\n\n\n\n3D constrained minimum surface with IPOPT¶\n\nArea and volume expressions¶\nThis example is aimed at numerically solving some constrained minimum surface problems with the IPOPT algorithm.\nWe restrain to \\(C^{k}\\) (\\(k\\geq 1\\)), closed, spherically parametrizable surfaces, i.e. surfaces \\(S\\) such that:\n\n\\[\\begin{split}\\exists \\rho \\in C^{k}([0,2\\pi ]\\times[0,\\pi] ) \\vert\nS  =  \\left\\lbrace\nX  =  \\left(\n\\begin{array} {c}\n \\rho(\\theta,\\phi) \\\\\n 0 \\\\\n 0\n\\end{array}\n\\right)\n, (\\theta,\\phi) \\in [0,2\\pi ]\\times[0,\\pi]\n \\right\\rbrace\\end{split}\\]\nWhere the components are expressed in the spherical coordinate system.\nLet’s call \\(\\Omega\\) the \\([0,2\\pi ]\\times[0,\\pi]\\) angular parameters set.\nIn order to exclude self crossing and opened shapes, the following assumptions upon \\(\\rho\\) are made:\n\n\\[\\rho \\geq 0\\ \\ \\mathrm{and}\\ \\ \\forall \\phi, \\rho(0,\\phi)  =  \\rho(2\\pi,\\phi)\\]\nFor a given function \\(\\rho\\) the first fundamental form (the metric) of the defined surface has the following matrix representation:\n\n(30)¶\\[\\begin{split}G  = \n\\left(\n\\begin{array}{c c}\n    \\rho^{2}\\sin^{2}(\\phi) + (\\partial_{\\theta}\\rho)^{2} &\\partial_{\\theta}\\rho\\partial_{\\phi}\\rho \\\\\n    \\partial_{\\theta}\\rho\\partial_{\\phi}\\rho & \\rho^{2} + (\\partial_{\\phi}\\rho)^{2} \\\\\n\\end{array}\n\\right)\\end{split}\\]\nThis metric is used to express the area of the surface.\nLet \\(g = \\det(G)\\), then we have:\n\n(31)¶\\[\\begin{split}\\begin{array}{ll}\n    \\mathcal{A}(\\rho) & =  \\int{\\Omega}{\\left\\| \\partial_{\\theta} X \\wedge \\partial_{\\phi} X \\right\\|}  = \\int{\\Omega}{\\sqrt{g}}\\\\\n        & = \\int{\\Omega}{\\sqrt{ \\rho^{2}(\\partial_{\\theta}\\rho)^{2} + \\rho^{4}\\sin^{2}(\\phi) + \\rho^{2}(\\partial_{\\phi}\\rho)^{2}\\sin^{2}(\\phi)}d\\theta d\\phi}\n\\end{array}\\end{split}\\]\nThe volume of the space enclosed within the shape is easier to express:\n\n(32)¶\\[\\mathcal{V}(\\rho)\n =  \\int{\\Omega}{\\int_{0}^{\\rho(\\theta,\\phi)} r^{2}\\sin(\\phi) dr d\\theta d\\phi}\n =  \\frac{1}{3}\\int{\\Omega}{\\rho^{3} \\sin(\\phi) d\\theta d\\phi}\\]\n\n\nDerivatives¶\nIn order to use a Newton based interior point optimization algorithm, one must be able to evaluate the derivatives of \\(\\mathcal{A}\\) and \\(\\mathcal{V}\\) with respect to \\(rho\\).\nConcerning the area, we have the following result:\n\n\\[\\forall v\\in C^{1}(\\Omega) \\ , \\ \\langle d\\mathcal{A}(\\rho),v\\rangle\n =  \\int{\\Omega}{\\frac{1}{2} \\frac{ d\\bar{g}(\\rho)(v)}{\\sqrt{g}}d\\theta d\\phi }\\]\nWhere \\(\\bar{g}\\) is the application mapping the \\((\\theta,\\phi) \\mapsto g(\\theta,\\phi)\\) scalar field to \\(\\rho\\).\nThis leads to the following expression, easy to transpose in a freefem script using:\n\n(33)¶\\[\\begin{split}\\begin{array}{r c l}\n    \\forall v\\in C^{1}(\\Omega)& &\\\\\n    \\langle d\\mathcal{A}(\\rho),v\\rangle & = & \\int{\\Omega}{ \\left(2\\rho^{3}\\sin^{2}(\\phi) + \\rho(\\partial_{\\theta}\\rho)^{2} + \\rho(\\partial_{\\phi}\\rho)^{2}\\sin^{2}(\\phi) \\right) v} \\\\\n    & & +\\int{\\Omega}{\\ \\rho^{2}\\partial_{\\theta}\\rho\\partial_{\\theta} v\\ + \\ \\rho^{2}\\partial_{\\phi}\\rho\\sin^{2}(\\phi)\\partial_{\\phi} v }\n\\end{array}\\end{split}\\]\nWith a similar approach, one can derive an expression for second order derivatives.\nHowever, comporting no specific difficulties, the detailed calculus are tedious, the result is that these derivatives can be written using a \\(3\\times 3\\) matrix \\(\\mathbf{B}\\) whose coefficients are expressed in term of \\(\\rho\\) and its derivatives with respect to \\(\\theta\\) and \\(\\phi\\), such that:\n\n(34)¶\\[\\begin{split}\\forall (w,v)\\in C^{1}(\\Omega)\\ ,\\ d^{2}\\mathcal{A}(\\rho)(w,v)  =  \\int{\\Omega}\n{\n   \\left(\\begin{array}{c c c} w & \\partial_{\\theta} w & \\partial_{\\phi} w \\end{array}\\right)\n   \\mathbf{B}\n} \\left( \\begin{array}{c} v \\\\ \\partial_{\\theta} v \\\\ \\partial_{\\phi} v \\end{array} \\right) d\\theta d\\phi\\end{split}\\]\nDeriving the volume function derivatives is again an easier task.\nWe immediately get the following expressions:\n\n(35)¶\\[\\begin{split}\\begin{array}{r c l}\n   \\forall v\\ ,\\ \\langle d\\mathcal{V}(\\rho),v\\rangle &  =  & \\int{\\Omega}{\\rho^{2}\\sin(\\phi)v\\ d\\theta d\\phi} \\\\\n   \\forall w,v\\ , d^{2}\\mathcal{V}(\\rho)(w,v) &  =  & \\int{\\Omega}{2\\rho\\sin(\\phi)wv\\ d\\theta d\\phi}\n\\end{array}\\end{split}\\]\n\n\nThe problem and its script¶\nThe whole code is available in IPOPT minimal surface & volume example.\nWe propose to solve the following problem:\n\nTip\nGiven a positive function \\(\\rho_{\\mathrm{object}}\\) piecewise continuous, and a scalar \\(\\mathcal{V}_{\\mathrm{max}} > \\mathcal{V}(\\rho_{\\mathrm{object}})\\), find \\(\\rho_{0}\\) such that:\n\n\\[\\rho_{0}  =  \\underset{\\rho\\in C^{1}(\\Omega)}{\\operatorname{argmin}}\\ \\mathcal{A}(\\rho)\\ ,\\ \\mathrm{s.t.}\\ \\rho_{0}\\geq\\rho_{\\mathrm{object}} \\ \\mathrm{and\\ } \\mathcal{V}(\\rho_{0})\\leq \\mathcal{V}_{\\mathrm{max}}\\]\nIf \\(\\rho_{\\mathrm{object}}\\) is the spherical parametrization of the surface of a 3-dimensional object (domain) \\(\\mathcal{O}\\), it can be interpreted as finding the surface with minimum area enclosing the object with a given maximum volume. If \\(\\mathcal{V}_{\\mathrm{max}}\\) is close to \\(\\mathcal{V}(\\rho_{\\mathrm{object}})\\), so should be \\(\\rho_{0}\\) and \\(\\rho_{\\mathrm{object}}\\). With higher values of \\(\\mathcal{V}_{\\mathrm{max}}\\), \\(\\rho\\) should be closer to the unconstrained minimum surface surrounding \\(\\mathcal{O}\\) which is obtained as soon as \\(\\mathcal{V}_{\\mathrm{max}} \\geq \\frac{4}{3}\\pi \\|\\rho_{\\mathrm{object}}\\|_{\\infty}^{3}\\) (sufficient but not necessary).\nIt also could be interesting to solve the same problem with the constraint \\(\\mathcal{V}(\\rho_{0})\\geq \\mathcal{V}_{\\mathrm{min}}\\) which leads to a sphere when \\(\\mathcal{V}_{\\mathrm{min}} \\geq \\frac{1}{6}\\pi \\mathrm{diam}(\\mathcal{O})^{3}\\) and moves toward the solution of the unconstrained problem as \\(\\mathcal{V}_{\\mathrm{min}}\\) decreases.\nWe start by meshing the domain \\([0,2\\pi]\\times\\ [0,\\pi]\\), then a periodic P1 finite elements space is defined.\n 1 load \"msh3\";\n 2 load \"medit\";\n 3 load \"ff-Ipopt\";\n 4 \n 5 // Parameters\n 6 int nadapt  =  3;\n 7 real alpha  =  0.9;\n 8 int np  =  30;\n 9 real regtest;\n10 int shapeswitch  =  1;\n11 real sigma  =  2*pi/40.;\n12 real treshold  =  0.1;\n13 real e  =  0.1;\n14 real r0  =  0.25;\n15 real rr  =  2-r0;\n16 real E  =  1./(e*e);\n17 real RR  =  1./(rr*rr);\n18 \n19 // Mesh\n20 mesh Th  =  square(2*np, np, [2*pi*x, pi*y]);\n21 \n22 // Fespace\n23 fespace Vh(Th, P1, periodic = [[2, y], [4, y]]);\n24 //Initial shape definition\n25 //outside of the mesh adaptation loop to initialize with the previous optimial shape found on further iterations\n26 Vh startshape  =  5;\n\n\nWe create some finite element functions whose underlying arrays will be used to store the values of dual variables associated to all the constraints in order to reinitialize the algorithm with it in the case where we use mesh adaptation. Doing so, the algorithm will almost restart at the accuracy level it reached before mesh adaptation, thus saving many iterations.\n1 Vh uz  =  1., lz  =  1.;\n2 rreal[int] lm  =  [1];\n\n\nThen, follows the mesh adaptation loop, and a rendering function, Plot3D, using 3D mesh to display the shape it is passed with medit (the movemesh23 procedure often crashes when called with ragged shapes).\n 1 for(int kkk  =  0; kkk < nadapt; ++kkk){\n 2    int iter = 0;\n 3    func sin2  =  square(sin(y));\n 4 \n 5    // A function which transform Th in 3d mesh (r = rho)\n 6    //a point (theta,phi) of Th becomes ( r(theta,phi)*cos(theta)*sin(phi) , r(theta,phi)*sin(theta)*sin(phi) , r(theta,phi)*cos(phi) )\n 7    //then displays the resulting mesh with medit\n 8    func int Plot3D (real[int] &rho, string cmm, bool ffplot){\n 9       Vh rhoo;\n10       rhoo[]  =  rho;\n11       //mesh sTh  =  square(np, np/2, [2*pi*x, pi*y]);\n12       //fespace sVh(sTh, P1);\n13       //Vh rhoplot  =  rhoo;\n14       try{\n15          mesh3 Sphere  =  movemesh23(Th, transfo = [rhoo(x,y)*cos(x)*sin(y), rhoo(x,y)*sin(x)*sin(y), rhoo(x,y)*cos(y)]);\n16          if(ffplot)\n17             plot(Sphere);\n18          else\n19             medit(cmm, Sphere);\n20       }\n21       catch(...){\n22          cout << \"PLOT ERROR\" << endl;\n23       }\n24       return 1;\n25    }\n26 }\n\n\nHere are the functions related to the area computation and its shape derivative, according to equations (31) and (33):\n 1 // Surface computation\n 2 //Maybe is it possible to use movemesh23 to have the surface function less complicated\n 3 //However, it would not simplify the gradient and the hessian\n 4 func real Area (real[int] &X){\n 5    Vh rho;\n 6    rho[]  =  X;\n 7    Vh rho2  =  square(rho);\n 8    Vh rho4  =  square(rho2);\n 9    real res  =  int2d(Th)(sqrt(rho4*sin2 + rho2*square(dx(rho)) + rho2*sin2*square(dy(rho))));\n10    ++iter;\n11    if(1)\n12       plot(rho, value = true, fill = true, cmm = \"rho(theta,phi) on [0,2pi]x[0,pi] - S = \"+res, dim = 3);\n13    else\n14       Plot3D(rho[], \"shape_evolution\", 1);\n15    return res;\n16 }\n17 \n18 func real[int] GradArea (real[int] &X){\n19    Vh rho, rho2;\n20    rho[]  =  X;\n21    rho2[]  =  square(X);\n22    Vh sqrtPsi, alpha;\n23    {\n24       Vh dxrho2  =  dx(rho)*dx(rho), dyrho2  =  dy(rho)*dy(rho);\n25       sqrtPsi  =  sqrt(rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2);\n26       alpha  =  2.*rho2*rho*sin2 + rho*dxrho2 + rho*dyrho2*sin2;\n27    }\n28    varf dArea (u, v)\n29        =  int2d(Th)(\n30            1./sqrtPsi * (alpha*v + rho2*dx(rho)*dx(v) + rho2*dy(rho)*sin2*dy(v))\n31       )\n32       ;\n33 \n34    real[int] grad  =  dArea(0, Vh);\n35    return grad;\n36 }\n\n\nThe function returning the hessian of the area for a given shape is a bit blurry, thus we won’t show here all of equation (34) coefficients definition, they can be found in the edp file.\n 1 matrix hessianA;\n 2 func matrix HessianArea (real[int] &X){\n 3    Vh rho, rho2;\n 4    rho[]  =  X;\n 5    rho2  =  square(rho);\n 6    Vh sqrtPsi, sqrtPsi3, C00, C01, C02, C11, C12, C22, A;\n 7    {\n 8       Vh C0, C1, C2;\n 9       Vh dxrho2  =  dx(rho)*dx(rho), dyrho2  =  dy(rho)*dy(rho);\n10       sqrtPsi  =  sqrt( rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2);\n11       sqrtPsi3  =  (rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2)*sqrtPsi;\n12       C0  =  2*rho2*rho*sin2 + rho*dxrho2 + rho*dyrho2*sin2;\n13       C1  =  rho2*dx(rho);\n14       C2  =  rho2*sin2*dy(rho);\n15       C00  =  square(C0);\n16       C01  =  C0*C1;\n17       C02  =  C0*C2;\n18       C11  =  square(C1);\n19       C12  =  C1*C2;\n20       C22  =  square(C2);\n21       A  =  6.*rho2*sin2 + dxrho2 + dyrho2*sin2;\n22    }\n23    varf d2Area (w, v)\n24        = int2d(Th)(\n25            1./sqrtPsi * (\n26               A*w*v\n27             + 2*rho*dx(rho)*dx(w)*v\n28             + 2*rho*dx(rho)*w*dx(v)\n29             + 2*rho*dy(rho)*sin2*dy(w)*v\n30             + 2*rho*dy(rho)*sin2*w*dy(v)\n31             + rho2*dx(w)*dx(v)\n32             + rho2*sin2*dy(w)*dy(v)\n33          )\n34          + 1./sqrtPsi3 * (\n35               C00*w*v\n36             + C01*dx(w)*v\n37             + C01*w*dx(v)\n38             + C02*dy(w)*v\n39             + C02*w*dy(v)\n40             + C11*dx(w)*dx(v)\n41             + C12*dx(w)*dy(v)\n42             + C12*dy(w)*dx(v)\n43             + C22*dy(w)*dy(v)\n44          )\n45       )\n46       ;\n47    hessianA  =  d2Area(Vh, Vh);\n48    return hessianA;\n49 }\n\n\nAnd the volume related functions:\n 1 // Volume computation\n 2 func real Volume (real[int] &X){\n 3    Vh rho;\n 4    rho[]  =  X;\n 5    Vh rho3  =  rho*rho*rho;\n 6    real res  =  1./3.*int2d(Th)(rho3*sin(y));\n 7    return res;\n 8 }\n 9 \n10 func real[int] GradVolume (real[int] &X){\n11    Vh rho;\n12    rho[]  =  X;\n13    varf dVolume(u, v)  =  int2d(Th)(rho*rho*sin(y)*v);\n14    real[int] grad  =  dVolume(0, Vh);\n15    return grad;\n16 }\n17 \n18 matrix hessianV;\n19 func matrix HessianVolume(real[int] &X){\n20    Vh rho;\n21    rho[]  =  X;\n22    varf d2Volume(w, v)  =  int2d(Th)(2*rho*sin(y)*v*w);\n23    hessianV  =  d2Volume(Vh, Vh);\n24    return hessianV;\n25 }\n\n\nIf we want to use the volume as a constraint function we must wrap it and its derivatives in some FreeFEM functions returning the appropriate types.\nIt is not done in the above functions in cases where one wants to use it as a fitness function.\nThe lagrangian hessian also has to be wrapped since the Volume is not linear with respect to \\(\\rho\\), it has some non-null second order derivatives.\n1 func real[int] ipVolume (real[int] &X){ real[int] vol  =  [Volume(X)]; return vol; }\n2 matrix mdV;\n3 func matrix ipGradVolume (real[int] &X) { real[int,int] dvol(1,Vh.ndof); dvol(0,:)  =  GradVolume(X); mdV  =  dvol; return mdV; }\n4 matrix HLagrangian;\n5 func matrix ipHessianLag (real[int] &X, real objfact, real[int] &lambda){\n6    HLagrangian  =  objfact*HessianArea(X) + lambda[0]*HessianVolume(X);\n7    return HLagrangian;\n8 }\n\n\nThe ipGradVolume function could pose some troubles during the optimization process because the gradient vector is transformed in a sparse matrix, so any null coefficient will be discarded.\nHere we create the IPOPT structure manually and use the checkindex named-parameter to avoid bad indexing during copies.\nThis gradient is actually dense, there is no reason for some components to be constantly zero:\n1 int[int] gvi(Vh.ndof), gvj = 0:Vh.ndof-1;\n2 gvi  =  0;\n\n\nThese two arrays will be passed to IPOPT with structjacc = [gvi,gvj].\nThe last remaining things are the bound definitions.\nThe simple lower bound must be equal to the components of the P1 projection of \\(\\rho_{object}\\).\nAnd we choose \\(\\alpha\\in [0,1]\\) to set \\(\\mathcal{V}_{\\mathrm{max}}\\) to \\((1-\\alpha) \\mathcal{V}(\\rho_{object}) + \\alpha\\frac{4}{3}\\pi \\|\\rho_{\\mathrm{object}}\\|_{\\infty}^{3}\\):\n 1 func disc1  =  sqrt(1./(RR+(E-RR)*cos(y)*cos(y)))*(1+0.1*cos(7*x));\n 2 func disc2  =  sqrt(1./(RR+(E-RR)*cos(x)*cos(x)*sin2));\n 3 \n 4 if(1){\n 5    lb  =  r0;\n 6    for (int q  =  0; q < 5; ++q){\n 7       func f  =  rr*Gaussian(x, y, 2*q*pi/5., pi/3.);\n 8       func g  =  rr*Gaussian(x, y, 2*q*pi/5.+pi/5., 2.*pi/3.);\n 9       lb  =  max(max(lb, f), g);\n10    }\n11    lb  =  max(lb, rr*Gaussian(x, y, 2*pi, pi/3));\n12 }\n13 lb  =  max(lb, max(disc1, disc2));\n14 real Vobj  =  Volume(lb[]);\n15 real Vnvc  =  4./3.*pi*pow(lb[].linfty,3);\n16 \n17 if(1)\n18    Plot3D(lb[], \"object_inside\", 1);\n19 real[int] clb  =  0., cub  =  [(1-alpha)*Vobj + alpha*Vnvc];\n\n\nCalling IPOPT:\n1 int res  =  IPOPT(Area, GradArea, ipHessianLag, ipVolume, ipGradVolume,\n2    rc[], ub = ub[], lb = lb[], clb = clb, cub = cub, checkindex = 1, maxiter = kkk<nadapt-1 ? 40:150,\n3    warmstart = kkk, lm = lm, uz = uz[], lz = lz[], tol = 0.00001, structjacc = [gvi,gvj]);\n4 cout << \"IPOPT: res  = \" << res << endl ;\n5 \n6 // Plot\n7 Plot3D(rc[], \"Shape_at_\"+kkk, 1);\n8 Plot3D(GradArea(rc[]), \"ShapeGradient\", 1);\n\n\nFinally, before closing the mesh adaptation loop, we have to perform the said adaptation.\nThe mesh is adaptated with respect to the \\(X = (\\rho, 0, 0)\\) (in spherical coordinates) vector field, not directly with respect to \\(\\rho\\), otherwise the true curvature of the 3D-shape would not be well taken into account.\n1 if (kkk < nadapt-1){\n2    Th  =  adaptmesh(Th, rc*cos(x)*sin(y), rc*sin(x)*sin(y), rc*cos(y),\n3       nbvx = 50000, periodic = [[2, y], [4, y]]);\n4    plot(Th, wait = true);\n5    startshape  =  rc;\n6    uz  =  uz;\n7    lz  =  lz;\n8 }\n\n\nHere are some pictures of the resulting surfaces obtained for decreasing values of \\(\\alpha\\) (and a slightly more complicated object than two orthogonal discs).\nWe return to the enclosed object when \\(\\alpha = 0\\):\n\n\n\n\n\n\n\nThe nlOpt optimizers¶\nThe ff-NLopt package provides a FreeFEM interface to the free/open-source library for nonlinear optimization, easing the use of several different free optimization (constrained or not) routines available online along with the PDE solver.\nAll the algorithms are well documented in NLopt documentation, therefore no exhaustive information concerning their mathematical specificities will be found here and we will focus on the way they are used in a FreeFEM script.\nIf needing detailed information about these algorithms, visit the website where a description of each of them is given, as well as many bibliographical links.\nMost of the gradient based algorithms of NLopt uses a full matrix approximation of the Hessian, so if you’re planning to solve a large scale problem, use the IPOPT optimizer which definitely surpass them.\nAll the NLopt features are identified that way:\n 1 load \"ff-NLopt\"\n 2 //define J, u, and maybe grad(J), some constraints etc...\n 3 real min  =  nloptXXXXXX(J, u, //Unavoidable part\n 4    grad = <name of grad(J)>, //if needed\n 5    lb =  //Lower bounds array\n 6    ub =  //Upper bounds array\n 7    ... //Some optional arguments:\n 8    //Constraints functions names,\n 9    //Stopping criteria,\n10    //Algorithm specific parameters,\n11    //Etc...\n12 );\n\n\nXXXXXX refers to the algorithm tag (not necessarily 6 characters long).\nu is the starting position (a real[int] type array) which will be overwritten by the algorithm, the value at the end being the found \\(argmin\\).\nAnd as usual, J is a function taking a real[int] type array as argument and returning a real.\ngrad, lb and ub are “half-optional” arguments, in the sense that they are obligatory for some routines but not all.\nThe possible optionally named parameters are the following, note that they are not used by all algorithms (some do not support constraints, or a type of constraints, some are gradient-based and others are derivative free, etc…).\nOne can refer to the table after the parameters description to check which are the named parameters supported by a specific algorithm.\nUsing an unsupported parameter will not stop the compiler work, seldom breaks runtime, and will just be ignored.\nWhen it is obvious you are missing a routine, you will get a warning message at runtime (for example if you pass a gradient to a derivative free algorithm, or set the population of a non-genetic one, etc…).\nIn the following description, \\(n\\) stands for the dimension of the search space.\nHalf-optional parameters :\n\ngrad =  The name of the function which computes the gradient of the cost function (prototype should be real[int] \\(\\rightarrow\\) real[int], both argument and result should have the size \\(n\\)).\nThis is needed as soon as a gradient-based method is involved, which is ignored if defined in a derivative free context.\nlb/ub  =  Lower and upper bounds arrays ( real[int] type) of size \\(n\\).\nUsed to define the bounds within which the search variable is allowed to move.\nNeeded for some algorithms, optional, or unsupported for others.\nsubOpt : Only enabled for the Augmented Lagrangian and MLSL methods who need a sub-optimizer in order to work.\nJust pass the tag of the desired local algorithm with a string.\n\nConstraints related parameters (optional - unused if not specified):\n\nIConst/EConst : Allows to pass the name of a function implementing some inequality (resp. equality) constraints on the search space.\nThe function type must be real[int] \\(\\rightarrow\\) real[int] where the size of the returned array is equal to the number of constraints (of the same type - it means that all of the constraints are computed in one vectorial function).\nIn order to mix inequality and equality constraints in a same minimization attempt, two vectorial functions have to be defined and passed.\nSee example (36) for more details about how these constraints have to be implemented.\ngradIConst/gradEConst : Use to provide the inequality (resp. equality) constraints gradient.\nThese are real[int] \\(\\rightarrow\\) real[int,int] type functions.\nAssuming we have defined a constraint function (either inequality or equality) with \\(p\\) constraints, the size of the matrix returned by its associated gradient must be \\(p\\times n\\) (the \\(i\\)-th line of the matrix is the gradient of the \\(i\\)-th constraint).\nIt is needed in a gradient-based context as soon as an inequality or equality constraint function is passed to the optimizer and ignored in all other cases.\ntolIConst/tolEConst : Tolerance values for each constraint.\nThis is an array of size equal to the number of inequality (resp. equality) constraints.\nDefault value is set to \\(10^{-12}\\) for each constraint of any type.\n\nStopping criteria :\n\nstopFuncValue : Makes the algorithm end when the objective function reaches this real value.\nstopRelXTol : Stops the algorithm when the relative moves in each direction of the search space is smaller than this real value.\nstopAbsXTol : Stops the algorithm when the moves in each direction of the search space is smaller than the corresponding value in this real[int] array.\nstopRelFTol : Stops the algorithm when the relative variation of the objective function is smaller than this real value.\nstopAbsFTol : Stops the algorithm when the variation of the objective function is smaller than this real value.\nstopMaxFEval : Stops the algorithm when the number of fitness evaluations reaches this integer value.\nstopTime : Stops the algorithm when the optimization time in seconds exceeds this real value.\nThis is not a strict maximum: the time may exceed it slightly, depending upon the algorithm and on how slow your function evaluation is.\nNote that when an AUGLAG or MLSL method is used, the meta-algorithm and the sub-algorithm may have different termination criteria.\nThus, for algorithms of this kind, the following named parameters has been defined (just adding the SO prefix - for Sub-Optimizer) to set the ending condition of the sub-algorithm (the meta one uses the ones above): SOStopFuncValue, SOStopRelXTol, and so on… If these are not used, the sub-optimizer will use those of the master routine.\n\n\nOther named parameters :\n\npopSize : integer used to change the size of the sample for stochastic search methods.\nDefault value is a peculiar heuristic to the chosen algorithm.\nSOPopSize : Same as above, but when the stochastic search is passed to a meta-algorithm.\nnGradStored : The number (integer type) of gradients to “remember” from previous optimization steps: increasing this increases the memory requirements but may speed convergence.\nIt is set to a heuristic value by default.\nIf used with AUGLAG or MLSL, it will only affect the given subsidiary algorithm.\n\nThe following table sums up the main characteristics of each algorithm, providing the more important information about which features are supported by which algorithm and what are the unavoidable arguments they need.\nMore details can be found in NLopt documentation.\n\n\n\n\nTip\nVariational inequality\nLet \\(\\Omega\\) be a domain of \\(\\mathbb{R}^{2}\\), \\(f_{1}, f_{2}\\in L^{2}(\\Omega)\\) and \\(g_{1}, g_{2} \\in L^{2}(\\partial\\Omega)\\) four given functions with \\(g_{1}\\leq g_{2}\\) almost everywhere.\nWe define the space:\n\n\\[V  =  \\left\\lbrace (v_{1},v_{2})\\in H^{1}(\\Omega)^{2} ; v_{1}\\vert_{\\partial\\Omega} = g_{1}, v_{2}\\vert_{\\partial\\Omega} = g_{2}, v_{1}\\leq v_{2}\\ \\mathrm{a.e.}\\ \\right\\rbrace\\]\nas well as the function \\(J:H^{1}(\\Omega)^{2}\\longrightarrow \\mathbb{R}\\):\n\n(36)¶\\[J(v_{1},v_{2})  =  \\displaystyle{\\frac{1}{2}\\int_{\\Omega}\\vert\\nabla v_{1}\\vert^{2} - \\int_{\\Omega} f_{1}v_{1} + \\frac{1}{2}\\int_{\\Omega}\\vert\\nabla v_{2}\\vert^{2} - \\int_{\\Omega} f_{2}v_{2}}\\]\nThe problem consists in finding (numerically) two functions \\((u_{1},u_{2})  =  \\underset{(v_{1},v_{2})\\in V}{\\operatorname{argmin}} J(v_{1},v_{2})\\).\nThis can be interpreted as finding \\(u_{1}, u_{2}\\) as close as possible (in a certain sense) to the solutions of the Laplace equation with respectively \\(f_{1}, f_{2}\\) second members and \\(g_{1}, g_{2}\\) Dirichlet boundary conditions with the \\(u_{1}\\leq u_{2}\\) almost everywhere constraint.\nHere is the corresponding script to treat this variational inequality problem with one of the NLOpt algorithms.\n  1 //A brief script to demonstrate how to use the freefemm interfaced nlopt routines\n  2 //The problem consist in solving a simple variational inequality using one of the\n  3 //optimization algorithm of nlopt. We restart the algorithlm a few times after\n  4 //performing some mesh adaptation to get a more precise output\n  5 \n  6 load \"ff-NLopt\"\n  7 \n  8 // Parameters\n  9 int kas  =  3; //choose of the algorithm\n 10 int NN  =  10;\n 11 func f1  =  1.;\n 12 func f2  =  -1.;\n 13 func g1  =  0.;\n 14 func g2  =  0.1;\n 15 int iter  =  0;\n 16 int nadapt  =  2;\n 17 real starttol  =  1e-6;\n 18 real bctol  =  6.e-12;\n 19 \n 20 // Mesh\n 21 mesh Th  =  square(NN, NN);\n 22 \n 23 // Fespace\n 24 fespace Vh(Th, P1);\n 25 Vh oldu1, oldu2;\n 26 \n 27 // Adaptation loop\n 28 for (int al  =  0; al < nadapt; ++al){\n 29    varf BVF (v, w)  =  int2d(Th)(0.5*dx(v)*dx(w) + 0.5*dy(v)*dy(w));\n 30    varf LVF1 (v, w)  =  int2d(Th)(f1*w);\n 31    varf LVF2 (v, w)  =  int2d(Th)(f2*w);\n 32    matrix A  =  BVF(Vh, Vh);\n 33    real[int] b1  =  LVF1(0, Vh), b2  =  LVF2(0, Vh);\n 34 \n 35    varf Vbord (v, w)  =  on(1, 2, 3, 4, v = 1);\n 36 \n 37    Vh In, Bord;\n 38    Bord[]  =  Vbord(0, Vh, tgv = 1);\n 39    In[]  =  Bord[] ? 0:1;\n 40    Vh gh1  =  Bord*g1, gh2  =  Bord*g2;\n 41 \n 42    func real J (real[int] &X){\n 43       Vh u1, u2;\n 44       u1[]  =  X(0:Vh.ndof-1);\n 45       u2[]  =  X(Vh.ndof:2*Vh.ndof-1);\n 46       iter++;\n 47       real[int] Au1  =  A*u1[], Au2  =  A*u2[];\n 48       Au1 - =  b1;\n 49       Au2 - =  b2;\n 50       real val  =  u1[]'*Au1 + u2[]'*Au2;\n 51       if (iter%10  =  =  9)\n 52          plot(u1, u2, nbiso = 30, fill = 1, dim = 3, cmm = \"adapt level \"+al+\" - iteration \"+iter+\" - J  =  \"+val, value = 1);\n 53       return val;\n 54    }\n 55 \n 56    varf dBFV (v, w)  =  int2d(Th)(dx(v)*dx(w)+dy(v)*dy(w));\n 57    matrix dA  =  dBFV(Vh, Vh);\n 58    func real[int] dJ (real[int] &X){\n 59       Vh u1, u2;\n 60       u1[]  =  X(0:Vh.ndof-1);\n 61       u2[]  =  X(Vh.ndof:2*Vh.ndof-1);\n 62 \n 63       real[int] grad1  =  dA*u1[], grad2  =  dA*u2[];\n 64       grad1 - =  b1;\n 65       grad2 - =  b2;\n 66       real[int] Grad(X.n);\n 67       Grad(0:Vh.ndof-1)  =  grad1;\n 68       Grad(Vh.ndof:2*Vh.ndof-1)  =  grad2;\n 69       return Grad;\n 70    }\n 71 \n 72    func real[int] IneqC (real[int] &X){\n 73       real[int] constraints(Vh.ndof);\n 74       for (int i  =  0; i < Vh.ndof; ++i) constraints[i]  =  X[i] - X[i+Vh.ndof];\n 75       return constraints;\n 76    }\n 77 \n 78    func real[int,int] dIneqC (real[int] &X){\n 79       real[int, int] dconst(Vh.ndof, 2*Vh.ndof);\n 80       dconst  =  0;\n 81       for(int i  =  0; i < Vh.ndof; ++i){\n 82          dconst(i, i)  =  1.;\n 83          dconst(i, i+Vh.ndof)  =  -1.;\n 84       }\n 85       return dconst;\n 86    }\n 87 \n 88    real[int] BordIndex(Th.nbe); //Indexes of border d.f.\n 89    {\n 90       int k  =  0;\n 91       for (int i  =  0; i < Bord.n; ++i) if (Bord[][i]){ BordIndex[k]  =  i; ++k; }\n 92    }\n 93 \n 94    func real[int] BC (real[int] &X){\n 95       real[int] bc(2*Th.nbe);\n 96       for (int i  =  0; i < Th.nbe; ++i){\n 97          int I  =  BordIndex[i];\n 98          bc[i]  =  X[I] - gh1[][I];\n 99          bc[i+Th.nbe]  =  X[I+Th.nv] - gh2[][I];\n100       }\n101       return bc;\n102    }\n103 \n104    func real[int, int] dBC(real[int] &X){\n105       real[int, int] dbc(2*Th.nbe,2*Th.nv);\n106       dbc  =  0.;\n107       for (int i  =  0; i < Th.nbe; ++i){\n108          int I  =  BordIndex[i];\n109          dbc(i, I)  =  1.;\n110          dbc(i+Th.nbe, I+Th.nv)  =  1.;\n111       }\n112       return dbc;\n113    }\n114 \n115    real[int] start(2*Vh.ndof), up(2*Vh.ndof), lo(2*Vh.ndof);\n116 \n117    if (al  =  =  0){\n118       start(0:Vh.ndof-1)  =  0.;\n119       start(Vh.ndof:2*Vh.ndof-1)  =  0.01;\n120    }\n121    else{\n122       start(0:Vh.ndof-1)  =  oldu1[];\n123       start(Vh.ndof:2*Vh.ndof-1)  =  oldu2[];\n124    }\n125 \n126    up  =  1000000;\n127    lo  =  -1000000;\n128    for (int i  =  0; i < Vh.ndof; ++i){\n129       if (Bord[][i]){\n130          up[i]  =  gh1[][i] + bctol;\n131          lo[i]  =  gh1[][i] - bctol;\n132          up[i+Vh.ndof]  =  gh2[][i] + bctol;\n133          lo[i+Vh.ndof]  =  gh2[][i] - bctol;\n134       }\n135    }\n136 \n137    real mini  =  1e100;\n138    if (kas  =  =  1)\n139       mini  =  nloptAUGLAG(J, start, grad = dJ, lb = lo,\n140          ub = up, IConst = IneqC, gradIConst = dIneqC,\n141          subOpt = \"LBFGS\", stopMaxFEval = 10000, stopAbsFTol = starttol);\n142    else if (kas  =  =  2)\n143       mini  =  nloptMMA(J, start, grad = dJ, lb = lo, ub = up, stopMaxFEval = 10000, stopAbsFTol = starttol);\n144    else if (kas  =  =  3)\n145       mini  =  nloptAUGLAG(J, start, grad = dJ, IConst = IneqC,\n146          gradIConst = dIneqC, EConst = BC, gradEConst = dBC,\n147          subOpt = \"LBFGS\", stopMaxFEval = 200, stopRelXTol = 1e-2);\n148    else if (kas  =  =  4)\n149       mini  =  nloptSLSQP(J, start, grad = dJ, IConst = IneqC,\n150          gradIConst = dIneqC, EConst = BC, gradEConst = dBC,\n151          stopMaxFEval = 10000, stopAbsFTol = starttol);\n152    Vh best1, best2;\n153    best1[]  =  start(0:Vh.ndof-1);\n154    best2[]  =  start(Vh.ndof:2*Vh.ndof-1);\n155 \n156    Th  =  adaptmesh(Th, best1, best2);\n157    oldu1  =  best1;\n158    oldu2  =  best2;\n159 }\n\n\n\n\n\nOptimization with MPI¶\nThe only quick way to use the previously presented algorithms on a parallel architecture lies in parallelizing the used cost function (which is in most real life cases, the expensive part of the algorithm).\nSomehow, we provide a parallel version of the CMA-ES algorithm.\nThe parallelization principle is the trivial one of evolving/genetic algorithms: at each iteration the cost function has to be evaluated \\(N\\) times without any dependence at all, these \\(N\\) calculus are then equally distributed to each process.\nCalling the MPI version of CMA-ES is nearly the same as calling its sequential version (a complete example of use can be found in the CMAES MPI variational inequality example):\n1 load \"mpi-cmaes\"\n2 ... // Define J, u and all here\n3 real min  =  cmaesMPI(J, u, stopTolFun = 1e-6, stopMaxIter = 3000);\n4 cout << \"minimum value is \" << min << \" for u  =  \" << u << endl;\n\n\nIf the population size is not changed using the popsize parameter, it will use the heuristic value slightly changed to be equal to the closest greatest multiple of the size of the communicator used by the optimizer.\nThe FreeFEM mpicommworld is used by default.\nThe user can specify his own MPI communicator with the named parameter comm = , see the MPI section of this manual for more information about communicators in FreeFEM.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Visualization\n\t\t\tNext topic: Parallelization \n\t\t\n\t","l":"documentation/algorithms-and-optimization.html"},"4":{"t":"Developers","p":"\n\t\t\n   \nDevelopers¶\n\nFile formats¶\n\nMesh file data structure¶\nThe mesh data structure, output of a mesh generation algorithm, refers to the geometric data structure and in some case to another mesh data structure.\nIn this case, the fields are\n 1 MeshVersionFormatted 0\n 2 \n 3 Dimension [DIM](int)\n 4 \n 5 Vertices\n 6 [Number of vertices](int)\n 7 X_1(double) Y_1(double) (Z_1(double)) Ref_1(int)\n 8 ...\n 9 X_nv(double) Y_nv(double) (Z_nv(double)) Ref_nv(int)\n10 \n11 Edges\n12 [Number of edges](int)\n13 Vertex1_1(int) Vertex2_1(int) Ref_1(int)\n14 ...\n15 Vertex1_ne(int) Vertex2_ne(int) Ref_ne(int)\n16 \n17 Triangles\n18 [Number of triangles](int)\n19 Vertex1_1(int) Vertex2_1(int) Vertex3_1(int) Ref_1(int)\n20 ...\n21 Vertex1_nt(int) Vertex2_nt(int) Vertex3_nt(int) Ref_nt(int)\n22 \n23 Quadrilaterals\n24 [Number of Quadrilaterals](int)\n25 Vertex1_1(int) Vertex2_1(int) Vertex3_1(int) Vertex4_1(int) Ref_1(int)\n26 ...\n27 Vertex1_nq(int) Vertex2_nq(int) Vertex3_nq(int) Vertex4_nq(int) Ref_nq(int)\n28 \n29 Geometry\n30 [File name of geometric support](char*)\n31 \n32    VertexOnGeometricVertex\n33    [Number of vertex on geometric vertex](int)\n34    Vertex_1(int) VertexGeometry_1(int)\n35    ...\n36    Vertex_nvg(int) VertexGeometry_nvg(int)\n37 \n38    EdgeOnGeometricEdge\n39    [Number of geometric edge](int)\n40    Edge_1(int) EdgeGeometry_1(int)\n41    ...\n42    Edge_neg(int) EdgeGeometry_neg(int)\n43 \n44 CrackedEdges\n45 [Number of cracked edges](int)\n46 Edge1_1(int) Edge2_1(int)\n47 ...\n48 Edge1_nce(int) Edge2_nce(int)\n\n\nWhen the current mesh refers to a previous mesh, we have in addition\n 1 MeshSupportOfVertices\n 2 [File name of mesh support](char*)\n 3 \n 4    VertexOnSupportVertex\n 5    [Number of vertex on support vertex](int)\n 6    Vertex_1(int) VertexSupport_1(int)\n 7    ...\n 8    Vertex_nvsv(int) VertexSupport_nvsv(int)\n 9 \n10    VertexOnSupportEdge\n11    [Number of vertex on support edge](int)\n12    Vertex_1(int) EdgeSupport_1(int) USupport_1(double)\n13    ...\n14    Vertex_nvse(int) EdgeSupport_nvse(int) USupport_nvse(double)\n15 \n16    VertexOnSupportTriangle\n17    [Number of vertex on support triangle](int)\n18    Vertex_1(int) TriangleSupport_1(int) USupport_1(double) VSupport_1(double)\n19    ...\n20    Vertex_nvst(int) TriangleSupport_nvst(int) USupport_nvst(double) VSupport_nvst(double)\n21 \n22    VertexOnSupportQuadrilaterals\n23    [Number of vertex on support quadrilaterals]\n24    Vertex_1(int) TriangleSupport_1(int) USupport_1(double) VSupport_1(double)\n25    ...\n26    Vertex_nvsq(int) TriangleSupport_nvsq(int) USupport_nvsq(double) VSupport_nvsq(double)\n\n\n\nnv means the number of vertices\nne means the number of edges\nnt means the number of triangles\nnq means the number of quadrilaterals\nnvg means the number of vertex on geometric vertex\nneg means the number of edges on geometric edge\nnce means the number of cracked edges\n\n\n\nbb file type to Store Solutions¶\nThe file is formatted such that:\n1 2 [Number of solutions](int) [Number of vertices](int) 2\n2 \n3 U_1_1(double) ... U_ns_1(double)\n4 ...\n5 U_1_nv(double) ... U_ns_nv(double)\n\n\n\nns means the number of solutions\nnv means the number of vertices\nU_i_j is the solution component i at the vertex j on the associated mesh.\n\n\n\nBB file type to store solutions¶\nThe file is formatted such that:\n 1 2 [Number of solutions](int) [Type 1](int) ... [Type ns](int) [Number of vertices](int) 2\n 2 \n 3 U_1_1_1(double) ... U_(type_k)_1_1(double)\n 4 ...\n 5 U_1_1_1(double) ... U_(type_k)_nbv_1(double)\n 6 \n 7 ...\n 8 \n 9 U_1_1_ns(double) ... U_(type_k)_1_ns(double)\n10 ...\n11 U_1_nbv_ns(double) ... U_(type_k)_nbv_ns(double)\n\n\n\nns means the number of solutions\ntype_k mean the type of solution k:\n\n1: the solution is scalar (1 value per vertex)\n2: the solution is vectorial (2 values per vertex)\n3: the solution is a \\(2\\times 2\\) symmetric matrix (3 values per vertex)\n4: the solution is a \\(2\\times 2\\) matrix (4 values per vertex)\n\n\nnbv means the number of vertices\nU_i_j_k is the value of the component i of the solution\nk at vertex j on the associated mesh\n\n\n\nMetric file¶\nA metric file can be of two types, isotropic or anisotropic.\nThe isotropic file is such that\n1 [Number of vertices](int) 1\n2 h_0(double)\n3 ...\n4 h_nv(double)\n\n\n\nnv is the number of vertices\nh_i is the wanted mesh size near the vertex i on associated mesh.\n\nThe metric is \\(\\mathcal{M}_i  =  h_i^{-2}I\\) where \\(I\\) is the identity matrix.\nThe anisotropic file is such that\n1 [Number of vertices](int) 3\n2 a11_0(double) a21_0(double) a22_0(double)\n3 ...\n4 a11_nv(double) a21_nv(double) a22_nv(double)\n\n\n\nnv is the number of vertices\na11_i, a21_i and a22_i represent metric \\(\\mathcal{M}_i  =  \\left(\\begin{array}{cc}a_{11,i} & a_{12,i}\\\\a{12}_i & a_{22,i}\\end{array}\\right)\\) which define the wanted size in a vicinity of the vertex i such that \\(h\\) in direction \\(u \\in \\mathbb{R}^2\\) is equal to \\(|u|/\\sqrt{u\\cdot\\mathcal{M}_i\\, u}\\), where \\(\\cdot\\) is the dot product in \\(\\mathbb{R}^2\\), and \\(|\\cdot|\\) is the classical norm.\n\n\n\nList of AM_FMT, AMDBA Meshes¶\nThe mesh is only composed of triangles and can be defined with the help of the following two integers and four arrays:\n\nnbt the number of triangles\nnbv the number of vertices\nnu(1:3, 1:nbt) an integer array giving the three vertex numbers counterclockwise for each triangle\nc(1:2, 1:nbv) a real array giving tje two coordinates of each vertex\nrefs(1:nbv) an integer array giving the reference numbers of the vertices\nreft(1:nbt) an integer array giving the reference numbers of the triangles\n\nAM_FMT Files\nIn Fortran the am_fmt files are read as follows:\n1 open (1, file = 'xxx.am_fmt', form = 'formatted', status = 'old')\n2 read (1, *) nbv, nbt\n3 read (1, *) ((nu(i, j), i = 1, 3), j = 1, nbt)\n4 read (1, *) ((c(i, j), i = 1, 2), j = 1, nbv)\n5 read (1, *) ( reft(i), i = 1, nbt)\n6 read (1, *) ( refs(i), i = 1, nbv)\n7 close(1)\n\n\nAM Files\nIn Fortran the am files are read as follows:\n1 open (1, file = 'xxx.am', form = 'unformatted', status = 'old')\n2 read (1, *) nbv, nbt\n3 read (1) ((nu(i, j), i = 1, 3), j = 1, nbt),\n4 & ((c(i, j), i = 1, 2), j = 1, nbv),\n5 & (reft(i), i = 1, nbt),\n6 & (refs(i), i = 1, nbv)\n7 close(1)\n\n\nAMDBA Files\nIn Fortran the amdba files are read as follows:\n1 open (1, file = 'xxx.amdba', form = 'formatted', status = 'old')\n2 read (1, *) nbv, nbt\n3 read (1, *) (k, (c(i, k), i = 1, 2), refs(k), j = 1, nbv)\n4 read (1, *) (k, (nu(i, k), i = 1, 3), reft(k), j = 1, nbt)\n5 close(1)\n\n\nmsh Files\nFirst, we add the notions of boundary edges\n\nnbbe the number of boundary edge\nnube(1:2, 1:nbbe) an integer array giving the two vertex numbers of boundary edges\nrefbe(1:nbbe) an integer array giving the reference numbers of boundary edges\n\nIn Fortran the msh files are read as follows:\n1 open (1, file = 'xxx.msh', form = 'formatted', status = 'old')\n2 read (1, *) nbv, nbt, nbbe\n3 read (1, *) ((c(i, k), i = 1, 2), refs(k), j = 1, nbv)\n4 read (1, *) ((nu(i, k), i = 1, 3), reft(k), j = 1, nbt)\n5 read (1, *) ((ne(i, k), i = 1, 2), refbe(k), j = 1, nbbe)\n6 close(1)\n\n\nftq Files\nIn Fortran the ftq files are read as follows:\n1 open(1,file = 'xxx.ftq',form = 'formatted',status = 'old')\n2 read (1,*) nbv,nbe,nbt,nbq\n3 read (1,*) (k(j),(nu(i,j),i = 1,k(j)),reft(j),j = 1,nbe)\n4 read (1,*) ((c(i,k),i = 1,2),refs(k),j = 1,nbv)\n5 close(1)\n\n\nwhere if k(j)  =  3 when the element j is a triangle and k(j)  =  4 when the the element j is a quadrilateral.\n\n\nsol and solb files¶\nWith the keyword savesol, we can store a scalar functions, a scalar finite element functions, a vector fields, a vector finite element fields, a symmetric tensor and a symmetric finite element tensor.\nSuch format is used in medit.\nExtension file .sol\nThe first two lines of the file are :\n\nMeshVersionFormatted 0\nDimension [DIM](int)\n\nThe following fields begin with one of the following keyword:\nSolAtVertices, SolAtEdges,\nSolAtTriangles, SolAtQuadrilaterals,\nSolAtTetrahedra, SolAtPentahedra,\nSolAtHexahedra.\nIn each field, we give then in the next line the number of elements in the solutions (SolAtVertices: number of vertices, SolAtTriangles: number of triangles, …).\nIn other lines, we give the number of solutions, the type of solution (1: scalar, 2: vector, 3: symmetric tensor).\nAnd finally, we give the values of the solutions on the elements.\nThe file must be ended with the keyword End.\nThe real element of symmetric tensor :\n\n(39)¶\\[\\begin{split}ST^{3d} = \\left(\n\\begin{array}{ccc}\n   ST_{xx}^{3d} & ST_{xy}^{3d} & ST_{xz}^{3d}\\\\\n   ST_{yx}^{3d} & ST_{yy}^{3d} & ST_{yz}^{3d} \\\\\n   ST_{zx}^{3d} & ST_{zy}^{3d} & ST_{zz}^{3d}\n\\end{array}\n\\right)\n\\quad\nST^{2d} =  \\left(\n\\begin{array}{cc}\n   ST_{xx}^{2d} & ST_{xy}^{2d} \\\\\n   ST_{yx}^{2d} & ST_{yy}^{2d}\n\\end{array}\n\\right)\\end{split}\\]\nstored in the extension .sol are respectively \\(ST_{xx}^{3d}, ST_{yx}^{3d}, ST_{yy}^{3d}, ST_{zx}^{3d}, ST_{zy}^{3d}, ST_{zz}^{3d}\\) and \\(ST_{xx}^{2d}, ST_{yx}^{2d}, ST_{yy}^{2d}\\)\nAn example of field with the keyword SolAtTetrahedra:\n 1 SolAtTetrahedra\n 2 [Number of tetrahedra](int)\n 3 [Number of solutions](int) [Type of solution 1](int) ... [Type of soution nt](int)\n 4 \n 5 U_1_1_1(double) ... U_nrs_1_1(double)\n 6 ...\n 7 U_1_ns_1(double) ... U_(nrs_k)_ns_1(double)\n 8 \n 9 ...\n10 \n11 U_1_1_nt(double) ... U_nrs_1_nt(double)\n12 ...\n13 U_1_ns_nt(double) ... U_(nrs_k)_ns_nt(double)\n\n\n\nns is the number of solutions\ntypesol_k, type of the solution number k\n\ntypesol_k  =  1 the solution k is scalar\ntypesol_k  =  2 the solution k is vectorial\ntypesol_k  =  3 the solution k is a symmetric tensor or symmetric matrix\n\n\nnrs_k is the number of real to describe solution k\n\nnrs_k  =  1 if the solution k is scalar\nnrs_k  =  dim if the solution k is vectorial (dim is the dimension of the solution)\nnrs_k  =  dim*(dim+1)/2 if the solution k is a symmetric tensor or symmetric matrix\n\n\nU_i_j_^k is a real equal to the value of the component i of the solution k at tetrahedron j on the associated mesh\n\nThe format .solb is the same as format .sol but in binary (read/write is faster, storage is less).\nA real scalar functions \\(f1\\), a vector fields \\(\\mathbf{\\Phi}  =  [\\Phi1, \\Phi2, \\Phi3]\\) and a symmetric tensor \\(ST^{3d}\\) (39) at the vertices of the three dimensional mesh Th3 is stored in the file f1PhiTh3.sol using :\n1 savesol(\"f1PhiST3dTh3.sol\", Th3, f1, [Phi(1), Phi(2), Phi(3)], VV3, order = 1);\n\n\nwhere \\(VV3  =  [ST_{xx}^{3d}, ST_{yx}^{3d}, ST_{yy}^{3d}, ST_{zx}^{3d}, ST_{zy}^{3d}, ST_{zz}^{3d}]\\).\nFor a two dimensional mesh Th, A real scalar functions \\(f2\\), a vector fields \\(\\mathbf{\\Psi}  =  [\\Psi1, \\Psi2]\\) and a symmetric tensor \\(ST^{2d}\\) (39) at triangles is stored in the file f2PsiST2dTh3.solb using :\n1 savesol(\"f2PsiST2dTh3.solb\", Th, f2, [Psi(1), Psi(2)], VV2, order = 0);\n\n\nwhere \\(VV2  =  [ST_{xx}^{2d}, ST_{yx}^{2d}, ST_{yy}^{2d}]\\)\nThe arguments of savesol functions are the name of a file, a mesh and solutions.\nThese arguments must be given in this order.\nThe parameters of this keyword are :\n\norder  =  0 is the solution is given at the center of gravity of elements.\n1 is the solution is given at the vertices of elements.\n\nIn the file, solutions are stored in this order : scalar solutions, vector solutions and finally symmetric tensor solutions.\n\n\n\nAdding a new finite element¶\n\nSome notations¶\nFor a function \\(\\boldsymbol{f}\\) taking value in \\(\\mathbb{R}^{N},\\, N = 1,2,\\cdots\\), we define the finite element approximation \\(\\Pi_h\\boldsymbol{f}\\) of \\(\\boldsymbol{f}\\).\nLet us denote the number of the degrees of freedom of the finite element by \\(NbDoF\\).\nThen the \\(i\\)-th base \\(\\boldsymbol{\\omega}^{K}_{i}\\) (\\(i = 0,\\cdots,NbDoF-1\\)) of the finite element space has the \\(j\\)-th component \\(\\mathbf{\\omega}^{K}_{ij}\\) for \\(j = 0,\\cdots,N-1\\).\nThe operator \\(\\Pi_{h}\\) is called the interpolator of the finite element.\nWe have the identity \\(\\boldsymbol{\\omega}^{K}_{i}  =  \\Pi_{h} \\boldsymbol{\\omega}^{K}_{i}\\).\nFormally, the interpolator \\(\\Pi_{h}\\) is constructed by the following formula:\n\n(40)¶\\[\\Pi_{h} \\boldsymbol{f}  =  \\sum_{k = 0}^{\\mathtt{kPi}-1} \\alpha_k \\boldsymbol{f}_{j_{k}}(P_{p_{k}}) \\boldsymbol{\\omega}^{K}_{i_{k}}\\]\nwhere \\(P_{p}\\) is a set of \\(npPi\\) points,\nIn the formula (40), the list \\(p_{k},\\, j_{k},\\, i_{k}\\) depend just on the type of finite element (not on the element), but the coefficient \\(\\alpha_{k}\\) can be depending on the element.\n\nTip\nClassical scalar Lagrange finite element\nWith the classical scalar Lagrange finite element, we have \\(\\mathtt{kPi} = \\mathtt{npPi} = \\mathtt{NbOfNode}\\) and\n\n\\(P_{p}\\) is the point of the nodal points.\nthe \\(\\alpha_k = 1\\), because we take the value of the function at the point \\(P_{k}\\).\n\\(p_{k} = k\\) , \\(j_{k} = k\\) because we have one node per function.\n\\(j_{k} = 0\\) because \\(N = 1\\).\n\n\n\nTip\nThe Raviart-Thomas finite element\n\n(41)¶\\[RT0_{h}  =  \\{ \\mathbf{v} \\in H(div) / \\forall K \\in\n\\mathcal{T}_{h} \\quad \\mathbf{v}_{|K}(x,y)  = \n\\vecttwo{\\alpha_{K}}{\\beta_{K}} + \\gamma_{K}\\vecttwo{x}{y} \\}\\]\nThe degrees of freedom are the flux through an edge \\(e\\) of the mesh, where the flux of the function \\(\\mathbf{f} : \\mathbb{R}^2 \\longrightarrow \\mathbb{R}^2\\) is \\(\\int_{e} \\mathbf{f}.n_{e}\\), \\(n_{e}\\) is the unit normal of edge \\(e\\) (this implies a orientation of all the edges of the mesh, for example we can use the global numbering of the edge vertices and we just go to small to large number).\nTo compute this flux, we use a quadrature formula with one point, the middle point of the edge.\nConsider a triangle \\(T\\) with three vertices \\((\\mathbf{a},\\mathbf{b},\\mathbf{c})\\).\nLet denote the vertices numbers by \\(i_{a},i_{b},i_{c}\\), and define the three edge vectors \\(\\mathbf{e}^{0},\\mathbf{e}^{1},\\mathbf{e}^{2}\\) by \\(sgn(i_{b}-i_{c})(\\mathbf{b}-\\mathbf{c})\\), \\(sgn(i_{c}-i_{a})(\\mathbf{c}-\\mathbf{a})\\), \\(sgn(i_{a}-i_{b})(\\mathbf{a}-\\mathbf{b})\\).\nThe three basis functions are:\n\n\\[\\boldsymbol{\\omega}^{K}_{0} =  \\frac{sgn(i_{b}-i_{c})}{2|T|}(x-a),\\quad \\boldsymbol{\\omega}^{K}_{1} =  \\frac{sgn(i_{c}-i_{a})}{2|T|}(x-b),\\quad \\boldsymbol{\\omega}^{K}_{2} =  \\frac{sgn(i_{a}-i_{b})}{2|T|}(x-c),\\]\nwhere \\(|T|\\) is the area of the triangle \\(T\\).\nSo we have \\(N = 2\\), \\(\\mathtt{kPi} = 6; \\mathtt{npPi} = 3;\\) and:\n\n\n\\(P_{p}  =  \\left\\{\\frac{\\mathbf{b}+\\mathbf{c}}{2}, \\frac{\\mathbf{a}+\\mathbf{c}}{2}, \\frac{\\mathbf{b}+\\mathbf{a}}{2} \\right\\}\\)\n\n\\(\\alpha_{0} =  - \\mathbf{e}^{0}_{2}, \\alpha_{1} =  \\mathbf{e}^{0}_{1}\\),\\(\\alpha_{2} =  - \\mathbf{e}^{1}_{2}, \\alpha_{3} =  \\mathbf{e}^{1}_{1}\\),\n\\(\\alpha_{4} =  - \\mathbf{e}^{2}_{2}, \\alpha_{5} =  \\mathbf{e}^{2}_{1}\\) (effectively, the vector\n\\((-\\mathbf{e}^{m}_{2}, \\mathbf{e}^{m}_{1})\\) is orthogonal to the edge \\(\\mathbf{e}^{m} =  (e^m_{1},e^m_{2})\\) with\na length equal to the side of the edge or equal to \\(\\int_{e^m} 1\\)).\n\n\n\n\\(i_{k} = \\{0,0,1,1,2,2\\}\\),\n\\(p_{k} = \\{0,0,1,1,2,2\\}\\) , \\(j_{k} = \\{0,1,0,1,0,1,0,1\\}\\).\n\n\n\n\n\nWhich class to add?¶\nAdd file FE_ADD.cpp in directory FreeFem-sources/src/femlib for\nexample first to initialize :\n1 #include \"error.hpp\"\n2 #include \"rgraph.hpp\"\n3 using namespace std;\n4 #include \"RNM.hpp\"\n5 #include \"fem.hpp\"\n6 #include \"FESpace.hpp\"\n7 #include \"AddNewFE.h\"\n8 \n9 namespace Fem2D { ... }\n\n\nThen add a class which derive for public TypeOfFE like:\n 1 class TypeOfFE_RTortho : public TypeOfFE { public:\n 2     static int Data[]; //some numbers\n 3     TypeOfFE_RTortho():\n 4     TypeOfFE(\n 5         0+3+0,  //nb degree of freedom on element\n 6         2,      //dimension N of vectorial FE (1 if scalar FE)\n 7         Data,   //the array data\n 8         1,      //nb of subdivision for plotting\n 9         1,      //nb of sub finite element (generaly 1)\n10         6,      //number kPi of coef to build the interpolator\n11         3,      //number npPi of integration point to build interpolator\n12         0       //an array to store the coef \\alpha_k to build interpolator\n13         //here this array is no constant so we have\n14         //to rebuilt for each element\n15     )\n16     {\n17         const R2 Pt[]  =  {R2(0.5, 0.5), R2(0.0, 0.5), R2(0.5, 0.0) };\n18         // the set of Point in hat{K}\n19         for (int p  =  0, kk  =  0; p < 3; p++){\n20             P_Pi_h[p]  =  Pt[p];\n21             for (int j  =  0; j < 2; j++)\n22                 pij_alpha[kk++]  =  IPJ(p, p, j);\n23         }\n24     } //definition of i_k, p_k, j_k in interpolator\n25 \n26     void FB(const bool *watdd, const Mesh &Th, const Triangle &K,\n27         const R2 &PHat, RNMK_ &val) const;\n28 \n29     void Pi_h_alpha(const baseFElement &K, KN_<double> &v) const;\n30 } ;\n\n\nwhere the array data is formed with the concatenation of five array of\nsize NbDoF and one array of size N.\nThis array is:\n1 int TypeOfFE_RTortho::Data[]  =  {\n2     //for each df 0, 1, 3:\n3     3, 4, 5, //the support of the node of the df\n4     0, 0, 0, //the number of the df on the node\n5     0, 1, 2, //the node of the df\n6     0, 0, 0, //the df come from which FE (generally 0)\n7     0, 1, 2, //which are the df on sub FE\n8     0, 0\n9 }; //for each component j = 0, N-1 it give the sub FE associated\n\n\nwhere the support is a number \\(0,1,2\\) for vertex support, \\(3,4,5\\) for edge support, and finally \\(6\\) for element support.\nThe function to defined the function\n\\(\\boldsymbol{\\omega}^{K}_{i}\\), this function return the value of all the basics function or this derivatives in array val, computed at point Phat on the reference triangle corresponding to point R2 P = K(Phat); on the current triangle K.\nThe index \\(i,j,k\\) of the array \\(val(i,j,k)\\) correspond to:\n\n\\(i\\) is the basic function number on finite element\n\\(i \\in [0,NoF[\\)\n\\(j\\) is the value of component \\(j \\in [0,N[\\)\n\\(k\\) is the type of computed value\n\\(f(P),dx(f)(P), dy(f)(P), ...\\ i \\in [0,\\mathtt{last\\_operatortype}[\\).\n\nNote\nFor optimization, this value is computed only if whatd[k] is true, and the numbering is defined with\n 1 enum operatortype {\n 2 op_id  =  0,\n 3 op_dx  =  1, op_dy  =  2,\n 4 op_dxx  =  3,op_dyy  =  4,\n 5 op_dyx  =  5,op_dxy  =  5,\n 6 op_dz  =  6,\n 7 op_dzz  =  7,\n 8 op_dzx  =  8, op_dxz  =  8,\n 9 op_dzy  =  9, op_dyz  =  9\n10 };\n11 const int last_operatortype  =  10;\n\n\n\n\n\nThe shape function:\n 1 void TypeOfFE_RTortho::FB(const bool *whatd, const Mesh &Th, const Triangle & K,\n 2     const R2 &PHat,RNMK_ &val) const\n 3 {\n 4     R2 P(K(PHat));\n 5     R2 A(K[0]), B(K[1]), C(K[2]);\n 6     R l0  =  1 - P.x-P.y;\n 7     R l1  =  P.x, l2  =  P.y;\n 8     assert(val.N() > =  3);\n 9     assert(val.M()  =  =  2);\n10     val  =  0;\n11     R a  =  1./(2*K.area);\n12     R a0  =  K.EdgeOrientation(0) * a;\n13     R a1  =  K.EdgeOrientation(1) * a;\n14     R a2  =  K.EdgeOrientation(2) * a;\n15 \n16     if (whatd[op_id]){ //value of the function\n17         assert(val.K() > op_id);\n18         RN_ f0(val('.', 0,0)); //value first component\n19         RN_ f1(val('.', 1,0)); //value second component\n20         f1[0]  =  (P.x - A.x)*a0;\n21         f0[0]  =  -(P.y - A.y)*a0;\n22 \n23         f1[1]  =  (P.x - B.x)*a1;\n24         f0[1]  =  -(P.y - B.y)*a1;\n25 \n26         f1[2]  =  (P.x - C.x)*a2;\n27         f0[2]  =  -(P.y - C.y)*a2;\n28     }\n29 \n30     if (whatd[op_dx]){ //value of the dx of function\n31         assert(val.K() > op_dx);\n32         val(0,1,op_dx)  =  a0;\n33         val(1,1,op_dx)  =  a1;\n34         val(2,1,op_dx)  =  a2;\n35     }\n36     if (whatd[op_dy]){\n37         assert(val.K() > op_dy);\n38         val(0,0,op_dy)  =  -a0;\n39         val(1,0,op_dy)  =  -a1;\n40         val(2,0,op_dy)  =  -a2;\n41     }\n42 \n43     for (int i  =  op_dy; i < last_operatortype; i++)\n44         if (whatd[op_dx])\n45             assert(op_dy);\n46 }\n\n\nThe function to defined the coefficient \\(\\alpha_{k}\\):\n 1 void TypeOfFE_RT::Pi_h_alpha(const baseFElement &K, KN_<double> &v) const\n 2 {\n 3     const Triangle &T(K.T);\n 4 \n 5     for (int i  =  0, k  =  0; i < 3; i++){\n 6         R2 E(T.Edge(i));\n 7         R signe  =  T.EdgeOrientation(i) ;\n 8         v[k++]  =  signe*E.y;\n 9         v[k++]  =  -signe*E.x;\n10     }\n11 }\n\n\nNow , we just need to add a new key work in FreeFEM.\nTwo way, with static or dynamic link so at the end of the file, we add:\nWith dynamic link it is very simple (see section Dynamical link), just add before the end of FEM2d namespace:\n1    static TypeOfFE_RTortho The_TypeOfFE_RTortho;\n2    static AddNewFE(\"RT0Ortho\", The_TypeOfFE_RTortho);\n3 } //FEM2d namespace\n\n\nTry with ./load.link command in examples++-load/ and see BernardiRaugel.cpp or Morley.cpp new finite element examples.\nOtherwise with static link (for expert only), add\n 1 //let the 2 globals variables\n 2 static TypeOfFE_RTortho The_TypeOfFE_RTortho;\n 3 //the name in freefem\n 4 static ListOfTFE typefemRTOrtho(\"RT0Ortho\", &The_TypeOfFE_RTortho);\n 5 \n 6 //link with FreeFEM do not work with static library .a\n 7 //so add a extern name to call in init_static_FE\n 8 //(see end of FESpace.cpp)\n 9 void init_FE_ADD() { };\n10 //end\n11 } //FEM2d namespace\n\n\nTo inforce in loading of this new finite element, we have to add the two new lines close to the end of files src/femlib/FESpace.cpp like:\n1 //correct problem of static library link with new make file\n2 void init_static_FE()\n3 { //list of other FE file.o\n4     extern void init_FE_P2h() ;\n5     init_FE_P2h() ;\n6     extern void init_FE_ADD(); //new line 1\n7     init_FE_ADD(); //new line 2\n8 }\n\n\nand now you have to change the makefile.\nFirst, create a file FE_ADD.cpp contening all this code, like in file src/femlib/Element_P2h.cpp, after modify the Makefile.am by adding the name of your file to the variable EXTRA_DIST like:\n 1 # Makefile using Automake + Autoconf\n 2 # ----------------------------------\n 3 # Id\n 4 \n 5 # This is not compiled as a separate library because its\n 6 # interconnections with other libraries have not been solved.\n 7 \n 8 EXTRA_DIST = BamgFreeFem.cpp BamgFreeFem.hpp CGNL.hpp CheckPtr.cpp        \\\n 9 ConjuguedGradrientNL.cpp DOperator.hpp Drawing.cpp Element_P2h.cpp      \\\n10 Element_P3.cpp Element_RT.cpp fem3.hpp fem.cpp fem.hpp FESpace.cpp      \\\n11 FESpace.hpp FESpace-v0.cpp FQuadTree.cpp FQuadTree.hpp gibbs.cpp        \\\n12 glutdraw.cpp gmres.hpp MatriceCreuse.hpp MatriceCreuse_tpl.hpp          \\\n13 MeshPoint.hpp mortar.cpp mshptg.cpp QuadratureFormular.cpp              \\\n14 QuadratureFormular.hpp RefCounter.hpp RNM.hpp RNM_opc.hpp RNM_op.hpp    \\\n15 RNM_tpl.hpp     FE_ADD.cpp\n\n\nand do in the FreeFEM root directory\n1 autoreconf\n2 ./reconfigure\n3 make\n\n\nFor codewarrior compilation add the file in the project an remove the flag in panal PPC linker FreeFm++ Setting Dead-strip Static Initializition Code Flag.\n\n\n\nDynamical link¶\nNow, it’s possible to add built-in functionnalites in FreeFEM under the three environnents Linux, Windows and MacOS X 10.3 or newer.\nIt is agood idea to first try the example load.edp in directory example++-load.\nYou will need to install a compiler (generally g++/gcc compiler) to compile your function.\n\nWindows Install the cygwin environnent or the mingw one\nMacOs Install the developer tools Xcode on the apple DVD\nLinux/Unix Install the correct compiler (gcc for instance)\n\nNow, assume that you are in a shell window (a cygwin window under Windows) in the directory example++-load.\n\nNote\nIn the sub directory include, they are all the FreeFEM include file to make the link with FreeFEM.\n\n\nNote\nIf you try to load dynamically a file with command load \"xxx\"\n- Under Unix (Linux or MacOs), the file xxx.so will be loaded so it must be either in the search directory of routine dlopen (see the environment variable $LD_LIBRARY_PATH) or in the current directory, and the suffix \".so\" or the prefix \"./\" is automatically added.\n\nUnder Windows, the file xxx.dll will be loaded so it must be in the loadLibary search directory which includes the directory of the application,\n\n\nCompilation of your module:\nThe script ff-c++ compiles and makes the link with FreeFEM, but be careful, the script has no way to known if you try to compile for a pure Windows environment or for a cygwin environment so to build the load module under cygwin you must add the -cygwin parameter.\n\nA first example myfunction.cpp¶\nThe following defines a new function call myfunction with no parameter, but using the \\(x,y\\) current value.\n 1 #include <iostream>\n 2 #include <cfloat>\n 3 using namespace std;\n 4 #include \"error.hpp\"\n 5 #include \"AFunction.hpp\"\n 6 #include \"rgraph.hpp\"\n 7 #include \"RNM.hpp\"\n 8 #include \"fem.hpp\"\n 9 #include \"FESpace.hpp\"\n10 #include \"MeshPoint.hpp\"\n11 \n12 using namespace Fem2D;\n13 double myfunction(Stack stack){\n14     //to get FreeFEM data\n15     MeshPoint &mp  =  *MeshPointStack(stack); //the struct to get x, y, normal, value\n16     double x  =  mp.P.x; //get the current x value\n17     double y  =  mp.P.y; //get the current y value\n18     //cout << \"x  =  \" << x << \" y = \" << y << endl;\n19     return sin(x)*cos(y);\n20 }\n\n\nNow the Problem is to build the link with FreeFEM, to do that we need two classes, one to call the function myfunction.\nAll FreeFEM evaluable expression must be a C++ struct/class which derivate from E_F0.\nBy default this expression does not depend of the mesh position, but if they derivate from E_F0mps the expression depends of the mesh position, and for more details see [HECHT2002].\n 1 //A class build the link with FreeFEM\n 2 //generaly this class are already in AFunction.hpp\n 3 //but unfortunatly, I have no simple function with no parameter\n 4 //in FreeFEM depending of the mesh\n 5 template<class R>\n 6 class OneOperator0s : public OneOperator {\n 7     //the class to define and evaluate a new function\n 8     //It must devive from E_F0 if it is mesh independent\n 9     //or from E_F0mps if it is mesh dependent\n10     class E_F0_F :public E_F0mps {\n11     public:\n12         typedef R (*func)(Stack stack);\n13         func f; //the pointeur to the fnction myfunction\n14         E_F0_F(func ff) : f(ff) {}\n15         //the operator evaluation in FreeFEM\n16         AnyType operator()(Stack stack) const {return SetAny<R>(f(stack));}\n17     };\n18     typedef R (*func)(Stack);\n19     func f;\n20     public:\n21         //the function which build the FreeFEM byte code\n22         E_F0 *code(const basicAC_F0 &) const { return new E_F0_F(f); }\n23         //the constructor to say ff is a function without parameter\n24         //and returning a R\n25         OneOperator0s(func ff) : OneOperator(map_type[typeid(R).name()]),f(ff){}\n26 };\n\n\nTo finish we must add this new function in FreeFEM table, to do that include :\n1  void init(){\n2      Global.Add(\"myfunction\", \"(\", new OneOperator0s<double>(myfunction));\n3  }\n4  LOADFUNC(init);\n\n\nIt will be called automatically at load module time.\nTo compile and link, use the ff-c++ script :\n1 ff-c++ myfunction.cpp\n2 g++ -c -g -Iinclude myfunction.cpp\n3 g++ -bundle -undefined dynamic_lookup -g myfunction.o -o ./myfunction.dylib\n\n\nTo try the simple example under Linux or MacOS, do FreeFem++-nw load.edp\nThe output must be:\n 1 -- FreeFem++ v  *.****** (date *** ** *** ****, **:**:** (UTC+0*00))\n 2  Load: lg_fem lg_mesh lg_mesh3 eigenvalue\n 3     1 : // Example of dynamic function load\n 4     2 : // --------------------------------\n 5     3 : // $Id$\n 6     4 :\n 7     5 :  load \"myfunction\"\n 8     6 : // dumptable(cout);\n 9     7 :  mesh Th = square(5,5);\n10     8 :  fespace Vh(Th,P1);\n11     9 :  Vh uh =  myfunction(); // warning do not forget ()\n12    10 :  cout << uh[].min << \" \" << uh[].max << endl;\n13    11 :  cout << \" test io ( \" << endl;\n14    12 :  testio();\n15    13 :  cout << \" ) end test io .. \" << endl; sizestack + 1024  = 1416  ( 392 )\n16 \n17   -- Square mesh : nb vertices   = 36 ,  nb triangles  =  50 ,  nb boundary edges 20\n18 0 0.841471\n19  test io (\n20  test cout 3.14159\n21  test cout 512\n22  test cerr 3.14159\n23  test cerr 512\n24  ) end test io ..\n25 times: compile 0.012854s, execution 0.000313s,  mpirank:0\n26  CodeAlloc : nb ptr  2715,  size :371104 mpirank: 0\n27 Ok: Normal End\n\n\nUnder Windows, launch FreeFEM with the mouse (or ctrl O) on the example.\n\n\nExample: Discrete Fast Fourier Transform¶\nThis will add FFT to FreeFEM, taken from FFTW. To download and install under download/include just go in download/fftw and try make.\nThe 1D dfft (fast discret fourier transform) for a simple array \\(f\\) of size \\(n\\) is defined by the following formula:\n\n\\[\\mathtt{dfft}(f,\\varepsilon)_{k}  =  \\sum_{j = 0}^{n-1} f_i e^{\\varepsilon 2\\pi i kj/n}\\]\nThe 2D DFFT for an array of size \\(N = n\\times m\\) is:\n\n\\[\\mathtt{dfft}(f,m,\\varepsilon)_{k+nl}  =  \\sum_{j' = 0}^{m-1} \\sum_{j = 0}^{n-1} f_{i+nj} e^{\\varepsilon 2\\pi i (kj/n+lj'/m) }\\]\n\nNote\nThe value \\(n\\) is given by \\(size(f)/m\\), and the numbering is row-major order.\n\nSo the classical discrete DFFT is \\(\\hat{f} = \\mathtt{dfft}(f,-1)/\\sqrt{n}\\) and the reverse dFFT \\(f = \\mathtt{dfft}(\\hat{f},1)/\\sqrt{n}\\)\n\nNote\nThe 2D Laplace operator is\n\n\n\\[f(x,y)  =  1/\\sqrt{N} \\sum_{j' = 0}^{m-1} \\sum_{j = 0}^{n-1} \\hat{f}_{i+nj} e^{\\varepsilon 2\\pi i (x j+ yj') }\\]\nand we have\n\n\\[f_{k+nl}  =  f(k/n,l/m)\\]\nSo\n\n\\[\\begin{split}\\widehat{\\Delta f_{kl}}  =  -( (2\\pi)^2 ( (\\tilde{k})^2+(\\tilde{l})^2)) \\widehat{ f_{kl}} \\\\\\end{split}\\]\nwhere \\(\\tilde{k}  =  k\\) if \\(k \\leq n/2\\) else \\(\\tilde{k}  =  k-n\\) and \\(\\tilde{l}  =  l\\) if \\(l \\leq m/2\\) else \\(\\tilde{l}  =  l-m\\).\n\nAnd to have a real function we need all modes to be symmetric around zero, so \\(n\\) and \\(m\\) must be odd.\n\nCompile to build a new library\n1 ff-c++ dfft.cpp ../download/install/lib/libfftw3.a -I../download/install/include\n2 export MACOSX_DEPLOYMENT_TARGET = 10.3\n3 g++ -c -Iinclude -I../download/install/include dfft.cpp\n4 g++ -bundle -undefined dynamic_lookup dfft.o -o ./dfft.dylib ../download/install/lib/libfftw3.a\n\n\nTo test, try FFT example.\n\n\nLoad Module for Dervieux P0-P1 Finite Volume Method¶\nThe associed edp file is\nexamples++-load/convect_dervieux.edp.\nSee\nmat_dervieux.cpp.\n\n\nMore on Adding a new finite element¶\nFirst read the Adding a new finite element section, we add two new finite elements examples in the directory examples++-load.\n\nThe Bernardi-Raugel Element¶\nThe Bernardi-Raugel finite element is meant to solve the Navier Stokes equations in \\(u,p\\) formulation; the velocity space \\(P^{br}_K\\) is minimal to prove the inf-sup condition with piecewise constant pressure by triangle.\nThe finite element space \\(V_h\\) is\n\n\\[V_h =  \\{u\\in H^1(\\Omega)^2 ; \\quad \\forall K \\in T_h, u_{|K} \\in P^{br}_K \\}\\]\nwhere\n\n\\[P^{br}_K  =  span \\{ \\lambda^K_i e_k \\}_{i = 1,2,3, k =  1,2} \\cup \\{ \\lambda^K_i\\lambda^K_{i+1} n^K_{i+2}\\}_{i = 1,2,3}\\]\nwith notation \\(4 = 1, 5 = 2\\) and where \\(\\lambda^K_i\\) are the barycentric coordinates of the triangle \\(K\\), \\((e_k)_{k = 1,2}\\) the canonical basis of \\(\\mathbb{R}^2\\) and \\(n^K_k\\) the outer normal of triangle \\(K\\) opposite to vertex \\(k\\).\nSee\nBernardiRaugel.cpp.\nA way to check the finite element\n 1 load \"BernardiRaugel\"\n 2 \n 3 // Macro\n 4 //a macro the compute numerical derivative\n 5 macro DD(f, hx, hy) ( (f(x1+hx, y1+hy) - f(x1-hx, y1-hy))/(2*(hx+hy)) ) //\n 6 \n 7 // Mesh\n 8 mesh Th  =  square(1, 1, [10*(x+y/3), 10*(y-x/3)]);\n 9 \n10 // Parameters\n11 real x1  =  0.7, y1  =  0.9, h  =  1e-7;\n12 int it1  =  Th(x1, y1).nuTriangle;\n13 \n14 // Fespace\n15 fespace Vh(Th, P2BR);\n16 Vh [a1, a2], [b1, b2], [c1, c2];\n17 \n18 \n19 for (int i  =  0; i < Vh.ndofK; ++i)\n20     cout << i << \" \" << Vh(0,i) << endl;\n21 \n22 for (int i  =  0; i < Vh.ndofK; ++i)\n23 {\n24     a1[]  =  0;\n25     int j  =  Vh(it1, i);\n26     a1[][j]  =  1;\n27     plot([a1, a2], wait = 1);\n28     [b1, b2]  =  [a1, a2]; //do the interpolation\n29 \n30     c1[]  =  a1[] - b1[];\n31     cout << \" ---------\" << i << \" \" << c1[].max << \" \" << c1[].min << endl;\n32     cout << \" a  =  \" << a1[] <<endl;\n33     cout << \" b  =  \" << b1[] <<endl;\n34     assert(c1[].max < 1e-9 && c1[].min > -1e-9); //check if the interpolation is correct\n35 \n36     // check the derivative and numerical derivative\n37     cout << \" dx(a1)(x1, y1)  =  \" << dx(a1)(x1, y1) << \"  =  =  \" << DD(a1, h, 0) << endl;\n38     assert( abs(dx(a1)(x1, y1) - DD(a1, h, 0) ) < 1e-5);\n39     assert( abs(dx(a2)(x1, y1) - DD(a2, h, 0) ) < 1e-5);\n40     assert( abs(dy(a1)(x1, y1) - DD(a1, 0, h) ) < 1e-5);\n41     assert( abs(dy(a2)(x1, y1) - DD(a2, 0, h) ) < 1e-5);\n42 }\n\n\nA real example using this finite element, just a small modification of the Navier-Stokes P2-P1 example, just the begenning is change to\n1 load \"BernardiRaugel\"\n2 \n3 real s0  =  clock();\n4 mesh Th  =  square(10, 10);\n5 fespace Vh2(Th, P2BR);\n6 fespace Vh(Th, P0);\n7 Vh2 [u1, u2], [up1, up2];\n8 Vh2 [v1, v2];\n\n\nAnd the plot instruction is also changed because the pressure is constant, and we cannot plot isovalues of peacewise constant functions.\n\n\nThe Morley Element¶\nSee the example\nbilapMorley.edp.\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Plugins\n\t\t\tNext topic: ffddm \n\t\t\n\t","l":"documentation/developers.html"},"5":{"t":"ffddm documentation","p":"\n\t\t\n   \nffddm documentation¶\n\nMinimal example¶\n 1 macro dimension 3// EOM            // 2D or 3D\n 2 \n 3 include \"ffddm.idp\"\n 4 \n 5 load \"msh3\"\n 6 \n 7 int[int] LL  =  [2,2, 1,2, 2,2];\n 8 mesh3 ThGlobal  =  cube(10, 10, 10, [x, y, z], label  =  LL);      // global mesh\n 9 \n10 macro grad(u) [dx(u), dy(u), dz(u)]// EOM    // three-dimensional gradient\n11 \n12 macro Varf(varfName, meshName, VhName)\n13     varf varfName(u,v)  =  int3d(meshName)(grad(u)'* grad(v)) + int3d(meshName)(v) + on(1, u  =  1.0);\n14 // EOM\n15 \n16 // Domain decomposition\n17 ffddmbuildDmesh( LapMesh , ThGlobal , mpiCommWorld )\n18 \n19 macro def(i)i// EOM                         // scalar field definition\n20 macro init(i)i// EOM                        // scalar field initialization\n21 ffddmbuildDfespace( LapFE , LapMesh , real , def , init , P1 )\n22 \n23 ffddmsetupOperator( Lap , LapFE , Varf )\n24 \n25 real[int] rhsi(0);\n26 ffddmbuildrhs( Lap , Varf , rhsi )\n27 \n28 LapFEVhi def(ui);\n29 \n30 //Direct solve\n31 ui[]  =  Lapdirectsolve(rhsi);\n32 \n33 Lapwritesummary\n34 \n35 ffddmplot(LapFE,ui,\"u\");\n\n\n\n\nOverlapping mesh decomposition¶\n1 ffddmbuildDmesh(prmesh,Th,comm)\n\n\ndecomposes the mesh Th into overlapping submeshes.\nThe mesh will be distributed over the mpi ranks of communicator comm.\nThis will create and expose variables whose names will be prefixed by prmesh, see below (# is the concatenation operator).\nThe way the initial mesh Th is partitioned depends on the value of ffddmpartitioner.\nThe size of the overlap between subdomains (its width in terms of number of mesh elements) is given by ffddmoverlap.\nThe level of refinement of the resulting submeshes with respect to the input mesh Th is given by ffddmsplit.\nIf ffddmexclude \\(\\neq 0\\), the first ffddmpCS mpi ranks of comm will be excluded from the spatial domain decomposition, in order to dedicate them later to the coarse problem (for two-level preconditioners).\nThe label of the new border of the submeshes (the interface between the subdomains) is given by ffddminterfacelabel.\ndefines:\n\nint prmesh#npart number of subdomains for this decomposition; should be equal to mpiSize(comm) - ffddmexclude * ffddmpCS\nint prmesh#pCS equal to ffddmpCS\nint prmesh#exclude equal to ffddmexclude\nint prmesh#excluded true if ffddmexclude is true (\\(\\neq 0\\)) and mpiRank(comm) < prmesh#pCS.\nIn this case, this mpi rank will be excluded from the spatial domain decomposition and will only work on the coarse problem.\nmpiComm prmesh#commddm mpi communicator for ranks participating in the spatial domain decomposition (ranks 0 to prmesh#npart-1 in comm if prmesh#exclude is false, ranks prmesh#pCS to prmesh#pCS+prmesh#npart-1 otherwise)\nmpiComm prmesh#commCS mpi communicator for ranks participating in the assembly and resolution of the coarse problem for two-level preconditioners (ranks 0 to prmesh#pCS - 1 in comm)\nmpiComm prmesh#commself self mpi communicator (this mpi rank only), used for factorizing local matrices\nmeshN[int] prmesh#aTh array (size prmesh#npart) of local meshes of the subdomains.\nIn the standard parallel case, only the local mesh for this mpi rank prmesh#aTh[mpiRank(prmesh#commddm)] is defined (unless this mpi rank is excluded from the spatial domain decomposition, i.e. prmesh#excluded  =  1, see below).\nIn the sequential case, all local meshes are defined.\nmeshN prmesh#Thi the local mesh of the subdomain for this mpi rank, i. e. prmesh#aTh[mpiRank(prmesh#commddm)] in the parallel case\nint prmesh#numberIntersection the number of neighbors for this mpi rank\nint[int] prmesh#arrayIntersection the list of neighbor ranks in prmesh#commddm for this mpi rank\n\n\nRemark for sequential use (see -seqddm):\nmeshN[int] prmesh#aTh array (size prmesh#npart) of local meshes of the subdomains\n\n\n\n\n\nLocal finite element spaces¶\n1 ffddmbuildDfespace(prfe,prmesh,scalar,def,init,Pk)\n\n\nbuilds the local finite element spaces and associated distributed operators on top of the mesh decomposition prmesh.\nThis will create and expose variables whose names will be prefixed by prfe, see below.\nIt is assumed that ffddmbuildDmesh has already been called with prefix prmesh in order to build the mesh decomposition.\nThe local finite element spaces of type Pk (where Pk is the type of finite element: P1, [P2,P2,P1], …) are defined on the local meshes of the subdomains based on the mesh decomposition previously created with prefix prmesh.\nscalar determines the type of data for this finite element: real or complex.\nTwo macros, def and init, are needed: def specifies how to define a finite element function in the finite element space Pk, and init specifies how to interpolate a scalar function onto the (possibly multiple) components of Pk. Two examples are given below:\nFor scalar P2 finite elements and complex-valued problems:\n1 macro def(u) u// EOM\n2 macro init(u) u// EOM\n3 ffddmbuildDfespace(myFEprefix,mymeshprefix,complex,def,init,P2)\n\n\nFor vectorial [P2,P2,P1] finite elements and real-valued problems:\n1 macro def(u) [u, u#B, u#C]// EOM\n2 macro init(u) [u, u, u]// EOM\n3 ffddmbuildDfespace(myFEprefix,mymeshprefix,real,def,init,[P2,P2,P1])\n\n\nIn practice, this builds the necessary distributed operators associated to the finite element space: the local partition of unity functions \\((D_i)_{i = 1,...,N}\\) (see prfe#Dk and prfe#Dih below) as well as the function prfe#update (see below) which synchronizes local vectors \\((u_i)_{i = 1,...,N}\\) between neighboring subdomains, performing the equivalent of \\(u_i  =  R_i (\\sum_{j = 1}^N R_j^T u_j)\\) or \\(u_i  =  R_i (\\sum_{j = 1}^N R_j^T D_j u_j)\\) in a distributed parallel environment.\nprfe#scalprod (see below) performs the parallel scalar product for vectors defined on this finite element.\ndefines:\n\nprfe#prmesh macro, saves the parent prefix prmesh of the mesh decomposition\nprfe#K macro, saves the type of data scalar for this finite element space (real or complex)\nfunc prfe#fPk saves the type of finite element Pk, e.g. P1, [P2,P2,P1], …\nfespace prfe#Vhi the local finite element space for this mpi rank, defined on the local mesh prmesh#Thi\nint prfe#Ndofglobal the total number of degrees of freedom \\(n\\) for this finite element discretization\nprfe#mdef macro, saves the macro def giving the definition of a finite element function in the finite element space Pk\nprfe#minit macro, saves the macro init specifying how to interpolate a scalar function onto the (possibly multiple) components of a finite element function of Pk.\nThis is used to create the local partition of unity function in prfe#Vhi, by interpolating the local P1 partition of unity function onto the components of prfe#Vhi.\nFor non Lagrange finite element spaces (e.g. RT0, Edge03d, …), see ffddmbuildDfespaceEdge.\nprfe#K[int][int] prfe#Dk array (size prmesh#npart) of local partition of unity vectors in the subdomains, equivalent to \\((D_i)_{i = 1,...,N}\\).\nIn the standard parallel case, only the local partition of unity vector for this mpi rank prfe#Dk[mpiRank(prmesh#commddm)] is defined (unless this mpi rank is excluded from the spatial domain decomposition, i. e. prmesh#excluded  =  1).\nIn the sequential case, all local partition of unity vectors are defined.\nmatrix<prfe#K>[int] prfe#Dih array (size prmesh#npart) similar to prfe#Dk but in matrix form, allowing for easier matrix-matrix multiplications.\nprfe#Dih[i] is a diagonal matrix, with the diagonal equal to prfe#Dk[i].\nfespace prfe#Vhglob the global finite element space defined on the global mesh prmesh#Thglob.\nDefined only if -noGlob is not used.\nmatrix<prfe#K>[int] prfe#Rih array (size prmesh#npart) of restriction matrices from the global finite element space to the local finite element spaces on the local submeshes of the subdomains.\nIn the standard parallel case, only the restriction matrix for this mpi rank prfe#Rih[mpiRank(prmesh#commddm)] is defined (unless this mpi rank is excluded from the spatial domain decomposition, i. e. prmesh#excluded  =  1).\nIn the sequential case, all restriction matrices are defined. The restriction matrices prfe#Rih are defined only if -noGlob is not used.\nfunc int prfe#update(scalar[int] ui, bool scale) The function prfe#update synchronizes the local vector ui between subdomains by exchanging the values of ui shared with neighboring subdomains (in the overlap region) using point-to-point MPI communications.\nIf scale is true, ui is multiplied by the local partition of unity beforehand.\nThis is equivalent to \\(u_i  =  R_i (\\sum_{j = 1}^N R_j^T u_j)\\) when scale is false and \\(u_i  =  R_i (\\sum_{j = 1}^N R_j^T D_j u_j)\\) when scale is true.\nfunc scalar prfe#scalprod(scalar[int] ai, scalar[int] bi) The function prfe#scalprod computes the global scalar product of two vectors whose local restriction to the subdomain of this mpi rank are ai and bi.\nThe result is computed as \\(\\sum_{j = 1}^N (D_j a_j, b_j)\\).\n\n\n\nDefine the problem to solve¶\n1 ffddmsetupOperator(pr,prfe,Varf)\n\n\nbuilds the distributed operator associated to the variational problem given by Varf, on top of the distributed finite element space prfe.\nThis will create and expose variables whose names will be prefixed by pr, see below.\nIt is assumed that ffddmbuildDfespace has already been called with prefix prfe in order to define the distributed finite element space.\nIn practice, this builds the so-called local ‘Dirichlet’ matrices \\(A_i  =  R_i A R_i^T\\), the restrictions of the global operator \\(A\\) to the subdomains (see pr#aRdbelow).\nThe matrices correspond to the discretization of the bilinear form given by the macro Varf, which represents the abstract variational form of the problem.\nThese matrices are then used to implement the action of the global operator \\(A\\) on a local vector (the parallel matrix-vector product with \\(A\\)), see pr#A below.\nAt this point, we already have the necessary data to be able to solve the problem with a parallel direct solver (MUMPS), which is the purpose of the function pr#directsolve (see below).\nSee ffddmbuildrhs for building the right-hand side.\nThe macro Varf is required to have three parameters: the name of the variational form, the mesh, and the finite element space.\nThe variational form given in this ‘abstract’ format will then be used by ffddm to assemble the discrete operators by setting the appropriate mesh and finite element space as parameters.\nAn example is given below:\n1 macro myVarf(varfName, meshName, VhName)\n2     varf varfName(u,v)  =  int3d(meshName)(grad(u)''* grad(v)) + on(1, u  =  1.0);\n3 // EOM\n4 \n5 ffddmsetupOperator(myprefix,myFEprefix,myVarf)\n\n\nRemark In this simple example, the third parameter VhName is not used.\nHowever, for more complex cases such as non-linear or time dependent problems where the problem depends on a solution computed at a previous step, it is useful to know for which discrete finite element space the variational form is being used.\nSee for example TODO\ndefines:\n\npr#prfe macro, saves the parent prefix prfe of the finite element space\nint pr#verbosity the level of verbosity for this problem, initialized with the value of ffddmverbosity\npr#writesummary macro, prints a summary of timings for this problem, such as the time spent to assemble local matrices or solve the linear system.\nmatrix<prfe#K> pr#Aglobal the global matrix \\(A\\) corresponding to the discretization of the variational form given by the macro Varf on the global finite element space prfe#Vhglob.\nDefined only in the sequential case.\nmatrix<prfe#K>[int] pr#aRd array (size prfe#prmesh#npart) of so-called local ‘Dirichlet’ matrices in the subdomains; these are the restrictions of the global operator to the subdomains, equivalent to \\(A_i  =  R_i A R_i^T\\) with \\(A\\) the global matrix corresponding to the discretization of the variational form given by the macro Varf on the global finite element space.\nIn the standard parallel case, only the local matrix for this mpi rank pr#aRd[mpiRank(prmesh#commddm)] is defined (unless this mpi rank is excluded from the spatial domain decomposition, i. e. prmesh#excluded  =  1).\nIn the sequential case, all local matrices are defined.\nfunc prfe#K[int] pr#A(prfe#K[int] &ui) The function pr#A computes the parallel matrix-vector product, i.e. the action of the global operator \\(A\\) on the local vector \\(u_i\\).\nThe computation is equivalent to \\(R_i (\\sum_{j = 1}^N R_j^T D_j A_j u_j)\\) and is performed in parallel using local matrices pr#aRd and the function prfe#update.\nIn the sequential case, the global matrix pr#Aglobal is used instead.\nfunc prfe#K[int] pr#AT(prfe#K[int] &ui) Similarly to pr#A, The function pr#AT computes the action of \\(A^T\\), the transpose of the global operator \\(A\\), on \\(u_i\\).\nfunc prfe#K[int] pr#directsolve(prfe#K[int]& rhsi) The function pr#directsolve allows to solve the linear system \\(A x  =  b\\) in parallel using the parallel direct solver MUMPS.\nThe matrix is given to MUMPS in distributed form through the local matrices pr#aRd.\nThe input rhsi is given as a distributed vector (rhsi is the restriction of the global right-hand side \\(b\\) to the subdomain of this mpi rank, see ffddmbuildrhs) and the returned vector is local as well.\n\nRemark: rectangular operators\nIt is possible to define a non-square distributed operator where the variational form takes two different finite element spaces of unknown and test functions. This is done through macro ffddmsetupOperatorRect which takes two FE prefixes (which must be defined on the same mesh prefix), see below:\n1 macro myVarf(varfName, meshName, VhName)\n2     varf varfName([u, uB, uC], [q])  =  int3d(meshName)(div(u) * q);\n3 // EOM\n4 \n5 ffddmsetupOperatorRect(myprefix,myFEprefixV,myFEprefixP,myVarf)\n\n\n\n1 ffddmbuildrhs(pr,Varfrhs,rhs)\n\n\nbuilds the right-hand side associated to the variational form given by Varfrhs for the problem corresponding to prefix pr.\nThe resulting right-hand side vector rhs corresponds to the discretization of the abstract linear form given by the macro Varfrhs (see ffddmsetupOperator for more details on how to define the abstract variational form as a macro).\nThe input vector rhs is resized and contains the resulting local right-hand side \\(R_i b\\), the restriction of the global right-hand side \\(b\\) to the subdomain of this mpi rank.\nIn the sequential case, the global right-hand side vector \\(b\\) is assembled instead.\nAn example is given below:\n1 macro myVarfrhs(varfName, meshName, VhName)\n2     varf varfName(u,v)  =  intN(meshName)(v) + on(1, u  =  1.0);\n3 // EOM\n4 \n5 real[int] rhsi(0);\n6 ffddmbuildrhs(myprefix,myVarfrhs,rhsi)\n\n\n\n\nOne level preconditioners¶\n1 ffddmsetupPrecond(pr,VarfPrec)\n\n\nbuilds the one level preconditioner for problem pr.\nThis will create and expose variables whose names will be prefixed by pr, see below.\nIt is assumed that ffddmsetupOperator has already been called with prefix pr in order to define the problem to solve.\nIn practice, this builds and performs the factorization of the local matrices used in the one level preconditioner.\nThe local matrices depend on the choice of ffddmprecond and VarfPrec, see pr#aRbelow.\ndefines:\n\nstring pr#prec equal to ffddmprecond.\nSets the type of one level preconditioner \\(M^{-1}_1\\) to be used: “asm” (Additive Schwarz), “ras” (Restricted Additive Schwarz), “oras” (Optimized Restricted Additive Schwarz), “soras” (Symmetric Optimized Restricted Additive Schwarz) or “none” (no preconditioner).\nmatrix<pr#prfe#K>[int] pr#aR array (size prfe#prmesh#npart) of local matrices used for the one level preconditioner.\nEach mpi rank of the spatial domain decomposition performs the \\(LU\\) (or \\(LDL^T\\)) factorization of the local matrix corresponding to its subdomain using the direct solver MUMPS.\n\nIf VarfPrec is not a previously defined macro (just put null for example), the matrices pr#aR are set to be equal to the so-called local ‘Dirichlet’ matrices pr#aRd (see ffddmsetupOperator).\nThis is for the classical ASM preconditioner \\(M^{-1}_1  =  M^{-1}_{\\text{ASM}}  =  \\sum_{i = 1}^N R_i^T A_i^{-1} R_i\\) or classical RAS preconditioner \\(M^{-1}_1  =  M^{-1}_{\\text{RAS}}  =  \\sum_{i = 1}^N R_i^T D_i A_i^{-1} R_i\\) (it is assumed that ffddmprecond is equal to “asm” or “ras”).\nIf VarfPrec is a macro, it is assumed that VarfPrec defines an abstract bilinear form (see ffddmsetupOperator for more details on how to define the abstract variational form as a macro).\n\nIf ffddmprecond is equal to “asm” or “ras”, the matrices pr#aR will be assembled as local ‘Dirichlet’ matrices in the same manner as pr#aRd, but using the bilinear form defined by VarfPrec instead.\nThis defines the ASM preconditioner as \\(M^{-1}_1  =  M^{-1}_{\\text{ASM}}  =  \\sum_{i = 1}^N R_i^T {(A_i^{\\text{Prec}})}^{-1} R_i\\) and the RAS preconditioner as \\(M^{-1}_1  =  M^{-1}_{\\text{RAS}}  =  \\sum_{i = 1}^N R_i^T D_i {(A_i^{\\text{Prec}})}^{-1} R_i\\), where \\(A_i^{\\text{Prec}}  =  R_i A^{\\text{Prec}} R_i^T\\).\nIf ffddmprecond is equal to “oras” or “soras”, the matrices pr#aR will correspond to the discretization of the variational form VarfPrec in the subdomains \\(\\Omega_i\\).\nIn particular, various boundary conditions can be imposed at the interface between subdomains (corresponding to mesh boundary of label ffddminterfacelabel set by the parent call to ffddmbuildDmesh), such as Optimized Robin boundary conditions.\nWe note the ORAS preconditioner as \\(M^{-1}_1  =  M^{-1}_{\\text{ORAS}}  =  \\sum_{i = 1}^N R_i^T D_i {(B_i^{\\text{Prec}})}^{-1} R_i\\) and the SORAS preconditioner as \\(M^{-1}_1  =  M^{-1}_{\\text{SORAS}}  =  \\sum_{i = 1}^N R_i^T D_i {(B_i^{\\text{Prec}})}^{-1} D_i R_i\\).\n\n\n\n\nfunc pr#prfe#K[int] pr#PREC1(pr#prfe#K[int] &ui) The function pr#PREC1 computes the parallel application of the one level preconditioner \\(M^{-1}_1\\), i.e. the action of \\(M^{-1}_1\\) on the local vector \\(u_i\\).\nIn the sequential case, it computes the action of \\(M^{-1}_1\\) on a global vector.\nThe action of the inverse of local matrices pr#aRd is computed by forward-backward substitution using their \\(LU\\) (or \\(LDL^T\\)) decomposition.\nfunc pr#prfe#K[int] pr#PREC(pr#prfe#K[int] &ui) The function pr#PREC corresponds to the action of the preconditioner \\(M^{-1}\\) for problem pr.\nIt coincides with the one level preconditioner pr#PREC1 after the call to ffddmsetupPrecond.\nIf a second level is subsequently added (see the next section about Two level preconditioners), it will then coincide with the two level preconditioner \\(M^{-1}_2\\) (see pr#PREC2level).\nfunc pr#prfe#K[int] pr#fGMRES(pr#prfe#K[int]& x0i, pr#prfe#K[int]& bi, real eps, int nbiter, string sprec) The function pr#fGMRES allows to solve the linear system \\(A x  =  b\\) in parallel using the flexible GMRES method preconditioned by \\(M^{-1}\\).\nThe action of the global operator \\(A\\) is given by pr#A, the action of the preconditioner \\(M^{-1}\\) is given by pr#PREC and the scalar products are computed by pr#scalprod.\nMore details are given in the section Solving the linear system.\n\n\n\nTwo level preconditioners¶\nThe main ingredient of a two level preconditioner is the so-called ‘coarse space’ matrix \\(Z\\).\n\\(Z\\) is a rectangular matrix of size \\(n \\times n_c\\), where usually \\(n_c \\ll n\\).\n\\(Z\\) is used to build the ‘coarse space operator’ \\(E  =  Z^T A Z\\), a square matrix of size \\(n_c \\times n_c\\).\nWe can then define the ‘coarse space correction operator’ \\(Q  =  Z E^{-1} Z^T  =  Z (Z^T A Z)^{-1} Z^T\\), which can then be used to enrich the one level preconditioner through a correction formula.\nThe simplest one is the additive coarse correction: \\(M^{-1}_2  =  M^{-1}_1 + Q\\).\nSee pr#corr below for all other available correction formulas.\nThere are multiple ways to define a relevant coarse space \\(Z\\) for different classes of problems.\nffddmgeneosetup defines a coarse space correction operator by building the GenEO coarse space, while ffddmcoarsemeshsetup builds the coarse space using a coarse mesh.\nAfter a call to either ffddmgeneosetup or ffddmcoarsemeshsetup, the following variables and functions are set up:\n\nint pr#ncoarsespace the size of the coarse space \\(n_c\\).\nstring pr#corr initialized with the value of ffddmcorrection.\nSpecifies the type of coarse correction formula to use for the two level preconditioner.\nThe possible values are:\n\n\n\\[\\begin{split}\\begin{array}{llllll}\n\\nonumber\n    &&\\text{\"AD\"}:&&\\textit{Additive}, \\quad &M^{-1}  =  M^{-1}_2  =  \\phantom{(I - Q A) }M^{-1}_1\\phantom{ (I - A Q)} + Q\\\\\n    &&\\text{\"BNN\"}:&&\\textit{Balancing Neumann-Neumann}, \\quad &M^{-1}  =  M^{-1}_2  =  (I - Q A) M^{-1}_1 (I - A Q) + Q\\\\\n    &&\\text{\"ADEF1\"}:&&\\textit{Adapted Deflation Variant 1}, \\quad &M^{-1}  =  M^{-1}_2  =  \\phantom{(I - Q A) }M^{-1}_1 (I - A Q) + Q\\\\\n    &&\\text{\"ADEF2\"}:&&\\textit{Adapted Deflation Variant 2}, \\quad &M^{-1}  =  M^{-1}_2  =  (I - Q A) M^{-1}_1\\phantom{ (I - A Q)} + Q\\\\\n    &&\\text{\"RBNN1\"}:&&\\textit{Reduced Balancing Variant 1}, \\quad &M^{-1}  =  M^{-1}_2  =  (I - Q A) M^{-1}_1 (I - A Q)\\\\\n    &&\\text{\"RBNN2\"}:&&\\textit{Reduced Balancing Variant 2}, \\quad &M^{-1}  =  M^{-1}_2  =  (I - Q A) M^{-1}_1\\phantom{ (I - A Q)}\\\\\n    &&\\text{\"none\"}:&&\\textit{no coarse correction}, \\quad &M^{-1}  =  M^{-1}_2  =  \\phantom{(I - Q A) }M^{-1}_1\\phantom{ (I - A Q)}\\\\\n\\end{array}\\end{split}\\]\n\nNote that AD, ADEF1 and RBNN2 only require one application of \\(Q\\), while BNN, ADEF2 and RBNN1 require two.\nThe default coarse correction is ADEF1, which is cheaper and generally as robust as BNN or ADEF2.\nfunc pr#prfe#K[int] pr#Q(pr#prfe#K[int] &ui) The function pr#Q computes the parallel application of the coarse correction operator \\(Q\\), i.e. the action of \\(Q  =  Z E^{-1} Z^T\\) on the local vector \\(u_i\\).\nIn the sequential case, it computes the action of \\(Q\\) on a global vector.\nThe implementation differs depending on the method used to build the coarse space (with GenEO or using a coarse mesh), but the idea is the same: the action of the transpose of the distributed operator \\(Z\\) on the distributed vector \\(u_i\\) is computed in parallel, with the contribution of all subdomains being gathered in a vector of size \\(n_c\\) in the mpi process of rank 0.\nThe action of the inverse of the coarse space operator \\(E\\) is then computed by forward-backward substitution using its \\(LU\\) (or \\(LDL^T\\)) decomposition previously computed by the first pr#prfe#prmesh#pCS ranks of the mpi communicator.\nThe result is then sent back to all subdomains to perform the last application of \\(Z\\) and obtain the resulting local vector in each subdomain.\nfunc pr#prfe#K[int] pr#PREC2level(pr#prfe#K[int] &ui) The function pr#PREC2level computes the parallel application of the two level preconditioner \\(M^{-1}_2\\), i.e. the action of \\(M^{-1}_2\\) on the local vector \\(u_i\\).\nIn the sequential case, it computes the action of \\(M^{-1}_2\\) on a global vector.\nThe two level preconditioner depends on the choice of the coarse correction formula which is determined by pr#corr, see above.\n\n\nBuilding the GenEO coarse space¶\n1 ffddmgeneosetup(pr,Varf)\n\n\nThis builds the GenEO coarse space for problem pr.\nThis will create and expose variables whose names will be prefixed by pr, see below.\nIt is assumed that ffddmsetupPrecond has already been called for prefix pr in order to define the one level preconditioner for problem pr.\nThe GenEO coarse space is \\(Z  =  (R_i^T D_i V_{i,k})^{i = 1,...,N}_{\\lambda_{i,k} \\ge \\tau}\\), where \\(V_{i,k}\\) are eigenvectors corresponding to eigenvalues \\(\\lambda_{i,k}\\) of the following local generalized eigenvalue problem in subdomain \\(i\\):\n\\(D_i A_i D_i V_{i,k}  =  \\lambda_{i,k} A_i^{\\text{Neu}} V_{i,k}\\),\nwhere \\(A_i^{\\text{Neu}}\\) is the local Neumann matrix of subdomain \\(i\\) (with Neumann boundary conditions at the subdomain interface).\nIn practice, this builds and factorizes the local Neumann matrices \\(A_i^{\\text{Neu}}\\) corresponding to the abstract bilinear form given by the macro Varf (see ffddmsetupOperator for more details on how to define the abstract variational form as a macro).\nIn the GenEO method, the abstract bilinear form Varf is assumed to be the same as the one used to define the problem pr through the previous call to ffddmsetupOperator.\nThe local generalized eigenvalue problem is then solved in each subdomain to find the eigenvectors \\(V_{i,k}\\) corresponding to the largest eigenvalues \\(\\lambda_{i,k}\\) (see pr#Z below).\nThe number of computed eigenvectors \\(\\nu\\) is given by ffddmnu.\nThe eigenvectors selected to enter \\(Z\\) correspond to eigenvalues \\(\\lambda_{i,k}\\) larger than \\(\\tau\\), where the threshold parameter \\(\\tau\\) is given by ffddmtau.\nIf ffddmtau \\( =  0\\), all ffddmnu eigenvectors are selected.\nFinally, the coarse space operator \\(E  =  Z^T A Z\\) is assembled and factorized (see pr#E below).\ndefines:\n\npr#prfe#K[int][int] pr#Z array of local eigenvectors \\(Z_{i,k}  =  D_i V_{i,k}\\) obtained by solving the local generalized eigenvalue problem above in the subdomain of this mpi rank using Arpack.\nThe number of computed eigenvectors \\(\\nu\\) is given by ffddmnu.\nThe eigenvectors selected to enter \\(Z\\) correspond to eigenvalues \\(\\lambda_{i,k}\\) larger than \\(\\tau\\), where the threshold parameter \\(\\tau\\) is given by ffddmtau.\nIf ffddmtau \\( =  0\\), all ffddmnu eigenvectors are selected.\nmatrix<pr#prfe#K> pr#E the coarse space operator \\(E  =  Z^T A Z\\).\nThe matrix pr#E is assembled in parallel and is factorized by the parallel direct solver MUMPS using the first pr#prfe#prmesh#pCS ranks of the mpi communicator, with mpi rank 0 as the master process.\nThe number of mpi processes dedicated to the coarse problem is set by the underlying mesh decomposition of problem pr, which also specifies if these mpi ranks are excluded from the spatial decomposition or not.\nThese parameters are set by ffddmpCS and ffddmexclude when calling ffddmbuildDmesh (see ffddmbuildDmesh for more details).\n\n\n\nBuilding the coarse space from a coarse mesh¶\n1 ffddmcoarsemeshsetup(pr,Thc,VarfEprec,VarfAprec)\n\n\nbuilds the coarse space for problem pr from a coarse problem which corresponds to the discretization of a variational form on a coarser mesh Thc of \\(\\Omega\\).\nThis will create and expose variables whose names will be prefixed by pr, see below.\nIt is assumed that ffddmsetupPrecond has already been called for prefix pr in order to define the one level preconditioner for problem pr.\nThe abstract variational form for the coarse problem can differ from the original problem pr and is given by macro VarfEprec (see ffddmsetupOperator for more details on how to define the abstract variational form as a macro).\nFor example, absorption can be added in the preconditioner for wave propagation problems, see examples for Helmholtz and Maxwell equations in the Examples section.\nThe coarse space \\(Z\\) corresponds to the interpolation operator from the coarse finite element space to the original finite element space of the problem.\nThus, the coarse space operator \\(E  =  Z^T A^{\\text{Eprec}} Z\\) corresponds to the matrix of the problem given by VarfEprec discretized on the coarse mesh Thc and is assembled as such.\nSimilarly, VarfAprec specifies the global operator involved in multiplicative coarse correction formulas.\nFor example, \\(M^{-1}_{2,\\text{ADEF1}}  =  M^{-1}_1 (I - A^{\\text{Aprec}} Q) + Q\\) (where \\(Q  =  Z E^{-1} Z^T\\)).\n\\(A^{\\text{Aprec}}\\) defaults to \\(A\\) if VarfAprec is not a valid macro (you can put null for example).\ndefines:\n\nmeshN pr#ThCoarse the coarse mesh Thc\nfespace pr#VhCoarse the coarse finite element space of type pr#prfe#fPk defined on the coarse mesh pr#ThCoarse\nmatrix<pr#prfe#K> pr#AglobEprec the global matrix \\(A^{\\text{Aprec}}\\) corresponding to the discretization of the variational form given by the macro VarfAprec on the global finite element space pr#prfe#Vhglob.\nDefined only in the sequential case.\npr#AglobEprec is equal to pr#Aglobal if VarfAprec is not a valid macro.\nmatrix<pr#prfe#K> pr#aRdEprec the local ‘Dirichlet’ matrix corresponding to VarfAprec; it is the local restriction of the global operator \\(A^{\\text{Aprec}}\\) to the subdomain, equivalent to \\(A^{\\text{Aprec}}_i  =  R_i A^{\\text{Aprec}} R_i^T\\) with \\(A^{\\text{Aprec}}\\) the global matrix corresponding to the discretization of the variational form given by the macro VarfAprec on the global finite element space.\nDefined only if this mpi rank is not excluded from the spatial domain decomposition, i. e. prmesh#excluded  =  0.\npr#aRdEprec is equal to pr#aRd[mpiRank(prmesh#commddm)] if VarfAprec is not a valid macro.\nfunc pr#prfe#K[int] pr#AEprec(pr#prfe#K[int] &ui) The function pr#AEprec computes the parallel matrix-vector product, i.e. the action of the global operator \\(A^{\\text{Aprec}}\\) on the local vector \\(u_i\\).\nThe computation is equivalent to \\(R_i (\\sum_{j = 1}^N R_j^T D_j A^{\\text{Aprec}}_j u_j)\\) and is performed in parallel using local matrices pr#aRdEprec and the function pr#prfe#update.\nIn the sequential case, the global matrix pr#AglobEprec is used instead.\nmatrix<pr#prfe#K> pr#ZCM the interpolation operator \\(Z\\) from the coarse finite element space pr#VhCoarse to the global finite element space pr#prfe#Vhglob.\nDefined only in the sequential case.\nmatrix<pr#prfe#K> pr#ZCMi the local interpolation operator \\(Z_i\\) from the coarse finite element space pr#VhCoarse to the local finite element space pr#prfe#Vhi.\nDefined only if this mpi rank is not excluded from the spatial domain decomposition, i. e. prmesh#excluded  =  0.\npr#ZCMi is used for the parallel application of \\(Z\\) and \\(Z^T\\).\nmatrix<pr#prfe#K> pr#ECM the coarse space operator \\(E  =  Z^T A^{\\text{Eprec}} Z\\).\nThe matrix pr#ECM is assembled by discretizing the variational form given by VarfEprec on the coarse mesh and factorized by the parallel direct solver MUMPS using the first pr#prfe#prmesh#pCS ranks of the mpi communicator, with mpi rank 0 as the master process.\nThe number of mpi processes dedicated to the coarse problem is set by the underlying mesh decomposition of problem pr, which also specifies if these mpi ranks are excluded from the spatial decomposition or not.\nThese parameters are set by ffddmpCS and ffddmexclude when calling ffddmbuildDmesh (see ffddmbuildDmesh for more details).\n\n\n\n\nSolving the linear system¶\n1 func pr#prfe#K[int] pr#fGMRES(pr#prfe#K[int]& x0i, pr#prfe#K[int]& bi, real eps, int itmax, string sp)\n\n\nsolves the linear system for problem pr using the flexible GMRES algorithm with preconditioner \\(M^{-1}\\) (corresponding to pr#PREC).\nReturns the local vector corresponding to the restriction of the solution to pr#prfe#Vhi.\nx0i and bi are local distributed vectors corresponding respectively to the initial guess and the right-hand side (see ffddmbuildrhs).\neps is the stopping criterion in terms of the relative decrease in residual norm.\nIf eps \\(< 0\\), the residual norm itself is used instead.\nitmax sets the maximum number of iterations.\nsp selects between the \"left\" or \"right\" preconditioning variants: left preconditioned GMRES solves \\(M^{-1} A x  =  M^{-1} b\\), while right preconditioned GMRES solves \\(A M^{-1} y  =  b\\) for \\(y\\), with \\(x  =  M^{-1} y\\).\n\n\nUsing HPDDM within ffddm¶\nffddm allows you to use HPDDM to solve your problem, effectively replacing the ffddm implementation of all parallel linear algebra computations.\nffddm can then be viewed as a finite element interface for HPDDM.\nYou can use HPDDM features unavailable in ffddm such as advanced Krylov subspace methods implementing block and recycling techniques.\nTo switch to HPDDM, simply define the macro pr#withhpddm before using ffddmsetupOperator. You can then pass HPDDM options\nwith command-line arguments or directly to the underlying HPDDM operator pr#hpddmOP. Options need to be prefixed by the operator prefix:\n1 macro PBwithhpddm()1 // EOM\n2 ffddmsetupOperator( PB , FE , Varf )\n3 set(PBhpddmOP,sparams = \"-hpddm_PB_krylov_method gcrodr -hpddm_PB_recycle 10\");\n\n\nYou can also choose to replace only the Krylov solver, by defining the macro pr#withhpddmkrylov before using ffddmsetupOperator.\nDoing so, a call to pr#fGMRES will call the HPDDM Krylov solver, with ffddm providing the operator and preconditioner through pr#A and pr#PREC. You can then pass HPDDM options to the Krylov solver through command-line arguments:\n1 macro PBwithhpddmkrylov()1 // EOM\n2 ffddmsetupOperator( PB , FE , Varf )\n\n\nFor example, using restarted GCRO-DR(40) and recycling 10 Ritz vectors at each restart:\n1 ff-mpirun -np 4 test.edp -wg -hpddm_krylov_method gcrodr -hpddm_recycle 10 -ffddm_gmres_restart 40\n\n\nAn example can be found in Helmholtz-2d-HPDDM-BGMRES.edp, see the Examples section.\n\n\nAdvanced use¶\n\nInterpolation between two distributed finite element spaces¶\nThe parallel interpolation of a distributed finite element function to another distributed finite element space can be computed using the prfe#transferfromVhi macro. Internally, it uses the transfer macro from the macro_ddm.idp script. The macro is prefixed by the source finite element prefix prfe and is used a follows:\n1 prfe#transferfromVhi(us,Vht,Pkt,rest)\n\n\nwhere us is distributed source FE function defined on prfe#Vhi, Vht is the target local finite element space, Pkt is the approximation space corresponding to Vht and rest is the target local FE function defined on Vht. You can find an example below:\n 1 macro dimension()2//\n 2 \n 3 include \"ffddm.idp\"\n 4 \n 5 mesh Ths  =  square(10,10);\n 6 \n 7 mesh Tht  =  square(30,20);\n 8 \n 9 ffddmbuildDmesh(Ms,Ths,mpiCommWorld)\n10 \n11 ffddmbuildDmesh(Mt,Tht,mpiCommWorld)\n12 \n13 func Pk  =  [P2,P2];\n14 \n15 macro def(u)[u,u#2]//\n16 macro init(u)[u,u]//\n17 ffddmbuildDfespace(FEs,Ms,real,def,init,Pk)\n18 ffddmbuildDfespace(FEt,Mt,real,def,init,Pk)\n19 \n20 FEsVhi def(us)  =  [cos(x^2+y),sin(x^2+y)];\n21 \n22 FEtVhi def(ut);\n23 \n24 FEstransferfromVhi(us,FEtVhi,Pk,ut)\n25 \n26 ffddmplot(FEs,us,\"u source\");\n27 ffddmplot(FEt,ut,\"u target\");\n\n\n\n\nLocal finite element spaces for non Lagrange finite elements¶\nFor Lagrange finite elements, the partition of unity \\((D_i)_{i = 1,...,N}\\) (see prfe#Dk and prfe#Dih) is built by interpolating the local P1 partition of unity function onto the components of the Pk finite element space prfe#Vhi.\nFor non Lagrange finite element spaces, such as Raviart–Thomas or Nédélec edge elements, the definition of the degrees of freedom can be more involved, and interpolating the P1 partition of unity functions directly is inappropriate.\nThe idea is then to use a “pseudo” finite element Pkpart derived from Pk which is suitable for interpolating the P1 partition of unity, in the sense that it will produce a partition of unity for Pk.\nFor example, for first-order Nédélec edge elements (Edge03d), whose degrees of freedom are the circulations along the edges, we define the “pseudo” finite element Edge03ds0 which can be seen as a scalar Lagrange counterpart: the numbering of the degrees of freedom is the same, but they correspond to the value at the edge midpoints.\nFor Lagrange finite elements, the distributed finite element spaces are built using ffddmbuildDfespace. Here you must use ffddmbuildDfespaceEdge, which builds the distributed finite element space using a “pseudo” finite element to build the partition of unity:\n1 ffddmbuildDfespaceEdge(prfe,prmesh,scalar,def,init,Pk,defpart,initpart,Pkpart)\n\n\nwhere macros defpart and initpart specify how to define and interpolate a function in the ‘pseudo’ finite element space Pkpart, similar to def and init for Pk.\nAn example with first-order Nédélec edge elements (Edge03d + Edge03ds0) for Maxwell equations can be found in Maxwell-3d-simple.edp, see the Examples section.\n\n\nInexact coarse solves for two level methods¶\nWe have seen in the Two level preconditioners section that two level methods produce a ‘coarse space operator’ \\(E\\) that needs to be inverted at each iteration.\nBy default the coarse space operator matrix is factorized by the direct solver MUMPS. This can become a bottleneck and hinder scalability for large problems, where \\(E\\) can become too large to be factorized efficiently.\nTo remedy this, we can instead opt to use an iterative method to solve the coarse problem at each iteration.  Moreover, in order to retain robustness, a DD preconditioner can be used to solve the inner coarse problem more efficiently.\n\nCoarse mesh and inexact coarse solve¶\nWhen the coarse problem comes from a coarse mesh discretization, a natural way to do inexact coarse solve is to use a one level domain decomposition method on the coarse problem, with the same subdomain partitioning for the coarse and fine meshes.\nThis means that each processor is associated to one spatial subdomain and hosts the two local (nested) coarse and fine submeshes corresponding to this subdomain, as well as the corresponding local matrices for the two discretizations.\nThis natural choice offers interesting benefits:\n\nWe naturally recover a load-balanced parallel implementation, provided that the initial partitioning is balanced.\nThe communication pattern between neighboring subdomains is the same for the coarse and fine discretizations.\nThe assembly and the application of the interpolation operator \\(Z\\) (and \\(Z^T\\)) between the fine and the coarse spaces can be computed locally in each subdomain and require no communication.\n\nIn ffddm, the first step is to build the two nested mesh decompositions using ffddmbuildDmeshNested:\n1 ffddmbuildDmeshNested(prmesh,Thc,s,comm)\n\n\ndecomposes the coarse mesh Thc into overlapping submeshes and creates the fine decomposition by locally refining submeshes by a factor of s, i.e. splitting each mesh element into \\(s^d\\) elements, \\(s \\geq 1\\).\nThis will create and expose variables corresponding to both decompositions, prefixed by prmesh for the fine mesh and by prmesh#Coarse for the coarse mesh (see ffddmbuildDmesh).\nIt also sets the integer variable prmesh#binexactCS to 1, which specifies that any two level method defined on mesh prefix prmesh will use inexact coarse solves.\nThe distributed finite element spaces, operators and preconditioners can then be defined for both decompositions. Here is an example where the coarse problem is solved using a one level method:\n 1 ffddmbuildDmeshNested(M, Thc, 3, mpiCommWorld)\n 2 \n 3 ffddmbuildDfespace(FE, M, real, def, init, Pk)\n 4 ffddmbuildDfespace(FECoarse, MCoarse, real, def, init, Pk)\n 5 \n 6 // coarse operator (Varf of E):\n 7 ffddmsetupOperator(PBCoarse, FECoarse, VarfEprec)\n 8 // one level preconditioner for the coarse problem:\n 9 ffddmsetupPrecond(PBCoarse, VarfPrecC)\n10 \n11 // operator for the fine problem:\n12 ffddmsetupOperator(PB, FE, Varf)\n13 // one level preconditioner for the fine problem:\n14 ffddmsetupPrecond(PB, VarfPrec)\n15 \n16 // add the second level:\n17 ffddmcoarsemeshsetup(PB, Thc, VarfEprec, null)\n18 \n19 [...]\n20 u[]  =  PBfGMRES(x0, rhs, 1.e-6, 200, \"right\");\n\n\nRemarks:\n\nNote that the different prefixes need to match: prefixes for the coarse decomposition have to be those of the fine decomposition, appended with Coarse.\nThe operator and preconditioner for the coarse problem have to be defined before those of the fine problem, because the pr#Q function is actually defined by ffddmsetupPrecond and involves a call to pr#CoarsefGMRES (which is defined by ffddmsetupPrecond for the coarse problem) for the iterative solution of the coarse problem if pr#prfe#prmesh#binexactCS \\(\\neq 0\\).\nIn this case, ffddmcoarsemeshsetup does not use Thc or VarfEprec and only builds the local interpolation matrices between fine and coarse local finite element spaces pr#prfe#Vhi and pr#prfe#CoarseVhi to be able to apply \\(Z\\) and \\(Z^T\\).\nThe GMRES tolerance for the inner solution of the coarse problem is set by ffddminexactCStol and is equal to 0.1 by default.\n\nIn practice, these methods can give good results for wave propagation problems, where the addition of artificial absorption in the preconditioner helps with the convergence of the one level method for the inner solution of the coarse problem.\nYou can find an example for Maxwell equations in Maxwell_Cobracavity.edp, see the Examples section. More details can be found here and in\n\nM. Bonazzoli, V. Dolean, I. G. Graham, E. A. Spence, P.-H. Tournier. Domain decomposition preconditioning for the high-frequency time-harmonic Maxwell equations with absorption. Mathematics of Computation, 2019. DOI: https://doi.org/10.1090/mcom/3447\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Domain Decomposition (DD)\n\t\t\tNext topic: Parameters \n\t\t\n\t","l":"documentation/ffddm/documentation.html"},"6":{"t":"Examples","p":"\n\t\t\n   \nExamples¶\n\n\n\n\n\n\n\n\n\nFile name\n\\(M^{-1}_1\\)\n\\(M^{-1}_2\\)\ninexact CS\ncomments\n\n\n\ndiffusion-3d-minimal-direct.edp\n\n\n\ndirect solver MUMPS\n\ndiffusion-3d-minimal-ddm.edp\nRAS\nGenEO\n\n\n\ndiffusion-3d-simple.edp\nRAS\nGenEO\n\ncomparison with direct solver\n\ndiffusion-2d-thirdlevelgeneo.edp\nRAS\nGenEO\nRAS + GenEO\n\n\nelasticity-3d-simple.edp\nRAS\nGenEO\n\n\n\nelasticity-3d-thirdlevelgeneo.edp\nRAS\nGenEO\nRAS + GenEO\n\n\nHelmholtz-2d-simple.edp\nORAS\nCoarse Mesh / DtN\n\nfor the DtN coarse space see this paper\n\nHelmholtz-2d-marmousi.edp\nORAS\nCoarse Mesh\n\n\n\nHelmholtz-3d-simple.edp\nORAS\nCoarse Mesh\n\n\n\nHelmholtz-3d-overthrust.edp\nORAS\n\n\n\n\nHelmholtz-2d-HPDDM-BGMRES.edp\nORAS\n\n\nmulti-rhs Block GMRES with HPDDM\n\nNavier-2d-marmousi2.edp\nORAS\nCoarse Mesh\n\n\n\nMaxwell-3d-simple.edp\nORAS\nCoarse Mesh\n\n\n\nMaxwell_Cobracavity.edp\nORAS\nCoarse Mesh\nORAS\n\n\nnatural_convection.edp\nORAS\nCoarse Mesh\n\nnonlinear\n\nnatural_convection_3D_obstacle.edp\nORAS\nCoarse Mesh\n\nnonlinear\n\nRichards-2d.edp\nRAS\n\n\nnonlinear time dependent mesh adaptation\n\nheat-torus-3d-surf.edp\nRAS\nGenEO\n\n3d surface time dependent\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Tutorial\n\t\t\tNext topic: Language references \n\t\t\n\t","l":"documentation/ffddm/examples.html"},"7":{"t":"ffddm","p":"\n\t\t\n   \nffddm¶\nIn the acronym ffddm, ff stands for FreeFEM and ddm for domain decomposition methods.\nThe idea behind ffddm is to simplify the use of parallel solvers in FreeFEM: distributed direct methods and domain decomposition methods.\nParallelism is an important issue because, since about 2004, the clock speed of cores stagnates at 2-3 GHz.\nThe increase in performance is almost entirely due to the increase in the number of cores per processor.\nAll major processor vendors are producing multicore chips and now every machine is a parallel machine.\nWaiting for the next generation machine does not guarantee anymore a better performance of a software.\nTo keep doubling performance parallelism must double.\nIt implies a huge effort in algorithmic development.\nThanks to ffddm, FreeFEM users have access to high-level functionalities for specifying and solving their finite element problems in parallel.\nThe first task handled by ffddm is the data distribution among the processors.\nThis is done via an overlapping domain decomposition and a related distributed linear algebra.\nThen, solving a linear system is possible either via an interface to the parallel MUMPS solver or by using domain decomposition methods as preconditioners to the GMRES Krylov method.\nThe ffddm framework makes it easy to use scalable Schwarz methods enhanced by a coarse space correction built either from a coarse mesh or a GenEO (Generalized Eigenvalue in the Overlap) coarse space, see also the book An Introduction to Domain Decomposition Methods: algorithms, theory, and parallel implementation.\nState-of-the-art three level methods are also implemented in ffddm.\nThe ffddm framework is entirely written in the FreeFEM language and the ‘idp’ scripts can be found here (‘ffddm*.idp’ files).\nIt makes it also a very good tool for learning and prototyping domain decomposition methods without compromising efficiency.\nffddm can also act as a wrapper for the HPDDM library.\nHPDDM is an efficient implementation of various domain decomposition methods and a variety of Krylov subspace algorithms, with advanced block and recycling methods for solving sequences of linear systems with multiple right-hand sides: GMRES and Block GMRES, CG, Block CG, and Breakdown-Free Block CG, GCRO-DR and Block GCRO-DR.\nFor more details on how to use HPDDM within ffddm, see the ffddm documentation.\nGetting Started\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 include \"ffddm.idp\"\n 3 mesh Th  =  square(50,50);    // global mesh\n 4 // Step 1: Decompose the mesh\n 5 ffddmbuildDmesh( M , Th , mpiCommWorld )\n 6 // Step 2: Define your finite element\n 7 macro def(u)  u // EOM\n 8 macro init(u) u // EOM\n 9 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n10 // Step 3: Define your problem\n11 macro grad(u) [dx(u), dy(u)] // EOM\n12 macro Varf(varfName, meshName, VhName)\n13     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v)) + int2d(meshName)(1*v)\n14                        + on(1, u  =  0);  // EOM\n15 ffddmsetupOperator( PB , FE , Varf )\n16 FEVhi ui, bi;\n17 ffddmbuildrhs( PB , Varf , bi[] )\n18 // Step 4: Define the one level DD preconditioner\n19 ffddmsetupPrecond( PB , Varf )\n20 // Step 5: Define the two-level GenEO Coarse Space\n21 ffddmgeneosetup( PB , Varf )\n22 // Step 6: Solve the linear system with GMRES\n23 FEVhi x0i  =  0;\n24 ui[]  =  PBfGMRES(x0i[], bi[], 1.e-6, 200, \"right\");\n25 ffddmplot(FE, ui, \"u\")\n26 PBwritesummary\n\n\nThis example solves a Laplace problem in 2D in parallel with a two-level GenEO domain decomposition method.\nTo try this example, just copy and paste the script above in a file ‘test.edp’ and run it on 2 cores with\nff-mpirun -np 2 test.edp -wg\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Developers\n\t\t\tNext topic: Domain Decomposition (DD) \n\t\t\n\t","l":"documentation/ffddm/index.html"},"8":{"t":"Domain Decomposition (DD)","p":"\n\t\t\n   \nDomain Decomposition (DD)¶\nWhen the size of a three dimensional problem is large (whatever it means), it is necessary to distribute data among several processors especially for solving linear systems.\nA natural way is to do it via domain decomposition.\n\nMesh Decomposition¶\nThe starting point is a collection of \\(N\\) sub-meshes \\((Th_i)_{i = 1}^N\\) that together form a global mesh\n\n\\[Th: =  \\cup_{i = 1}^N Th_i\\,.\\]\nThese meshes may be overlapping or not. This decomposition induces a natural decomposition of the global finite element space \\(Vh\\) on \\(Th\\) into \\(N\\) local finite element spaces \\((Vh_i)_{i = 1}^N\\) each of them defined on \\(Th_i\\).\nNote By global, we mean that the corresponding structure can be refered to in the code (most often only) by its local values.\nIn computer science term, it corresponds to a distributed data where each piece of data is stored by a MPI process.\n\n\nDistributed Linear Algebra¶\nFor a given finite element space \\(Vh\\), the domain decomposition induces a natural decomposition of the set of the global degrees of freedom (d.o.f.) of \\(Vh\\) into the \\(N\\) subsets of d.o.f.’s \\(({\\mathcal N}_i)_{i = 1}^N\\) each associated with the local finite element space \\(Vh_i\\).\nWe have thus\n\n\\[{\\mathcal N}  =  \\cup_{i = 1}^N {\\mathcal N}_i\\,,\\]\nbut with duplications of some of the d.o.f.’s.\nAssociated with this decomposition of the set of d.o.f.’s \\({\\mathcal N}\\), a distributed vector is a collection of local vectors \\(({\\mathbf V_i})_{1\\le i\\le N}\\) so that the values on the duplicated d.o.f.’s are the same.\n\nNote\nIn mathematical terms, it can be described as follows for a real valued problem.\nLet \\(R_i\\) be the restriction operator from \\(\\R^{\\#{\\mathcal N}}\\) to \\(\\R^{\\#{\\mathcal N}_i}\\), where \\(\\#{\\mathcal N}_i\\) denotes the number of elements of \\({\\mathcal N}_i\\).\nA collection of local vectors \\(({\\mathbf V}_i)_{1\\le i\\le N}\\in \\Pi_{i = 1}^N \\R^{\\#{\\mathcal N}_i}\\) is a distributed vector iff there exists a global vector \\({\\mathbf V}\\in\\R^{\\#{\\mathcal N}}\\) such that for all subset \\(1\\le i\\le N\\), we have:\n\n\\[{\\mathbf V}_i  =  R_i\\,{\\mathbf V}\\,.\\]\nWe will also say that the collection of local vectors \\(({\\mathbf V}_i)_{1\\le i\\le N}\\) is consistent. For a complex valued problem, simply replace \\(\\R\\) with \\(\\C\\).\n\n\n\nPartition of Unity Matrices (POUM)¶\nLet \\((D_i)_{1\\le i \\le N}\\) be square diagonal matrices of size \\(\\#{\\mathcal N}_i\\) which form a partition of unity in the sense that:\n\n\\[Id_{}  =  \\sum_{i = 1}^N R_i^T\\,D_i\\,R_i\\text{ in }\\R^{\\#{\\mathcal N}\\times \\#{\\mathcal N}} \\,.\\]\nFor instance if a degree of freedom is shared by \\(k\\) subdomains defining the corresponding entry of the diagonal matrix \\(D\\) to be \\(1/k\\) yields partition of unity matrices.\nThe matrices \\(R_i\\) and \\(D_i\\) are the heart of distributed linear algebra.\n\nDistributed scalar product¶\nFor two global vectors \\({\\mathbf U}\\) and \\({\\mathbf V}\\) of size \\(\\#{\\mathcal N}\\), the formula for the scalar product \\({\\mathbf V}^T\\,{\\mathbf U} = ({\\mathbf U},\\,{\\mathbf V})\\) in terms of their distributed vector counterparts makes use of the partition of unity matrices \\((D_i)_{1\\le i \\le N}\\) introduced above:\n\n\\[({\\mathbf U}, {\\mathbf V})  =  \\left({\\mathbf U}, \\sum_{i = 1}^N R_i^T D_i R_i {\\mathbf V}\\right)  =  \\sum_{i = 1}^N(R_i {\\mathbf U}, D_i R_i {\\mathbf V})\n = \\sum_{i = 1}^N\\left({\\mathbf U}_i, D_i {\\mathbf V}_i\\right)\\,.\\]\nLocal scalar products are performed concurrently.\nThus, the implementation is parallel except for the sum which corresponds to a MPI_Reduce call across the \\(N\\) MPI processes.\nNote also that the implementation relies on the knowledge of a partition of unity so that the FreeFEM syntax is dscalprod(Di,u,v) or equivalently myFEprefix#scalprod(u,v) where myFEprefix is a user defined prefix for the finite element space decomposition, see the ffddm documentation.\n\n\nUpdate¶\nFrom a collection of local vectors \\(({\\mathbf U}_i)_{1\\le i \\le N}\\), it is possible ensure consistency of the duplicated data by modifying the distributed vector \\(({\\mathbf U}_i)_{1\\le i \\le N}\\) by calling the function myFEprefix#update(Ui, TRUE) where myFEprefix is the user defined prefix that refers to the finite element space decomposition.\nThis function performs the following operation for all \\(1\\le i \\le N\\):\n\n\\[{\\mathbf U}_i \\leftarrow R_i\\, \\sum_{j = 1}^N R_j^T D_j {\\mathbf U}_j\\]\n\nNote\nThe implementation corresponds to\n\n\\[{\\mathbf U}_i \\leftarrow R_i \\sum_{j = 1}^N R_j^T D_j {\\mathbf U}_j  =  D_i {\\mathbf U}_i + \\sum_{j\\in \\mathcal{O}(i)} R_i\\,R_j^T\\,D_j {\\mathbf U}_j\\]\nwhere \\(\\mathcal{O}(i)\\) is the set of neighbors of subdomain \\(i\\).\nTherefore, the matrix vector product is computed in three steps:\n\nconcurrent computing of \\(D_j {\\mathbf U}_j\\) for all \\(1\\le j\\le N\\);\nneighbor to neighbor MPI-communications from subdomain \\(j\\) to subdomain \\(i\\)  (\\(R_i\\,R_j^T\\)) ;\nconcurrent sum of neighbor contributions.\n\n\n\n\n\nDistributed Matrix and Vector resulting from a variational formulation¶\nThe discretization of a variational formulation on the global mesh \\(Th\\) yields a global matrix \\(A\\) and a global right hand side \\(\\mathbf{RHS}\\).\nThanks to the sparsity of finite element matrices for partial differential equations and thanks to the overlap between subdomains, the knowledge of the local matrix \\(R_i A R_i^T\\) on each subdomain \\(1\\le i\\le N\\) is sufficient to perform the matrix-vector product \\(A\\times \\mathbf{U}\\) for any global vector \\(\\mathbf{U}\\).\nOnce the problem has been set up by a call to ffddmsetupOperator(myprefix, myFEprefix, myVarf), the matrix-vector product is performed by calling the function myprefix#A(Ui) where myprefix is a user defined prefix that refers to the problem at hand which itself implicitly refers to the triplet (domain decomposition, finite element, variational formulation).\nSee more on problem definition in this documentation and more on distributed linear algebra in chapter 8 of “An Introduction to Domain Decomposition Methods: algorithms, theory and parallel implementation” SIAM 2015.\n\n\nDistributed Linear Solvers¶\nIn many cases, we are interested in the solution of the problem in terms of the vector of d.o.f.’s \\(\\mathbf{X}\\) that satisfies:\n\n\\[A\\, \\mathbf{X}  =  \\mathbf{RHS}\\,.\\]\nffddm offers two parallel solvers: direct factorization and iterative preconditioned solvers via Schwarz domain decomposition methods.\n\nDistributed Direct Solvers¶\nIn order to benefit from the sparsity of the matrix arising from a finite element discretization of a partial differential equation, a variant of Gauss elimination, the frontal method, that automatically avoids a large number of operations involving zero terms was developed.\nA frontal solver builds a \\(LU\\) or Cholesky decomposition of a sparse matrix given as the assembly of element matrices by eliminating equations only on a subset of elements at a time.\nThis subset is called the front and it is essentially the transition region between the part of the system already finished and the part not touched yet.\nThese methods are basically sequential since the unknowns are processed the one after another or one front after another.\nIn order to benefit from multicore processors, a multifrontal solver is an improvement of the frontal solver that uses several independent fronts at the same time.\nThe fronts can be worked on by different processors, which enables parallel computing. ffddm provides an interface to the parallel sparse direct solver MUMPS. These methods have the advantage to be very robust and to have a predictable cost. The main drawback is the memory requirement which can be prohibitive especially for three-dimensional problems.\n\n\nSchwarz methods¶\nThese methods are part of the large family of preconditioned iterative solvers. When considering the solve of the equation \\(A\\, \\mathbf{X}  =  \\mathbf{RHS}\\), a preconditioner is a linear operator that approximates the inverse of \\(A\\) and whose cost of the associated matrix-vector product is much cheaper than solving the original linear system. It enables to accelerate the solution of the latter with Krylov type methods such as the conjugate gradient (in the symmetric positive definite case), GMRES or BiCGSTAB in the general case. Two options are possible.\nLeft preconditioning: the preconditioner is applied to the left of the equation\n\n\\[M^{-1}  A\\, \\mathbf{X}  =   M^{-1} \\mathbf{RHS}\\,.\\]\nand the Krylov method is applied to the left preconditioned system with a residual that is preconditioner dependent.\nRight preconditioning: the preconditioner is inserted on the right of the operator:\n\n\\[A\\, M^{-1}  \\mathbf{Y}  =   \\mathbf{RHS}\\, \\text{ where } \\mathbf{X}  =   M^{-1}  \\mathbf{Y}.\\]\nand the Krylov method is applied to the right preconditioned system with a residual that is preconditioner independent.\nIn both cases, if the preconditioner is efficient the number of iterations to get a converged solution is much smaller than the number of iterations of the Krylov method applied to the original equation \\(A\\, \\mathbf{X}  =  \\mathbf{RHS}\\).  Although right preconditioning seems more intricate, it is much safer to use since the convergence is checked on a residual that does not depend on the preconditioner.\nIn the sequel, we consider the solution of the equation \\(A\\, \\mathbf{X}  =  \\mathbf{RHS}\\) preconditioned by domain decomposition methods and with a flexible GMRES Krylov method which is thus necessarily right preconditioned.\n\nRestricted Additive Schwarz (RAS)¶\nThe RAS preconditioner reads:\n\n\\[M^{-1}_{RAS} : =  \\sum_{j = 1}^N R_j^T D_j (R_j\\, A\\,R_j^T)^{-1} R_j\\,,\\]\nwhere for each subdomain \\(j\\) the restriction matrix \\(R_j\\) and  the partition of unity matrix \\(D_j\\) to a global right hand side \\(\\mathbf{RHS}\\) is detailed below. Recall that this global vector is distributed among processes via the local vectors \\((\\mathbf{RHS}_i)_{i = 1}^N\\). Let \\(A_{j}\\) denote the local matrix \\((R_j\\, A\\,R_j^T)\\). The local vector in subdomain \\(i\\) resulting from the matrix vector product \\(M^{-1}_{RAS}\\, \\mathbf{RHS}\\) consists in computing:\n\n\\[R_i\\, \\sum_{j = 1}^N R_j^T\\,D_j\\, A_{j}^{-1}\\,\\, \\mathbf{ RHS}_j\n =  D_i\\, A_{i}^{-1}\\, \\mathbf{ RHS}_i + \\sum_{j\\in \\mathcal{O}(i)} (R_i\\,R_j^T)\\,D_j\\, A_{j}^{-1}\\, \\mathbf{ RHS}_j\\,.\\]\nThis task is performed by first solving concurrently on all subdomains a linear system for \\({\\mathbf Y}_j\\) for all \\(1\\le j \\le N\\):\n\n\\[A_{j}\\, {\\mathbf Y}_j  =  \\mathbf{RHS}_j\\,.\\]\nEach local vector \\({\\mathbf Y}_j\\) is weighted by the partition of unity matrix \\(D_j\\).\nThen data transfers between neighboring subdomains implement the \\(R_i\\,R_j^T\\,D_j\\,{\\mathbf Y}_j\\) formula.\nThe contribution from neighboring subdomains are summed locally. This\npattern is very similar to that of the update procedure.\n\n\nOptimized Restricted Additive Schwarz (ORAS)¶\nThe ORAS preconditioner may be seen as a variant of the RAS preconditioner.\nIt reads:\n\n\\[M^{-1}_{RAS} : =  \\sum_{j = 1}^N R_j^T D_j\\, B_j^{-1}\\, R_j\\,\\]\nwhere \\(B_j\\) are local matrices of size \\(\\#{\\mathcal N}_j \\times \\#{\\mathcal N}_j\\) for \\(1\\le j \\le N\\).\nThis variant is very useful when dealing with wave propagation phenomena such as Helmholtz problems in acoustics or Maxwell system in the frequency domain for electromagnetism.\nDefining \\(B_j\\) as the discretization of the physical equation with impedance conditions on the boundary of the subdomain has been proved to be a good choice.\n\n\nTwo level methods¶\nThe RAS and ORAS methods are called a one-level method in the sense that sub-domains only interact with their direct neighbors. For some problems such as Darcy problems or static elasticity problems and when the number of subdomains is large, such one-level methods may suffer from a slow convergence.\nThe fix is to add to the preconditioner an auxiliary coarse problem that couples all subdomains at each iteration and is inexpensive to calculate.\nIn mathematical terms, we first choose  a full rank rectangular matrix  \\(Z\\in\\R^{\\#{\\mathcal N}\\times NC}\\) where \\(NC \\ll \\#{\\mathcal N}\\) denotes the dimension of the coarse space spanned by the columns of \\(Z\\). We also pick a coarse matrix \\(A_C\\in \\R^{N_C\\times N_C}\\). A generic one-level method preconditioner \\(M_1^{-1}\\) is enriched by a solve on the coarse space. The simplest correction formula is additive:\n\n\\[M_2^{-1} : =  Z \\,A_C^{-1}\\,Z^T + M_1^{-1}\\]\nOther correction formulas are given in documentation.\nWe consider two ways to build \\(Z\\) and thus the coarse space and the coarse problem \\(A_C\\), see below Coarse Mesh and GenEO\n\nCoarse Mesh¶\nA first possibility is to discretize the problem on a coarse mesh, following the same principle as multi-grid methods.\nFor 3-D problems, a coarsening of the mesh size by a factor 2, reduces by a factor \\(2^3 = 8\\) the size of the coarse problem which is then easier to solve by a direct method. Then, \\(Z\\) is the interpolation matrix from the coarse finite element space to the fine one.\n\n\nGenEO¶\nFor highly heterogeneous or anisotropic problems, two level methods based on coarse meshes might fail and a more sophisticated construction must be used.\nA provable robust coarse space called GenEO is built by first solving the following local generalized eigenvalue problem in parallel for each subdomain \\(1\\le i\\le N\\), where \\(A_i^{\\text{Neu}}\\) denotes the local matrix resulting from the variational formulation:\n\n\\[D_i A_i D_i\\, V_{i,k}  =  \\lambda_{i,k}\\, A_i^{\\text{Neu}} \\,V_{i,k}\\]\nThe eigenvectors selected to enter the coarse space correspond to eigenvalues \\(\\lambda_{i,k} \\ge \\tau\\), where the threshold parameter \\(\\tau\\) is user-defined.\nThe precise formulas are given in this documentation.\nFrom a mathematical point of view, it has been proved that for a symmetric positive definite matrix \\(A\\), the spectrum of the preconditioned by the two-level method with a GenEO coarse space lies in the interval \\([\\displaystyle \\frac{1}{1+k_1\\,\\tau} , k_0 ]\\).\nNote A heuristic that justifies this construction is as follows.\nWe first introduce the Additive Schwarz method (ASM) which can be seen as a symmetrized variant of the RAS preconditioner:\n\n\\[M_{ASM}^{-1} : =  \\sum_{j = 1}^N R_j^T A_j^{-1} R_j\\,.\\]\nIt can be proved that the lower bound for the eigenvalue of \\(M_{ASM}^{-1}\\,A\\) is close to zero (which is bad for convergence) whereas the upper bound depends only on the number of neigbors of a subdomain (which is good for convergence).\nSecond, we also introduce the following preconditioner \\(M^{-1}_{NN}\\):\n\n\\[M^{-1}_{NN} : =  \\sum_{1\\le j\\le N} D_i\\,(A_j^{\\text{Neu}})^{-1} D_j\\,.\\]\nWe have a very good lower bound for the preconditioned operator \\(M^{-1}_{NN}\\,A\\) that does not depend on the number of subdomains but only on the maximum multiplicity of intersections \\(k_1\\) (which is good for convergence).\nBut the upper bound for this preconditioner is very large (which is bad for convergence).\nNow, if we compare formulas for \\(M^{-1}_{NN}\\) and \\(M^{-1}_{ASM}\\), we may suspect that vectors \\(\\mathbf{V}_{ik}\\) for which \\(D_i\\, (A_i^{\\text{Neu}})^{-1}\\,D_i\\,\\mathbf{V}_{ik}\\) and \\(A_{i}^{-1}\\,\\mathbf{V}_{ik}\\) have very different values are responsible for the slow convergence and should contribute to the coarse space.\nThis is a way to interpret the above generalized eigenvalue problem which controls the lower bound of the two-level preconditioned system.\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: ffddm\n\t\t\tNext topic: ffddm documentation \n\t\t\n\t","l":"documentation/ffddm/introduction-to-the-domain-decomposition-method.html"},"9":{"t":"Parameters","p":"\n\t\t\n   \nParameters¶\n\nCommand-line arguments¶\n\n-ffddm_verbosity N, the level of verbosity of ffddm, see ffddmverbosity (default 3).\n-seqddm N use ffddm in sequential mode, with N the number of subdomains.\n-noGlob if present, do not define any global quantity (such as saving the global mesh for plotting or building the global restriction matrices).\nCannot be used in sequential mode or with plotting.\n-ffddm_partitioner N specifies how to partition the initial domain, see ffddmpartitioner (default 1, metis).\n-ffddm_overlap N specifies the width of the overlap region between subdomains, see ffddmoverlap (default 1).\n-ffddm_master_p N, number of master processes for the coarse problem (for two level preconditioners), see ffddmpCS (default 1).\n-ffddm_master_exclude 0|1 exclude master processes from the domain decomposition, see ffddmexclude (default 0).\n-ffddm_split N, level of refinement of the local submeshes with respect to the initial global mesh, see ffddmsplit (default 1).\n-ffddm_schwarz_method S, specifies the type of one level preconditioner \\(M^{-1}_1\\): “asm” (Additive Schwarz), “ras” (Restricted Additive Schwarz), “oras” (Optimized Restricted Additive Schwarz), “soras” (Symmetric Optimized Restricted Additive Schwarz) or “none” (no preconditioner), see ffddmprecond (default “ras”).\n-ffddm_geneo_nu N, number of local eigenvectors to compute in each subdomain when solving the local generalized eigenvalue problem for the GenEO method, see ffddmnu (default 20).\n-ffddm_geneo_threshold R, threshold parameter for selecting local eigenvectors when solving the local generalized eigenvalue problems for the GenEO method, see ffddmtau (default 0.5).\nIf the command-line parameter -ffddm_geneo_nu N is used, then ffddmtau is initialized to 0.\n-ffddm_schwarz_coarse_correction S, specifies the coarse correction formula to use for the two level preconditioner: “AD” (Additive), “BNN” (Balancing Neumann-Neumann), “ADEF1” (Adapted Deflation Variant 1), “ADEF2” (Adapted Deflation Variant 2), “RBNN1” (Reduced Balancing Variant 1), “RBNN2” (Reduced Balancing Variant 2) or “none” (no coarse correction), see ffddmcorrection (default “ADEF1”).\n-ffddm_inexactCS_tol R, specifies the GMRES tolerance for the inner solution of the coarse problem when using a two level method with approximate coarse solves, see ffddminexactCStol (default 0.1).\n\n\n\nGlobal parameters¶\n\nffddmverbosity initialized by command-line argument -ffddm_verbosity N, specifies the level of verbosity of ffddm (default 3).\nffddmpartitioner initialized by command-line argument -ffddm_partitioner N, specifies how to partition the initial domain:\n\nN = 0: user-defined partition through the definition of a macro, see ffddmbuildDmesh\nN = 1: use the automatic graph partitioner metis (default)\nN = 2: use the automatic graph partitioner scotch\n\n\nffddmoverlap initialized by command-line argument -ffddm_overlap N, specifies the number of layers of mesh elements in the overlap region between subdomains N > =  1 (default 1).\nRemark The actual width of the overlap region between subdomains is 2N, since each subdomain is extended by N layers of elements in a symmetric way.\nffddminterfacelabel the label of the new border of the subdomain meshes (the interface between the subdomains) (default 10).\nUsed for imposing problem-dependent boundary conditions at the interface between subdomains for the preconditioner, for example optimized Robin boundary conditions (see ORAS).\nffddmpCS initialized by command-line argument -ffddm_master_p N, number of mpi processes used for the assembly and resolution of the coarse problem for two level preconditioners (default 1).\nffddmexclude initialized by command-line argument -ffddm_master_exclude, 0 or 1 (default 0).\nIf true, mpi ranks participating in the assembly and resolution of the coarse problem for two level preconditioners will be excluded from the spatial domain decomposition and will only work on the coarse problem.\nffddmsplit initialized by command-line argument ffddm_split N, level of refinement of the local submeshes with respect to the initial global mesh (default 1).\nThis is useful for large problems, where we want to avoid working with a very large global mesh.\nThe idea is to start from a coarser global mesh, and generate finer local meshes in parallel during the mesh decomposition step in order to reach the desired level of refinement for the subdomains.\nFor example, calling ffddmbuildDmesh with ffddmsplit  =  3 will generate local submeshes where each mesh element of the initial mesh is split into \\(3^d\\) elements.\nffddmprecond initialized by command-line argument -ffddm_schwarz_method S, specifies the type of one level preconditioner \\(M^{-1}_1\\) to build when calling ffddmsetupPrecond: “asm” (Additive Schwarz), “ras” (Restricted Additive Schwarz), “oras” (Optimized Restricted Additive Schwarz), “soras” (Symmetric Optimized Restricted Additive Schwarz) or “none” (no preconditioner).\nDefault is “ras”.\nSee ffddmsetupPrecond for more details.\nffddmnu initialized by command-line argument -ffddm_geneo_nu N, number of local eigenvectors to compute in each subdomain when solving the local generalized eigenvalue problem for the GenEO method (default 20).\nSee ffddmgeneosetup for more details.\nffddmtau initialized by command-line argument -ffddm_geneo_threshold R, threshold parameter for selecting local eigenvectors when solving the local generalized eigenvalue problems for the GenEO method (default 0.5).\nIf the command-line parameter -ffddm_geneo_nu N is used, then ffddmtau is initialized to 0.\nSee ffddmgeneosetup for more details.\nffddmcorrection initialized by command-line argument -ffddm_schwarz_coarse_correction S, specifies the coarse correction formula to use for the two level preconditioner: “AD” (Additive), “BNN” (Balancing Neumann-Neumann), “ADEF1” (Adapted Deflation Variant 1), “ADEF2” (Adapted Deflation Variant 2), “RBNN1” (Reduced Balancing Variant 1), “RBNN2” (Reduced Balancing Variant 2) or “none” (no coarse correction).\nDefault is “ADEF1”.\nSee the section about Two level preconditioners for more details.\nffddminexactCStol initialized by command-line argument -ffddm_inexactCS_tol R, GMRES tolerance for the inner solution of the coarse problem when using a two level method with approximate coarse solves (default 0.1).\nSee the section about Approximate coarse solves for two level methods for more details.\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: ffddm documentation\n\t\t\tNext topic: Tutorial \n\t\t\n\t","l":"documentation/ffddm/parameters.html"},"10":{"t":"Tutorial","p":"\n\t\t\n   \nTutorial¶\nAuthors: Pierre-Henri Tournier - Frédéric Nataf - Pierre Jolivet\nWe recommend checking the slides version of this tutorial.\n\nWhat is ffddm ?¶\n\nffddm implements a class of parallel solvers in FreeFEM: overlapping Schwarz domain decomposition methods\n\nThe entire ffddm framework is written in the FreeFEM language ffddm aims at simplifying the use of parallel solvers in FreeFEMYou can find the ffddm scripts here (‘ffddm*.idp’ files) and examples here\n\n\n\n\nffddm provides a set of high-level macros and functions to\nhandle data distribution: distributed meshes and linear algebra\nbuild DD preconditioners for your variational problems\nsolve your problem using preconditioned Krylov methods\n\n\n\n\nffddm implements scalable two level Schwarz methods, with a coarse space correction built either from a coarse mesh or a GenEO coarse space Ongoing research: approximate coarse solves and three level methods\n\nffddm can also act as a wrapper for the HPDDM library.HPDDM is an efficient C++11 implementation of various domain decomposition methods and Krylov subspace algorithms with advanced block and recycling techniques More details on how to use HPDDM within ffddm here\n\n\n\n\n\n\nWhy Domain Decomposition Methods ?¶\nHow can we solve a large sparse linear system \\(A u  =  b \\in \\mathbb{R}^n\\) ?\n\n\nStep 1: Decompose the mesh¶\nSee documentation\nBuild a collection of \\(N\\) overlapping sub-meshes \\((Th_{i})_{i = 1}^N\\) from the global mesh \\(Th\\)\n\n\n\n\n\n\n\n\n\n\n\n1 ffddmbuildDmesh( prmesh , ThGlobal , comm )\n\n\n\nmesh distributed over the MPI processes of communicator comm\ninitial mesh ThGlobal partitioned with metis by default\nsize of the overlap given by ffddmoverlap (default 1)\n\nprmesh#Thi is the local mesh of the subdomain for each mpi process\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 \n 3 include \"ffddm.idp\"\n 4 \n 5 mesh ThGlobal  =  square(100,100);    // global mesh\n 6 \n 7 // Step 1: Decompose the mesh\n 8 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 9 \n10 medit(\"Th\"+mpirank, MThi);\n\n\nCopy and paste this to a file ‘test.edp’ and run it:\n1 ff-mpirun -np 2 test.edp -wg\n\n\n\n\nStep 2: Define your finite element¶\nSee documentation\n1 ffddmbuildDfespace( prfe , prmesh , scalar , def , init , Pk )\n\n\nbuilds the local finite element spaces and associated distributed operators on top of the mesh decomposition prmesh\n\nscalar: type of data for this finite element: real or complex\nPk: your type of finite element: P1, [P2,P2,P1], …\ndef, init: macros specifying how to define and initialize a Pk FE function\n\nprfe#Vhi is the local FE space defined on prmesh#Thi for each mpi process\nExample for P2 complex:\n1 macro def(u)  u // EOM\n2 macro init(u) u // EOM\n3 ffddmbuildDfespace( FE, M, complex,\n4                     def, init, P2 )\n\n\nExample for [P2,P2,P1] real:\n1 macro def(u)  [u, u#B, u#C] // EOM\n2 macro init(u) [u, u, u]     // EOM\n3 ffddmbuildDfespace( FE, M, real, def,\n4                     init, [P2,P2,P1] )\n\n\n\nDistributed vectors and restriction operators¶\n\nNatural decomposition of the set of d.o.f.’s \\({\\mathcal N}\\) of \\(Vh\\) into the \\(N\\) subsets of d.o.f.’s \\(({\\mathcal N}_i)_{i = 1}^N\\) each associated with the local FE space \\(Vh_i\\)\n\n\\[{\\mathcal N}  =  \\cup_{i = 1}^N {\\mathcal N}_i\\,,\\]\nbut with duplications of the d.o.f.’s in the overlap\n_Definition_ a distributed vector is a collection of local vectors \\(({\\mathbf V_i})_{1\\le i\\le N}\\) so that the values on the duplicated d.o.f.’s are the same:\n\n\\[{\\mathbf V}_i  =  R_i\\,{\\mathbf V}, \\quad i  =  1, ..., N\\]\nwhere \\({\\mathbf V}\\) is the corresponding global vector\nand \\(R_i\\) is the restriction operator from \\({\\mathcal N}\\) into \\({\\mathcal N}_i\\)\nRemark \\(R_i^T\\) is the extension operator: extension by \\(0\\) from \\({\\mathcal N}_i\\) into \\({\\mathcal N}\\)\n\n\nPartition of unity¶\n\nDuplicated unknowns coupled via a partition of unity:\n\n\\[I  =  \\sum_{i  =  1}^N R_i^T D_i R_i\\]\n\\((D_i)_{1\\le i \\le N}\\) are square diagonal matrices of size \\(\\#{\\mathcal N}_i\\)\n\n\\[{\\mathbf V}  =  \\sum_{i  =  1}^N R_i^T D_i R_i {\\mathbf V}  =  \\sum_{i  =  1}^N R_i^T D_i {\\mathbf V_i}\\]\n\n\nData exchange between neighbors¶\n1 func prfe#update(K[int] vi, bool scale)\n\n\nsynchronizes local vectors \\({\\mathbf V}_i\\) between subdomains \\(\\Rightarrow\\) exchange the values of \\(mathbf{V}_i\\) shared with neighbors in the overlap region\n\n\\[{\\mathbf V}_i \\leftarrow R_i \\left( \\sum_{j = 1}^N R_j^T D_j {\\mathbf V}_j \\right)  =  D_i {\\mathbf V}_i + \\sum_{j\\in \\mathcal{O}(i)} R_i\\,R_j^T\\,D_j {\\mathbf V}_j\\]\nwhere \\(\\mathcal{O}(i)\\) is the set of neighbors of subdomain $i$. Exchange operators \\(R_i\\,R_j^T\\) correspond to neighbor-to-neighbor MPI communications\n1 FEupdate(vi, false);\n\n\n\n\\[{\\mathbf V}_i \\leftarrow R_i \\left( \\sum_{j = 1}^N R_j^T {\\mathbf V}_j \\right)\\]\n1 FEupdate(vi, true);\n\n\n\n\\[{\\mathbf V}_i \\leftarrow R_i \\left( \\sum_{j = 1}^N R_j^T D_j {\\mathbf V}_j  \\right)\\]\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 \n 3 include \"ffddm.idp\"\n 4 \n 5 mesh ThGlobal  =  square(100,100);    // global mesh\n 6 \n 7 // Step 1: Decompose the mesh\n 8 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 9 \n10 // Step 2: Define your finite element\n11 macro def(u)  u // EOM\n12 macro init(u) u // EOM\n13 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n14 \n15 FEVhi vi  =  x;\n16 medit(\"v\"+mpirank, MThi, vi);\n17 \n18 vi[]  =  FEDk[mpirank];\n19 medit(\"D\"+mpirank, MThi, vi);\n20 \n21 vi  =  1;\n22 FEupdate(vi[],true);\n23 ffddmplot(FE,vi,\"1\")\n24 \n25 FEupdate(vi[],false);\n26 ffddmplot(FE,vi,\"multiplicity\")\n\n\n\n\n\nStep 3: Define your problem¶\nSee documentation\n1 ffddmsetupOperator( pr , prfe , Varf )\n\n\nbuilds the distributed operator associated to your variational form on top of the distributed FE prfe\nVarf is a macro defining your abstract variational form\n1 macro Varf(varfName, meshName, VhName)\n2     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v))\n3                        + int2d(meshName)(f*v) + on(1, u  =  0);  // EOM\n\n\n\\(\\Rightarrow\\) assemble local ‘Dirichlet’ matrices \\(A_i  =  R_i A R_i^T\\)\n\n\\[A  =  \\sum_{i = 1}^N R_i^T D_i A_i R_i\\]\n\nWarning\nonly true because \\(D_i R_i A  =  D_i A_i R_i\\) due to the fact that \\(D_i\\) vanishes at the interface !!\n\npr#A applies \\(A\\) to a distributed vector: \\({\\mathbf U}_i \\leftarrow R_i \\sum_{j = 1}^N R_j^T D_j A_j {\\mathbf V}_j\\)\n\\(\\Rightarrow\\) multiply by \\(A_i\\) + prfe#update\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 \n 3 include \"ffddm.idp\"\n 4 \n 5 mesh ThGlobal  =  square(100,100);    // global mesh\n 6 \n 7 // Step 1: Decompose the mesh\n 8 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 9 \n10 // Step 2: Define your finite element\n11 macro def(u)  u // EOM\n12 macro init(u) u // EOM\n13 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n14 \n15 // Step 3: Define your problem\n16 macro grad(u) [dx(u), dy(u)] // EOM\n17 macro Varf(varfName, meshName, VhName)\n18     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v))\n19                        + int2d(meshName)(1*v) + on(1, u  =  0);  // EOM\n20 ffddmsetupOperator( PB , FE , Varf )\n21 \n22 FEVhi ui, bi;\n23 ffddmbuildrhs( PB , Varf , bi[] )\n24 \n25 ui[]  =  PBA(bi[]);\n26 ffddmplot(FE, ui, \"A*b\")\n\n\n\n\n\nSummary so far: translating your sequential FreeFEM script¶\n\nStep 1: Decompose the mesh¶\nSee documentation\n1 mesh Th  =  square(100,100);\n\n\n1 mesh Th  =  square(100,100);\n2 ffddmbuildDmesh(M, Th, mpiCommWorld)\n\n\nStep 2: Define your finite element\nSee documentation\n1 fespace Vh(Th, P1);\n\n\n1 macro def(u)  u // EOM\n2 macro init(u) u // EOM\n3 ffddmbuildDfespace(FE, M, real, def, init, P1)\n\n\nStep 3: Define your problem\nSee documentation\n1 varf Pb(u, v)  =  ...\n2 matrix A  =  Pb(Vh, Vh);\n\n\n1 macro Varf(varfName, meshName, VhName)\n2     varf varfName(u,v)  =  ... // EOM\n3 ffddmsetupOperator(PB, FE, Varf)\n\n\n\n\nSolve the linear system¶\nSee documentation\n1 u[]  =  A^-1 * b[];\n\n\n1 ui[]  =  PBdirectsolve(bi[]);\n\n\n\n\nSolve the linear system with the parallel direct solver MUMPS¶\nSee documentation\n1 func K[int] pr#directsolve(K[int]& bi)\n\n\nWe have \\(A\\) and \\(b\\) in distributed form, we can solve the linear system \\(A u  =  b\\) using the parallel direct solver MUMPS\n1 // Solve the problem using the direct parallel solver MUMPS\n2 ui[]  =  PBdirectsolve(bi[]);\n3 ffddmplot(FE, ui, \"u\")\n\n\n\n\nStep 4: Define the one level DD preconditioner¶\nSee documentation\n1 ffddmsetupPrecond( pr , VarfPrec )\n\n\nbuilds the one level preconditioner for problem pr.\nBy default it is the Restricted Additive Schwarz (RAS) preconditioner:\n\n\\[M^{-1}_1  =  M^{-1}_{\\text{RAS}}  =  \\sum_{i = 1}^N R_i^T D_i A_i^{-1} R_i \\quad \\text{with}\\; A_i  =  R_i A R_i^T\\]\n_Setup step_: compute the \\(LU\\) (or \\(L D L^T\\)) factorization of local matrices \\(A_i\\)\npr#PREC1 applies \\(M^{-1}_1\\) to a distributed vector: \\({\\mathbf U}_i \\leftarrow R_i \\sum_{j = 1}^N R_j^T D_j A_j^{-1} {\\mathbf V}_i\\)\n\\(\\Rightarrow\\) apply \\(A_i^{-1}\\) (forward/backward substitutions) + prfe#update\n\n\nStep 5: Solve the linear system with preconditioned GMRES¶\nSee documentation\n1 func K[int] pr#fGMRES(K[int]& x0i, K[int]& bi, real eps, int itmax, string sp)\n\n\nsolves the linear system with flexible GMRES with DD preconditioner \\(M^{-1}\\)\n\nx0i: initial guess\nbi: right-hand side\neps: relative tolerance\nitmax: maximum number of iterations\nsp: “left” or “right” preconditioning\n\nleft preconditioning\nsolve \\(M^{-1} A x  =  M^{-1} b\\)\nright preconditioning\nsolve \\(A M^{-1} y  =  b\\)\n\\(\\Rightarrow x  =  M^{-1} y\\)\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 include \"ffddm.idp\"\n 3 \n 4 mesh ThGlobal  =  square(100,100);    // global mesh\n 5 // Step 1: Decompose the mesh\n 6 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 7 // Step 2: Define your finite element\n 8 macro def(u)  u // EOM\n 9 macro init(u) u // EOM\n10 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n11 // Step 3: Define your problem\n12 macro grad(u) [dx(u), dy(u)] // EOM\n13 macro Varf(varfName, meshName, VhName)\n14     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v))\n15                        + int2d(meshName)(1*v) + on(1, u  =  0);  // EOM\n16 ffddmsetupOperator( PB , FE , Varf )\n17 \n18 FEVhi ui, bi;\n19 ffddmbuildrhs( PB , Varf , bi[] )\n20 \n21 // Step 4: Define the one level DD preconditioner\n22 ffddmsetupPrecond( PB , Varf )\n23 \n24 // Step 5: Solve the linear system with GMRES\n25 FEVhi x0i  =  0;\n26 ui[]  =  PBfGMRES(x0i[], bi[], 1.e-6, 200, \"right\");\n27 \n28 ffddmplot(FE, ui, \"u\")\n29 PBwritesummary\n\n\n\n\n\nDefine a two level DD preconditioner¶\nSee documentation\nGoal improve scalability of the one level method\n\\(\\Rightarrow\\) enrich the one level preconditioner with a coarse problem coupling all subdomains\nMain ingredient is a rectangular matrix \\(\\color{red}{Z}\\) of size \\(n \\times n_c,\\,\\) where \\(n_c \\ll n\\)\n\\(\\color{red}{Z}\\) is the coarse space matrix\nThe coarse space operator \\(E  =  \\color{red}{Z}^T A \\color{red}{Z}\\) is a square matrix of size \\(n_c \\times n_c\\)\nThe simplest way to enrich the one level preconditioner is through the additive coarse correction formula:\n\n\\[M^{-1}_2  =  M^{-1}_1 + \\color{red}{Z} E^{-1} \\color{red}{Z}^T\\]\nHow to choose \\(\\color{red}{Z}\\) ?\n\n\nBuild the GenEO coarse space¶\nSee documentation\n1 ffddmgeneosetup( pr , Varf )\n\n\nThe GenEO method builds a robust coarse space for highly heterogeneous or anisotropic SPD problems\n\\(\\Rightarrow\\) solve a local generalized eigenvalue problem in each subdomain\n\n\\[D_i A_i D_i\\, V_{i,k}  =  \\lambda_{i,k}\\, A_i^{\\text{Neu}} \\,V_{i,k}\\]\nwith \\(A_i^{\\text{Neu}}\\) the local Neumann matrices built from Varf (same Varf as Step 3)\nThe GenEO coarse space is \\(\\color{red}{Z}  =  (R_i^T D_i V_{i,k})^{i = 1,...,N}_{\\lambda_{i,k} \\ge \\color{blue}{\\tau}}\\)\nThe eigenvectors \\(V_{i,k}\\) selected to enter the coarse space correspond to eigenvalues \\(\\lambda_{i,k} \\ge \\color{blue}{\\tau}\\), where \\(\\color{blue}{\\tau}\\) is a threshold parameter\n\nTheorem\nthe spectrum of the preconditioned operator lies in the interval \\([\\displaystyle \\frac{1}{1+k_1 \\color{blue}{\\tau}} , k_0 ]\\)\nwhere \\(k_0 - 1\\) is the # of neighbors and \\(k_1\\) is the multiplicity of intersections\n\\(\\Rightarrow\\) \\(k_0\\) and \\(k_1\\) do not depend on \\(N\\) nor on the PDE\n\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 include \"ffddm.idp\"\n 3 \n 4 mesh ThGlobal  =  square(100,100);    // global mesh\n 5 // Step 1: Decompose the mesh\n 6 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 7 // Step 2: Define your finite element\n 8 macro def(u)  u // EOM\n 9 macro init(u) u // EOM\n10 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n11 // Step 3: Define your problem\n12 macro grad(u) [dx(u), dy(u)] // EOM\n13 macro Varf(varfName, meshName, VhName)\n14     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v))\n15                        + int2d(meshName)(1*v) + on(1, u  =  0);  // EOM\n16 ffddmsetupOperator( PB , FE , Varf )\n17 \n18 FEVhi ui, bi;\n19 ffddmbuildrhs( PB , Varf , bi[] )\n20 \n21 // Step 4: Define the one level DD preconditioner\n22 ffddmsetupPrecond( PB , Varf )\n23 \n24 // Build the GenEO coarse space\n25 ffddmgeneosetup( PB , Varf )\n26 \n27 // Step 5: Solve the linear system with GMRES\n28 FEVhi x0i  =  0;\n29 ui[]  =  PBfGMRES(x0i[], bi[], 1.e-6, 200, \"right\");\n\n\n\n\nBuild the coarse space from a coarse mesh¶\nSee documentation\n1 ffddmcoarsemeshsetup( pr , Thc , VarfEprec , VarfAprec )\n\n\nFor non SPD problems, an alternative is to build the coarse space by discretizing the PDE on a coarser mesh Thc\n\\(Z\\) will be the interpolation matrix from the coarse FE space \\({Vh}_c\\) to the original FE space \\(Vh\\)\n\\(\\Rightarrow E = \\color{red}{Z}^{T} A \\color{red}{Z}\\) is the matrix of the problem discretized on the coarse mesh\nThe variational problem to be discretized on Thc is given by macro VarfEprec\nVarfEprec can differ from the original Varf of the problem\nExample: added absorption for wave propagation problems\nSimilarly, VarfAprec specifies the global operator involved in multiplicative coarse correction formulas. It defaults to \\(A\\) if VarfAprec is not defined\n 1 macro dimension 2// EOM            // 2D or 3D\n 2 include \"ffddm.idp\"\n 3 \n 4 mesh ThGlobal  =  square(100,100);    // global mesh\n 5 // Step 1: Decompose the mesh\n 6 ffddmbuildDmesh( M , ThGlobal , mpiCommWorld )\n 7 // Step 2: Define your finite element\n 8 macro def(u)  u // EOM\n 9 macro init(u) u // EOM\n10 ffddmbuildDfespace( FE , M , real , def , init , P2 )\n11 // Step 3: Define your problem\n12 macro grad(u) [dx(u), dy(u)] // EOM\n13 macro Varf(varfName, meshName, VhName)\n14     varf varfName(u,v)  =  int2d(meshName)(grad(u)'* grad(v))\n15                        + int2d(meshName)(1*v) + on(1, u  =  0);  // EOM\n16 ffddmsetupOperator( PB , FE , Varf )\n17 \n18 FEVhi ui, bi;\n19 ffddmbuildrhs( PB , Varf , bi[] )\n20 \n21 // Step 4: Define the one level DD preconditioner\n22 ffddmsetupPrecond( PB , Varf )\n23 \n24 // Build the coarse space from a coarse mesh\n25 mesh Thc  =  square(10,10);\n26 ffddmcoarsemeshsetup( PB , Thc , Varf , null )\n27 \n28 // Step 5: Solve the linear system with GMRES\n29 FEVhi x0i  =  0;\n30 ui[]  =  PBfGMRES(x0i[], bi[], 1.e-6, 200, \"right\");\n\n\n\n\nUse HPDDM within ffddm¶\nSee documentation\nffddm allows you to use HPDDM to solve your problem, effectively replacing the ffddm implementation of all parallel linear algebra computations\n\\(\\Rightarrow\\) define your problem with ffddm, solve it with HPDDM\n\\(\\Rightarrow\\) ffddm acts as a finite element interface for HPDDM\nYou can use HPDDM features unavailable in ffddm such as advanced Krylov subspace methods implementing block and recycling techniques\nTo switch to HPDDM, simply define the macro pr#withhpddm before using ffddmsetupOperator (Step 3). You can then pass HPDDM options\nwith command-line arguments or directly to the underlying HPDDM operator. Options need to be prefixed by the operator prefix:\n1 macro PBwithhpddm()1 // EOM\n2 ffddmsetupOperator( PB , FE , Varf )\n3 set(PBhpddmOP,sparams = \"-hpddm_PB_krylov_method gcrodr -hpddm_PB_recycle 10\");\n\n\nOr, define pr#withhpddmkrylov to use HPDDM only for the Krylov method\nExample here: Helmholtz problem with multiple rhs solved with Block GMRES\n\n\nSome results: Heterogeneous 3D elasticity with GenEO¶\nHeterogeneous 3D linear elasticity equation discretized with P2 FE solved on 4096 MPI processes \\(n\\approx\\) 262 million\n\n\n\nSome results: 2-level DD for Maxwell equations, scattering from the COBRA cavity¶\nf  =  10 GHz\n\n\n\n\n\n\n\n\n\n\n\nf  =  16 GHz\n\n\n\nSome results: 2-level DD for Maxwell equations, scattering from the COBRA cavity¶\n\norder 2 Nedelec edge FE\nfine mesh: 10 points per wavelength\ncoarse mesh: 3.33 points per wavelength\ntwo level ORAS preconditioner with added absorption\nf  =  10 GHz: \\(n\\approx\\) 107 million, \\(n_c \\approx\\) 4 million\n\nf  =  16 GHz: \\(n\\approx\\) 198 million, \\(n_c \\approx\\) 7.4 million\n\n\n\n\\(\\rightarrow\\) coarse problem too large for a direct solver\n\\(\\Rightarrow\\) inexact coarse solve: GMRES + one level ORAS preconditioner\n\nspeedup of 1.81 from 1536 to 3072 cores at 10GHz\n1.51 from 3072 to 6144 cores at 16GHz\nYou can find the script here\n\n\n\n\n\t\t\n\t\t\t Previous topic: Parameters\n\t\t\tNext topic: Examples \n\t\t\n\t","l":"documentation/ffddm/tutorial.html"},"11":{"t":"Finite element","p":"\n\t\t\n   \nFinite element¶\nAs stated in tutorials, FEM approximates all functions \\(w\\) as:\n\n\\[w(x,y)\\simeq w_0\\phi_0(x,y)+w_1\\phi_1(x,y)+\\cdots+w_{M-1}\\phi_{M-1}(x,y)\\]\nwith finite element basis functions \\(\\phi_k(x,y)\\) and numbers \\(w_k\\) (\\(k = 0,\\cdots,M-1\\)).\nThe functions \\(\\phi_k(x,y)\\) are constructed from the triangle \\(T_{i_k}\\), and called shape functions.\nIn FreeFEM, the finite element space:\n\n\\[V_h = \\left\\{w\\left|\\; w_0\\phi_0+w_1\\phi_1+\\cdots+w_{M-1}\\phi_{M-1},\\, w_i\\in \\R\\right.\\right\\}\\]\nis easily created by\n\n\nin 2d\n\n1 fespace IDspace(IDmesh,<IDFE>);\n\n\nor with \\(\\ell\\) pairs of periodic boundary conditions in 2D:\n1 fespace IDspace(IDmesh,<IDFE>,\n2     periodic = [[la1, sa1], [lb1, sb1],\n3               ...\n4               [lak, sak], [lbk, sbl]]);\n\n\n\nin 3D:\n\n1 fespace IDspace(IDmesh3,<IDFE>,\n2     periodic = [[la1, sa1, ta1], [lb1, sb1, tb1],\n3               ...\n4               [lak, sak, tak], [lbk, sbl, tbl]]);\n\n\n\nin surface 3D:\n\n1 fespace IDspace(IDmeshS,<IDFE>,\n2     periodic = [[la1, sa1, ta1], [lb1, sb1, tb1],\n3               ...\n4               [lak, sak, tak], [lbk, sbl, tbl]]);\n\n\n\nwhere IDspace is the name of the space (e.g. Vh), IDmesh IDmesh3 IDmeshS `is respectly the name of the associated :freefem:`mesh, mesh3, meshS and <IDFE> is an identifier of finite element type.\nIn 2D we have a pair of periodic boundary conditions, if \\([la_i, sa_i]\\), \\([lb_i, sb_i]\\) is a pair of int, and the 2 labels \\(la_i\\) and \\(lb_i\\) refer to 2 pieces of boundary to be in equivalence.\nIf \\([la_i, sa_i]\\), \\([lb_i, sb_i]\\) is a pair of real, then \\(sa_i\\) and \\(sb_i\\) give two common abscissa on the two boundary curves, and two points are identified as one if the two abscissa are equal.\nIn 2D, we have a pair of periodic boundary conditions, if \\([la_i, sa_i, ta_i]\\), \\([lb_i, sb_i, tb_i]\\) is a pair of int, the 2 labels \\(la_i\\) and \\(lb_i\\) define the 2 pieces of boundary to be in equivalence.\nIf \\([la_i, sa_i, ta_i]\\), \\([lb_i, sb_i, tb_i]\\) is a pair of real, then \\(sa_i\\), \\(ta_i\\) and \\(sb_i\\), \\(tb_i\\) give two common parameters on the two boundary surfaces, and two points are identified as one if the two parameters are equal.\n\nNote\nThe 2D mesh of the two identified borders must be the same, so to be sure, use the parameter fixedborder = true in buildmesh command (see fixedborder).\n\n\nList of the types of finite elements¶\nAs of today, the known types of finite elements are:\n\n[P0] piecewise constant discontinuous finite element (2d, 3d, surface 3d), the degrees of freedom are the barycenter element value.\n\n\n(9)¶\\[\\P^0_{h}  =  \\left\\{ v \\in L^2(\\Omega) \\left|\\; \\textrm{for all }K \\in \\mathcal{T}_{h}\\;\\;\\textrm{there is }\\alpha_{K}\\in \\R : \\;\\; v_{|K}  =  \\alpha_{K } \\right.\\right\\}\\]\n\n\n[P1] piecewise linear continuous finite element (2d, 3d, surface 3d), the degrees of freedom are the vertices values.\n\n\n(10)¶\\[\\P^1_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h},\\ v_{|K} \\in P_{1} \\right.\\right\\}\\]\n\n\n[P1dc] piecewise linear discontinuous finite element (2d, 3d with load”Element_P1dc1”)\n\n\n(11)¶\\[\\P^1_{dc|h}  =  \\left\\{ v \\in L^{2}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{1} \\right.\\right\\}\\]\n\n\nWarning\nDue to an interpolation problem, the degree of freedom is not the vertices but three vertices which move inside \\(T(X) =  G + .99 (X-G)\\) where \\(G\\) is the barycenter.\n\n\n[P1b] piecewise linear continuous finite element plus bubble (2d, 3d)\nThe 2D Case:\n\n\n(12)¶\\[\\P^1_{b|h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{1} \\oplus \\mathrm{Span}\\{ \\lambda^{K}_{0} \\lambda^{K}_{1} \\lambda^{K}_{2} \\} \\right.\\right\\}\\]\n\nThe 3D Case:\n\n\n(13)¶\\[\\P^1_{b|h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{1} \\oplus \\mathrm{Span}\\{ \\lambda^{K}_{0} \\lambda^{K}_{1} \\lambda^{K}_{2} \\lambda^{K}_{3} \\} \\right.\\right\\}\\]\nwhere \\(\\lambda^{K}_{i}, i = 0,..,d\\) are the \\(d+1\\) barycentric coordinate functions of the element \\(K\\) (triangle or tetrahedron).\n\n\nP1bl,P1bl3d piecewise linear continuous finite element plus linear bubble (with load”Element_P1bl” 2d, 3d).\nThe bubble is built by splitting the \\(K\\), a barycenter in \\(d+1\\) sub element. (need load \"Element_P1bl\")\n\n[P2, P2] piecewise \\(P_{2}\\) continuous finite element (2d, 3d, surface 3d)\n\n\n\\[\\P^2_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{2} \\right.\\right\\}\\]\nwhere \\(P_{2}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 2\\).\n\n\n[P2b, P2b3d] piecewise \\(P_{2}\\) continuous finite element plus bubble (2d, 3d with load”Element_P2bulle3”)\nThe 2D Case:\n\n\n\\[\\P^2_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{2} \\oplus \\mathrm{Span}\\{ \\lambda^{K}_{0} \\lambda^{K}_{1} \\lambda^{K}_{2} \\} \\right.\\right\\}\\]\nThe 3D Case:\n\n\n\\[\\P^2_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{2} \\oplus \\mathrm{Span}\\{ \\lambda^{K}_{0} \\lambda^{K}_{1} \\lambda^{K}_{2} \\lambda^{K}_{3} \\} \\right.\\right\\}\\]\n\n\n\n[P2dc] piecewise \\(P_{2}\\) discontinuous finite element (2d)\n\n\n\\[\\P^2_{dc|h}  =  \\left\\{ v \\in L^{2}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{2} \\right.\\right\\}\\]\n\n\nWarning\nDue to an interpolation problem, the degree of freedom is not the six P2 nodes but six nodes which move inside \\(T(X) =  G + .99 (X-G)\\) where \\(G\\) is the barycenter.\n\n\n[P2h] quadratic homogeneous continuous (without P1).\n[P3] piecewise \\(P_{3}\\) continuous finite element (2d) (needs load \"Element_P3\")\n\n\n\\[\\P^3_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{3} \\right.\\right\\}\\]\nwhere \\(P_{3}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 3\\).\n\n\n[P3dc] piecewise \\(P_{3}\\) discontinuous finite element (2d) (needs load \"Element_P3dc\")\n\n\n\\[\\P^3_{dc|h}  =  \\left\\{ v \\in L^2(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{3} \\right.\\right\\}\\]\nwhere \\(P_{3}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 3\\).\n\n\n[P4] piecewise \\(P_{4}\\) continuous finite element (2d) (needs load \"Element_P4\")\n\n\n\\[\\P^4_{h}  =  \\left\\{ v \\in H^{1}(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h},\\ v_{|K} \\in P_{4} \\right.\\right\\}\\]\nwhere \\(P_{4}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 4\\).\n\n\n[P4dc] piecewise \\(P_{4}\\) discontinuous finite element (2d) (needs load \"Element_P4dc\")\n\n\n\\[\\P^4_{dc|h}  =  \\left\\{ v \\in L^2(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{3} \\right.\\right\\}\\]\nwhere \\(P_{4}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 3\\).\n\n\n[P0Edge] piecewise \\(P_{0}\\) discontinuous finite element (2d) contained on each edge of the mesh.\n[P1Edge] piecewise \\(P_{1}\\) discontinuous finite element (2d) (needs load \"Element_PkEdge\") \\(P_1\\) on each edge of the mesh.\n[P2Edge] piecewise \\(P_{2}\\) discontinuous finite element (2d) (needs load \"Element_PkEdge\") \\(P_2\\) on each edge of the mesh.\n[P3Edge] piecewise \\(P_{3}\\) discontinuous finite element (2d) (needs load \"Element_PkEdge\") \\(P_3\\) on each edge of the mesh.\n[P4Edge] piecewise \\(P_{4}\\) discontinuous finite element (2d) (needs load \"Element_PkEdge\") \\(P_4\\) on each edge of the mesh.\n[P5Edge] piecewise \\(P_{5}\\) discontinuous finite element (2d) (needs load \"Element_PkEdge\") \\(P_5\\) on each edge of the mesh.\n[P2Morley] piecewise \\(P_{2}\\) non conform finite element (2d) (needs load \"Morley\")\n\n\n\\[\\begin{split}\\P^2_{h}  =  \\left\\{ v \\in L^2(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}_{h}, \\ v_{|K} \\in P_{3},\n\\left\\{\\begin{array}{c}\n    v \\mbox{ continuous at vertices,}\\\\\n    \\p_n{v} \\mbox{ continuous at middle of edge,}\n\\end{array}\\right.\n\\right.\\right\\}\\end{split}\\]\nwhere \\(P_{2}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 2\\).\n\nWarning\nTo build the interplant of a function \\(u\\) (scalar) for this finite element, we need the function and 2 partial derivatives \\((u,u_x, u_y)\\), creating this vectorial finite element with 3 components \\((u,u_x,u_y)\\).\n\nSee our example for solving the BiLaplacien problem:\n 1 load \"Morley\"\n 2 \n 3 // Parameters\n 4 int nn  =  10;\n 5 real h  =  0.01;\n 6 \n 7 real f  =  1;\n 8 \n 9 // Mesh\n10 mesh Th  =  square(nn, nn);\n11 Th  =  adaptmesh(Th, h, IsMetric = 1);\n12 \n13 // Fespace\n14 fespace Vh(Th, P2Morley); //The Morley finite element space\n15 Vh [u, ux, uy], [v, vx, vy];\n16 \n17 // Macro\n18 macro bilaplacien(u, v) (dxx(u)*dxx(v) + dyy(u)*dyy(v) + 2.*dxy(u)*dxy(v)) //\n19 \n20 // Problem\n21 solve bilap ([u, ux, uy], [v, vx, vy])\n22      =  int2d(Th)(\n23         bilaplacien(u, v)\n24     )\n25     - int2d(Th)(\n26         f*v\n27     )\n28     + on(1, 2, 3, 4, u = 0, ux = 0, uy = 0)\n29     ;\n30 \n31 // Plot\n32 plot(u, cmm = \"u\");\n\n\n\n\n[HCT] \\(P_3\\) \\(C^1\\) conforms finite element (2d) (needs load \"Element_HCT\") one 3 sub triangles.\n\nLets call \\(\\mathcal{T}^\\triangle_{h}\\) the sub mesh of \\(\\mathcal{T}_{h}\\) where all triangles are split in 3 at the barycenter.\n\n\\[\\P^{HCT}_{h}  =  \\left\\{ v \\in C^1(\\Omega) \\left|\\; \\forall K \\in \\mathcal{T}^\\triangle_{h}, \\ v_{|K} \\in P_{3} \\right.\\right\\}\\]\nwhere \\(P_{3}\\) is the set of polynomials of \\(\\R^{2}\\) of degrees \\(\\le 3\\).\nThe degrees of freedom are the values of the normal derivative at the mid-point of each edge [BERNADOU1980].\n\nWarning\nTo build the interplant of a function \\(u\\) (scalar) for this finite element, we need the function and 2 partial derivatives \\((u,u_x, u_y)\\), creating this vectorial finite element with 3 components \\((u,u_x,u_y)\\) like in previous finite element.\n\n\n\n[P2BR] (needs load \"BernadiRaugel\") the Bernadi Raugel Finite Element is a Vectorial element (2d) with 2 components, see [BERNARDI1985].\n\nIt is a 2D coupled Finite Element, where the Polynomial space is \\(P_1^2\\) with 3 normal bubble edge functions \\((P_2)\\).\nThere are 9 degrees of freedom:\n\n2 components at each of the 3 vertices and\nthe 3 flux on the 3 edges.\n\n\n\n[RT0, RT03d] Raviart-Thomas finite element of degree \\(0\\).\n\nThe 2D Case:\n\n(14)¶\\[RT0_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{div}) \\left|\\; \\forall K \\in \\mathcal{T}_{h} ,\\ \\mathbf{v}_{|K}(x,y)  = \n\\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{x}{y} \\right.\\right\\}\\]\nThe 3D Case:\n\n(15)¶\\[RT0_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{div}) \\left|\\; \\forall K \\in \\mathcal{T}_{h},\\ \\mathbf{v}_{|K}(x,y,z)  = \n\\vectthree{\\alpha^1_{K}}{\\alpha^2_{K}}{\\alpha^3_{K}} + \\beta_{K}\\vectthree{x}{y}{z} \\right.\\right\\}\\]\nwhere by writing \\(\\textrm{div }\\mathbf{w} = \\sum_{i = 1}^d\\p w_i/\\p x_i\\) with \\(\\mathbf{w} = (w_i)_{i = 1}^d\\):\n\n\\[H(\\textrm{div}) = \\left\\{\\mathbf{w}\\in L^{2}(\\Omega)^d\\left|\\textrm{div } \\mathbf{w}\\in L^{2}(\\Omega)\\right.\\right\\}\\]\nand where \\(\\alpha^1_{K}\\), \\(\\alpha^2_{K}\\), \\(\\alpha^3_{K}\\), \\(\\beta_{K}\\) are real numbers.\n\n\n[RT0Ortho] Raviart-Thomas Orthogonal, or Nedelec finite element type I of degree \\(0\\) in dimension 2\n\n\n(16)¶\\[RT0Ortho{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{curl}) \\left|\\; \\forall K \\in \\mathcal{T}_{h},\\ \\mathbf{v}_{|K}(x,y)  = \n\\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{-y}{x} \\right.\\right\\}\\]\n\n\n[Edge03d] 3d Nedelec finite element or Edge Element of degree \\(0\\).\n\n\n\\[Edge0_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{Curl}) \\left|\\; \\forall K \\in\\mathcal{T}_{h}, \\ \\mathbf{v}_{|K}(x,y,z)  = \n    \\vectthree{\\alpha^1_{K}}{\\alpha^2_{K}}{\\alpha^3_{K}} + \\vectthree{\\beta^1_{K}}{\\beta^2_{K}}{\\beta^3_{K}}\\times\\vectthree{x}{y}{z} \\right.\\right\\}\n:label:eq:Edge03d\\]\nwhere by writing \\(\\textrm{curl}\\mathbf{w} = \\vectthree{\\p w_2/\\p x_3-\\p w_3/\\p x_2}{\\p w_3/\\p x_1-\\p w_1/\\p x_3}{\\p w_1/\\p x_2-\\p w_2/\\p x_1}\\) with \\(\\mathbf{w} = (w_i)_{i = 1}^d\\):\n\n\\[H(\\textrm{curl}) = \\left\\{\\mathbf{w}\\in L^{2}(\\Omega)^d\\left|\\textrm{curl } \\mathbf{w}\\in L^{2}(\\Omega)^d\\right.\\right\\}\\]\nand \\(\\alpha^1_{K},\\alpha^2_{K},\\alpha^3_{K},\\beta^1_{K},\\beta^2_{K},\\beta^3_{K}\\) are real numbers.\n\n\n[Edge13d] (needs load \"Element_Mixte3d\") 3d Nedelec finite element or Edge Element of degree \\(1\\).\n[Edge23d] (needs load \"Element_Mixte3d\") 3d Nedelec finite element or Edge Element of degree \\(2\\).\n[P1nc] piecewise linear element continuous at the mid-point of the edge only in 2D (Crouzeix-Raviart Finite Element 2D).\n[P2pnc] piecewise quadratic plus a P3 bubble element with the continuity of the 2 moments on each edge (needs load \"Element_P2pnc\")\n[RT1] (needs load \"Element_Mixte\")\n\n\n(17)¶\\[RT1_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{div}) \\left|\\; \\forall K \\in\\mathcal{T}_{h}, \\ \\alpha^1_{K}, \\alpha^2_{K}, \\beta_{K} \\in P_1^2,P_0, \\mathbf{v}_{|K}(x,y)  = \n    \\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{x}{y} \\right.\\right\\}\\]\n\n\n[RT1Ortho] (needs load \"Element_Mixte\")\n\n\n(18)¶\\[RT1_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{curl}) \\left|\\; \\forall K \\in\\mathcal{T}_{h},\\ \\alpha^1_{K}, \\alpha^2_{K}, \\beta_{K} \\in P_1^2,P_0, \\mathbf{v}_{|K}(x,y)  = \n    \\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{-y}{x} \\right.\\right\\}\\]\n\n\n[RT2] (needs load \"Element_Mixte\")\n\n\n(19)¶\\[RT2_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{div}) \\left|\\; \\forall K \\in\\mathcal{T}_{h},\\ \\alpha^1_{K}, \\alpha^2_{K}, \\beta_{K} \\in P_2^2, P_1, \\mathbf{v}_{|K}(x,y)  = \n    \\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{x}{y} \\right.\\right\\}\\]\n\n\n[RT2Ortho] (needs load \"Element_Mixte\")\n\n\n(20)¶\\[RT2_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{curl}) \\left|\\; \\forall K \\in\\mathcal{T}_{h} ,\\ \\alpha^1_{K}, \\alpha^2_{K}, \\beta_{K} \\in P_2^2, P_1,\\ \\mathbf{v}_{|K}(x,y)  = \n    \\vecttwo{\\alpha^1_{K}}{\\alpha^2_{K}} + \\beta_{K}\\vecttwo{-y}{x} \\right.\\right\\}\\]\n\n\n[BDM1] (needs load \"Element_Mixte\") the Brezzi-Douglas-Marini finite element:\n\n\n(21)¶\\[BDM1_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{div}) \\left|\\; \\forall K \\in\\mathcal{T}_{h},\\ \\mathbf{v}_{|K} \\in P_1^2\\right.\\right\\}\\]\n\n\n[BDM1Ortho] (needs load \"Element_Mixte\") the Brezzi-Douglas-Marini Orthogonal also call Nedelec of type II , finite element\n\n\n(22)¶\\[BDM1Ortho_{h}  =  \\left\\{ \\mathbf{v} \\in H(\\textrm{curl}) \\left|\\; \\forall K \\in\\mathcal{T}_{h},\\ \\mathbf{v}_{|K} \\in P_1^2\\right.\\right\\}\\]\n\n\n[FEQF] (needs load \"Element_QF\") the finite element to store functions at default quadrature points (so the quadrature is qf5pT in 2D and is qfV5 in 3d).\n\nFor over quadrature you have the following corresponding finite element’s quadrature formula.\n\nFEQF1 \\(\\mapsto\\) qf1pT,\nFEQF2 \\(\\mapsto\\) qf2pT,\nFEQF5 \\(\\mapsto\\) qf5pT,\nFEQF7 \\(\\mapsto\\) qf7pT,\nFEQF9 \\(\\mapsto\\) qf9pT,\nFEQF13d \\(\\mapsto\\) qfV1,\nFEQF23d \\(\\mapsto\\) qfV2,\nFEQF53d \\(\\mapsto\\) qfV5\n\n\n\n\nYou can use this element to optimize the storage and reuse of functions with a long formula inside an integral for non linear processes.\n\n\nUse of fespace in 2D¶\nWith the 2D finite element spaces\n\n\\[X_{h}  =  \\left\\{ v \\in H^{1}(]0,1[^2) |\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{1} \\right\\}\\]\n\n\\[X_{ph}  =  \\left\\{ v \\in X_{h} |\\; v\\left(\\vecttwo{0}{.}\\right)  =  v\\left(\\vecttwo{1}{.}\\right) , v\\left(\\vecttwo{.}{0}\\right)  =  v\\left(\\vecttwo{.}{1}\\right) \\right\\}\\]\n\n\\[M_{h}  =  \\left\\{ v \\in H^{1}(]0,1[^2) |\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{2} \\right\\}\\]\n\n\\[R_{h}  =  \\left\\{ \\mathbf{v} \\in H^{1}(]0,1[^2)^{2} |\\; \\forall K \\in \\mathcal{T}_{h}\\quad \\mathbf{v}_{|K}(x,y)  =  \\vecttwo{\\alpha_{K}}{\\beta_{K}} + \\gamma_{K}\\vecttwo{x}{y} \\right\\}\\]\nwhen \\(\\mathcal{T}_h\\) is a mesh \\(10\\times 10\\) of the unit square \\(]0,1[^2\\), we only write in FreeFEM:\n1 mesh Th  =  square(10, 10);\n2 fespace Xh(Th, P1); //scalar FE\n3 fespace Xph(Th,P1,\n4     periodic = [[2, y], [4, y], [1, x], [3, x]]); //bi-periodic FE\n5 fespace Mh(Th, P2); //scalar FE\n6 fespace Rh(Th, RT0); //vectorial FE\n\n\nwhere Xh, Mh, Rh expresses finite element spaces (called FE spaces) \\(X_h,\\, M_h,\\, R_h\\), respectively.\nTo use FE-functions \\(u_{h},v_{h} \\in X_{h}\\), \\(p_{h},q_{h} \\in M_{h}\\) and \\(U_{h},V_{h} \\in R_{h}\\), we write:\n1 Xh uh, vh;\n2 Xph uph, vph;\n3 Mh ph, qh;\n4 Rh [Uxh, Uyh], [Vxh, Vyh];\n5 Xh[int] Uh(10);         //array of 10 functions in Xh\n6 Rh[int] [Wxh, Wyh](10); //array of 10 functions in Rh\n7 Wxh[5](0.5,0.5);        //the 6th function at point (0.5, 0.5)\n8 Wxh[5][];               //the array of the degree of freedom of the 6th function\n\n\nThe functions \\(U_{h}, V_{h}\\) have two components so we have\n\n\\[U_{h} = \\vecttwo{Uxh}{Uyh} \\quad \\mbox{and}\\quad V_{h} = \\vecttwo{Vxh}{Vyh}\\]\n\n\nUse of fespace in 3D¶\nWith the 3D finite element spaces\n\n\\[X_{h}  =  \\{ v \\in H^{1}(]0,1[^3) |\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{1} \\}\\]\n\n\\[X_{ph}  =  \\left\\{ v \\in X_{h} |\\; v\\left(\\vectthree{0}{.}{.}\\right)  =  v\\left(\\vectthree{1}{.}{.}\\right) , v\\left(\\vectthree{.}{0}{.}\\right)  =  v\\left(\\vectthree{.}{1}{.}\\right) , v\\left(\\vectthree{.}{.}{0}\\right)  =  v\\left(\\vectthree{.}{.}{1}\\right) \\right\\}\\]\n\n\\[M_{h}  =  \\{ v \\in H^{1}(]0,1[^3) |\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{2} \\}\\]\n\n\\[R_{h}  =  \\left\\{ \\mathbf{v} \\in H^{1}(]0,1[^3)^{2} |\\; \\forall K \\in \\mathcal{T}_{h}\\quad \\mathbf{v}_{|K}(x,y,z)  =  \\vectthree{\\alpha_{K}}{\\beta_{K}}{\\gamma_{K}} + \\delta_{K}\\vectthree{x}{y}{z} \\right\\}\\]\nwhen \\(\\mathcal{T}_h\\) is a mesh \\(10\\times 10\\times 10\\) of the unit cubic \\(]0,1[^2\\), we write in FreeFEM:\n 1 //label: 0 up, 1 down, 2 front, 3 left, 4 back, 5 right\n 2     int nn = 10;\n 3     mesh3 Th = buildlayers(square(nn,nn,region = 0),nn,\n 4       zbound = [zmin,zmax], labelmid = rmid, reffaceup  =  rup,\n 5       reffacelow  =  rdown);\n 6 \n 7 fespace Xh(Th, P1); //scalar FE\n 8     // a FE space with full periodic condition in 3 axes\n 9     fespace Xph(Th,P1,periodic = [[1,y,z],[2,y,z],\n10                      [3,x,z],[4,x,z],[5,x,y],[6,x,y]]);\n11 fespace Mh(Th, P2); //scalar FE\n12 fespace Rh(Th, RT03d); //vectorial FE\n\n\nwhere Xh, Mh, Rh expresses finite element spaces (called FE spaces) \\(X_h,\\, M_h,\\, R_h\\), respectively.\nThe functions \\(U_{h}, V_{h}\\) have two components so we have\n\n\nUse of fespace in surface 3D¶\nWith the 3D finite element spaces\n\n\\[X_{h}  =  \\{ v \\in H^{1}(]0,1[^3) |\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{1} \\}\\]\n1 meshS Th  =  square3(10, 10);\n2 fespace Xh(Th, P1); //scalar FE\n\n\nwhere Xh expresses finite element spaces (called FE spaces) \\(X_h\\), respectively.\nTo use FE-functions \\(u_{h},v_{h} \\in X_{h}\\), \\(p_{h},q_{h} \\in M_{h}\\) and \\(U_{h},V_{h} \\in R_{h}\\), we write:\n1 Xh uh, vh;\n2 Xh[int] Uh(10);         //array of 10 functions in Xh\n\n\n\n\nFinite Element functions¶\nTo define and use FE-functions \\(u_{h},v_{h} \\in X_{h}\\), \\(p_{h},q_{h} \\in M_{h}\\) and \\(U_{h},V_{h} \\in R_{h}\\), we write:\n1 Xh uh, vh;\n2 Xph uph, vph;\n3 Mh ph, qh;\n4 Rh [Uxh, Uyh, Uyzh], [Vxh, Vyh, Vyzh];\n5 Xh[int] Uh(10);             //array of 10 functions in Xh\n6 Rh[int] [Wxh,Wyh,Wzh](10);  // array of 10 functions in Rh\n7 Wxh[5](0.5,0.5,0.5);        //the 6th function at point (0.5, 0.5, 0.5)\n8 Wxh[5][];                   //the array of the degree of freedom of the 6th function\n\n\nThe functions \\(U_{h}, V_{h}\\) have three components, so we have:\n\n\\[U_{h} = \\vectthree{(U_h)_x}{(U_h)_y}{(U_h)_z} \\quad \\mbox{and}\\quad V_{h} = \\vectthree{(V_h)_x}{(V_h)_y}{(V_h)_z}\\]\n\nNote\nOne challenge of the periodic boundary condition is that the mesh must have equivalent faces.\nThe buildlayers mesh generator splits each quadrilateral face with the diagonal passing through the vertex with maximum number, so to be sure to have the same mesh one both face periodic the 2D numbering in corresponding edges must be compatible (for example the same variation).\nBy Default, the numbering of square vertex is correct.\nTo change the mesh numbering you can use the change function like:\n1 {\n2     int[int] old2new(0:Th.nv-1); //array set on 0, 1, .., nv-1\n3     fespace Vh2(Th, P1);\n4     Vh2 sorder  =  x+y; //choose an order increasing on 4 square borders with x or y\n5     sort(sorder[], old2new); //build the inverse permutation\n6     int[int] new2old  =  old2new^-1; //inverse the permutation\n7     Th  =  change(Th, renumv = new2old);\n8 }\n\n\nThe full example is in examples.\n\n\n\nLagrangian Finite Elements¶\n\nP0-element¶\nFor each triangle (d = 2) or tetrahedron (d = 3) \\(T_k\\), the basis function \\(\\phi_k\\) in Vh(Th, P0) is given by:\n\n\\[\\begin{split}\\phi_k(\\mathbf{x}) = \n\\left\\{\n\\begin{array}{cl}\n    1 & \\textrm{ if }(\\mathbf{x})\\in T_k\\\\\n    0 & \\textrm{ if }(\\mathbf{x})\\not\\in T_k\n\\end{array}\n\\right.\\end{split}\\]\nIf we write:\n1 Vh(Th, P0);\n2 Vh fh  =  f(x,y);\n\n\nthen for vertices \\(q^{k_i},\\, i = 1,2,.. d+1\\) in Fig. 98, \\(f_h\\) is built as fh =  \\(\\displaystyle f_h(x,y) = \\sum_k f(\\frac{\\sum_i q^{k_i}}{d+1}) \\phi_k\\)\nSee Fig. 100 for the projection of \\(f(x,y) = \\sin(\\pi x)\\cos(\\pi y)\\) on Vh(Th, P0) when the mesh Th is a \\(4\\times 4\\)-grid of \\([-1,1]^2\\) as in Fig. 99.\n\n\nP1-element¶\n\n\n\nFig. 98 \\(P_1\\) and \\(P_2\\) degrees of freedom on triangle \\(T_k\\)¶\n\n\nFor each vertex \\(q^i\\), the basis function \\(\\phi_i\\) in Vh(Th, P1) is given by:\n\n\\[\\begin{split}\\phi_i(x,y)& = a^k_i+b^k_ix+c^k_iy \\textrm{ for }(x,y)\\in T_k,\\\\\n\\phi_i(q^i)& = 1,\\quad \\phi_i(q^j) = 0 \\textrm{ if }i\\neq j\\end{split}\\]\nThe basis function \\(\\phi_{k_1}(x,y)\\) with the vertex \\(q^{k_1}\\) in Fig. 98 at point \\(p = (x,y)\\) in triangle \\(T_k\\) simply coincide with the barycentric coordinates \\(\\lambda^k_1\\) (area coordinates):\n\n\\[\\phi_{k_1}(x,y)  =  \\lambda^k_{1}(x,y) = \n\\frac{\\textrm{area of triangle} (p, q^{k_2},q^{k_3})}\n{\\textrm{area of triangle}(q^{k_1},q^{k_2},q^{k_3})}\\]\nIf we write:\n1 Vh(Th, P1);\n2 Vh fh  =  g(x.y);\n\n\nthen:\nfh  =  \\(\\displaystyle f_h(x,y) = \\sum_{i = 1}^{n_v}f(q^i)\\phi_i(x,y)\\)\nSee Fig. 101 for the projection of \\(f(x,y) = \\sin(\\pi x)\\cos(\\pi y)\\) into Vh(Th, P1).\n\n\n\n\nFig. 99 Test mesh Th for projection¶\n\n\n\n\n\nFig. 100 Projection to Vh(Th, P0)¶\n\n\nFinite element P0\n\n\nP2-element¶\nFor each vertex or mid-point \\(q^i\\).\nThe basis function \\(\\phi_i\\) in Vh(Th, P2) is given by:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\phi_i(x,y)& = &a^k_i+b^k_ix+c^k_iy+d^k_ix^2+e^k_ixy+f^f_jy^2\\textrm{ for }(x,y)\\in T_k,\\\\\n    \\phi_i(q^i)& = &1,\\quad \\phi_i(q^j) = 0\\textrm{ if }i\\neq j\n\\end{array}\\end{split}\\]\nThe basis function \\(\\phi_{k_1}(x,y)\\) with the vertex \\(q^{k_1}\\) in Fig. 98 is defined by the barycentric coordinates:\n\n\\[\\phi_{k_1}(x,y)  =  \\lambda^k_{1}(x,y)(2\\lambda^k_1(x,y)-1)\\]\nand for the mid-point \\(q^{k_2}\\):\n\n\\[\\phi_{k_2}(x,y)  =  4\\lambda^k_1(x,y)\\lambda^k_4(x,y)\\]\nIf we write:\n1 Vh(Th, P2);\n2 Vh fh  =  f(x.y);\n\n\nthen:\nfh  =  \\(\\displaystyle f_h(x,y) = \\sum_{i = 1}^{M}f(q^i)\\phi_i(x,y)\\quad (\\textrm{summation over all vertex or mid-point})\\)\nSee Projection to Vh(Th, P2) for the projection of \\(f(x,y) = \\sin(\\pi x)\\cos(\\pi y)\\) into Vh(Th, P2).\n\n\n\n\nFig. 101 Projection to Vh(Th, P1)¶\n\n\n\n\n\nFig. 102 Projection to Vh(Th, P2)¶\n\n\nFinite elements P1, P2\n\n\n\nSurface Lagrangian Finite Elements¶\n\nDefinition of the surface P1 Lagragian element¶\nTo build the surface Pk-Lagrange, the main idea is to consider the usual 2d Lagrangian Finite Elements ; and its writing in barycentric coordinates ; apply a space transformation and barycentric properties.\nThe FreeFEM finite elements for surface problem are: P0 P1 P2 P1b.\n0) Notation\n\n\nLet \\(\\hat K\\) be the shape triangle in the space \\(\\mathbb{R}^2\\) of vertice \\((i_0,i_1,i_2)\\)\nLet \\(K\\) be a triangle of the space \\(\\mathbb{R}^3\\) of vertice \\((A_0,A_1,A_2)\\)\n\\(x_q\\) a quadrature point on K\n\\(X_q\\) a quadrature point on A\n\\(P1_{2d}\\) designates 2d P1 Lagrangian Finite Elements\n\\(P1_{S}\\) designates surface 3d P1 Lagrangian Finite Elements\n\\((\\lambda_i)_{i = 0}^2\\) shape fonction of \\(\\hat K\\) (\\(P1_{2d}\\))\n\\((\\psi_i)_{i = 0}^2\\) shape fonction of of \\(K\\) (\\(P1_S\\) )\n\n\n1) Geometric transformation: from the current FE to the reference FE\nLet be \\(\\hat x =  \\begin{pmatrix}   \\hat x \\\\ \\hat y  \\end{pmatrix}\\) a point of the triangle \\(\\hat K \\subset \\mathbb{R}^2\\) and \\(X =  \\begin{pmatrix}   x \\\\  y  \\\\ z \\end{pmatrix}\\) a point of the triangle \\(K \\subset \\mathbb{R}^3\\), where \\(\\hat x\\) and \\(\\hat X\\) are expressed in baricentric coordinates.\nThe motivation here is to parameterize the 3d surface mesh to the reference 2d triangle, thus to be reduced to a finite element 2d P1.\nLet’s define a geometric transformation F, such as \\(F: \\mathbb{R}^2 \\rightarrow \\mathbb{R}^3\\)\nHowever, thus defines transformation F as not bijective.\nSo, consider the following approximation\n\n\\[\\begin{split}\\tilde F: \\mathbb{R}^2 &\\rightarrow \\mathbb{R}^3  \\\\\n\\hat{x}   &\\rightarrow  X  \\\\\n\\begin{pmatrix} x \\\\ y \\\\ 0 \\end{pmatrix} &\\rightarrow  \\begin{pmatrix} \\overrightarrow {A_0 A_1} \\\\ \\overrightarrow {A_0A_2} \\\\ \\overrightarrow {A_0A_1} \\wedge  \\overrightarrow     {A_0A_2} \\end{pmatrix} ( \\hat{x} -A_0)\\end{split}\\]\nwhere \\(\\wedge\\) denote the usual vector product.\n\n\n\nFig. 103 F, a parameterization from the reference 2d triangle to a 3d surface triangle¶\n\n\n\nNote\n\\(\\overrightarrow {A0A1} \\wedge  \\overrightarrow {A_0A_2}  =  \\begin{pmatrix} n_x \\\\ n_y \\\\ n_z \\end{pmatrix}\\)  defines the normal to the tangent plane generated by \\(( A_0,\\overrightarrow {A_0A_1}, \\overrightarrow {A_0A_2} )\\)\n\nThe affine transformation \\(\\tilde F\\) allows you to pass from the 2d reference triangle, which we project in \\(\\mathbb{R}^3\\) to the 3d current triangle, discretizing the surface we note \\(\\Gamma\\).\nThen \\(\\tilde F^{-1}\\) is well defined and allows to return to the reference triangle \\(\\hat K\\), to the usual coordinates of \\(\\mathbb{R}^2\\) completed by the coordinate \\(z = 0\\).\n2) Interpolation element fini\nRemember that the reference geometric element for the finite element \\(P1s\\) that we are building is the reference triangle \\(\\hat K\\) in the vertex plane \\((i_0, i_1, i_2\\)), which we project into space by posing \\(z = 0\\) by the membrane hypothesis.\nHence \\(i_0  =  \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\end{pmatrix}\\), \\(i_1  =  \\begin{pmatrix} 1 \\\\ 0 \\\\ 0  \\end{pmatrix}\\), \\(i_1  =  \\begin{pmatrix} 0 \\\\ 1 \\\\ 0 \\end{pmatrix}\\).\nLet X be a point of the current triangle K, we have X =  \\(\\tilde F(\\hat{x})\\).\nThe barycentric coordinates of X in K are given by:\n\\(X  =  \\sum_{i = 0} ^2  A_i \\hat \\lambda(\\hat{x})\\) où\n\n\n\\(A_i\\) the points of the current triangle K\n\\(\\hat \\lambda_i\\) basic functions \\(P1_{2d}\\)\n\n\n\n\\(\\hat \\lambda_0(x,y)  =  1-x-y\\)\n\\(\\hat \\lambda_1(x,y)  =  x\\)\n\\(\\hat \\lambda_2(x,y)  =  y\\)\n\n\n\nWe need to define a quadrature formula for the finite element approximation. The usual formulation for a 2d triangle will be used by redefining the quadrature points\n\\(X_q  =  x_q  =  \\begin{pmatrix} \\hat x_q \\\\ \\hat y_q \\\\ 0 \\end{pmatrix}\\).\n3) The Lagragian P1 functions and theirs 1st order derivatives\nThe finite element interpolation gives us the following relationship:\n\\(\\psi_i(X)  =  F^{-1} (\\psi_i)( F^{-1} (X))\\).\nTo find the expression of the basic functions \\(\\psi\\) on the current triangle K, it is sufficient to use the inverse of the transformation \\(\\tilde F\\) to get back to the reference triangle \\(\\hat K\\).\nHowever in FreeFEM, the definition of the reference finite element, the current geometry is based on barycentric coordinates in order not to use geometric transformation. \\(\\tilde F\\).\nThe method used here is  geometric and based on the properties of the vector product and the area of the current triangle K.\ni) The shape functions\nLet be the triangle K of vertices \\(i_0, i_1, i_2 \\subset  \\mathbb{R}^3\\) and \\((\\lambda_i)_{i = 0} ^2\\) the local barycentric coordinates at K.\nThe normal is defined as the tangent plane generated by \\((A_0,  \\overrightarrow {A_0A_1},  \\overrightarrow {A_0A_2})\\), \\\n\\(\\vec n  =   \\overrightarrow {A_0A_1} \\wedge  \\overrightarrow {A_0A_2}\\) avec \\(\\mid \\mid \\vec n \\mid \\mid   =  2 \\text{ mes }(\\hat K)\\).\nLe denotes the operator V, defines the usual vector product of  \\(\\mathbb{R}^3\\) such as \\(V(A,B,C)  =   (B-A) \\wedge (C-A)\\)\nThe mixed product of three vectors u, v, w, noté \\([u, v, w]\\), is the determinant of these three vectors in any direct orthonormal basis, thus\n\\((A \\wedge V,C) =  \\text{ det }(A,B,C)\\)\nwith \\((.,.)\\) is the usual scalar product of \\(\\mathbb{R}^3\\). \\\nLet Ph :math:` in mathbb{R}^3` and P his projected in the triangle K such as:\n\n\n\nLet’s lay the sub-triangles as follows :\n\n\n\\(K_0  =  (P,A1,A2)\\)\n\\(K_1  =  (A0,P,A2)\\)\n\\(K_2  =  (A0,A1,P)\\)\n\n\nwith  \\(K  =  K_0 \\cup K_1 \\cup K_2\\).\n\n\nNote\n\nProperties in \\(\\mathbb{R}^3\\)\nLet \\(\\vec n\\) be the normal to the tangent plane generated by \\((A_0, \\overrightarrow {A_0A_1}, \\overrightarrow {A_0A_2})\\)\n\\(\\vec n  = \\overrightarrow {A_0 A_1} \\wedge \\overrightarrow {A_0 A_2}\\)\nBy definition,  \\(\\mathcal{A} =  \\frac{1}{2} \\mid < \\vec n,\\vec n> \\mid\\) and the vectorial area by \\(\\mathcal{A^S} =  \\frac{1}{2} < \\vec n,\\vec n>\\) hence  \\(\\mathcal{A^S} (PBC) =  \\frac{1}{2} < \\vec n_0,\\vec n>\\), with \\(\\vec n_0\\) the normal vector to the plane (PBC)\n\n\n\n\n\nLet’s define the respective vector areas\n\n\n\\(\\vec N_0(P)  =   V(P,A1,A2)\\) the vectorial area of K0\n\\(\\vec N_1(P)  =   V(A0,P,A2)\\) the vectorial area of K1\n\\(\\vec N_2(P)  =   V(A0,A1,P)\\) the vectorial area of K2\n\n\nBy definition, in 3d, the barycentric coordinates are given by algebraic area ratio: :math:` lambda_i(P)  =  frac {(vec N_i(P),vec N)}{(vec N,vec N)}label{basisfunc}`\nNote that \\((\\vec N_i(P) ,\\vec N)  =  2 \\text{ sign } \\text{ mes } (K_i) \\mid \\mid \\vec N \\mid \\mid\\)\nand \\((\\vec N,\\vec N)  =  2 \\text{ sign } \\text{ mes } (K)  \\mid \\mid \\vec N \\mid \\mid\\), avec \\(sign\\) the orientation of the current triangle compared to the reference triangle.\nWe find the finite element interpolation,  \\(P  =  \\sum_{i = 0}^2  \\lambda_i(P) A_i\\).\nii) 1st order derivatives of Lagrangian P1 FE\nLet \\(\\vec Y\\) be any vector of \\(\\in \\mathbb{R}^3\\).\n\n\\[\\begin{split}\\begin{aligned}\n(\\vec N_2(P) ,\\vec Y) & =  ( (A_1-A_0) \\wedge (P-A_0),Y) \\\\\n& = \\text{det}(A_1-A_0,P-A_0,Y)  \\\\\n& =  \\text{det}(A_1-A_0,P,Y)- \\text{det}(A_1-A_0,A_0,Y)\n\\end{aligned}\\end{split}\\]\nLet’s calculate the differential of \\((\\vec N_2(P),Y), \\forall Y\\)\n\n\\[\\begin{split}D_P (\\vec N_2(P) ,\\vec Y)   =   \\text{det} (A_1-A_0,P',Y) dP \\\\\n\\begin{aligned}\n\\nabla_P (\\vec N_2(P) ,\\vec Y) & =  \\text{ det } (A_1-A_0, P' ,\\vec Y) \\\\\n& =  - det (A_1-A_0, \\vec Y, P') \\\\\n& =  - (A_1-A_0) \\wedge \\vec Y . P' \\\\\n& =   \\vec Y \\wedge (A_1-A_0)\n\\end{aligned}\\end{split}\\]\nConsider in particular \\(\\vec Y  =  \\vec N\\), then\n\n\\[\\begin{split}\\begin{aligned}\n\\nabla_P (\\vec N_2(P) ,\\vec N) & =   \\vec N \\wedge (A_1-A_0) \\\\\n& =   \\vec N \\wedge E_2\n& =  - \\text{det} (A_1-A_0, \\vec Y, P')\n\\end{aligned}\\end{split}\\]\nThis leads to\n:math:` nabla_P lambda_2(P)  =  frac {(vec N wedge E_2)}{(vec N,vec N)} `\nBy similar calculations for \\(\\vec N_0(P)$ et $\\vec N_1(P)\\)\n\\(\\nabla_P \\lambda_i(P)  =  \\frac {(\\vec N \\wedge E_i)}{(\\vec N,\\vec N)}\\label{derivbasisfunc}\\)\n\nNote\nWith the definition of the surface gradient and the 2d Pk-Lagrange FE used barycentric coordinates, surface Pk-Langrange FE are trivial.\n\n\n\n\nP1 Nonconforming Element¶\nRefer to [THOMASSET2012] for details; briefly, we now consider non-continuous approximations so we will lose the property:\n\n\\[w_h\\in V_h\\subset H^1(\\Omega)\\]\nIf we write:\n1 Vh(Th, P1nc);\n2 Vh fh  =  f(x.y);\n\n\nthen:\nfh  =  \\(\\displaystyle f_h(x,y) = \\sum_{i = 1}^{n_v}f(m^i)\\phi_i(x,y)\\quad (\\textrm{summation over all midpoint})\\)\nHere the basis function \\(\\phi_i\\) associated with the mid-point \\(m^i = (q^{k_i}+q^{k_{i+1}})/2\\) where \\(q^{k_i}\\) is the \\(i\\)-th point in \\(T_k\\), and we assume that \\(j+1 = 0\\) if \\(j = 3\\):\n\n\\[\\begin{split}\\phi_i(x,y) & =  a^k_i+b^k_ix+c^k_iy~\\textrm{for }(x,y)\\in T_k,\\\\\n\\phi_i(m^i) & =  1,\\quad \\phi_i(m^j) = 0\\textrm{ if }i\\neq j\\end{split}\\]\nStrictly speaking \\(\\p \\phi_i/\\p x,\\, \\p \\phi_i/\\p y\\) contain Dirac distribution \\(\\rho \\delta_{\\p T_k}\\).\nThe numerical calculations will automatically ignore them.\nIn [THOMASSET2012], there is a proof of the estimation\n\n\\[\\left(\\sum_{k = 1}^{n_v}\\int_{T_k}|\\nabla w-\\nabla w_h|^2\\d x\\d y\\right)^{1/2}  = O(h)\\]\nThe basis functions \\(\\phi_k\\) have the following properties.\n\nFor the bilinear form \\(a\\) defined in Fig. 104 satisfy:\n\n\n\\[\\begin{split}\\begin{array}{rcl}\n    a(\\phi_i,\\phi_i)>0,\\qquad a(\\phi_i,\\phi_j)&\\le& 0\\quad\\textrm{if }i\\neq j\\\\\n    \\sum_{k = 1}^{n_v}a(\\phi_i,\\phi_k)&\\ge& 0\n\\end{array}\\end{split}\\]\n\n\n\\(f\\ge 0 \\Rightarrow u_h\\ge 0\\)\nIf \\(i\\neq j\\), the basis function \\(\\phi_i\\) and \\(\\phi_j\\) are \\(L^2\\)-orthogonal:\n\n\n\\[\\int_{\\Omega}\\phi_i\\phi_j\\, \\d x\\d y = 0\\qquad \\textrm{if }i\\neq j\\]\nwhich is false for \\(P_1\\)-element.\n\n\n\nSee Fig. 104 for the projection of \\(f(x,y) = \\sin(\\pi x)\\cos(\\pi y)\\) into Vh(Th, P1nc).\n\n\n\n\nFig. 104 Projection to Vh(Th, P1nc)¶\n\n\n\n\n\nFig. 105 Projection to Vh(Th, P1b)¶\n\n\nFinite elements P1nc, P1b\n\n\nOther FE-space¶\nFor each triangle \\(T_k\\in \\mathcal{T}_h\\), let \\(\\lambda_{k_1}(x,y),\\, \\lambda_{k_2}(x,y),\\, \\lambda_{k_3}(x,y)\\) be the area cordinate of the triangle (see Fig. 98), and put:\n\n\\[\\beta_k(x,y) = 27\\lambda_{k_1}(x,y)\\lambda_{k_2}(x,y)\\lambda_{k_3}(x,y)\\]\ncalled bubble function on \\(T_k\\).\nThe bubble function has the feature: 1. \\(\\beta_k(x,y) = 0\\quad \\textrm{if }(x,y)\\in \\p T_k\\).\n\n\\(\\beta_k(q^{k_b}) = 1\\) where \\(q^{k_b}\\) is the barycenter \\(\\frac{q^{k_1}+q^{k_2}+q^{k_3}}{3}\\).\n\nIf we write:\n1 Vh(Th, P1b);\n2 Vh fh  =  f(x.y);\n\n\nthen:\nfh  =  \\(\\displaystyle f_h(x,y) = \\sum_{i = 1}^{n_v}f(q^i)\\phi_i(x,y)+\\sum_{k = 1}^{n_t}f(q^{k_b})\\beta_k(x,y)\\)\nSee Fig. 105 for the projection of \\(f(x,y) = \\sin(\\pi x)\\cos(\\pi y)\\) into Vh(Th, P1b).\n\n\nVector Valued FE-function¶\nFunctions from \\(\\R^{2}\\) to \\(\\R^{N}\\) with \\(N = 1\\) are called scalar functions and called vector valued when \\(N>1\\).\nWhen \\(N = 2\\)\n1 fespace Vh(Th, [P0, P1]) ;\n\n\nmakes the space\n\n\\[V_h = \\{\\mathbf{w} = (w_1,w_2)|\\; w_1\\in V_h(\\mathcal{T}_h,P_0),\\,\nw_2\\in V_h(\\mathcal{T}_h,P_1)\\}\\]\n\nRaviart-Thomas Element¶\nIn the Raviart-Thomas finite element \\(RT0_{h}\\), the degrees of freedom are the fluxes across edges \\(e\\) of the mesh, where the flux of the function \\(\\mathbf{f} : \\R^2 \\longrightarrow \\R^2\\) is \\(\\int_{e} \\mathbf{f}.n_{e}\\), \\(n_{e}\\) is the unit normal of edge \\(e\\).\nThis implies an orientation of all the edges of the mesh, for example we can use the global numbering of the edge vertices and we just go from small to large numbers.\nTo compute the flux, we use a quadrature with one Gauss point, the mid-point of the edge.\nConsider a triangle \\(T_k\\) with three vertices \\((\\mathbf{a},\\mathbf{b},\\mathbf{c})\\).\nLets denote the vertices numbers by \\(i_{a},i_{b},i_{c}\\), and define the three edge vectors \\(\\mathbf{e}^{1},\\mathbf{e}^{2},\\mathbf{e}^{3}\\) by \\(sgn(i_{b}-i_{c})(\\mathbf{b}-\\mathbf{c})\\), \\(sgn(i_{c}-i_{a})(\\mathbf{c}-\\mathbf{a})\\), \\(sgn(i_{a}-i_{b})(\\mathbf{a}-\\mathbf{b})\\).\nWe get three basis functions:\n\n\\[\\boldsymbol{\\phi}^{k}_{1} =  \\frac{sgn(i_{b}-i_{c})}{2|T_k|}(\\mathbf{x}-\\mathbf{a}),\\quad\n\\boldsymbol{\\phi}^{k}_{2} =  \\frac{sgn(i_{c}-i_{a})}{2|T_k|}(\\mathbf{x}-\\mathbf{b}),\\quad\n\\boldsymbol{\\phi}^{k}_{3} =  \\frac{sgn(i_{a}-i_{b})}{2|T_k|}(\\mathbf{x}-\\mathbf{c}),\\]\nwhere \\(|T_k|\\) is the area of the triangle \\(T_k\\).\nIf we write:\n1 Vh(Th, RT0);\n2 Vh [f1h, f2h]  =  [f1(x, y), f2(x, y)];\n\n\nthen:\nfh  =  \\(\\displaystyle \\mathbf{f}_h(x,y) = \\sum_{k = 1}^{n_t}\\sum_{l = 1}^6 n_{i_lj_l}|\\mathbf{e^{i_l}}|f_{j_l}(m^{i_l})\\phi_{i_lj_l}\\)\nwhere \\(n_{i_lj_l}\\) is the \\(j_l\\)-th component of the normal vector \\(\\mathbf{n}_{i_l}\\),\n\n\\[\\{m_1,m_2,m_3\\}  =  \\left\\{\\frac{\\mathbf{b}+\\mathbf{c}}{2},\n\\frac{\\mathbf{a}+\\mathbf{c}}{2},\n\\frac{\\mathbf{b}+\\mathbf{a}}{2} \\right\\}\\]\nand \\(i_l = \\{1,1,2,2,3,3\\},\\, j_l = \\{1,2,1,2,1,2\\}\\) with the order of \\(l\\).\n\n\n\nFig. 106 Normal vectors of each edge¶\n\n\n 1 // Mesh\n 2 mesh Th  =  square(2, 2);\n 3 \n 4 // Fespace\n 5 fespace Xh(Th, P1);\n 6 Xh uh  =  x^2 + y^2, vh;\n 7 \n 8 fespace Vh(Th, RT0);\n 9 Vh [Uxh, Uyh]  =  [sin(x), cos(y)]; //vectorial FE function\n10 \n11 // Change the mesh\n12 Th  =  square(5,5);\n13 \n14 //Xh is unchanged\n15 //Uxh  =  x; //error: impossible to set only 1 component\n16           //of a vector FE function\n17 vh  =  Uxh;//ok\n18 //and now vh use the 5x5 mesh\n19 //but the fespace of vh is always the 2x2 mesh\n20 \n21 // Plot\n22 plot(uh);\n23 uh  =  uh; //do a interpolation of uh (old) of 5x5 mesh\n24         //to get the new uh on 10x10 mesh\n25 plot(uh);\n26 \n27 vh([x-1/2, y])  =  x^2 + y^2; //interpolate vh  =  ((x-1/2)^2 + y^2)\n\n\n\n\n\n\nFig. 107 vh Iso on mesh \\(2\\times 2\\)¶\n\n\n\n\n\nFig. 108 vh Iso on  mesh \\(5\\times 5\\)¶\n\n\nTo get the value at a point \\(x = 1,y = 2\\) of the FE function uh, or [Uxh, Uyh], one writes:\n1 real value;\n2 value  =  uh(2,4); //get value  =  uh(2, 4)\n3 value  =  Uxh(2, 4); //get value  =  Uxh(2, 4)\n4 //OR\n5 x  =  1; y  =  2;\n6 value  =  uh; //get value  =  uh(1, 2)\n7 value  =  Uxh; //get value  =  Uxh(1, 2)\n8 value  =  Uyh; //get value  =  Uyh(1, 2)\n\n\nTo get the value of the array associated to the FE function uh, one writes\n1 real value  =  uh[][0]; //get the value of degree of freedom 0\n2 real maxdf  =  uh[].max; //maximum value of degree of freedom\n3 int size  =  uh.n; //the number of degree of freedom\n4 real[int] array(uh.n)  =  uh[]; //copy the array of the function uh\n\n\n\nWarning\nFor a non-scalar finite element function [Uxh, Uyh] the two arrays Uxh[] and Uyh[] are the same array, because the degree of freedom can touch more than one component.\n\n\n\n\nA Fast Finite Element Interpolator¶\nIn practice, one may discretize the variational equations by the Finite Element method.\nThen there will be one mesh for \\(\\Omega_1\\) and another one for \\(\\Omega_2\\).\nThe computation of integrals of products of functions defined on different meshes is difficult.\nQuadrature formula and interpolations from one mesh to another at quadrature points are needed.\nWe present below the interpolation operator which we have used and which is new, to the best of our knowledge.\nLet \\({\\cal T}_{h}^0 = \\cup_k T^0_k,{\\cal T}_{h}^1 = \\cup_k T^1_k\\) be two triangulations of a domain \\(\\Omega\\).\nLet:\n\n\\[V({\\hbox{{\\cal T}}_{h}^i})  = \\{ C^0(\\Omega_h^i)~:~f|_{T^i_k}\\in P_0\\},~~~i = 0,1\\]\nbe the spaces of continuous piecewise affine functions on each triangulation.\nLet \\(f\\in V({\\cal T}_{h}^0)\\).\nThe problem is to find \\(g\\in V({\\cal T}_{h}^1)\\) such that:\n\n\\[g(q)  =  f(q) \\quad \\forall q\\hbox{~vertex of ~} {\\cal T}_{h}^1\\]\nAlthough this is a seemingly simple problem, it is difficult to find an efficient algorithm in practice.\nWe propose an algorithm which is of complexity \\(N^1\\log N^0\\), where \\(N^i\\) is the number of vertices of \\(\\cal T_{h}^i\\), and which is very fast for most practical 2D applications.\nAlgorithm\nThe method has 5 steps.\nFirst a quadtree is built containing all the vertices of the mesh \\({\\cal T}_{h}^0\\) such that in each terminal cell there are at least one, and at most 4, vertices of \\({\\cal T}_{h}^0\\).\nFor each \\(q^1\\), vertex of \\({\\cal T}_{h}^1\\) do:\n\nFind the terminal cell of the quadtree containing \\(q^1\\).\nFind the the nearest vertex \\(q^0_j\\) to \\(q^1\\) in that cell.\nChoose one triangle \\(T_k^0\\in{\\cal T}_{h}^0\\) which has \\(q^0_j\\) for vertex.\nCompute the barycentric coordinates \\(\\{\\lambda_j\\}_{j = 1,2,3}\\) of \\(q^1\\) in \\(T^0_k\\).\n\n\nif all barycentric coordinates are positive, go to Step 5\notherwise, if one barycentric coordinate \\(\\lambda_i\\) is negative, replace \\(T^0_k\\) by the adjacent triangle opposite \\(q^0_i\\) and go to Step 4.\notherwise, if two barycentric coordinates are negative, take one of the two randomly and replace \\(T^0_k\\) by the adjacent triangle as above.\n\n\n\nCalculate \\(g(q^1)\\) on \\(T^0_k\\) by linear interpolation of \\(f\\):\n\n\n\\[g(q^1)  =  \\sum_{j = 1,2,3} \\lambda_j f(q^0_j)\\]\n\n\n\n\n\n\nFig. 109 To interpolate a function at \\(q^0\\), the knowledge of the triangle which contains \\(q^0\\) is needed. The algorithm may start at \\(q^1\\in T_k^0\\) and stall on the boundary (thick line) because the line \\(q^0q^1\\) is not inside \\(\\Omega\\).\nBut if the holes are triangulated too (doted line) then the problem does not arise.¶\n\n\nTwo problems need to be solved:\n\nWhat if :math:`q^1` is not in \\(\\Omega^0_h\\) ? Then Step 5 will stop with a boundary triangle.\n\nSo we add a step which tests the distance of \\(q^1\\) with the two adjacent boundary edges and selects the nearest, and so on till the distance grows.\n\n\nWhat if \\(\\Omega^0_h\\) is not convex and the marching process of Step 4 locks on a boundary? By construction Delaunay-Voronoï’s mesh generators always triangulate the convex hull of the vertices of the domain.\n\nTherefore, we make sure that this information is not lost when \\({\\cal T}_{h}^0,{\\cal T}_{h}^1\\) are constructed and we keep the triangles which are outside the domain on a special list.\nThat way, in step 5 we can use that list to step over holes if needed.\n\n\n\n\nNote\nSometimes, in rare cases, the interpolation process misses some points, we can change the search algorithm through a global variable searchMethod\n1 searchMethod  =  0; // default value for fast search algorithm\n2 searchMethod  =  1; // safe search algorithm, uses brute force in case of missing point\n3 // (warning: can be very expensive in cases where a lot of points are outside of the domain)\n4 searchMethod  =  2; // always uses brute force. It is very computationally expensive.\n\n\n\n\nNote\nStep 3 requires an array of pointers such that each vertex points to one triangle of the triangulation.\n\n\nNote\nThe operator  =  is the interpolation operator of FreeFEM, the continuous finite functions are extended by continuity to the outside of the domain.\nTry the following example :\n\n 1 // Mesh\n 2 mesh Ths  =  square(10, 10);\n 3 mesh Thg  =  square(30, 30, [x*3-1, y*3-1]);\n 4 plot(Ths, Thg, wait = true);\n 5 \n 6 // Fespace\n 7 fespace Ch(Ths, P2);\n 8 Ch us  =  (x-0.5)*(y-0.5);\n 9 \n10 fespace Dh(Ths, P2dc);\n11 Dh vs  =  (x-0.5)*(y-0.5);\n12 \n13 fespace Fh(Thg, P2dc);\n14 Fh ug = us, vg = vs;\n15 \n16 // Plot\n17 plot(us, ug, wait = true);\n18 plot(vs, vg, wait = true);\n\n\n\n\n\n\nFig. 110 Extension of a continuous FE-function¶\n\n\n\n\n\nFig. 111 Extension of discontinuous FE-function¶\n\n\nExtension of FE-function\n\n\n\n\nKeywords: Problem and Solve¶\nFor FreeFEM, a problem must be given in variational form, so we need a bilinear form \\(a(u,v)\\), a linear form \\(\\ell(f,v)\\), and possibly a boundary condition form must be added.\n1 problem P (u, v)\n2      =  a(u,v) - l(f,v)\n3     + (boundary condition)\n4     ;\n\n\n\nNote\nWhen you want to formulate the problem and solve it in the same time, you can use the keyword solve.\n\n\nWeak Form and Boundary Condition¶\nTo present the principles of Variational Formulations, also called weak form, for the Partial Differential Equations, let’s take a model problem: a Poisson equation with Dirichlet and Robin Boundary condition.\nThe problem: Find \\(u\\) a real function defined on a domain \\(\\Omega\\) of \\(\\R^d\\) \\((d = 2,3)\\) such that:\n\n\\[\\begin{split}\\begin{array}{rcll}\n    -\\nabla\\cdot(\\kappa \\nabla u) & = & f & \\mbox{ in }\\Omega\\\\\n    a u + \\kappa \\frac{\\p u}{\\p n} & = & b & \\mbox{ on }\\Gamma_r\\\\\n    u & = & g & \\mbox{ on }\\Gamma_d\n\\end{array}\\end{split}\\]\nwhere:\n\nif \\(d = 2\\) then \\(\\nabla.(\\kappa \\nabla u)  =  \\p_x(\\kappa \\p_x u ) + \\p_y(\\kappa \\p_y u )\\) with \\(\\p_x u  =  \\frac{\\p u}{\\p x}\\) and \\(\\p_y u  =  \\frac{\\p u}{\\p y}\\)\nif \\(d = 3\\) then \\(\\nabla.(\\kappa \\nabla u)  =  \\p_x(\\kappa \\p_x u) + \\p_y(\\kappa \\p_y u) + \\p_z(\\kappa \\p_z u)\\) with \\(\\p_x u  =  \\frac{\\p u}{\\p x}\\), \\(\\p_y u  =  \\frac{\\p u}{\\p y}\\) and , \\(\\p_z u  =  \\frac{\\p u}{\\p z}\\)\nThe border \\(\\Gamma = \\p \\Omega\\) is split in \\(\\Gamma_d\\) and \\(\\Gamma_n\\) such that \\(\\Gamma_d \\cap \\Gamma_n  =  \\emptyset\\) and \\(\\Gamma_d \\cup \\Gamma_n  =  \\p \\Omega\\),\n\\(\\kappa\\) is a given positive function, such that \\(\\exists \\kappa_0 \\in \\R ,\\quad 0 < \\kappa_0 \\leq \\kappa\\).\n\\(a\\) a given non negative function,\n\\(b\\) a given function.\n\n\nNote\nThis is the well known Neumann boundary condition if \\(a = 0\\), and if \\(\\Gamma_d\\) is empty.\nIn this case the function appears in the problem just by its derivatives, so it is defined only up to a constant (if \\(u\\) is a solution then \\(u+c\\) is also a solution).\n\nLet \\({v}\\), a regular test function, null on \\(\\Gamma_d\\), by integration by parts we get:\n\n\\[- \\int_{\\Omega} \\nabla\\cdot(\\kappa \\nabla u) \\, {v} \\,d\\omega\n =  \\int_{\\Omega} \\kappa \\nabla{ v} \\cdot \\nabla u \\,d\\omega\n- \\int_{\\Gamma} {v}\\kappa \\frac{ \\p u}{\\p \\mathbf{n}} \\,d\\gamma, =  \\int_{\\Omega} f {v} \\,d\\omega\\]\nwhere if \\(d = 2\\) the \\(\\nabla{ v} . \\nabla u  =  (\\frac{\\p u}{\\p x}\\frac{\\p { v}}{\\p x}+\\frac{\\p u}{\\p y}\\frac{\\p { v}}{\\p y})\\),\nwhere if \\(d = 3\\) the \\(\\nabla{ v} . \\nabla u  =  (\\frac{\\p u}{\\p x}\\frac{\\p { v}}{\\p x}+\\frac{\\p u}{\\p y}\\frac{\\p { v}}{\\p y} + \\frac{\\p u}{\\p z}\\frac{\\p { v}}{\\p z})\\),\nand where \\(\\mathbf{n}\\) is the unitary outer-pointing normal of the \\(\\Gamma\\).\nNow we note that \\(\\kappa \\frac{ \\p u}{\\p n}  =  - a u + b\\) on \\(\\Gamma_r\\) and \\(v = 0\\) on \\(\\Gamma_d\\) and \\(\\Gamma  =  \\Gamma_d \\cup \\Gamma_n\\) thus:\n\n\\[- \\int_{\\Gamma} {v}\n\\kappa \\frac{ \\p u}{\\p n}  =  \\int_{\\Gamma_r} a u v - \\int_{\\Gamma_r} b v\\]\nThe problem becomes:\nFind \\(u \\in V_g  =  \\{w \\in H^1(\\Omega) / w  =  g \\mbox{ on } \\Gamma_d \\}\\) such that:\n\n(23)¶\\[{\\int_{\\Omega} \\kappa \\nabla{ v} . \\nabla u \\,d\\omega + \\int_{\\Gamma_r} a u v \\,d\\gamma  =  \\int_{\\Omega} f {v}} \\,d\\omega\n+ \\int_{\\Gamma_r} b v \\,d\\gamma , \\quad \\forall v \\in V_0\\]\nwhere \\(V_0  =  \\{v \\in H^1(\\Omega) / v  =  0 \\mbox{ on } \\Gamma_d \\}\\)\nExcept in the case of Neumann conditions everywhere, the problem (23) is well posed when \\(\\kappa\\geq \\kappa_0>0\\).\n\nNote\nIf we have only the Neumann boundary condition, linear algebra tells us that the right hand side must be orthogonal to the kernel of the operator for the solution to exist.\n\nOne way of writing the compatibility condition is:\n\n\\[\\int_{\\Omega} f \\,d\\omega + \\int_{\\Gamma} b \\,d\\gamma = 0\\]\nand a way to fix the constant is to solve for \\(u \\in H^1(\\Omega)\\) such that:\n\n\\[{\\int_{\\Omega} (\\varepsilon u v \\; + \\; \\kappa \\nabla{ v} . \\nabla u) \\,d\\omega\n =  \\int_{\\Omega} f {v}} \\,d\\omega + \\int_{\\Gamma_r} b v \\,d\\gamma , \\quad \\forall v \\in H^1(\\Omega)\\]\nwhere \\(\\varepsilon\\) is a small parameter (\\(\\sim \\kappa\\; 10^{-10} |\\Omega|^{\\frac2d}\\)).\n\nRemark that if the solution is of order \\(\\frac{1}{\\varepsilon}\\) then the compatibility condition is unsatisfied, otherwise we get the solution such that \\(\\int_\\Omega u  =  0\\), you can also add a Lagrange multiplier to solve the real mathematical problem like in the Lagrange multipliers example.\n\nIn FreeFEM, the bidimensional problem (23) becomes:\n 1 problem Pw (u, v)\n 2      =  int2d(Th)( //int_{Omega} kappa nabla v . nabla u\n 3         kappa*(dx(u)*dx(v) + dy(u)*dy(v))\n 4     )\n 5     + int1d(Th, gn)( //int_{Gamma_r} a u v\n 6         a * u*v\n 7     )\n 8     - int2d(Th)( //int_{Omega} f v\n 9         f*v\n10     )\n11     - int1d(Th, gn)( //int_{Gamma_r} b v\n12         b * v\n13     )\n14     + on(gd, u = g) //u  =  g on Gamma_d\n15     ;\n\n\nwhere Th is a mesh of the bi-dimensional domain \\(\\Omega\\), and gd and gn are respectively the boundary labels of boundary \\(\\Gamma_d\\) and \\(\\Gamma_n\\).\nAnd the three dimensional problem (23) becomes\n 1 macro Grad(u) [dx(u), dy(u), dz(u) ]//\n 2 problem Pw (u, v)\n 3      =  int3d(Th)( //int_{Omega} kappa nabla v . nabla u\n 4         kappa*(Grad(u)'*Grad(v))\n 5     )\n 6     + int2d(Th, gn)( //int_{Gamma_r} a u v\n 7         a * u*v\n 8     )\n 9     - int3d(Th)( //int_{Omega} f v\n10         f*v\n11     )\n12     - int2d(Th, gn)( //int_{Gamma_r} b v\n13         b * v\n14     )\n15     + on(gd, u = g) //u  =  g on Gamma_d\n16     ;\n\n\nwhere Th is a mesh of the three dimensional domain \\(\\Omega\\), and gd and gn are respectively the boundary labels of boundary \\(\\Gamma_d\\) and \\(\\Gamma_n\\).\n\n\n\nParameters affecting solve and problem¶\nThe parameters are FE functions real or complex, the number \\(n\\) of parameters is even (\\(n = 2*k\\)), the \\(k\\) first function parameters are unknown, and the \\(k\\) last are test functions.\n\nNote\nIf the functions are a part of vectorial FE then you must give all the functions of the vectorial FE in the same order (see Poisson problem with mixed finite element for example).\n\n\nNote\nDon’t mix complex and real parameters FE function.\n\n\nWarning\nBug:\nThe mixing of multiple fespace with different periodic boundary conditions are not implemented.\nSo all the finite element spaces used for tests or unknown functions in a problem, must have the same type of periodic boundary conditions or no periodic boundary conditions.\nNo clean message is given and the result is unpredictable.\n\nThe parameters are:\n\nsolver =  LU, CG, Crout,  Cholesky, GMRES, sparsesolver, UMFPACK …\n\nThe default solver is sparsesolver (it is equal to UMFPACK if no other sparse solver is defined) or is set to LU if no direct sparse solver is available.\nThe storage mode of the matrix of the underlying linear system depends on the type of solver chosen; for LU the matrix is sky-line non symmetric, for Crout the matrix is sky-line symmetric, for Cholesky the matrix is sky-line symmetric positive definite, for CG the matrix is sparse symmetric positive, and for GMRES, sparsesolver or UMFPACK the matrix is just sparse.\n\n\neps =  a real expression.\n\n\\(\\varepsilon\\) sets the stopping test for the iterative methods like CG.\nNote that if \\(\\varepsilon\\) is negative then the stopping test is:\n\n\\[|| A x - b || < |\\varepsilon|\\]\nif it is positive, then the stopping test is:\n\n\\[|| A x - b || < \\frac{|\\varepsilon|}{|| A x_{0} - b ||}\\]\n\n\ninit =  boolean expression, if it is false or 0 the matrix is reconstructed.\n\nNote that if the mesh changes the matrix is reconstructed too.\n\n\nprecon =  name of a function (for example P) to set the preconditioner.\n\nThe prototype for the function P must be:\n1 func real[int] P(real[int] & xx);\n\n\n\n\ntgv =  Huge value (\\(10^{30}\\)) used to implement Dirichlet boundary conditions.\ntolpivot =  sets the tolerance of the pivot in UMFPACK (\\(10^{-1}\\)) and, LU, Crout, Cholesky factorisation (\\(10^{-20}\\)).\ntolpivotsym =  sets the tolerance of the pivot sym in UMFPACK\nstrategy =  sets the integer UMFPACK strategy (\\(0\\) by default).\n\n\n\nProblem definition¶\nBelow v is the unknown function and w is the test function.\nAfter the “ = ” sign, one may find sums of:\n\nIdentifier(s); this is the name given earlier to the variational form(s) (type varf ) for possible reuse.\n\nRemark, that the name in the varf of the unknown test function is forgotten, we use the order in the argument list to recall names as in a C++ function,\n\n\nThe terms of the bilinear form itself: if \\(K\\) is a given function,\nBilinear part for 3D meshes Th\n\n\nint3d(Th)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T } K\\,v\\,w\\)\nint3d(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}\\int_{T} K\\,v\\,w\\)\nint3d(Th, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi<0} K\\,v\\,w\\)\nint3d(Th, l, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{l}}\\int_{T,\\phi<0} K\\,v\\,w\\)\nint2d(Th, 2, 5)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap ( \\Gamma_2 \\cup \\Gamma_{5})} K\\,v\\,w\\)\nint2d(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}\\int_{T} K\\,v\\,w\\)\nint2d(Th, 2, 5)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap (\\Gamma_2 \\cup \\Gamma_{5})} K\\,v\\,w\\)\nint2d(Th, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi = 0} K\\,v\\,w\\)\nint2d(Th, l, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{l}}\\int_{T,\\phi = 0} K\\,v\\,w\\)\nintallfaces(Th)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{\\p T } K\\,v\\,w\\)\nintallfaces(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}}\\int_{\\p T } K\\,v\\,w\\)\nThey contribute to the sparse matrix of type matrix which, whether declared explicitly or not, is constructed by FreeFEM.\n\n\n\nBilinear part for 2D meshes Th\n\n\nint2d(Th)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T } K\\,v\\,w\\)\nint2d(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}\\int_{T} K\\,v\\,w\\)\nint2d(Th, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi<0} K\\,v\\,w\\)\nint2d(Th, l, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{l}}\\int_{T,\\phi<0} K\\,v\\,w\\)\nint1d(Th, 2, 5)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap ( \\Gamma_2 \\cup \\Gamma_{5})} K\\,v\\,w\\)\nint1d(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}\\int_{T} K\\,v\\,w\\)\nint1d(Th, 2, 5)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap ( \\Gamma_2 \\cup \\Gamma_{5})} K\\,v\\,w\\)\nint1d(Th, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi = 0} K\\,v\\,w\\)\nint1d(Th, l, levelset = phi)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{l}}\\int_{T,\\phi = 0} K\\,v\\,w\\)\nintalledges(Th)(K*v*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{\\p T } K\\,v\\,w\\)\nintalledges(Th, 1)(K*v*w)  =  \\(\\displaystyle\\sum_{{T\\in\\mathtt{Th},T\\subset \\Omega_{1}}}\\int_{\\p T } K\\,v\\,w\\)\nThey contribute to the sparse matrix of type matrix which, whether declared explicitly or not, is constructed by FreeFEM.\nThe right hand-side of the Partial Differential Equation in 3D, the terms of the linear form: for given functions \\(K,\\, f\\):\nint3d(Th)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T} K\\,w\\)\nint3d(Th, l)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\in\\Omega_l}\\int_{T} K\\,w\\)\nint3d(Th, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi<0} K\\,w\\)\nint3d(Th, l, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset\\Omega_{l}}\\int_{T,\\phi<0} K\\,w\\)\nint2d(Th, 2, 5)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap ( \\Gamma_2 \\cup \\Gamma_{5}) } K \\,w\\)\nint2d(Th, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi = 0} K\\,w\\)\nint2d(Th, l, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset \\Omega_{l}}\\int_{T,\\phi = 0} K\\,w\\)\nintallfaces(Th)(f*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{\\p T } f\\,w\\)\nA vector of type real[int]\n\n\n\nThe right hand-side of the Partial Differential Equation in 2D, the terms of the linear form: for given functions \\(K,\\, f\\):\n\n\nint2d(Th)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T} K\\,w\\)\nint2d(Th, l)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\in\\Omega_l}\\int_{T} K\\,w\\)\nint2d(Th, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi<0} K\\,w\\)\nint2d(Th, l, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset\\Omega_{l}}\\int_{T,\\phi<0} K\\,w\\)\nint1d(Th, 2, 5)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{(\\p T\\cup\\Gamma) \\cap ( \\Gamma_2 \\cup \\Gamma_{5}) } K \\,w\\)\nint1d(Th, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{T,\\phi = 0} K\\,w\\)\nint1d(Th, l, levelset = phi)(K*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th},T\\subset\\Omega_{l}}\\int_{T,\\phi = 0} K\\,w\\)\nintalledges(Th)(f*w)  =  \\(\\displaystyle\\sum_{T\\in\\mathtt{Th}}\\int_{\\p T } f\\,w\\)\na vector of type real[int]\n\n\n\nThe boundary condition terms:\n\n\nAn “on” scalar form (for Dirichlet) : on(1, u = g)\n\nUsed for all degrees of freedom \\(i\\) of the boundary referred by “1”, the diagonal term of the matrix \\(a_{ii} =  tgv\\) with the terrible giant value tgv ( =  \\(10^{30}\\) by default), and the right hand side \\(b[i]  =  \"(\\Pi_h g)[i]\" \\times tgv\\), where the \\(\"(\\Pi_h g)g[i]\"\\) is the boundary node value given by the interpolation of \\(g\\).\n\n\nA linear form on \\(\\Gamma\\) (for Neumann in 2d) -int1d(Th)(f*w) or -int1d(Th, 3)(f*w)\nA bilinear form on \\(\\Gamma\\) or \\(\\Gamma_{2}\\) (for Robin in 2d) int1d(Th)(K*v*w) or int1d(Th,2)(K*v*w)\nA linear form on \\(\\Gamma\\) (for Neumann in 3d) -int2d(Th)(f*w) or -int2d(Th, 3)(f*w)\nA bilinear form on \\(\\Gamma\\) or \\(\\Gamma_{2}\\) (for Robin in 3d) int2d(Th)(K*v*w) or int2d(Th,2)(K*v*w)\n\n\n\n\n\nNote\n\nAn “on” vectorial form (for Dirichlet): on(1, u1 = g1, u2 = g2)\n\nIf you have vectorial finite element like RT0, the 2 components are coupled, and so you have : \\(b[i]  =  \"(\\Pi_h (g1,g2))[i]\" \\times tgv\\), where \\(\\Pi_h\\) is the vectorial finite element interpolant.\n\nAn “on” vectorial form (for Dirichlet):   on(u = g, tgv =  none positive value  ) ,\n\n\nif the value is equal to -2 (i.e tgv  =  =  -2 `) then   we put to :math:`0 all term of the line and colomn  \\(i\\) in the matrix, except diagonal term \\(a_{ii} = 1\\), and \\(b[i]  =  \"(\\Pi_h g)[i]\"\\)\nelse if the value is equal to  -20 (i.e tgv  =  =  -20 `) then   we put to :math:`0 all term of the line and colomn  \\(i\\) in the matrix, and \\(b[i]  =  \"(\\Pi_h g)[i]\"\\)\nelse if the value is equal to -10 (i.e tgv  =  =  -10 `) then   we put to :math:`0 all term of the line the matrix, and \\(b[i]  =  \"(\\Pi_h g)[i]\"\\)\nelse  (i.e tgv  =  =  -1 `) we put to :math:`0 all term of the line \\(i\\) in the matrix, except diagonal term \\(a_{ii} = 1\\), and \\(b[i]  =  \"(\\Pi_h g)[i]\"\\).\n\n\nIf needed, the different kind of terms in the sum can appear more than once.\nThe integral mesh and the mesh associated to test functions or unknown functions can be different in the case of varf form.\nN.x, N.y and N.z are the normal’s components.\nNs.x, Ns.y and Ns.z are the normal’s components of the suface in case of meshS integral\nTl.x, Tl.y and Tl.z are the tangent’s components of the line  in case of meshL integral\n\n\n\nWarning\nIt is not possible to write in the same integral the linear part and the bilinear part such as in int1d(Th)(K*v*w - f*w).\n\n\n\nNumerical Integration¶\nLet \\(D\\) be a \\(N\\)-dimensional bounded domain.\nFor an arbitrary polynomial \\(f\\) of degree \\(r\\), if we can find particular (quadrature) points \\(\\mathbf{\\xi}_j,\\, j = 1,\\cdots,J\\) in \\(D\\) and (quadrature) constants \\(\\omega_j\\) such that\n\n\\[\\int_{D}f(\\mathbf{x})  =  \\sum_{\\ell  = 1}^L c_\\ell f(\\mathbf{\\xi}_\\ell)\\]\nthen we have an error estimate (see [CROUZEIX1984]), and then there exists a constant \\(C>0\\) such that\n\n\\[\\left|\\int_{D}f(\\mathbf{x}) - \\sum_{\\ell  = 1}^L \\omega_\\ell\nf(\\mathbf{\\xi}_\\ell )\\right|\n\\le C|D|h^{r+1}\\]\nfor any function \\(r + 1\\) times continuously differentiable \\(f\\) in \\(D\\), where \\(h\\) is the diameter of \\(D\\) and \\(|D|\\) its measure (a point in the segment \\([q^iq^j]\\) is given as\n\n\\[\\{(x,y)|\\; x = (1-t)q^i_x+tq^j_x,\\, y = (1-t)q^i_y+tq^j_y,\\, 0\\le t\\le 1\\}\\]\nFor a domain \\(\\Omega_h = \\sum_{k = 1}^{n_t}T_k,\\, \\mathcal{T}_h = \\{T_k\\}\\), we can calculate the integral over \\(\\Gamma_h = \\p\\Omega_h\\) by:\n\\(\\int_{\\Gamma_h}f(\\mathbf{x})ds\\)  = int1d(Th)(f)\n = int1d(Th, qfe = *)(f)\n = int1d(Th, qforder = *)(f)\nwhere * stands for the name of the quadrature formula or the precision (order) of the Gauss formula.\n\n\n\n\n\n\n\n\n\n\nQuadrature formula on an edge\n\n\\(L\\)\nqfe\nqforder\nPoint in \\([q^i, q^j]\\)\n\\(\\omega_\\ell\\)\nExact on \\(P_k,\\ k = \\)\n\n\n\n\\(1\\)\nqf1pE\n\\(2\\)\n\\(1/2\\)\n\\(||q^iq^j||\\)\n\\(1\\)\n\n\\(2\\)\nqf2pE\n\\(3\\)\n\\((1\\pm\\sqrt{1/3})/2\\)\n\\(||q^iq^j||/2\\)\n\\(3\\)\n\n\\(3\\)\nqf3pE\n\\(6\\)\n\\((1\\pm\\sqrt{3/5})/2\\)\n\\(1/2\\)\n\n\\((5/18)||q^iq^j||\\)\n\\((8/18)||q^iq^j||\\)\n\n\\(5\\)\n\n\\(4\\)\nqf4pE\n\\(8\\)\n\\((1\\pm\\frac{525+70\\sqrt{30}}{35})/2\\)\n\\((1\\pm\\frac{525-70\\sqrt{30}}{35})/2\\)\n\n\\(\\frac{18-\\sqrt{30}}{72}||q^iq^j||\\)\n\\(\\frac{18+\\sqrt{30}}{72}||q^iq^j||\\)\n\n\\(7\\)\n\n\\(5\\)\nqf5pE\n\\(10\\)\n\\((1\\pm\\frac{245+14\\sqrt{70}}{21})/2\\)\n\\(1/2\\)\n\\((1\\pm\\frac{245-14\\sqrt{70}}{21})/2\\)\n\n\\(\\frac{322-13\\sqrt{70}}{1800}||q^iq^j||\\)\n\\(\\frac{64}{225}||q^iq^j||\\)\n\\(\\frac{322+13\\sqrt{70}}{1800}||q^iq^j||\\)\n\n\\(9\\)\n\n\\(2\\)\nqf1pElump\n\\(2\\)\n\\(0\\)\n\\(1\\)\n\n\\(||q^iq^j||/2\\)\n\\(||q^iq^j||/2\\)\n\n\\(1\\)\n\n\n\nwhere \\(|q^iq^j|\\) is the length of segment \\(\\overline{q^iq^j}\\).\nFor a part \\(\\Gamma_1\\) of \\(\\Gamma_h\\) with the label “1”, we can calculate the integral over \\(\\Gamma_1\\) by:\n\\(\\int_{\\Gamma_1}f(x,y)ds\\)  = int1d(Th, 1)(f)\n = int1d(Th, 1, qfe = qf2pE)(f)\nThe integrals over \\(\\Gamma_1,\\, \\Gamma_3\\) are given by:\n\\(\\int_{\\Gamma_1\\cup \\Gamma_3}f(x,y)ds\\)\nFor each triangle \\(T_k = [q^{k_1}q^{k_2}q^{k_3}]\\), the point \\(P(x,y)\\) in \\(T_k\\) is expressed by the area coordinate as \\(P(\\xi,\\eta)\\):\n\n\\[\\begin{split}&|T_k| = \\frac12 \\left|\n\\begin{array}{ccc}\n    1&q^{k_1}_x&q^{k_1}_y\\\\\n    1&q^{k_2}_x&q^{k_2}_y\\\\\n    1&q^{k_3}_x&q^{k_3}_y\n\\end{array}\n\\right|\\quad\nD_1 = \\left|\n\\begin{array}{ccc}\n    1&x&y\\\\\n    1&q^{k_2}_x&q^{k_2}_y\\\\\n    1&q^{k_3}_x&q^{k_3}_y\n\\end{array}\n\\right|\n\\quad\nD_2 = \\left|\n\\begin{array}{ccc}\n    1&q^{k_1}_x&q^{k_1}_y\\\\\n    1&x&y\\\\\n    1&q^{k_3}_x&q^{k_3}_y\n\\end{array}\n\\right|\n\\quad\nD_3 = \\left|\n\\begin{array}{ccc}\n    1&q^{k_1}_x&q^{k_1}_y\\\\\n    1&q^{k_2}_x&q^{k_2}_y\\\\\n    1&x&y\n\\end{array}\n\\right|\\\\\n&\\xi = \\frac12 D_1/|T_k|\\qquad\n\\eta = \\frac12 D_2/|T_k|\\qquad \\textrm{then }\n1-\\xi-\\eta = \\frac12 D_3/|T_k|\\end{split}\\]\nFor a two dimensional domain or a border of three dimensional domain \\(\\Omega_h = \\sum_{k = 1}^{n_t}T_k,\\, \\mathcal{T}_h = \\{T_k\\}\\), we can calculate the integral over \\(\\Omega_h\\) by:\n\\(\\int_{\\Omega_h}f(x,y)\\)  = int2d(Th)(f)\n = int2d(Th, qft = *)(f)\n = int2d(Th, qforder = *)(f)\nwhere * stands for the name of quadrature formula or the order of the Gauss formula.\n\n\n\n\n\n\n\n\n\n\nQuadrature formula on a triangle\n\n\\(L\\)\nqft\nqforder\nPoint in \\(T_k\\)\n\\(\\omega_\\ell\\)\nExact on \\(P_k,\\ k = \\)\n\n\n\n1\nqf1pT\n2\n\\(\\left(\\frac{1}{3},\\frac{1}{3}\\right)\\)\n\\(|T_k|\\)\n\\(1\\)\n\n3\nqf2pT\n3\n\\(\\left(\\frac{1}{2},\\frac{1}{2}\\right)\\)\n\\(\\left(\\frac{1}{2},0\\right)\\)\n\\(\\left(0,\\frac{1}{2}\\right)\\)\n\n\\(|T_k|/3\\)\n\\(|T_k|/3\\)\n\\(|T_k|/3\\)\n\n\\(2\\)\n\n7\nqf5pT\n6\n\\(\\left(\\frac{1}{3},\\frac{1}{3}\\right)\\)\n\\(\\left(\\frac{6-\\sqrt{15}}{21},\\frac{6-\\sqrt{15}}{21}\\right)\\)\n\\(\\left(\\frac{6-\\sqrt{15}}{21},\\frac{9+2\\sqrt{15}}{21}\\right)\\)\n\\(\\left(\\frac{9+2\\sqrt{15}}{21},\\frac{6-\\sqrt{15}}{21}\\right)\\)\n\\(\\left(\\frac{6+\\sqrt{15}}{21},\\frac{6+\\sqrt{15}}{21}\\right)\\)\n\\(\\left(\\frac{6+\\sqrt{15}}{21},\\frac{9-2\\sqrt{15}}{21}\\right)\\)\n\\(\\left(\\frac{9-2\\sqrt{15}}{21},\\frac{6+\\sqrt{15}}{21}\\right)\\)\n\n\\(0.225|T_k|\\)\n\\(\\frac{(155-\\sqrt{15})|T_k|}{1200}\\)\n\\(\\frac{(155-\\sqrt{15})|T_k|}{1200}\\)\n\\(\\frac{(155-\\sqrt{15})|T_k|}{1200}\\)\n\\(\\frac{(155+\\sqrt{15})|T_k|}{1200}\\)\n\\(\\frac{(155+\\sqrt{15})|T_k|}{1200}\\)\n\\(\\frac{(155+\\sqrt{15})|T_k|}{1200}\\)\n\n\\(5\\)\n\n3\nqf1pTlump\n\n\\(\\left(0,0\\right)\\)\n\\(\\left(1,0\\right)\\)\n\\(\\left(0,1\\right)\\)\n\n\\(|T_k|/3\\)\n\\(|T_k|/3\\)\n\\(|T_k|/3\\)\n\n\\(1\\)\n\n9\nqf2pT4P1\n\n\\(\\left(\\frac{1}{4},\\frac{3}{4}\\right)\\)\n\\(\\left(\\frac{3}{4},\\frac{1}{4}\\right)\\)\n\\(\\left(0,\\frac{1}{4}\\right)\\)\n\\(\\left(0,\\frac{3}{4}\\right)\\)\n\\(\\left(\\frac{1}{4},0\\right)\\)\n\\(\\left(\\frac{3}{4},0\\right)\\)\n\\(\\left(\\frac{1}{4},\\frac{1}{4}\\right)\\)\n\\(\\left(\\frac{1}{4},\\frac{1}{2}\\right)\\)\n\\(\\left(\\frac{1}{2},\\frac{1}{4}\\right)\\)\n\n\\(|T_k|/12\\)\n\\(|T_k|/12\\)\n\\(|T_k|/12\\)\n\\(|T_k|/12\\)\n\\(|T_k|/12\\)\n\\(|T_k|/12\\)\n\\(|T_k|/6\\)\n\\(|T_k|/6\\)\n\\(|T_k|/6\\)\n\n\\(1\\)\n\n15\nqf7pT\n8\nSee [TAYLOR2005] for detail\n\n7\n\n21\nqf9pT\n10\nSee [TAYLOR2005] for detail\n\n9\n\n\n\nFor a three dimensional domain \\(\\Omega_h = \\sum_{k = 1}^{n_t}T_k,\\, \\mathcal{T}_h = \\{T_k\\}\\), we can calculate the integral over \\(\\Omega_h\\) by:\n\\(\\int_{\\Omega_h}f(x,y)\\)  = int3d(Th)(f)\n = int3d(Th,qfV = *)(f)\n = int3D(Th,qforder = *)(f)\nwhere * stands for the name of quadrature formula or the order of the Gauss formula.\n\n\n\n\n\n\n\n\n\n\nQuadrature formula on a tetrahedron\n\n\\(L\\)\nqfV\nqforder\nPoint in \\(T_k\\in\\R^3\\)\n\\(\\omega_\\ell\\)\nExact on \\(P_k,\\ k = \\)\n\n\n\n1\nqfV1\n\\(2\\)\n\\(\\left(\\frac{1}{4},\\frac{1}{4},\\frac{1}{4}\\right)\\)\n\\(|T_k|\\)\n\\(1\\)\n\n4\nqfV2\n\\(3\\)\n\\(G4(0.58\\ldots,0.13\\ldots,0.13\\ldots)\\)\n\\(|T_k|/4\\)\n\\(2\\)\n\n14\nqfV5\n\\(6\\)\n\\(G4(0.72\\ldots,0.092\\ldots,0.092\\ldots)\\)\n\\(G4(0.067\\ldots,0.31\\ldots,0.31\\ldots)\\)\n\\(G6(0.45\\ldots,0.045\\ldots,0.45\\ldots)\\)\n\n\\(0.073\\ldots|T_k|\\)\n\\(0.11\\ldots|T_k|\\)\n\\(0.042\\ldots|T_k|\\)\n\n\\(5\\)\n\n4\nqfV1lump\n\n\\(G4(1,0,0)\\)\n\\(|T_k|/4\\)\n\\(1\\)\n\n\n\nWhere \\(G4(a,b,b)\\) such that \\(a+3b = 1\\) is the set of the four point in barycentric coordinate:\n\n\\[\\{(a,b,b,b),(b,a,b,b),(b,b,a,b),(b,b,b,a)\\}\\]\nand where \\(G6(a,b,b)\\) such that \\(2a+2b = 1\\) is the set of the six points in barycentric coordinate:\n\n\\[\\{(a,a,b,b),(a,b,a,b),(a,b,b,a),(b,b,a,a),(b,a,b,a),(b,a,a,b)\\}\\]\n\nNote\nThese tetrahedral quadrature formulae come from http://nines.cs.kuleuven.be/research/ecf/mtables.html\n\n\nNote\nBy default, we use the formula which is exact for polynomials of degree \\(5\\) on triangles or edges (in bold in three tables).\n\nIt is possible to add an own quadrature formulae with using plugin qf11to25 on segment, triangle or Tetrahedron.\nThe quadrature formulae in \\(D\\) dimension is a bidimentional array of size \\(N_q\\times (D+1)\\) such that the \\(D+1\\) value of on row \\(i = 0,...,N_p-1\\) are \\(w^i,\\hat{x}^i_1,...,\\hat{x}^i_D\\) where \\(w^i\\) is the weight of the quadrature point, and \\(1-\\sum_{k = 1}^D \\hat{x}^i_k ,\\hat{x}^i_1,...,\\hat{x}^i_D\\) is the barycentric coordinate the quadrature point.\n 1 load \"qf11to25\"\n 2 \n 3 // Quadrature on segment\n 4 real[int, int] qq1  =  [\n 5     [0.5, 0],\n 6     [0.5, 1]\n 7 ];\n 8 \n 9 QF1 qf1(1, qq1); //def of quadrature formulae qf1 on segment\n10 //remark:\n11 //1 is the order of the quadrature exact for polynome of degree < 1\n12 \n13 //Quadrature on triangle\n14 real[int, int] qq2  =  [\n15     [1./3., 0, 0],\n16     [1./3., 1, 0],\n17     [1./3., 0, 1]\n18 ];\n19 \n20 QF2 qf2(1, qq2); //def of quadrature formulae qf2 on triangle\n21 //remark:\n22 //1 is the order of the quadrature exact for polynome of degree < 1\n23 //so must have sum w^i  =  1\n24 \n25 // Quadrature on tetrahedron\n26 real[int, int] qq3  =  [\n27     [1./4., 0, 0, 0],\n28     [1./4., 1, 0, 0],\n29     [1./4., 0, 1, 0],\n30     [1./4., 0, 0, 1]\n31 ];\n32 \n33 QF3 qf3(1, qq3); //def of quadrature formulae qf3 on get\n34 //remark:\n35 //1 is the order of the quadrature exact for polynome of degree < 1)\n36 \n37 // Verification in 1d and 2d\n38 mesh Th  =  square(10, 10);\n39 \n40 real I1  =  int1d(Th, qfe = qf1)(x^2);\n41 real I1l  =  int1d(Th, qfe = qf1pElump)(x^2);\n42 \n43 real I2  =  int2d(Th, qft = qf2)(x^2);\n44 real I2l  =  int2d(Th, qft = qf1pTlump)(x^2);\n45 \n46 cout << I1 << \"  =  =  \" << I1l << endl;\n47 cout << I2 << \"  =  =  \" << I2l << endl;\n48 assert( abs(I1-I1l) < 1e-10 );\n49 assert( abs(I2-I2l) < 1e-10 );\n\n\nThe output is\n1 1.67  =  =  1.67\n2 0.335  =  =  0.335\n\n\n\n\nVariational Form, Sparse Matrix, PDE Data Vector¶\nIn FreeFEM it is possible to define variational forms, and use them to build matrices and vectors, and store them to speed-up the script (4 times faster here).\nFor example let us solve the Thermal Conduction problem.\nThe variational formulation is in \\(L^2(0,T;H^1(\\Omega))\\); we shall seek \\(u^n\\) satisfying:\n\n\\[\\forall w \\in V_{0}; \\qquad \\int_\\Omega \\frac{u^n-u^{n-1}}{\\delta t} w + \\kappa\\n u^n\\n w) +\\int_\\Gamma\\alpha(u^n-u_{ue})w = 0\\]\nwhere \\(V_0  =  \\{w\\in H^1(\\Omega)/ w_{|\\Gamma_{24}} = 0\\}\\).\nSo to code the method with the matrices \\(A = (A_{ij})\\), \\(M = (M_{ij})\\), and the vectors \\(u^n, b^n, b',b\", b_{cl}\\) (notation if \\(w\\) is a vector then \\(w_i\\) is a component of the vector).\n\n\\[\\begin{split}u^n  =  A^{-1} b^n, \\quad\n\\quad b'  =  b_0 + M u^{n-1},\n\\quad b\" =  \\frac{1}{\\varepsilon} \\; b_{cl},\n\\quad b^n_i  =  \\left\\{\n\\begin{array}{cl} b\"_i & \\mbox{if }\\ i \\in \\Gamma_{24} \\\\\nb'_i & \\mbox{else if } \\not\\in \\Gamma_{24} \\end{array}\\right.\\end{split}\\]\nWhere with \\(\\frac{1}{\\varepsilon}  =  \\mathtt{tgv}  =  10^{30}\\):\n\n\\[\\begin{split}\\begin{array}{rcl}\n    A_{ij} & = & \\left\\{\\begin{array}{cl} \\frac{1}{\\varepsilon} & \\mbox{if } i \\in \\Gamma_{24}, \\mbox{and} j = i \\\\\n    \\displaystyle\n        \\int_{\\Omega} w_j w_i / dt + k (\\nabla w_j. \\nabla w_i ) + \\int_{\\Gamma_{13}} \\alpha w_j w_i & \\mbox{else if } i \\not\\in \\Gamma_{24}, \\mbox{or} j\\ne i\n        \\end{array}\\right.\\\\\n        M_{ij} & = & \\left\\{\\begin{array}{cl} \\frac{1}{\\varepsilon} & \\mbox{if } i \\in \\Gamma_{24}, \\mbox{and} j = i\\\\\n    \\displaystyle\n        \\int_{\\Omega} w_j w_i / dt\n        & \\mbox{else if }i \\not\\in \\Gamma_{24}, \\mbox{or} j\\ne i \\end{array}\\right. \\\\\n        b_{0,i} & = & \\int_{\\Gamma_{13}} \\alpha u_{ue} w_i \\\\\n        b_{cl} & = & u^{0} \\quad \\mbox{the initial data}\n\\end{array}\\end{split}\\]\n 1 // Parameters\n 2 func fu0  =  10 + 90*x/6;\n 3 func k  =  1.8*(y<0.5) + 0.2;\n 4 real ue  =  25.;\n 5 real alpha  =  0.25;\n 6 real T  =  5;\n 7 real dt  =  0.1 ;\n 8 \n 9 // Mesh\n10 mesh Th  =  square(30, 5, [6*x, y]);\n11 \n12 // Fespace\n13 fespace Vh(Th, P1);\n14 Vh u0  =  fu0, u  =  u0;\n\n\nCreate three variational formulation, and build the matrices \\(A\\),\\(M\\).\n 1 // Problem\n 2 varf vthermic (u, v)\n 3      =  int2d(Th)(\n 4         u*v/dt\n 5         + k*(dx(u)*dx(v) + dy(u)*dy(v))\n 6     )\n 7     + int1d(Th, 1, 3)(\n 8         alpha*u*v\n 9     )\n10     + on(2, 4, u = 1)\n11     ;\n12 \n13 varf vthermic0 (u, v)\n14      =  int1d(Th, 1, 3)(\n15         alpha*ue*v\n16     )\n17     ;\n18 \n19 varf vMass (u, v)\n20      =  int2d(Th)(\n21         u*v/dt\n22     )\n23     + on(2, 4, u = 1)\n24     ;\n25 \n26 real tgv  =  1e30;\n27 matrix A  =  vthermic(Vh, Vh, tgv = tgv, solver = CG);\n28 matrix M  =  vMass(Vh, Vh);\n\n\nNow, to build the right hand size we need 4 vectors.\n1 real[int] b0  =  vthermic0(0, Vh); //constant part of the RHS\n2 real[int] bcn  =  vthermic(0, Vh); //tgv on Dirichlet boundary node ( ! = 0 )\n3 //we have for the node i : i in Gamma_24 -> bcn[i] ! =  0\n4 real[int] bcl  =  tgv*u0[]; //the Dirichlet boundary condition part\n\n\n\nNote\nThe boundary condition is implemented by penalization and vector bcn contains the contribution of the boundary condition \\(u = 1\\), so to change the boundary condition, we have just to multiply the vector bcn[] by the current value f of the new boundary condition term by term with the operator .*.\nUzawa model gives a real example of using all this features.\n\nAnd the new version of the algorithm is now:\n 1 // Time loop\n 2 ofstream ff(\"thermic.dat\");\n 3 for(real t  =  0; t < T; t + =  dt){\n 4     // Update\n 5     real[int] b  =  b0; //for the RHS\n 6     b + =  M*u[]; //add the the time dependent part\n 7     //lock boundary part:\n 8     b  =  bcn ? bcl : b; //do forall i: b[i]  =  bcn[i] ? bcl[i] : b[i]\n 9 \n10     // Solve\n11     u[]  =  A^-1*b;\n12 \n13     // Save\n14     ff << t << \" \" << u(3, 0.5) << endl;\n15 \n16     // Plot\n17     plot(u);\n18 }\n19 \n20 // Display\n21 for(int i  =  0; i < 20; i++)\n22     cout << dy(u)(6.0*i/20.0, 0.9) << endl;\n23 \n24 // Plot\n25 plot(u, fill = true, wait = true);\n\n\n\nNote\nThe functions appearing in the variational form are formal and local to the varf definition, the only important thing is the order in the parameter list, like in:\n1 varf vb1([u1, u2], q)  =  int2d(Th)((dy(u1) + dy(u2))*q) + int2d(Th)(1*q);\n2 varf vb2([v1, v2], p)  =  int2d(Th)((dy(v1) + dy(v2))*p) + int2d(Th)(1*p);\n\n\n\nTo build matrix \\(A\\) from the bilinear part the variational form \\(a\\) of type varf simply write:\n1 A  =  a(Vh, Wh , []...]);\n2 // where\n3 //Vh is \"fespace\" for the unknown fields with a correct number of component\n4 //Wh is \"fespace\" for the test fields with a correct number of component\n\n\nPossible named parameters in , [...] are\n\nsolver =  LU, CG, Crout, Cholesky, GMRES, sparsesolver, UMFPACK …\n\nThe default solver is GMRES.\nThe storage mode of the matrix of the underlying linear system depends on the type of solver chosen; for LU the matrix is sky-line non symmetric, for Crout the matrix is sky-line symmetric, for Cholesky the matrix is sky-line symmetric positive definite, for CG the matrix is sparse symmetric positive, and for GMRES, sparsesolver or UMFPACK the matrix is just sparse.\n\n\nfactorize  =  If true then do the matrix factorization for LU, Cholesky or Crout, the default value is false.\neps =  A real expression.\n\n\\(\\varepsilon\\) sets the stopping test for the iterative methods like CG.\nNote that if \\(\\varepsilon\\) is negative then the stopping test is:\n\n\\[|| A x - b || < |\\varepsilon|\\]\nif it is positive then the stopping test is\n\n\\[|| A x - b || < \\frac{|\\varepsilon|}{|| A x_{0} - b ||}\\]\n\n\nprecon =  Name of a function (for example P) to set the preconditioner.\nThe prototype for the function P must be:\n1 func real[int] P(real[int] & xx) ;\n\n\n\ntgv =  Huge value (\\(10^{30}\\)) used to implement Dirichlet boundary conditions.\ntolpivot =  Set the tolerance of the pivot in UMFPACK (\\(10^-1\\)) and, LU, Crout, Cholesky factorization (\\(10^{-20}\\)).\ntolpivotsym =  Set the tolerance of the pivot sym in UMFPACK\nstrategy =  Set the integer UMFPACK strategy (\\(0\\) by default).\n\n\nNote\nThe line of the matrix corresponding to the space Wh and the column of the matrix corresponding to the space Vh.\n\nTo build the dual vector b (of type real[int]) from the linear part of the variational form a do simply:\n1 real b(Vh.ndof);\n2 b  =  a(0, Vh);\n\n\nA first example to compute the area of each triangle \\(K\\) of mesh \\(Th\\), just do:\n1 fespace Nh(Th, P0); //the space function constant / triangle\n2 Nh areaK;\n3 varf varea (unused, chiK)  =  int2d(Th)(chiK);\n4 etaK[]  =  varea(0, Ph);\n\n\nEffectively, the basic functions of space \\(Nh\\), are the characteristic function of the element of Th, and the numbering is the numeration of the element, so by construction:\n\n\\[\\mathtt{etaK}[i]  =  \\int {1}_{|K_i}  =  \\int_{K_i} 1;\\]\nNow, we can use this to compute error indicators like in example Adaptation using residual error indicator.\nFirst to compute a continuous approximation to the function \\(h\\) “density mesh size” of the mesh \\(Th\\).\n 1 fespace Vh(Th, P1);\n 2 Vh h ;\n 3 real[int] count(Th.nv);\n 4 varf vmeshsizen (u, v)  =  intalledges(Th, qfnbpE = 1)(v);\n 5 varf vedgecount (u, v)  =  intalledges(Th, qfnbpE = 1)(v/lenEdge);\n 6 \n 7 // Computation of the mesh size\n 8 count  =  vedgecount(0, Vh); //number of edge / vertex\n 9 h[]  =  vmeshsizen(0, Vh); //sum length edge / vertex\n10 h[]  =  h[]./count; //mean length edge / vertex\n\n\nTo compute error indicator for Poisson equation:\n\n\\[{\\eta_K  =  \\int_K h_K^2 |( f + \\Delta u_h)|^2 + \\int_{\\partial K} h_e |[ \\frac{\\partial u_h}{\\partial n} ]|^2 }\\]\nwhere \\(h_K\\) is size of the longest edge (hTriangle), \\(h_e\\) is the size of the current edge (lenEdge), \\(n\\) the normal.\n 1 fespace Nh(Th, P0); // the space function constant / triangle\n 2 Nh etak;\n 3 varf vetaK (unused, chiK)\n 4      =  intalledges(Th)(\n 5         chiK*lenEdge*square(jump(N.x*dx(u) + N.y*dy(u)))\n 6     )\n 7     + int2d(Th)(\n 8         chiK*square(hTriangle*(f + dxx(u) + dyy(u)))\n 9     )\n10     ;\n11 \n12 etak[]  =  vetaK(0, Ph);\n\n\nWe add automatic expression optimization by default, if this optimization creates problems, it can be removed with the keyword optimize as in the following example:\n1 varf a (u1, u2)\n2      =  int2d(Th, optimize = 0)(\n3         dx(u1)*dx(u2)\n4         + dy(u1)*dy(u2)\n5     )\n6     + on(1, 2, 4, u1 = 0)\n7     + on(3, u1 = 1)\n8     ;\n\n\nor you can also do optimization and remove the check by setting optimize = 2.\nRemark, it is all possible to build interpolation matrix, like in the following example:\n 1 mesh TH  =  square(3, 4);\n 2 mesh th  =  square(2, 3);\n 3 mesh Th  =  square(4, 4);\n 4 \n 5 fespace VH(TH, P1);\n 6 fespace Vh(th, P1);\n 7 fespace Wh(Th, P1);\n 8 \n 9 matrix B  =  interpolate(VH, Vh); //build interpolation matrix Vh->VH\n10 matrix BB  =  interpolate(Wh, Vh); //build interpolation matrix Vh->Wh\n\n\nand after some operations on sparse matrices are available for example:\n 1 int N  =  10;\n 2 real [int, int] A(N, N); //a full matrix\n 3 real [int] a(N), b(N);\n 4 A  =  0;\n 5 for (int i  =  0; i < N; i++){\n 6     A(i, i)  =  1+i;\n 7     if (i+1 < N) A(i, i+1)  =  -i;\n 8     a[i]  =  i;\n 9 }\n10 b  =  A*b;\n11 matrix sparseA  =  A;\n12 cout << sparseA << endl;\n13 sparseA  =  2*sparseA + sparseA';\n14 sparseA  =  4*sparseA + sparseA*5;\n15 matrix sparseB  =  sparseA + sparseA + sparseA; ;\n16 cout << \"sparseB  =  \" << sparseB(0,0) << endl;\n\n\n\n\nInterpolation matrix¶\nIt is also possible to store the matrix of a linear interpolation operator from a finite element space \\(V_h\\) to another \\(W_h\\) to interpolate(\\(W_h\\),\\(V_h\\),…) a function.\nNote that the continuous finite functions are extended by continuity outside of the domain.\nThe named parameters of function interpolate are:\n\ninside =  set true to create zero-extension.\nt =  set true to get the transposed matrix\nop =  set an integer written below\n\n\n0 the default value and interpolate of the function\n1 interpolate the \\(\\p_x\\)\n2 interpolate the \\(\\p_y\\)\n3 interpolate the \\(\\p_z\\)\n\n\n\nU2Vc =  set the which is the component of \\(W_h\\) come in \\(V_h\\) in interpolate process in a int array so the size of the array is number of component of \\(W_h\\), if the put \\(-1\\) then component is set to \\(0\\), like in the following example: (by default the component number is unchanged).\n\n1 fespace V4h(Th4, [P1, P1, P1, P1]);\n2 fespace V3h(Th, [P1, P1, P1]);\n3 int[int] u2vc  =  [1, 3, -1]; //-1 -> put zero on the component\n4 matrix IV34  =  interpolate(V3h, V4h, inside = 0, U2Vc = u2vc); //V3h <- V4h\n5 V4h [a1, a2, a3, a4]  =  [1, 2, 3, 4];\n6 V3h [b1, b2, b3]  =  [10, 20, 30];\n7 b1[]  =  IV34*a1[];\n\n\nSo here we have: freefem   b1  =  =  2, b2  =  =  4, b3  =  =  0 ...\n\n\n\n\nTip\nMatrix interpolation\n 1 // Mesh\n 2 mesh Th  =  square(4, 4);\n 3 mesh Th4  =  square(2, 2, [x*0.5, y*0.5]);\n 4 plot(Th, Th4, wait = true);\n 5 \n 6 // Fespace\n 7 fespace Vh(Th, P1);\n 8 Vh v, vv;\n 9 fespace Vh4(Th4, P1);\n10 Vh4 v4 = x*y;\n11 \n12 fespace Wh(Th, P0);\n13 fespace Wh4(Th4, P0);\n14 \n15 // Interpolation\n16 matrix IV  =  interpolate(Vh, Vh4); //here the function is exended by continuity\n17 cout << \"IV Vh<-Vh4 \" << IV << endl;\n18 \n19 v = v4;\n20 vv[] =  IV*v4[]; //here v  =  =  vv\n21 \n22 real[int] diff =  vv[] - v[];\n23 cout << \"|| v - vv ||  =  \" << diff.linfty << endl;\n24 assert( diff.linfty< =  1e-6);\n25 \n26 matrix IV0  =  interpolate(Vh, Vh4, inside = 1); //here the function is exended by zero\n27 cout << \"IV Vh<-Vh4 (inside = 1) \" << IV0 << endl;\n28 \n29 matrix IVt0  =  interpolate(Vh, Vh4, inside = 1, t = 1);\n30 cout << \"IV Vh<-Vh4^t (inside = 1) \" << IVt0 << endl;\n31 \n32 matrix IV4t0  =  interpolate(Vh4, Vh);\n33 cout << \"IV Vh4<-Vh^t \" << IV4t0 << endl;\n34 \n35 matrix IW4  =  interpolate(Wh4, Wh);\n36 cout << \"IV Wh4<-Wh \" << IW4 << endl;\n37 \n38 matrix IW4V  =  interpolate(Wh4, Vh);\n39 cout << \"IV Wh4<-Vh \" << IW4 << endl;\n\n\nBuild interpolation matrix \\(A\\) at a array of points \\((xx[j],yy[j]),\\ i  =  0,\\ 2\\) here:\n\n\\[a_ij  =  dop(w^i_c (xx[j],yy[j]))\\]\nwhere \\(w_i\\) is the basic finite element function, \\(c\\) the component number, \\(dop\\) the type of diff operator like in op def.\n1 real[int] xx  =  [.3, .4], yy  =  [.1, .4];\n2 int c  =  0, dop  =  0;\n3 matrix Ixx  =  interpolate(Vh, xx, yy, op = dop, composante = c);\n4 cout << Ixx << endl;\n5 Vh ww;\n6 real[int] dd  =  [1, 2];\n7 ww[]  =  Ixx*dd;\n\n\n\n\nTip\nSchwarz\nThe following shows how to implement with an interpolation matrix a domain decomposition algorithm based on Schwarz method with Robin conditions.\nGiven a non-overlapping partition \\(\\bar\\Omega = \\bar\\Omega_0\\cup\\bar\\Omega_1\\) with \\(\\Omega_0\\cap\\Omega_1 = \\emptyset\\), \\(\\Sigma: = \\bar\\Omega_0\\cap\\bar\\Omega_1\\) the algorithm is:\n\n\\[\\begin{split}-\\Delta u_i & =  f \\hbox{ in }\\Omega_i,~i = 0,1,\\\\\n\\frac{\\partial(u_1-u_0)}{\\partial n} + \\alpha (u_1-u_0) & = 0\\hbox{ on }\\Sigma.\\end{split}\\]\nThe same in variational form is:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    &\\int_{\\Omega_i}\\nabla u_i\\cdot\\nabla v &+ \\int_\\Sigma\\alpha u_i v  =  \\int_{\\Omega_i}f v\\\\\n    - \\int_{\\Omega_j}(\\nabla u_j\\cdot\\nabla v-f v) + \\int_\\Sigma\\alpha u_j v,~~\n    \\forall v\\in H^1_0(\\Omega), i,j = [0,1]\\cup[1,0]\n\\end{array}\\end{split}\\]\nTo discretized with the \\(P^1\\) triangular Lagrangian finite element space \\(V_h\\) simply replace \\(H^1_0(\\Omega)\\) by \\(V_h(\\Omega_0)\\cup V_h(\\Omega_1)\\).\nThen difficulty is to compute \\(\\int_{\\Omega_j} \\nabla u_j\\cdot\\nabla v\\) when \\(v\\) is a basis function of \\(V_h(\\Omega_i)\\), \\(i\\ne j\\).\nIt is done as follows (with \\(\\Gamma = \\partial\\Omega\\)):\n  1 // Parameters\n  2 int n  =  30;\n  3 int Gamma  =  1;\n  4 int Sigma  =  2;\n  5 \n  6 func f  =  1.;\n  7 real alpha  =  1.;\n  8 \n  9 int Niter  =  50;\n 10 \n 11 // Mesh\n 12 mesh[int] Th(2);\n 13 int[int] reg(2);\n 14 \n 15 border a0(t = 0, 1){x = t; y = 0; label = Gamma;}\n 16 border a1(t = 1, 2){x = t; y = 0; label = Gamma;}\n 17 border b1(t = 0, 1){x = 2; y = t; label = Gamma;}\n 18 border c1(t = 2, 1){x = t; y = 1; label = Gamma;}\n 19 border c0(t = 1, 0){x = t; y = 1; label = Gamma;}\n 20 border b0(t = 1, 0){x = 0; y = t; label = Gamma;}\n 21 border d(t = 0, 1){x = 1; y = t; label = Sigma;}\n 22 plot(a0(n) + a1(n) + b1(n) + c1(n) + c0(n) + b0(n) + d(n));\n 23 mesh TH  =  buildmesh(a0(n) + a1(n) + b1(n) + c1(n) + c0(n) + b0(n) + d(n));\n 24 \n 25 reg(0)  =  TH(0.5, 0.5).region;\n 26 reg(1)  =  TH(1.5, 0.5).region;\n 27 \n 28 for(int i  =  0; i < 2; i++) Th[i]  =  trunc(TH, region =  = reg(i));\n 29 \n 30 // Fespace\n 31 fespace Vh0(Th[0], P1);\n 32 Vh0 u0  =  0;\n 33 \n 34 fespace Vh1(Th[1], P1);\n 35 Vh1 u1  =  0;\n 36 \n 37 // Macro\n 38 macro grad(u) [dx(u), dy(u)] //\n 39 \n 40 // Problem\n 41 int i;\n 42 varf a (u, v)\n 43      =  int2d(Th[i])(\n 44         grad(u)'*grad(v)\n 45     )\n 46     + int1d(Th[i], Sigma)(\n 47         alpha*u*v\n 48     )\n 49     + on(Gamma, u = 0)\n 50     ;\n 51 \n 52 varf b (u, v)\n 53      =  int2d(Th[i])(\n 54         f*v\n 55     )\n 56     + on(Gamma, u = 0)\n 57     ;\n 58 \n 59 varf du1dn (u, v)\n 60      = -int2d(Th[1])(\n 61         grad(u1)'*grad(v)\n 62         - f*v\n 63     )\n 64     + int1d(Th[1], Sigma)(\n 65         alpha*u1*v\n 66     )\n 67     +on(Gamma, u = 0)\n 68     ;\n 69 \n 70 varf du0dn (u, v)\n 71      = -int2d(Th[0])(\n 72         grad(u0)'*grad(v)\n 73         - f*v\n 74     )\n 75     + int1d(Th[0], Sigma)(\n 76         alpha*u0*v\n 77     )\n 78     +on(Gamma, u = 0)\n 79     ;\n 80 \n 81 matrix I01  =  interpolate(Vh1, Vh0);\n 82 matrix I10  =  interpolate(Vh0, Vh1);\n 83 \n 84 matrix[int] A(2);\n 85 i  =  0; A[i]  =  a(Vh0, Vh0);\n 86 i  =  1; A[i]  =  a(Vh1, Vh1);\n 87 \n 88 // Solving loop\n 89 for(int iter  =  0; iter < Niter; iter++){\n 90     // Solve on Th[0]\n 91     {\n 92         i  =  0;\n 93         real[int] b0  =  b(0, Vh0);\n 94         real[int] Du1dn  =  du1dn(0, Vh1);\n 95         real[int] Tdu1dn(Vh0.ndof); Tdu1dn  =  I01'*Du1dn;\n 96         b0 + =  Tdu1dn;\n 97         u0[]  =  A[0]^-1*b0;\n 98     }\n 99     // Solve on Th[1]\n100     {\n101         i  =  1;\n102         real[int] b1  =  b(0, Vh1);\n103         real[int] Du0dn  =  du0dn(0, Vh0);\n104         real[int] Tdu0dn(Vh1.ndof); Tdu0dn  =  I10'*Du0dn;\n105         b1 + =  Tdu0dn;\n106         u1[]  =  A[1]^-1*b1;\n107     }\n108     plot(u0, u1, cmm = \"iter = \"+iter);\n109 }\n\n\n\n\n\nFinite elements connectivity¶\nHere, we show how to get informations on a finite element space \\(W_h({\\cal T}_n,*)\\), where “*” may be P1, P2, P1nc, etc.\n\nWh.nt gives the number of element of \\(W_h\\)\nWh.ndof gives the number of degrees of freedom or unknown\nWh.ndofK gives the number of degrees of freedom on one element\nWh(k,i) gives the number of \\(i\\)th degrees of freedom of element \\(k\\).\n\nSee the following example:\n\nTip\nFinite element connectivity\n 1 // Mesh\n 2 mesh Th  =  square(5, 5);\n 3 \n 4 // Fespace\n 5 fespace Wh(Th, P2);\n 6 \n 7 cout << \"Number of degree of freedom  =  \" << Wh.ndof << endl;\n 8 cout << \"Number of degree of freedom / ELEMENT  =  \" << Wh.ndofK << endl;\n 9 \n10 int k  =  2, kdf  =  Wh.ndofK; //element 2\n11 cout << \"Degree of freedom of element \" << k << \":\" << endl;\n12 for (int i  =  0; i < kdf; i++)\n13     cout << Wh(k,i) << \" \";\n14 cout << endl;\n\n\nThe output is:\n1 Number of degree of freedom  =  121\n2 Number of degree of freedom / ELEMENT  =  6\n3 Degree of freedom of element 2:\n4 78 95 83 87 79 92\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Mesh Generation\n\t\t\tNext topic: Visualization \n\t\t\n\t","l":"documentation/finite-element.html"},"12":{"t":"Documentation","p":"\n\t\t\n   \nDocumentation¶\nThe fruit of a long maturing process, freefem, in its last avatar, FreeFEM , is a high level integrated development environment (IDE) for numerically solving partial differential equations (PDE) in dimension 1,2 3 and surface and line 3D.\nIt is the ideal tool for teaching the finite element method but it is also perfect for research to quickly test new ideas or multi-physics and complex applications.\nFreeFEM has an advanced automatic mesh generator, capable of a posteriori mesh adaptation; it has a general purpose elliptic solver interfaced with fast algorithms, such as the multi-frontal method UMFPACK, SuperLU, MUMPS.\nHyperbolic and parabolic problems are solved by iterative algorithms prescribed by the user with the high level language of FreeFEM.\nIt has several triangular finite elements, including discontinuous elements.\nEverything is there in FreeFEM to prepare research quality reports with online color display, zooming and other features as well as postscript printouts.\nThis manual is meant for students at a Masters level, for researchers at any level, and for engineers (including financial engineering) with some understanding of variational methods for partial differential equations.\nIntroduction\nA partial differential equation is a relation between a function of several variables and its (partial) derivatives.\nMany problems in physics, engineering, mathematics and even banking are modeled by one or several partial differential equations.\nFreeFEM is a software to solve these equations numerically.\nAs its name implies, it is a free software (see the copyrights for full detail) based on the Finite Element Method; it is not a package, it is an integrated product with its own high level programming language.\nThis software runs on all UNIX OS (with g++ 3.3 or later, and OpenGL), on Window XP, Vista and 7, 8, 10 and on MacOS 10 intel.\nMoreover FreeFEM is highly adaptive.\nMany phenomena involve several coupled systems.\nFluid-structure interactions, Lorentz forces for aluminum casting and ocean-atmosphere problems are three such systems.\nThese require different finite element approximations and polynomial degrees, possibly on different meshes.\nSome algorithms like the Schwarz’ domain decomposition method also requires data interpolation on multiple meshes within one program.\nFreeFEM can handle these difficulties, i.e. arbitrary finite element spaces on arbitrary unstructured and adapted bi-dimensional meshes.\nThe characteristics of FreeFEM are:\n\nProblem description (real or complex valued) by their variational formulations, with access to the internal vectors and matrices if needed.\nMulti-variables, multi-equations, bi-dimensional and three-dimensional static or time dependent, linear or nonlinear coupled systems; however the user is required to describe the iterative procedures which reduce the problem to a set of linear problems.\nEasy geometric input by analytic description of boundaries by pieces; however this part is not a CAD system; for instance when two boundaries intersect, the user must specify the intersection points.\nAutomatic mesh generator, based on the Delaunay-Voronoi algorithm; the inner point density is proportional to the density of points on the boundaries [GEORGE1996].\nMetric-based anisotropic mesh adaptation.\nThe metric can be computed automatically from the Hessian of any FreeFEM function [HECHT1998].\nHigh level user friendly typed input language with an algebra of analytic and finite element functions.\nMultiple finite element meshes within one application with automatic interpolation of data on different meshes and possible storage of the interpolation matrices.\nA large variety of triangular finite elements: linear, quadratic Lagrangian elements and more, discontinuous P1 and Raviart-Thomas elements, elements of a non-scalar type, the mini-element,… (but no quadrangles).\nTools to define discontinuous Galerkin finite element formulations P0, P1dc, P2dc and keywords: jump, mean, intalledges.\nA large variety of linear direct and iterative solvers (LU, Cholesky, Crout, CG, GMRES, UMFPACK, MUMPS, SuperLU, …) and eigenvalue and eigenvector solvers (ARPARK) .\nNear optimal execution speed (compared with compiled C++ implementations programmed directly).\nOnline graphics, generation of ,.txt,.eps,.gnu, mesh files for further manipulations of input and output data.\nMany examples and tutorials: elliptic, parabolic and hyperbolic problems, Navier-Stokes flows, elasticity, fluid structure interactions, Schwarz’s domain decomposition method, eigenvalue problem, residual error indicator, …\nA parallel version using MPI\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Plotting in Matlab and Octave\n\t\t\tNext topic: Notations \n\t\t\n\t","l":"documentation/index.html"},"13":{"t":"Mesh Generation","p":"\n\t\t\n   \nMesh Generation¶\nIn this section, operators and tools on meshes are presented.\nFreeFEM type for mesh variable:\n\n\n1D mesh: meshL\n2D mesh: mesh\n3D volume mesh: mesh3\n\n3D border meshes\n3D surface meshS\n3D curve meshL\n\n\n\n\n\n\nThrough this presentation, the principal commands for the mesh generation and links between mesh - mesh3 - meshS - meshL are described.\n\nThe type mesh in 2 dimension¶\n\nCommands for 2d mesh Generation¶\nThe FreeFEM type to define a 2d mesh object is mesh.\n\nThe command square¶\nThe command square triangulates the unit square.\nThe following generates a \\(4 \\times 5\\) grid in the unit square \\([0,1]^2\\). The labels of the boundaries are shown in Fig. 57.\n1 mesh Th  =  square(4, 5);\n\n\n\n\n\nFig. 57 Boundary labels of the mesh by square(10,10)¶\n\n\nTo construct a \\(n\\times m\\) grid in the rectangle \\([x_0,x_1]\\times [y_0,y_1]\\), proceed as follows:\n1 real x0  =  1.2;\n2 real x1  =  1.8;\n3 real y0  =  0;\n4 real y1  =  1;\n5 int n  =  5;\n6 real m  =  20;\n7 mesh Th  =  square(n, m, [x0+(x1-x0)*x, y0+(y1-y0)*y]);\n\n\n\nNote\nAdding the named parameter flags = icase with icase:\n\nwill produce a mesh where all quads are split with diagonal \\(x-y = constant\\)\nwill produce a Union Jack flag type of mesh\nwill produce a mesh where all quads are split with diagonal \\(x+y = constant\\)\nsame as in case 0, except two corners where the triangles are the same as case 2, to avoid having 3 vertices on the boundary\nsame as in case 2, except two corners where the triangles are the same as case 0, to avoid having 3 vertices on the boundary\n\n1 mesh Th  =  square(n, m, [x0+(x1-x0)*x, y0+(y1-y0)*y], flags = icase);\n\n\n\n\nNote\nAdding the named parameter label = labs will\nchange the 4 default label numbers to labs[i-1], for\nexample int[int] labs = [11, 12, 13, 14], and adding the\nnamed parameter region = 10 will change the region number\nto \\(10\\), for instance (v 3.8).\nTo see all of these flags at work, check Square mesh example:\n1 for (int i  =  0; i < 5; ++i){\n2    int[int] labs  =  [11, 12, 13, 14];\n3    mesh Th  =  square(3, 3, flags = i, label = labs, region = 10);\n4    plot(Th, wait = 1, cmm = \"square flags  =  \"+i );\n5 }\n\n\n\n\n\nThe command buildmesh¶\nmesh building with border\nBoundaries are defined piecewise by parametrized curves. The pieces can only intersect at their endpoints, but it is possible to join more than two endpoints. This can be used to structure the mesh if an area touches a border and create new regions by dividing larger ones:\n 1 int upper  =  1;\n 2 int others  =  2;\n 3 int inner  =  3;\n 4 \n 5 border C01(t = 0, 1){x = 0; y = -1+t; label = upper;}\n 6 border C02(t = 0, 1){x = 1.5-1.5*t; y = -1; label = upper;}\n 7 border C03(t = 0, 1){x = 1.5; y = -t; label = upper;}\n 8 border C04(t = 0, 1){x = 1+0.5*t; y = 0; label = others;}\n 9 border C05(t = 0, 1){x = 0.5+0.5*t; y = 0; label = others;}\n10 border C06(t = 0, 1){x = 0.5*t; y = 0; label = others;}\n11 border C11(t = 0, 1){x = 0.5; y = -0.5*t; label = inner;}\n12 border C12(t = 0, 1){x = 0.5+0.5*t; y = -0.5; label = inner;}\n13 border C13(t = 0, 1){x = 1; y = -0.5+0.5*t; label = inner;}\n14 \n15 int n  =  10;\n16 plot(C01(-n) + C02(-n) + C03(-n) + C04(-n) + C05(-n)\n17   + C06(-n) + C11(n) + C12(n) + C13(n), wait = true);\n18 \n19 mesh Th  =  buildmesh(C01(-n) + C02(-n) + C03(-n) + C04(-n) + C05(-n)\n20   + C06(-n) + C11(n) + C12(n) + C13(n));\n21 \n22 plot(Th, wait = true);\n23 \n24 cout << \"Part 1 has region number \" << Th(0.75, -0.25).region << endl;\n25 cout << \"Part 2 has redion number \" << Th(0.25, -0.25).region << endl;\n\n\nBorders and mesh are respectively shown in Fig. 58 and Fig. 59.\n\n\n\n\nFig. 58 Multiple border ends intersect¶\n\n\n\n\n\nFig. 59 Generated mesh¶\n\n\nBorder\nTriangulation keywords assume that the domain is defined as being on the left (resp right) of its oriented parameterized boundary\n\n\\[\\Gamma_j  =  \\{(x,y)\\left|\\; x = \\varphi_x(t),\\, y = \\varphi_y(t),\\, a_j\\le t\\le b_j\\right.\\}\\]\nTo check the orientation plot \\(t\\mapsto (\\varphi_x(t),\\varphi_y(t)),\\, t_0\\le t\\le t_1\\). If it is as in Fig. 60, then the domain lies on the shaded area, otherwise it lies on the opposite side.\n\n\n\nFig. 60 Orientation of the boundary defined by \\((\\phi_x(t),\\phi_y(t))\\)¶\n\n\nThe general expression to define a triangulation with buildmesh is\n1 mesh Mesh_Name  =  buildmesh(Gamma1(m1)+...+GammaJ(mj), OptionalParameter);\n\n\nwhere \\(m_j\\) are positive or negative numbers to indicate how many vertices should be on \\(\\Gamma_j,\\, \\Gamma = \\cup_{j = 1}^J \\Gamma_J\\), and the optional parameter (see also References), separated with a comma, can be:\n\nnbvx =  int, to set the maximum number of vertices in the mesh.\nfixedborder =  bool, to say if the mesh generator can change the boundary mesh or not (by default the boundary mesh can change; beware that with periodic boundary conditions (see. Finite Element), it can be dangerous.\n\nThe orientation of boundaries can be changed by changing the sign of \\(m_j\\).\nThe following example shows how to change the orientation. The example generates the unit disk with a small circular hole, and assigns “1” to the unit disk (“2” to the circle inside). The boundary label must be non-zero, but it can also be omitted.\n1 border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n2 border b(t = 0, 2*pi){x = 0.3+0.3*cos(t); y = 0.3*sin(t); label = 2;}\n3 plot(a(50) + b(30)); //to see a plot of the border mesh\n4 mesh Thwithouthole  =  buildmesh(a(50) + b(30));\n5 mesh Thwithhole  =  buildmesh(a(50) + b(-30));\n6 plot(Thwithouthole, ps = \"Thwithouthole.eps\");\n7 plot(Thwithhole, ps = \"Thwithhole.eps\");\n\n\n\nNote\nNotice that the orientation is changed by b(-30) in the 5th line. In the 7th line, ps = \"fileName\" is used to generate a postscript file with identification shown on the figure.\n\n\n\n\n\nFig. 61 Mesh without hole¶\n\n\n\n\n\nFig. 62 Mesh with hole¶\n\n\nMesh with a hole\n\nNote\nBorders are evaluated only at the time plot or buildmesh is called so the global variables are defined at this time. In this case, since \\(r\\) is changed between the two border calls, the following code will not work because the first border will be computed with r = 0.3:\n1 real r = 1;\n2 border a(t = 0, 2*pi){x = r*cos(t); y = r*sin(t); label = 1;}\n3 r = 0.3;\n4 border b(t = 0, 2*pi){x = r*cos(t); y = r*sin(t); label = 1;}\n5 mesh Thwithhole  =  buildmesh(a(50) + b(-30)); // bug (a trap) because\n6     // the two circles have the same radius  =  :math:`0.3`\n\n\n\nmesh building with array of border\nSometimes it can be useful to make an array of the border, but unfortunately it is incompatible with the FreeFEM syntax. To bypass this problem, if the number of segments of the discretization \\(n\\) is an array, we make an implicit loop on all of the values of the array, and the index variable \\(i\\) of the loop is defined after the parameter definition, like in border a(t = 0, 2*pi; i) …\nA first very small example:\n1 border a(t = 0, 2*pi; i){x = (i+1)*cos(t); y = (i+1)*sin(t); label = 1;}\n2 int[int] nn  =  [10, 20, 30];\n3 plot(a(nn)); //plot 3 circles with 10, 20, 30 points\n\n\nAnd a more complex example to define a square with small circles:\n 1 real[int] xx  =  [0, 1, 1, 0],\n 2           yy  =  [0, 0, 1, 1];\n 3 //radius, center of the 4 circles\n 4 real[int] RC  =  [0.1, 0.05, 0.05, 0.1],\n 5           XC  =  [0.2, 0.8, 0.2, 0.8],\n 6           YC  =  [0.2, 0.8, 0.8, 0.2];\n 7 int[int] NC  =  [-10,-11,-12,13]; //list number of :math:`\\pm` segments of the 4 circles borders\n 8 \n 9 border bb(t = 0, 1; i)\n10 {\n11     // i is the index variable of the multi border loop\n12     int ii  =  (i+1)%4;\n13     real t1  =  1-t;\n14     x  =  xx[i]*t1 + xx[ii]*t;\n15     y  =  yy[i]*t1 + yy[ii]*t;\n16     label  =  0;\n17 }\n18 \n19 border cc(t = 0, 2*pi; i)\n20 {\n21     x  =  RC[i]*cos(t) + XC[i];\n22     y  =  RC[i]*sin(t) + YC[i];\n23     label  =  i + 1;\n24 }\n25 int[int] nn  =  [4, 4, 5, 7]; //4 border, with 4, 4, 5, 7 segment respectively\n26 plot(bb(nn), cc(NC), wait = 1);\n27 mesh th  =  buildmesh(bb(nn) + cc(NC));\n28 plot(th, wait = 1);\n\n\n\n\n\nMesh Connectivity and data¶\nThe following example explains methods to obtain mesh information.\n  1 // Mesh\n  2 mesh Th  =  square(2, 2);\n  3 \n  4 cout << \"// Get data of the mesh\" << endl;\n  5 {\n  6     int NbTriangles  =  Th.nt;\n  7     real MeshArea  =  Th.measure;\n  8     real BorderLength  =  Th.bordermeasure;\n  9 \n 10     cout << \"Number of triangle(s)  =  \" << NbTriangles << endl;\n 11     cout << \"Mesh area  =  \" << MeshArea << endl;\n 12     cout << \"Border length  =  \" << BorderLength << endl;\n 13 \n 14     // Th(i) return the vextex i of Th\n 15     // Th[k] return the triangle k of Th\n 16     // Th[k][i] return the vertex i of the triangle k of Th\n 17     for (int i  =  0; i < NbTriangles; i++)\n 18         for (int j  =  0; j < 3; j++)\n 19             cout << i << \" \" << j << \" - Th[i][j]  =  \" << Th[i][j]\n 20                  << \", x  =  \" << Th[i][j].x\n 21                  << \", y =  \" << Th[i][j].y\n 22                  << \", label = \" << Th[i][j].label << endl;\n 23 }\n 24 \n 25 cout << \"// Hack to get vertex coordinates\" << endl;\n 26 {\n 27     fespace femp1(Th, P1);\n 28     femp1 Thx = x,Thy = y;\n 29 \n 30     int NbVertices  =  Th.nv;\n 31     cout << \"Number of vertices  =  \" << NbVertices << endl;\n 32 \n 33     for (int i  =  0; i < NbVertices; i++)\n 34         cout << \"Th(\" << i << \") : \" << Th(i).x << \" \" << Th(i).y << \" \" << Th(i).label\n 35              << endl << \"\\told method: \" << Thx[][i] << \" \" << Thy[][i] << endl;\n 36 }\n 37 \n 38 cout << \"// Method to find information of point (0.55,0.6)\" << endl;\n 39 {\n 40     int TNumber  =  Th(0.55, 0.6).nuTriangle; //the triangle number\n 41     int RLabel  =  Th(0.55, 0.6).region; //the region label\n 42 \n 43     cout << \"Triangle number in point (0.55, 0.6): \" << TNumber << endl;\n 44     cout << \"Region label in point (0.55, 0.6): \" << RLabel << endl;\n 45 }\n 46 \n 47 cout << \"// Information of triangle\" << endl;\n 48 {\n 49     int TNumber  =  Th(0.55, 0.6).nuTriangle;\n 50     real TArea  =  Th[TNumber].area; //triangle area\n 51     real TRegion  =  Th[TNumber].region; //triangle region\n 52     real TLabel  =  Th[TNumber].label; //triangle label, same as region for triangles\n 53 \n 54     cout << \"Area of triangle \" << TNumber << \": \" << TArea << endl;\n 55     cout << \"Region of triangle \" << TNumber << \": \" << TRegion << endl;\n 56     cout << \"Label of triangle \" << TNumber << \": \" << TLabel << endl;\n 57 }\n 58 \n 59 cout << \"// Hack to get a triangle containing point x, y or region number (old method)\" << endl;\n 60 {\n 61     fespace femp0(Th, P0);\n 62     femp0 TNumbers; //a P0 function to get triangle numbering\n 63     for (int i  =  0; i < Th.nt; i++)\n 64         TNumbers[][i]  =  i;\n 65     femp0 RNumbers  =  region; //a P0 function to get the region number\n 66 \n 67     int TNumber  =  TNumbers(0.55, 0.6); // Number of the triangle containing (0.55, 0,6)\n 68     int RNumber  =  RNumbers(0.55, 0.6); // Number of the region containing (0.55, 0,6)\n 69 \n 70     cout << \"Point (0.55,0,6) :\" << endl;\n 71     cout << \"\\tTriangle number  =  \" << TNumber << endl;\n 72     cout << \"\\tRegion number  =  \" << RNumber << endl;\n 73 }\n 74 \n 75 cout << \"// New method to get boundary information and mesh adjacent\" << endl;\n 76 {\n 77     int k  =  0;\n 78     int l = 1;\n 79     int e = 1;\n 80 \n 81     // Number of boundary elements\n 82     int NbBoundaryElements  =  Th.nbe;\n 83     cout << \"Number of boundary element  =  \" << NbBoundaryElements << endl;\n 84     // Boundary element k in {0, ..., Th.nbe}\n 85     int BoundaryElement  =  Th.be(k);\n 86     cout << \"Boundary element \" << k << \"  =  \" << BoundaryElement << endl;\n 87     // Vertice l in {0, 1} of boundary element k\n 88     int Vertex  =  Th.be(k)[l];\n 89     cout << \"Vertex \" << l << \" of boundary element \" << k << \"  =  \" << Vertex << endl;\n 90     // Triangle containg the boundary element k\n 91     int Triangle  =  Th.be(k).Element;\n 92     cout << \"Triangle containing the boundary element \" << k << \"  =  \" << Triangle << endl;\n 93     // Triangle egde nubmer containing the boundary element k\n 94     int Edge  =  Th.be(k).whoinElement;\n 95     cout << \"Triangle edge number containing the boundary element \" << k << \"  =  \" << Edge << endl;\n 96     // Adjacent triangle of the triangle k by edge e\n 97     int Adjacent  =  Th[k].adj(e); //The value of e is changed to the corresponding edge in the adjacent triangle\n 98     cout << \"Adjacent triangle of the triangle \" << k << \" by edge \" << e << \"  =  \" << Adjacent << endl;\n 99     cout << \"\\tCorresponding edge  =  \" << e << endl;\n100     // If there is no adjacent triangle by edge e, the same triangle is returned\n101     //Th[k]  =  =  Th[k].adj(e)\n102     // Else a different triangle is returned\n103     //Th[k] ! =  Th[k].adj(e)\n104 }\n105 \n106 cout << \"// Print mesh connectivity \" << endl;\n107 {\n108     int NbTriangles  =  Th.nt;\n109     for (int k  =  0; k < NbTriangles; k++)\n110         cout << k << \" : \" << int(Th[k][0]) << \" \" << int(Th[k][1])\n111              << \" \" << int(Th[k][2])\n112              << \", label \" << Th[k].label << endl;\n113 \n114     for (int k  =  0; k < NbTriangles; k++)\n115         for (int e  =  0, ee; e < 3; e++)\n116             //set ee to e, and ee is change by method adj,\n117             cout << k << \" \" << e << \" < = > \" << int(Th[k].adj((ee = e))) << \" \" << ee\n118                  << \", adj: \" << (Th[k].adj((ee = e)) ! =  Th[k]) << endl;\n119 \n120     int NbBoundaryElements  =  Th.nbe;\n121     for (int k  =  0; k < NbBoundaryElements; k++)\n122         cout << k << \" : \" << Th.be(k)[0] << \" \" << Th.be(k)[1]\n123              << \" , label \" << Th.be(k).label\n124              << \", triangle \" << int(Th.be(k).Element)\n125              << \" \" << Th.be(k).whoinElement << endl;\n126 \n127     real[int] bb(4);\n128     boundingbox(Th, bb);\n129     // bb[0]  =  xmin, bb[1]  =  xmax, bb[2]  =  ymin, bb[3]  = ymax\n130     cout << \"boundingbox:\" << endl;\n131     cout << \"xmin  =  \" << bb[0]\n132          << \", xmax  =  \" << bb[1]\n133          << \", ymin  =  \" << bb[2]\n134          << \", ymax  =  \" << bb[3] << endl;\n135 }\n\n\nThe output is:\n  1 // Get data of the mesh\n  2 Number of triangle  =  8\n  3 Mesh area  =  1\n  4 Border length  =  4\n  5 0 0 - Th[i][j]  =  0, x  =  0, y =  0, label = 4\n  6 0 1 - Th[i][j]  =  1, x  =  0.5, y =  0, label = 1\n  7 0 2 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n  8 1 0 - Th[i][j]  =  0, x  =  0, y =  0, label = 4\n  9 1 1 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n 10 1 2 - Th[i][j]  =  3, x  =  0, y =  0.5, label = 4\n 11 2 0 - Th[i][j]  =  1, x  =  0.5, y =  0, label = 1\n 12 2 1 - Th[i][j]  =  2, x  =  1, y =  0, label = 2\n 13 2 2 - Th[i][j]  =  5, x  =  1, y =  0.5, label = 2\n 14 3 0 - Th[i][j]  =  1, x  =  0.5, y =  0, label = 1\n 15 3 1 - Th[i][j]  =  5, x  =  1, y =  0.5, label = 2\n 16 3 2 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n 17 4 0 - Th[i][j]  =  3, x  =  0, y =  0.5, label = 4\n 18 4 1 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n 19 4 2 - Th[i][j]  =  7, x  =  0.5, y =  1, label = 3\n 20 5 0 - Th[i][j]  =  3, x  =  0, y =  0.5, label = 4\n 21 5 1 - Th[i][j]  =  7, x  =  0.5, y =  1, label = 3\n 22 5 2 - Th[i][j]  =  6, x  =  0, y =  1, label = 4\n 23 6 0 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n 24 6 1 - Th[i][j]  =  5, x  =  1, y =  0.5, label = 2\n 25 6 2 - Th[i][j]  =  8, x  =  1, y =  1, label = 3\n 26 7 0 - Th[i][j]  =  4, x  =  0.5, y =  0.5, label = 0\n 27 7 1 - Th[i][j]  =  8, x  =  1, y =  1, label = 3\n 28 7 2 - Th[i][j]  =  7, x  =  0.5, y =  1, label = 3\n 29 // Hack to get vertex coordinates\n 30 Number of vertices  =  9\n 31 Th(0) : 0 0 4\n 32    old method: 0 0\n 33 Th(1) : 0.5 0 1\n 34    old method: 0.5 0\n 35 Th(2) : 1 0 2\n 36    old method: 1 0\n 37 Th(3) : 0 0.5 4\n 38    old method: 0 0.5\n 39 Th(4) : 0.5 0.5 0\n 40    old method: 0.5 0.5\n 41 Th(5) : 1 0.5 2\n 42    old method: 1 0.5\n 43 Th(6) : 0 1 4\n 44    old method: 0 1\n 45 Th(7) : 0.5 1 3\n 46    old method: 0.5 1\n 47 Th(8) : 1 1 3\n 48    old method: 1 1\n 49 // Method to find the information of point (0.55,0.6)\n 50 Triangle number in point (0.55, 0.6): 7\n 51 Region label in point (0.55, 0.6): 0\n 52 // Information of a triangle\n 53 Area of triangle 7: 0.125\n 54 Region of triangle 7: 0\n 55 Label of triangle 7: 0\n 56 // Hack to get a triangle containing point x, y or region number (old method)\n 57 Point (0.55,0,6) :\n 58    Triangle number  =  7\n 59    Region number  =  0\n 60 // New method to get boundary information and mesh adjacent\n 61 Number of boundary element  =  8\n 62 Boundary element 0  =  0\n 63 Vertex 1 of boundary element 0  =  1\n 64 Triangle containing the boundary element 0  =  0\n 65 Triangle edge number containing the boundary element 0  =  2\n 66 Adjacent triangle of the triangle 0 by edge 1  =  1\n 67    Corresponding edge  =  2\n 68 // Print mesh connectivity\n 69 0 : 0 1 4, label 0\n 70 1 : 0 4 3, label 0\n 71 2 : 1 2 5, label 0\n 72 3 : 1 5 4, label 0\n 73 4 : 3 4 7, label 0\n 74 5 : 3 7 6, label 0\n 75 6 : 4 5 8, label 0\n 76 7 : 4 8 7, label 0\n 77 0 0 < = > 3 1, adj: 1\n 78 0 1 < = > 1 2, adj: 1\n 79 0 2 < = > 0 2, adj: 0\n 80 1 0 < = > 4 2, adj: 1\n 81 1 1 < = > 1 1, adj: 0\n 82 1 2 < = > 0 1, adj: 1\n 83 2 0 < = > 2 0, adj: 0\n 84 2 1 < = > 3 2, adj: 1\n 85 2 2 < = > 2 2, adj: 0\n 86 3 0 < = > 6 2, adj: 1\n 87 3 1 < = > 0 0, adj: 1\n 88 3 2 < = > 2 1, adj: 1\n 89 4 0 < = > 7 1, adj: 1\n 90 4 1 < = > 5 2, adj: 1\n 91 4 2 < = > 1 0, adj: 1\n 92 5 0 < = > 5 0, adj: 0\n 93 5 1 < = > 5 1, adj: 0\n 94 5 2 < = > 4 1, adj: 1\n 95 6 0 < = > 6 0, adj: 0\n 96 6 1 < = > 7 2, adj: 1\n 97 6 2 < = > 3 0, adj: 1\n 98 7 0 < = > 7 0, adj: 0\n 99 7 1 < = > 4 0, adj: 1\n100 7 2 < = > 6 1, adj: 1\n101 0 : 0 1 , label 1, triangle 0 2\n102 1 : 1 2 , label 1, triangle 2 2\n103 2 : 2 5 , label 2, triangle 2 0\n104 3 : 5 8 , label 2, triangle 6 0\n105 4 : 6 7 , label 3, triangle 5 0\n106 5 : 7 8 , label 3, triangle 7 0\n107 6 : 0 3 , label 4, triangle 1 1\n108 7 : 3 6 , label 4, triangle 5 1\n109 boundingbox:\n110 xmin  =  0, xmax  =  1, ymin  =  0, ymax  =  1\n\n\nThe real characteristic function of a mesh Th is chi(Th) in 2D and 3D where:\nchi(Th)(P) = 1 if \\(P\\in Th\\)\nchi(Th)(P) = 0 if \\(P\\not\\in Th\\)\n\n\nThe keyword “triangulate”¶\nFreeFEM is able to build a triangulation from a set of points.\nThis triangulation is a Delaunay mesh of the convex hull of the set of points.\nIt can be useful to build a mesh from a table function.\nThe coordinates of the points and the value of the table function are defined separately with rows of the form: x y f(x,y) in a file such as:\n1 0.51387 0.175741 0.636237\n2 0.308652 0.534534 0.746765\n3 0.947628 0.171736 0.899823\n4 0.702231 0.226431 0.800819\n5 0.494773 0.12472 0.580623\n6 0.0838988 0.389647 0.456045\n7 ...............\n\n\n\n\n\n\nFig. 63 Delaunay mesh of the convex hull of point set in file xy¶\n\n\n\n\n\nFig. 64 Isolvalue of table function¶\n\n\nTriangulate\nThe third column of each line is left untouched by the triangulate command.\nBut you can use this third value to define a table function with rows of the form: x y f(x,y).\nThe following example shows how to make a mesh from the file xyf with the format stated just above.\nThe command triangulate only uses the 1st and 2nd columns.\n 1 // Build the Delaunay mesh of the convex hull\n 2 mesh Thxy = triangulate(\"xyf\"); //points are defined by the first 2 columns of file `xyf`\n 3 \n 4 // Plot the created mesh\n 5 plot(Thxy);\n 6 \n 7 // Fespace\n 8 fespace Vhxy(Thxy, P1);\n 9 Vhxy fxy;\n10 \n11 // Reading the 3rd column to define the function fxy\n12 {\n13     ifstream file(\"xyf\");\n14     real xx, yy;\n15     for(int i  =  0; i < fxy.n; i++)\n16         file >> xx >> yy >> fxy[][i]; //to read third row only.\n17                                       //xx and yy are just skipped\n18 }\n19 \n20 // Plot\n21 plot(fxy);\n\n\nOne new way to build a mesh is to have two arrays: one for the \\(x\\) values and the other for the \\(y\\) values.\n1 //set two arrays for the x's and y's\n2 Vhxy xx = x, yy = y;\n3 //build the mesh\n4 mesh Th  =  triangulate(xx[], yy[]);\n\n\n\n\n2d Finite Element space on a boundary¶\nTo define a Finite Element space on a boundary, we came up with the idea of a mesh with no internal points (called empty mesh).\nIt can be useful to handle Lagrange multipliers in mixed and mortar methods.\nSo the function emptymesh removes all the internal points of a mesh except points on internal boundaries.\n1 {\n2     border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n3     mesh Th  =  buildmesh(a(20));\n4     Th  =  emptymesh(Th);\n5     plot(Th);\n6 }\n\n\nIt is also possible to build an empty mesh of a pseudo subregion with emptymesh(Th, ssd) using the set of edges from the mesh Th; an edge \\(e\\) is in this set when, with the two adjacent triangles \\(e  = t1\\cap t2\\) and \\(ssd[T1] \\neq ssd[T2]\\) where \\(ssd\\) refers to the pseudo region numbering of triangles, they are stored in the int[int] array of size “the number of triangles”.\n 1 {\n 2     mesh Th  =  square(10, 10);\n 3     int[int] ssd(Th.nt);\n 4     //build the pseudo region numbering\n 5     for(int i  =  0; i < ssd.n; i++){\n 6         int iq  =  i/2; //because 2 triangles per quad\n 7         int ix  =  iq%10;\n 8         int iy  =  iq/10;\n 9         ssd[i]  =  1 + (ix> = 5) + (iy> = 5)*2;\n10     }\n11     //build emtpy with all edges $e = T1 \\cap T2$ and $ssd[T1] \\neq ssd[T2]$\n12     Th  =  emptymesh(Th, ssd);\n13     //plot\n14     plot(Th);\n15     savemesh(Th, \"emptymesh.msh\");\n16 }\n\n\n\n\n\n\nFig. 65 The empty mesh with boundary¶\n\n\n\n\n\nFig. 66 An empty mesh defined from a pseudo region numbering of triangle¶\n\n\nEmpty mesh\n\n\nRemeshing¶\n\nThe command movemesh¶\nMeshes can be translated, rotated, and deformed by movemesh; this is useful for elasticity to watch the deformation due to the displacement \\(\\mathbf{\\Phi}(x,y) = (\\Phi_1(x,y),\\Phi_2(x,y))\\) of shape.\nIt is also useful to handle free boundary problems or optimal shape problems.\nIf \\(\\Omega\\) is triangulated as \\(T_h(\\Omega)\\), and \\(\\mathbf{\\Phi}\\) is a displacement vector then \\(\\mathbf{\\Phi}(T_h)\\) is obtained by:\n1 mesh Th  =  movemesh(Th,[Phi1, Phi2]);\n\n\nSometimes the transformed mesh is invalid because some triangles have flipped over (meaning it now has a negative area).\nTo spot such problems, one may check the minimum triangle area in the transformed mesh with checkmovemesh before any real transformation.\nFor example:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\Phi_1(x,y) & = & x+k*\\sin(y*\\pi)/10)\\\\\n    \\Phi_2(x,y) & = & y+k*\\cos(y\\pi)/10)\n\\end{array}\\end{split}\\]\nfor a big number \\(k>1\\).\n 1 verbosity  =  4;\n 2 \n 3 // Parameters\n 4 real coef  =  1;\n 5 \n 6 // Mesh\n 7 border a(t = 0, 1){x = t; y = 0; label = 1;};\n 8 border b(t = 0, 0.5){x = 1; y = t; label = 1;};\n 9 border c(t = 0, 0.5){x = 1-t; y = 0.5; label = 1;};\n10 border d(t = 0.5, 1){x = 0.5; y = t; label = 1;};\n11 border e(t = 0.5, 1){x = 1-t; y = 1; label = 1;};\n12 border f(t = 0, 1){x = 0; y = 1-t; label = 1;};\n13 mesh Th  =  buildmesh(a(6) + b(4) + c(4) + d(4) + e(4) + f(6));\n14 plot(Th, wait = true, fill = true, ps = \"Lshape.eps\");\n15 \n16 // Function\n17 func uu  =  sin(y*pi)/10;\n18 func vv  =  cos(x*pi)/10;\n19 \n20 // Checkmovemesh\n21 real minT0  =  checkmovemesh(Th, [x, y]); //return the min triangle area\n22 while(1){ // find a correct move mesh\n23     real minT  =  checkmovemesh(Th, [x+coef*uu, y+coef*vv]);\n24     if (minT > minT0/5) break; //if big enough\n25     coef / =  1.5;\n26 }\n27 \n28 // Movemesh\n29 Th  =  movemesh(Th, [x+coef*uu, y+coef*vv]);\n30 plot(Th, wait = true, fill = true, ps = \"MovedMesh.eps\");\n\n\n\n\n\n\nFig. 67 L-shape¶\n\n\n\n\n\nFig. 68 Moved L-shape¶\n\n\nMove mesh\n\nNote\nConsider a function \\(u\\) defined on a mesh Th.\nA statement like Th = movemesh(Th...) does not change \\(u\\) and so the old mesh still exists.\nIt will be destroyed when no function uses it.\nA statement like \\(u = u\\) redefines \\(u\\) on the new mesh Th with interpolation and therefore destroys the old Th, if \\(u\\) was the only function using it.\n\nNow, we give an example of moving a mesh with a Lagrangian function \\(u\\) defined on the moving mesh.\n 1 // Parameters\n 2 int nn  =  10;\n 3 real dt  =  0.1;\n 4 \n 5 // Mesh\n 6 mesh Th  =  square(nn, nn);\n 7 \n 8 // Fespace\n 9 fespace Vh(Th, P1);\n10 Vh u = y;\n11 \n12 // Loop\n13 real t = 0;\n14 for (int i  =  0; i < 4; i++){\n15     t  =  i*dt;\n16     Vh f = x*t;\n17     real minarea  =  checkmovemesh(Th, [x, y+f]);\n18     if (minarea > 0) //movemesh will be ok\n19     Th  =  movemesh(Th, [x, y+f]);\n20 \n21     cout << \" Min area  =  \" << minarea << endl;\n22 \n23     real[int] tmp(u[].n);\n24     tmp  =  u[]; //save the value\n25     u  =  0;//to change the FEspace and mesh associated with u\n26     u[]  =  tmp;//set the value of u without any mesh update\n27     plot(Th, u, wait = true);\n28 }\n29 // In this program, since u is only defined on the last mesh, all the\n30 // previous meshes are deleted from memory.\n\n\n\n\nThe command hTriangle¶\nThis section presents the way to obtain a regular triangulation with FreeFEM.\nFor a set \\(S\\), we define the diameter of \\(S\\) by\n\n\\[\\textrm{diam}(S) = \\sup\\{|\\mathbf{x}-\\mathbf{y}|; \\; \\mathbf{x},\\, \\mathbf{y}\\in S\\}\\]\nThe sequence \\(\\{\\mathcal{T}_h\\}_{h\\rightarrow 0}\\) of\n\\(\\Omega\\) is called regular if they satisfy the following:\n\n\\(\\lim_{h\\rightarrow 0}\\max\\{\\textrm{diam}(T_k)|\\; T_k\\in \\mathcal{T}_h\\} = 0\\)\nThere is a number \\(\\sigma>0\\) independent of \\(h\\) such that \\(\\frac{\\rho(T_k)}{\\textrm{diam}(T_k)}\\ge \\sigma\\quad \\textrm{for all }T_k\\in \\mathcal{T}_h\\) where \\(\\rho(T_k)\\) are the diameter of the inscribed circle of \\(T_k\\).\n\nWe put \\(h(\\mathcal{T}_h) = \\max\\{\\textrm{diam}(T_k)|\\; T_k\\in \\mathcal{T}_h\\}\\), which is obtained by\n1 mesh Th  =  ......;\n2 fespace Ph(Th, P0);\n3 Ph h  =  hTriangle;\n4 cout << \"size of mesh  =  \" << h[].max << endl;\n\n\n\n\nThe command adaptmesh¶\nThe function:\n\n\\[f(x,y)  =  10.0x^3+y^3+\\tan^{-1}[\\varepsilon/(\\sin(5.0y)-2.0x)],\\ \\varepsilon  =  0.0001\\]\nsharply varies in value and the initial mesh given by one of the commands in the Mesh Generation part cannot reflect its sharp variations.\n 1 // Parameters\n 2 real eps  =  0.0001;\n 3 real h  =  1;\n 4 real hmin  =  0.05;\n 5 func f  =  10.0*x^3 + y^3 + h*atan2(eps, sin(5.0*y)-2.0*x);\n 6 \n 7 // Mesh\n 8 mesh Th  =  square(5, 5, [-1+2*x, -1+2*y]);\n 9 \n10 // Fespace\n11 fespace Vh(Th,P1);\n12 Vh fh  =  f;\n13 plot(fh);\n14 \n15 // Adaptmesh\n16 for (int i  =  0; i < 2; i++){\n17     Th  =  adaptmesh(Th, fh);\n18     fh  =  f; //old mesh is deleted\n19     plot(Th, fh, wait = true);\n20 }\n\n\n\n\n\nFig. 69 3D graphs for the initial mesh and 1st and 2nd mesh adaptations¶\n\n\nFreeFEM uses a variable metric/Delaunay automatic meshing algorithm.\nThe command:\n1 mesh ATh  =  adaptmesh(Th, f);\n\n\ncreate the new mesh ATh adapted to the Hessian\n\n\\[D^2f = (\\partial^2 f/\\partial x^2,\\, \\partial^2 f/\\partial x\\partial y, \\partial^2 f/\\partial y^2)\\]\nof a function (formula or FE-function).\nMesh adaptation is a very powerful tool when the solution of a problem varies locally and sharply.\nHere we solve the Poisson’s problem, when \\(f = 1\\) and \\(\\Omega\\) is an L-shape domain.\n\n\n\n\nFig. 70 L-shape domain and its boundary name¶\n\n\n\n\n\nFig. 71 Final solution after 4-times adaptation¶\n\n\nMesh adaptation\n\nTip\nThe solution has the singularity \\(r^{3/2},\\, r = |x-\\gamma|\\) at the point \\(\\gamma\\) of the intersection of two lines \\(bc\\) and \\(bd\\) (see Fig. 70).\n\n 1 // Parameters\n 2 real error  =  0.1;\n 3 \n 4 // Mesh\n 5 border ba(t = 0, 1){x = t; y = 0; label = 1;}\n 6 border bb(t = 0, 0.5){x = 1; y = t; label = 1;}\n 7 border bc(t = 0, 0.5){x = 1-t; y = 0.5; label = 1;}\n 8 border bd(t = 0.5, 1){x = 0.5; y = t; label = 1;}\n 9 border be(t = 0.5, 1){x = 1-t; y = 1; label = 1;}\n10 border bf(t = 0, 1){x = 0; y = 1-t; label = 1;}\n11 mesh Th  =  buildmesh(ba(6) + bb(4) + bc(4) + bd(4) + be(4) + bf(6));\n12 \n13 // Fespace\n14 fespace Vh(Th, P1);\n15 Vh u, v;\n16 \n17 // Function\n18 func f  =  1;\n19 \n20 // Problem\n21 problem Poisson(u, v, solver = CG, eps = 1.e-6)\n22      =  int2d(Th)(\n23           dx(u)*dx(v)\n24         + dy(u)*dy(v)\n25     )\n26     - int2d(Th)(\n27           f*v\n28     )\n29     + on(1, u = 0);\n30 \n31 // Adaptmesh loop\n32 for (int i  =  0; i < 4; i++){\n33     Poisson;\n34     Th  =  adaptmesh(Th, u, err = error);\n35     error  =  error/2;\n36 }\n37 \n38 // Plot\n39 plot(u);\n\n\nTo speed up the adaptation, the default parameter err of adaptmesh is changed by hand; it specifies the required precision, so as to make the new mesh finer or coarser.\nThe problem is coercive and symmetric, so the linear system can be solved with the conjugate gradient method (parameter solver = CG) with the stopping criteria on the residual, here eps = 1.e-6).\nBy adaptmesh, the slope of the final solution is correctly computed near the point of intersection of \\(bc\\) and \\(bd\\) as in Fig. 71.\nThis method is described in detail in [HECHT1998].\nIt has a number of default parameters which can be modified.\nIf f1,f2 are functions and thold, Thnew are meshes:\n1    Thnew  =  adaptmesh(Thold, f1 ... );\n2    Thnew  =  adaptmesh(Thold, f1,f2 ... ]);\n3    Thnew  =  adaptmesh(Thold, [f1,f2] ... );\n\n\nThe additional parameters of adaptmesh are:\nSee Reference part for more inforamtions\n\n\nhmin =  Minimum edge size.Its default is related to the size of the domain to be meshed and the precision of the mesh generator.\n\n\n\n\nhmax =  Maximum edge size.It defaults to the diameter of the domain to be meshed.\n\n\n\nerr =  \\(P_1\\) interpolation error level (0.01 is the default).\n\nerrg =  Relative geometrical error.By default this error is 0.01, and in any case it must be lower than \\(1/\\sqrt{2}\\).\nMeshes created with this option may have some edges smaller than the -hmin due to geometrical constraints.\n\n\n\nnbvx =  Maximum number of vertices generated by the mesh generator (9000 is the default).\nnbsmooth =  number of iterations of the smoothing procedure (5 is the default).\nnbjacoby =  number of iterations in a smoothing procedure during the metric construction, 0 means no smoothing, 6 is the default.\n\nratio =  ratio for a prescribed smoothing on the metric.If the value is 0 or less than 1.1 no smoothing is done on the metric. 1.8 is the default.\nIf ratio > 1.1, the speed of mesh size variations is bounded by \\(log(\\mathtt{ratio})\\).\n\nNote\nAs ratio gets closer to 1, the number of generated vertices increases.\nThis may be useful to control the thickness of refined regions near shocks or boundary layers.\n\n\n\n\nomega =  relaxation parameter for the smoothing procedure. 1.0 is the default.\niso =  If true, forces the metric to be isotropic. false is the default.\n\nabserror =  If false, the metric is evaluated using the criteria of equi-repartion of relative error.false is the default.\nIn this case the metric is defined by:\n\n\\[\\mathcal{M}  =  \\left({1\\over\\mathtt{err}\\,\\, \\mathtt{coef}^2} \\quad {\n|\\mathcal{H}| \\over max(\\mathtt{CutOff},|\\eta|)}\\right)^p\\]\nOtherwise, the metric is evaluated using the criteria of equi-distribution of errors.\nIn this case the metric is defined by:\n\n\\[\\mathcal{M}  =  \\left({1\\over \\mathtt{err}\\,\\,\\mathtt{coef}^2} \\quad\n{|{\\mathcal{H}|} \\over\n{\\sup(\\eta)-\\inf(\\eta)}}\\right)^p.\\label{eq err abs}\\]\n\n\n\ncutoff =  lower limit for the relative error evaluation.\n1.0e-6 is the default.\n\nverbosity =  informational messages level (can be chosen between 0 and \\(\\infty\\)).Also changes the value of the global variable verbosity (obsolete).\n\n\n\ninquire =  To inquire graphically about the mesh.\nfalse is the default.\n\nsplitpbedge =  If true, splits all internal edges in half with two boundary vertices.true is the default.\n\n\n\n\nmaxsubdiv =  Changes the metric such that the maximum subdivision of a background edge is bound by val.Always limited by 10, and 10 is also the default.\n\n\n\n\nrescaling =  if true, the function, with respect to which the mesh is adapted, is rescaled to be between 0 and 1.true is the default.\n\n\n\n\nkeepbackvertices =  if true, tries to keep as many vertices from the original mesh as possible.true is the default.\n\n\n\n\nIsMetric =  if true, the metric is defined explicitly.false is the default.\nIf the 3 functions \\(m_{11}, m_{12}, m_{22}\\) are given, they directly define a symmetric matrix field whose Hessian is computed to define a metric.\nIf only one function is given, then it represents the isotropic mesh size at every point.\nFor example, if the partial derivatives fxx (\\( = \\partial^2 f/\\partial x^2\\)), fxy (\\( = \\partial^2 f/\\partial x\\partial y\\)), fyy (\\( = \\partial^2 f/\\partial y^2\\)) are given, we can set Th  =  adaptmesh(Th, fxx, fxy, fyy, IsMetric = 1, nbvx = 10000, hmin = hmin);\n\n\n\n\npower =  exponent power of the Hessian used to compute the metric.1 is the default.\n\n\n\n\nthetamax =  minimum corner angle in degrees.Default is \\(10^\\circ\\) where the corner is \\(ABC\\) and the angle is the angle of the two vectors \\({AB}, {BC}\\), (\\(0\\) imply no corner, \\(90\\) imply perpendicular corner, …).\n\n\n\n\nsplitin2 =  boolean value.If true, splits all triangles of the final mesh into 4 sub-triangles.\n\n\n\n\nmetric =  an array of 3 real arrays to set or get metric data information.The size of these three arrays must be the number of vertices.\nSo if m11,m12,m22 are three P1 finite elements related to the mesh to adapt, you can write: metric = [m11[],m12[],m22[]] (see file convect-apt.edp for a full example)\n\n\n\nnomeshgeneration =  If true, no adapted mesh is generated (useful to compute only a metric).\n\nperiodic =  Writing periodic = [[4,y],[2,y],[1,x],[3,x]]; builds an adapted periodic mesh.The sample builds a biperiodic mesh of a square.\n(see periodic finite element spaces, and see the Sphere example for a full example)\n\n\n\n\nWe can use the command adaptmesh to build a uniform mesh with a constant mesh size.\nTo build a mesh with a constant mesh size equal to \\(\\frac{1}{30}\\) try:\n1 mesh Th = square(2, 2); //the initial mesh\n2 plot(Th, wait = true, ps = \"square-0.eps\");\n3 \n4 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000);\n5 plot(Th, wait = true, ps = \"square-1.eps\");\n6 \n7 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000); //More the one time du to\n8 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000); //Adaptation bound `maxsubdiv = `\n9 plot(Th, wait = true, ps = \"square-2.eps\");\n\n\n\n\n\n\nFig. 72 Initial mesh¶\n\n\n\n\n\nFig. 73 First iteration¶\n\n\n\n\n\nFig. 74 Last iteration¶\n\n\nMesh adaptation\n\n\nThe command trunc¶\nTwo operators have been introduced to remove triangles from a mesh or to divide them.\nOperator trunc has the following parameters:\n\nboolean function to keep or remove elements\nlabel =  sets the label number of new boundary item, one by default.\n\nsplit =  sets the level \\(n\\) of triangle splitting.Each triangle is split in \\(n\\times n\\), one by default.\n\n\n\n\nTo create the mesh Th3 where all triangles of a mesh Th are split in \\(3{\\times}3\\), just write:\n1 mesh Th3  =  trunc(Th, 1, split = 3);\n\n\nThe following example construct all “trunced” meshes to the support of the basic function of the space Vh (cf. abs(u)>0), split all the triangles in \\(5{\\times} 5\\), and put a label number to \\(2\\) on a new boundary.\n 1 // Mesh\n 2 mesh Th  =  square(3, 3);\n 3 \n 4 // Fespace\n 5 fespace Vh(Th, P1);\n 6 Vh u = 0;\n 7 \n 8 // Loop on all degrees of freedom\n 9 int n = u.n;\n10 for (int i  =  0; i < n; i++){\n11     u[][i]  =  1; // The basis function i\n12     plot(u, wait = true);\n13     mesh Sh1  =  trunc(Th, abs(u)>1.e-10, split = 5, label = 2);\n14     plot(Th, Sh1, wait = true, ps = \"trunc\"+i+\".eps\");\n15     u[][i]  =  0; // reset\n16 }\n\n\n\n\n\n\nFig. 75 Mesh of support the function P1 number 0, split in \\(5{\\times}5\\)¶\n\n\n\n\n\nFig. 76 Mesh of support the function P1 number 6, split in \\(5{\\times}5\\)¶\n\n\nTrunc\n\n\nThe command change¶\nThis command changes the label of elements and border elements of a mesh.\nChanging the label of elements and border elements will be done using the keyword change.\nThe parameters for this command line are for two dimensional and three dimensional cases:\n\nrefe =  is an array of integers to change the references on edges\nreft =  is an array of integers to change the references on triangles\nlabel =  is an array of integers to change the 4 default label numbers\nregion =  is an array of integers to change the default region numbers\nrenumv =  is an array of integers, which explicitly gives the new numbering of vertices in the new mesh. By default, this numbering is that of the original mesh\nrenumt =  is an array of integers, which explicitly gives the new numbering of elements in the new mesh, according the new vertices numbering given by renumv = . By default, this numbering is that of the original mesh\nflabel =  is an integer function given the new value of the label\nfregion =  is an integer function given the new value of the region\nrmledges =  is an integer to remove edges in the new mesh, following a label\nrmInternalEdges =  is a boolean, if equal to true to remove the internal edges. By default, the internal edges are stored\n\nThese vectors are composed of \\(n_{l}\\) successive pairs of numbers \\(O,N\\) where \\(n_{l}\\) is the number (label or region) that we want to change.\nFor example, we have :\n\n(8)¶\\[\\begin{split}\\mathtt{label} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ] \\\\\n\\mathtt{region} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ]\\end{split}\\]\nAn application example is given here:\n 1 // Mesh\n 2 mesh Th1  =  square(10, 10);\n 3 mesh Th2  =  square(20, 10, [x+1, y]);\n 4 \n 5 int[int] r1 = [2,0];\n 6 plot(Th1, wait = true);\n 7 \n 8 Th1  =  change(Th1, label = r1); //change the label of Edges 2 in 0.\n 9 plot(Th1, wait = true);\n10 \n11 // boundary label: 1 -> 1 bottom, 2 -> 1 right, 3->1 top, 4->1 left boundary label is 1\n12 int[int] re = [1,1, 2,1, 3,1, 4,1]\n13 Th2 = change(Th2,refe = re);\n14 plot(Th2,wait = 1) ;\n\n\n\n\nThe command splitmesh¶\nAnother way to split mesh triangles is to use splitmesh, for example:\n1 // Mesh\n2 border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n3 mesh Th  =  buildmesh(a(20));\n4 plot(Th, wait = true, ps = \"NotSplittedMesh.eps\");\n5 \n6 // Splitmesh\n7 Th  =  splitmesh(Th, 1 + 5*(square(x-0.5) + y*y));\n8 plot(Th, wait = true, ps = \"SplittedMesh.eps\");\n\n\n\n\n\n\nFig. 77 Initial mesh¶\n\n\n\n\n\nFig. 78 All left mesh triangle is split conformaly in int(1+5*(square(x-0.5)+y*y)^2 triangles¶\n\n\nSplit mesh\n\n\n\nMeshing Examples¶\n\nTip\nTwo rectangles touching by a side\n 1 border a(t = 0, 1){x = t; y = 0;};\n 2 border b(t = 0, 1){x = 1; y = t;};\n 3 border c(t = 1, 0){x = t; y = 1;};\n 4 border d(t = 1, 0){x = 0; y = t;};\n 5 border c1(t = 0, 1){x = t; y = 1;};\n 6 border e(t = 0, 0.2){x = 1; y = 1+t;};\n 7 border f(t = 1, 0){x = t; y = 1.2;};\n 8 border g(t = 0.2, 0){x = 0; y = 1+t;};\n 9 int n = 1;\n10 mesh th  =  buildmesh(a(10*n) + b(10*n) + c(10*n) + d(10*n));\n11 mesh TH  =  buildmesh(c1(10*n) + e(5*n) + f(10*n) + g(5*n));\n12 plot(th, TH, ps = \"TouchSide.esp\");\n\n\n\n\n\nFig. 79 Two rectangles touching by a side¶\n\n\n\n\nTip\nNACA0012 Airfoil\n1 border upper(t = 0, 1){x = t; y = 0.17735*sqrt(t) - 0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4);}\n2 border lower(t = 1, 0){x  =  t; y = -(0.17735*sqrt(t) -0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4));}\n3 border c(t = 0, 2*pi){x = 0.8*cos(t) + 0.5; y = 0.8*sin(t);}\n4 mesh Th  =  buildmesh(c(30) + upper(35) + lower(35));\n5 plot(Th, ps = \"NACA0012.eps\", bw = true);\n\n\n\n\n\nFig. 80 NACA0012 Airfoil¶\n\n\n\n\nTip\nCardioid\n1 real b  =  1, a  =  b;\n2 border C(t = 0, 2*pi){x = (a+b)*cos(t)-b*cos((a+b)*t/b); y = (a+b)*sin(t)-b*sin((a+b)*t/b);}\n3 mesh Th  =  buildmesh(C(50));\n4 plot(Th, ps = \"Cardioid.eps\", bw = true);\n\n\n\n\n\nFig. 81 Domain with Cardioid curve boundary¶\n\n\n\n\nTip\nCassini Egg\n1 border C(t = 0, 2*pi) {x = (2*cos(2*t)+3)*cos(t); y = (2*cos(2*t)+3)*sin(t);}\n2 mesh Th  =  buildmesh(C(50));\n3 plot(Th, ps = \"Cassini.eps\", bw = true);\n\n\n\n\n\nFig. 82 Domain with Cassini egg curve boundary¶\n\n\n\n\nTip\nBy cubic Bezier curve\n 1 // A cubic Bezier curve connecting two points with two control points\n 2 func real bzi(real p0, real p1, real q1, real q2, real t){\n 3     return p0*(1-t)^3 + q1*3*(1-t)^2*t + q2*3*(1-t)*t^2 + p1*t^3;\n 4 }\n 5 \n 6 real[int] p00  =  [0, 1], p01  =  [0, -1], q00  =  [-2, 0.1], q01  =  [-2, -0.5];\n 7 real[int] p11  =  [1,-0.9], q10  =  [0.1, -0.95], q11 = [0.5, -1];\n 8 real[int] p21  =  [2, 0.7], q20  =  [3, -0.4], q21  =  [4, 0.5];\n 9 real[int] q30  =  [0.5, 1.1], q31  =  [1.5, 1.2];\n10 border G1(t = 0, 1){\n11     x = bzi(p00[0], p01[0], q00[0], q01[0], t);\n12     y = bzi(p00[1], p01[1], q00[1], q01[1], t);\n13 }\n14 border G2(t = 0, 1){\n15     x = bzi(p01[0], p11[0], q10[0], q11[0], t);\n16     y = bzi(p01[1], p11[1], q10[1], q11[1], t);\n17 }\n18 border G3(t = 0, 1){\n19     x = bzi(p11[0], p21[0], q20[0], q21[0], t);\n20     y = bzi(p11[1], p21[1], q20[1], q21[1], t);\n21 }\n22 border G4(t = 0, 1){\n23     x = bzi(p21[0], p00[0], q30[0], q31[0], t);\n24     y = bzi(p21[1], p00[1], q30[1], q31[1], t);\n25 }\n26 int m  =  5;\n27 mesh Th  =  buildmesh(G1(2*m) + G2(m) + G3(3*m) + G4(m));\n28 plot(Th, ps = \"Bezier.eps\", bw = true);\n\n\n\n\n\nFig. 83 Boundary drawn by Bezier curves¶\n\n\n\n\nTip\nSection of Engine\n 1 real a  =  6., b  =  1., c  =  0.5;\n 2 \n 3 border L1(t = 0, 1){x = -a; y = 1+b-2*(1+b)*t;}\n 4 border L2(t = 0, 1){x = -a+2*a*t; y = -1-b*(x/a)*(x/a)*(3-2*abs(x)/a );}\n 5 border L3(t = 0, 1){x = a; y = -1-b+(1+b)*t; }\n 6 border L4(t = 0, 1){x = a-a*t; y = 0;}\n 7 border L5(t = 0, pi){x = -c*sin(t)/2; y = c/2-c*cos(t)/2;}\n 8 border L6(t = 0, 1){x = a*t; y = c;}\n 9 border L7(t = 0, 1){x = a; y = c+(1+b-c)*t;}\n10 border L8(t = 0, 1){x = a-2*a*t; y = 1+b*(x/a)*(x/a)*(3-2*abs(x)/a);}\n11 mesh Th  =  buildmesh(L1(8) + L2(26) + L3(8) + L4(20) + L5(8) + L6(30) + L7(8) + L8(30));\n12 plot(Th, ps = \"Engine.eps\", bw = true);\n\n\n\n\n\nFig. 84 Section of Engine¶\n\n\n\n\nTip\nDomain with U-shape channel\n 1 real d  =  0.1; //width of U-shape\n 2 border L1(t = 0, 1-d){x = -1; y = -d-t;}\n 3 border L2(t = 0, 1-d){x = -1; y = 1-t;}\n 4 border B(t = 0, 2){x = -1+t; y = -1;}\n 5 border C1(t = 0, 1){x = t-1; y = d;}\n 6 border C2(t = 0, 2*d){x = 0; y = d-t;}\n 7 border C3(t = 0, 1){x = -t; y = -d;}\n 8 border R(t = 0, 2){x = 1; y = -1+t;}\n 9 border T(t = 0, 2){x = 1-t; y = 1;}\n10 int n  =  5;\n11 mesh Th  =  buildmesh(L1(n/2) + L2(n/2) + B(n) + C1(n) + C2(3) + C3(n) + R(n) + T(n));\n12 plot(Th, ps = \"U-shape.eps\", bw = true);\n\n\n\n\n\nFig. 85 Domain with U-shape channel changed by d¶\n\n\n\n\nTip\nDomain with V-shape cut\n 1 real dAg  =  0.02; //angle of V-shape\n 2 border C(t = dAg, 2*pi-dAg){x = cos(t); y = sin(t);};\n 3 real[int] pa(2), pb(2), pc(2);\n 4 pa[0]  =  cos(dAg);\n 5 pa[1]  =  sin(dAg);\n 6 pb[0]  =  cos(2*pi-dAg);\n 7 pb[1]  =  sin(2*pi-dAg);\n 8 pc[0]  =  0;\n 9 pc[1]  =  0;\n10 border seg1(t = 0, 1){x = (1-t)*pb[0]+t*pc[0]; y = (1-t)*pb[1]+t*pc[1];};\n11 border seg2(t = 0, 1){x = (1-t)*pc[0]+t*pa[0]; y = (1-t)*pc[1]+t*pa[1];};\n12 mesh Th  =  buildmesh(seg1(20) + C(40) + seg2(20));\n13 plot(Th, ps = \"V-shape.eps\", bw = true);\n\n\n\n\n\nFig. 86 Domain with V-shape cut changed by dAg¶\n\n\n\n\nTip\nSmiling face\n 1 real d = 0.1; int m  =  5; real a  =  1.5, b  =  2, c  =  0.7, e  =  0.01;\n 2 \n 3 border F(t = 0, 2*pi){x = a*cos(t); y = b*sin(t);}\n 4 border E1(t = 0, 2*pi){x = 0.2*cos(t)-0.5; y = 0.2*sin(t)+0.5;}\n 5 border E2(t = 0, 2*pi){x = 0.2*cos(t)+0.5; y = 0.2*sin(t)+0.5;}\n 6 func real st(real t){\n 7     return sin(pi*t) - pi/2;\n 8 }\n 9 border C1(t = -0.5, 0.5){x = (1-d)*c*cos(st(t)); y = (1-d)*c*sin(st(t));}\n10 border C2(t = 0, 1){x = ((1-d)+d*t)*c*cos(st(0.5)); y = ((1-d)+d*t)*c*sin(st(0.5));}\n11 border C3(t = 0.5, -0.5){x = c*cos(st(t)); y = c*sin(st(t));}\n12 border C4(t = 0, 1){x = (1-d*t)*c*cos(st(-0.5)); y = (1-d*t)*c*sin(st(-0.5));}\n13 border C0(t = 0, 2*pi){x = 0.1*cos(t); y = 0.1*sin(t);}\n14 \n15 mesh Th = buildmesh(F(10*m) + C1(2*m) + C2(3) + C3(2*m) + C4(3)\n16     + C0(m) + E1(-2*m) + E2(-2*m));\n17 plot(Th, ps = \"SmileFace.eps\", bw = true);\n\n\n\n\n\nFig. 87 Smiling face (Mouth is changeable)¶\n\n\n\n\nTip\n3 points bending\n 1 // Square for Three-Point Bend Specimens fixed on Fix1, Fix2\n 2 // It will be loaded on Load.\n 3 real a  =  1, b  =  5, c  =  0.1;\n 4 int n  =  5, m  =  b*n;\n 5 border Left(t = 0, 2*a){x = -b; y = a-t;}\n 6 border Bot1(t = 0, b/2-c){x = -b+t; y = -a;}\n 7 border Fix1(t = 0, 2*c){x = -b/2-c+t; y = -a;}\n 8 border Bot2(t = 0, b-2*c){x = -b/2+c+t; y = -a;}\n 9 border Fix2(t = 0, 2*c){x = b/2-c+t; y = -a;}\n10 border Bot3(t = 0, b/2-c){x = b/2+c+t; y = -a;}\n11 border Right(t = 0, 2*a){x = b; y = -a+t;}\n12 border Top1(t = 0, b-c){x = b-t; y = a;}\n13 border Load(t = 0, 2*c){x = c-t; y = a;}\n14 border Top2(t = 0, b-c){x = -c-t; y = a;}\n15 mesh Th  =  buildmesh(Left(n) + Bot1(m/4) + Fix1(5) + Bot2(m/2)\n16     + Fix2(5) + Bot3(m/4) + Right(n) + Top1(m/2) + Load(10) + Top2(m/2));\n17 plot(Th, ps = \"ThreePoint.eps\", bw = true);\n\n\n\n\n\nFig. 88 Domain for three-point bending test¶\n\n\n\n\n\n\nThe type mesh3 in 3 dimension¶\n\nNote\nUp to the version 3, FreeFEM allowed to consider a surface problem such as the PDE\nis treated like boundary conditions on the boundary domain (on triangles describing\nthe boundary domain). With the version 4, in particular 4.2.1, a completed model for\nsurface problem is possible, with the definition of a surface mesh and a surface problem\nwith a variational form on domain ( with triangle elements) and application of boundary\nconditions on border domain (describing by edges). The keywords to define a surface\nmesh is meshS.\n\n\n3d mesh generation¶\n\nNote\nFor 3D mesh tools, put load \"msh3\" at the top of the .edp script.\n\n\nThe command cube¶\nThe function cube like its 2d function square is a simple way to build cubic objects, it is contained in plugin msh3 (import with load \"msh3\").\nThe following code generates a \\(3\\times 4 \\times 5\\) grid in the unit cube \\([0, 1]^3\\).\n1 mesh3 Th  =  cube(3, 4, 5);\n\n\nBy default the labels are :\n\nface \\(y = 0\\),\nface \\(x = 1\\),\nface \\(y = 1\\),\nface \\(x = 0\\),\nface \\(z = 0\\),\nface \\(z = 1\\)\n\nand the region number is \\(0\\).\nA full example of this function to build a mesh of cube \\(]-1,1[^3\\) with face label given by \\((ix + 4*(iy+1) + 16*(iz+1))\\) where \\((ix, iy, iz)\\) are the coordinates of the barycenter of the current face, is given below.\n 1 load \"msh3\"\n 2 \n 3 int[int] l6  =  [37, 42, 45, 40, 25, 57];\n 4 int r11  =  11;\n 5 mesh3 Th  =  cube(4, 5, 6, [x*2-1, y*2-1, z*2-1], label = l6, flags  = 3, region = r11);\n 6 \n 7 cout << \"Volume  =  \" << Th.measure << \", border area  =  \" << Th.bordermeasure << endl;\n 8 \n 9 int err  =  0;\n10 for(int i  =  0; i < 100; ++i){\n11     real s  =  int2d(Th,i)(1.);\n12     real sx  =  int2d(Th,i)(x);\n13     real sy  =  int2d(Th,i)(y);\n14     real sz  =  int2d(Th,i)(z);\n15 \n16     if(s){\n17         int ix  =  (sx/s+1.5);\n18         int iy  =  (sy/s+1.5);\n19         int iz  =  (sz/s+1.5);\n20         int ii  =  (ix + 4*(iy+1) + 16*(iz+1) );\n21         //value of ix,iy,iz  = > face min 0, face max 2, no face 1\n22         cout << \"Label  =  \" << i << \", s  =  \" << s << \" \" << ix << iy << iz << \" : \" << ii << endl;\n23         if( i ! =  ii ) err++;\n24     }\n25 }\n26 real volr11  =  int3d(Th,r11)(1.);\n27 cout << \"Volume region  =  \" << 11 << \": \" << volr11 << endl;\n28 if((volr11 - Th.measure )>1e-8) err++;\n29 plot(Th, fill = false);\n30 cout << \"Nb err  =  \" << err << endl;\n31 assert(err =  = 0);\n\n\nThe output of this script is:\n 1 Enter: BuildCube: 3\n 2   kind  =  3 n tet Cube  =  6 / n slip 6 19\n 3 Cube  nv = 210 nt = 720 nbe = 296\n 4 Out:  BuildCube\n 5 Volume  =  8, border area  =  24\n 6 Label  =  25, s  =  4 110 : 25\n 7 Label  =  37, s  =  4 101 : 37\n 8 Label  =  40, s  =  4 011 : 40\n 9 Label  =  42, s  =  4 211 : 42\n10 Label  =  45, s  =  4 121 : 45\n11 Label  =  57, s  =  4 112 : 57\n12 Volume region  =  11: 8\n13 Nb err  =  0\n\n\n\n\n\nFig. 89 The 3D mesh of function cube(4, 5, 6, flags = 3)¶\n\n\n\n\nThe command buildlayers¶\nThis mesh is obtained by extending a two dimensional mesh in the \\(z\\)-axis.\nThe domain \\(\\Omega_{3d}\\) defined by the layer mesh is equal to \\(\\Omega_{3d}  =  \\Omega_{2d} \\times [zmin, zmax]\\) where \\(\\Omega_{2d}\\) is the domain defined by the two dimensional meshes.\n\\(zmin\\) and \\(zmax\\) are functions of \\(\\Omega_{2d}\\) in \\(\\R\\) that defines respectively the lower surface and upper surface of \\(\\Omega_{3d}\\).\n\n\n\nFig. 90 Example of Layer mesh in three dimensions.¶\n\n\nFor a vertex of a two dimensional mesh \\(V_{i}^{2d}  =  (x_{i},y_{i})\\), we introduce the number of associated vertices in the \\(z-\\)axis \\(M_{i}+1\\).\nWe denote by \\(M\\) the maximum of \\(M_{i}\\) over the vertices of the two dimensional mesh.\nThis value is called the number of layers (if \\(\\forall i, \\; M_{i} = M\\) then there are \\(M\\) layers in the mesh of \\(\\Omega_{3d}\\)).\n\\(V_{i}^{2d}\\) generated \\(M+1\\) vertices which are defined by:\n\n\\[\\forall j = 0, \\ldots, M, \\quad V_{i,j}^{3d}  =  ( x_{i}, y_{i}, \\theta_{i}(z_{i,j}) ),\\]\nwhere \\((z_{i,j})_{j = 0,\\ldots,M}\\) are the \\(M+1\\) equidistant points on the interval \\([zmin( V_{i}^{2d} ), zmax( V_{i}^{2d})]\\):\n\n\\[z_{i,j}  =  j \\: \\delta \\alpha + zmin(V_{i}^{2d}), \\quad \\delta \\alpha =  \\frac{ zmax( V_{i}^{2d} ) - zmin( V_{i}^{2d}) }{M}.\\]\nThe function \\(\\theta_{i}\\), defined on \\([zmin( V_{i}^{2d} ), zmax( V_{i}^{2d} )]\\), is given by:\n\n\\[\\begin{split}\\theta_{i}(z)  =  \\left \\{\n\\begin{array}{cl}\n\\theta_{i,0} & \\mbox{if} \\: z = zmin(V_{i}^{2d}), \\\\\n\\theta_{i,j} & \\mbox{if} \\: z \\in ] \\theta_{i,j-1}, \\theta_{i,j}],\\\\\n\\end{array}\n\\right.\\end{split}\\]\nwith \\((\\theta_{i,j})_{j = 0,\\ldots,M_{i}}\\) are the \\(M_{i}+1\\) equidistant points on the interval \\([zmin( V_{i}^{2d} ), zmax( V_{i}^{2d} )]\\).\nSet a triangle \\(K = (V_{i1}^{2d}\\), \\(V_{i2}^{2d}\\), \\(V_{i3}^{2d})\\) of the two dimensional mesh.\n\\(K\\) is associated with a triangle on the upper surface (resp. on the lower surface) of layer mesh:\n\\(( V_{i1,M}^{3d}, V_{i2,M}^{3d}, V_{i3,M}^{3d} )\\) (resp. \\(( V_{i1,0}^{3d}, V_{i2,0}^{3d}, V_{i3,0}^{3d})\\)).\nAlso \\(K\\) is associated with \\(M\\) volume prismatic elements which are defined by:\n\n\\[\\forall j = 0,\\ldots,M, \\quad H_{j}  =  ( V_{i1,j}^{3d}, V_{i2,j}^{3d}, V_{i3,j}^{3d}, V_{i1,j+1}^{3d}, V_{i2,j+1}^{3d}, V_{i3,j+1}^{3d} ).\\]\nTheses volume elements can have some merged point:\n\n0 merged point : prism\n1 merged points : pyramid\n2 merged points : tetrahedra\n3 merged points : no elements\n\nThe elements with merged points are called degenerate elements.\nTo obtain a mesh with tetrahedra, we decompose the pyramid into two tetrahedra and the prism into three tetrahedra.\nThese tetrahedra are obtained by cutting the quadrilateral face of pyramid and prism with the diagonal which have the vertex with the maximum index (see [HECHT1992] for the reason of this choice).\nThe triangles on the middle surface obtained with the decomposition of the volume prismatic elements are the triangles generated by the edges on the border of the two dimensional mesh.\nThe label of triangles on the border elements and tetrahedra are defined with the label of these associated elements.\nThe arguments of buildlayers is a two dimensional mesh and the number of layers \\(M\\).\nThe parameters of this command are:\n\n\nzbound =  \\([zmin,zmax]\\) where \\(zmin\\) and \\(zmax\\) are functions expression.Theses functions define the lower surface mesh and upper mesh of surface mesh.\n\n\n\n\ncoef =  A function expression between [0,1].This parameter is used to introduce degenerate element in mesh.\n\n\nThe number of associated points or vertex \\(V_{i}^{2d}\\) is the integer part of \\(coef(V_{i}^{2d}) M\\).\n\nregion =  This vector is used to initialize the region of tetrahedra.\nThis vector contains successive pairs of the 2d region number at index \\(2i\\) and the corresponding 3d region number at index \\(2i+1\\), like change.\n\nlabelmid =  This vector is used to initialize the 3d labels number of the vertical face or mid face from the 2d label number.\nThis vector contains successive pairs of the 2d label number at index \\(2i\\) and the corresponding 3d label number at index \\(2i+1\\), like change.\n\nlabelup =  This vector is used to initialize the 3d label numbers of the upper/top face from the 2d region number.\nThis vector contains successive pairs of the 2d region number at index \\(2i\\) and the corresponding 3d label number at index \\(2i+1\\), like change.\n\nlabeldown =  Same as the previous case but for the lower/down face label.\n\nMoreover, we also add post processing parameters that allow to moving the mesh.\nThese parameters correspond to parameters transfo, facemerge and ptmerge of the command line movemesh.\nThe vector region, labelmid, labelup and labeldown These vectors are composed of \\(n_{l}\\) successive pairs of number \\(O_i,N_l\\) where \\(n_{l}\\) is the number (label or region) that we want to get.\nAn example of this command is given in the Build layer mesh example.\n\nTip\nCube\n 1 //Cube.idp\n 2 load \"medit\"\n 3 load \"msh3\"\n 4 \n 5 func mesh3 Cube (int[int] &NN, real[int, int] &BB, int[int, int] &L){\n 6     real x0  =  BB(0,0), x1  =  BB(0,1);\n 7     real y0  =  BB(1,0), y1  =  BB(1,1);\n 8     real z0  =  BB(2,0), z1  =  BB(2,1);\n 9 \n10     int nx  =  NN[0], ny  =  NN[1], nz  =  NN[2];\n11 \n12     // 2D mesh\n13     mesh Thx  =  square(nx, ny, [x0+(x1-x0)*x, y0+(y1-y0)*y]);\n14 \n15     // 3D mesh\n16     int[int] rup  =  [0, L(2,1)], rdown = [0, L(2,0)];\n17     int[int] rmid = [1, L(1,0), 2, L(0,1), 3, L(1,1), 4, L(0,0)];\n18     mesh3 Th  =  buildlayers(Thx, nz, zbound = [z0,z1],\n19     labelmid = rmid, labelup  =  rup, labeldown  =  rdown);\n20 \n21     return Th;\n22 }\n\n\n\n\nTip\nUnit cube\n1 include \"Cube.idp\"\n2 \n3 int[int] NN  =  [10,10,10]; //the number of step in each direction\n4 real [int, int] BB  =  [[0,1],[0,1],[0,1]]; //the bounding box\n5 int [int, int] L  =  [[1,2],[3,4],[5,6]]; //the label of the 6 face left,right, front, back, down, right\n6 mesh3 Th  =  Cube(NN, BB, L);\n7 medit(\"Th\", Th);\n\n\n\n\n\nFig. 91 The mesh of a cube made with cube.edp¶\n\n\n\n\nTip\nCone\nAn axisymtric mesh on a triangle with degenerateness\n 1 load \"msh3\"\n 2 load \"medit\"\n 3 \n 4 // Parameters\n 5 real RR  =  1;\n 6 real HH  =  1;\n 7 \n 8 int nn = 10;\n 9 \n10 // 2D mesh\n11 border Taxe(t = 0, HH){x = t; y = 0; label = 0;}\n12 border Hypo(t = 1, 0){x = HH*t; y = RR*t; label = 1;}\n13 border Vert(t = 0, RR){x = HH; y = t; label = 2;}\n14 mesh Th2  =  buildmesh(Taxe(HH*nn) + Hypo(sqrt(HH*HH+RR*RR)*nn) + Vert(RR*nn));\n15 plot(Th2, wait = true);\n16 \n17 // 3D mesh\n18 real h  =  1./nn;\n19 int MaxLayersT  =  (int(2*pi*RR/h)/4)*4;//number of layers\n20 real zminT  =  0;\n21 real zmaxT  =  2*pi; //height 2*pi\n22 func fx  =  y*cos(z);\n23 func fy  =  y*sin(z);\n24 func fz  =  x;\n25 int[int] r1T  =  [0,0], r2T  =  [0,0,2,2], r4T  =  [0,2];\n26 //trick function:\n27 //The function defined the proportion\n28 //of number layer close to axis with reference MaxLayersT\n29 func deg  =  max(.01, y/max(x/HH, 0.4)/RR);\n30 mesh3 Th3T  =  buildlayers(Th2, coef = deg, MaxLayersT,\n31     zbound = [zminT, zmaxT], transfo = [fx, fy, fz],\n32     facemerge = 0, region = r1T, labelmid = r2T);\n33 medit(\"cone\", Th3T);\n\n\n\n\n\nFig. 92 The mesh of a cone made with cone.edp¶\n\n\n\n\nTip\nBuildlayer mesh\n 1 load \"msh3\"\n 2 load \"TetGen\"\n 3 load \"medit\"\n 4 \n 5 // Parameters\n 6 int C1  =  99;\n 7 int C2  =  98;\n 8 \n 9 // 2D mesh\n10 border C01(t = 0, pi){x = t; y = 0; label = 1;}\n11 border C02(t = 0, 2*pi){ x = pi; y = t; label = 1;}\n12 border C03(t = 0, pi){ x = pi-t; y = 2*pi; label = 1;}\n13 border C04(t = 0, 2*pi){ x = 0; y = 2*pi-t; label = 1;}\n14 \n15 border C11(t = 0, 0.7){x = 0.5+t; y = 2.5; label = C1;}\n16 border C12(t = 0, 2){x = 1.2; y = 2.5+t; label = C1;}\n17 border C13(t = 0, 0.7){x = 1.2-t; y = 4.5; label = C1;}\n18 border C14(t = 0, 2){x = 0.5; y = 4.5-t; label = C1;}\n19 \n20 border C21(t = 0, 0.7){x = 2.3+t; y = 2.5; label = C2;}\n21 border C22(t = 0, 2){x = 3; y = 2.5+t; label = C2;}\n22 border C23(t = 0, 0.7){x = 3-t; y = 4.5; label = C2;}\n23 border C24(t = 0, 2){x = 2.3; y = 4.5-t; label = C2;}\n24 \n25 mesh Th  =  buildmesh(C01(10) + C02(10) + C03(10) + C04(10)\n26     + C11(5) + C12(5) + C13(5) + C14(5)\n27     + C21(-5) + C22(-5) + C23(-5) + C24(-5));\n28 \n29 mesh Ths  =  buildmesh(C01(10) + C02(10) + C03(10) + C04(10)\n30     + C11(5) + C12(5) + C13(5) + C14(5));\n31 \n32 // Construction of a box with one hole and two regions\n33 func zmin  =  0.;\n34 func zmax  =  1.;\n35 int MaxLayer  =  10;\n36 \n37 func XX  =  x*cos(y);\n38 func YY  =  x*sin(y);\n39 func ZZ  =  z;\n40 \n41 int[int] r1  =  [0, 41], r2  =  [98, 98, 99, 99, 1, 56];\n42 int[int] r3  =  [4, 12];  //the triangles of uppper surface mesh\n43                         //generated by the triangle in the 2D region\n44                         //of mesh Th of label 4 as label 12\n45 int[int] r4  =  [4, 45];  //the triangles of lower surface mesh\n46                         //generated by the triangle in the 2D region\n47                         //of mesh Th of label 4 as label 45.\n48 \n49 mesh3 Th3  =  buildlayers(Th, MaxLayer, zbound = [zmin, zmax], region = r1,\n50     labelmid = r2, labelup = r3, labeldown = r4);\n51     medit(\"box 2 regions 1 hole\", Th3);\n52 \n53 // Construction of a sphere with TetGen\n54 func XX1  =  cos(y)*sin(x);\n55 func YY1  =  sin(y)*sin(x);\n56 func ZZ1  =  cos(x);\n57 \n58 real[int] domain  =  [0., 0., 0., 0, 0.001];\n59 string test  =  \"paACQ\";\n60 cout << \"test  =  \" << test << endl;\n61 mesh3 Th3sph  =  tetgtransfo(Ths, transfo = [XX1, YY1, ZZ1],\n62     switch = test, nbofregions = 1, regionlist = domain);\n63 medit(\"sphere 2 regions\", Th3sph);\n\n\n\n\n\n\nRemeshing¶\n\nNote\nif an operation on a mesh3 is performed then the same operation is applyed on its surface part (its meshS associated)\n\n\nThe command change¶\nThis command changes the label of elements and border elements of a mesh. It’s the equivalent command in 2d mesh case.\nChanging the label of elements and border elements will be done using the keyword change.\nThe parameters for this command line are for two dimensional and three dimensional cases:\n\nreftet =  is a vector of integer that contains successive pairs of the old label number to the new label number.\nrefface =  is a vector of integer that contains successive pairs of the old region number to new region number.\nflabel =  is an integer function given the new value of the label.\nfregion =  is an integer function given the new value of the region.\nrmInternalFaces =  is a boolean, equal true to remove the internal faces.\nrmlfaces =  is a vector of integer, where triangle’s label given are remove of the mesh\n\nThese vectors are composed of \\(n_{l}\\) successive pairs of numbers \\(O,N\\) where \\(n_{l}\\) is the number (label or region) that we want to change.\nFor example, we have:\n\n\\[\\begin{split}\\mathtt{label} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ] \\\\\n\\mathtt{region} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ]\\end{split}\\]\nAn example of use:\n 1 // Mesh\n 2 mesh3 Th1  =  cube(10, 10);\n 3 mesh3 Th2  =  cube(20, 10, [x+1, y,z]);\n 4 \n 5 int[int] r1 = [2,0];\n 6 plot(Th1, wait = true);\n 7 \n 8 Th1  =  change(Th1, label = r1); //change the label of Edges 2 in 0.\n 9 plot(Th1, wait = true);\n10 \n11 // boundary label: 1 -> 1 bottom, 2 -> 1 right, 3->1 top, 4->1 left boundary label is 1\n12 int[int] re = [1,1, 2,1, 3,1, 4,1]\n13 Th2 = change(Th2,refe = re);\n14 plot(Th2,wait = 1) ;\n\n\n\n\nThe command trunc¶\nThis operator have been introduce to remove a piece of mesh or/and split all element or for a particular label element\nThe three named parameter\n- boolean function to keep or remove elements\n- split =  sets the level n of triangle splitting. each triangle is splitted in n × n ( one by default)\n- freefem:label =    sets the label number of new boundary item (1 by default)\nAn example of use\n1 load \"msh3\"\n2 load \"medit\"\n3 int nn = 8;\n4 mesh3 Th = cube(nn,nn,nn);\n5 //  remove the small cube $]1/2,1[^2$\n6 Th =  trunc(Th,((x<0.5) |(y< 0.5)| (z<0.5)), split = 3, label = 3);\n7 medit(\"cube\",Th);\n\n\n\n\nThe command movemesh¶\n3D meshes  can be translated, rotated, and deformed using the command line movemesh as in the 2D case (see section movemesh).\nIf \\(\\Omega\\) is tetrahedrized as \\(T_{h}(\\Omega)\\), and \\(\\Phi(x,y) = (\\Phi1(x,y,z), \\Phi2(x,y,z), \\Phi3(x,y,z))\\) is the transformation vector then \\(\\Phi(T_{h})\\) is obtained by:\n1 mesh3 Th  =  movemesh(Th, [Phi1, Phi2, Phi3], ...);\n2 mesh3 Th  =  movemesh3(Th, transfo = [Phi1, Phi2, Phi3], ...);  (syntax with transfo = )\n\n\nThe parameters of movemesh in three dimensions are:\n\ntransfo =  sets the geometric transformation \\(\\Phi(x,y) = (\\Phi1(x,y,z), \\Phi2(x,y,z), \\Phi3(x,y,z))\\)\n\nregion =  sets the integer labels of the tetrahedra.0 by default.\n\n\n\n\nlabel =  sets the labels of the border faces.This parameter is initialized as the label for the keyword change.\n\n\n\n\nfacemerge =  An integer expression.When you transform a mesh, some faces can be merged.\nThis parameter equals to one if the merges’ faces is considered.\nOtherwise it equals to zero.\nBy default, this parameter is equal to 1.\n\n\n\n\nptmerge  =  A real expression.When you transform a mesh, some points can be merged.\nThis parameter is the criteria to define two merging points.\nBy default, we use\n\n\\[ptmerge \\:  =  \\: 1e-7 \\: \\:Vol( B ),\\]\n\n\nwhere \\(B\\) is the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\) and \\(Vol(B)\\) is the volume of this box.\n\norientation  =  An integer expression\nequal 1, give the oientation of the triangulation, elements must be in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the tetrahedra\n\n\nNote\nThe orientation of tetrahedra are checked by the positivity of its area and automatically corrected during the building of the adjacency.\n\nAn example of this command can be found in the Poisson’s equation 3D example.\n 1 load \"medit\"\n 2 include \"cube.idp\"\n 3 int[int]  Nxyz = [20,5,5];\n 4 real [int,int]  Bxyz = [[0.,5.],[0.,1.],[0.,1.]];\n 5 int [int,int]  Lxyz = [[1,2],[2,2],[2,2]];\n 6 real E  =  21.5e4;\n 7 real sigma  =  0.29;\n 8 real mu  =  E/(2*(1+sigma));\n 9 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n10 real gravity  =  -0.05;\n11 real sqrt2 = sqrt(2.);\n12 \n13 mesh3 Th = Cube(Nxyz,Bxyz,Lxyz);\n14 fespace Vh(Th,[P1,P1,P1]);\n15 Vh [u1,u2,u3], [v1,v2,v3];\n16 \n17 macro epsilon(u1,u2,u3)  [dx(u1),dy(u2),dz(u3),(dz(u2)+dy(u3))/sqrt2,(dz(u1)+dx(u3))/sqrt2,(dy(u1)+dx(u2))/sqrt2] // EOM\n18 macro div(u1,u2,u3) ( dx(u1)+dy(u2)+dz(u3) ) // EOM\n19 \n20 solve Lame([u1,u2,u3],[v1,v2,v3]) = \n21   int3d(Th)(\n22             lambda*div(u1,u2,u3)*div(v1,v2,v3)\n23             +2.*mu*( epsilon(u1,u2,u3)'*epsilon(v1,v2,v3) )\n24               )\n25   - int3d(Th) (gravity*v3)\n26   + on(1,u1 = 0,u2 = 0,u3 = 0);\n27 \n28 real dmax =  u1[].max;\n29 real coef =  0.1/dmax;\n30 \n31 int[int] ref2 = [1,0,2,0]; // array\n32 mesh3 Thm = movemesh(Th,[x+u1*coef,y+u2*coef,z+u3*coef],label = ref2);\n33 // mesh3 Thm = movemesh3(Th,transfo = [x+u1*coef,y+u2*coef,z+u3*coef],label = ref2); older syntax\n34 Thm = change(Thm,label = ref2);\n35 plot(Th,Thm, wait = 1,cmm = \"coef  amplification  =  \"+coef );\n\n\nmovemesh doesn’t use the prefix tranfo =  [.,.,.], the geometric transformation is directly given by  [.,.,.] in the arguments list\n\n\nThe command extract¶\nThis command offers the possibility to extract a boundary part of a mesh3\n\nrefface     , is a vector of integer that contains a list of triangle face references, where the extract function must be apply.\nlabel       , is a vector of integer that contains a list of tetrahedra label\n\n1 load\"msh3\"\n2 int nn  =  30;\n3 int[int] labs  =  [1, 2, 2, 1, 1, 2]; // Label numbering\n4 mesh3 Th  =  cube(nn, nn, nn, label = labs);\n5 // extract the surface (boundary) of the cube\n6 int[int] llabs  =  [1, 2];\n7 meshS ThS  =  extract(Th,label = llabs);\n\n\n\n\nThe command buildSurface¶\nThis new function allows to build the surface mesh of a volume mesh, under the condition the surface is the boundary of the volume.\nBy definition, a mesh3 is defined by a list of vertices, tetrahedron elements and triangle border elements. buildSurface function create the meshS corresponding, given\nthe list vertices which are on the border domain, the triangle elements and build the list of edges.\nRemark, for a closed surface mesh, the edges list is empty.\n\n\nThe command movemesh23¶\nA simple method to tranform a 2D mesh in 3D Surface mesh. The principe is to project a two dimensional domain in a three dimensional space, 2d surface in the (x,y,z)-space to create a surface mesh 3D, meshS.\n\nWarning\nSince the release 4.2.1, the FreeFEM function movemesh23 returns a meshS type.\n\nThis corresponds to translate, rotate or deforme the domain by a displacement vector of this form \\(\\mathbf{\\Phi(x,y)}  =  (\\Phi1(x,y), \\Phi2(x,y), \\Phi3(x,y))\\).\nThe result of moving a two dimensional mesh Th2 by this three dimensional displacement is obtained using:\n1 **meshS** Th3  =  movemesh23(Th2, transfo = [Phi(1), Phi(2), Phi(3)]);\n\n\nThe parameters of this command line are:\n\ntransfo =  [\\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\)] sets the displacement vector of transformation \\(\\mathbf{\\Phi(x,y)}  =  [\\Phi1(x,y), \\Phi2(x,y), \\Phi3(x,y)]\\).\nlabel =  sets an integer label of triangles.\norientation =  sets an integer orientation to give the global orientation of the surface of mesh. Equal 1, give a triangulation in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles\n\nptmerge =  A real expression.When you transform a mesh, some points can be merged.\nThis parameter is the criteria to define two merging points.\nBy default, we use\n\n\\[ptmerge \\:  =  \\: 1e-7 \\: \\:Vol( B ),\\]\n\n\nwhere \\(B\\) is the smallest axis, parallel boxes containing the discretized domain of \\(\\Omega\\) and \\(Vol(B)\\) is the volume of this box.\n\n\nWe can do a “gluing” of surface meshes using the process given in Change section.\nAn example to obtain a three dimensional mesh using the command line tetg and movemesh23 is given below.\n 1 load \"msh3\"\n 2 load \"tetgen\"\n 3 \n 4 // Parameters\n 5 real x10  =  1.;\n 6 real x11  =  2.;\n 7 real y10  =  0.;\n 8 real y11  =  2.*pi;\n 9 \n10 func ZZ1min  =  0;\n11 func ZZ1max  =  1.5;\n12 func XX1  =  x;\n13 func YY1  =  y;\n14 \n15 real x20  =  1.;\n16 real x21  =  2.;\n17 real y20 = 0.;\n18 real y21 = 1.5;\n19 \n20 func ZZ2  =  y;\n21 func XX2  =  x;\n22 func YY2min  =  0.;\n23 func YY2max  =  2*pi;\n24 \n25 real x30 = 0.;\n26 real x31 = 2*pi;\n27 real y30 = 0.;\n28 real y31 = 1.5;\n29 \n30 func XX3min  =  1.;\n31 func XX3max  =  2.;\n32 func YY3  =  x;\n33 func ZZ3  =  y;\n34 \n35 // Mesh\n36 mesh Thsq1  =  square(5, 35, [x10+(x11-x10)*x, y10+(y11-y10)*y]);\n37 mesh Thsq2  =  square(5, 8, [x20+(x21-x20)*x, y20+(y21-y20)*y]);\n38 mesh Thsq3  =  square(35, 8, [x30+(x31-x30)*x, y30+(y31-y30)*y]);\n39 \n40 // Mesh 2D to 3D surface\n41 meshS Th31h  =  movemesh23(Thsq1, transfo = [XX1, YY1, ZZ1max], orientation = 1);\n42 meshS Th31b  =  movemesh23(Thsq1, transfo = [XX1, YY1, ZZ1min], orientation = -1);\n43 \n44 meshS Th32h  =  movemesh23(Thsq2, transfo = [XX2, YY2max, ZZ2], orientation = -1);\n45 meshS Th32b  =  movemesh23(Thsq2, transfo = [XX2, YY2min, ZZ2], orientation = 1);\n46 \n47 meshS Th33h  =  movemesh23(Thsq3, transfo = [XX3max, YY3, ZZ3], orientation = 1);\n48 meshS Th33b  =  movemesh23(Thsq3, transfo = [XX3min, YY3, ZZ3], orientation = -1);\n49 \n50 // Gluing surfaces\n51 meshS Th33  =  Th31h + Th31b + Th32h + Th32b + Th33h + Th33b;\n52 plot(Th33, cmm = \"Th33\");\n53 \n54 // Tetrahelize the interior of the cube with TetGen\n55 real[int] domain  = [1.5, pi, 0.75, 145, 0.0025];\n56 meshS Thfinal  =  tetg(Th33, switch = \"paAAQY\", regionlist = domain);\n57 plot(Thfinal, cmm = \"Thfinal\");\n58 \n59 // Build a mesh of a half cylindrical shell of interior radius 1, and exterior radius 2 and a height of 1.5\n60 func mv2x  =  x*cos(y);\n61 func mv2y  =  x*sin(y);\n62 func mv2z  =  z;\n63 meshS Thmv2  =  movemesh(Thfinal, transfo = [mv2x, mv2y, mv2z], facemerge = 0);\n64 plot(Thmv2, cmm = \"Thmv2\");\n\n\n\n\n\n3d Meshing examples¶\n\nTip\nLake\n 1 load \"msh3\"\n 2 load \"medit\"\n 3 \n 4 // Parameters\n 5 int nn  =  5;\n 6 \n 7 // 2D mesh\n 8 border cc(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n 9 mesh Th2  =  buildmesh(cc(100));\n10 \n11 // 3D mesh\n12 int[int] rup  =  [0, 2], rlow  =  [0, 1];\n13 int[int] rmid  =  [1, 1, 2, 1, 3, 1, 4, 1];\n14 func zmin  =  2-sqrt(4-(x*x+y*y));\n15 func zmax  =  2-sqrt(3.);\n16 \n17 mesh3 Th  =  buildlayers(Th2, nn,\n18     coef = max((zmax-zmin)/zmax, 1./nn),\n19     zbound = [zmin,zmax],\n20     labelmid = rmid,\n21     labelup = rup,\n22     labeldown = rlow);\n23 \n24 medit(\"Th\", Th);\n\n\n\n\nTip\nHole region\n 1 load \"msh3\"\n 2 load \"TetGen\"\n 3 load \"medit\"\n 4 \n 5 // 2D mesh\n 6 mesh Th  =  square(10, 20, [x*pi-pi/2, 2*y*pi]); // ]-pi/2, pi/2[X]0,2pi[\n 7 \n 8 // 3D mesh\n 9 //parametrization of a sphere\n10 func f1  =  cos(x)*cos(y);\n11 func f2  =  cos(x)*sin(y);\n12 func f3  =  sin(x);\n13 //partial derivative of the parametrization\n14 func f1x  =  sin(x)*cos(y);\n15 func f1y  =  -cos(x)*sin(y);\n16 func f2x  =  -sin(x)*sin(y);\n17 func f2y  =  cos(x)*cos(y);\n18 func f3x  =  cos(x);\n19 func f3y  =  0;\n20 //M  =  DF^t DF\n21 func m11  =  f1x^2 + f2x^2 + f3x^2;\n22 func m21  =  f1x*f1y + f2x*f2y + f3x*f3y;\n23 func m22  =  f1y^2 + f2y^2 + f3y^2;\n24 \n25 func perio  =  [[4, y], [2, y], [1, x], [3, x]];\n26 real hh  =  0.1;\n27 real vv  =  1/square(hh);\n28 verbosity  =  2;\n29 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n30 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n31 plot(Th, wait = true);\n32 \n33 //construction of the surface of spheres\n34 real Rmin  =  1.;\n35 func f1min  =  Rmin*f1;\n36 func f2min  =  Rmin*f2;\n37 func f3min  =  Rmin*f3;\n38 \n39 meshS ThSsph  =  movemesh23(Th, transfo = [f1min, f2min, f3min]);\n40 \n41 real Rmax  =  2.;\n42 func f1max  =  Rmax*f1;\n43 func f2max  =  Rmax*f2;\n44 func f3max  =  Rmax*f3;\n45 \n46 meshS ThSsph2  =  movemesh23(Th, transfo = [f1max, f2max, f3max]);\n47 \n48 //gluing meshes\n49 meshS ThS  =  ThSsph + ThSsph2;\n50 \n51 cout << \" TetGen call without hole \" << endl;\n52 real[int] domain2  =  [1.5, 0., 0., 145, 0.001, 0.5, 0., 0., 18, 0.001];\n53 mesh3 Th3fin  =  tetg(ThS, switch = \"paAAQYY\", nbofregions = 2, regionlist = domain2);\n54 medit(\"Sphere with two regions\", Th3fin);\n55 \n56 cout << \" TetGen call with hole \" << endl;\n57 real[int] hole  =  [0.,0.,0.];\n58 real[int] domain  =  [1.5, 0., 0., 53, 0.001];\n59 mesh3 Th3finhole  =  tetg(ThS, switch = \"paAAQYY\",\n60     nbofholes = 1, holelist = hole, nbofregions = 1, regionlist = domain);\n61 medit(\"Sphere with a hole\", Th3finhole);\n\n\n\n\nTip\nBuild a 3d mesh of a cube with a balloon\n 1 load \"msh3\"\n 2 load \"TetGen\"\n 3 load \"medit\"\n 4 include \"MeshSurface.idp\"\n 5 \n 6 // Parameters\n 7 real hs  =  0.1; //mesh size on sphere\n 8 int[int] N  =  [20, 20, 20];\n 9 real [int,int] B  =  [[-1, 1], [-1, 1], [-1, 1]];\n10 int [int,int] L  =  [[1, 2], [3, 4], [5, 6]];\n11 \n12 // Meshes\n13 meshS ThH  =  SurfaceHex(N, B, L, 1);\n14 meshS ThS  =  Sphere(0.5, hs, 7, 1);\n15 \n16 meshS ThHS  =  ThH + ThS;\n17 medit(\"Hex-Sphere\", ThHS);\n18 \n19 real voltet  =  (hs^3)/6.;\n20 cout << \"voltet  =  \" << voltet << endl;\n21 real[int] domain  =  [0, 0, 0, 1, voltet, 0, 0, 0.7, 2, voltet];\n22 mesh3 Th  =  tetg(ThHS, switch = \"pqaAAYYQ\", nbofregions = 2, regionlist = domain);\n23 medit(\"Cube with ball\", Th);\n\n\n\n\n\n\n\nFig. 93 The surface mesh of the hex with internal sphere¶\n\n\n\n\n\nFig. 94 The tetrahedral mesh of the cube with internal ball¶\n\n\nCube sphere\n\n\n\nThe type meshS in 3 dimension¶\n\nWarning\nSince the release 4.2.1, the surface mesh3 object (list of vertices and border elements, without tetahedra elements) is remplaced by meshS type.\n\n\nCommands for 3d surface mesh generation¶\n\nThe command square3¶\nThe function square3 like the function square in 2d is the simple way to a build the unit square plan in the space \\(\\mathbb{R^3}\\).\nTo use this command, it is necessary to load the pluging msh3 (need load \"msh3\").\nA square in 3d consists in building a 2d square which is projected from \\(\\mathbb{R^2}\\) to \\(\\mathbb{R^3}\\).\nThe parameters of this command line are:\n\n\nn,m  generates a n×m grid in the unit square\n[.,.,.] is  [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ] is the geometric transformation from \\(\\mathbb{R^2}\\) to \\(\\mathbb{R^3}\\). By default, [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ]  =  [x,y,0]\norientation = \nequal 1, gives the orientation of the triangulation, elements are in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles\nit’s the global orientation of the surface 1 extern (-1 intern)\n\n\n 1      real R  =  3, r = 1;\n 2      real h  =  0.2; //\n 3      int nx  =  R*2*pi/h;\n 4      int ny  =  r*2*pi/h;\n 5      func torex =  (R+r*cos(y*pi*2))*cos(x*pi*2);\n 6      func torey =  (R+r*cos(y*pi*2))*sin(x*pi*2);\n 7      func torez =  r*sin(y*pi*2);\n 8 \n 9 \n10      meshS ThS = square3(nx,ny,[torex,torey,torez],orientation = -1) ;\n\n\nThe following code generates a \\(3\\times 4 \\times 5\\) grid in the unit cube \\([0, 1]^3\\) with a clock wise triangulation.\n\n\nsurface mesh builders¶\nAdding at the top of a FreeFEM script include \"MeshSurface.idp\", constructors of sphere, ellipsoid, surface mesh of a 3d box are available.\n\n\nSurfaceHex(N, B, L, orient)\n\nthis operator allows to build the surface mesh of a 3d box\nint[int]  N = [nx,ny,nz]; //  the number of seg in the 3 direction\nreal [int,int]  B = [[xmin,xmax],[ymin,ymax],[zmin,zmax]]; // bounding bax\nint [int,int]  L = [[1,2],[3,4],[5,6]]; // the label of the 6 face left,right, front, back, down, right\norient the global orientation of the surface 1 extern (-1 intern),\nreturns a meshS type\n\n\nEllipsoide (RX, RY, RZ, h, L, OX, OY, OZ, orient)\n\nh is the mesh size\nL is the label\norient the global orientation of the surface 1 extern (-1 intern)\nOX, OY, OZ are real numbers to give the Ellipsoide center ( optinal, by default is (0,0,0) )\nwhere RX, RY, RZ are real numbers such as the parametric equations of the ellipsoid is:\nreturns a meshS type\n\n\n\n\n\\[\\forall u \\in [- \\frac{\\pi}{2},\\frac{\\pi}{2}  [ \\text{ and } v \\in [0, 2 \\pi], \\vectthree{x = \\text{Rx } cos(u)cos(v) + \\text{Ox }}{y = \\text{Ry } cos(u)sin(v) + \\text{Oy }}{z  =  \\text{Rz } sin(v)  + \\text{Oz }    }\\]\n\nSphere(R, h, L, OX, OY, OZ, orient)\n\nwhere R is the raduis of the sphere,\nOX, OY, OZ are real numbers to give the Ellipsoide center ( optinal, by default is (0,0,0) )\nh is the mesh size  of  the shpere\nL is the label the the sphere\norient the global orientation of the surface 1 extern (-1 intern)\nreturns a meshS type\n\n\n\n\n 1 func meshS SurfaceHex(int[int] & N,real[int,int] &B ,int[int,int] & L,int orientation){\n 2     real x0 = B(0,0),x1 = B(0,1);\n 3     real y0 = B(1,0),y1 = B(1,1);\n 4     real z0 = B(2,0),z1 = B(2,1);\n 5 \n 6     int nx = N[0],ny = N[1],nz = N[2];\n 7 \n 8     mesh Thx  =  square(ny,nz,[y0+(y1-y0)*x,z0+(z1-z0)*y]);\n 9     mesh Thy  =  square(nx,nz,[x0+(x1-x0)*x,z0+(z1-z0)*y]);\n10     mesh Thz  =  square(nx,ny,[x0+(x1-x0)*x,y0+(y1-y0)*y]);\n11 \n12     int[int] refx = [0,L(0,0)],refX = [0,L(0,1)];   //  Xmin, Ymax faces labels renumbering\n13     int[int] refy = [0,L(1,0)],refY = [0,L(1,1)];   //  Ymin, Ymax faces labesl renumbering\n14     int[int] refz = [0,L(2,0)],refZ = [0,L(2,1)];   //  Zmin, Zmax faces labels renumbering\n15 \n16     meshS Thx0  =  movemesh23(Thx,transfo = [x0,x,y],orientation = -orientation,label = refx);\n17     meshS Thx1  =  movemesh23(Thx,transfo = [x1,x,y],orientation = +orientation,label = refX);\n18     meshS Thy0  =  movemesh23(Thy,transfo = [x,y0,y],orientation = +orientation,label = refy);\n19     meshS Thy1  =  movemesh23(Thy,transfo = [x,y1,y],orientation = -orientation,label = refY);\n20     meshS Thz0  =  movemesh23(Thz,transfo = [x,y,z0],orientation = -orientation,label = refz);\n21     meshS Thz1  =  movemesh23(Thz,transfo = [x,y,z1],orientation = +orientation,label = refZ);\n22     meshS Th =  Thx0+Thx1+Thy0+Thy1+Thz0+Thz1;\n23 \n24  return Th;\n25  }\n26 \n27  func meshS Ellipsoide (real RX,real RY,real RZ,real h,int L,real Ox,real Oy,real Oz,int orientation) {\n28     mesh  Th = square(10,20,[x*pi-pi/2,2*y*pi]);  //  $]\\frac{-pi}{2},frac{-pi}{2}[\\times]0,2\\pi[ $\n29     //  a parametrization of a sphere\n30     func f1  = RX*cos(x)*cos(y);\n31     func f2  = RY*cos(x)*sin(y);\n32     func f3  = RZ*sin(x);\n33         //    partiel derivative\n34     func f1x =  -RX*sin(x)*cos(y);\n35     func f1y =  -RX*cos(x)*sin(y);\n36     func f2x =  -RY*sin(x)*sin(y);\n37     func f2y =  +RY*cos(x)*cos(y);\n38     func f3x = -RZ*cos(x);\n39     func f3y = 0;\n40     // the metric on the sphere  $  M  =  DF^t DF $\n41     func m11 = f1x^2+f2x^2+f3x^2;\n42     func m21 = f1x*f1y+f2x*f2y+f3x*f3y;\n43     func m22 = f1y^2+f2y^2+f3y^2;\n44     func perio = [[4,y],[2,y],[1,x],[3,x]];  // to store the periodic condition\n45     real hh = h;// hh  mesh size on unite sphere\n46     real vv =  1/square(hh);\n47     Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n48     Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n49     Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n50     Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n51     int[int] ref = [0,L];\n52     meshS ThS = movemesh23(Th,transfo = [f1,f2,f3],orientation = orientation,refface = ref);\n53     ThS = mmgs(ThS,hmin = h,hmax = h,hgrad = 2.);\n54   return ThS;\n55  }\n56 \n57  func meshS Ellipsoide (real RX,real RY,real RZ,real h,int L,int orientation) {\n58   return Ellipsoide (RX,RY,RZ,h,L,0.,0.,0.,orientation);\n59  }\n60  func meshS Sphere(real R,real h,int L,int orientation) {\n61   return Ellipsoide(R,R,R,h,L,orientation);\n62  }\n63  func meshS Sphere(real R,real h,int L,real Ox,real Oy,real Oz,int orientation) {\n64   return Ellipsoide(R,R,R,h,L,Ox,Oy,Oz,orientation);\n65  }\n\n\n\n\n2D mesh generators combined with  movemesh23¶\nFreeFEM ‘s meshes can be built by the composition of the movemesh23 command from a 2d mesh generation.\nThe operation is a projection of a 2d plane in \\(\\mathbb{R^3}\\) following the geometric transformation  [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ].\n 1 load \"msh3\"\n 2 real l  =  3;\n 3 border a(t = -l,l){x = t; y = -l;label = 1;};\n 4 border b(t = -l,l){x = l; y = t;label = 1;};\n 5 border c(t = l,-l){x = t; y = l;label = 1;};\n 6 border d(t = l,-l){x = -l; y = t;label = 1;};\n 7 int n  =  100;\n 8 border i(t = 0,2*pi){x = 1.1*cos(t);y = 1.1*sin(t);label = 5;};\n 9 mesh th =  buildmesh(a(n)+b(n)+c(n)+d(n)+i(-n));\n10 meshS Th =  movemesh23(th,transfo = [x,y,cos(x)^2+sin(y)^2]);\n\n\n\n\n\nRemeshing¶\n\nThe command trunc¶\nThis operator allows to define a meshS by truncating another one, i.e. by removing triangles, and/or by splitting each triangle by a given positive integer s.\nIn a FreeFEM script, this function must be called as follows:\nmeshS TS2 =  trunc (TS1, boolean function to keep or remove elements, split  =  s, label  =  …)\nThe command has the following arguments:\n\nboolean function to keep or remove elements\nsplit =  sets the level n of triangle splitting. each triangle is splitted in n × n ( one by default)\nlabel =    sets the label number of new boundary item (1 by default)\n\nAn example of how to call the function\n 1 real R  =  3, r = 1;\n 2 real h  =  0.2; //\n 3 int nx  =  R*2*pi/h;\n 4 int ny  =  r*2*pi/h;\n 5 func torex =  (R+r*cos(y*pi*2))*cos(x*pi*2);\n 6 func torey =  (R+r*cos(y*pi*2))*sin(x*pi*2);\n 7 func torez =  r*sin(y*pi*2);\n 8 // build a tore\n 9 meshS ThS = square3(nx,ny,[torex,torey,torez]) ;\n10 ThS = trunc(ThS, (x < 0.5) | (y < 0.5) | (z > 1.), split = 4);\n\n\n\n\nThe command movemesh¶\nLike 2d and 3d type meshes in FreeFEM, meshS can be translated, rotated or deformated by an application [\\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\)].\nThe image \\(T_{h}(\\Omega)\\) is obtained by the command movemeshS.\nThe parameters of movemeshS are:\n\ntransfo =  sets the geometric transformation \\(\\Phi(x,y) = (\\Phi1(x,y,z), \\Phi2(x,y,z), \\Phi3(x,y,z))\\)\n\nregion =  sets the integer labels of the triangles.0 by default.\n\n\n\n\nlabel =  sets the labels of the border edges.This parameter is initialized as the label for the keyword change.\n\n\n\n\nedgemerge =  An integer expression.When you transform a mesh, some triangles can be merged and fix the parameter to 1, else 0\nBy default, this parameter is equal to 1.\n\n\n\n\nptmerge  =  A real expression.When you transform a mesh, some points can be merged.\nThis parameter is the criteria to define two merging points.\nBy default, we use\n\n\n\\[ptmerge \\:  =  \\: 1e-7 \\: \\:Vol( B ),\\]\nwhere \\(B\\) is the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\) and \\(Vol(B)\\) is the volume of this box.\n\n\n\n\n\n\n\n\norientation  =  An integer expressionequal 1, give the oientation of the triangulation, elements must be in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles. It’s the global orientation of the normals at the surface 1 extern (-1 intern)\n\n\n\n\n\nExample of using\n1 meshS Th1  =  square3(n,n,[2*x,y,1],orientation = -1);\n2 meshS Th2 = movemeshS(Th1, transfo = [x,y,z]);\n3 meshS Th3 = movemesh(Th1, [x,y,z]);\n\n\n\n\nThe command change¶\nEquivalent for a 2d or 3d mesh, the command change changes the label of elements and border elements of a meshS.\nThe parameters for this command line are:\n\nreftri =  is a vector of integer that contains successive pairs of the old label number to the new label number for elements.\nrefedge =  is a vector of integer that contains successive pairs of the old region number to new region number for boundary elements.\nflabel =  is an integer function given the new value of the label.\nfregion =  is an integer function given the new value of the region.\nrmledges =  is a vector of integer, where edge’s label given are remove of the mesh\n\nThese vectors are composed of \\(n_{l}\\) successive pairs of numbers \\(O,N\\) where \\(n_{l}\\) is the number (label or region) that we want to change.\nFor example, we have:\n\n\\[\\begin{split}\\mathtt{label} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ] \\\\\n\\mathtt{region} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ]\\end{split}\\]\n\n\n\nLink with a mesh3¶\nIn topology and mathematics, the boundary of a subset S of a topological space X is the set of points which can be approached both from S and from the outside of S.\nThe general definitions to the boundary of a subset S of a topological space X are:\n\n\nthe closure of S without the interior of S \\(\\partial S  =  S  \\backslash \\mathring S\\).\nthe intersection of the closure of S with the closure of its complement \\(\\partial S  =  S  \\cap (X  \\backslash S)\\).\nthe set of points p of X such that every neighborhood of p contains at least one point of S and at least one point not of S.\n\n\nMore concretely in FreeFEM, the gestion of a 3D mesh is as follows. Let be \\(\\Omega\\) a subset of \\(\\mathbb{R}^3\\) and \\(\\partial \\Omega\\) is boundary, the finite element discretization \\(\\Omega_h\\) of this domain gives:\n\n\na mesh3 type, denotes Th3, meshing the volume domain. It contains all the nodes, the tetrahedrons   \\(\\Omega_i\\) such as  \\(\\Omega_h  =  \\cup_i \\Omega_i\\) and the list of triangles describing the boundary domain\na meshS type, denotes ThS, meshing the boundary of the volume domain. Typically, containing the nodes belonging to the boundary of Th3 and, if it exists the boundary triangles and the edges.\n\n\nRemark: Condition of meshS existence\n| In FreeFEM, a meshS can be defined in 2 cases such as:\n\n\nTh3 \\(\\subset\\) ThS where it exactly describes the bounder of Th3.\na mehS is an explicite surface mesh given by a list of vertices, triangle finite elements and boundary edge elements (can be optional follows the geometry domain)\n\n\n\nNote\nHence, if an input mesh (.msh freefem or .mesh format) contains a list of vertices, tetrahedra, triangles and edges, FreeFEM builds a mesh3 whitch contains explicitly a surface mesh type meshS.\n\n\nThe command Gamma¶\nThe command Gamma allows to build and manipulate the border mesh independly of a volume mesh such as the surface is described by triangle elements and edges border elements in 3d. Use this function, suppose that the mesh3 object even contains the geometric description of its surface. That means, the input mesh explicitly contains the list of vertices, tetrahedra, triangles and edges. In case where the surface mesh doesn’t exist, before calling Gamma, must build it by calling the buildSurface function (see the next function description).\n1  load \"msh3\"\n2  int n =  10;\n3  int nvb  =  (n+1)^3 - (n-1)^3;// Nb boundary vertices\n4  int ntb  =  n*n*12; // Nb of Boundary triangle\n5  mesh3 Th = cube(n,n,n);\n6  Th  =  buildBdMesh(Th); // build the surface mesh\n7  // build Th1, the surface of Th, defined by triangles elements and edges border elements list\n8  meshS Th1  =  Th.Gamma;\n\n\n\n\nThe command buildBdMesh¶\nLet Th3 a volume mesh (mesh3 type) ; such as the geometry description is a list of vertices, tetrahedra elements and triangle border elements.\nFreeFEM can generate the surface mesh associated to Th3. The intern mechanism of FreeFEM created directly the meshS associated to Th3 and accessible by the command meshS ThS  =  Th3.Gamma;.\n\n\nThe command savesurfacemesh¶\nAvailable for 3d meshes, the command savesurfacemesh saves the entire surface of a 3d volume mesh3 at the format .mesh.\nTwo possibilies about the mesh3 surface:\n\n\nthe geometric surface isn’t explicite, that means the mesh3 doesn’t contain surface elements (triangles) and border surface elements (edge). The surface is defined by the border of the volume. Hence, savesurfacemesh returns the list of vertices and faces of the volume mesh, according to a local numbring at the border mesh.\nthe geometric surface is explicite and known by the mesh3 type. This may be due to the nature of the data mesh (list of vertices, tetrahedra, triangles, edges) or a surface building by FreeFEM with the calling of buildSurface operator. In this case, savesurfacemesh allows to save the real geometry of the surface 3d mesh (list of vertices, triangles, edges)\n\n\nExample of use\n1  load \"msh3\"\n2  mesh3 Th3 = cube(10,15,5);\n3  savemesh(Th3, \"surf.mesh\");\n4  savesurfacemesh(Th3, \"surfreal.mesh\");\n5  mesh3 ThS3  =  trunc(Th3, 1, split = 3);\n6  meshS ThSS  =  ThS3.Gamma;\n7  savesurfacemesh(ThS3, \"surfacesplit.mesh\");\n8  savemesh(ThSS,\"GammaSplit.mesh\" );\n\n\nvolume mesh and meshS = NULL\nsavesurfmesh(Th,filename_mesh)\nwrite in the file the vertices list and the triangle list (face of the volum mesh) according to a numbering in local surface\nsavesurfmesh(Th,filename_points,filename_faces)\nThe operation does the same thing that the first exept to\n\n\nGlue of meshS meshes¶\nA surface 3d mesh can be the result of the generation of several assembled meshes, with caution of the right orientation at the merged interfaces.\n1  meshS Th1  =  square3(n,n,[2*x,y,1],orientation = -1);\n2      meshS Th2  =  square3(n,n,[2*x,y,0],orientation = 1);\n3      meshS Th11  =  square3(n,n,[2*x,1,y],orientation = 1);\n4      meshS Th22  =  square3(n,n,[2*x,0,y],orientation = -1);\n5      meshS Th5  =  square3(n,n,[1,y,x]);\n6      meshS Th6  =  square3(n,n,[2,y,x],orientation = 1);\n7      meshS Th  =  Th1+Th2+Th11+Th22+Th5+Th6;\n8      assert(Th.nbnomanifold =  = 40);\n\n\n\nWarning\nFor the moment, the case of no manifold mesh are not considered in FreeFEM. To check if the meshS contains no manifold elements, the command nbnomanifold.\n\n\n\n\n\nThe type meshL in 3 dimension¶\n\nCommands for 3d curve mesh generation¶\n\nThe command segment¶\nThe function segment is a basic command to define a curve in 3D space.\nThe parameters of this command line are:\n\n\nn generates a n subsegments from the unit line\n[.,.,.] is  [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ] is the geometric transformation from \\(\\mathbb{R^1}\\) to \\(\\mathbb{R^3}\\). By default, [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ]  =  [x,0,0]\norientation = \nequal 1, gives the orientation of the triangulation, elements are in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles\nit’s the global orientation of the surface 1 extern (-1 intern)\ncleanmesh =  is a boolean, allowing remove the duplicated nodes\nremoveduplicate =  is a boolean, allowing remove the duplicated elements and border elements\n\nprecismesh this parameter is the criteria to define two merging points.By default, it value is 1e-7 and define the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\)\n\n\n\n\nBy defaut, the border points are marked by label 1 and 2.\n\n1      real R  =  3, r = 1;\n2      real h  =  0.1; //\n3      int nx  =  R*2*pi/h;\n4      func torex =  (R+r*cos(y*pi*2))*cos(x*pi*2);\n5      func torey =  (R+r*cos(y*pi*2))*sin(x*pi*2);\n6      func torez =  r*sin(y*pi*2);\n7      meshL Th = segment(nx,[torex,torey,torez],removeduplicate = true) ;\n\n\nThe following code generates a 10 subsegments from the unit line with a clock wise triangulation, according to the geometric transformation [torex,torey,torez] and removing the duplicated points/elements\n\n\nThe command buildmesh¶\nThis operator allows to define a curve mesh from multi-borders.\nThe domain can be defined by a parametrized curve (keyword border), such as Th1 in the following example\nor piecewise by parametrized curves, such as the construction of the mesh Th2.\nThe pieces can only intersect at their endpoints, but it is possible to join more than two endpoints.\n 1 load \"msh3\"\n 2 \n 3 // conical helix\n 4 border E1(t = 0, 10.*pi){x = (1.)*t*cos(t); y = -(1.)*t*sin(t); z = t;}\n 5 meshL Th1 = buildmeshL(E1(1000));\n 6 \n 7 int upper  =  1, others  =  2, inner  =  3, n  =  10;\n 8 border D01(t = 0, 1) {x = 0; y = -1+t; }\n 9 border D02(t = 0, 1){x = 1.5-1.5*t; y = -1; z = 3;label = upper;}\n10 border D03(t = 0, 1){x = 1.5; y = -t; z = 3;label = upper;}\n11 border D04(t = 0, 1){x = 1+0.5*t; y = 0; z = 3;label = others;}\n12 border D05(t = 0, 1){x = 0.5+0.5*t; y = 0; z = 3;label = others;}\n13 border D06(t = 0, 1){x = 0.5*t; y = 0; z = 3;label = others;}\n14 border D11(t = 0, 1){x = 0.5; y = -0.5*t; z = 3;label = inner;}\n15 border D12(t = 0, 1){x = 0.5+0.5*t; y = -0.5; z = 3;label = inner;}\n16 border D13(t = 0, 1){x = 1; y = -0.5+0.5*t; z = 3;label = inner;}\n17 \n18 meshL Th2 = buildmeshL(D01(-n) + D02(-n) + D03(-n) + D04(-n) + D05(-n)\n19    + D06(-n) + D11(n) + D12(n) + D13(n));\n\n\n\n\n\nRemeshing¶\n\nThe command trunc¶\nThis operator allows to define a meshL by truncating another one, i.e. by removing segments, and/or by splitting each element by a given positive integer s.\nHere, an example to use this function:\nmeshL ThL2 =  trunc (ThL1, boolean function to keep or remove elements, split  =  s, label  =  …)\nThe command has the following arguments:\n\nboolean function to keep or remove elements\nsplit =  sets the level n of edge splitting, each edge is splitted in n subpart( one by default)\nlabel =    sets the label number of new boundary item (1 by default)\nnew2old\nold2new\nrenum\n\norientation = equal 1, gives the orientation of the triangulation, elements are in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles\nit’s the global orientation of the surface 1 extern (-1 intern)\n\n\n\ncleanmesh =  is a boolean, allowing remove the duplicated nodes\nremoveduplicate =  is a boolean, allowing remove the duplicated elements and border elements\n\nprecismesh this parameter is the criteria to define two merging points.By default, it value is 1e-7 and define the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\)\n\n\n\n\nAn example of how to call this function\n1 int nx = 10;\n2 meshL Th = segment(nx,[5.*x,cos(pi*x),sin(pi*x)]);\n3 Th = trunc(Th, (x < 0.5) | (y < 0.5) | (z > 1.), split = 4);\n\n\n\n\nThe command movemesh¶\nThis is the classical mesh transformation FreeFEM function, meshL can be deformed by an application [ \\(\\Phi 1\\), \\(\\Phi 2\\), \\(\\Phi 3\\) ].\nThe image \\(T_{h}(\\Omega)\\) is obtained by the command movemeshL.\nThe parameters of movemesh are:\n\ntransfo =  sets the geometric transformation \\(\\Phi(x,y) = (\\Phi1(x,y,z), \\Phi2(x,y,z), \\Phi3(x,y,z))\\)\n\nrefedge =  sets the integer labels of the triangles.0 by default.\n\n\n\n\nrefpoint =  sets the labels of the border points.This parameter is initialized as the label for the keyword change.\n\n\n\n\nprecismesh this parameter is the criteria to define two merging points.By default, it value is 1e-7 and define the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\)\n\n\n\n\norientation  =  An integer expressionequal 1, give the oientation of the triangulation, elements must be in the reference orientation (counter clock wise)\nequal -1 reverse the orientation of the triangles. It’s the global orientation of the normals at the surface 1 extern (-1 intern)\n\n\n\ncleanmesh =  is a boolean, allowing remove the duplicated nodes\nremoveduplicate =  is a boolean, allowing remove the duplicated elements and border elements\n\n\nNote\nThe definition of the geometric transformation depends on the space dimension of the studied problem. It means that, with curve FEM, it’s possible to treat a real 1D problem (space coordinate is x) then the transformation is given by x: ->F(x), that means [F_x] and F_y = F_z = 0 in FreeFEM function.\n\nExample of using\n1 int nx = 100;\n2 meshL Th = Sline(nx);\n3 meshL Th31 = movemesh(Th, [x]);\n4 meshL Th32 = movemesh(Th, [x,-x*(x-1)]);\n5 meshL Th3 = Th31+Th32;\n\n\n\n\nThe command change¶\nThe command change changes the label of elements and border elements of a meshL.\nThe parameters for this command line are:\n\nrefedge =  is a vector of integer that contains successive pairs of the old label number to the new label number for elements.\nrefpoint =  is a vector of integer that contains successive pairs of the old region number to new region number for boundary elements.\nflabel =  is an integer function given the new value of the label.\nfregion =  is an integer function given the new value of the region.\nrmlpoint =  is a vector of integer, where edge’s label given are remove of the mesh\n\nThese vectors are composed of \\(n_{l}\\) successive pairs of numbers \\(O,N\\) where \\(n_{l}\\) is the number (label or region) that we want to change.\nFor example, we have:\n\n\\[\\begin{split}\\mathtt{label} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ] \\\\\n\\mathtt{region} & =  [ O_{1}, N_{1}, ..., O_{n_{l}},N_{n_{l}} ]\\end{split}\\]\n\n\nThe commands buildBdMesh and Gamma¶\nThe command Gamma allows to extract the border mesh independly of a surface mesh.\nWith this function, the constructed border mesh contains the full geometric description of th eboundary surface. In case where the border mesh doesn’t exist, before calling Gamma, must build it by calling the buildBdMesh function (see the next function description).\n1 load \"msh3\"\n2 int n =  10;\n3 meshS Th = square3(n,n);\n4 Th  =  buildBdMesh(Th); // build the border mesh\n5 // build Th1, the border of Th, defined by edges elements and point border elements\n6 meshL Th1  =  Th.Gamma;\n\n\n\n\nGlue of meshL meshes¶\nAn assembling of meshL is possible thanks to the operator +. The result returns a meshL, with caution of the right orientation at the merged interfaces. Here, the function checkmesh can be called.\n1  int n = 10;\n2  meshL Th1  =  segment(n);\n3  meshL Th2  =  segment(n,[0,x,0],orientation = 1);\n4  meshL Th3  =  segment(n,[x,0,1],orientation = 1);\n5  meshL Th4  =  segment(n,[0,0,x],orientation = -1);\n6 \n7  meshL Th  =  Th1+Th2+Th3+Th4;\n8  Th = rebuildBorder(Th, ridgeangledetection = pi/2.+0.0001);\n\n\n\nWarning\nFor the moment, the case of no manifold mesh are not considered in FreeFEM. To check if the meshL contains no manifold elements, the command nbnomanifold.\n\n\n\nThe command extract¶\nThis operator allows to extract a labeled piece or the entire border of a 2D mesh and project it in 3D. Optionally, a geometic transformation can be applied.\n1      mesh Th = square(10,10);\n2      int[int] ll = [4];\n3      meshL ThL  =  extract(Th,[x+2,y*5],refedge = ll);\n\n\n\n\nThe commands rebuildBorder¶\nThis operator, used in the last example, allows to reconstruted the border elements following a special criteria ridgeangledetection. By default, it value is \\(\\frac{8}{9}*arctan(1)\\approx40°\\), the diedral angle for a decahedron.\n\n\n\nThe commands checkmesh¶\nThis function is avalaible for all 3D meshes. It checkes and validates the a given mesh, allows to remove duplicate vertices and/or elements and border elements. The possible arguments are\n\n\nprecismesh =  this parameter is the criteria to define two merging points.By default, it value is 1e-7 and define the smallest axis parallel boxes containing the discretion domain of \\(\\Omega\\)\n\n\n\nremoveduplicate =  is a boolean, allowing remove the duplicated elements and border elements\nrebuildboundary =  is a boolean, allowing rebuild the border elements (in case of incomplete list given by the mesh)\n\nExample:\n1  mesh3 Th  =  checkmesh(Th);\n\n\n\n\nTetGen: A tetrahedral mesh generator¶\nTetGen is a software developed by Dr. Hang Si of Weierstrass Institute for Applied Analysis and Stochastics in Berlin, Germany [HANG2006].\nTetGen is free for research and non-commercial use.\nFor any commercial license utilization, a commercial license is available upon request to Hang Si.\nThis software is a tetrahedral mesh generator of a three dimensional domain defined by its boundary (a surface).\nThe input domain takes into account a polyhedral or a piecewise linear complex.\nThis tetrahedralization is a constrained Delaunay tetrahedralization.\nThe method used in TetGen to control the quality of the mesh is a Delaunay refinement due to Shewchuk [SHEWCHUK1998].\nThe quality measure of this algorithm is the Radius-Edge Ratio (see Section 1.3.1 [HANG2006] for more details).\nA theoretical bound of this ratio of the Shewchuk algorithm is obtained for a given complex of vertices, constrained segments and facets of surface mesh, with no input angle less than 90 degrees.\nThis theoretical bound is 2.0.\nThe launch of TetGen is done with the keyword tetg.\nThe parameters of this command line is:\n\nreftet =  sets the label of tetrahedra.\n\nlabel =  is a vector of integers that contains the old labels number at index \\(2i\\) and the new labels number at index \\(2i+1\\) of Triangles.This parameter is initialized as a label for the keyword change.\n\n\n\n\nswitch =  A string expression.This string corresponds to the command line switch of TetGen see Section 3.2 of [HANG2006].\n\n\n\nnbofholes =  Number of holes (default value: “size of holelist / 3”).\n\nholelist =  This array corresponds to holelist of TetGenio data structure [HANG2006].A real vector of size 3 * nbofholes.\nIn TetGen, each hole is associated with a point inside this domain.\nThis vector is \\(x_{1}^{h}, y_{1}^{h}, z_{1}^{h}, x_{2}^{h}, y_{2}^{h}, z_{2}^{h}, \\cdots,\\) where \\(x_{i}^{h},y_{i}^{h},z_{i}^{h}\\) is the associated point with the \\(i^{\\mathrm{th}}\\) hole.\n\n\n\nnbofregions =  Number of regions (default value: “size of regionlist / 5”).\nregionlist =  This array corresponds to regionlist of TetGenio data structure [HANG2006].\nThe attribute and the volume constraint of region are given in this real vector of size 5 * nbofregions.\nThe \\(i^{\\mathrm{th}}\\) region is described by five elements: \\(x-\\)coordinate, \\(y-\\)coordinate and \\(z-\\)coordinate of a point inside this domain (\\(x_{i},y_{i},z_{i}\\)); the attribute (\\(at_{i}\\)) and the maximum volume for tetrahedra (\\(mvol_{i}\\)) for this region.\nThe regionlist vector is: \\(x_{1}, y_{1}, z_{1}, at_{1}, mvol_{1}, x_{2}, y_{2}, z_{2}, at_{2}, mvol_{2}, \\cdots\\).\n\nnboffacetcl =  Number of facets constraints “size of facetcl / 2”).\nfacetcl =  This array corresponds to facetconstraintlist of TetGenio data structure [HANG2006].\nThe \\(i^{th}\\) facet constraint is defined by the facet marker \\(Ref_{i}^{fc}\\) and the maximum area for faces \\(marea_{i}^{fc}\\).\nThe facetcl array is: \\(Ref_{1}^{fc}, marea_{1}^{fc}, Ref_{2}^{fc}, marea_{2}^{fc}, \\cdots\\).\nThis parameters has no effect if switch q is not selected.\n\n\nPrincipal switch parameters in TetGen:\n\np Tetrahedralization of boundary.\n\nq Quality mesh generation.The bound of Radius-Edge Ratio will be given after the option q.\nBy default, this value is 2.0.\n\n\n\n\na Constructs with the volume constraints on tetrahedra.These volumes constraints are defined with the bound of the previous switch q or in the parameter regionlist.\n\n\n\n\nA Attributes reference to region given in the regionlist.The other regions have label 0.\n\n\nThe option AA gives a different label at each region.\nThis switch works with the option p.\nIf option r is used, this switch has no effect.\n\n\nr Reconstructs and Refines a previously generated mesh.This character is only used with the command line tetgreconstruction.\n\n\n\nY This switch preserves the mesh on the exterior boundary.\nThis switch must be used to ensure a conformal mesh between two adjacent meshes.\n\nYY This switch preserves the mesh on the exterior and interior boundary.\nC The consistency of the result’s mesh is testing by TetGen.\nCC The consistency of the result’s mesh is testing by TetGen and also constrained checks of Delaunay mesh (if p switch is selected) or the consistency of Conformal Delaunay (if q switch is selected).\n\nV Give information of the work of TetGen.More information can be obtained in specified VV or VVV.\n\n\n\nQ Quiet: No terminal output except errors\nM The coplanar facets are not merging.\n\nT Sets a tolerance for coplanar test.The default value is \\(1e-8\\).\n\n\n\nd Intersections of facets are detected.\n\nTo obtain a tetrahedral mesh with TetGen, we need the surface mesh of a three dimensional domain.\nWe now give the command line in FreeFEM to construct these meshes.\nThe keyword tetgtransfo\nThis keyword corresponds to a composition of command line tetg and movemesh23.\n1 tetgtransfo(Th2, transfo = [Phi(1), Phi(2), Phi(3)]), ...)  =  tetg(Th3surf, ...),\n\n\nwhere Th3surf  =  movemesh23(Th2, transfo = [Phi(1), Phi(2), Phi(3)]) and Th2 is the input two dimensional mesh of tetgtransfo.\nThe parameters of this command line are, on one hand, the parameters label, switch, regionlist, nboffacetcl, facetcl of keyword tetg and on the other hand, the parameter ptmerge of keyword movemesh23.\n\nNote\nTo use tetgtransfo, the result’s mesh of movemesh23 must be a closed surface and define one region only. Therefore, the parameter regionlist is defined for one region.\nAn example of this keyword can be found in line 61 of the Build layer mesh example.\n\nThe keyword tetgconvexhull\nFreeFEM, using TetGen, is able to build a tetrahedralization from a set of points.\nThis tetrahedralization is a Delaunay mesh of the convex hull of the set of points.\nThe coordinates of the points can be initialized in two ways.\nThe first is a file that contains the coordinate of points \\(X_{i} = (x_{i}, y_{i}, z_{i})\\).\nThis file is organized as follows:\n\n\\[\\begin{split}\\begin{array}{ccc}\nn_{v} & & \\\\\nx_{1} & y_{1} & z_{1} \\\\\nx_{2} & y_{2} & z_{2} \\\\\n\\vdots &\\vdots & \\vdots \\\\\nx_{n_v} & y_{n_v} & z_{n_v}\n\\end{array}\\end{split}\\]\nThe second way is to give three arrays that correspond respectively to the \\(x-\\)coordinates, \\(y-\\)coordinates and \\(z-\\)coordinates.\nThe parameters of this command line are :\n\n\nswitch =  A string expression.This string corresponds to the command line switch of TetGen see Section 3.2 of [HANG2006].\n\n\n\n\nreftet =  An integer expression.Set the label of tetrahedra.\n\n\n\n\nlabel =  An integer expression.Set the label of triangles.\n\n\n\n\nIn the string switch, we can’t used the option p and q of TetGen.\n\n\nReconstruct/Refine a 3d mesh with TetGen¶\nMeshes in three dimension can be refined using TetGen with the command line tetgreconstruction.\nThe parameter of this keyword are\n\n\nregion =  an integer array that changes the region number of tetrahedra.This array is defined as the parameter reftet in the keyword change.\n\n\n\n\nlabel =  an integer array that changes the label of boundary triangles.This array is defined as the parameter label in the keyword change.\n\n\n\n\nsizeofvolume =  a reel function.This function constraints the volume size of the tetrahedra in the domain (see Isotrope mesh adaption section to build a 3d adapted mesh).\n\n\n\n\nThe parameters switch, nbofregions, regionlist, nboffacetcl and facetcl of the command line which call TetGen (tetg) is used for tetgrefine.\nIn the parameter switch = , the character r should be used without the character p.\nFor instance, see the manual of TetGen [HANG2006] for effect of r to other character.\nThe parameter regionlist defines a new volume constraint in the region.\nThe label in the regionlist will be the previous label of region.\nThis parameter and nbofregions can’t be used with the parameter sizeofvolume.\n**Example refinesphere.edp**\n 1 load \"msh3\"\n 2 load \"tetgen\"\n 3 load \"medit\"\n 4 \n 5 mesh Th = square(10,20,[x*pi-pi/2,2*y*pi]);  //  $]\\frac{-pi}{2},frac{-pi}{2}[\\times]0,2\\pi[ $\n 6 //  a parametrization of a sphere\n 7 func f1  = cos(x)*cos(y);\n 8 func f2  = cos(x)*sin(y);\n 9 func f3  =  sin(x);\n10 //  partiel derivative of the parametrization DF\n11 func f1x = sin(x)*cos(y);\n12 func f1y = -cos(x)*sin(y);\n13 func f2x = -sin(x)*sin(y);\n14 func f2y = cos(x)*cos(y);\n15 func f3x = cos(x);\n16 func f3y = 0;\n17 // $  M  =  DF^t DF $\n18 func m11 = f1x^2+f2x^2+f3x^2;\n19 func m21 = f1x*f1y+f2x*f2y+f3x*f3y;\n20 func m22 = f1y^2+f2y^2+f3y^2;\n21 \n22 func perio = [[4,y],[2,y],[1,x],[3,x]];\n23 real hh = 0.1;\n24 real vv =  1/square(hh);\n25 verbosity = 2;\n26 Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n27 Th = adaptmesh(Th,m11*vv,m21*vv,m22*vv,IsMetric = 1,periodic = perio);\n28 plot(Th,wait = 1);\n29 \n30 verbosity = 2;\n31 \n32 // construction of the surface of spheres\n33 real Rmin   =  1.;\n34 func f1min  =  Rmin*f1;\n35 func f2min  =  Rmin*f2;\n36 func f3min  =  Rmin*f3;\n37 \n38 meshS ThS = movemesh23(Th,transfo = [f1min,f2min,f3min]);\n39 \n40 real[int] domain  =  [0.,0.,0.,145,0.01];\n41 mesh3 Th3sph = tetg(ThS,switch = \"paAAQYY\",nbofregions = 1,regionlist = domain);\n42 \n43 int[int] newlabel  =  [145,18];\n44 real[int] domainrefine  =  [0.,0.,0.,145,0.0001];\n45 mesh3 Th3sphrefine = tetgreconstruction(Th3sph,switch = \"raAQ\",region = newlabel,nbofregions = 1,regionlist = domainrefine,sizeofvolume = 0.0001);\n46 \n47 int[int] newlabel2  =  [145,53];\n48 func fsize  =  0.01/(( 1 + 5*sqrt( (x-0.5)^2+(y-0.5)^2+(z-0.5)^2) )^3);\n49 mesh3 Th3sphrefine2 = tetgreconstruction(Th3sph,switch = \"raAQ\",region = newlabel2,sizeofvolume = fsize);\n50 \n51  medit(\"sphere\",Th3sph,wait = 1);\n52  medit(\"sphererefinedomain\",wait = 1,Th3sphrefine);\n53  medit(\"sphererefinelocal\",wait = 1,Th3sphrefine2);\n54 \n55 // FFCS: testing 3d plots\n56 plot(Th3sph);\n57 plot(Th3sphrefine);\n58 plot(Th3sphrefine2);\n\n\n\n\n\nRead/Write Statements for meshes¶\n\n2d case¶\n\nformat of  mesh data¶\nUsers who want to read a triangulation made elsewhere should see the structure of the file generated below:\n1 border C(t = 0, 2*pi){x = cos(t); y = sin(t);}\n2 mesh Th1  =  buildmesh(C(10));\n3 savemesh(Th1, \"mesh.msh\");\n4 mesh Th2 = readmesh(\"mesh.msh\");\n\n\nThe mesh is shown on Fig. 95.\nThe information about Th are saved in the file mesh.msh whose structure is shown on Table 1.\nAn external file contains a mesh at format .mesh can be read by the ommand readmesh(file_name).\nThere, \\(n_v\\) denotes the number of vertices, \\(n_t\\) the number of triangles and \\(n_s\\) the number of edges on boundary.\nFor each vertex \\(q^i,\\, i = 1,\\cdots,n_v\\), denoted by \\((q^i_x,q^i_y)\\) the \\(x\\)-coordinate and \\(y\\)-coordinate.\nEach triangle \\(T_k, k = 1,\\cdots,n_t\\) has three vertices \\(q^{k_1},\\, q^{k_2},\\,q^{k_3}\\) that are oriented counter-clockwise.\nThe boundary consists of 10 lines \\(L_i,\\, i = 1,\\cdots,10\\) whose end points are \\(q^{i_1},\\, q^{i_2}\\).\n\n\n\nFig. 95 Mesh by buildmesh(C(10))¶\n\n\nIn the Fig. 95, we have the following.\n\\(n_v = 14, n_t = 16, n_s = 10\\)\n\\(q^1 = (-0.309016994375, 0.951056516295)\\)\n\\(\\dots\\)\n\\(q^{14} = (-0.309016994375, -0.951056516295)\\)\nThe vertices of \\(T_1\\) are \\(q^9, q^{12},\\, q^{10}\\).\n\\(\\dots\\)\nThe vertices of \\(T_{16}\\) are \\(q^9, q^{10}, q^{6}\\).\nThe edge of the 1st side \\(L_1\\) are \\(q^6, q^5\\).\n\\(\\dots\\)\nThe edge of the 10th side \\(L_{10}\\) are \\(q^{10}, q^6\\).\n\nTable 1 The structure of mesh_sample.msh¶\n\n\n\n\n\nContent of the file\nExplanation\n\n\n\n14 16 10\n\\(n_v\\quad n_t\\quad n_e\\)\n\n-0.309016994375 0.951056516295 1\n0.309016994375 0.951056516295 1\n…\n-0.309016994375 -0.951056516295 1\n\n\\(q^1_x\\quad q^1_y\\quad\\) boundary label \\( = 1\\)\n\\(q^2_x\\quad q^2_y\\quad\\) boundary label \\( = 1\\)\n…\n\\(q^{14}_x\\quad q^{14}_y\\quad\\) boundary label \\( = 1\\)\n\n\n9 12 10 0\n5 9 6 0\n…\n9 10 6 0\n\n\\(1_1\\quad 1_2\\quad 1_3\\quad\\) region label \\( = 0\\)\n\\(2_1\\quad 2_2\\quad 2_3\\quad\\) region label \\( = 0\\)\n…\n\\(16_1\\quad 16_2\\quad 16_3\\quad\\) region label \\( = 0\\)\n\n\n6 5 1\n5 2 1\n…\n10 6 1\n\n\\(1_1\\quad 1_2\\quad\\) boundary label \\( = 1\\)\n\\(2_1\\quad 2_2\\quad\\) boundary label \\( = 1\\)\n…\n\\(10_1\\quad 10_2\\quad\\) boundary label \\( = 1\\)\n\n\n\n\nIn FreeFEM there are many mesh file formats available for communication with other tools such as emc2, modulef, … (see Mesh format chapter ).\nThe extension of a file implies its format.\nMore details can be found on the file format .msh in the article by F. Hecht “bamg : a bidimensional anisotropic mesh generator” [HECHT1998_2].\nA mesh file can be read into FreeFEM except that the names of the borders are lost and only their reference numbers are kept.\nSo these borders have to be referenced by the number which corresponds to their order of appearance in the program, unless this number is overwritten by the keyword label. Here are some examples:\n 1 // Parameters\n 2 int n  =  10;\n 3 \n 4 // Mesh\n 5 border floor(t = 0, 1){x = t; y = 0; label = 1;};\n 6 border right(t = 0, 1){x = 1; y = t; label = 5;};\n 7 border ceiling(t = 1, 0){x = t; y = 1; label = 5;};\n 8 border left(t = 1, 0){x = 0; y = t; label = 5;};\n 9 \n10 mesh th  =  buildmesh(floor(n) + right(n) + ceiling(n) + left(n));\n11 \n12 //save mesh in different formats\n13 savemesh(th, \"toto.am_fmt\"); // format \"formated Marrocco\"\n14 savemesh(th, \"toto.Th\"); // format database db mesh \"bamg\"\n15 savemesh(th, \"toto.msh\"); // format freefem\n16 savemesh(th, \"toto.nopo\"); // modulef format\n17 \n18 // Fespace\n19 fespace femp1(th, P1);\n20 femp1 f  =  sin(x)*cos(y);\n21 femp1 g;\n22 \n23 //save the fespace function in a file\n24 {\n25   ofstream file(\"f.txt\");\n26   file << f[] << endl;\n27 } //the file is automatically closed at the end of the block\n28 //read a file and put it in a fespace function\n29 {\n30   ifstream file(\"f.txt\");\n31   file >> g[] ;\n32 }//the file is equally automatically closed\n33 \n34 // Plot\n35 plot(g);\n36 \n37 // Mesh 2\n38 //read the mesh for freefem format saved mesh\n39 mesh th2  =  readmesh(\"toto.msh\");\n40 \n41 // Fespace 2\n42 fespace Vh2(th2, P1);\n43 Vh2 u, v;\n44 \n45 // Problem\n46 //solve:\n47 //  $u + \\Delta u  =  g$ in $\\Omega $\n48 //  $u = 0$ on $\\Gamma_1$\n49 //  $\\frac{\\partial u }{\\partial n}  =  g$ on $\\Gamma_2$\n50 solve Problem(u, v)\n51    =  int2d(th2)(\n52       u*v\n53     - dx(u)*dx(v)\n54     - dy(u)*dy(v)\n55   )\n56   + int2d(th2)(\n57     - g*v\n58   )\n59   + int1d(th2, 5)(\n60       g*v\n61   )\n62   + on(1, u = 0)\n63   ;\n64 \n65 // Plot\n66 plot(th2, u);\n\n\n\n\nInput/output for a mesh¶\n\n\nthe command readmesh\n\n\n\nThe function readmesh allows to build a mesh from a data file1 mesh Th = readmeshS(\"Th.mesh\");\n2 mesh Thff  =  readmesh(\"Thff.msh\"); // FreeFEM format\n\n\n\nthe command savemesh\n\n\nThe function savemesh allows to export a mesh1 savemesh(Th,\"Th.mesh\")\n2 savemesh(Thff,\"Thff.msh\") // FreeFEM format\n3 \n4 savemesh(th, \"toto.msh\"); // format freefem  savemesh(th, \"toto.am_fmt\"); // format \"formated Marrocco\"\n5 savemesh(th, \"toto.Th\"); // format database db mesh \"bamg\"\n6 savemesh(th, \"toto.nopo\"); // modulef format\n7 // allows to save the 2d mesh with the 3rd space coordinate as a scalar solution for visualise\n8 savemesh(Th,\"mm\",[x,y,u]); //  save surface mesh for medit, see for example minimal-surf.edp\n9 exec(\"medit mm;rm mm.bb mm.faces mm.points\");\n\n\n\nthe command vtkloadS\n\n\n\nThe function vtkload allows to build a mesh from a data mesh at vtk format mesh\n\n1 load \"iovtk\"\n2 mesh Th = vtkloadS(\"mymesh.vtk\");\n\n\n\n\nthe command savevtk\n\n\nThe function savevtk allows to export a mesh to a data mesh at vtk format mesh1  load \"iovtk\"\n2  savevtk(\"Th.vtk\",Th);\n\n\n\nthe command gmshload\n\n\nThe function gmshloadS allows to build a mesh from a data mesh file at formatmsh (GMSH)1 load \"gmsh\"\n2 mesh Th = gmshload(\"mymesh.msh\");\n\n\n\nthe command savegmsh\n\n\nThe function savegmsh allows to export a mesh to a data mesh msh (GMSH)1     load \"gmsh\"\n2 savegmsh(Th, \"Th\");\n\n\n\n\n\n\n\n3d case¶\n\nformat of  mesh data¶\nIn three dimensions, the file mesh format supported for input and output files by FreeFEM are the extension .msh and .mesh.\nThese formats are described in the Mesh Format section.\nExtension file .msh The structure of the files with extension .msh in 3D is given by:\n\n\\[\\begin{split}\\begin{array}{cccccc}\n    n_v & n_{tet} & n_{tri} & & \\\\\n    q^1_x & q^1_y & q^1_z & Vertex label & \\\\\n    q^2_x & q^2_y & q^2_z & Vertex label & \\\\\n    \\vdots & \\vdots & \\vdots & \\vdots & \\\\\n    q^{n_v}_x & q^{n_v}_y & q^{n_v}_z & Vertex label & \\\\\n    1_1 & 1_2 & 1_3 & 1_4 & region label \\\\\n    2_1 & 2_2 & 2_3 & 2_4 & region label \\\\\n    \\vdots & \\vdots & \\vdots & \\vdots & \\vdots \\\\\n    (n_{tet})_1 & (n_{tet})_2 & (n_{tet})_3 & (n_{tet})_4 & region label \\\\\n    1_1 & 1_2 & 1_3 & boundary label & \\\\\n    2_1 & 2_2 & 2_3 & boundary label & \\\\\n    \\vdots & \\vdots & \\vdots & \\vdots & \\\\\n    (n_tri)_{1} & (n_{tri})_2 & (n_{tri})_3 & boundary label & \\\\\n\\end{array}\\end{split}\\]\nIn this structure, \\(n_v\\) denotes the number of vertices, \\(n_{tet}\\) the number of tetrahedra and \\(n_{tri}\\) the number of triangles.\nFor each vertex \\(q^i,\\, i = 1,\\cdots,n_v\\), we denote by \\((q^i_x,q^i_y,q^i_z)\\) the \\(x\\)-coordinate, the \\(y\\)-coordinate and the \\(z\\)-coordinate.\nEach tetrahedra \\(T_k, k = 1,\\cdots,n_{tet}\\) has four vertices \\(q^{k_1},\\, q^{k_2},\\,q^{k_3}, \\,q^{k_4}\\).\nThe boundary consists of a union of triangles.\nEach triangle \\(tri_j, j = 1,\\cdots,n_{tri}\\) has three vertices \\(q^{j_1},\\, q^{j_2},\\,q^{j_3}\\).\nextension file .mesh The data structure for a three dimensional mesh is composed of the data structure presented in Mesh Format section and a data structure for the tetrahedra. The tetrahedra of a three dimensional mesh are referred using the following field:\n 1 Tetrahedra\n 2 NbTetrahedra\n 3 Vertex1 Vertex2 Vertex3 Vertex4 Label\n 4 ...\n 5 Vertex1 Vertex2 Vertex3 Vertex4 Label\n 6 Triangles\n 7 NbTriangles\n 8 Vertex1 Vertex2 Vertex3 Label\n 9 ...\n10 Vertex1 Vertex2 Vertex3 Label\n\n\nThis field is express with the notation of Mesh Format section.\n\n\nInput/output for a mesh3¶\n\n\nthe command readmesh3\n\n\n\nThe function readmesh3 allows to build a mesh3 from a data file1 mesh3 Th3 = readmesh3(\"Th3.mesh\");\n2 mesh3 Th3ff  =  readmesh3(\"Th3ff.msh\"); // FreeFEM format\n\n\n\nthe command savemesh\n\n\nThe function savemesh allows to export a mesh31 savemesh(Th3,\"Th3.mesh\")\n2 savemesh(Th3ff,\"Th3ff.msh\") // FreeFEM format\n\n\n\nthe command vtkload3\n\n\n\nThe function vtkload3 allows to build a mesh3 from a data mesh at vtk format mesh\n\n1 load \"iovtk\"\n2 mesh3 Th3 = vtkloadS(\"mymesh.vtk\");\n\n\n\n\nthe command savevtk\n\n\nThe function savevtk allows to export a mesh3 to a data mesh at vtk format mesh1  load \"iovtk\"\n2  savevtk(\"Th3.vtk\",Th3);\n\n\n\nthe command gmshload3\n\n\nThe function gmshload3 allows to build a mesh3 from a data mesh file at formatmsh (GMSH)1 load \"gmsh\"\n2 mesh3 Th3 = gmshload3(\"mymesh.msh\");\n\n\n\nthe command savegmsh\n\n\nThe function savegmsh allows to export a mesh3 to a data mesh msh (GMSH)1     load \"gmsh\"\n2 savegmsh(Th3, \"Th3\");\n\n\n\n\n\n\n\nSurface 3d case¶\n\nformat of  mesh data¶\nLike 2d and 3d, the input and output format files supported by FreeFEM are the extension .msh and .mesh.\nThese formats are described in the Mesh Format section.\nExtension file .msh The structure of the files with extension .msh in surface 3D is given by:\n\n\\[\\begin{split}\\begin{array}{cccccc}\n    n_v & n_{tri} & n_{edges} & & \\\\\n    q^1_x & q^1_y & q^1_z & Vertex label & \\\\\n    q^2_x & q^2_y & q^2_z & Vertex label & \\\\\n    \\vdots & \\vdots & \\vdots & \\vdots & \\\\\n    q^{n_v}_x & q^{n_v}_y & q^{n_v}_z & Vertex label & \\\\\n    1_1 & 1_2 & 1_3  & region label \\\\\n    2_1 & 2_2 & 2_3  & region label \\\\\n    \\vdots & \\vdots & \\vdots  & \\vdots \\\\\n    (n_{tri})_1 & (n_{tri})_2 & (n_{tri})_3 & region label \\\\\n    1_1 & 1_2 & boundary label & \\\\\n    2_1 & 2_2 & boundary label & \\\\\n    \\vdots &  \\vdots & \\vdots & \\\\\n    (n_edge)_{1} & (n_{edge})_2 & boundary label & \\\\\n\\end{array}\\end{split}\\]\nIn this structure, \\(n_v\\) denotes the number of vertices, \\(n_{tet}\\) the number of tetrahedra and \\(n_{tri}\\) the number of triangles.\nFor each vertex \\(q^i,\\, i = 1,\\cdots,n_v\\), we denote by \\((q^i_x,q^i_y,q^i_z)\\) the \\(x\\)-coordinate, the \\(y\\)-coordinate and the \\(z\\)-coordinate.\nEach tetrahedra \\(T_k, k = 1,\\cdots,n_{tet}\\) has four vertices \\(q^{k_1},\\, q^{k_2},\\,q^{k_3}, \\,q^{k_4}\\).\nThe boundary consists of a union of triangles.\nEach triangle \\(be_j, j = 1,\\cdots,n_{tri}\\) has three vertices \\(q^{j_1},\\, q^{j_2},\\,q^{j_3}\\).\nextension file .mesh The data structure for a three dimensional mesh is composed of the data structure presented in Mesh Format section and a data structure for the tetrahedra. The tetrahedra of a three dimensional mesh are referred using the following field:\n 1 MeshVersionFormatted 2\n 2 Dimension 3\n 3 \n 4 Vertices\n 5 NbVertices\n 6 (v0)x (v0)y (v0)z\n 7 ...\n 8 (vn)x (vn)y (vn)z\n 9 \n10 Triangles\n11 NbTriangles\n12 Vertex1 Vertex2 Vertex3 Label\n13 ...\n14 Vertex1 Vertex2 Vertex3 Label\n15 \n16 Edges\n17 NbEdges\n18 Vertex1 Vertex2 Label\n19 ...\n20 Vertex1 Vertex2 Label\n21 \n22 End\n\n\nThis field is express with the notation of Mesh Format section.\n\n\nInput/output for a meshS¶\n\n\nthe command readmesh3\n\n\n\nThe function readmeshS allows to build a meshS from a data file1 meshS ThS = readmeshS(\"ThS.mesh\");\n2 meshS Th3ff  =  readmeshS(\"ThSff.msh\"); // FreeFEM format\n\n\n\nthe command savemesh\n\n\nThe function savemesh allows to export a meshS1 savemesh(ThS,\"ThS.mesh\")\n2 savemesh(ThSff,\"ThSff.msh\") // FreeFEM format\n\n\n\nthe command vtkloadS\n\n\n\nThe function vtkloadS allows to build a meshS from a data mesh at vtk format mesh\n\n1 load \"iovtk\"\n2 meshS ThS = vtkloadS(\"mymesh.vtk\");\n\n\n\n\nthe command savevtk\n\n\nThe function savevtk allows to export a meshS to a data mesh at vtk format mesh1  load \"iovtk\"\n2  savevtk(\"ThS.vtk\",ThS);\n\n\n\nthe command gmshloadS\n\n\nThe function gmshloadS allows to build a meshS from a data mesh file at formatmsh (GMSH)1 load \"gmsh\"\n2 meshS ThS = gmshloadS(\"mymesh.msh\");\n\n\n\nthe command savegmsh\n\n\nThe function savegmsh allows to export a meshS to a data mesh msh (GMSH)1     load \"gmsh\"\n2 savegmsh(ThS, \"ThS\");\n\n\n\n\n\n\n\n\nMedit¶\nThe keyword medit allows to display a mesh alone or a mesh and one or several functions defined on the mesh using the Pascal Frey’s freeware medit.\nmedit opens its own window and uses OpenGL extensively.\nNaturally to use this command medit must be installed.\nA vizualisation with medit of scalar solutions \\(f1\\) and \\(f2\\) continuous, piecewise linear and known at the vertices of the mesh Th is obtained using:\n1 medit(\"sol1 sol2\", Th, f1, f2, order = 1);\n\n\nThe first plot named sol1 display f1.\nThe second plot names sol2 display f2.\nThe arguments of the function medit are the name of the differents scenes (separated by a space) of medit, a mesh and solutions.\nEach solution is associated with one scene.\nThe scalar, vector and symmetric tensor solutions are specified in the format described in the section dealing with the keyword savesol.\nThe parameters of this command line are :\n\n\norder =  0 if the solution is given at the center of gravity of elements.1 is the solution is given at the vertices of elements.\n\n\n\n\nmeditff =  set the name of execute command of medit.By default, this string is medit.\n\n\n\nsave =  set the name of a file .sol or .solb to save solutions.\n\nThis command line allows also to represent two differents meshes and solutions on them in the same windows.\nThe nature of solutions must be the same.\nHence, we can vizualize in the same window the different domains in a domain decomposition method for instance.\nA vizualisation with medit of scalar solutions \\(h1\\) and \\(h2\\) at vertices of the mesh Th1 and Th2 respectively are obtained using:\n1 medit(\"sol2domain\", Th1, h1, Th2, h2, order = 1);\n\n\n\nTip\nMedit\n 1 load \"medit\"\n 2 \n 3 // Initial Problem:\n 4 // Resolution of the following EDP:\n 5 // -Delta u_s  =  f on \\Omega  =  { (x,y) | 1 < =  sqrt(x^2+y^2) < =  2 }\n 6 // -Delta u_1  =  f1 on \\Omega_1  =  { (x,y) | 0.5 < =  sqrt(x^2+y^2) < =  1. }\n 7 // u  =  1 on Gamma\n 8 // Null Neumman condition on Gamma_1 and on Gamma_2\n 9 // We find the solution u by solving two EDP defined on domain Omega and Omega_1\n10 // This solution is visualize with medit\n11 \n12 verbosity = 3;\n13 \n14 // Mesh\n15 border Gamma(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;};\n16 border Gamma1(t = 0, 2*pi){x = 2*cos(t); y = 2*sin(t); label = 2;};\n17 border Gamma2(t = 0, 2*pi){x = 0.5*cos(t); y = 0.5*sin(t); label = 3;};\n18 \n19 mesh Th  =  buildmesh(Gamma1(40) + Gamma(-40)); //Omega\n20 mesh Th1  =  buildmesh(Gamma(40) + Gamma2(-40)); //Omega_1\n21 \n22 // Fespace\n23 fespace Vh(Th, P2);\n24 func f  =  sqrt(x*x + y*y);\n25 Vh us, v;\n26 \n27 fespace Vh1(Th1, P2);\n28 func f1  =  10*sqrt(x*x+y*y);\n29 Vh1 u1, v1;\n30 \n31 // Macro\n32 macro Grad2(us) [dx(us), dy(us)] // EOM\n33 \n34 // Problem\n35 problem Lap2dOmega (us, v, init = false)\n36      =  int2d(Th)(\n37         Grad2(v)' * Grad2(us)\n38     )\n39     - int2d(Th)(\n40         f*v\n41     )\n42     +on(1, us = 1)\n43     ;\n44 \n45 problem Lap2dOmega1 (u1, v1, init = false)\n46      =  int2d(Th1)(\n47         Grad2(v1)' * Grad2(u1)\n48     )\n49     - int2d(Th1)(\n50         f1*v1\n51     )\n52     + on(1, u1 = 1)\n53     ;\n54 \n55 // Solve\n56 Lap2dOmega;\n57 Lap2dOmega1;\n58 \n59 // Plot with medit\n60 medit(\"solution\", Th, us, Th1, u1, order = 1, save = \"testsavemedit.solb\");\n\n\n\n\n\nMshmet¶\nMshmet is a software developed by P. Frey that allows to compute an anisotropic metric based on solutions (i.e. Hessian-based).\nThis software can return also an isotropic metric.\nMoreover, mshmet can also construct a metric suitable for levelset interface capturing.\nThe solution can be defined on 2D or 3D structured/unstructured meshes.\nFor example, the solution can be an error estimate of a FE solution.\nSolutions for mshmet are given as an argument.\nThe solution can be a func, a vector func, a symmetric tensor, a fespace function, a fespace vector function and a fespace symmetric tensor.\nThe symmetric tensor argument is defined as this type of data for datasol argument.\nThis software accepts more than one solution.\nFor example, the metric \\(M\\) computed with mshmet for the solution \\(u\\) defined on the mesh \\(Th\\) is obtained by writing:\n1 fespace Vh(Th, P1);\n2 Vh u; //a scalar fespace function\n3 real[int] M  =  mshmet(Th, u);\n\n\nThe parameters of the keyword mshmet are :\n\nnormalization  =  (b) do a normalization of all solution in \\([0,1]\\).\naniso  =  (b) build anisotropic metric if 1 (default 0: isotropic)\nlevelset  =  (b) build metric for levelset method (default: false)\nverbosity  =  (l) level of verbosity\nnbregul  =  (l) number of regularization’s iteration of solutions given (default 0).\nhmin  =  (d)\nhmax  =  (d)\nerr  =  (d) level of error.\nwidth  =  (d) the width\n\nmetric  =  a vector of double.This vector contains an initial metric given to mshmet.\nThe structure of the metric vector is described in the next paragraph.\n\n\n\n\nloptions  =  a vector of integer of size 7.This vector contains the integer parameters of mshmet (for expert only).\n\nloptions(0): normalization (default 1).\n\nloptions(1): isotropic parameters (default 0).1 for isotropic metric results otherwise 0.\n\n\n\n\nloptions(2): level set parameters (default 0).1 for building level set metric otherwise 0.\n\n\n\n\nloptions(3): debug parameters (default 0).1 for turning on debug mode otherwise 0.\n\n\n\nloptions(4): level of verbosity (default 10).\nloptions(5): number of regularization’s iteration of solutions given (default 0).\n\nloptions(6): previously metric parameter (default 0).1 for using previous metric otherwise 0.\n\n\n\n\n\n\n\n\ndoptions =  a vector of double of size 4.This vector contains the real parameters of mshmet (for expert only).\n\ndoptions(0): hmin : min size parameters (default 0.01).\ndoptions(1): hmax : max size parameters (default 1.0).\ndoptions(2): eps : tolerance parameters (default 0.01).\ndoptions(2): width : relative width for Level Set (\\(0<w<1\\)) (default 0.05).\n\n\n\n\n\nThe result of the keyword mshmet is a real[int] which contains the metric computed by mshmet at the different vertices \\(V_{i}\\) of the mesh.\nWith \\(nv\\) is the number of vertices, the structure of this vector is:\n\n\\[M_{iso} =  (m(V_0), m(V_1), \\ldots, m(V_{nv}))^t\\]\nfor a isotropic metric \\(m\\).\nFor a symmetric tensor metric \\(h = \\left(\\begin{array}{ccc} m_{1 1} & m_{1 2} & m_{1 3}\\\\ m_{2 1} & m_{2 2} & m_{2 3} \\\\ m_{3 1} & m_{3 2} & m_{3 3} \\end{array}\\right)\\) , the parameters metric is:\n\n\\[M_{aniso} =  (H(V_{0}), \\ldots, H(V_{nv}) )^t\\]\nwhere \\(H(V_{i})\\) is the vector of size 6 defined by \\([m11,m21,m22,m31,m32,m33]\\)\n\nTip\nmshmet\n 1 load \"mshmet\"\n 2 load \"medit\"\n 3 load \"msh3\"\n 4 \n 5 // Parameters\n 6 real error  =  0.01;\n 7 func zmin  =  0;\n 8 func zmax  =  1;\n 9 int MaxLayer  =  10;\n10 \n11 // Mesh\n12 border a(t = 0, 1.0){x = t; y = 0; label = 1;};\n13 border b(t = 0, 0.5){x = 1; y = t; label = 2;};\n14 border c(t = 0, 0.5){x = 1-t; y = 0.5; label = 3;};\n15 border d(t = 0.5, 1){x = 0.5; y = t; label = 4;};\n16 border e(t = 0.5, 1){x = 1-t; y = 1; label = 5;};\n17 border f(t = 0.0, 1){x = 0; y = 1-t; label = 6;};\n18 mesh Th  =  buildmesh(a(6) + b(4) + c(4) + d(4) + e(4) + f(6));\n19 mesh3 Th3  =  buildlayers(Th, MaxLayer, zbound = [zmin, zmax]);\n20 \n21 // Fespace\n22 fespace Vh3(Th3, P2);\n23 Vh3 u3, v3;\n24 \n25 fespace Vh3P1(Th3, P1);\n26 Vh3P1 usol;\n27 \n28 // Problem\n29 problem Problem2(u3, v3, solver = sparsesolver)\n30      =  int3d(Th3)(\n31         u3*v3*1.0e-10\n32         + dx(u3)*dx(v3)\n33         + dy(u3)*dy(v3)\n34         + dz(u3)*dz(v3)\n35     )\n36     - int3d(Th3)(\n37         v3\n38     )\n39     +on(0, 1, 2, 3, 4, 5, 6, u3 = 0)\n40     ;\n41 \n42 // Solve\n43 Problem2;\n44 cout << u3[].min << \" \" << u3[].max << endl;\n45 \n46 medit(\"Sol\", Th3, u3);\n47 \n48 real[int] bb  =  mshmet(Th3,u3);\n49 cout << \"Metric:\" << bb << endl;\n50 for (int ii  =  0; ii < Th3.nv; ii++)\n51     usol[][ii]  =  bb[ii];\n52 \n53 medit(\"Metric\", Th3, usol);\n\n\n\n\n\nFreeYams¶\nFreeYams is a surface mesh adaptation software which is developed by P. Frey.\nThis software is a new version of yams.\nThe adapted surface mesh is constructed with a geometric metric tensor field.\nThis field is based on the intrinsic properties of the discrete surface.\nAlso, this software allows to construct a simplification of a mesh.\nThis decimation is based on the Hausdorff distance between the initial and the current triangulation.\nCompared to the software yams, FreeYams can be used also to produce anisotropic triangulations adapted to levelset simulations.\nA technical report on freeYams documentation is available here.\nTo call FreeYams in FreeFEM, we used the keyword freeyams.\nThe arguments of this function are the initial mesh and/or metric.\nThe metric with freeyams are a func, a fespace function, a symmetric tensor function, a symmetric tensor fespace function or a vector of double (real[int]).\nIf the metric is a vector of double, this data must be given in metric parameter.\nOtherwise, the metric is given in the argument.\nFor example, the adapted mesh of Thinit defined by the metric \\(u\\) defined as fespace function is obtained by writing:\n1 fespace Vh(Thinit, P1);\n2 Vh u;\n3 mesh3 Th  =  freeyams(Thinit, u);\n\n\nThe symmetric tensor argument for freeyams keyword is defined as this type of data for datasol argument.\n\naniso =  (b) aniso or iso metric (default 0, iso)\nmem =  (l) memory of for freeyams in Mb (default -1,\nfreeyams choose)\nhmin =  (d)\nhmax =  (d)\ngradation =  (d)\noption =  (l)\n\n0 : mesh optimization (smoothing+swapping)\n1 : decimation+enrichment adaptated to a metric map. (default)\n-1 : decimation adaptated to a metric map.\n2 : decimation+enrichment with a Hausdorff-like method\n-2 : decimation with a Hausdorff-like method\n4 : split triangles recursively.\n9 : No-Shrinkage Vertex Smoothing\n\n\nridgeangle =  (d)\nabsolute =  (b)\nverbosity =  (i)\n\nmetric =  vector expression.This parameters contains the metric at the different vertices on the initial mesh.\nWith \\(nv\\) is the number of vertices, this vector is:\n\n\n\n\\[M_{iso} =  ( m(V_0), m(V_1), \\ldots, m(V_{nv}) )^t\\]\nfor a scalar metric \\(m\\).\nFor a symmetric tensor metric\n\\(h = \\left(\\begin{array}{ccc} m_{1 1} & m_{1 2} & m_{1 3}\\\\ m_{2 1} & m_{2 2} & m_{2 3} \\\\ m_{3 1} & m_{3 2} & m_{3 3} \\end{array}\\right)\\), the parameters metric is:\n\n\\[M_{aniso} =  ( H(V_{0}), \\ldots, H(V_{nv}) )^t\\]\nwhere \\(H(V_{i})\\) is the vector of size 6 defined by \\([m11,m21,m22,m31,m32,m33]\\)\n\n\nloptions =  a vector of integer of size 13.This vectors contains the integer options of FreeYams. (just for the expert)\n\n\nloptions(0): anisotropic parameter (default 0).If you give an anisotropic metric 1 otherwise 0.\n\n\n\n\nloptions(1): Finite Element correction parameter (default 0).1 for no Finite Element correction otherwise 0.\n\n\n\n\nloptions(2): Split multiple connected points parameter (default 1).1 for splitting multiple connected points otherwise 0.\n\n\n\nloptions(3): maximum value of memory size in Mbytes (default -1: the size is given by freeyams).\n\nloptions(4): set the value of the connected component which we want to obtain.(Remark: freeyams give an automatic value at each connected component).\n\n\n\nloptions(5): level of verbosity\n\nloptions(6): Create point on straight edge (no mapping) parameter (default 0).1 for creating point on straight edge otherwise 0.\n\n\n\n\nloptions(7): validity check during smoothing parameter.This parameter is only used with No-Shrinkage Vertex Smoothing optimization (optimization option parameter 9).\n1 for No validity checking during smoothing otherwise 0.\n\n\n\nloptions(8): number of desired’s vertices (default -1).\nloptions(9): number of iteration of optimizations (default 30).\n\nloptions(10): no detection parameter (default 0).1 for detecting the ridge on the mesh otherwise 0.\nThe ridge definition is given in the parameter doptions(12).\n\n\n\n\nloptions(11): no vertex smoothing parameter (default 0).1 for smoothing the vertices otherwise 0.\n\n\n\nloptions(12): Optimization level parameter (default 0).\n\n\n\n0 : mesh optimization (smoothing+swapping)\n1 : decimation+enrichment adaptated to a metric map.\n-1: decimation adaptated to a metric map.\n2 : decimation+enrichment with a Hausdorff-like method\n-2: decimation with a Hausdorff-like method\n4 : split triangles recursively.\n9 : No-Shrinkage Vertex Smoothing\n\n\n\n\n\n\ndoptions =  a vector of double of size 11.This vectors contains the real options of freeyams.\n\n\n\ndoptions(0): Set the geometric approximation (Tangent plane deviation) (default 0.01).\ndoptions(1): Set the lamda parameter (default -1).\ndoptions(2): Set the mu parmeter (default -1).\ndoptions(3): Set the gradation value (Mesh density control) (default 1.3).\ndoptions(4): Set the minimal size(hmin) (default -2.0: the size is automatically computed).\ndoptions(5): Set the maximal size(hmax) (default -2.0: the size is automatically computed).\ndoptions(6): Set the tolerance of the control of Chordal deviation (default -2.0).\ndoptions(7): Set the quality of degradation (default 0.599).\ndoptions(8): Set the declic parameter (default 2.0).\ndoptions(9): Set the angular walton limitation parameter (default 45 degree).\ndoptions(10): Set the angular ridge detection (default 45 degree).\n\n\n\n\nTip\nfreeyams\n 1 load \"msh3\"\n 2 load \"medit\"\n 3 load \"freeyams\"\n 4 \n 5 // Parameters\n 6 int nn  =  20;\n 7 real zmin  =  0;\n 8 real zmax  =  1;\n 9 \n10 // Mesh\n11 mesh Th2  =  square(nn, nn);\n12 int[int] rup  =  [0, 2], rdown  =  [0, 1];\n13 int[int] rmid  =  [1, 1, 2, 1, 3, 1, 4, 1];\n14 mesh3 Th  =  buildlayers(Th2, nn, zbound = [zmin, zmax], reffacemid = rmid, reffaceup = rup, reffacelow = rdown);\n15 mesh3 Th3  =  freeyams(Th);\n16 \n17 medit(\"SurfaceMesh\", Th3);\n\n\n\n\n\nmmg3d¶\n\nTodo\nmmg3d-v4.0\n\nMmg3d is a 3D remeshing software developed by C. Dobrzynski and P. Frey.\nThis software allows to remesh an initial mesh made of tetrahedra.\nThis initial mesh is adapted to a geometric metric tensor field or to a displacement vector (moving rigid body).\nThe metric can be obtained with mshmet.\n\nNote\n\nIf no metric is given, an isotropic metric is computed by analyzing the size of the edges in the initial mesh.\nIf a displacement is given, the vertices of the surface triangles are moved without verifying the geometrical structure of the new surface mesh.\n\n\nThe parameters of mmg3d are :\n\n\noptions =  vector expression.This vector contains the option parameters of mmg3d.\nIt is a vector of 6 values, with the following meaning:\n\n\n\nOptimization parameters : (default 1)\n0 : mesh optimization.\n1 : adaptation with metric (deletion and insertion vertices) and optimization.\n-1 : adaptation with metric (deletion and insertion vertices) without optimization.\n4 : split tetrahedra (be careful modify the surface).\n9 : moving mesh with optimization.\n-9 : moving mesh without optimization.\n\nDebug mode : (default 0)\n1 : turn on debug mode.\n0 : otherwise.\n\nSpecify the size of bucket per dimension (default 64)\nSwapping mode : (default 0)\n1 : no edge or face flipping.\n0 : otherwise.\n\nInsert points mode : (default 0)\n1 : no edge splitting or collapsing and no insert points.\n0 : otherwise.\n\n\n\nVerbosity level (default 3)\n\n\n\nmemory =  integer expression.Set the maximum memory size of new mesh in Mbytes.\nBy default the number of maximum vertices, tetrahedra and triangles are respectively 500 000, 3000 000, 100000 which represent approximately a memory of 100 Mo.\n\n\n\n\nmetric =  vector expression.This vector contains the metric given at mmg3d.\nIt is a vector of size \\(nv\\) or 6 \\(nv\\) respectively for an isotropic and anisotropic metric where \\(nv\\) is the number of vertices in the initial mesh.\nThe structure of metric vector is described in the mshmet.\n\n\n\ndisplacement =  \\([\\Phi1, \\Phi2, \\Phi3]\\) set the displacement vector of the initial mesh \\(\\mathbf{\\Phi(x,y)}  =  [\\Phi1(x,y), \\Phi2(x,y), \\Phi3(x,y)]\\).\n\ndisplVect =  sets the vector displacement in a vector expression.This vector contains the displacement at each point of the initial mesh.\nIt is a vector of size 3 \\(nv\\).\n\n\n\n\n\nTip\nmmg3d\n 1 load \"msh3\"\n 2 load \"medit\"\n 3 load \"mmg3d\"\n 4 include \"Cube.idp\"\n 5 \n 6 // Parameters\n 7 int n  =  6;\n 8 int[int] Nxyz  =  [12, 12, 12];\n 9 real [int, int] Bxyz  =  [[0., 1.], [0., 1.], [0., 1.]];\n10 int [int, int] Lxyz  =  [[1, 1], [2, 2], [2, 2]];\n11 \n12 // Mesh\n13 mesh3 Th  =  Cube(Nxyz, Bxyz, Lxyz);\n14 \n15 real[int] isometric(Th.nv);\n16 for (int ii  =  0; ii < Th.nv; ii++)\n17     isometric[ii]  =  0.17;\n18 \n19 mesh3 Th3  =  mmg3d(Th, memory = 100, metric = isometric);\n20 \n21 // Plot\n22 medit(\"Initial\", Th);\n23 medit(\"Isometric\", Th3);\n\n\n\n\nTip\nFalling spheres\n 1 load \"msh3\"\n 2 load \"TetGen\"\n 3 load \"medit\"\n 4 load \"mmg3d\"\n 5 include \"MeshSurface.idp\"\n 6 \n 7 // Parameters\n 8 real hs  =  0.8;\n 9 int[int] N  =  [4/hs, 8/hs, 11.5/hs];\n10 real [int, int] B  =  [[-2, 2], [-2, 6], [-10, 1.5]];\n11 int [int, int] L  =  [[311, 311], [311, 311], [311, 311]];\n12 \n13 int[int] opt  =  [9, 0, 64, 0, 0, 3];\n14 real[int] vit = [0, 0, -0.3];\n15 func zero  =  0.;\n16 func dep  =  vit[2];\n17 \n18 // Meshes\n19 meshS ThH  =  SurfaceHex(N, B, L, 1);\n20 meshS ThSg  =  Sphere(1, hs, 300, -1);\n21 meshS ThSd  =  Sphere(1, hs, 310, -1);\n22 ThSd  =  movemesh(ThSd, [x, 4+y, z]);\n23 meshS ThHS  =  ThH + ThSg + ThSd;\n24 medit(\"ThHS\", ThHS);\n25 \n26 real voltet  =  (hs^3)/6.;\n27 real[int] domain  =  [0, 0, -4, 1, voltet];\n28 real [int] holes  =  [0, 0, 0, 0, 4, 0];\n29 mesh3 Th  =  tetg(ThHS, switch = \"pqaAAYYQ\", nbofregions = 1, regionlist = domaine, nbofholes = 2, holelist = holes);\n30 medit(\"Box-With-two-Ball\", Th);\n31 \n32 // Fespace\n33 fespace Vh(Th, P1);\n34 Vh uh,vh;\n35 \n36 // Macro\n37 macro Grad(u) [dx(u),dy(u),dz(u)]\n38 \n39 // Problem\n40 problem Lap (uh, vh, solver = CG)\n41      =  int3d(Th)(\n42         Grad(uh)' * Grad(vh)\n43     )\n44     + on(310, 300, uh = dep)\n45     + on(311, uh = 0.)\n46     ;\n47 \n48 // Falling loop\n49 for(int it  =  0; it < 29; it++){\n50     cout << \" ITERATION \" << it << endl;\n51 \n52     // Solve\n53     Lap;\n54 \n55     // Plot\n56     plot(Th, uh);\n57 \n58     // Sphere falling\n59     Th  =  mmg3d(Th, options = opt, displacement = [zero, zero, uh], memory = 1000);\n60 }\n\n\n\n\n\nA first 3d isotrope mesh adaptation process¶\n\nTip\nAdaptation 3D\n 1 load \"msh3\"\n 2 load \"TetGen\"\n 3 load \"mshmet\"\n 4 load \"medit\"\n 5 \n 6 // Parameters\n 7 int nn  =  6;\n 8 int[int] l1111  =  [1, 1, 1, 1]; //labels\n 9 int[int] l01  =  [0, 1];\n10 int[int] l11  =  [1, 1];\n11 \n12 real errm  =  1e-2; //level of error\n13 \n14 // Mesh\n15 mesh3 Th3  =  buildlayers(square(nn, nn, region = 0, label = l1111),\n16 nn, zbound = [0, 1], labelmid = l11, labelup = l01, labeldown = l01);\n17 \n18 Th3  =  trunc(Th3, (x<0.5) | (y < 0.5) | (z < 0.5), label = 1); //remove the ]0.5,1[^3 cube\n19 \n20 // Fespace\n21 fespace Vh(Th3, P1);\n22 Vh u, v, usol, h;\n23 \n24 // Macro\n25 macro Grad(u) [dx(u), dy(u), dz(u)] // EOM\n26 \n27 // Problem\n28 problem Poisson (u, v, solver = CG)\n29      =  int3d(Th3)(\n30         Grad(u)' * Grad(v)\n31     )\n32     - int3d(Th3)(\n33         1*v\n34     )\n35     + on(1, u = 0)\n36     ;\n37 \n38 // Loop\n39 for (int ii  =  0; ii < 5; ii++){\n40     // Solve\n41     Poisson;\n42     cout << \"u min, max  =  \" << u[].min << \" \"<< u[].max << endl;\n43 \n44     h = 0.; //for resizing h[] because the mesh change\n45     h[]  =  mshmet(Th3, u, normalization = 1, aniso = 0, nbregul = 1, hmin = 1e-3, hmax = 0.3, err = errm);\n46     cout << \"h min, max  =  \" << h[].min << \" \"<< h[].max << \" \" << h[].n << \" \" << Th3.nv << endl;\n47     plot(u, wait = true);\n48 \n49     errm * =  0.8; //change the level of error\n50     cout << \"Th3 \" << Th3.nv < \" \" << Th3.nt << endl;\n51     Th3  =  tetgreconstruction(Th3, switch = \"raAQ\", sizeofvolume = h*h*h/6.); //rebuild mesh\n52     medit(\"U-adap-iso-\"+ii, Th3, u, wait = true);\n53 }\n\n\n\n\n\nBuild a 2d mesh from an isoline¶\nThe idea is to get the discretization of an isoline of fluid meshes, this tool can be useful to construct meshes from image.\nFirst, we give an example of the isovalue meshes \\(0.2\\) of analytical function \\(\\sqrt{(x-1/2)^2 +(y-1/2)^2}\\), on unit square.\n 1 load \"isoline\"\n 2 \n 3 real[int,int] xy(3, 1); //to store the isoline points\n 4 int[int] be(1); //to store the begin, end couple of lines\n 5 {\n 6     mesh Th  =  square(10, 10);\n 7     fespace Vh(Th, P1);\n 8     Vh u  =  sqrt(square(x-0.5) + square(y-0.5));\n 9     real iso  =  0.2 ;\n10     real[int] viso  =  [iso];\n11     plot(u, viso = viso,Th);//to see the iso line\n12 \n13     int nbc  =  isoline(Th, u, xy, close = 1, iso = iso, beginend = be, smoothing = 0.1);\n\n\nThe isoline parameters are Th the mesh, the expression \\(u\\), the bidimentionnal array xy to store the list coordinate of the points.\nThe list of named parameter are :\n\niso =  value of the isoline to compute (0 is the default value)\nclose =  close the isoline with the border (default true), we add the part of the mesh border such the value is less than the isovalue\nsmoothing =  number of smoothing process is the \\({l} ^{r} {s}\\) where \\(l\\) is the length of the current line component, \\(r\\) the ratio, \\(s\\) is smoothing value. The smoothing default value is 0.\nratio =  the ratio (1 by default).\neps =  relative \\(\\varepsilon\\) (default 1e-10)\nbeginend =  array to get begin, end couple of each of sub line (resize automatically)\nfile =  to save the data curve in data file for gnuplot\n\nIn the array xy you get the list of vertices of the isoline, each connex line go from \\(i =  i_0^c ,\\dots, i_1^c-1\\) with \\(i_0^c  = be(2*c)\\) \\(i_1^c  = be(2*c+1)\\), and where \\(x_i =  xy(0,i), y_i = yx( 1,i), l_i = xy(2,i)\\).\nHere \\(l_i\\) is the length of the line (the origin of the line is point \\(i_0^c\\)).\nThe sense of the isoline is such that the upper part is at the left size of the isoline.\nSo here : the minimum is a point \\(0.5,05\\) so the curve 1 turn in the clockwise sense, the order of each component are sort such that the number of point by component is decreasing.\n 1       cout << \"Number of the line component  =  \" << nbc << endl;\n 2       cout << \"Number of points  =  \" << xy.m << endl;\n 3       cout << \"be  =  \" << be << endl;\n 4 \n 5       // shows the lines component\n 6       for (int c  =  0; c < nbc; ++c){\n 7          int i0  =  be[2*c], i1  =  be[2*c+1]-1;\n 8          cout << \"Curve \" << c << endl;\n 9          for(int i  =  i0; i < =  i1; ++i)\n10             cout << \"x =  \" << xy(0,i) << \" y =  \" << xy(1,i) << \" s =  \" << xy(2, i) << endl;\n11          plot([xy(0, i0:i1), xy(1, i0:i1)], wait = true, viso = viso, cmm = \" curve \"+c);\n12    }\n13 }\n14 \n15 cout << \"length of last curve  =  \" << xy(2, xy.m-1) << endl;\n\n\nWe also have a new function to easily parametrize a discrete curve defined by the couple \\(be, xy\\).\n 1 border Curve0(t = 0, 1){\n 2     int c = 0; //component 0\n 3     int i0 = be[2*c], i1 = be[2*c+1]-1;\n 4     P = Curve(xy, i0, i1, t); //Curve 0\n 5     label = 1;\n 6 }\n 7 \n 8 border Curve1(t = 0, 1){\n 9     int c = 1; //component 1\n10     int i0 = be[2*c], i1 = be[2*c+1]-1;\n11     P = Curve(xy, i0, i1, t); //Curve 1\n12     label = 1;\n13 }\n14 \n15 plot(Curve1(100)); //show curve\n16 mesh Th  =  buildmesh(Curve1(-100));\n17 plot(Th, wait = true);\n\n\nSecondly, we use this idea to build meshes from an image, we use the plugins ppm2rnm to read pgm a gray scale image and then we extract the gray contour at level 0.25.\n\nTip\nLeman lake\n 1 load \"ppm2rnm\"\n 2 load \"isoline\"\n 3 \n 4 // Parameters\n 5 string leman  =  \"LemanLake.pgm\";\n 6 real AreaLac  =  580.03; //in km^2\n 7 real hsize  =  5;\n 8 real[int, int] Curves(3, 1);\n 9 int[int] be(1);\n10 int nc; //nb of curve\n11 {\n12     real[int, int] ff1(leman); //read image\n13     //and set it in a rect. array\n14     int nx  =  ff1.n, ny  =  ff1.m;\n15     //build a Cartesian mesh such that the origin is in the right place.\n16     mesh Th  =  square(nx-1, ny-1, [(nx-1)*(x), (ny-1)*(1-y)]);\n17     //warning the numbering of the vertices (x,y) is\n18     //given by $i  =  x/nx + nx* y/ny $\n19     fespace Vh(Th, P1);\n20     Vh f1;\n21     f1[]  =  ff1; //transform array in finite element functions.\n22     nc  =  isoline(Th, f1, iso = 0.25, close = 1, Curves, beginend = be, smoothing = .1, ratio = 0.5);\n23 }\n24 \n25 //The longest isoline: the lake\n26 int ic0  =  be(0), ic1  =  be(1)-1;\n27 plot([Curves(0, ic0:ic1), Curves(1, ic0:ic1)], wait = true);\n28 \n29 int NC  =  Curves(2, ic1)/hsize;\n30 real xl  =  Curves(0, ic0:ic1).max - 5;\n31 real yl  =  Curves(1, ic0:ic1).min + 5;\n32 border G(t = 0, 1){P = Curve(Curves, ic0, ic1, t); label = 1+(x>xl)*2+(y<yl);}\n33 plot(G(-NC), wait = true);\n34 \n35 mesh Th  =  buildmesh(G(-NC));\n36 plot(Th, wait = true);\n37 \n38 real scale  =  sqrt(AreaLac/Th.area);\n39 Th  =  movemesh(Th, [x*scale, y*scale]);\n40 cout << \"Th.area  =  \" << Th.area << \" Km^2 \" << \"  =  =  \" << AreaLac << \" Km^2 \" << endl;\n41 plot(Th, wait = true, ps = \"leman.eps\");\n\n\n\n\n\n\nFig. 96 The image of the Leman lake meshes¶\n\n\n\n\n\nFig. 97 The mesh of the lake¶\n\n\nIsoline\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Notations\n\t\t\tNext topic: Finite element \n\t\t\n\t","l":"documentation/mesh-generation.html"},"14":{"t":"Notations","p":"\n\t\t\n   \nNotations¶\nHere mathematical expressions and corresponding FreeFEM commands are explained.\n\nGeneralities¶\n\n[\\(\\delta_{ij}\\)] Kronecker delta (\\(0\\) if \\(i\\neq j\\), 1 if \\(i = j\\) for integers \\(i,j\\))\n[\\(\\forall\\)] for all\n[\\(\\exists\\)] there exists\n[i.e.] that is\n[PDE] partial differential equation (with boundary conditions)\n[\\(\\emptyset\\)] the empty set\n[\\(\\mathbb{N}\\)] the set of integers (\\(a\\in \\mathbb{N}\\Leftrightarrow\\) int a), int means long int inside FreeFEM\n[\\(\\mathbb{R}\\)] the set of real numbers (\\(a\\in \\mathbb{R}\\Leftrightarrow\\) real a), double inside FreeFEM\n[\\(\\mathbb{C}\\)] the set of complex numbers (\\(a\\in \\mathbb{C}\\Leftrightarrow\\) complex a), complex<double>\n[\\(\\mathbb{R}^d\\)] \\(d\\)-dimensional Euclidean space\n\n\n\nSets, Mappings, Matrices, Vectors¶\nLet \\(E,\\, F,\\, G\\) be three sets and \\(A\\) the subset of \\(E\\).\n\n[\\(\\{x\\in E|\\; P\\}\\)] the subset of \\(E\\) consisting of the elements possessing the property \\(P\\)\n[\\(E\\cup F\\)] the set of elements belonging to \\(E\\) or \\(F\\)\n[\\(E\\cap F\\)] the set of elements belonging to \\(E\\) and \\(F\\)\n[\\(E\\setminus A\\)] the set \\(\\{x\\in E|\\; x\\not\\in A\\}\\)\n[\\(E+F\\)] \\(E\\cup F\\) with \\(E\\cap F = \\emptyset\\)\n[\\(E\\times F\\)] the Cartesian product of \\(E\\) and \\(F\\)\n[\\(E^n\\)] the \\(n\\)-th power of \\(E\\) (\\(E^2 = E\\times E\\), \\(E^n = E\\times E^{n-1}\\))\n[\\(f:\\; E\\to F\\)] the mapping form \\(E\\) into \\(F\\), i.e., \\(E\\ni x\\mapsto f(x)\\in F\\)\n[\\(I_E\\) or \\(I\\)] the identity mapping in \\(E\\),i.e., \\(I(x) = x\\quad \\forall x\\in E\\)\n[\\(f\\circ g\\)] for \\(f:\\; F\\to G\\) and \\(g:\\; E\\to F\\), \\(E\\ni x\\mapsto (f\\circ g)(x) = f(g(x))\\in G\\) (see Elementary function)\n[\\(f|_A\\)] the restriction of \\(f:\\; E\\to F\\) to the subset \\(A\\) of \\(E\\)\n[\\(\\{a_k\\}\\)] column vector with components \\(a_k\\)\n[\\((a_k)\\)] row vector with components \\(a_k\\)\n[\\((a_{k})^T\\)] denotes the transpose of a matrix \\((a_{k})\\), and is \\(\\{a_{k}\\}\\)\n[\\(\\{a_{ij}\\}\\)] matrix with components \\(a_{ij}\\), and \\((a_{ij})^T = (a_{ji})\\)\n\n\n\nNumbers¶\nFor two real numbers \\(a,b\\)\n\n\\([a,b]\\) is the interval \\(\\{x\\in \\mathbb{R}|\\; a\\le x\\le b\\}\\)\n\\(]a,b]\\) is the interval \\(\\{x\\in \\mathbb{R}|\\; a< x\\le b\\}\\)\n\\([a,b[\\) is the interval \\(\\{x\\in \\mathbb{R}|\\; a\\le x< b\\}\\)\n\\(]a,b[\\) is the interval \\(\\{x\\in \\mathbb{R}|\\; a< x< b\\}\\)\n\n\n\nDifferential Calculus¶\n\n[\\(\\partial f/\\partial x\\)] the partial derivative of \\(f:\\mathbb{R}^d\\to \\mathbb{R}\\) with respect to \\(x\\) (dx(f))\n[\\(\\nabla f\\)] the gradient of \\(f:\\Omega\\to \\mathbb{R}\\),i.e., \\(\\nabla f = (\\partial f/\\partial x,\\, \\partial f/\\partial y)\\)\n[\\(\\text{div}(\\mathbf{f})\\) or \\(\\nabla.\\mathbf{f}\\)] the divergence of \\(\\mathbf{f}:\\Omega\\to \\mathbb{R}^d\\), i.e., \\(\\text{div}(\\mathbf{f}) = \\partial f_1/\\partial x+\\partial f_2/\\partial y\\)\n[\\(\\Delta f\\)] the Laplacian of \\(f:\\; \\Omega\\to \\mathbb{R}\\), i.e., \\(\\Delta f = \\partial^2f/\\partial x^2+\\partial^2 f/\\partial y^2\\)\n\n\n\nMeshes¶\n\n[\\(\\Omega\\)] usually denotes a domain on which PDE is defined\n[\\(\\Gamma\\)] denotes the boundary of \\(\\Omega\\),i.e., \\(\\Gamma = \\partial\\Omega\\) (keyword border, see Border)\n[\\(\\mathcal{T}_h\\)] the triangulation of \\(\\Omega\\), i.e., the set of triangles \\(T_k\\), where \\(h\\) stands for mesh size (keyword mesh, buildmesh, see Mesh Generation)\n[\\(n_t\\)] the number of triangles in \\(\\mathcal{T}_h\\) (get by Th.nt)\n[\\(\\Omega_h\\)] denotes the approximated domain \\(\\Omega_h = \\cup_{k = 1}^{n_t}T_k\\) of \\(\\Omega\\).\nIf \\(\\Omega\\) is polygonal domain, then it will be \\(\\Omega = \\Omega_h\\)\n[\\(\\Gamma_h\\)] the boundary of \\(\\Omega_h\\)\n[\\(n_v\\)] the number of vertices in \\(\\mathcal{T}_h\\) (get by Th.nv)\n[\\(n_{be}\\)] the number of boundary element in \\(\\mathcal{T}_h\\) (get by Th.nbe)\n[\\(|\\Omega_h|\\)] the measure (area or volume) in \\(\\mathcal{T}_h\\) (get by Th.measure)\n[\\(|\\partial \\Omega_h|\\)] the measure of the border (length or area) in \\(\\mathcal{T}_h\\) (get by Th.bordermeasure)\n[\\(h_{min}\\)] the minimum edge size of \\(\\mathcal{T}_h\\) (get by Th.hmin)\n[\\(h_{max}\\)] the maximum edge size of \\(\\mathcal{T}_h\\) (get by Th.hmax)\n[[\\(q^iq^j\\)]] the segment connecting \\(q^i\\) and \\(q^j\\)\n[\\(q^{k_1},q^{k_2},q^{k_3}\\)] the vertices of a triangle \\(T_k\\) with anti-clock direction (get the coordinate of \\(q^{k_j}\\) by (Th[k-1][j-1].x, Th[k-1][j-1].y))\n[\\(I_{\\Omega}\\)] the set \\(\\{i\\in \\mathbb{N}|\\; q^i\\not\\in \\Gamma_h\\}\\)\n\n\n\nFunctional Spaces¶\n\n[\\(L^2(\\Omega)\\)] the set \\(\\displaystyle{\\left\\{w(x,y)\\left|\\; \\int_{\\Omega}|w(x,y)|^2\\text{d} x\\text{d} y<\\infty\\right.\\right\\}}\\)\n\n\n\n\\[\\begin{split}\\textrm{norm:}\\; \\| w\\|_{0,\\Omega}& = \\left(\\int_{\\Omega}|w(x,y)|^2\\text{d} x\\text{d} y\\right)^{1/2}\\\\\n\\textrm{scalar product:}\\; (v,w)& = \\int_{\\Omega}vw\\end{split}\\]\n\n\n[\\(H^1(\\Omega)\\)] the set \\(\\displaystyle{\\left\\{w\\in L^2(\\Omega)\\left|\\; \\int_{\\Omega}\\left(|\\partial w/\\partial x|^2+|\\partial w/\\partial y|^2\\right)\\text{d} x\\text{d} y <\\infty\\right.\\right\\}}\\)\n\n\n\n\\[\\textrm{norm:}\\; \\| w\\|_{1,\\Omega} = \\left(\\| w\\|_{0,\\Omega}^2+\\|\\nabla u\\|_{0.\\Omega}^2\\right)^{1/2}\\]\n\n\n[\\(H^m(\\Omega)\\)] the set \\(\\displaystyle{\\left\\{w\\in L^2(\\Omega)\\left|\\; \\int_{\\Omega}\\frac{\\partial^{|\\alpha|} w}{\\partial x^{\\alpha_1}\\partial y^{\\alpha_2}}\\in L^2(\\Omega)\\quad\\forall \\alpha = (\\alpha_1,\\alpha_2)\\in \\mathbb{N}^2,\\, |\\alpha| = \\alpha_1+\\alpha_2\\right.\\right\\}}\\)\n\n\n\n\\[\\textrm{scalar product:}\\; (v,w)_{1,\\Omega} = \n\\sum_{|\\alpha|\\le m}\\int_{\\Omega} D^{\\alpha}v D^{\\alpha}w\\]\n\n\n[\\(H^1_0(\\Omega)\\)] the set \\(\\left\\{w\\in H^1(\\Omega)\\left|\\; u = 0\\quad \\textrm{on }\\Gamma\\right.\\right\\}\\)\n[\\(L^2(\\Omega)^2\\)] denotes \\(L^2(\\Omega)\\times L^2(\\Omega)\\), and also \\(H^1(\\Omega)^2 = H^1(\\Omega)\\times H^1(\\Omega)\\)\n\n\n\n\nFinite Element Spaces¶\n\n[\\(V_h\\)] denotes the finite element space created by fespace Vh(Th, *) in FreeFEM (see Finite Elements for *)\n[\\(\\Pi_h f\\)] the projection of the function \\(f\\) into \\(V_h\\) (func f = x^2*y^3; Vh v  =  f;) means \\(v  =  Pi_h (f) * [\\{v\\}]\\) for FE-function \\(v\\) in \\(V_h\\) means the column vector \\((v_1,\\cdots,v_M)^T\\) if \\(v = v_1\\phi_1+\\cdots+v_M\\phi_M\\), which is shown by fespace Vh(Th, P2); Vh v; cout << v[] << endl;\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Documentation\n\t\t\tNext topic: Mesh Generation \n\t\t\n\t","l":"documentation/notations.html"},"15":{"t":"Parallelization","p":"\n\t\t\n   \nParallelization¶\nA first attempt of parallelization of FreeFEM is made here with MPI.\nAn extended interface with MPI has been added to FreeFEM version 3.5, (see the MPI documentation for the functionality of the language).\n\nMPI¶\n\nMPI Keywords¶\nThe following keywords and concepts are used:\n\nmpiComm to defined a communication world\nmpiGroup to defined a group of processors in the communication world\nmpiRequest to defined a request to wait for the end of the communication\n\n\n\nMPI Constants¶\n\nmpisize The total number of processes,\nmpirank the id-number of my current process in {0, ..., mpisize-1},\nmpiUndefined The MPI_Undefined constant,\nmpiAnySource The MPI_ANY_SOURCE constant,\nmpiCommWorld The MPI_COMM_WORLD constant,\n[ … ] and all the keywords of MPI_Op for the reduce operator: mpiMAX, mpiMIN, mpiSUM, mpiPROD, mpiLAND, mpiLOR, mpiLXOR, mpiBAND, mpiBXOR.\n\n\n\nMPI Constructor¶\n 1 // Parameters\n 2 int[int] proc1  =  [1, 2], proc2  =  [0, 3];\n 3 int color  =  1;\n 4 int key  =  1;\n 5 \n 6 // MPI ranks\n 7 cout << \"MPI rank  =  \" << mpirank << endl;\n 8 \n 9 // MPI\n10 mpiComm comm(mpiCommWorld, 0, 0); //set a MPI_Comm to MPI_COMM_WORLD\n11 \n12 mpiGroup grp(proc1); //set MPI_Group to proc 1,2 in MPI_COMM_WORLD\n13 mpiGroup grp1(comm, proc1); //set MPI_Group to proc 1,2 in comm\n14 \n15 mpiComm ncomm1(mpiCommWorld, grp); //set the MPI_Comm form grp\n16 \n17 mpiComm ncomm2(comm, color, key); //MPI_Comm_split(MPI_Comm comm, int color, int key, MPI_Comm *ncomm)\n18 \n19 mpiRequest rq; //defined an MPI_Request\n20 mpiRequest[int] arq(10); //defined an array of 10 MPI_Request\n\n\n\n\nMPI Functions¶\n 1 mpiComm Comm(mpiCommWorld, 0, 0);\n 2 \n 3 int MPICommSize  =  mpiSize(Comm);\n 4 int MPIRank  =  mpiRank(Comm);\n 5 \n 6 if (MPIRank  =  =  0) cout << \"MPI Comm size  =  \" << MPICommSize << endl;\n 7 cout << \"MPI rank in Comm  =  \" << mpiRank(Comm) << endl;\n 8 \n 9 mpiRequest Req;\n10 mpiRequest[int] ReqArray(10);\n11 \n12 for (int i  =  0; i < MPICommSize; i++){\n13      //return processor i with no Resquest in MPI_COMM_WORLD\n14     processor(i);\n15     //return processor any source with no Resquest in MPI_COMM_WORLD\n16     processor(mpiAnySource);\n17     //return processor i with no Resquest in Comm\n18     processor(i, Comm);\n19     //return processor i with no Resquest in Comm\n20     processor(Comm, i);\n21     //return processor i with Resquest rq in Comm\n22     /* processor(i, Req, Comm);\n23     //return processor i with Resquest rq in MPI_COMM_WORLD\n24     processor(i, Req); */\n25     //return processor i in MPI_COMM_WORLD in block mode for synchronously communication\n26     processorblock(i);\n27     //return processor any source in MPI_COMM_WORLD in block mode for synchronously communication\n28     processorblock(mpiAnySource);\n29     //return processor i in in Comm in block mode\n30     processorblock(i, Comm);\n31 }\n32 \n33 mpiBarrier(Comm); //do a MPI_Barrier on communicator Comm\n34 mpiWaitAny(ReqArray); //wait add of Request array,\n35 mpiWait(Req); //wait on a Request\n36 real t  =  mpiWtime(); //return MPIWtime in second\n37 real tick  =  mpiWtick(); //return MPIWTick in second\n\n\nwhere a processor is just a integer rank, pointer to a MPI_comm and pointer to a MPI_Request, and processorblock with a special MPI_Request.\n\n\nMPI Communicator operator¶\n 1 int status; //to get the MPI status of send / recv\n 2 real a, b;\n 3 \n 4 mpiComm comm(mpiCommWorld, 0, 0);\n 5 mpiRequest req;\n 6 \n 7 //send a,b asynchronously to the process 1\n 8 processor(1) << a << b;\n 9 //receive a,b synchronously from the process 10\n10 processor(10) >> a >> b;\n11 \n12 //broadcast from processor of comm to other comm processor\n13 // broadcast(processor(10, comm), a);\n14 //send synchronously to the process 10 the data a\n15 status  =  Send(processor(10, comm), a);\n16 //receive synchronously from the process 10 the data a\n17 status  =  Recv(processor(10, comm), a);\n18 \n19 //send asynchronously to the process 10 the data a without request\n20 status  =  Isend(processor(10, comm), a);\n21 //send asynchronously to the process 10 the data a with request\n22 status  =  Isend(processor(10, comm, req), a);\n23 //receive asynchronously from the process 10 the data a\n24 status  =  Irecv(processor(10, req), a);\n25 //Error asynchronously without request.\n26 // status  =  Irecv(processor(10), a);\n\n\nwhere the data type of a can be of type of int, real, complex, int[int], real[int], complex[int], int[int,int], double[int,int], complex[int,int], mesh, mesh3, mesh[int], mesh3[int], matrix, matrix<complex>\n1 //send asynchronously to the process 10 the data a with request\n2 processor(10, req) << a ;\n3 //receive asynchronously from the process 10 the data a with request\n4 processor(10, req) >> a ;\n\n\nIf a, b are arrays or full matrices of int, real, or complex, we can use the following MPI functions:\n1 mpiAlltoall(a, b, [comm]);\n2 mpiAllgather(a, b, [comm]);\n3 mpiGather(a, b, processor(..) );\n4 mpiScatter(a, b, processor(..));\n5 mpiReduce(a, b, processor(..), mpiMAX);\n6 mpiAllReduce(a, b, comm, mpiMAX);\n\n\nThank you to Guy-Antoine Atenekeng Kahou for his help to code this interface.\n\n\nSchwarz example in parallel¶\nThis example is a rewritting of example Schwarz overlapping.\n1 ff-mpirun -np 2 SchwarzParallel.edp\n2 # OR\n3 mpirun -np 2 FreeFem++-mpi SchwarzParallel.edp\n\n\n 1 if (mpisize ! =  2){\n 2     cout << \" sorry, number of processors ! = 2 \" << endl;\n 3     exit(1);\n 4 }\n 5 \n 6 // Parameters\n 7 verbosity  =  0;\n 8 int interior  =  2;\n 9 int exterior  =  1;\n10 int n  =  4;\n11 \n12 // Mesh\n13 border a(t = 1, 2){x = t; y = 0; label = exterior;}\n14 border b(t = 0, 1){x = 2; y = t; label = exterior;}\n15 border c(t = 2, 0){x = t; y = 1; label = exterior;}\n16 border d(t = 1, 0){x = 1-t; y = t; label = interior;}\n17 border e(t = 0, pi/2){x = cos(t); y = sin(t); label = interior;}\n18 border e1(t = pi/2, 2*pi){x = cos(t); y = sin(t); label = exterior;}\n19 mesh[int] Th(mpisize);\n20 if (mpirank  =  =  0)\n21     Th[0]  =  buildmesh(a(5*n) + b(5*n) + c(10*n) + d(5*n));\n22 else\n23     Th[1]  =  buildmesh(e(5*n) + e1(25*n));\n24 \n25 broadcast(processor(0), Th[0]);\n26 broadcast(processor(1), Th[1]);\n27 \n28 // Fespace\n29 fespace Vh(Th[mpirank], P1);\n30 Vh u  =  0, v;\n31 \n32 fespace Vhother(Th[1-mpirank], P1);\n33 Vhother U  =  0;\n34 \n35 //Problem\n36 int i  =  0;\n37 problem pb (u, v, init = i, solver = Cholesky)\n38      =  int2d(Th[mpirank])(\n39           dx(u)*dx(v)\n40         + dy(u)*dy(v)\n41     )\n42     - int2d(Th[mpirank])(\n43           v\n44     )\n45     + on(interior, u = U)\n46     + on(exterior, u =  0 )\n47     ;\n48 \n49 // Loop\n50 for (i  =  0; i < 20; i++){\n51     cout << mpirank << \" - Loop \" << i << endl;\n52 \n53     // Solve\n54     pb;\n55     //send u to the other proc, receive in U\n56     processor(1-mpirank) << u[];\n57     processor(1-mpirank) >> U[];\n58 \n59     // Error\n60     real err0, err1;\n61     err0  =  int1d(Th[mpirank],interior)(square(U - u));\n62     // send err0 to the other proc, receive in err1\n63     processor(1-mpirank) << err0;\n64     processor(1-mpirank) >> err1;\n65     real err  =  sqrt(err0 + err1);\n66     cout << \" err  =  \" << err << \" - err0  =  \" << err0 << \" - err1  =  \" << err1 << endl;\n67     if (err < 1e-3) break;\n68 }\n69 if (mpirank  =  =  0)\n70     plot(u, U);\n\n\n\nTodo\nscript freeze in the loop\n\n\nTrue parallel Schwarz example¶\nThank you to F. Nataf\nThis is a explanation of the two examples MPI-GMRES 2D and MPI-GMRES 3D, a Schwarz parallel with a complexity almost independent of the number of process (with a coarse grid preconditioner).\nTo solve the following Poisson problem on domain \\(\\Omega\\) with boundary \\(\\Gamma\\) in \\(L^2(\\Omega)\\) :\n\n\\[\\begin{split}\\begin{array}{rcll}\n    -\\Delta u & = & f & \\mbox{ in } \\Omega\\\\\n    u & = & g & \\mbox{ on } \\Gamma\n\\end{array}\\end{split}\\]\nwhere \\(f\\) and \\(g\\) are two given functions of \\(L^2(\\Omega)\\) and of \\(H^{\\frac12}(\\Gamma)\\),\nLets introduce \\((\\pi_i)_{i = 1,.., N_p}\\) a regular partition of the unity of \\(\\Omega\\), q-e-d:\n\n\\[\\pi_i \\in \\mathcal{C}^0(\\Omega) : \\quad \\pi_i\\ge 0 \\mbox{ and } \\sum_{i = 1}^{N_p} \\pi_i  = 1 .\\]\nDenote \\(\\Omega_i\\) the sub domain which is the support of \\(\\pi_i\\) function and also denote \\(\\Gamma_i\\) the boundary of \\(\\Omega_i\\).\nThe parallel Schwarz method is:\nLet \\(\\ell = 0\\) the iterator and a initial guest \\(u^0\\) respecting the boundary condition (i.e. \\(u^0_{|\\Gamma}  =  g\\)).\n\n(37)¶\\[\\begin{split}\\begin{array}{rcll}\n    \\forall i  =  1 .., N_p:&\\nonumber\\\\\n    \\displaystyle -\\Delta u_i^\\ell & = & f &\\mbox{ in } \\Omega_i\\\\\n    u_i^\\ell & = & u^\\ell & \\mbox{ on } \\Gamma_i \\setminus \\Gamma\\\\\n    u_i^\\ell & = & g & \\mbox{ on } \\Gamma_i \\cap \\Gamma\n\\end{array}\\end{split}\\]\n\n(38)¶\\[u^{\\ell+1}  =  \\sum_{i = 1}^{N_p} \\pi_i u_i^\\ell\\]\nAfter discretization with the Lagrange finite element method, with a compatible mesh \\({\\mathcal{T}_h}_i\\) of \\(\\Omega_i\\), i. e., the exist a global mesh \\({\\mathcal{T}_h}\\) such that \\({\\mathcal{T}_h}_i\\) is include in \\({\\mathcal{T}_h}\\).\nLet us denote:\n\n\\({V_h}_i\\) the finite element space corresponding to domain \\(\\Omega_i\\),\n\\({\\mathcal{N}_h}_i\\) is the set of the degree of freedom \\(\\sigma_i^k\\),\n\\({\\mathcal{N}^{\\Gamma_i}_{hi}}\\) is the set of the degree of freedom of \\({V_h}_i\\) on the boundary \\(\\Gamma_i\\) of \\(\\Omega_i\\),\n\\(\\sigma_i^k({v_h})\\) is the value the degree of freedom \\(k\\),\n\\({V_{0h}}_i =  \\{ {v_h} \\in {V_h}_i :\\forall k \\in {\\mathcal{N}^{\\Gamma_i}_{hi}}, \\quad \\sigma_i^k({v_h}) = 0 \\}\\),\nThe conditional expression \\(a\\;?\\;b:c\\) is defined like in :c`C` of C++ language by\n\n\\[\\begin{split}a?b: c \\equiv\n\\left\\{\n\\begin{array}{l}\n\\mbox{if } a \\mbox{ is true then return b}\\\\\n\\mbox{else return } c\\\\\n\\end{array}\n\\right..\\end{split}\\]\n\n\n\nNote\nWe never use finite element space associated to the full domain \\(\\Omega\\) because it is too expensive.\n\nWe have to defined to operator to build the previous algorithm:\nWe denote \\({u_h^{\\ell}}_{|i}\\) the restriction of \\(u_h^\\ell\\) on \\({V_h}_i\\), so the discrete problem on \\(\\Omega_i\\) of problem (37) is find \\({u_h^{\\ell}}_{i}\\in {V_h}_i\\) such that:\n\n\\[\\forall {v_h}_i\\in V_{0i}:\n\\int_{\\Omega_i} \\nabla {v_h}_i \\cdot \\nabla {u_h}^{\\ell}_{i}\n =  \\int_{\\Omega_i} f {v_h}_i ,\\quad \\forall k \\in {\\mathcal{N}^{\\Gamma_i}_{hi}}\\;:\\; \\sigma_i^k({u_h}^\\ell_i)  =  (k\\in \\Gamma) \\; ? \\; g_i^k : \\sigma_i^k({u_h}^{\\ell}_{|i})\\]\nwhere \\(g_i^k\\) is the value of \\(g\\) associated to the degree of freedom \\(k\\in {\\mathcal{N}^{\\Gamma_i}_{hi}}\\).\nIn FreeFEM, it can be written has with U is the vector corresponding to \\({u_h^{\\ell}}_{|i}\\) and the vector U1 is the vector corresponding to \\({u_h^{\\ell}}_{i}\\) is the solution of:\n1 real[int] U1(Ui.n);\n2 real[int] b  =  onG .* U;\n3 b  =  onG ? b : Bi ;\n4 U1  =  Ai^-1*b;\n\n\nwhere \\(\\mathtt{onG}[i]  = (i \\in \\Gamma_i\\setminus\\Gamma) ? 1 : 0\\), and \\(\\mathtt{Bi}\\) the right of side of the problem, are defined by\n 1 // Fespace\n 2 fespace Whi(Thi, P2);\n 3 \n 4 // Problem\n 5 varf vPb (U, V)\n 6      =  int3d(Thi)(\n 7           grad(U)'*grad(V)\n 8     )\n 9     + int3d(Thi)(\n10           F*V\n11     )\n12     + on(1, U = g)\n13     + on(10, U = G)\n14     ;\n15 \n16 varf vPbon (U, V)  =  on(10, U = 1) + on(1, U = 0);\n17 \n18 matrix Ai  =  vPb (Whi, Whi, solver = sparsesolver);\n19 real[int] onG  =  vPbon(0, Whi);\n20 real[int] Bi = vPb(0, Whi);\n\n\nwhere the FreeFEM label of \\(\\Gamma\\) is 1 and the label of \\(\\Gamma_i\\setminus \\Gamma\\) is \\(10\\).\nTo build the transfer/update part corresponding to (38) equation on process \\(i\\), let us call njpart the number the neighborhood of domain of \\(\\Omega_i\\) (i.e: \\(\\pi_j\\) is none \\(0\\) of \\(\\Omega_i\\)), we store in an array jpart of size njpart all this neighborhood.\nLet us introduce two array of matrix, Smj[j] to defined the vector to send from \\(i\\) to \\(j\\) a neighborhood process, and the matrix \\(rMj[j]\\) to after to reduce owith neighborhood \\(j\\) domain.\nSo the tranfert and update part compute \\(v_i =  \\pi_i u_i + \\sum_{j\\in J_i} \\pi_j u_j\\) and can be write the FreeFEM function Update:\n 1 func bool Update (real[int] &ui, real[int] &vi){\n 2     int n  =  jpart.n;\n 3     for (int j  =  0; j < njpart; ++j) Usend[j][]  =  sMj[j]*ui;\n 4     mpiRequest[int] rq(n*2);\n 5     for (int j  =  0; j < n; ++j) Irecv(processor(jpart[j], comm,rq[j]), Ri[j][]);\n 6     for (int j  =  0; j < n; ++j) Isend(processor(jpart[j], comm, rq[j+n]), Si[j][]);\n 7     for (int j  =  0; j < n*2; ++j) int k  =  mpiWaitAny(rq);\n 8     // apply the unity local partition\n 9     vi  =  Pii*ui; //set to pi_i u_i\n10     for (int j  =  0; j < njpart; ++j) vi + =  rMj[j]*Vrecv[j][]; //add pi_j u_j\n11     return true;\n12 }\n\n\nwhere the buffer are defined by:\n1 InitU(njpart, Whij, Thij, aThij, Usend) //defined the send buffer\n2 InitU(njpart, Whij, Thij, aThij, Vrecv) //defined the revc buffer\n\n\nwith the following macro definition:\n1 macro InitU(n, Vh, Th, aTh, U) Vh[int] U(n); for (int j  =  0; j < n; ++j){Th  =  aTh[j]; U[j]  =  0;}\n\n\nFirst GMRES algorithm: you can easily accelerate the fixed point algorithm by using a parallel GMRES algorithm after the introduction the following affine \\(\\mathcal{A}_i\\) operator sub domain \\(\\Omega_i\\).\n1 func real[int] DJ0 (real[int]& U){\n2     real[int] V(U.n), b  =  onG .* U;\n3     b  =  onG ? b : Bi ;\n4     V  =  Ai^-1*b;\n5     Update(V, U);\n6     V - =  U;\n7     return V;\n8 }\n\n\nWhere the parallel MPIGMRES or MPICG algorithm is just a simple way to solve in parallel the following \\(A_i x_i  =  b_i, i  =  1, .., N_p\\) by just changing the dot product by reduce the local dot product of all process with the following MPI code:\n1 template<class R> R ReduceSum1(R s, MPI_Comm *comm){\n2     R r  =  0;\n3     MPI_Allreduce(&s, &r, 1, MPI_TYPE<R>::TYPE(), MPI_SUM, *comm );\n4     return r;\n5 }\n\n\nThis is done in MPIGC dynamics library tool.\nSecond GMRES algorithm: Use scharwz algorithm as a preconditioner of basic GMRES method to solving the parallel problem.\n 1 func real[int] DJ (real[int]& U){ //the original problem\n 2     ++kiter;\n 3     real[int] V(U.n);\n 4     V  =  Ai*U;\n 5     V  =  onGi ? 0.: V; //remove boundary term\n 6     return V;\n 7 }\n 8 \n 9 func real[int] PDJ (real[int]& U){ //the preconditioner\n10     real[int] V(U.n);\n11     real[int] b  =  onG ? 0. : U;\n12     V  =  Ai^-1*b;\n13     Update(V, U);\n14     return U;\n15 }\n\n\nThird GMRES algorithm: Add a coarse solver to the previous algorithm\nFirst build a coarse grid on processor 0, and the\n 1 matrix AC, Rci, Pci;\n 2 if (mpiRank(comm)  =  =  0)\n 3     AC  =  vPbC(VhC, VhC, solver = sparsesolver); //the coarse problem\n 4 \n 5 Pci  =  interpolate(Whi, VhC); //the projection on coarse grid\n 6 Rci  =  Pci'*Pii; //the restriction on Process i grid with the partition pi_i\n 7 \n 8 func bool CoarseSolve (real[int]& V, real[int]& U, mpiComm& comm){\n 9     // solving the coarse problem\n10     real[int] Uc(Rci.n), Bc(Uc.n);\n11     Uc  =  Rci*U;\n12     mpiReduce(Uc, Bc, processor(0, comm), mpiSUM);\n13     if (mpiRank(comm)  =  =  0)\n14     Uc  =  AC^-1*Bc;\n15     broadcast(processor(0, comm), Uc);\n16     V  =  Pci*Uc;\n17 }\n\n\nThe New preconditionner\n 1 func real[int] PDJC (real[int]& U){\n 2     // Idea: F. Nataf.\n 3     // 0 ~ (I C1A)(I-C2A)  = > I ~ - C1AC2A +C1A +C2A\n 4     // New Prec P =  C1+C2 - C1AC2  =  C1(I- A C2) +C2\n 5     // ( C1(I- A C2) +C2 ) Uo\n 6     // V  =  - C2*Uo\n 7     // ....\n 8     real[int] V(U.n);\n 9     CoarseSolve(V, U, comm);\n10     V  =  -V; //-C2*Uo\n11     U + =  Ai*V; //U  =  (I-A C2) Uo\n12     real[int] b  =  onG ? 0. : U;\n13     U  =  Ai^-1*b; //C1( I -A C2) Uo\n14     V  =  U - V;\n15     Update(V, U);\n16     return U;\n17 }\n\n\nThe code of the 4 algorithms:\n 1 real epss  =  1e-6;\n 2 int rgmres  =  0;\n 3 if (gmres  =  =  1){\n 4     rgmres  =  MPIAffineGMRES(DJ0, u[], veps = epss, nbiter = 300,\n 5         comm = comm, dimKrylov = 100, verbosity = ipart?0: 50);\n 6     real[int] b  =  onG .* u[];\n 7     b  =  onG ? b : Bi ;\n 8     v[]  =  Ai^-1*b;\n 9     Update(v[], u[]);\n10 }\n11 else if (gmres  =  =  2)\n12     rgmres  =  MPILinearGMRES(DJ, precon = PDJ, u[], Bi, veps = epss,\n13         nbiter = 300, comm = comm, dimKrylov = 100, verbosity = ipart?0: 50);\n14 else if (gmres  =  =  3)\n15     rgmres  =  MPILinearGMRES(DJ, precon = PDJC, u[], Bi, veps = epss,\n16         nbiter = 300, comm = comm, dimKrylov = 100, verbosity = ipart?0: 50);\n17 else //algo Shwarz for demo\n18     for(int iter  =  0; iter < 10; ++iter)\n19         ...\n\n\nWe have all ingredient to solve in parallel if we have et the partitions of the unity.\nTo build this partition we do:\nThe initial step on process \\(1\\) to build a coarse mesh, \\({\\mathcal{T}_h}^*\\) of the full domain, and build the partition \\(\\pi\\) function constant equal to \\(i\\) on each sub domain \\(\\mathcal{O}_i, i  = 1 ,.., N_p\\), of the grid with the metis graph partitioner [KARYPIS1995] and on each process \\(i\\) in \\(1..,N_p\\) do\n\nBroadcast from process \\(1\\), the mesh \\({\\mathcal{T}_h}^*\\) (call Thii in FreeFEM script), and \\(\\pi\\) function,\nremark that the characteristic function \\(\\mathrm{1\\!\\!I}_{\\mathcal{O}_i}\\) of domain \\(\\mathcal{O}_i\\), is defined by \\((\\pi = i)?1:0\\),\nLet us call \\(\\Pi^2_P\\) (resp. \\(\\Pi^2_V\\)) the \\(L^2\\) on \\(P_h^*\\) the space of the constant finite element function per element on \\({\\mathcal{T}_h}^*\\) (resp. \\(V_h^*\\) the space of the affine continuous finite element per element on \\({\\mathcal{T}_h}^*\\)) and build in parallel the \\(\\pi_i\\) and \\(\\Omega_i\\), such that \\(\\mathcal{O}_i\\ \\subset \\Omega_i\\) where \\(\\mathcal{O}_i =  supp ((\\Pi^2_V \\Pi^2_C)^m \\mathrm{1\\!\\!I}_{O_i})\\), and \\(m\\) is a the overlaps size on the coarse mesh (generally one), (this is done in function AddLayers(Thii,suppii[],nlayer,phii[]); We choose a function \\(\\pi^*_i  =  (\\Pi^2_1 \\Pi^2_0)^m \\mathrm{1\\!\\!I}_{\\mathcal{O}_i}\\) so the partition of the unity is simply defined by\n\n\n\\[\\pi_i  =  \\frac{\\pi_i^*}{\\sum_{j = 1}^{N_p} \\pi_j^*}\\]\nThe set \\(J_i\\) of neighborhood of the domain \\(\\Omega_i\\), and the local version on \\(V_{hi}\\) can be defined the array jpart and njpart with:\n 1 Vhi pii  =  piistar;\n 2 Vhi[int] pij(npij); //local partition of 1  =  pii + sum_j pij[j]\n 3 int[int] jpart(npart);\n 4 int njpart  =  0;\n 5 Vhi sumphi  =  piistar;\n 6 for (int i  =  0; i < npart; ++i)\n 7     if (i ! =  ipart){\n 8         if (int3d(Thi)(pijstar,j) > 0){\n 9             pij[njpart]  =  pijstar;\n10             sumphi[] + =  pij[njpart][];\n11             jpart[njpart++]  =  i;\n12         }\n13     }\n14 pii[]  =  pii[] ./ sumphi[];\n15 for (int j  =  0; j < njpart; ++j)\n16 pij[j][]  =  pij[j][] ./ sumphi[];\n17 jpart.resize(njpart);\n\n\n\n\nWe call \\({\\mathcal{T}_h}^*_{ij}\\) the sub mesh part of \\({\\mathcal{T}_h}_i\\) where \\(\\pi_j\\) are none zero.\nAnd thanks to the function trunc to build this array,\n\n1 for(int jp  =  0; jp < njpart; ++jp)\n2     aThij[jp]  =  trunc(Thi, pij[jp] > 1e-10, label = 10);\n\n\n\n\nAt this step we have all on the coarse mesh, so we can build the fine final mesh by splitting all meshes: Thi, Thij[j], Thij[j] with FreeFEM trunc mesh function which do restriction and slipping.\nThe construction of the send/recv matrices sMj and freefem:`rMj: can done with this code:\n\n 1 mesh3 Thij  =  Thi;\n 2 fespace Whij(Thij, Pk);\n 3 matrix Pii; Whi wpii  =  pii; Pii  =  wpii[]; //Diagonal matrix corresponding X pi_i\n 4 matrix[int] sMj(njpart), rMj(njpart); //M send/recive case\n 5 for (int jp  =  0; jp < njpart; ++jp){\n 6     int j  =  jpart[jp];\n 7     Thij  =  aThij[jp]; //change mesh to change Whij, Whij\n 8     matrix I  =  interpolate(Whij, Whi); //Whij <- Whi\n 9     sMj[jp]  =  I*Pii; //Whi -> s Whij\n10     rMj[jp]  =  interpolate(Whij, Whi, t = 1); //Whij -> Whi\n11 }\n\n\n\n\n\nTo buil a not too bad application, all variables come from parameters value with the following code\n1 include \"getARGV.idp\"\n2 verbosity  =  getARGV(\"-vv\", 0);\n3 int vdebug  =  getARGV(\"-d\", 1);\n4 int ksplit  =  getARGV(\"-k\", 10);\n5 int nloc  =  getARGV(\"-n\", 25);\n6 string sff  =  getARGV(\"-p, \", \"\");\n7 int gmres  =  getARGV(\"-gmres\", 3);\n8 bool dplot  =  getARGV(\"-dp\", 0);\n9 int nC  =  getARGV(\"-N\", max(nloc/10, 4));\n\n\nAnd small include to make graphic in parallel of distribute solution of vector \\(u\\) on mesh \\(T_h\\) with the following interface:\n1 include \"MPIplot.idp\"\n2 func bool plotMPIall(mesh &Th, real[int] &u, string cm){\n3     PLOTMPIALL(mesh, Pk, Th, u, {cmm = cm, nbiso = 20, fill = 1, dim = 3, value = 1});\n4     return 1;\n5 }\n\n\n\nNote\nThe cmm = cm, ... in the macro argument is a way to quote macro argument so the argument is cmm = cm, ....\n\n\n\n\n\nParallel sparse solvers¶\nParallel sparse solvers use several processors to solve linear systems of equation. Like sequential, parallel linear solvers can be direct or iterative. In FreeFEM both are available.\n\nUsing parallel sparse solvers in FreeFEM¶\nWe recall that the solver parameters are defined in the following commands: solve, problem, set (setting parameter of a matrix) and in the construction of the matrix corresponding to a bilinear form.\nIn these commands, the parameter solver must be set to sparsesolver for parallel sparse solver.\nWe have added specify parameters to these command lines for parallel sparse solvers.\nThese are:\n\nlparams : vector of integer parameters (l is for the C++ type long)\ndparams : vector of real parameters\nsparams : string parameters\ndatafilename : name of the file which contains solver parameters\n\nThe following four parameters are only for direct solvers and are vectors.\nThese parameters allow the user to preprocess the matrix (see the section on sparse direct solver for more information).\n\npermr : row permutation (integer vector)\npermc : column permutation or inverse row permutation (integer vector)\nscaler : row scaling (real vector)\nscalec : column scaling (real vector)\n\nThere are two possibilities to control solver parameters.\nThe first method defines parameters with lparams, dparams and sparams in .edp file.\nThe second one reads the solver parameters from a data file. The name of this file is specified by datafilename.\nIf lparams, dparams, sparams or datafilename is not provided by the user, the solver’s default values are used.\nTo use parallel solver in FreeFEM, we need to load the dynamic library corresponding to this solver.\nFor example to use MUMPS solver as parallel solver in FreeFEM, write in the .edp file load \"MUMPS_FreeFem\".\nIf the libraries are not loaded, the default sparse solver will be loaded (default sparse solver is UMFPACK). The Table 2 gives this new value for the different libraries.\n\nTable 2 Default sparse solver for real and complex arithmetics when we load a parallel sparse solver library¶\n\n\n\n\n\n\nLibraries\nDefault sparse solver\n\n\nreal\ncomplex\n\n\n\nMUMPS_FreeFem\nmumps\nmumps\n\nreal_SuperLU_DIST_FreeFem\nSuperLU_DIST\nprevious solver\n\ncomplex_SuperLU_DIST_FreeFem\nprevious solver\nSuperLU_DIST\n\nreal_pastix_FreeFem\nPaStiX\nprevious solver\n\ncomplex_pastix_FreeFem\nprevious solver\nPaStiX\n\nhips_FreeFem\nhips\nprevious solver\n\nhypre_FreeFem\nhypre\nprevious solver\n\nparms_FreeFem\nparms\nprevious solver\n\n\n\nWe also add functions (see Table 3) with no parameter to change the default sparse solver in the .edp file.\nTo use these functions, we need to load the library corresponding to the solver.\nAn example of using different parallel sparse solvers for the same problem is given in Direct solvers example.\n\nTable 3 Functions that allow to change the default sparse solver for real and complex arithmetics and the result of these functions¶\n\n\n\n\n\n\nFunction\ndefault sparse solver\n\n\nreal\ncomplex\n\n\n\ndefaulttoMUMPS()\nmumps\nmumps\n\nrealdefaulttoSuperLUdist()\nSuperLU_DIST\nprevious solver\n\ncomplexdefaulttoSuperLUdist()\nprevious solver\nSuperLU_DIST\n\nrealdefaultopastix()\npastix\nprevious solver\n\ncomplexdefaulttopastix()\nprevious solver\npastix\n\ndefaulttohips()\nhips\nprevious solver\n\ndefaulttohypre()\nhypre\nprevious solver\n\ndefaulttoparms()\nparms\nprevious solver\n\n\n\n\nTip\nTest direct solvers\n 1 load \"MUMPS_FreeFem\"\n 2 //default solver: real-> MUMPS, complex -> MUMPS\n 3 load \"real_SuperLU_DIST_FreeFem\"\n 4 //default solver: real-> SuperLU_DIST,\n 5 complex -> MUMPS load \"real_pastix_FreeFem\"\n 6 //default solver: real-> pastix, complex -> MUMPS\n 7 \n 8 // Solving with pastix\n 9 {\n10     matrix A  = \n11         [[1, 2, 2, 1, 1],\n12         [ 2, 12, 0, 10, 10],\n13         [ 2, 0, 1, 0, 2],\n14         [ 1, 10, 0, 22, 0.],\n15         [ 1, 10, 2, 0., 22]];\n16 \n17     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n18     b  =  A*xx;\n19     cout << \"b  = \" << b << endl; cout << \"xx  = \" << xx << endl;\n20 \n21     set(A, solver = sparsesolver, datafilename = \"ffpastix_iparm_dparm.txt\");\n22     cout << \"solve\" << endl;\n23     x  =  A^-1*b;\n24     cout << \"b  = \" << b << endl;\n25     cout << \"x  = \" << endl;\n26     cout << x << endl;\n27     di  =  xx - x;\n28     if (mpirank  =  =  0){\n29         cout << \"x-xx  = \" << endl;\n30         cout << \"Linf  = \" << di.linfty << \", L2  = \" << di.l2 << endl;\n31     }\n32 }\n33 \n34 // Solving with SuperLU_DIST\n35 realdefaulttoSuperLUdist();\n36 //default solver: real-> SuperLU_DIST, complex -> MUMPS\n37 {\n38     matrix A  = \n39         [[1, 2, 2, 1, 1],\n40         [ 2, 12, 0, 10, 10],\n41         [ 2, 0, 1, 0, 2],\n42         [ 1, 10, 0, 22, 0.],\n43         [ 1, 10, 2, 0., 22]];\n44 \n45     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n46     b  =  A*xx;\n47     cout << \"b  = \" << b << endl;\n48     cout << \"xx  = \" << xx << endl;\n49 \n50     set(A, solver = sparsesolver, datafilename = \"ffsuperlu_dist_fileparam.txt\");\n51     cout << \"solve\" << endl;\n52     x  =  A^-1*b;\n53     cout << \"b  = \" << b << endl;\n54     cout << \"x  = \" << endl;\n55     cout << x << endl;\n56     di  =  xx - x;\n57     if (mpirank  =  =  0){\n58         cout << \"x-xx  = \" << endl;\n59         cout << \"Linf  = \" << di.linfty << \", L2  = \" << di.l2 << endl;\n60     }\n61 }\n62 \n63 // Solving with MUMPS\n64 defaulttoMUMPS();\n65 //default solver: real-> MUMPS, complex -> MUMPS\n66 {\n67     matrix A  = \n68         [[1, 2, 2, 1, 1],\n69         [ 2, 12, 0, 10, 10],\n70         [ 2, 0, 1, 0, 2],\n71         [ 1, 10, 0, 22, 0.],\n72         [ 1, 10, 2, 0., 22]];\n73 \n74     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n75     b  =  A*xx;\n76     cout << \"b  = \" << b << endl;\n77     cout << \"xx  = \" << xx << endl;\n78 \n79     set(A, solver = sparsesolver, datafilename = \"ffmumps_fileparam.txt\");\n80     cout << \"solving solution\" << endl;\n81     x  =  A^-1*b;\n82     cout << \"b  = \" << b << endl;\n83     cout << \"x  = \" << endl;\n84     cout << x << endl;\n85     di  =  xx - x;\n86     if (mpirank  =  =  0){\n87         cout << \"x-xx  = \" << endl;\n88         cout << \"Linf  = \" << di.linfty << \", L2\" << di.l2 << endl;\n89     }\n90 }\n\n\n\n\n\nSparse direct solver¶\nIn this section, we present the sparse direct solvers interfaced with FreeFEM.\n\nMUMPS solver¶\nMUltifrontal Massively Parallel Solver (MUMPS) is an open-source library.\nThis package solves linear system of the form \\(A \\: x  =  b\\) where \\(A\\) is a square sparse matrix with a direct method.\nThe square matrix considered in MUMPS can be either unsymmetric, symmetric positive definite or general symmetric.\nThe method implemented in MUMPS is a direct method based on a multifrontal approach.\nIt constructs a direct factorization \\(A \\: =  \\: L\\:U\\), \\(A\\:  =  \\: L^t \\: D \\: L\\) depending of the symmetry of the matrix \\(A\\).\n\nMUMPS uses the following libraries :\nBLAS,\nBLACS,\nScaLAPACK.\n\n\n\n\nWarning\nMUMPS does not solve linear system with a rectangular matrix.\n\nMUMPS parameters:\nThere are four input parameters in MUMPS.\nTwo integers SYM and PAR, a vector of integer of size 40 INCTL and a vector of real of size 15 CNTL.\nThe first parameter gives the type of the matrix: 0 for unsymmetric matrix, 1 for symmetric positive matrix and 2 for general symmetric.\nThe second parameter defined if the host processor work during the factorization and solves steps : PAR = 1 host processor working and PAR = 0 host processor not working.\nThe parameter INCTL and CNTL is the control parameter of MUMPS.\nThe vectors ICNTL and CNTL in MUMPS becomes with index 1 like vector in Fortran.\nFor more details see the MUMPS user’s guide.\nWe describe now some elements of the main parameters of ICNTL for MUMPS.\n\n\nInput matrix parameter The input matrix is controlled by parameters ICNTL(5) and ICNTL(18).The matrix format (resp. matrix pattern and matrix entries) are controlled by INCTL(5) (resp. INCTL(18)).\nThe different values of ICNTL(5) are 0 for assembled format and 1 for element format.\nIn the current release of FreeFEM, we consider that FE matrix or matrix is storage in assembled format.\nTherefore, INCTL(5) is treated as 0 value.\nThe main option for ICNTL(18): INCLTL(18) = 0 centrally on the host processor, ICNTL(18) = 3 distributed the input matrix pattern and the entries (recommended option for distributed matrix by developer of MUMPS).\nFor other values of ICNTL(18) see the MUMPS user’s guide.\nThese values can be used also in FreeFEM.\nThe default option implemented in FreeFEM are ICNTL(5) = 0 and ICNTL(18) = 0.\n\n\n\nPreprocessing parameter The preprocessed matrix \\(A_{p}\\) that will be effectively factored is defined by\n\n\n\\[A_{p}  =  P \\: D_r \\: A \\: Q_c \\ D_c P^t\\]\nwhere \\(P\\) is the permutation matrix, \\(Q_c\\) is the column permutation, \\(D_r\\) and \\(D_c\\) are diagonal matrix for respectively row and column scaling.\nThe ordering strategy to obtain \\(P\\) is controlled by parameter ICNTL(7).\nThe permutation of zero free diagonal \\(Q_c\\) is controlled by parameter ICNTL(6).\nThe row and column scaling is controlled by parameter ICNTL(18).\nThese option are connected and also strongly related with ICNTL(12) (see the MUMPS user’s guide for more details).\nThe parameters permr, scaler, and scalec in FreeFEM allow to give permutation matrix(\\(P\\)), row scaling (\\(D_r\\)) and column scaling (\\(D_c\\)) of the user respectively.\n\n\n\nCalling MUMPS in FreeFEM\nTo call MUMPS in FreeFEM, we need to load the dynamic library MUMPS_freefem.dylib (MacOSX), MUMPS_freefem.so (Unix) or MUMPS_freefem.dll (Windows).\nThis is done in typing load \"MUMPS_FreeFem\" in the .edp file. We give now the two methods to give the option of MUMPS solver in FreeFEM.\n\n\nSolver parameters is defined in .edp file: In this method, we need to give the parameters lparams and dparams.These parameters are defined for MUMPS by :\n\n\nlparams[0]  =  SYM, lparams[1]  =  PAR,\n\\(\\forall i\\)  =  1,…,40, lparams[i+1]  =  ICNTL(i)\n\\(\\forall i\\)  =  1,…,15, dparams[i-1]  =  CNTL(i)\n\n\n\n\n\nReading solver parameters on a file:\n\nThe structure of data file for MUMPS in FreeFEM is : first line parameter SYM and second line parameter PAR and in the following line the different value of vectors ICNTL and CNTL.\nAn example of this parameter file is given in ffmumpsfileparam.txt.\n 1 0 /* SYM :: 0 for non symmetric matrix, 1 for symmetric definite positive matrix and 2 general symmetric matrix*/\n 2 1 /* PAR :: 0 host not working during factorization and solves steps, 1 host working during factorization and solves steps*/\n 3 -1 /* ICNTL(1) :: output stream for error message */\n 4 -1 /* ICNTL(2) :: output for diagnostic printing, statics and warning message */\n 5 -1 /* ICNTL(3) :: for global information */\n 6 0 /* ICNTL(4) :: Level of printing for error, warning and diagnostic message */\n 7 0 /* ICNTL(5) :: matrix format : 0 assembled format, 1 elemental format. */\n 8 7 /* ICNTL(6) :: control option for permuting and/or scaling the matrix in analysis phase */\n 9 3 /* ICNTL(7) :: pivot order strategy : AMD, AMF, metis, pord scotch*/\n10 77 /* ICNTL(8) :: Row and Column scaling strategy */\n11 1 /* ICNTL(9) :: 0 solve Ax  =  b, 1 solve the transposed system A^t x  =  b : parameter is not considered in the current release of FreeFEM*/\n12 0 /* ICNTL(10) :: number of steps of iterative refinement */\n13 0 /* ICNTL(11) :: statics related to linear system depending on ICNTL(9) */\n14 1 /* ICNTL(12) :: constrained ordering strategy for general symmetric matrix */\n15 0 /* ICNTL(13) :: method to control splitting of the root frontal matrix */\n16 20 /* ICNTL(14) :: percentage increase in the estimated working space (default 20\\%)*/\n17 0 /* ICNTL(15) :: not used in this release of MUMPS */\n18 0 /* ICNTL(16) :: not used in this release of MUMPS */\n19 0 /* ICNTL(17) :: not used in this release of MUMPS */\n20 3 /* ICNTL(18) :: method for given : matrix pattern and matrix entries : */\n21 0 /* ICNTL(19) :: method to return the Schur complement matrix */\n22 0 /* ICNTL(20) :: right hand side form ( 0 dense form, 1 sparse form) : parameter will be set to 0 for FreeFEM */\n23 0 /* ICNTL(21) :: 0, 1 kept distributed solution : parameter is not considered in the current release of FreeFEM */\n24 0 /* ICNTL(22) :: controls the in-core/out-of-core (OOC) facility */\n25 0 /* ICNTL(23) :: maximum size of the working memory in Megabyte than MUMPS can allocate per working processor */\n26 0 /* ICNTL(24) :: control the detection of null pivot */\n27 0 /* ICNTL(25) :: control the computation of a null space basis */\n28 0 /* ICNTL(26) :: This parameter is only significant with Schur option (ICNTL(19) not zero). : parameter is not considered in the current release of FreeFEM */\n29 -8 /* ICNTL(27) (Experimental parameter subject to change in next release of MUMPS) :: control the blocking factor for multiple righthand side during the solution phase : parameter is not considered in the current release of FreeFEM */\n30 0 /* ICNTL(28) :: not used in this release of MUMPS*/\n31 0 /* ICNTL(29) :: not used in this release of MUMPS*/\n32 0 /* ICNTL(30) :: not used in this release of MUMPS*/\n33 0 /* ICNTL(31) :: not used in this release of MUMPS*/\n34 0 /* ICNTL(32) :: not used in this release of MUMPS*/\n35 0 /* ICNTL(33) :: not used in this release of MUMPS*/\n36 0 /* ICNTL(34) :: not used in this release of MUMPS*/\n37 0 /* ICNTL(35) :: not used in this release of MUMPS*/\n38 0 /* ICNTL(36) :: not used in this release of MUMPS*/\n39 0 /* ICNTL(37) :: not used in this release of MUMPS*/\n40 0 /* ICNTL(38) :: not used in this release of MUMPS*/\n41 1 /* ICNTL(39) :: not used in this release of MUMPS*/\n42 0 /* ICNTL(40) :: not used in this release of MUMPS*/\n43 0.01 /* CNTL(1) :: relative threshold for numerical pivoting */\n44 1e-8 /* CNTL(2) :: stopping criteria for iterative refinement */\n45 -1 /* CNTL(3) :: threshold for null pivot detection */\n46 -1 /* CNTL(4) :: determine the threshold for partial pivoting */\n47 0.0 /* CNTL(5) :: fixation for null pivots */\n48 0 /* CNTL(6) :: not used in this release of MUMPS */\n49 0 /* CNTL(7) :: not used in this release of MUMPS */\n50 0 /* CNTL(8) :: not used in this release of MUMPS */\n51 0 /* CNTL(9) :: not used in this release of MUMPS */\n52 0 /* CNTL(10) :: not used in this release of MUMPS */\n53 0 /* CNTL(11) :: not used in this release of MUMPS */\n54 0 /* CNTL(12) :: not used in this release of MUMPS */\n55 0 /* CNTL(13) :: not used in this release of MUMPS */\n56 0 /* CNTL(14) :: not used in this release of MUMPS */\n57 0 /* CNTL(15) :: not used in this release of MUMPS */\n\n\nIf no solver parameter is given, we used default option of MUMPS solver.\n\n\n\n\nTip\nMUMPS example\nA simple example of calling MUMPS in FreeFEM with this two methods is given in the Test solver MUMPS example.\n\n\n\nSuperLU distributed solver¶\nThe package SuperLU_DIST solves linear systems using LU factorization.\nIt is a free scientific library\nThis library provides functions to handle square or rectangular matrix in real and complex arithmetics.\nThe method implemented in SuperLU_DIST is a supernodal method.\nNew release of this package includes a parallel symbolic factorization.\nThis scientific library is written in C and MPI for communications.\nSuperLU_DIST parameters:\nWe describe now some parameters of SuperLU_DIST.\nThe SuperLU_DIST library use a 2D-logical process group.\nThis process grid is specified by \\(nprow\\) (process row) and \\(npcol\\) (process column) such that \\(N_{p}  =  nprow \\: npcol\\) where \\(N_{p}\\) is the number of all process allocated for SuperLU_DIST.\nThe input matrix parameters is controlled by “matrix = ” in sparams for internal parameter or in the third line of parameters file.\nThe different value are\n\nmatrix = assembled global matrix are available on all process\nmatrix = distributedglobal The global matrix is distributed among all the process\nmatrix = distributed The input matrix is distributed (not yet implemented)\n\nThe option arguments of SuperLU_DIST are described in the section Users-callable routine of the SuperLU users’ guide.\nThe parameter Fact and TRANS are specified in FreeFEM interfaces to SuperLU_DIST during the different steps.\nFor this reason, the value given by the user for this option is not considered.\nThe factorization LU is calculated in SuperLU_DIST on the matrix \\(A_p\\).\n\n\\[A_{p}  =  P_{c} \\: P_r \\: D_r \\: A \\: D_{c} \\: P_{c}^{t}\\]\nwhere \\(P_c\\) and \\(P_r\\) is the row and column permutation matrix respectively, \\(D_r\\) and \\(D_c\\) are diagonal matrix for respectively row and column scaling.\nThe option argument RowPerm (resp. ColPerm) control the row (resp. column) permutation matrix.\n\\(D_r\\) and \\(D_c\\) is controlled by the parameter DiagScale.\nThe parameter permr, permc, scaler, and scalec in FreeFEM is provided to give row permutation, column permutation, row scaling and column scaling of the user respectively.\nThe other parameters for LU factorization are ParSymFact and ReplaceTinyPivot.\nThe parallel symbolic factorization works only on a power of two processes and need the ParMetis ordering.\nThe default option argument of SuperLU_DIST are given in the file ffsuperlu_dist_fileparam.txt.\nCalling SuperLU_DIST in FreeFEM\nTo call SuperLU_DIST in FreeFEM, we need to load the library dynamic correspond to interface.\nThis done by the following line load \"real_superlu _DIST_FreeFem\" (resp. load \"complex_superlu_DIST_FreeFem\") for real (resp. complex) arithmetics in the file .edp.\nSolver parameters is defined in .edp file:\nTo call SuperLU_DIST with internal parameter, we used the parameters sparams.\nThe value of parameters of SuperLU_DIST in sparams are defined by :\n\nnprow = 1,\nnpcol = 1,\nmatrix =  distributedgloba,\nFact =  DOFACT,\nEquil = NO,\nParSymbFact = NO,\nColPerm =  MMD_AT_PLUS_A,\nRowPerm =  LargeDiag,\nDiagPivotThresh = 1.0,\nIterRefine = DOUBLE,\nTrans = NOTRANS,\nReplaceTinyPivot = NO,\nSolveInitialized = NO,\nPrintStat = NO,\nDiagScale = NOEQUIL\n\nThis value correspond to the parameter in the file ffsuperlu_dist_fileparam.txt.\nIf one parameter is not specified by the user, we take the default value of SuperLU_DIST.\nReading solver parameters on a file: The structure of data file for SuperLU_DIST in FreeFEM is given in the file ffsuperlu_dist_fileparam.txt (default value of the FreeFEM interface).\n 1 1 /* nprow : integer value */\n 2 1 /* npcol : integer value */\n 3 distributedglobal /* matrix input : assembled, distributedglobal, distributed */\n 4 DOFACT /* Fact : DOFACT, SamePattern, SamePattern_SameRowPerm, FACTORED */\n 5 NO /* Equil : NO, YES */\n 6 NO /* ParSymbFact : NO, YES */\n 7 MMD_AT_PLUS_A /* ColPerm : NATURAL, MMD_AT_PLUS_A, MMD_ATA, METIS_AT_PLUS_A, PARMETIS, MY_PERMC */\n 8 LargeDiag /* RowPerm : NOROWPERM, LargeDiag, MY_PERMR */\n 9 1.0 /* DiagPivotThresh : real value */\n10 DOUBLE /* IterRefine : NOREFINE, SINGLE, DOUBLE, EXTRA */\n11 NOTRANS /* Trans : NOTRANS, TRANS, CONJ*/\n12 NO /* ReplaceTinyPivot : NO, YES*/\n13 NO /* SolveInitialized : NO, YES*/\n14 NO /* RefineInitialized : NO, YES*/\n15 NO /* PrintStat : NO, YES*/\n16 NOEQUIL /* DiagScale : NOEQUIL, ROW, COL, BOTH*/\n\n\nIf no solver parameter is given, we used default option of SuperLU_DIST solver.\n\nTip\nA simple example of calling SuperLU_DIST in FreeFEM with this two methods is given in the Solver superLU_DIST example.\n\n\n\nPaStiX solver¶\nPaStiX (Parallel Sparse matrix package) is a free scientific library under CECILL-C license.\nThis package solves sparse linear system with a direct and block ILU(k) iterative methods.\nhis solver can be applied to a real or complex matrix with a symmetric pattern.\nPaStiX parameters:\nThe input matrix parameter of FreeFEM depend on PaStiX interface.\nmatrix  =  assembled for non distributed matrix.\nIt is the same parameter for SuperLU_DIST.\nThere are four parameters in PaStiX : iparm, dparm, perm and invp.\nThese parameters are respectively the integer parameters (vector of size 64), real parameters (vector of size 64), permutation matrix and inverse permutation matrix respectively.\niparm and dparm vectors are described in PaStiX RefCard.\nThe parameters permr and permc in FreeFEM are provided to give permutation matrix and inverse permutation matrix of the user respectively.\nSolver parameters defined in .edp file:\nTo call PaStiX in FreeFEM in this case, we need to specify the parameters lparams and dparams.\nThese parameters are defined by :\n\\(\\forall i\\)  =  0,… ,63, lparams[i]  =  iparm[i].\n\\(\\forall i\\)  =  0,… ,63, dparams[i]  =  dparm[i].\nReading solver parameters on a file:\nThe structure of data file for PaStiX parameters in FreeFEM is: first line structure parameters of the matrix and in the following line the value of vectors iparm and dparm in this order.\n 1 assembled /* matrix input :: assembled, distributed global and distributed */\n 2 iparm[0]\n 3 iparm[1]\n 4 ...\n 5 ...\n 6 iparm[63]\n 7 dparm[0]\n 8 dparm[1]\n 9 ...\n10 ...\n11 dparm[63]\n\n\nAn example of this file parameter is given in ffpastix_iparm_dparm.txt with a description of these parameters.\nThis file is obtained with the example file iparm.txt and dparm.txt including in the PaStiX package.\nIf no solver parameter is given, we use the default option of PaStiX solver.\n\nTip\nA simple example of calling PaStiX in FreeFEM with this two methods is given in the Solver PaStiX example.\n\nIn Table 4, we recall the different matrix considering in the different direct solvers.\n\nTable 4 Type of matrix used by the different direct sparse solver¶\n\n\n\n\n\n\n\n\n\n\ndirect solver\nsquare matrix\nrectangular matrix\n\n\nsym\nsym pattern\nunsym\nsym\nsym pattern\nunsym\n\n\n\nSuperLU_DIST\nyes\nyes\nyes\nyes\nyes\nyes\n\nMUMPS\nyes\nyes\nyes\nno\nno\nno\n\nPastix\nyes\nyes\nno\nno\nno\nno\n\n\n\n\n\n\nParallel sparse iterative solver¶\nConcerning iterative solvers, we have chosen pARMS, HIPS and Hypre.\nEach software implements a different type of parallel preconditioner.\nSo, pARMS implements algebraic domain decomposition preconditioner type such as additive Schwartz [CAI1989] and interface method; while HIPS implement hierarchical incomplete factorization and finally HYPRE implements multilevel preconditioner are AMG(Algebraic MultiGrid) and parallel approximated inverse.\nTo use one of these programs in FreeFEM, you have to install it independently of FreeFEM.\nIt is also necessary to install the MPI communication library which is essential for communication between the processors and, in some cases, software partitioning graphs like METIS or Scotch.\nAll this preconditioners are used with Krylov subspace methods accelerators.\nKrylov subspace methods are iterative methods which consist in finding a solution \\(x\\) of linear system \\(Ax = b\\) inside the affine space \\(x_0+K_m\\) by imposing that \\(b-Ax \\bot \\mathcal{L}_m\\), where \\(K_m\\) is Krylov subspace of dimension \\(m\\) defined by \\(K_m = \\{r_0, Ar_0, A^2r_0,...,A^{m-1}r_0\\}\\) and \\(\\mathcal{L}_m\\) is another subspace of dimension \\(m\\) which depends on type of Krylov subspace. For example in GMRES, \\(\\mathcal{L}_m = AK_m\\).\nWe realized an interface which is easy to use, so that the call of these different softwares in FreeFEM is done in the same way.\nYou just have to load the solver and then specify the parameters to apply to the specific solvers.\nIn the rest of this chapter, when we talk about Krylov subspace methods we mean one among GMRES, CG and BICGSTAB.\n\npARMS solver¶\npARMS (parallel Algebraic Multilevel Solver) is a software developed by Youssef Saad and al at University of Minnesota.\nThis software is specialized in the resolution of large sparse non symmetric linear systems of equation.\nSolvers developed in pARMS are of type “Krylov’s subspace”.\nIt consists of variants of GMRES like FGMRES (Flexible GMRES), DGMRES (Deflated GMRES) [SAAD2003] and BICGSTAB.\npARMS also implements parallel preconditioner like RAS (Restricted Additive Schwarz) [CAI1989] and Schur Complement type preconditioner.\nAll these parallel preconditioners are based on the principle of domain decomposition.\nThus, the matrix \\(A\\) is partitioned into sub matrices \\(A_i\\)(\\(i = 1,...,p\\)) where p represents the number of partitions one needs.\nThe union of \\(A_i\\) forms the original matrix.\nThe solution of the overall system is obtained by solving the local systems on \\(A_i\\) (see [SMITH1996]).\nTherefore, a distinction is made between iterations on \\(A\\) and the local iterations on \\(A_i\\).\nTo solve the local problem on \\(A_i\\) there are several preconditioners as ilut (Incomplete LU with threshold), iluk (Incomplete LU with level of fill in) and ARMS (Algebraic Recursive Multilevel Solver).\n\nTip\nDefault parameters\n 1 load \"parms_FreeFem\" //Tell FreeFem that you will use pARMS\n 2 \n 3 // Mesh\n 4 border C(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n 5 mesh Th  =  buildmesh (C(50));\n 6 \n 7 // Fespace\n 8 fespace Vh(Th, P2); Vh u, v;\n 9 \n10 // Function\n11 func f =  x*y;\n12 \n13 // Problem\n14 problem Poisson (u, v, solver = sparsesolver)\n15      =  int2d(Th)(\n16           dx(u)*dx(v)\n17         + dy(u)*dy(v) )\n18     + int2d(Th)(\n19         - f*v\n20     )\n21     + on(1, u = 0) ;\n22 \n23 // Solve\n24 real cpu  =  clock();\n25 Poisson;\n26 cout << \" CPU time  =  \" << clock()-cpu << endl;\n27 \n28 // Plot\n29 plot(u);\n\n\nIn line 1, the pARMS dynamic library is loaded with interface FreeFEM.\nAfter this, in line 15 we specify that the bilinear form will be solved by the last sparse linear solver load in memory which, in this case, is pARMS.\nThe parameters used in pARMS in this case are the default one since the user does not have to provide any parameter.\n\nNote\nIn order to see the plot of a parallel script, run the command FreeFem++-mpi -glut ffglut script.edp\n\n\nHere are some default parameters:\n\nsolver = FGMRES,\nKrylov dimension = 30,\nMaximum of Krylov = 1000,\nTolerance for convergence = 1e-08 (see book\n[SAAD2003] to understand all this parameters),\npreconditionner = Restricted Additif Schwarz\n[CAI1989],\nInner Krylov dimension = 5,\nMaximum of inner Krylov dimension = 5,\nInner preconditionner = ILUK.\n\nTo specify the parameters to apply to the solver, the user can either give an integer vector for integer parameters and real vectors for real parameters or provide a file which contains those parameters.\n\nTip\nUser specifies parameters inside two vectors\nLets us consider Navier-Stokes example.\nIn this example we solve linear systems coming from discretization of Navier-Stokes equations with pARMS.\nParameters of solver is specified by user.\n 1 load \"parms_FreeFem\"\n 2 \n 3 // Parameters\n 4 real nu  =  1.;\n 5 int[int] iparm(16);\n 6 real[int] dparm(6);\n 7 for (int ii  =  0; ii < 16; ii++)\n 8     iparm[ii]  =  -1;\n 9 for (int ii  =  0; ii < 6; ii++)\n10     dparm[ii]  =  -1.0; iparm[0] = 0;\n11 \n12 // Mesh\n13 mesh Th  =  square(10, 10);\n14 int[int] wall  =  [1, 3];\n15 int inlet  =  4;\n16 \n17 // Fespace\n18 fespace Vh(Th, [P2, P2, P1]);\n19 \n20 // Function\n21 func uc  =  1.;\n22 \n23 // Problem\n24 varf Stokes ([u, v, p], [ush, vsh, psh], solver = sparsesolver)\n25      =  int2d(Th)(\n26           nu*(\n27             dx(u)*dx(ush)\n28             + dy(u)*dy(ush)\n29             + dx(v)*dx(vsh)\n30             + dy(v)*dy(vsh)\n31         )\n32         - p*psh*(1.e-6)\n33         - p*(dx(ush) + dy(vsh))\n34         - (dx(u) + dy(v))*psh\n35     )\n36     + on(wall, wall, u = 0., v = 0.)\n37     + on(inlet, u = uc, v = 0) ;\n38 \n39 matrix AA  =  Stokes(Vh, Vh);\n40 set(AA, solver = sparsesolver, lparams = iparm, dparams = dparm); //set pARMS as linear solver\n41 real[int] bb  =  Stokes(0, Vh);\n42 real[int] sol(AA.n);\n43 sol  =  AA^-1 * bb;\n\n\nWe need two vectors to specify the parameters of the linear solver.\nIn line 5-6 of the example, we have declared these vectors(int[int] iparm(16); real[int] dparm(6);).\nIn line 7-10 we have initialized these vectors by negative values.\nWe do this because all parameters values in pARMS are positive and if you do not change the negative values of one entry of this vector, the default value will be set.\nIn Table 7 and Table 8, we have the meaning of different entries of these vectors.\nWe run this example on a cluster paradent of Grid5000 and report results in Table 5.\n\nTable 5 Convergence and time for solving linear system¶\n\n\n\n\n\n\n\n\n\\(n = 471281\\)\n\\(nnz = 13\\times10^6\\)\n\\(Te = 571.29\\)\n\nnp\nadd(iluk)\nshur(iluk)\n\n\nnit\ntime\nnit\ntime\n\n\n\n4\n230\n637.57\n21\n557.8\n\n8\n240\n364.12\n22\n302.25\n\n16\n247\n212.07\n24\n167.5\n\n32\n261\n111.16\n25\n81.5\n\n\n\n\nTable 6 Legend of Table 5¶\n\n\n\n\n\nn\nmatrix size\n\n\n\nnnz\nnumber of non null entries inside matrix\n\nnit\nnumber of iteration for convergence\n\ntime\nTime for convergence\n\nTe\nTime for constructing finite element matrix\n\nnp\nnumber of processor\n\n\n\nIn this example, we fix the matrix size (in term of finite element, we fix the mesh) and increase the number of processors used to solve the linear system.\nWe saw that, when the number of processors increases, the time for solving the linear equation decreases, even if the number of iteration increases.\nThis proves that, using pARMS as solver of linear systems coming from discretization of partial differential equation in FreeFEM can decrease drastically the total time of simulation.\n\n\nTable 7 Meaning of lparams corresponding variables¶\n\n\n\n\n\nEntries of iparm\nSignifications of each entries\n\n\n\niparm[0]\nKrylov subspace methods\nDifferent values for this parameters are specify on Table 9\n\n\niparm[1]\nPreconditionner\nDifferent preconditionners for this parameters are  specify on Table 10\n\n\niparm[2]\nKrylov subspace dimension in outer iteration: default value 30\n\niparm[3]\nMaximum of iterations in outer iteration: default value 1000\n\niparm[4]\nNumber of level in arms when used\n\niparm[5]\nKrylov subspace dimension in inner iteration: default value 3\n\niparm[6]\nMaximum of iterations in inner iteration: default value 3\n\niparm[7]\nSymmetric( = 1 for symmetric) or unsymmetric matrix:\ndefault value 0(unsymmetric matrix)\n\n\niparm[8]\nOverlap size between different subdomain: default value 0(no overlap)\n\niparm[9]\nScale the input matrix or not: Default value 1 (Matrix should be scaled)\n\niparm[10]\nBlock size in arms when used: default value 20\n\niparm[11]\nlfil0 (ilut, iluk, and arms) : default value 20\n\niparm[12]\nlfil for Schur complement const : default value 20\n\niparm[13]\nlfil for Schur complement const : default value 20\n\niparm[14]\nMulticoloring or not in ILU when used : default value 1\n\niparm[15]\nInner iteration : default value 0\n\niparm[16]\nPrint message when solving: default 0 (no message print)\n\n0: no message is print,\n1: Convergence informations like number of iteration and residual,\n2: Timing for a different step like preconditioner,\n3 : Print all informations\n\n\n\n\n\n\nTable 8 Significations of dparams corresponding variables¶\n\n\n\n\n\nEntries of dparm\nSignifications of each entries\n\n\n\ndparm[0]\nprecision for outer iteration : default value 1e-08\n\ndparm[1]\nprecision for inner iteration: default value 1e-2\n\ndparm[2]\ntolerance used for diagonal domain: : default value 0.1\n\ndparm[3]\ndrop tolerance droptol0 (ilut, iluk, and arms) : default value 1e-2\n\ndparm[4]\ndroptol for Schur complement const: default value 1e-2\n\ndparm[5]\ndroptol for Schur complement const: default value 1e-2\n\n\n\n\nTable 9 Krylov Solvers in pARMS¶\n\n\n\n\n\nValues of iparm[0]\nKrylov subspace methods\n\n\n\n0\nFGMRES (Flexible GMRES)\n\n1\nDGMRES (Deflated GMRES)\n\n2\nBICGSTAB\n\n\n\n\nTable 10 Preconditionners in pARMS¶\n\n\n\n\n\nValues of iparm[1]\nPreconditionners type\n\n\n\n0\nadditive Schwartz preconditioner with ilu0 as local preconditioner\n\n1\nadditive Schwartz preconditioner with iluk as local preconditioner\n\n2\nadditive Schwartz preconditioner with ilut as local preconditioner\n\n3\nadditive Schwartz preconditioner with arms as local preconditioner\n\n4\nLeft Schur complement preconditioner with ilu0 as local preconditioner\n\n5\nLeft Schur complement preconditioner with ilut as local preconditioner\n\n6\nLeft Schur complement preconditioner with iluk as local preconditioner\n\n7\nLeft Schur complement preconditioner with arms as local preconditioner\n\n8\nRight Schur complement preconditioner with ilu0 as local preconditioner\n\n9\nRight Schur complement preconditioner with ilut as local preconditioner\n\n10\nRight Schur complement preconditioner with iluk as local preconditioner\n\n11\nRight Schur complement preconditioner with arms as local preconditioner\n\n12\nsch_gilu0, Schur complement preconditioner with global ilu0\n\n13\nSchurSymmetric GS preconditioner\n\n\n\n\n\nInterfacing with HIPS¶\nHIPS (Hierarchical Iterative Parallel Solver) is a scientific library that provides an efficient parallel iterative solver for very large sparse linear systems.\nHIPS is available as free software under the CeCILL-C licence.\nHIPS implements two solver classes which are the iteratives class (GMRES, PCG) and the Direct class.\nConcerning preconditionners, HIPS implements a type of multilevel ILU.\nFor further informations on those preconditionners see the HIPS documentation.\n\nTip\nLaplacian 3D solved with HIPS\nLet us consider the 3D Laplacian example inside FreeFEM package where after discretization we want to solve the linear equation with HIPS.\nThe following example is a Laplacian 3D using Hips as linear solver.\nWe first load Hips solver at line 2.\nFrom line 7 to 18 we specify the parameters for the Hips solver and in line 82 we set these parameters in the linear solver.\nIn Table 11 results of running on Cluster Paradent of Grid5000 are reported.\nWe can see in this running example the efficiency of parallelism.\n 1 load \"msh3\"\n 2 load \"hips_FreeFem\" //load Hips library\n 3 \n 4 // Parameters\n 5 int nn  =  10;\n 6 real zmin  =  0, zmax  =  1;\n 7 int[int] iparm(14);\n 8 real[int] dparm(6);\n 9 for (int iii  =  0; iii < 14; iii++)\n10     iparm[iii]  =  -1;\n11 for (int iii  =  0; iii < 6; iii++)\n12     dparm[iii]  =  -1;\n13 iparm[0]  =  0; //use iterative solver\n14 iparm[1]  =  1; //PCG as Krylov method\n15 iparm[4]  =  0; //Matrix are symmetric\n16 iparm[5]  =  1; //Pattern are also symmetric\n17 iparm[9]  =  1; //Scale matrix\n18 dparm[0]  =  1e-13; //Tolerance to convergence\n19 dparm[1]  =  5e-4; //Threshold in ILUT\n20 dparm[2]  =  5e-4; //Threshold for Schur preconditionner\n21 \n22 // Functions\n23 func ue  =  2*x*x + 3*y*y + 4*z*z + 5*x*y + 6*x*z + 1;\n24 func uex  =  4*x + 5*y + 6*z;\n25 func uey  =  6*y + 5*x;\n26 func uez  =  8*z + 6*x;\n27 func f  =  -18.;\n28 \n29 // Mesh\n30 mesh Th2  =  square(nn, nn);\n31 \n32 int[int] rup  =  [0,2], rdown = [0, 1];\n33 int[int] rmid = [1, 1, 2, 1, 3, 1, 4, 1];\n34 \n35 mesh3 Th = buildlayers(Th2, nn, zbound = [zmin, zmax], reffacemid = rmid,\n36     reffaceup  =  rup, reffacelow  =  rdown);\n37 \n38 // Fespace\n39 fespace Vh2(Th2, P2);\n40 Vh2 ux, uz, p2;\n41 \n42 fespace Vh(Th, P2);\n43 Vh uhe  =  ue;\n44 cout << \"uhe min  = \" << uhe[].min << \", max  = \" << uhe[].max << endl;\n45 Vh u, v;\n46 Vh F;\n47 \n48 // Macro\n49 macro Grad3(u) [dx(u), dy(u), dz(u)] //\n50 \n51 // Problem\n52 varf va (u, v)\n53      =  int3d(Th)(\n54           Grad3(v)' * Grad3(u)\n55     )\n56     + int2d(Th, 2)(\n57           u*v\n58     )\n59     - int3d(Th)(\n60           f*v\n61     )\n62     - int2d(Th, 2)(\n63           ue*v + (uex*N.x + uey*N.y + uez*N.z)*v\n64     )\n65     + on(1, u = ue);\n66 \n67 varf l (unused, v)  =  int3d(Th)(f*v);\n68 \n69 real cpu = clock();\n70 matrix Aa  =  va(Vh, Vh);\n71 \n72 F[]  =  va(0, Vh);\n73 \n74 if (mpirank  =  =  0){\n75     cout << \"Size of A  = \" << Aa.n << endl;\n76     cout << \"Non zero coefficients  = \" << Aa.nbcoef << endl;\n77     cout << \"CPU TIME FOR FORMING MATRIX  = \" << clock()-cpu << endl;\n78 }\n79 \n80 set(Aa, solver = sparsesolver, dparams = dparm, lparams = iparm); //Set hips as linear solver\n81 \n82 // Solve\n83 u[]  =  Aa^-1*F[];\n84 \n85 // Plot\n86 plot(u);\n\n\n\nTable 11 Legend of this table are give in Table 6¶\n\n\n\n\n\n\n\\(n = 4\\times 10^6\\)\n\\(nnz = 118 \\times 10^6\\)\n\\(Te = 221.34\\)\n\nnp\nnit\ntime\n\n\n\n8\n190\n120.34\n\n16\n189\n61.08\n\n32\n186\n31.70\n\n64\n183\n23.44\n\n\n\n\n\nTip\n\nTable 12 Significations of lparams corresponding to HIPS interface¶\n\n\n\n\n\nEntries of iparm\nSignifications of each entries\n\n\n\niparm[0]\nStrategy use for solving (Iterative = 0 or Hybrid = 1 or Direct = 2).\nDefaults values are : Iterative\n\n\niparm[1]\nKrylov methods.\nIf iparm[0] = 0, give type of Krylov methods: 0 for GMRES, 1 for PCG\n\n\niparm[2]\nMaximum of iterations in outer iteration: default value 1000\n\niparm[3]\nKrylov subspace dimension in outer iteration: default value 40\n\niparm[4]\nSymmetric( = 0 for symmetric) and 1 for unsymmetricmatrix:\ndefault value 1 (unsymmetric matrix)\n\n\niparm[5]\nPattern of matrix are symmetric or not: default value 0\n\niparm[6]\nPartition type of input matrix: default value 0\n\niparm[7]\nNumber of level that use the HIPS locally consistentfill-in:\nDefault value 2\n\n\niparm[8]\nNumbering in indices array will start at 0 or 1: Default value 0\n\niparm[9]\nScale matrix. Default value 1\n\niparm[10]\nReordering use inside subdomains for reducingfill-in:\nOnly use for iterative. Default value 1\n\n\niparm[11]\nNumber of unknowns per node in the matrix non-zeropattern graph:\nDefault value 1\n\n\niparm[12]\nThis value is used to set the number of time the\nnormalization is applied to the matrix: Default 2.\n\n\niparm[13]\nLevel of informations printed during solving: Default 5.\n\niparm[14]\nHIPS_DOMSIZE Subdomain size\n\n\n\n\nTable 13 Significations of dparams corresponding to HIPS interface¶\n\n\n\n\n\ndparm[0]\nHIPS_PREC: Relative residual norm: Default = 1e-9\n\ndparm[1]\nHIPS_DROPTOL0: Numerical threshold in ILUT for interior domain\n(important : set 0.0 in HYBRID: Default = 0.005)\n\n\ndparm[2]\nHIPS_DROPTOL1 : Numerical threshold in ILUT for Schur preconditioner:\nDefault = 0.005\n\n\ndparm[3]\nHIPS_DROPTOLE : Numerical threshold for coupling between the interior\nlevel and Schur: Default 0.005\n\n\ndparm[4]\nHIPS_AMALG : Numerical threshold for coupling between the interior level\nand Schur: Default = 0.005\n\n\ndparm[5]\nHIPS_DROPSCHUR : Numerical threshold for coupling between the interior\nlevel and Schur: Default = 0.005\n\n\n\n\n\n\n\nInterfacing with HYPRE¶\nHypre (High Level Preconditioner) is a suite of parallel preconditioner developed at Lawrence Livermore National Lab.\nThere are two main classes of preconditioners developed in HYPRE: AMG (Algebraic MultiGrid) and Parasails (Parallel Sparse Approximate Inverse).\nNow, suppose we want to solve \\(Ax = b\\).\nAt the heart of AMG there is a series of progressively coarser (smaller) representations of the matrix \\(A\\).\nGiven an approximation \\(\\hat{x}\\) to the solution \\(x\\), consider solving the residual equation \\(Ae = r\\) to find the error \\(e\\), where \\(r = b-A\\hat{x}\\).\nA fundamental principle of AMG is that it is an algebraically smooth error.\nTo reduce the algebraically smooth errors further, they need to be represented by a smaller defect equation (coarse grid residual equation) \\(A_ce_c = r_c\\), which is cheaper to solve.\nAfter solving this coarse equation, the solution is then interpolated in fine grid represented here by matrix \\(A\\).\nThe quality of AMG depends on the choice of coarsening and interpolating operators.\nThe sparse approximate inverse approximates the inverse of a matrix \\(A\\) by a sparse matrix \\(M\\).\nA technical idea to construct matrix \\(M\\) is to minimize the Frobenuis norm of the residual matrix \\(I-MA\\).\nFor more details on this preconditioner technics see [CHOW1997].\nHYPRE implement three Krylov subspace solvers: GMRES, PCG and BiCGStab.\n\nTip\nLaplacian 3D solved with HYPRE\nLet us consider again the 3D Laplacian example inside FreeFEM package where after discretization we want to solve the linear equation with Hypre.\nThe following example is a Laplacian 3D using Hypre as linear solver.\nThis is the same example as Hips one, so we just show here the lines where we set some Hypre parameters.\nWe first load the Hypre solver at line 2.\nFrom line 6 to 18 we specifies the parameters to set to Hypre solver and in line 22 we set parameters to Hypre solver.\nIt should be noted that the meaning of the entries of these vectors is different from those of Hips.\nIn the case of HYPRE, the meaning of differents entries of vectors iparm and dparm are given in Table 14 to Table 18.\nIn Table 19 the results of running on Cluster Paradent of Grid5000 are reported.\nWe can see in this running example the efficiency of parallelism, in particular when AMG are use as preconditioner.\n 1 load \"msh3\"\n 2 load \"hipre_FreeFem\" //Load Hipre librairy\n 3 \n 4 // Parameters\n 5 int nn  =  10;\n 6 int[int] iparm(20);\n 7 real[int] dparm(6);\n 8 for (int iii  =  0; iii < 20; iii++)\n 9     iparm[iii]  =  -1;\n10 for (int iii  =  0; iii < 6; iii++)\n11     dparm[iii]  =  -1;\n12 iparm[0]  =  2; //PCG as krylov method\n13 iparm[1]  =  0; //AMG as preconditionner 2: if ParaSails\n14 iparm[7]  =  7; //Interpolation\n15 iparm[9]  =  6; //AMG Coarsen type\n16 iparm[10]  =  1; //Measure type\n17 iparm[16]  =  2; //Additive schwarz as smoother\n18 dparm[0]  =  1e-13; //Tolerance to convergence\n19 dparm[1]  =  5e-4; //Threshold\n20 dparm[2]  =  5e-4; //Truncation factor\n21 \n22 ...\n23 \n24 set(Aa, solver = sparsesolver, dparams = dparm, lparams = iparm);\n\n\n\n\nTable 14 Definitions of common entries of iparms and dparms vectors for every preconditioner in HYPRE¶\n\n\n\n\n\niparms[0]\nSolver identification:\n0: BiCGStab, 1: GMRES, 2: PCG. Default = 1\n\n\niparms[1]\nPreconditioner identification:\n0: BOOMER AMG, 1: PILUT, 2: Parasails, 3: Schwartz Default = 0\n\n\niparms[2]\nMaximum of iteration: Default = 1000\n\niparms[3]\nKrylov subspace dim: Default =  40\n\niparms[4]\nSolver print info level: Default = 2\n\niparms[5]\nSolver log: Default = 1\n\niparms[6]\nSolver stopping criteria only for BiCGStab : Default = 1\n\ndparms[0]\nTolerance for convergence: Default = :math:1.0e-11\n\n\n\n\nTable 15 Definitions of other entries of iparms and dparms if preconditioner is BOOMER AMG¶\n\n\n\n\n\niparms[7]\nAMG interpolation type: Default = 6\n\niparms[8]\nSpecifies the use of GSMG - geometrically smooth coarsening and\ninterpolation: Default = 1\n\n\niparms[9]\nAMG coarsen type: Default = 6\n\niparms[10]\nDefines whether local or global measures are used: Default = 1\n\niparms[11]\nAMG cycle type: Default = 1\n\niparms[12]\nAMG Smoother type: Default = 1\n\niparms[13]\nAMG number of levels for smoothers: Default = 3\n\niparms[14]\nAMG number of sweeps for smoothers: Default = 2\n\niparms[15]\nMaximum number of multigrid levels: Default = 25\n\niparms[16]\nDefines which variant of the Schwartz method isused:\n0: hybrid multiplicative Schwartz method (no overlap across processor boundaries)\n1: hybrid additive Schwartz method (no overlap across processor boundaries)\n2: additive Schwartz method\n3: hybrid multiplicative Schwartz method (with overlap across processor boundaries)\nDefault = 1\n\n\niparms[17]\nSize of the system of PDEs: Default = 1\n\niparms[18]\nOverlap for the Schwarz method: Default = 1\n\niparms[19]\nType of domain used for the Schwarz method\n0: each point is a domain\n1: each node is a domain (only of interest in “systems” AMG)\n2: each domain is generated by agglomeration (default)\n\n\ndparms[1]\nAMG strength threshold: Default = 0.25\n\ndparms[2]\nTruncation factor for the interpolation: Default = 1e-2\n\ndparms[3]\nSets a parameter to modify the definition of strength for\ndiagonal dominant portions of the matrix: Default = 0.9\n\n\ndparms[3]\nDefines a smoothing parameter for the additive Schwartz method. Default = 1\n\n\n\n\nTable 16 Definitions of other entries of iparms and dparms if preconditioner is PILUT¶\n\n\n\n\n\niparms[7]\nRow size in Parallel ILUT: Default = 1000\n\niparms[8]\nSet maximum number of iterations: Default = 30\n\ndparms[1]\nDrop tolerance in Parallel ILUT: Default = 1e-5\n\n\n\n\nTable 17 Definitions of other entries of iparms and dparms if preconditioner is ParaSails¶\n\n\n\n\n\niparms[7]\nNumber of levels in Parallel Sparse Approximate inverse: Default = 1\n\niparms[8]\nSymmetric parameter for the ParaSails preconditioner:\n0: nonsymmetric and/or indefinite problem, and nonsymmetric preconditioner\n1: SPD problem, and SPD (factored) preconditioner\n2: nonsymmetric, definite problem, and SPD (factored) preconditioner\nDefault = 0\n\n\ndparms[1]\nFilters parameters. The filter parameter is used to drop small nonzeros in the preconditioner,\nto reduce the cost of applying the preconditioner: Default = 0.1\n\n\ndparms[2]\nThreshold parameter: Default = 0.1\n\n\n\n\nTable 18 Definitions of other entries of iparms and dparms if preconditionner is Schwartz¶\n\n\n\n\n\niparms[7]\nDefines which variant of the Schwartz method isused:\n0: hybrid multiplicative Schwartz method (no overlap across processor boundaries)\n1: hybrid additive Schwartz method (no overlap across processor boundaries)\n2: additive Schwartz method\n3: hybrid multiplicative Schwartz method (with overlap across processor boundaries)\nDefault = 1\n\n\niparms[8]\nOverlap for the Schwartz method: Default = 1\n\niparms[9]\nType of domain used for the Schwartz method\n0: each point is a domain\n1: each node is a domain (only of interest in “systems” AMG)\n2: each domain is generated by agglomeration (default)\n\n\n\n\n\nTable 19 Convergence and time for solving linear system¶\n\n\n\n\n\n\n\n\\(n = 4\\times10^6\\)\n\\(nnz = 13\\times10^6\\)\n\\(Te  =  571.29\\)\n\nnp\nAMG\n\n\nnit\ntime\n\n\n\n8\n6\n1491.83\n\n16\n5\n708.49\n\n32\n4\n296.22\n\n64\n4\n145.64\n\n\n\n\n\nConclusion¶\nWith the different runs presented here, we wanted to illustrate the gain in time when we increase the number of processors used for the simulations.\nWe saw that in every case the time for the construction of the finite element matrix is constant.\nThis is normal because until now this phase is sequential in FreeFEM.\nIn contrast, phases for solving the linear system are parallel.\nWe saw on several examples presented here that when we increase the number of processors, in general we decrease the time used for solving the linear systems.\nBut this is not true in every case.\nIn several case, when we increase the number of processors the time to convergence also increases.\nThere are two main reasons for this.\nFirst, the increase of processors can lead to the increase of volume of exchanged data across processors consequently increasing the time for solving the linear systems.\nFurthermore, in decomposition domain type preconditioners, the number of processors generally corresponds to the number of sub domains.\nIn subdomain methods, generally when we increase the number of subdomains we decrease convergence quality of the preconditioner.\nThis can increase the time used for solving linear equations.\nTo end this, we should note that good use of the preconditioners interfaced in FreeFEM is empiric, because it is difficult to know what is a good preconditioner for some type of problems.\nAlthough, the efficiency of preconditioners sometimes depends on how its parameters are set.\nFor this reason we advise the user to pay attention to the meaning of the parameters in the user guide of the iterative solvers interfaced in FreeFEM.\n\n\n\nDomain decomposition¶\nIn the previous section, we saw that the phases to construct a matrix are sequential.\nOne strategy to construct the matrix in parallel is to divide geometrically the domain into subdomains.\nIn every subdomain we construct a local submatrix and after that we assemble every submatrix to form the global matrix.\nWe can use this technique to solve PDE directly in domain \\(\\Omega\\).\nIn this case, in every subdomains you have to define artificial boundary conditions to form consistent equations in every subdomains.\nAfter this, you solve equation in every subdomains and define a strategy to obtain the global solution.\nIn terms of parallel programming for FreeFEM, with MPI, this means that the user must be able to divide processors avaible for computation into subgroups of processors and also must be able to realize different type of communications in FreeFEM script.\nHere is a wrapper of some MPI functions.\n\nCommunicators and groups¶\nGroups\nmpiGroup grpe(mpiGroup gp, KN_<long>): Create MPI_Group from existing group gp by given vector.\nCommunicators\nCommunicators is an abstract MPI object which allows MPI user to communicate across group of processors.\nCommunicators can be Intra-communicators(involves a single group) or Inter-communicators (involves two groups).\nWhen we not specify type of communicator it will be Intra-communicators\nmpiComm cc(mpiComm comm, mpiGroup gp): Creates a new communicator.\ncomm communicator(handle), gp group which is a subset of the group of comm (handle).\nReturn new communicator\nmpiComm cc(mpiGroup gp): Same as previous constructor but default comm here is MPI_COMM_WORLD.\nmpiComm cc(mpiComm comm, int color, int key): Creates new communicators based on colors and key.\nThis constructor is based on MPI_Comm_split routine of MPI.\nmpiComm cc(MPIrank p, int key): Same constructor than the last one.\nHere colors and comm is defined in MPIrank.\nThis constructor is based on MPI_Comm_split routine of MPI.\n\nTip\nSplit communicator\n1 mpiComm comm(mpiCommWorld, 0, 0);\n2 int color  =  mpiRank(comm)%2;\n3 mpiComm ccc(processor(color, comm), 0);\n4 mpiComm qpp(comm, 0, 0);\n5 mpiComm cp(ccc, color, 0);\n\n\n\nmpiComm cc(mpiComm comm, int high): Creates an intracommunicator from an intercommunicator. comm intercommunicator, high.\nUsed to order the groups within comm (logical) when creating the new communicator.\nThis constructor is based on MPI_Intercomm_merge routine of MPI.\nmpiComm cc(MPIrank p1, MPIrank p2, int tag): This constructor creates an intercommuncator from two intracommunicators.\np1 defined local (intra)communicator and rank in local_comm of leader (often 0) while p2 defined remote communicator and rank in peer_comm of remote leader (often 0).\ntag Message tag to use in constructing intercommunicator.\nThis constructor is based on MPI_Intercomm_create.\n\nTip\nMerge\n 1 mpiComm comm, cc;\n 2 int color  =  mpiRank(comm)%2;\n 3 int rk  =  mpiRank(comm);\n 4 int size  =  mpiSize(comm);\n 5 cout << \"Color values: \" << color << endl;\n 6 mpiComm ccc(processor((rk<size/2), comm), rk);\n 7 mpiComm cp(cc, color, 0);\n 8 int rleader;\n 9 if (rk  =  =  0){ rleader  =  size/2; }\n10 else if (rk  =  =  size/2){ rleader  =  0; }\n11 else{ rleader  =  3; }\n12 mpiComm qqp(processor(0, ccc), processor(rleader, comm), 12345);\n13 int aaa  =  mpiSize(ccc);\n14 cout << \"Number of processor: \" << aaa << endl;\n\n\n\n\n\nProcess¶\nIn FreeFEM we wrap MPI process by function call processor which create internal FreeFEM object call MPIrank.\nThis mean that do not use MPIrank in FreeFEM script.\nprocessor(int rk): Keep process rank inside object MPIrank.\nRank is inside MPI_COMM_WORLD.\nprocessor(int rk, mpiComm cc) and processor(mpiComm cc, int rk) process rank inside communicator cc.\nprocessor(int rk, mpiComm cc) and processor(mpiComm cc, int rk) process rank inside communicator cc.\nprocessorblock(int rk): This function is exactlly the same than processor(int rk) but is use in case of blocking communication.\nprocessorblock(int rk, mpiComm cc): This function is exactly the same as processor(int rk, mpiComm cc) but uses a synchronization point.\n\n\nPoints to Points communicators¶\nIn FreeFEM you can call MPI points to points communications functions.\nSend(processor(int rk, mpiComm cc), Data D) : Blocking send of Data D to processor of rank rk inside communicator cc.\nNote that Data D can be: int, real, complex, int[int], real[int], complex[int], Mesh, Mesh3, Matrix.\nRecv(processor(int rk, mpiComm cc), Data D): Receive Data D from process of rank rk in communicator cc.\nNote that Data D can be: int, real, complex, int[int], real[int], complex[int], Mesh, Mesh3, Matrix and should be the same type than corresponding send.\nIsend(processor(int rk, mpiComm cc), Data D) : Non blocking send of Data D to processor of rank rk inside communicator cc.\nNote that Data D can be: int, real, complex, int[int], real[int], complex[int], mesh, mesh3, matrix.\nRecv(processor(int rk, mpiComm cc), Data D): Receive corresponding to send.\n\n\nGlobal operations¶\nIn FreeFEM you can call MPI global communication functions.\nbroadcast(processor(int rk, mpiComm cc), Data D): Process rk Broadcast Data D to all process inside communicator cc.\nNote that Data D can be: int, real, complex, int[int], real[int], complex[int], Mesh, Mesh3, Matrix.\nbroadcast(processor(int rk), Data D): Process rk Broadcast Data D to all process inside MPI_COMM_WORLD.\nNote that Data D can be: int, real, complex, int[int], real[int], complex[int], Mesh, Mesh3, Matrix.\nmpiAlltoall(Data a, Data b): Sends data a from all to all processes.\nReceive buffer is Data b.\nThis is done inside communicator MPI_COMM_WORLD.\nmpiAlltoall(Data a, Data b, mpiComm cc): Sends data a from all to all processes. Receive buffer is Data b.\nThis is done inside communicator cc.\nmpiGather(Data a, Data b, processor(mpiComm, int rk): Gathers together values Data a from a group of processes.\nProcess of rank rk get data on communicator rk.\nThis function is like MPI_Gather.\nmpiAllgather(Data a, Data b): Gathers Data a from all processes and distribute it to all in Data b.\nThis is done inside communicator MPI_COMM_WORLD.\nThis function is like MPI_Allgather.\nmpiAllgather(Data a, Data b, mpiComm cc): Gathers Data a from all processes and distribute it to all in Data b.\nThis is done inside communicator cc.\nThis function is like MPI_Allgather.\nmpiScatter(Data a,Data b,processor(int rk, mpiComm cc)): Sends Data a from one process whith rank rk to all other processes in group represented by communicator mpiComm cc.\nmpiReduce(Data a, Data b, processor(int rk, mpiComm cc), MPI_Op op) Reduces values Data a on all processes to a single value Data b on process of rank rk and communicator cc.\nOperation use in reduce is: MPI_Op op which can be: mpiMAX, mpiMIN, mpiSUM, mpiPROD, mpiLAND, mpiLOR, mpiLXOR, mpiBAND, mpiBXOR, mpiMAXLOC, mpiMINLOC.\nNote that, for all global operations, only int[int] and real[int] are data type take in account in FreeFEM.\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Algorithms & Optimization\n\t\t\tNext topic: PETSc and SLEPc \n\t\t\n\t","l":"documentation/parallelization.html"},"16":{"t":"Examples","p":"\n\t\t\n   \nExamples¶\n\nLinear problems¶\n\n\n\n\n\n\nFilename\nComments (preconditioners, numerical schemes)\n\n\n\ndiffusion-2d-PETSc.edp\nDistributed LU/Cholesky, domain decomposition and multigrid methods\n\ndiffusion-2d-PETSc-complex.edp\n\n\nheat-2d-PETSc.edp\nTransient diffusion equation, same as above\n\ndiffusion-periodic-2d-PETSc.edp\nPeriodic boundary conditions, multigrid methods\n\ndiffusion-periodic-balanced-2d-PETSc.edp\nBetter load balancing than above example\n\ndiffusion-substructuring-2d-PETSc.edp\nBalancing Domain Decomposition with Constraints\n\ndiffusion-3d-PETSc.edp\nThree-dimensional problem, domain decomposition and multigrid methods\n\ndiffusion-mg-2d-PETSc.edp\nGeometric non-nested multigrid methods\n\ndiffusion-mg-3d-PETSc.edp\nGeometric nested multigrid methods\n\nhelmholtz-2d-PETSc-complex.edp\nDomain decomposition methods with optimized boundary conditions\n\nhelmholtz-mg-2d-PETSc-complex.edp\nGeometric multigrid methods\n\nlaplace-RT-2d-PETSc.edp\nVectorial two-dimensional problem with a block preconditioner (fieldsplit)\n\nlaplace-adapt-3d-PETSc.edp\nThree-dimensional problem with h adaptivity, multigrid methods using Mmg\n\nlaplace-adapt-dist-3d-PETSc.edp\nThree-dimensional problem with fully-distributed h adaptivity using ParMmg\n\nlaplace-lagrange-PETSc.edp\nLaplace equation with constraints and a block preconditioner (fieldsplit)\n\nelasticity-2d-PETSc.edp\nVectorial problem, domain decomposition (GenEO) and multigrid methods\n\nelasticity-3d-PETSc.edp\n\n\nstokes-2d-PETSc.edp\nDistributed LU/Cholesky\n\nstokes-3d-PETSc.edp\n\n\nstokes-block-2d-PETSc.edp\nStokes equation defined as a block system with four matrices (fieldsplit)\n\nstokes-fieldsplit-2d-PETSc.edp\nBlock preconditioner (fieldsplit)\n\nstokes-fieldsplit-3d-PETSc.edp\n\n\noseen-2d-PETSc.edp\nOseen problem preconditioned by Pressure Convection–Diffusion (PCD)\n\nmaxwell-2d-PETSc.edp\nDirect LU/Cholesky\n\nmaxwell-3d-PETSc.edp\nMultigrid method\n\nmaxwell-mg-3d-PETSc-complex.edp\nTwo-grid preconditioner\n\nhelmholtz-3d-surf-PETSc-complex.edp\nBEM with hierarchical matrices from Htool on surfaces\n\nhelmholtz-3d-line-PETSc-complex.edp\nBEM with hierarchical matrices from Htool on lines\n\nhelmholtz-coupled-2d-PETSc-complex.edp\nFEM coupled with BEM in a MatNest using a block preconditioner (fieldsplit)\n\nPtAP-2d-PETSc.edp\nParallel interpolation on non-matching grids + P’ A P operation\n\nrestriction-2d-PETSc.edp\nCoupled problems with one being defined on a restriction of the mesh of the other\n\nbilaplace-2d-PETSc.edp\nBilaplacian using Morley finite element\n\n\n\n\n\nNonlinear problems¶\n\n\n\n\n\n\nFilename\nComments (preconditioners, numerical schemes)\n\n\n\nbratu-2d-PETSc.edp\n\n\nbratu-hpddm-2d-PETSc.edp\nGenEO with reused coarse spaces\n\nnewton-2d-PETSc.edp\n\n\nnewton-adaptmesh-2d-PETSc.edp\nNewton method and h adaptivity\n\nnewton-vi-2d-PETSc.edp\nNewton method and a variational inequality\n\nnewton-vi-adaptmesh-2d-PETSc.edp\nNewton method, h adaptivity, and a variational inequality\n\nelasticity-SNES-3d-PETSc.edp\nLinear elasiticty with a Newton method\n\nneo-Hookean-2d-PETSc.edp\nNonlinear elasticity\n\nnavier-stokes-2d-PETSc.edp\nSteady-state Navier–Stokes equation for linear stability analysis\n\nnatural-convection-fieldsplit-2d-PETSc.edp\nNewton method and h adaptivity\n\nvi-2d-PETSc.edp\nVariational inequalities\n\n\n\n\n\nTime steppers and optimizers¶\n\n\n\n\n\n\nFilename\nComments (preconditioners, numerical schemes)\n\n\n\nadvection-TS-2d-PETSc.edp\nImplicit and explicit schemes\n\nheat-TS-2d-PETSc.edp\n\n\nheat-TS-RHS-2d-PETSc.edp\n\n\nminimal-surface-Tao-2d-PETSc.edp\nMinimal surface problem\n\norego-Tao-PETSc.edp\n\n\ntoy-Tao-PETSc.edp\n\n\n\n\n\n\nEigenvalue problems¶\n\n\n\n\n\n\nFilename\nComments (preconditioners, numerical schemes)\n\n\n\nlaplace-2d-SLEPc.edp\n\n\nlaplace-spherical-harmonics-2d-SLEPc.edp\n\n\nlaplace-torus-2d-SLEPc.edp\n\n\nschrodinger-axial-well-2d-SLEPc.edp\n\n\nschrodinger-harmonic-oscillator-1d-SLEPc.edp\n\n\nschrodinger-harmonic-oscillator-2d-SLEPc.edp\n\n\nschrodinger-square-well-1d-SLEPc.edp\n\n\nlaplace-2d-SLEPc-complex.edp\n\n\nlaplace-beltrami-3d-surf-SLEPc.edp\nEigenvalue problem on a surface\n\nlaplace-beltrami-3d-line-SLEPc.edp\nEigenvalue problem on a curve\n\nnavier-stokes-2d-SLEPc-complex.edp\nLinear stability analysis of Navier–Stokes equations\n\nstokes-2d-SLEPc.edp\nInf-sup constant of Stokes equations\n\nhelmholtz-2d-SLEPc-complex.edp\nSVD of the discretized Helmholtz equation\n\nmf-2d-SLEPc.edp\nMatrix-free SVD with user-provided matrix–vector and matrix transpose–vector multiplications\n\nnonlinear-2d-SLEPc-complex.edp\nNonlinear eigenvalue problem Ax  =  sqrt(lambda)x\n\nblasius-stability-1d-SLEPc-complex.edp\nPolynomial eigenvalue problem (A2 lambda^2 x + A1 lambda + A0)x  =  0\n\n\n\n\n\nMiscellaneous¶\n\n\n\n\n\n\nFilename\nComments (preconditioners, numerical schemes)\n\n\n\ntranspose-solve-PETSc.edp\nSolving a transposed system\n\nSchur-complement-PETSc.edp\nComputing an exact Schur complement\n\nblock-PETSc.edp\n\n\nbuildRecursive.edp\nRecursive mesh partitioning (for geometric multigrid)\n\nwithPartitioning.edp\nConnectivity construction with a user-supplied partitioning\n\ncreatePartition.edp\nCreation of different partitions of unity using the same DD\n\nsave-load-Dmesh.edp\nSaving and loading a distributed mesh for restarting a computation\n\ntransfer.edp\nParallel interpolation of finite element functions\n\nreconstructDmesh.edp\nConstruction of a distributed mesh from sequential nonoverlapping meshes\n\ndistributed-parmmg.edp\nDistributed ParMmg interface for mesh adaptation\n\nredistributeDmesh.edp\nGather and scatter a Dmesh on different MPI communicators\n\nDMPlex-PETSc.edp\nLoad and partition a mesh using a DM in two and three dimensions\n\nfunction-PETSc.edp\nCustom plugin showing how to directly access PETSc in C++\n\nconvect.edp\nCalling the convert FreeFEM function on a distributed mesh\n\nMatLoad-PETSc.edp\nLoading a distributed matrix/vector with various formats\n\n\n\n\n\nReproducible science¶\n\n\n\n\n\n\nArticle\nSource code\n\n\n\nAugmented Lagrangian preconditioner for large-scale hydrodynamic stability analysis\nGitHub repository\n\nA multilevel Schwarz preconditioner based on a hierarchy of robust coarse spaces\nGitHub repository\n\nKSPHPDDM and PCHPDDM: extending PETSc with advanced Krylov methods and robust multilevel overlapping Schwarz preconditioners\nGitHub repository\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: PETSc and SLEPc\n\t\t\tNext topic: Plugins \n\t\t\n\t","l":"documentation/petsc/examples.html"},"17":{"t":"PETSc and SLEPc","p":"\n\t\t\n   \nPETSc and SLEPc¶\nFreeFEM is interfaced with PETSc and SLEPc which offer a wide range of sequential or parallel linear or nonlinear solvers, time steppers, optimizers, and eigensolvers. In particular, it gives access transparently (without much changes to user code) to: distributed and multithreaded direct solvers (PARDISO, MUMPS, SuperLU), multigrid solvers (hypre, GAMG), domain decomposition methods (block Jacobi, ASM, HPDDM). For a detailed introduction to these tools, interested readers are referred to the tutorial Introduction to FreeFEM with an emphasis on parallel computing.\n\nIn most of the scripts listed below, the following standard procedure is used.\nLoad an initial sequential mesh (in 2D or 3D).\nPartition the mesh and generate connectivity information according to the number of processes.\nProvide these information to PETSc so that subsequent computations may be done in a distributed fashion.\n\n\n\nCombining the power and flexibility of PETSc with the ease-of-use of FreeFEM may help design multiphysics solvers, e.g., for Navier–Stokes equations, advanced matrix-free discretizations, and such.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Parallelization\n\t\t\tNext topic: Examples \n\t\t\n\t","l":"documentation/petsc/index.html"},"18":{"t":"Plugins","p":"\n\t\t\n   \nPlugins¶\n\ngsl¶\nThe interface with gsl spline is available in FreeFEM, the seven kind of spline are\n\ngslinterpcspline: default type of spline\ngslinterpakima\ngslinterpsteffen\ngslinterplinear\ngslinterppolynomial\ngslinterpcsplineperiodic\ngslinterpakimaperiodic\n\nA brief wing example given all the syntax:\n 1 load \"gsl\"\n 2 \n 3 // Parameters\n 4 int n  =  10;\n 5 real[int, int] dspline(2,n+1); //data points to define the spline\n 6 for(int i  =  0; i < =  n; ++i){ //set data points\n 7    real xx  =  square(real(i)/n);\n 8    real yy  =  sin(xx*pi*2);\n 9    dspline(0, i)  =  xx;\n10    dspline(1, i)  =  yy;\n11 }\n12 \n13 // GSL splines\n14 gslspline spline1(gslinterpcspline, dspline); //define the spline1\n15 gslspline spline11(dspline); //define the spline11\n16 gslspline spline2(gslinterpsteffen, dspline); //define the spline2\n17 gslspline spline3(gslinterpcspline, dspline(0, :), dspline(1, :));\n18 gslspline spline33(dspline(0, :), dspline(1, :)); //define the spline3\n19 spline1  =  spline2; //copy spline2 in spline1\n20 \n21 real t  =  1.;\n22 real s1  =  spline1(t); //evaluate the function spline1 at t\n23 cout << \"spline1(t)  =  \" << s1 << endl;\n24 real ds1  =  spline1.d(t); //evaluate the derivative of function spline1 at t\n25 cout << \"spline1.d(t)  =  \" << ds1 << endl;\n26 real dds1  =  spline1.dd(t); //evaluate the second derivative of function spline1 at t\n27 cout << \"spline1.dd(t)  =  \" << dds1 << endl;\n\n\nThis can be usefull to build function from data value.\nThe list of all gsl functions and the FreeFEM equivalent is available in the Language references (same names without _).\n\n\nffrandom¶\nPlugin to linux random functions.\nThe range of the random generator is from \\(0\\) to \\((2^{31})-1\\).\n 1 load \"ffrandom\"\n 2 \n 3 srandomdev(); //set a true random seed\n 4 //warning: under window this command\n 5 //change the seed by randinit(random())) so all\n 6 //FreeFEM random function are changed\n 7 \n 8 int maxrang  =  2^31 - 1;\n 9 cout << \" max range \" << maxrang << endl;\n10 \n11 cout << random() << endl;\n12 cout << random() << endl;\n13 cout << random() << endl;\n14 \n15 srandom(10);\n16 cout << random() << endl;\n17 cout << random() << endl;\n18 cout << random() << endl;\n\n\n\n\nmmap / semaphore¶\nThe idea is just try to use Interprocess communication using POSIX Shared Memory in Linux.\nWe build a small library libff-mmap-semaphore.c and libff-mmap-semaphore.h to easily interface.\n\nmmap - allocate memory, or map files or devices into memory\nsemaphore - allow processes and threads to synchronize their actions\nA semaphore is an integer whose value is never allowed to fall below zero.\nTwo operations can be performed on semaphores: increment the semaphore value by one (sem_post); and decrement the semaphore value by one (sem_wait).\nIf the value of a semaphore is currently zero, then a sem_wait operation will block until the value becomes greater than zero.\n\n\nThe functions of library\nFirst the semaphore interface to make synchronization:\n\ntypedef struct FF_P_sem *ff_Psem; the pointer to data structure\nff_Psem ffsem_malloc(); malloc an empty data structure\nvoid ffsem_del(ff_Psem sem); clean and free the pointer\nvoid ffsem_destroy(ff_Psem sem); clean, close the data structure\nvoid ffsem_init0(ff_Psem sem); make a correct empty of the data structure\nvoid ffsem_init(ff_Psem sem,const char *nmm, int crea); create or use a new semaphore\nlong ffsem_post(ff_Psem sem); nlocked, the value of the semaphore is incremented, and all threads which are waiting on the semaphore are awakened\nlong ffsem_wait(ff_Psem sem); the semaphore referenced by sem is locked.\nWhen calling sem_wait(), if the semaphore’s value is zero, the calling thread will block until the lock is acquired or until the call is interrupted by a signal.\nAlternatively, the sem_trywait() function will fail if the semaphore is already locked, rather than blocking on the semaphore\n\nlong ffsem_trywait(ff_Psem p);\n\nSecondly, the mmap functions:\n\ntypedef struct FF_P_mmap *ff_Pmmap; the pointer to data structure\nff_Psem ffmmap_malloc(); malloc an empty data structure\nvoid ffmmap_del(ff_Pmmap p); clean and free the pointer\nvoid ffmmap_destroy(ff_Pmmap p); clean, close the data structure\nvoid ffmmap_init0(ff_Pmmap p); make a correct empty of the data structure\nlong ffmmap_msync(ff_Pmmap p, long off, long ln); call writes modified whole pages back to the filesystem and updates the file modification time.\nOnly those pages containing addr and len-1 succeeding locations will be examined.\nvoid ffmmap_init(ff_Pmmap p, const char *nmm, long len); allocate memory, or map files or devices into memory.\nlong ffmmap_read(ff_Pmmap p, void *t, size_t n, size_t off); read n bytes from the mmap at memory off in pointer t.\nlong ffmmap_write(ff_Pmmap p, void *t, size_t n, size_t off); write n bytes to the mmap at memory off in pointer t.\n\nThe FreeFEM corresponding functions:\n\nPmmap sharedata(filename, 1024); new type to store the mmap informations of name store in string filename with 1024 is the size the sharedata zone and file.\nPsemaphore smff(\"ff-slave\", creat); new type to store the semaphore of name ff-slave where creat is a boolean to create or use a existing semaphore.\nWait(sem) the semaphore referenced by sem is locked.\nWhen calling Wait(sem), if the semaphore’s value is zero, the calling thread will block until the lock is acquired or until the call is interrupted by a signal.\nAlternatively, the trywait(sem) function will fail if the semaphore is already locked, rather than blocking on the semaphore.\nPost(sem) the semaphore referenced by sem is unlocked, the value of the semaphore is incremented, and all threads which are waiting on the semaphore are awakened.\nRead(sharedata ,offset, data); read the variable data from the place offset in sharedata mmap.\nWrite(sharedata, offset, data); write the variable data at the place offset in sharedata mmap.\n\nThe full example:\nThe FFMaster.c file:\n 1 #include \"libff-mmap-semaphore.h\"\n 2 #include <unistd.h>\n 3 #include <stdlib.h>\n 4 #include <stdio.h>\n 5 ff_Psem sem_ff, sem_c; //the semaphore for mutex\n 6 \n 7 int main(int argc, const char ** argv)\n 8 {\n 9    int debug  =  0;\n10    ff_Pmmap shd;\n11    double cff, rff;\n12    long status;\n13    int i;\n14    if (argc > 1) debug  =  atoi(argv[1]);\n15    ff_mmap_sem_verb  =  debug;\n16 \n17    sem_ff  =  ffsem_malloc();\n18    sem_c  =  ffsem_malloc();\n19    shd  =  ffmmap_malloc();\n20 \n21    ffsem_init(sem_ff, \"ff-slave1\", 1);\n22    ffsem_init(sem_c, \"ff-master1\", 1);\n23    ffmmap_init(shd, \"shared-data\", 1024);\n24 \n25    status  =  1;\n26    ffmmap_write(shd, &status, sizeof(status), 8);\n27    ffmmap_msync(shd, 0, 32);\n28 \n29    char ff[1024];\n30    sprintf(ff, \"FreeFem++ FFSlave.edp -nw -ns -v %d&\", debug);\n31    system(ff); //lauch FF++ in batch no graphics\n32    if(debug) printf(\"cc: before wait\\n\");\n33 \n34    if(debug) printf(\"cc: before wait 0 ff\\n\");\n35    ffsem_wait(sem_ff);\n36 \n37    for (i  =  0; i < 10; ++i){\n38       printf(\" iter : %d \\n\", i);\n39       cff  =  10+i;\n40       ffmmap_write(shd, &cff, sizeof(cff), 0);\n41       ffsem_post(sem_c);\n42 \n43       if(debug) printf(\" cc: before wait 2\\n\");\n44       ffsem_wait(sem_ff);\n45       ffmmap_read(shd, &rff, sizeof(rff), 16);\n46       printf(\" iter  =  %d rff =  %f\\n\", i, rff);\n47    }\n48 \n49    status  =  0; //end\n50    ffmmap_write(shd, &status, sizeof(status), 8);\n51    ffsem_post(sem_c);\n52    printf(\"End Master \\n\");\n53    ffsem_wait(sem_ff);\n54    ffsem_del(sem_ff);\n55    ffsem_del(sem_c);\n56    ffmmap_del(shd);\n57    return 0;\n58 }\n\n\nThe FFSlave.edp file:\n 1 load \"ff-mmap-semaphore\"\n 2 \n 3 Psemaphore smff(\"ff-slave1\", 0);\n 4 Psemaphore smc(\"ff-master1\", 0);\n 5 Pmmap sharedata(\"shared-data\", 1024);\n 6 if (verbosity < 4) verbosity  =  0;\n 7 \n 8 // Mesh\n 9 mesh Th  =  square(10, 10);\n10 int[int] Lab  =  [1, 2, 3, 4];\n11 \n12 // Fespace\n13 fespace Vh(Th, P1);\n14 Vh u, v;\n15 \n16 // Macro\n17 macro grad(u) [dx(u), dy(u)] //\n18 \n19 int status  =  1;\n20 cout << \" FF status  =  \" << status << endl;\n21 real cff, rff;\n22 \n23 // Problem\n24 problem Pb (u, v)\n25     =  int2d(Th)(\n26         grad(u)'*grad(v)\n27    )\n28    - int2d(Th)(\n29         cff*v\n30    )\n31    + on(Lab, u = 0)\n32    ;\n33 \n34 if (verbosity > 9) cout << \" FF: before FF post\\n\";\n35 Post(smff); //unlock master end init\n36 \n37 while (1){\n38    if (verbosity > 9) cout << \" FF: before FF wait \\n\";\n39    Wait(smc); //wait from cint write ok\n40    Read(sharedata, 0, cff);\n41    Read(sharedata, 8, status);\n42 \n43    cout << \" After wait .. FF \" << cff << \" \" << status << endl;\n44    if(status < =  0) break;\n45 \n46    // Solve\n47    Pb;\n48    rff  =  int2d(Th)(u*u);\n49    cout << \" ** FF \" << cff << \" \" << rff << endl;\n50 \n51    // Write\n52    Write(sharedata, 16, rff);\n53    Post(smff); //unlock cc\n54 }\n55 \n56 Post(smff); //wait from cint\n57 cout << \" End FreeFEM \" << endl;\n\n\nTo test this example of coupling C program and FreeFEM script:\n1 cc -c libff-mmap-semaphore.c\n2 cc FFMaster.c -o FFMaster libff-mmap-semaphore.o -g -pthread\n3 ff-c++ -auto ff-mmap-semaphore.cpp\n4 ./FFMaster\n\n\nThe output:\n 1 len 1024 size 0\n 2 len 1024 size 1024\n 3 FF status  =  1\n 4 iter : 0\n 5 After wait .. FF 10 1\n 6 ** FF 10 0.161797\n 7 iter  =  0 rff =  0.161797\n 8 iter : 1\n 9 After wait .. FF 11 1\n10 ** FF 11 0.195774\n11 iter  =  1 rff =  0.195774\n12 iter : 2\n13 After wait .. FF 12 1\n14 ** FF 12 0.232987\n15 iter  =  2 rff =  0.232987\n16 iter : 3\n17 After wait .. FF 13 1\n18 ** FF 13 0.273436\n19 iter  =  3 rff =  0.273436\n20 iter : 4\n21 After wait .. FF 14 1\n22 ** FF 14 0.317121\n23 iter  =  4 rff =  0.317121\n24 iter : 5\n25 After wait .. FF 15 1\n26 ** FF 15 0.364042\n27 iter  =  5 rff =  0.364042\n28 iter : 6\n29 After wait .. FF 16 1\n30 ** FF 16 0.414199\n31 iter  =  6 rff =  0.414199\n32 iter : 7\n33 After wait .. FF 17 1\n34 ** FF 17 0.467592\n35 iter  =  7 rff =  0.467592\n36 iter : 8\n37 After wait .. FF 18 1\n38 ** FF 18 0.524221\n39 iter  =  8 rff =  0.524221\n40 iter : 9\n41 After wait .. FF 19 1\n42 ** FF 19 0.584086\n43 iter  =  9 rff =  0.584086\n44 End Master\n45 After wait .. FF 19 0\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Examples\n\t\t\tNext topic: Developers \n\t\t\n\t","l":"documentation/plugins.html"},"19":{"t":"Visualization","p":"\n\t\t\n   \nVisualization¶\nResults created by the finite element method can be a huge set of data, so it is very important to render them easy to grasp.\nThere are two ways of visualization in FreeFEM:\n\nOne, the default view, which supports the drawing of meshes, isovalues of real FE-functions, and of vector fields, all by the command plot (see Plot section below).\nFor publishing purpose, FreeFEM can store these plots as postscript files.\nAnother method is to use external tools, for example, gnuplot (see Gnuplot section, medit section, Paraview section, Matlab/Octave section) using the command system to launch them and/or to save the data in text files.\n\n\nPlot¶\nWith the command plot, meshes, isovalues of scalar functions, and vector fields can be displayed.\nThe parameters of the plot command can be meshes, real FE functions, arrays of 2 real FE functions, arrays of two double arrays, to plot respectively a mesh, a function, a vector field, or a curve defined by the two double arrays.\n\nNote\nThe length of an arrow is always bound to be in [5‰, 5%] of the screen size in order to see something.\n\nThe plot command parameters are listed in the Reference part.\nThe keyboard shortcuts are:\n\nenter tries to show plot\np previous plot (10 plots saved)\n? shows this help\n+,- zooms in/out around the cursor 3/2 times\n =  resets the view\nr refreshes plot\nup, down, left, right special keys to tanslate\n3 switches 3d/2d plot keys :\n\nz,Z focal zoom and zoom out\nH,h increases or decreases the Z scale of the plot\n\n\nmouse motion:\n\nleft button rotates\nright button zooms (ctrl+button on mac)\nright button +alt tanslates (alt+ctrl+button on mac)\n\n\na,A increases or decreases the arrow size\nB switches between showing the border meshes or not\ni,I updates or not: the min/max bound of the functions to the window\nn,N decreases or increases the number of iso value arrays\nb switches between black and white or color plotting\ng switches between grey or color plotting\nf switches between filling iso or iso line\nl switches between lighting or not\nv switches between show or not showing the numerical value of colors\nm switches between show or not showing the meshes\nw window dump in file ffglutXXXX.ppm\n* keep/drop viewpoint for next plot\nk complex data / change view type\nESC closes the graphics process before version 3.22, after no way to close\notherwise does nothing\n\nFor example:\n 1 real[int] xx(10), yy(10);\n 2 \n 3 mesh Th  =  square(5,5);\n 4 \n 5 fespace Vh(Th, P1);\n 6 \n 7 //plot scalar and vectorial FE function\n 8 Vh uh = x*x+y*y, vh = -y^2+x^2;\n 9 plot(Th, uh, [uh, vh], value = true, ps = \"three.eps\", wait = true);\n10 \n11 //zoom on box defined by the two corner points [0.1,0.2] and [0.5,0.6]\n12 plot(uh, [uh, vh], bb = [[0.1, 0.2], [0.5, 0.6]],\n13    wait = true, grey = true, fill = true, value = true, ps = \"threeg.eps\");\n14 \n15 //compute a cut\n16 for (int i  =  0; i < 10; i++){\n17    x  =  i/10.;\n18    y  =  i/10.;\n19    xx[i]  =  i;\n20    yy[i]  =  uh; //value of uh at point (i/10., i/10.)\n21 }\n22 plot([xx, yy], ps = \"likegnu.eps\", wait = true);\n\n\n\n\n\n\nFig. 112 Mesh, isovalue and vector¶\n\n\n\n\n\nFig. 113 Enlargement in grey of isovalue and vector¶\n\n\n\n\n\nFig. 114 Plots a cut of uh. Note that a refinement of the same can be obtained in combination with gnuplot¶\n\n\nPlot\nTo change the color table and to choose the value of iso line you can do:\n 1 // from: \\url{http://en.wikipedia.org/wiki/HSV_color_space}\n 2 // The HSV (Hue, Saturation, Value) model defines a color space\n 3 // in terms of three constituent components:\n 4 // HSV color space as a color wheel\n 5 // Hue, the color type (such as red, blue, or yellow):\n 6 // Ranges from 0-360 (but normalized to 0-100% in some applications, like here)\n 7 // Saturation, the \"vibrancy\" of the color: Ranges from 0-100%\n 8 // The lower the saturation of a color, the more \"grayness\" is present\n 9 // and the more faded the color will appear.\n10 // Value, the brightness of the color: Ranges from 0-100%\n11 \n12 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n13 \n14 fespace Vh(Th, P1);\n15 Vh uh = 2-x*x-y*y;\n16 \n17 real[int] colorhsv = [ // color hsv model\n18    4./6., 1 , 0.5, // dark blue\n19    4./6., 1 , 1, // blue\n20    5./6., 1 , 1, // magenta\n21    1, 1. , 1, // red\n22    1, 0.5 , 1 // light red\n23    ];\n24  real[int] viso(31);\n25 \n26  for (int i  =  0; i < viso.n; i++)\n27    viso[i]  =  i*0.1;\n28 \n29  plot(uh, viso = viso(0:viso.n-1), value = true, fill = true, wait = true, hsv = colorhsv);\n\n\n\n\n\n\nFig. 115 HSV color cylinder¶\n\n\n\n\n\nFig. 116 Isovalue with an other color table¶\n\n\nHSV\n\nNote\nSee HSV example for the complete script.\n\n\n\nLink with gnuplot¶\nExample Membrane shows how to generate a gnuplot from a FreeFEM file.\nHere is another technique which has the advantage of being online, i.e. one doesn’t need to quit FreeFEM to generate a gnuplot.\nHowever, this works only if gnuplot is installed, and only on an Unix-like computer.\nAdd to the previous example:\n1 {// file for gnuplot\n2    ofstream gnu(\"plot.gp\");\n3    for (int i  =  0; i < n; i++)\n4       gnu << xx[i] << \" \" << yy[i] << endl;\n5 }\n6 \n7 // to call gnuplot command and wait 5 second (due to the Unix command)\n8 // and make postscript plot\n9 exec(\"echo 'plot \\\"plot.gp\\\" w l \\n pause 5 \\n set term postscript \\n set output \\\"gnuplot.eps\\\" \\n replot \\n quit' | gnuplot\");\n\n\n\n\n\nFig. 117 Plots a cut of uh with gnuplot¶\n\n\n\nNote\nSee Plot example for the complete script.\n\n\n\nLink with medit¶\nAs said above, medit is a freeware display package by Pascal Frey using OpenGL. Then you may run the following example.\nNow medit software is included in FreeFEM under ffmedit name.\nThe medit command parameters are listed in the Reference part.\n\n\n\nFig. 118 :freefem:medit` plot¶\n\n\nWith version 3.2 or later\n1 load \"medit\"\n2 \n3 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n4 \n5 fespace Vh(Th, P1);\n6 Vh u = 2-x*x-y*y;\n7 \n8 medit(\"u\", Th, u);\n\n\nBefore:\n 1 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n 2 \n 3 fespace Vh(Th, P1);\n 4 Vh u = 2-x*x-y*y;\n 5 \n 6 savemesh(Th, \"u\", [x, y, u*.5]); //save u.points and u.faces file\n 7 // build a u.bb file for medit\n 8 {\n 9    ofstream file(\"u.bb\");\n10    file << \"2 1 1 \" << u[].n << \" 2 \\n\";\n11    for (int j  =  0; j < u[].n; j++)\n12       file << u[][j] << endl;\n13 }\n14 //call medit command\n15 exec(\"ffmedit u\");\n16 //clean files on unix-like OS\n17 exec(\"rm u.bb u.faces u.points\");\n\n\n\nNote\nSee Medit example for the complete script.\n\n\n\nLink with Paraview¶\nOne can also export mesh or results in the .vtk format in order to post-process data using Paraview.\n 1 load \"iovtk\"\n 2 \n 3 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n 4 \n 5 fespace Vh(Th, P1);\n 6 Vh u = 2-x*x-y*y;\n 7 \n 8 int[int] Order  =  [1];\n 9 string DataName  =  \"u\";\n10 savevtk(\"u.vtu\", Th, u, dataname = DataName, order = Order);\n\n\n\n\n\nFig. 119 Paraview plot¶\n\n\n\nWarning\nFinite element variables saved using paraview must be in P0 or P1\n\n\nNote\nSee Paraview example for the complete script.\n\n\n\nLink with Matlab© and Octave¶\nIn order to create a plot from a FreeFEM simulation in Octave and Matlab the mesh, the finite element space connectivity and the simulation data must be written to files:\n1 include \"ffmatlib.idp\"\n2 \n3 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n4 fespace Vh(Th, P1);\n5 Vh u = 2-x*x-y*y;\n6 \n7 savemesh(Th,\"export_mesh.msh\");\n8 ffSaveVh(Th,Vh,\"export_vh.txt\");\n9 ffSaveData(u,\"export_data.txt\");\n\n\nWithin Matlab or Octave the files can be plot with the ffmatlib library:\n1 addpath('path to ffmatlib');\n2 [p,b,t] = ffreadmesh('export_mesh.msh');\n3 vh = ffreaddata('export_vh.txt');\n4 u = ffreaddata('export_data.txt');\n5 ffpdeplot(p,b,t,'VhSeq',vh,'XYData',u,'ZStyle','continuous','Mesh','on');\n6 grid;\n\n\n\n\n\nFig. 120 Matlab / Octave plot¶\n\n\n\nNote\nFor more Matlab / Octave plot examples have a look at the tutorial section Matlab / Octave Examples or visit the ffmatlib library on github.\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Finite element\n\t\t\tNext topic: Algorithms & Optimization \n\t\t\n\t","l":"documentation/visualization.html"},"20":{"t":"Algorithms & Optimizations","p":"\n\t\t\n   \nAlgorithms & Optimizations¶\n\nAlgorithms¶\n  1 // Parameters\n  2 int nerr  =  0;\n  3 int debugJ  =  0;\n  4 int debugdJ  =  0;\n  5 real umax  =  0;\n  6 \n  7 // Algorithms tests\n  8 {\n  9     func bool stop (int iter, real[int] u, real[int] g){\n 10         cout << \" stop  =  \" << iter << \" \" << u.linfty << \" \" << g.linfty << endl;\n 11         return g.linfty < 1e-5 || iter > 15;\n 12     }\n 13     // minimization of J(u)  =  1./2 * sum (i+1) u_i^2 - b_i\n 14     real[int] b(10), u(10);\n 15 \n 16     //J\n 17     func real J (real[int] & u){\n 18         real s  =  0;\n 19         for (int i  =  0; i < u.n; i++)\n 20             s + =  (i+1)*u[i]*u[i]*0.5 - b[i]*u[i];\n 21         if (debugJ)\n 22             cout << \"J  =  \" << s << \", u  =  \" << u[0] << \" \" << u[1] << endl;\n 23         return s;\n 24     }\n 25 \n 26     //the gradiant of J (this is a affine version (the RHS is in)\n 27     func real[int] DJ (real[int] &u){\n 28         for (int i  =  0; i < u.n; i++)\n 29             u[i]  =  (i+1)*u[i];\n 30         if (debugdJ)\n 31             cout << \"dJ: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 32         u - =  b;\n 33         if (debugdJ)\n 34             cout << \"dJ-b: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 35         return u; //return of global variable ok\n 36     }\n 37 \n 38     //the gradiant of the bilinear part of J (the RHS is remove)\n 39     func real[int] DJ0 (real[int] &u){\n 40         for (int i  =  0 ; i < u.n; i++)\n 41             u[i]  =  (i+1)*u[i];\n 42         if(debugdJ)\n 43             cout << \"dJ0: u  = \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 44         return u; //return of global variable ok\n 45     }\n 46 \n 47     //erro calculation\n 48     func real error (real[int] & u, real[int] & b){\n 49         real s  =  0;\n 50         for (int i  =  0; i < u.n; i++)\n 51             s + =  abs((i+1)*u[i] - b[i]);\n 52         return s;\n 53     }\n 54 \n 55     func real[int] matId (real[int] &u){ return u; }\n 56 \n 57     int verb = 5; //verbosity\n 58     b  =  1.; //set right hand side\n 59     u  =  0.; //set initial gest\n 60 \n 61     LinearCG(DJ, u, eps = 1.e-6, nbiter = 20, precon = matId, verbosity = verb);\n 62     cout << \"LinearGC (Affine) : J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n 63     nerr + =  !(error(u,b) < 1e-5);\n 64     if(nerr) cout << \"sol: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 65 \n 66     b  =  1;\n 67     u  =  0;\n 68     LinearCG(DJ, u, eps = 1.e-15, nbiter = 20, precon = matId, verbosity = verb, stop = stop);\n 69     cout << \"LinearGC (Affine with stop) : J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n 70     nerr + =  !(error(u,b) < 1e-5);\n 71     if(nerr) cout << \"sol: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 72 \n 73     b  =  1;\n 74     u  =  0;\n 75     LinearCG(DJ0, u, b, eps = 1.e-6, nbiter = 20, precon = matId, verbosity = verb);\n 76     cout << \"LinearGC (Linear) : J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n 77     nerr + =  !(error(u,b) < 1e-5);\n 78     if(nerr) cout << \"sol: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 79 \n 80 \n 81     b  =  1;\n 82     u  =  0;\n 83     AffineGMRES(DJ, u, eps = 1.e-6, nbiter = 20, precon = matId, verbosity = verb);\n 84     cout << \"AffineGMRES (Affine) : J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n 85     nerr + =  !(error(u,b) < 1e-5);\n 86     if(nerr) cout << \"sol: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 87 \n 88     b = 1;\n 89     u = 0;\n 90     LinearGMRES(DJ0, u, b, eps = 1.e-6, nbiter = 20, precon = matId, verbosity = verb);\n 91     cout << \"LinearGMRES (Linear) : J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n 92     nerr + =  !(error(u,b) < 1e-5);\n 93     if(nerr) cout << \"sol: u  =  \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n 94 \n 95 \n 96     b = 1;\n 97     u = 0;\n 98     NLCG(DJ, u, eps = 1.e-6, nbiter = 20, precon = matId, verbosity = verb);\n 99     cout << \"NLCG: J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n100     nerr + =  !(error(u,b) < 1e-5);\n101     if(nerr) cout << \"sol: u  = \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n102 \n103 \n104     //warning: BFGS use a full matrix of size nxn (where n = u.n)\n105     b = 1;\n106     u = 2;\n107     BFGS(J, DJ, u, eps = 1.e-6, nbiter = 20, nbiterline = 20);\n108     cout << \"BFGS: J(u)  =  \" << J(u) << \", err  =  \" << error(u, b) << endl;\n109     assert(error(u,b) < 1e-5);\n110     if(nerr) cout << \"sol: u  = \" << u[0] << \" \" << u[1] << \" \" << u[2] << endl;\n111 \n112     assert(nerr =  = 0);\n113 }\n114 \n115 { // A real non linear test\n116     // Parameters\n117     real a  =  0.001;\n118     real eps  =  1e-6;\n119     //f(u)  =  a*u + u-ln(1+u), f'(u)  =  a+ u/(1+u), f''(u)  =  1/(1+u)^2\n120     func real f(real u) { return u*a+u-log(1+u); }\n121     func real df(real u) { return a+u/(1+u); }\n122     func real ddf(real u) { return 1/((1+u)*(1+u)); }\n123 \n124     // Mesh\n125     mesh Th  =  square(20, 20);\n126 \n127     // Fespace\n128     fespace Vh(Th, P1);\n129     Vh b  =  1;\n130     Vh u  =  0;\n131 \n132     fespace Ph(Th, P0);\n133     Ph alpha; //store df(|nabla u|^2)\n134 \n135     // The functionnal J\n136     //J(u)  =  1/2 int_Omega f(|nabla u|^2) - int_Omega u b\n137     func real J (real[int] & u){\n138         Vh w;\n139         w[]  =  u;\n140         real r  =  int2d(Th)(0.5*f(dx(w)*dx(w) + dy(w)*dy(w)) - b*w);\n141         cout << \"J(u)  =  \" << r << \" \" << u.min << \" \" << u.max << endl;\n142         return r;\n143     }\n144 \n145     // The gradiant of J\n146     func real[int] dJ (real[int] & u){\n147         Vh w;\n148         w[]  =  u;\n149         alpha  =  df(dx(w)*dx(w) + dy(w)*dy(w));\n150         varf au (uh, vh)\n151              =  int2d(Th)(\n152                   alpha*(dx(w)*dx(vh) + dy(w)*dy(vh))\n153                 - b*vh\n154             )\n155             + on(1, 2, 3, 4, uh = 0)\n156             ;\n157 \n158         u  =  au(0, Vh);\n159         return u; //warning: no return of local array\n160     }\n161 \n162     // Problem\n163     alpha  =  df(dx(u)*dx(u) + dy(u)*dy(u));\n164     varf alap (uh, vh)\n165          =  int2d(Th)(\n166               alpha*(dx(uh)*dx(vh) + dy(uh)*dy(vh))\n167         )\n168         + on(1, 2, 3, 4, uh = 0)\n169         ;\n170 \n171     varf amass(uh, vh)\n172          =  int2d(Th)(\n173               uh*vh\n174         )\n175         + on(1, 2, 3, 4, uh = 0)\n176         ;\n177 \n178     matrix Amass  =  amass(Vh, Vh, solver = CG);\n179     matrix Alap =  alap(Vh, Vh, solver = Cholesky, factorize = 1);\n180 \n181     // Preconditionner\n182     func real[int] C(real[int] & u){\n183         real[int] w  =  u;\n184         u  =  Alap^-1*w;\n185         return u; //warning: no return of local array variable\n186     }\n187 \n188     // Solve\n189     int conv = 0;\n190     for(int i  =  0; i < 20; i++){\n191         conv  =  NLCG(dJ, u[], nbiter = 10, precon = C, veps = eps, verbosity = 5);\n192         if (conv) break;\n193 \n194         alpha  =  df(dx(u)*dx(u) + dy(u)*dy(u));\n195         Alap  =  alap(Vh, Vh, solver = Cholesky, factorize = 1);\n196         cout << \"Restart with new preconditionner \" << conv << \", eps  = \" << eps << endl;\n197     }\n198 \n199     // Plot\n200     plot (u, wait = true, cmm = \"solution with NLCG\");\n201     umax  =  u[].max;\n202 \n203     Vh sss =  df(dx(u)*dx(u) + dy(u)*dy(u));\n204     plot (sss, fill = true, value = true);\n205 }\n206 \n207 assert(nerr =  = 0);\n\n\n\n\n\n\nFig. 215 Result u¶\n\n\n\n\n\nFig. 216 df(dx(u)*dx(u) + dy(u)*dy(u))¶\n\n\nAlgorithms\n\n\nCMAES variational inequality¶\n  1 load \"ff-cmaes\"\n  2 \n  3 // Parameters\n  4 int NN  =  7;\n  5 func f1  =  1.;\n  6 func f2  =  -1.;\n  7 func g1  =  0.;\n  8 func g2  =  0.1;\n  9 int iter  =  0;\n 10 int nadapt  =  1;\n 11 real starttol  =  1e-10;\n 12 real bctol  =  6.e-12;\n 13 real pena  =  1000.;\n 14 \n 15 // Mesh\n 16 mesh Th  =  square(NN, NN);\n 17 \n 18 // Fespace\n 19 fespace Vh(Th, P1);\n 20 Vh ou1, ou2;\n 21 \n 22 // Mesh adaptation loops\n 23 for (int al  =  0; al < nadapt; ++al){\n 24     // Problem\n 25     varf BVF (v, w)\n 26          =  int2d(Th)(\n 27               0.5*dx(v)*dx(w)\n 28             + 0.5*dy(v)*dy(w)\n 29         )\n 30         ;\n 31     varf LVF1 (v, w)  =  int2d(Th)(f1*w);\n 32     varf LVF2 (v, w)  =  int2d(Th)(f2*w);\n 33 \n 34     matrix A  =   BVF(Vh, Vh);\n 35     real[int] b1  =  LVF1(0, Vh);\n 36     real[int] b2  =  LVF2(0, Vh);\n 37 \n 38     varf Vbord (v, w)  =  on(1, 2, 3, 4, v = 1);\n 39 \n 40     Vh In, Bord;\n 41     Bord[]  =  Vbord(0, Vh, tgv = 1);\n 42     In[]  =  Bord[] ? 0:1;\n 43     Vh gh1  =  Bord*g1;\n 44     Vh gh2  =  Bord*g2;\n 45 \n 46     // Function which creates a vector of the search space type from\n 47     // two finite element functions\n 48     func int FEFToSSP (real[int] &fef1, real[int] &fef2, real[int] &ssp){\n 49         int kX  =  0;\n 50         for (int i  =  0; i < Vh.ndof; ++i){\n 51             if (In[][i]){\n 52                 ssp[kX]  =  fef1[i];\n 53                 ssp[kX+In[].sum]  =  fef2[i];\n 54                 ++kX;\n 55             }\n 56         }\n 57         return 1;\n 58     }\n 59 \n 60     // Splits a vector from the search space and fills\n 61     // two finite element functions with it\n 62     func int SSPToFEF (real[int] &fef1, real[int] &fef2, real[int] &ssp){\n 63         int kX  =  0;\n 64         for (int i  =  0; i < Vh.ndof; ++i){\n 65             if (In[][i]){\n 66                 fef1[i]  =  ssp[kX];\n 67                 fef2[i]  =  ssp[kX+In[].sum];\n 68                 ++kX;\n 69             }\n 70             else{\n 71                 fef1[i]  =  gh1[][i];\n 72                 fef2[i]  =  gh2[][i];\n 73             }\n 74         }\n 75         return 1;\n 76     }\n 77 \n 78     func real IneqC (real[int] &X){\n 79         real[int] constraints(In[].sum);\n 80         for (int i  =  0; i < In[].sum; ++i){\n 81             constraints[i]  =  X[i] - X[i+In[].sum];\n 82             constraints[i]  =  constraints[i] < =  0 ? 0. : constraints[i];\n 83         }\n 84         return constraints.l2;\n 85     }\n 86 \n 87     func real J (real[int] &X){\n 88         Vh u1, u2;\n 89         SSPToFEF(u1[], u2[], X);\n 90         iter++;\n 91         real[int] Au1  =  A*u1[], Au2  =  A*u2[];\n 92         Au1 - =  b1;\n 93         Au2 - =  b2;\n 94         real val  =  u1[]'*Au1 + u2[]'*Au2;\n 95         val + =   pena * IneqC(X);\n 96         if (iter%200  =  =  199)\n 97             plot(u1, u2, nbiso = 30, fill = 1, dim = 3, cmm = \"adapt level \"+al+\" - iteration \"+iter+\" - J  =  \"+val, value = 1);\n 98         return val ;\n 99     }\n100 \n101     // Solve\n102     real[int] start(2*In[].sum);\n103 \n104     if (al  =  =  0){\n105         start(0:In[].sum-1)  =  0.;\n106         start(In[].sum:2*In[].sum-1)  =  0.1;\n107     }\n108     else\n109         FEFToSSP(ou1[], ou2[], start);\n110 \n111     real mini  =  cmaes(J, start, stopMaxFunEval = 10000*(al+1), stopTolX = 1.e-3/(10*(al+1)), initialStdDev = (0.025/(pow(100.,al))));\n112     Vh best1, best2;\n113     SSPToFEF(best1[], best2[], start);\n114 \n115     // Mesh adaptation\n116     Th  =  adaptmesh(Th, best1, best2);\n117     ou1  =  best1;\n118     ou2  =  best2;\n119 }\n\n\n\n\n\nFig. 217 Results¶\n\n\n\n\nIPOPT minimal surface & volume¶\n  1 load \"msh3\";\n  2 load \"medit\";\n  3 load \"ff-Ipopt\";\n  4 \n  5 // Parameters\n  6 int nadapt  =  3;\n  7 real alpha  =  0.9;\n  8 int np  =  30;\n  9 real regtest;\n 10 int shapeswitch  =  1;\n 11 real sigma  =  2*pi/40.;\n 12 real treshold  =  0.1;\n 13 real e  =  0.1;\n 14 real r0  =  0.25;\n 15 real rr  =  2-r0;\n 16 real E  =  1./(e*e);\n 17 real RR  =  1./(rr*rr);\n 18 \n 19 // Mesh\n 20 mesh Th  =  square(2*np, np, [2*pi*x, pi*y]);\n 21 \n 22 // Fespace\n 23 fespace Vh(Th, P1, periodic = [[2, y], [4, y]]);\n 24 //Initial shape definition\n 25 //outside of the mesh adaptation loop to initialize with the previous optimial shape found on further iterations\n 26 Vh startshape  =  5;\n 27 Vh uz  =  1., lz  =  1.;\n 28 \n 29 // Mesh adaptation loop\n 30 real[int] lm  =  [1];\n 31 for(int kkk  =  0; kkk < nadapt; ++kkk){\n 32     int iter = 0;\n 33     func sin2  =  square(sin(y));\n 34 \n 35     // A function which transform Th in 3d mesh (r = rho)\n 36     //a point (theta,phi) of Th becomes ( r(theta,phi)*cos(theta)*sin(phi) , r(theta,phi)*sin(theta)*sin(phi) , r(theta,phi)*cos(phi) )\n 37     //then displays the resulting mesh with medit\n 38     func int Plot3D (real[int] &rho, string cmm, bool ffplot){\n 39         Vh rhoo;\n 40         rhoo[]  =  rho;\n 41         //mesh sTh  =  square(np, np/2, [2*pi*x, pi*y]);\n 42         //fespace sVh(sTh, P1);\n 43         //Vh rhoplot  =  rhoo;\n 44         try{\n 45             mesh3 Sphere  =  movemesh23(Th, transfo = [rhoo(x,y)*cos(x)*sin(y), rhoo(x,y)*sin(x)*sin(y), rhoo(x,y)*cos(y)]);\n 46             if(ffplot)\n 47                 plot(Sphere);\n 48             else\n 49                 medit(cmm, Sphere);\n 50         }\n 51         catch(...){\n 52             cout << \"PLOT ERROR\" << endl;\n 53         }\n 54         return 1;\n 55     }\n 56 \n 57     // Surface computation\n 58     //Maybe is it possible to use movemesh23 to have the surface function less complicated\n 59     //However, it would not simplify the gradient and the hessian\n 60     func real Area (real[int] &X){\n 61         Vh rho;\n 62         rho[]  =  X;\n 63         Vh rho2  =  square(rho);\n 64         Vh rho4  =  square(rho2);\n 65         real res  =  int2d(Th)(sqrt(rho4*sin2 + rho2*square(dx(rho)) + rho2*sin2*square(dy(rho))));\n 66         ++iter;\n 67         if(1)\n 68             plot(rho, value = true, fill = true, cmm = \"rho(theta,phi) on [0,2pi]x[0,pi] - S = \"+res, dim = 3);\n 69         else\n 70             Plot3D(rho[], \"shape_evolution\", 1);\n 71         return res;\n 72     }\n 73 \n 74     func real[int] GradArea (real[int] &X){\n 75         Vh rho, rho2;\n 76         rho[]  =  X;\n 77         rho2[]  =  square(X);\n 78         Vh sqrtPsi, alpha;\n 79         {\n 80             Vh dxrho2  =  dx(rho)*dx(rho), dyrho2  =  dy(rho)*dy(rho);\n 81             sqrtPsi  =  sqrt(rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2);\n 82             alpha  =  2.*rho2*rho*sin2 + rho*dxrho2 + rho*dyrho2*sin2;\n 83         }\n 84         varf dArea (u, v)\n 85              =  int2d(Th)(\n 86                 1./sqrtPsi * (alpha*v + rho2*dx(rho)*dx(v) + rho2*dy(rho)*sin2*dy(v))\n 87             )\n 88             ;\n 89 \n 90         real[int] grad  =  dArea(0, Vh);\n 91         return grad;\n 92     }\n 93 \n 94     matrix hessianA;\n 95     func matrix HessianArea (real[int] &X){\n 96         Vh rho, rho2;\n 97         rho[]  =  X;\n 98         rho2  =  square(rho);\n 99         Vh sqrtPsi, sqrtPsi3, C00, C01, C02, C11, C12, C22, A;\n100         {\n101             Vh C0, C1, C2;\n102             Vh dxrho2  =  dx(rho)*dx(rho), dyrho2  =  dy(rho)*dy(rho);\n103             sqrtPsi  =  sqrt( rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2);\n104             sqrtPsi3  =  (rho2*rho2*sin2 + rho2*dxrho2 + rho2*dyrho2*sin2)*sqrtPsi;\n105             C0  =  2*rho2*rho*sin2 + rho*dxrho2 + rho*dyrho2*sin2;\n106             C1  =  rho2*dx(rho);\n107             C2  =  rho2*sin2*dy(rho);\n108             C00  =  square(C0);\n109             C01  =  C0*C1;\n110             C02  =  C0*C2;\n111             C11  =  square(C1);\n112             C12  =  C1*C2;\n113             C22  =  square(C2);\n114             A  =  6.*rho2*sin2 + dxrho2 + dyrho2*sin2;\n115         }\n116         varf d2Area (w, v)\n117              = int2d(Th)(\n118                 1./sqrtPsi * (\n119                       A*w*v\n120                     + 2*rho*dx(rho)*dx(w)*v\n121                     + 2*rho*dx(rho)*w*dx(v)\n122                     + 2*rho*dy(rho)*sin2*dy(w)*v\n123                     + 2*rho*dy(rho)*sin2*w*dy(v)\n124                     + rho2*dx(w)*dx(v)\n125                     + rho2*sin2*dy(w)*dy(v)\n126                 )\n127                 + 1./sqrtPsi3 * (\n128                       C00*w*v\n129                     + C01*dx(w)*v\n130                     + C01*w*dx(v)\n131                     + C02*dy(w)*v\n132                     + C02*w*dy(v)\n133                     + C11*dx(w)*dx(v)\n134                     + C12*dx(w)*dy(v)\n135                     + C12*dy(w)*dx(v)\n136                     + C22*dy(w)*dy(v)\n137                 )\n138             )\n139             ;\n140         hessianA  =  d2Area(Vh, Vh);\n141         return hessianA;\n142     }\n143 \n144     // Volume computation\n145     func real Volume (real[int] &X){\n146         Vh rho;\n147         rho[]  =  X;\n148         Vh rho3  =  rho*rho*rho;\n149         real res  =  1./3.*int2d(Th)(rho3*sin(y));\n150         return res;\n151     }\n152 \n153     func real[int] GradVolume (real[int] &X){\n154         Vh rho;\n155         rho[]  =  X;\n156         varf dVolume(u, v)  =  int2d(Th)(rho*rho*sin(y)*v);\n157         real[int] grad  =  dVolume(0, Vh);\n158         return grad;\n159     }\n160     matrix hessianV;\n161     func matrix HessianVolume(real[int] &X){\n162         Vh rho;\n163         rho[]  =  X;\n164         varf d2Volume(w, v)  =  int2d(Th)(2*rho*sin(y)*v*w);\n165         hessianV  =  d2Volume(Vh, Vh);\n166         return hessianV;\n167     }\n168 \n169     //if we want to use the volume as a constraint function\n170     //we must wrap it in some freefem functions returning the appropriate type\n171     //The lagrangian hessian also have to be wrapped since the Volume is not linear with\n172     //respect to rho, it will constribbute to the hessian.\n173     func real[int] ipVolume (real[int] &X){ real[int] vol  =  [Volume(X)]; return vol; }\n174     matrix mdV;\n175     func matrix ipGradVolume (real[int] &X) { real[int,int] dvol(1,Vh.ndof); dvol(0,:)  =  GradVolume(X); mdV  =  dvol; return mdV; }\n176     matrix HLagrangian;\n177     func matrix ipHessianLag (real[int] &X, real objfact, real[int] &lambda){\n178         HLagrangian  =  objfact*HessianArea(X) + lambda[0]*HessianVolume(X);\n179         return HLagrangian;\n180     }\n181 \n182     //building struct for GradVolume\n183     int[int] gvi(Vh.ndof), gvj = 0:Vh.ndof-1;\n184     gvi  =  0;\n185 \n186     Vh rc  =  startshape; //the starting value\n187     Vh ub  =  1.e19; //bounds definition\n188     Vh lb  =  0;\n189 \n190     func real Gaussian (real X, real Y, real theta, real phi){\n191         real deltax2  =  square((X-theta)*sin(Y)), deltay2  =  square(Y-phi);\n192         return exp(-0.5 * (deltax2 + deltay2) / (sigma*sigma));\n193     }\n194 \n195     func disc1  =  sqrt(1./(RR+(E-RR)*cos(y)*cos(y)))*(1+0.1*cos(7*x));\n196     func disc2  =  sqrt(1./(RR+(E-RR)*cos(x)*cos(x)*sin2));\n197 \n198     if(1){\n199         lb  =  r0;\n200         for (int q  =  0; q < 5; ++q){\n201             func f  =  rr*Gaussian(x, y, 2*q*pi/5., pi/3.);\n202             func g  =  rr*Gaussian(x, y, 2*q*pi/5.+pi/5., 2.*pi/3.);\n203             lb  =  max(max(lb, f), g);\n204         }\n205         lb  =  max(lb, rr*Gaussian(x, y, 2*pi, pi/3));\n206     }\n207     lb  =  max(lb, max(disc1, disc2));\n208     real Vobj  =  Volume(lb[]);\n209     real Vnvc  =  4./3.*pi*pow(lb[].linfty,3);\n210 \n211     if(1)\n212         Plot3D(lb[], \"object_inside\", 1);\n213     real[int] clb  =  0., cub  =  [(1-alpha)*Vobj + alpha*Vnvc];\n214 \n215     // Call IPOPT\n216     int res  =  IPOPT(Area, GradArea, ipHessianLag, ipVolume, ipGradVolume,\n217             rc[], ub = ub[], lb = lb[], clb = clb, cub = cub, checkindex = 1, maxiter = kkk<nadapt-1 ? 40:150,\n218             warmstart = kkk, lm = lm, uz = uz[], lz = lz[], tol = 0.00001, structjacc = [gvi,gvj]);\n219     cout << \"IPOPT: res  = \" << res << endl ;\n220 \n221     // Plot\n222     Plot3D(rc[], \"Shape_at_\"+kkk, 1);\n223     Plot3D(GradArea(rc[]), \"ShapeGradient\", 1);\n224 \n225     // Mesh adaptation\n226     if (kkk < nadapt-1){\n227         Th  =  adaptmesh(Th, rc*cos(x)*sin(y), rc*sin(x)*sin(y), rc*cos(y),\n228             nbvx = 50000, periodic = [[2, y], [4, y]]);\n229         plot(Th, wait = true);\n230         startshape  =  rc;\n231         uz  =  uz;\n232         lz  =  lz;\n233     }\n234 \n235     regtest  =  rc[]'*rc[];\n236 }\n\n\n\n\n\nFig. 218 Mesh¶\n\n\n\n\nCMAES MPI variational inequality¶\nCommand:\n1 ff-mpirun -np 4 CMAESMPIVariationalInequality.edp -glut ffglut\n\n\n  1 load \"mpi-cmaes\"\n  2 \n  3 // Parameters\n  4 int NN  =  10;\n  5 func f1  =  1.;\n  6 func f2  =  -1.;\n  7 func g1  =  0.;\n  8 func g2  =  0.1;\n  9 int iter  =  0;\n 10 int nadapt  =  1;\n 11 real starttol  =  1e-10;\n 12 real bctol  =  6.e-12;\n 13 real pena  =  1000;\n 14 \n 15 // Mesh\n 16 mesh Th  =  square(NN, NN);\n 17 \n 18 // Fespace\n 19 fespace Vh(Th, P1);\n 20 Vh ou1, ou2;\n 21 \n 22 // Mehs adaptation loop\n 23 for (int al  =  0; al < nadapt; ++al){\n 24     // Problem\n 25     varf BVF (v, w)\n 26          =  int2d(Th)(\n 27               0.5*dx(v)*dx(w)\n 28             + 0.5*dy(v)*dy(w)\n 29         )\n 30         ;\n 31     varf LVF1 (v, w)  =  int2d(Th)(f1*w);\n 32     varf LVF2 (v, w)  =  int2d(Th)(f2*w);\n 33     matrix A  =  BVF(Vh, Vh);\n 34     real[int] b1  =  LVF1(0, Vh);\n 35     real[int] b2  =  LVF2(0, Vh);\n 36 \n 37     varf Vbord (v, w)  =  on(1, 2, 3, 4, v = 1);\n 38 \n 39     Vh In, Bord;\n 40     Bord[]  =  Vbord(0, Vh, tgv = 1);\n 41     In[]  =  Bord[] ? 0:1;\n 42     Vh gh1  =  Bord*g1, gh2  =  Bord*g2;\n 43 \n 44     //Function which create a vector of the search space type from\n 45     //two finite element functions\n 46     func int FEFToSSP (real[int] &fef1, real[int] &fef2, real[int] &ssp){\n 47         int kX  =  0;\n 48         for (int i  =  0; i < Vh.ndof; ++i){\n 49             if (In[][i]){\n 50                 ssp[kX]  =  fef1[i];\n 51                 ssp[kX+In[].sum]  =  fef2[i];\n 52                 ++kX;\n 53             }\n 54         }\n 55         return 1;\n 56     }\n 57 \n 58     //Function spliting a vector from the search space and fills\n 59     //two finite element functions with it\n 60     func int SSPToFEF (real[int] &fef1, real[int] &fef2, real[int] &ssp){\n 61         int kX  =  0;\n 62         for (int i  =  0; i < Vh.ndof; ++i){\n 63             if (In[][i]){\n 64                 fef1[i]  =  ssp[kX];\n 65                 fef2[i]  =  ssp[kX+In[].sum];\n 66                 ++kX;\n 67             }\n 68             else{\n 69                 fef1[i]  =  gh1[][i];\n 70                 fef2[i]  =  gh2[][i];\n 71             }\n 72         }\n 73         return 1;\n 74     }\n 75 \n 76     func real IneqC (real[int] &X){\n 77         real[int] constraints(In[].sum);\n 78         for (int i  =  0; i < In[].sum; ++i){\n 79             constraints[i]  =  X[i] - X[i+In[].sum];\n 80             constraints[i]  =  constraints[i] < =  0 ? 0. : constraints[i];\n 81         }\n 82         return constraints.l2;\n 83     }\n 84 \n 85     func real J (real[int] &X){\n 86         Vh u1, u2;\n 87         SSPToFEF(u1[], u2[], X);\n 88         iter++;\n 89         real[int] Au1  =  A*u1[], Au2  =  A*u2[];\n 90         Au1 - =  b1;\n 91         Au2 - =  b2;\n 92         real val  =  u1[]'*Au1 + u2[]'*Au2;\n 93         val + =   pena * IneqC(X);\n 94         plot(u1, u2, nbiso = 30, fill = 1, dim = 3, cmm = \"adapt level \"+al+\" - iteration \"+iter+\" - J  =  \"+val, value = 1);\n 95         return val ;\n 96     }\n 97 \n 98     // Solve\n 99     real[int] start(2*In[].sum);\n100 \n101     if (al =  = 0){\n102         start(0:In[].sum-1)  =  0.;\n103         start(In[].sum:2*In[].sum-1)  =  0.1;\n104     }\n105     else\n106         FEFToSSP(ou1[], ou2[], start);\n107 \n108     real mini  =  cmaesMPI(J, start, stopMaxFunEval = 10000*(al+1), stopTolX = 1.e-4/(10*(al+1)), initialStdDev = (0.025/(pow(100.,al))));\n109     Vh best1, best2;\n110     SSPToFEF(best1[], best2[], start);\n111 \n112     // Mesh adaptation\n113     Th  =  adaptmesh(Th, best1, best2);\n114     ou1  =  best1;\n115     ou2  =  best2;\n116 }\n\n\n\n\n\nFig. 219 Result¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Visualization\n\t\t\tNext topic: Parallelization \n\t\t\n\t","l":"examples/algorithms-and-optimizations.html"},"21":{"t":"Developers","p":"\n\t\t\n   \nDevelopers¶\n\nFFT¶\n 1 load \"dfft\"\n 2 \n 3 // Parameters\n 4 int nx  =  32;\n 5 real ny  =  16;\n 6 real N  =  nx*ny;\n 7 func f1  =  cos(2*x*2*pi)*cos(3*y*2*pi);\n 8 \n 9 // Mesh\n10 //warning: the fourier space is not exactly the unit square due to periodic condition\n11 mesh Th  =  square(nx-1, ny-1, [(nx-1)*x/nx, (ny-1)*y/ny]);\n12 //warning: the numbering of the vertices (x,y) is\n13 //given by i  =  x/nx + nx*y/ny\n14 \n15 // Fespace\n16 fespace Vh(Th,P1);\n17 Vh<complex> u  =  f1, v;\n18 Vh w  =  f1;\n19 Vh ur, ui;\n20 \n21 // FFT\n22 //in dfft the matrix n, m is in row-major order and array n, m is\n23 //store j + m*i (the transpose of the square numbering)\n24 v[]  =  dfft(u[], ny, -1);\n25 u[]  =  dfft(v[], ny, +1);\n26 cout << \"||u||_\\infty \" << u[].linfty << endl;\n27 \n28 u[] * =  1./N;\n29 cout << \"||u||_\\infty \" << u[].linfty << endl;\n30 \n31 ur  =  real(u);\n32 \n33 // Plot\n34 plot(w, wait = 1, value = 1, cmm = \"w\");\n35 plot(ur, wait = 1, value = 1, cmm = \"u\");\n36 v  =  w - u;\n37 cout << \"diff  =  \" << v[].max << \" \" << v[].min << endl;\n38 assert( norm(v[].max) < 1e-10 && norm(v[].min) < 1e-10);\n39 \n40 // Other example\n41 //FFT Lapacian\n42 //-\\Delta u  =  f with biperiodic condition\n43 func f  =  cos(3*2*pi*x)*cos(2*2*pi*y);\n44 func ue  =  (1./(square(2*pi)*13.))*cos(3*2*pi*x)*cos(2*2*pi*y); //the exact solution\n45 Vh<complex> ff  =  f;\n46 Vh<complex> fhat;\n47 Vh<complex> wij;\n48 \n49 // FFT\n50 fhat[]  =  dfft(ff[],ny,-1);\n51 \n52 //warning in fact we take mode between -nx/2, nx/2 and -ny/2, ny/2\n53 //thanks to the operator ?:\n54 wij  =  square(2.*pi)*(square(( x<0.5?x*nx:(x-1)*nx)) + square((y<0.5?y*ny:(y-1)*ny)));\n55 wij[][0]  =  1e-5; //to remove div / 0\n56 fhat[]  =  fhat[] ./ wij[];\n57 u[]  =  dfft(fhat[], ny, 1);\n58 u[] / =  complex(N);\n59 ur  =  real(u); //the solution\n60 w  =  real(ue); //the exact solution\n61 \n62 // Plot\n63 plot(w, ur, value = 1, cmm = \"ue\", wait = 1);\n64 \n65 // Error\n66 w[] - =  ur[];\n67 real err  =  abs(w[].max) + abs(w[].min);\n68 cout << \"err  =  \" << err << endl;\n69 assert(err < 1e-6);\n70 \n71 fftwplan p1  =  plandfft(u[], v[], ny, -1);\n72 fftwplan p2  =  plandfft(u[], v[], ny, 1);\n73 real ccc  =  square(2.*pi);\n74 cout << \"ny  =  \" << ny << endl;\n75 map(wij[], ny, ccc*(x*x+y*y));\n76 wij[][0]  =  1e-5;\n77 plot(wij, cmm = \"wij\");\n\n\n\n\nComplex¶\n 1 real a  =  2.45, b  =  5.33;\n 2 complex z1  =  a + b*1i, z2  =  a + sqrt(2.)*1i;\n 3 \n 4 func string pc(complex z){\n 5     string r  =  \"(\" + real(z);\n 6     if (imag(z) > =  0) r  =  r + \"+\";\n 7     return r + imag(z) + \"i)\";\n 8 }\n 9 \n10 func string toPolar(complex z){\n11     return \"\";//abs(z) + \"*(cos(\" + arg(z) + \")+i*sin(\" + arg(z) + \"))\";\n12 }\n13 \n14 cout << \"Standard output of the complex \" << pc(z1) << \" is the pair: \" << z1 << endl;\n15 cout << pc(z1) << \" + \" << pc(z2) << \"  =  \" << pc(z1+z2) << endl;\n16 cout << pc(z1) << \" - \" << pc(z2) << \"  =  \" << pc(z1-z2) << endl;\n17 cout << pc(z1) << \" * \" << pc(z2) << \"  =  \" << pc(z1*z2) << endl;\n18 cout << pc(z1) << \" / \" << pc(z2) << \"  =  \" << pc(z1/z2) << endl;\n19 cout << \"Real part of \" << pc(z1) << \"  =  \" << real(z1) << endl;\n20 cout << \"Imaginary part of \" << pc(z1) << \"  =  \" << imag(z1) << endl;\n21 cout << \"abs(\" << pc(z1) << \")  =  \" << abs(z1) << endl;\n22 cout << \"Polar coordinates of \" << pc(z2) << \"  =  \" << toPolar(z2) << endl;\n23 cout << \"de Moivre formula: \" << pc(z2) << \"^3  =  \" << toPolar(z2^3) << endl;\n24 cout << \" and polar(\" << abs(z2) << \", \" << arg(z2) << \")  =  \" << pc(polar(abs(z2), arg(z2))) << endl;\n25 cout << \"Conjugate of \" <<pc(z2) << \"  =  \" << pc(conj(z2)) <<endl;\n26 cout << pc(z1) << \" ^ \" << pc(z2) << \"  =  \" << pc(z1^z2) << endl;\n\n\nOutput of this script is:\n 1 Standard output of the complex (2.45+5.33i) is the pair: (2.45,5.33)\n 2 (2.45+5.33i) + (2.45+1.41421i)  =  (4.9+6.74421i)\n 3 (2.45+5.33i) - (2.45+1.41421i)  =  (0+3.91579i)\n 4 (2.45+5.33i) * (2.45+1.41421i)  =  (-1.53526+16.5233i)\n 5 (2.45+5.33i) / (2.45+1.41421i)  =  (1.692+1.19883i)\n 6 Real part of (2.45+5.33i)  =  2.45\n 7 Imaginary part of (2.45+5.33i)  =  5.33\n 8 abs((2.45+5.33i))  =  5.86612\n 9 Polar coordinates of (2.45+1.41421i)  = \n10 de Moivre formula: (2.45+1.41421i)^3  = \n11  and polar(2.82887, 0.523509)  =  (2.45+1.41421i)\n12 Conjugate of (2.45+1.41421i)  =  (2.45-1.41421i)\n13 (2.45+5.33i) ^ (2.45+1.41421i)  =  (8.37072-12.7078i)\n\n\n\n\nString¶\n 1 // Concatenation\n 2 string tt  =  \"toto1\" + 1 + \" -- 77\";\n 3 \n 4 // Append\n 5 string t1  =  \"0123456789\";\n 6 t1(4:3)  =  \"abcdefghijk-\";\n 7 \n 8 // Sub string\n 9 string t55  =  t1(4:14);\n10 \n11 cout << \"tt  =  \" << tt << endl;\n12 \n13 cout << \"t1  =  \" << t1 << endl;\n14 cout << \"t1.find(abc)  =  \" << t1.find(\"abc\") << endl;\n15 cout << \"t1.rfind(abc)  =  \" << t1.rfind(\"abc\") << endl;\n16 cout << \"t1.find(abc, 10)  =  \" << t1.find(\"abc\",10) << endl;\n17 cout << \"t1.ffind(abc, 10)  =  \" << t1.rfind(\"abc\",10) << endl;\n18 cout << \"t1.length  =  \" << t1.length << endl;\n19 \n20 cout << \"t55  =  \" << t55 << endl;\n\n\nThe output of this script is:\n1 tt  =  toto11 -- 77\n2 t1  =  0123abcdefghijk-456789\n3 t1.find(abc)  =  4\n4 t1.rfind(abc)  =  4\n5 t1.find(abc, 10)  =  -1\n6 t1.ffind(abc, 10)  =  4\n7 t1.length  =  22\n8 t55  =  abcdefghijk\n\n\n\n\nElementary function¶\n 1 real b  =  1.;\n 2 real a  =  b;\n 3 func real phix(real t){\n 4     return (a+b)*cos(t) - b*cos(t*(a+b)/b);\n 5 }\n 6 func real phiy(real t){\n 7     return (a+b)*sin(t) - b*sin(t*(a+b)/b);\n 8 }\n 9 \n10 border C(t = 0, 2*pi){x = phix(t); y = phiy(t);}\n11 mesh Th  =  buildmesh(C(50));\n12 plot(Th);\n\n\n\n\n\nFig. 221 Mesh¶\n\n\n\n\nArray¶\n  1 real[int] tab(10), tab1(10); //2 array of 10 real\n  2 //real[int] tab2; //bug: array with no size\n  3 \n  4 tab  =  1.03; //set all the array to 1.03\n  5 tab[1]  =  2.15;\n  6 \n  7 cout << \"tab: \" << tab << endl;\n  8 cout << \"min: \" << tab.min << endl;\n  9 cout << \"max: \" << tab.max << endl;\n 10 cout << \"sum: \" << tab.sum << endl;\n 11 \n 12 tab.resize(12); //change the size of array tab to 12 with preserving first value\n 13 tab(10:11)  =  3.14; //set values 10 & 11\n 14 cout << \"resized tab: \" << tab << endl;\n 15 \n 16 tab.sort ; //sort the array tab\n 17 cout << \"sorted tab:\" << tab << endl;\n 18 \n 19 real[string] tt; //array with string index\n 20 tt[\"+\"]  =  1.5;\n 21 cout << \"tt[\\\"a\\\"]  =  \" << tt[\"a\"] << endl;\n 22 cout << \"tt[\\\"+\\\"]  =  \" << tt[\"+\"] << endl;\n 23 \n 24 real[int] a(5), b(5), c(5), d(5);\n 25 a  =  1;\n 26 b  =  2;\n 27 c  =  3;\n 28 a[2]  =  0;\n 29 d  =  ( a ? b : c ); //for i  =  0, n-1 : d[i]  =  a[i] ? b[i] : c[i]\n 30 cout << \" d  =  ( a ? b : c ) is \" << d << endl;\n 31 d  =  ( a ? 1 : c ); //for i  =  0, n-1: d[i]  =  a[i] ? 1 : c[i]\n 32 d  =  ( a ? b : 0 ); //for i  =  0, n-1: d[i]  =  a[i] ? b[i] : 0\n 33 d  =  ( a ? 1 : 0 ); //for i  =  0, n-1: d[i]  =  a[i] ? 0 : 1\n 34 \n 35 int[int] ii(0:d.n-1); //set array ii to 0, 1, ..., d.n-1\n 36 d  =  -1:-5; //set d to -1, -2, ..., -5\n 37 \n 38 sort(d, ii); //sort array d and ii in parallel\n 39 cout << \"d: \" << d << endl;\n 40 cout << \"ii: \" << ii << endl;\n 41 \n 42 \n 43 {\n 44     int[int] A1(2:10); //2, 3, 4, 5, 6, 7, 8, 9, 10\n 45     int[int] A2(2:3:10); //2, 5, 8\n 46     cout << \"A1(2:10): \" << A1 << endl;\n 47     cout << \"A2(2:3:10): \" << A1 << endl;\n 48     A1  =  1:2:5;\n 49     cout << \"1:2:5  = > \" << A1 << endl;\n 50 }\n 51 {\n 52     real[int] A1(2:10); //2, 3, 4, 5, 6, 7, 8, 9, 10\n 53     real[int] A2(2:3:10); //2, 5, 8\n 54     cout << \"A1(2:10): \" << A1 << endl;\n 55     cout << \"A2(2:3:10): \" << A1 << endl;\n 56     A1  =  1.:0.5:3.999;\n 57     cout << \"1.:0.5:3.999  = > \" << A1 << endl;\n 58 }\n 59 {\n 60     complex[int] A1(2.+0i:10.+0i); //2, 3, 4, 5, 6, 7, 8, 9, 10\n 61     complex[int] A2(2.:3.:10.); //2, 5, 8\n 62     cout << \" A1(2.+0i:10.+0i): \" << A1 << endl;\n 63     cout << \" A2(2.:3.:10.) =  \" << A2 << endl;\n 64     cout << \" A1.re real part array: \" << A1.re << endl ;\n 65     // he real part array of the complex array\n 66     cout << \" A1.im imag part array: \" << A1.im << endl ;\n 67     //the imaginary part array of the complex array\n 68 }\n 69 \n 70 // Integer array operators\n 71 {\n 72     int N  =  5;\n 73     real[int] a(N), b(N), c(N);\n 74     a  =  1;\n 75     a(0:4:2)  =  2;\n 76     a(3:4)  =  4;\n 77     cout << \"a: \" << a << endl;\n 78     b  =  a + a;\n 79     cout <<\"b  =  a + a: \" << b << endl;\n 80     b + =  a;\n 81     cout <<\"b + =  a: \" << b << endl;\n 82     b + =  2*a;\n 83     cout <<\"b + =  2*a: \" << b << endl;\n 84     b / =  2;\n 85     cout <<\" b / =  2: \" << b << endl;\n 86     b .* =  a; // same as b  =  b .* a\n 87     cout << \"b .* =  a: \" << b << endl;\n 88     b ./ =  a; //same as b  =  b ./ a\n 89     cout << \"b ./ =  a: \" << b << endl;\n 90     c  =  a + b;\n 91     cout << \"c  =  a + b: \" << c << endl;\n 92     c  =  2*a + 4*b;\n 93     cout << \"c  =  2*a + 4b: \" << c << endl;\n 94     c  =  a + 4*b;\n 95     cout << \"c  =  a + 4b: \" << c << endl;\n 96     c  =  -a + 4*b;\n 97     cout << \"c  =  -a + 4b: \" << c << endl;\n 98     c  =  -a - 4*b;\n 99     cout << \"c  =  -a - 4b: \" << c << endl;\n100     c  =  -a - b;\n101     cout << \"c  =  -a -b: \" << c << endl;\n102 \n103     c  =  a .* b;\n104     cout << \"c  =  a .* b: \" << c << endl;\n105     c  =  a ./ b;\n106     cout << \"c  =  a ./ b: \" << c << endl;\n107     c  =  2 * b;\n108     cout << \"c  =  2 * b: \" << c << endl;\n109     c  =  b * 2;\n110     cout << \"c  =  b * 2: \" << c << endl;\n111 \n112     //this operator do not exist\n113     //c  =  b/2;\n114     //cout << \"c  =  b / 2: \" << c << endl;\n115 \n116     //Array methods\n117     cout << \"||a||_1  =  \" << a.l1 << endl;\n118     cout << \"||a||_2  =  \" << a.l2 << endl;\n119     cout << \"||a||_infty  =  \" << a.linfty << endl;\n120     cout << \"sum a_i  =  \" << a.sum << endl;\n121     cout << \"max a_i  =  \" << a.max << \" a[ \" << a.imax << \" ]  =  \" << a[a.imax] << endl;\n122     cout << \"min a_i  =  \" << a.min << \" a[ \" << a.imin << \" ]  =  \" << a[a.imin] << endl;\n123 \n124     cout << \"a' * a  =  \" << (a'*a) << endl;\n125     cout << \"a quantile 0.2  =  \" << a.quantile(0.2) << endl;\n126 \n127     //Array mapping\n128     int[int] I  =  [2, 3, 4, -1, 3];\n129     b  =  c  =  -3;\n130     b  =  a(I); //for (i  =  0; i < b.n; i++) if (I[i] > =  0) b[i]  =  a[I[i]];\n131     c(I)  =  a; //for (i  =  0; i < I.n; i++) if (I[i] > =  0) C(I[i])  =  a[i];\n132     cout << \"b  =  a(I) : \" << b << endl;\n133     cout << \"c(I)  =  a \" << c << endl;\n134     c(I) + =  a; //for (i  =  0; i < I.n; i++) if (I[i] > =  0) C(I[i]) + =  a[i];\n135     cout << \"b  =  a(I) : \" << b << endl;\n136     cout << \"c(I)  =  a \" << c << endl;\n137 \n138 }\n139 \n140 {\n141     // Array versus matrix\n142     int N  =  3, M  =  4;\n143 \n144     real[int, int] A(N, M);\n145     real[int] b(N), c(M);\n146     b  =  [1, 2, 3];\n147     c  =  [4, 5, 6, 7];\n148 \n149     complex[int, int] C(N, M);\n150     complex[int] cb  =  [1, 2, 3], cc  =  [10i, 20i, 30i, 40i];\n151 \n152     b  =  [1, 2, 3];\n153 \n154     int [int] I  =  [2, 0, 1];\n155     int [int] J  =  [2, 0, 1, 3];\n156 \n157     A  =  1; //set all the matrix\n158     A(2, :)  =  4; //the full line 2\n159     A(:, 1)  =  5; //the full column 1\n160     A(0:N-1, 2)  =  2; //set the column 2\n161     A(1, 0:2)  =  3; //set the line 1 from 0 to 2\n162 \n163     cout << \"A  =  \" << A << endl;\n164 \n165     //outer product\n166     C  =  cb * cc';\n167     C + =  3 * cb * cc';\n168     C - =  5i * cb * cc';\n169     cout << \"C  =  \" << C << endl;\n170 \n171     //this transforms an array into a sparse matrix\n172     matrix B;\n173     B  =  A;\n174     B  =  A(I, J); //B(i, j)  =  A(I(i), J(j))\n175     B  =  A(I^-1, J^-1); //B(I(i), J(j))  =  A(i,j)\n176 \n177     //outer product\n178     A  =  2. * b * c';\n179     cout << \"A  =  \" << A << endl;\n180     B  =  b*c'; //outer product B(i, j)  =  b(i)*c(j)\n181     B  =  b*c'; //outer product B(i, j)  =  b(i)*c(j)\n182     B  =  (2*b*c')(I, J); //outer product B(i, j)  =  b(I(i))*c(J(j))\n183     B  =  (3.*b*c')(I^-1,J^-1); //outer product B(I(i), J(j))  =  b(i)*c(j)\n184     cout << \"B  =  (3.*b*c')(I^-1,J^-1)  =  \" << B << endl;\n185 \n186     //row and column of the maximal coefficient of A\n187     int i, j, ii, jj;\n188     ijmax(A, ii, jj);\n189 \n190     i  =  A.imax;\n191     j  =  A.jmax;\n192 \n193     cout << \"Max \" << i << \" \" << j << \",  =  \" << A.max << endl;\n194 \n195     //row and column of the minimal coefficient of A\n196     ijmin(A, i, j);\n197 \n198     ii  =  A.imin;\n199     jj  =  A.jmin;\n200 \n201     cout << \"Min \" << ii << \" \" << jj << \",  =  \" << A.min << endl;\n202 }\n\n\nThe output os this script is:\n  1 tab: 10\n  2     1.03    2.15    1.03    1.03    1.03\n  3     1.03    1.03    1.03    1.03    1.03\n  4 \n  5 min: 1.03\n  6 max: 2.15\n  7 sum: 11.42\n  8 resized tab: 12\n  9     1.03    2.15    1.03    1.03    1.03\n 10     1.03    1.03    1.03    1.03    1.03\n 11     3.14    3.14\n 12 sorted tab:12\n 13     1.03    1.03    1.03    1.03    1.03\n 14     1.03    1.03    1.03    1.03    2.15\n 15     3.14    3.14\n 16 tt[\"a\"]  =  0\n 17 tt[\"+\"]  =  1.5\n 18  d  =  ( a ? b : c ) is 5\n 19       2   2   3   2   2\n 20 \n 21 d: 5\n 22      -5  -4  -3  -2  -1\n 23 \n 24 ii: 5\n 25       4   3   2   1   0\n 26 \n 27 A1(2:10): 9\n 28       2   3   4   5   6\n 29       7   8   9  10\n 30 A2(2:3:10): 9\n 31       2   3   4   5   6\n 32       7   8   9  10\n 33 1:2:5  = > 3\n 34       1   3   5\n 35 A1(2:10): 9\n 36       2   3   4   5   6\n 37       7   8   9  10\n 38 A2(2:3:10): 9\n 39       2   3   4   5   6\n 40       7   8   9  10\n 41 1.:0.5:3.999  = > 6\n 42       1 1.5   2 2.5   3\n 43     3.5\n 44  A1(2.+0i:10.+0i): 9\n 45     (2,0)   (3,0)   (4,0)   (5,0)   (6,0)\n 46     (7,0)   (8,0)   (9,0)   (10,0)\n 47  A2(2.:3.:10.) =  3\n 48     (2,0)   (5,0)   (8,0)\n 49  A1.re real part array: 9\n 50       2   3   4   5   6\n 51       7   8   9  10\n 52  A1.im imag part array: 9\n 53       0   0   0   0   0\n 54       0   0   0   0\n 55 a: 5\n 56       2   1   2   4   4\n 57 \n 58 b  =  a + a: 5\n 59       4   2   4   8   8\n 60 \n 61 b + =  a: 5\n 62       6   3   6  12  12\n 63 \n 64 b + =  2*a: 5\n 65      10   5  10  20  20\n 66 \n 67  b / =  2: 5\n 68       5 2.5   5  10  10\n 69 \n 70 b .* =  a: 5\n 71      10 2.5  10  40  40\n 72 \n 73 b ./ =  a: 5\n 74       5 2.5   5  10  10\n 75 \n 76 c  =  a + b: 5\n 77       7 3.5   7  14  14\n 78 \n 79 c  =  2*a + 4b: 5\n 80      24  12  24  48  48\n 81 \n 82 c  =  a + 4b: 5\n 83      22  11  22  44  44\n 84 \n 85 c  =  -a + 4b: 5\n 86      18   9  18  36  36\n 87 \n 88 c  =  -a - 4b: 5\n 89     -22 -11 -22 -44 -44\n 90 \n 91 c  =  -a -b: 5\n 92      -7 -3.5     -7 -14 -14\n 93 \n 94 c  =  a .* b: 5\n 95      10 2.5  10  40  40\n 96 \n 97 c  =  a ./ b: 5\n 98     0.4 0.4 0.4 0.4 0.4\n 99 \n100 c  =  2 * b: 5\n101      10   5  10  20  20\n102 \n103 c  =  b * 2: 5\n104      10   5  10  20  20\n105 \n106 ||a||_1  =  13\n107 ||a||_2  =  6.40312\n108 ||a||_infty  =  4\n109 sum a_i  =  13\n110 max a_i  =  4 a[ 3 ]  =  4\n111 min a_i  =  1 a[ 1 ]  =  1\n112 a' * a  =  41\n113 a quantile 0.2  =  2\n114 b  =  a(I) : 5\n115       2   4   4  -3   4\n116 \n117 c(I)  =  a 5\n118      -3  -3   2   4   2\n119 \n120 b  =  a(I) : 5\n121       2   4   4  -3   4\n122 \n123 c(I)  =  a 5\n124      -3  -3   4   9   4\n125 \n126 A  =  3 4\n127        1   5   2   1\n128        3   3   3   1\n129        4   5   2   4\n130 \n131 C  =  3 4\n132      (-50,-40) (-100,-80) (-150,-120) (-200,-160)\n133      (-100,-80) (-200,-160) (-300,-240) (-400,-320)\n134      (-150,-120) (-300,-240) (-450,-360) (-600,-480)\n135 \n136 A  =  3 4\n137        8  10  12  14\n138       16  20  24  28\n139       24  30  36  42\n140 \n141 B  =  (3.*b*c')(I^-1,J^-1)  =  # Sparse Matrix (Morse)\n142 # first line: n m (is symmetic) nbcoef\n143 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n144 3 4 0  12\n145         1         1 10\n146         1         2 12\n147         1         3 8\n148         1         4 14\n149         2         1 15\n150         2         2 18\n151         2         3 12\n152         2         4 21\n153         3         1 5\n154         3         2 6\n155         3         3 4\n156         3         4 7\n\n\n\n\nBlock matrix¶\n 1 // Parameters\n 2 real f1  =  1.;\n 3 real f2  =  1.5;\n 4 \n 5 // Mesh\n 6 mesh Th1  =  square(10, 10);\n 7 mesh Th2  =  square(10, 10, [1+x, -1+y]);\n 8 plot(Th1, Th2);\n 9 \n10 // Fespace\n11 fespace Uh1(Th1, P1);\n12 Uh1 u1;\n13 \n14 fespace Uh2(Th2, P2);\n15 Uh2 u2;\n16 \n17 // Macro\n18 macro grad(u) [dx(u), dy(u)] //\n19 \n20 // Problem\n21 varf vPoisson1 (u, v)\n22      =  int2d(Th1)(\n23           grad(u)' * grad(v)\n24     )\n25     - int2d(Th1)(\n26           f1 * v\n27     )\n28     + on(1, 2, 3, 4, u = 0)\n29     ;\n30 \n31 varf vPoisson2 (u, v)\n32      =  int2d(Th2)(\n33           grad(u)' * grad(v)\n34     )\n35     - int2d(Th2)(\n36           f1 * v\n37     )\n38     + on(1, 2, 3, 4, u = 0)\n39     ;\n40 matrix<real> Poisson1  =  vPoisson1(Uh1, Uh1);\n41 real[int] Poisson1b  =  vPoisson1(0, Uh1);\n42 \n43 matrix<real> Poisson2  =  vPoisson2(Uh2, Uh2);\n44 real[int] Poisson2b  =  vPoisson2(0, Uh2);\n45 \n46 //block matrix\n47 matrix<real> G  =  [[Poisson1, 0], [0, Poisson2]];\n48 set(G, solver = sparsesolver);\n49 \n50 //block right hand side\n51 real[int] Gb  =  [Poisson1b, Poisson2b];\n52 \n53 // Solve\n54 real[int] sol  =  G^-1 * Gb;\n55 \n56 // Dispatch\n57 [u1[], u2[]]  =  sol;\n58 \n59 // Plot\n60 plot(u1, u2);\n\n\n\n\n\nFig. 222 Result¶\n\n\n\n\nMatrix operations¶\n 1 // Mesh\n 2 mesh Th  =  square(2, 1);\n 3 \n 4 // Fespace\n 5 fespace Vh(Th, P1);\n 6 Vh f, g;\n 7 f  =  x*y;\n 8 g  =  sin(pi*x);\n 9 \n10 Vh<complex> ff, gg; //a complex valued finite element function\n11 ff =  x*(y+1i);\n12 gg  =  exp(pi*x*1i);\n13 \n14 // Problem\n15 varf mat (u, v)\n16      =  int2d(Th)(\n17           1*dx(u)*dx(v)\n18         + 2*dx(u)*dy(v)\n19         + 3*dy(u)*dx(v)\n20         + 4*dy(u)*dy(v)\n21     )\n22     + on(1, 2, 3, 4, u = 1)\n23     ;\n24 \n25 varf mati (u, v)\n26      =  int2d(Th)(\n27          1*dx(u)*dx(v)\n28         + 2i*dx(u)*dy(v)\n29         + 3*dy(u)*dx(v)\n30         + 4*dy(u)*dy(v)\n31     )\n32     + on(1, 2, 3, 4, u = 1)\n33     ;\n34 \n35 matrix A  =  mat(Vh, Vh);\n36 matrix<complex> AA  =  mati(Vh, Vh); //a complex sparse matrix\n37 \n38 // Operations\n39 Vh m0; m0[]  =  A*f[];\n40 Vh m01; m01[]  =  A'*f[];\n41 Vh m1; m1[]  =  f[].*g[];\n42 Vh m2; m2[]  =  f[]./g[];\n43 \n44 // Display\n45 cout << \"f  =  \" << f[] << endl;\n46 cout << \"g  =  \" << g[] << endl;\n47 cout << \"A  =  \" << A << endl;\n48 cout << \"m0  =  \" << m0[] << endl;\n49 cout << \"m01  =  \" << m01[] << endl;\n50 cout << \"m1  =  \"<< m1[] << endl;\n51 cout << \"m2  =  \"<< m2[] << endl;\n52 cout << \"dot Product  =  \"<< f[]'*g[] << endl;\n53 cout << \"hermitien Product  =  \"<< ff[]'*gg[] << endl;\n54 cout << \"outer Product  =  \"<< (A = f[]*g[]') << endl;\n55 cout << \"hermitien outer Product  =  \"<< (AA = ff[]*gg[]') << endl;\n56 \n57 // Diagonal\n58 real[int] diagofA(A.n);\n59 diagofA  =  A.diag; //get the diagonal of the matrix\n60 A.diag  =  diagofA ; //set the diagonal of the matrix\n61 \n62 // Sparse matrix set\n63 int[int] I(1), J(1);\n64 real[int] C(1);\n65 \n66 [I, J, C]  =  A; //get the sparse term of the matrix A (the array are resized)\n67 cout << \"I  =  \" << I << endl;\n68 cout << \"J  =  \" << J << endl;\n69 cout << \"C  =  \" << C << endl;\n70 \n71 A  =  [I, J, C]; //set a new matrix\n72 matrix D  =  [diagofA]; //set a diagonal matrix D from the array diagofA\n73 cout << \"D  =  \" << D << endl;\n\n\nThe output of this script is:\n  1 f  =  6\n  2       0   0   0   0 0.5\n  3       1\n  4 g  =  6\n  5       0   1 1.224646799e-16   0   1\n  6     1.224646799e-16\n  7 A  =  # Sparse Matrix (Morse)\n  8 # first line: n m (is symmetic) nbcoef\n  9 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n 10 6 6 0  24\n 11         1         1 1.0000000000000000199e+30\n 12         1         2 0.49999999999999994449\n 13         1         4 0\n 14         1         5 -2.5\n 15         2         1 0\n 16         2         2 1.0000000000000000199e+30\n 17         2         3 0.49999999999999994449\n 18         2         5 0.49999999999999977796\n 19         2         6 -2.5\n 20         3         2 0\n 21         3         3 1.0000000000000000199e+30\n 22         3         6 0.49999999999999977796\n 23         4         1 0.49999999999999977796\n 24         4         4 1.0000000000000000199e+30\n 25         4         5 0\n 26         5         1 -2.5\n 27         5         2 0.49999999999999977796\n 28         5         4 0.49999999999999994449\n 29         5         5 1.0000000000000000199e+30\n 30         5         6 0\n 31         6         2 -2.5\n 32         6         3 0\n 33         6         5 0.49999999999999994449\n 34         6         6 1.0000000000000000199e+30\n 35 \n 36 m0  =  6\n 37     -1.25   -2.25   0.5   0 5e+29\n 38     1e+30\n 39 m01  =  6\n 40     -1.25   -2.25     0 0.25    5e+29\n 41     1e+30\n 42 m1  =  6\n 43       0   0   0   0 0.5\n 44     1.224646799e-16\n 45 m2  =  6\n 46     -nan      0   0 -nan    0.5\n 47     8.165619677e+15\n 48 dot Product  =  0.5\n 49 hermitien Product  =  (1.11022e-16,2.5)\n 50 outer Product  =  # Sparse Matrix (Morse)\n 51 # first line: n m (is symmetic) nbcoef\n 52 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n 53 6 6 0  8\n 54         5         2 0.5\n 55         5         3 6.1232339957367660359e-17\n 56         5         5 0.5\n 57         5         6 6.1232339957367660359e-17\n 58         6         2 1\n 59         6         3 1.2246467991473532072e-16\n 60         6         5 1\n 61         6         6 1.2246467991473532072e-16\n 62 \n 63 hermitien outer Product  =  # Sparse Matrix (Morse)\n 64 # first line: n m (is symmetic) nbcoef\n 65 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n 66 6 6 0  24\n 67         2         1 (0,0.5)\n 68         2         2 (0.5,3.0616169978683830179e-17)\n 69         2         3 (6.1232339957367660359e-17,-0.5)\n 70         2         4 (0,0.5)\n 71         2         5 (0.5,3.0616169978683830179e-17)\n 72         2         6 (6.1232339957367660359e-17,-0.5)\n 73         3         1 (0,1)\n 74         3         2 (1,6.1232339957367660359e-17)\n 75         3         3 (1.2246467991473532072e-16,-1)\n 76         3         4 (0,1)\n 77         3         5 (1,6.1232339957367660359e-17)\n 78         3         6 (1.2246467991473532072e-16,-1)\n 79         5         1 (0.5,0.5)\n 80         5         2 (0.5,-0.49999999999999994449)\n 81         5         3 (-0.49999999999999994449,-0.50000000000000011102)\n 82         5         4 (0.5,0.5)\n 83         5         5 (0.5,-0.49999999999999994449)\n 84         5         6 (-0.49999999999999994449,-0.50000000000000011102)\n 85         6         1 (1,1)\n 86         6         2 (1,-0.99999999999999988898)\n 87         6         3 (-0.99999999999999988898,-1.000000000000000222)\n 88         6         4 (1,1)\n 89         6         5 (1,-0.99999999999999988898)\n 90         6         6 (-0.99999999999999988898,-1.000000000000000222)\n 91 \n 92 I  =  8\n 93       4   4   4   4   5\n 94       5   5   5\n 95 J  =  8\n 96       1   2   4   5   1\n 97       2   4   5\n 98 C  =  8\n 99     0.5 6.123233996e-17 0.5 6.123233996e-17   1\n100     1.224646799e-16   1 1.224646799e-16\n101   -- Raw Matrix    nxm   = 6x6 nb  none zero coef. 8\n102   -- Raw Matrix    nxm   = 6x6 nb  none zero coef. 6\n103 D  =  # Sparse Matrix (Morse)\n104 # first line: n m (is symmetic) nbcoef\n105 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n106 6 6 1  6\n107         1         1 0\n108         2         2 0\n109         3         3 0\n110         4         4 0\n111         5         5 0.5\n112         6         6 1.2246467991473532072e-16\n\n\n\nWarning\nDue to Fortran indices starting at one, the output of a diagonal matrix D is indexed from 1. but in FreeFEM, the indices start from 0.\n\n\n\nMatrix inversion¶\n 1 load \"lapack\"\n 2 load \"fflapack\"\n 3 \n 4 // Matrix\n 5 int n  =  5;\n 6 real[int, int] A(n, n), A1(n, n), B(n,n);\n 7 for (int i  =  0; i < n; ++i)\n 8     for (int j  =  0; j < n; ++j)\n 9         A(i, j)  =  (i  =  =  j) ? n+1 : 1;\n10 cout << A << endl;\n11 \n12 // Inversion (lapack)\n13 A1  =  A^-1; //def in \"lapack\"\n14 cout << A1 << endl;\n15 \n16 B  =  0;\n17 for (int i  =  0; i < n; ++i)\n18     for (int j  =  0; j < n; ++j)\n19         for (int k  =  0; k < n; ++k)\n20             B(i, j) + =  A(i,k)*A1(k,j);\n21 cout << B << endl;\n22 \n23 // Inversion (fflapack)\n24 inv(A1); //def in \"fflapack\"\n25 cout << A1 << endl;\n\n\nThe output of this script is:\n 1 5 5\n 2        6   1   1   1   1\n 3        1   6   1   1   1\n 4        1   1   6   1   1\n 5        1   1   1   6   1\n 6        1   1   1   1   6\n 7 \n 8 5 5\n 9      0.18 -0.02 -0.02 -0.02 -0.02\n10      -0.02 0.18 -0.02 -0.02 -0.02\n11      -0.02 -0.02 0.18 -0.02 -0.02\n12      -0.02 -0.02 -0.02 0.18 -0.02\n13      -0.02 -0.02 -0.02 -0.02 0.18\n14 \n15 5 5\n16        1 1.040834086e-17 1.040834086e-17 1.734723476e-17 2.775557562e-17\n17      3.469446952e-18   1 -1.734723476e-17 1.734723476e-17 2.775557562e-17\n18      2.428612866e-17 -3.122502257e-17   1 1.734723476e-17 2.775557562e-17\n19      2.081668171e-17 -6.938893904e-17 -3.469446952e-17   1   0\n20      2.775557562e-17 -4.163336342e-17 -2.775557562e-17   0   1\n21 \n22 5 5\n23        6   1   1   1   1\n24        1   6   1   1   1\n25        1   1   6   1   1\n26        1   1   1   6   1\n27        1   1   1   1   6\n\n\n\nTip\nTo compile lapack.cpp and fflapack.cpp, you must have the lapack library on your system and compile the plugin with the command:\n1 ff-c++ lapack.cpp -llapack     ff-c++ fflapack.cpp -llapack\n\n\n\n\n\nFE array¶\n 1 // Mesh\n 2 mesh Th  =  square(20, 20, [2*x, 2*y]);\n 3 \n 4 // Fespace\n 5 fespace Vh(Th, P1);\n 6 Vh u, v, f;\n 7 \n 8 // Problem\n 9 problem Poisson (u, v)\n10      =  int2d(Th)(\n11           dx(u)*dx(v)\n12         + dy(u)*dy(v)\n13     )\n14     + int2d(Th)(\n15         - f*v\n16     )\n17     + on(1, 2, 3, 4, u = 0)\n18     ;\n19 \n20 Vh[int] uu(3); //an array of FE function\n21 // Solve problem 1\n22 f  =  1;\n23 Poisson;\n24 uu[0]  =  u;\n25 // Solve problem 2\n26 f  =  sin(pi*x)*cos(pi*y);\n27 Poisson;\n28 uu[1]  =  u;\n29 // Solve problem 3\n30 f  =  abs(x-1)*abs(y-1);\n31 Poisson;\n32 uu[2]  =  u;\n33 \n34 // Plot\n35 for (int i  =  0; i < 3; i++)\n36     plot(uu[i], wait = true);\n\n\n\n\n\n\nFig. 223 First result¶\n\n\n\n\n\nFig. 224 Second result¶\n\n\n\n\n\nFig. 225 Third result¶\n\n\nFinite element array\n\n\nLoop¶\n 1 for (int i  =  0; i < 10; i = i+1)\n 2     cout << i << endl;\n 3 \n 4 real eps  =  1.;\n 5 while (eps > 1e-5){\n 6     eps  =  eps/2;\n 7     if (i++ < 100)\n 8         break;\n 9     cout << eps << endl;\n10 }\n11 \n12 for (int j  =  0; j < 20; j++){\n13     if (j < 10) continue;\n14     cout << \"j  =  \" << j << endl;\n15 }\n\n\n\n\nImplicit loop¶\n 1 real [int, int] a(10, 10);\n 2 real [int] b(10);\n 3 \n 4 for [i, bi : b]{\n 5     bi  =  i+1;\n 6     cout << i << \" \" << bi << endl;\n 7 }\n 8 cout << \"b  =  \" << b << endl;\n 9 \n10 for [i, j, aij : a]{\n11     aij  =  1./(2+i+j);\n12     if (abs(aij) < 0.2) aij  =  0;\n13 }\n14 cout << \"a  =  \" << a << endl;\n15 \n16 matrix A  =  a;\n17 string[string] ss; //a map\n18 ss[\"1\"]  =  1;\n19 ss[\"2\"]  =  2;\n20 ss[\"3\"]  =  5;\n21 for [i, bi : ss]\n22     bi  =  i + 6 + \"-dddd\";\n23 cout << \"ss  =  \" << ss << endl;\n24 \n25 int[string] si;\n26 si[1]  =  2;\n27 si[50]  =  1;\n28 for [i, vi : si]{\n29     cout << \" i \" << setw(3) << i << \" \" << setw(10) << vi << endl;\n30     vi  =  atoi(i)*2;\n31 }\n32 cout << \"si  =  \" << si << endl;\n33 \n34 for [i, j, aij : A]{\n35     cout << i << \" \" << j << \" \" << aij << endl;\n36     aij  =  -aij;\n37 }\n38 cout << A << endl;\n\n\nThe output of this script is:\n 1 0 1\n 2 1 2\n 3 2 3\n 4 3 4\n 5 4 5\n 6 5 6\n 7 6 7\n 8 7 8\n 9 8 9\n10 9 10\n11 b  =  10\n12       1   2   3   4   5\n13       6   7   8   9  10\n14 \n15 a  =  10 10\n16      0.5 0.3333333333 0.25 0.2   0   0   0   0   0   0\n17      0.3333333333 0.25 0.2   0   0   0   0   0   0   0\n18      0.25 0.2   0   0   0   0   0   0   0   0\n19      0.2   0   0   0   0   0   0   0   0   0\n20        0   0   0   0   0   0   0   0   0   0\n21        0   0   0   0   0   0   0   0   0   0\n22        0   0   0   0   0   0   0   0   0   0\n23        0   0   0   0   0   0   0   0   0   0\n24        0   0   0   0   0   0   0   0   0   0\n25        0   0   0   0   0   0   0   0   0   0\n26 \n27 ss  =  1 1\n28 2 2\n29 3 5\n30 \n31  i   1          2\n32  i  50          1\n33 si  =  1 2\n34 50 100\n35 \n36 0 0 0.5\n37 0 1 0.333333\n38 0 2 0.25\n39 0 3 0.2\n40 1 0 0.333333\n41 1 1 0.25\n42 1 2 0.2\n43 2 0 0.25\n44 2 1 0.2\n45 3 0 0.2\n46 # Sparse Matrix (Morse)\n47 # first line: n m (is symmetic) nbcoef\n48 # after for each nonzero coefficient:   i j a_ij where (i,j) \\in  {1,...,n}x{1,...,m}\n49 10 10 0  10\n50         1         1 -0.5\n51         1         2 -0.33333333333333331483\n52         1         3 -0.25\n53         1         4 -0.2000000000000000111\n54         2         1 -0.33333333333333331483\n55         2         2 -0.25\n56         2         3 -0.2000000000000000111\n57         3         1 -0.25\n58         3         2 -0.2000000000000000111\n59         4         1 -0.2000000000000000111\n\n\n\n\nI/O¶\n 1 int i;\n 2 cout << \"std-out\" << endl;\n 3 cout << \" enter i  =  ?\";\n 4 cin >> i;\n 5 \n 6 {\n 7     ofstream f(\"toto.txt\");\n 8     f << i << \"hello world'\\n\";\n 9 } //close the file f because the variable f is delete\n10 \n11 {\n12     ifstream f(\"toto.txt\");\n13     f >> i;\n14 }\n15 \n16 {\n17     ofstream f(\"toto.txt\", append);\n18     //to append to the existing file \"toto.txt\"\n19     f << i << \"hello world'\\n\";\n20 } //close the file f because the variable f is delete\n21 \n22 cout << i << endl;\n\n\n\n\nFile stream¶\n 1 int where;\n 2 real[int] f  =  [0, 1, 2, 3, 4, 5];\n 3 real[int] g(6);\n 4 \n 5 {\n 6     ofstream file(\"f.txt\", binary);\n 7     file.precision(16);\n 8     file << f << endl;\n 9     where  =  file.tellp();\n10     file << 0.1 ;\n11 \n12     cout << \"Where in file \" << where << endl;\n13     file << \" # comment bla bla ... 0.3 \\n\";\n14     file << 0.2 << endl;\n15     file.flush; //to flush the buffer of file\n16 }\n17 \n18 //Function to skip comment starting with # in a file\n19 func ifstream skipcomment(ifstream &ff){\n20     while(1){\n21         int where  =  ff.tellg(); //store file position\n22         string comment;\n23         ff >> comment;\n24         if (!ff.good()) break;\n25         if (comment(0:0) =  = \"#\"){\n26             getline(ff, comment);\n27             cout << \" -- #\" << comment << endl;\n28         }\n29         else{\n30             ff.seekg(where); //restore file position\n31             break;\n32         }\n33     }\n34     return ff;\n35 }\n36 \n37 {\n38     real xx;\n39     ifstream file(\"f.txt\", binary);\n40     cout << \"Where \" << file.seekg << endl;\n41     file.seekg(where);\n42     file >> xx;\n43     cout << \" xx  =  \" << xx << \" good ? \" << file.good() << endl;\n44     assert(xx  =  =  0.1);\n45     skipcomment(file) >> xx;\n46     assert(xx  =  =  0.2);\n47     file.seekg(0); //rewind\n48     cout << \"Where \" << file.tellg() << \" \" << file.good() << endl;\n49     file >> g;\n50 }\n\n\n\n\nCommand line arguments¶\nWhen using the command:\n1 FreeFem++ script.edp arg1 arg2\n\n\nThe arguments can be used in the script with:\n1 for (int i  =  0; i < ARGV.n; i++)\n2     cout << ARGV[i] << endl;\n\n\nWhen using the command:\n1 FreeFem++ script.edp -n 10 -a 1. -d 42.\n\n\nThe arguments can be used in the script with:\n1 include \"getARGV.idp\"\n2 \n3 int n  =  getARGV(\"-n\", 1);\n4 real a  =  getARGV(\"-a\", 1.);\n5 real d  =  getARGV(\"-d\", 1.);\n\n\n\n\nMacro¶\n 1 // Macro without parameters\n 2 macro xxx() {\n 3     real i  =  0;\n 4     int j  =  0;\n 5     cout << i << \" \" << j << endl;\n 6 }//\n 7 \n 8 xxx\n 9 \n10 // Macro with parameters\n11 macro toto(i) i //\n12 \n13 toto({real i  =  0; int j  =  0; cout << i << \" \" << j << endl;})\n14 \n15 // Macro as parameter of a macro\n16 real[int,int] CC(7, 7), EE(6, 3), EEps(4, 4);\n17 \n18 macro VIL6(v, i) [v(1,i), v(2,i), v(4,i), v(5,i), v(6,i)] //\n19 macro VIL3(v, i) [v(1,i), v(2,i)] //\n20 macro VV6(v, vv) [\n21     v(vv,1), v(vv,2),\n22     v(vv,4), v(vv,5),\n23     v(vv,6)] //\n24 macro VV3(v, vv) [v(vv,1), v(vv,2)] //\n25 \n26 func C5x5  =  VV6(VIL6, CC);\n27 func E5x2  =  VV6(VIL3, EE);\n28 func Eps  =  VV3(VIL3, EEps);\n29 \n30 // Macro concatenation\n31 mesh Th  =  square(2, 2);\n32 fespace Vh(Th, P1);\n33 Vh Ux = x, Uy = y;\n34 \n35 macro div(V) (dx(V#x) + dy(V#y)) //\n36 \n37 cout << int2d(Th)(div(U)) << endl;\n38 \n39 // Verify the quoting\n40 macro foo(i, j, k) i j k //\n41 foo(, , )\n42 foo({int[}, {int] a(10}, {);})\n43 \n44 //NewMacro - EndMacro\n45 NewMacro grad(u) [dx(u), dy(u)] EndMacro\n46 cout << int2d(Th)(grad(Ux)' * grad(Uy)) << endl;\n47 \n48 // IFMACRO - ENDIFMACRO\n49 macro AA CAS1 //\n50 \n51 IFMACRO(AA,CAS1 )\n52 cout << \"AA  =  \" << Stringification(AA) << endl;\n53 macro CASE file1.edp//\n54 ENDIFMACRO\n55 IFMACRO(AA, CAS2)\n56 macro CASE file2.edp//\n57 ENDIFMACRO\n58 \n59 cout << \"CASE  =  \" << Stringification(CASE) << endl;\n60 \n61 IFMACRO(CASE)\n62 include Stringification(CASE)\n63 ENDIFMACRO\n64 \n65 // FILE - LINE\n66 cout << \"In \" << FILE << \", line \" << LINE << endl;\n\n\nThe output script generated with macros is:\n 1 1 : // Macro without parameters\n 2 2 :  macro xxx {\n 3 3 :     real i  =  0;\n 4 4 :     int j  =  0;\n 5 5 :     cout << i << \" \" << j << endl;\n 6 6 : }//\n 7 7 :\n 8 8 :\n 9 1 :\n10 2 :\n11 3 :\n12 4 :  {\n13 1 :     real i  =  0;\n14 2 :     int j  =  0;\n15 3 :     cout << i << \" \" << j << endl;\n16 4 : }\n17 9 :\n18 10 : // Macro with parameters\n19 11 :  macro toto(i )   i //\n20 12 :\n21 13 :                    real i  =  0; int j  =  0; cout << i << \" \" << j << endl;\n22 14 :\n23 15 : // Macro as parameter of a macro\n24 16 : real[int,int] CC(7, 7), EE(6, 3), EEps(4, 4);\n25 17 :\n26 18 :   macro VIL6(v,i )   [v(1,i), v(2,i), v(4,i), v(5,i), v(6,i)] //\n27 19 :   macro VIL3(v,i )   [v(1,i), v(2,i)] //\n28 20 :   macro VV6(v,vv )   [\n29 21 :    v(vv,1), v(vv,2),\n30 22 :    v(vv,4), v(vv,5),\n31 23 :    v(vv,6)] //\n32 24 :   macro VV3(v,vv )   [v(vv,1), v(vv,2)] //\n33 25 :\n34 26 : func C5x5  = \n35 1 :\n36 2 :\n37 3 :       [\n38 1 :             [ CC(1,1),  CC(2,1),  CC(4,1),  CC(5,1),  CC(6,1)] ,         [ CC(1,2),  CC(2,2),  CC(4,2),  CC(5,2),  CC(6,2)] ,\n39 2 :             [ CC(1,4),  CC(2,4),  CC(4,4),  CC(5,4),  CC(6,4)] ,         [ CC(1,5),  CC(2,5),  CC(4,5),  CC(5,5),  CC(6,5)] ,\n40 3 :             [ CC(1,6),  CC(2,6),  CC(4,6),  CC(5,6),  CC(6,6)] ] ;\n41 27 : func E5x2  = \n42 1 :\n43 2 :\n44 3 :       [\n45 1 :          [ EE(1,1),  EE(2,1)] ,      [ EE(1,2),  EE(2,2)] ,\n46 2 :          [ EE(1,4),  EE(2,4)] ,      [ EE(1,5),  EE(2,5)] ,\n47 3 :          [ EE(1,6),  EE(2,6)] ] ;\n48 28 : func Eps  =       [     [ EEps(1,1),  EEps(2,1)] ,      [ EEps(1,2),  EEps(2,2)] ] ;\n49 29 :\n50 30 : // Macro concatenation\n51 31 : mesh Th  =  square(2, 2);\n52 32 : fespace Vh(Th, P1);\n53 33 : Vh Ux = x, Uy = y;\n54 34 :\n55 35 :  macro div(V )   (dx(V#x) + dy(V#y)) //\n56 36 :\n57 37 : cout << int2d(Th)(     (dx(Ux) + dy(Uy)) ) << endl;\n58 38 :\n59 39 : // Verify the quoting\n60 40 :    macro foo(i,j,k )   i j k //\n61 41 :\n62 42 :         int[ int] a(10 );\n63 43 :\n64 44 : //NewMacro - EndMacro\n65 45 :  macro grad(u )   [dx(u), dy(u)]\n66 46 : cout << int2d(Th)(    [dx(Ux), dy(Ux)] ' *     [dx(Uy), dy(Uy)] ) << endl;\n67 47 :\n68 48 : // IFMACRO - ENDIFMACRO\n69 49 :   macro AACAS1 //\n70 50 :\n71 51 :\n72 1 : cout << \"AA  =  \" << Stringification( CAS1 ) << endl;\n73 2 :   macro CASEfile1.edp//\n74 3 :\n75 52 :\n76 53 :\n77 54 : cout << \"CASE  =  \" << Stringification(file1.edp) << endl;\n78 55 :\n79 56 :\n80 1 : include Stringification(file1.edp)cout << \"This is the file 1\" << endl;\n81 2 :\n82 2 :\n83 57 :\n84 58 : // FILE - LINE\n85 59 : cout << \"In \" << FILE << \", line \" << LINE << endl;\n\n\nThe output os this script is:\n1 AA  =  CAS1\n2 CASE  =  file1.edp\n3 This is the file 1\n4 In Macro.edp, line 59\n\n\n\n\nBasic error handling¶\n1 real a;\n2 try{\n3     a  =  1./0.;\n4 }\n5 catch (...) //all exceptions can be caught\n6 {\n7     cout << \"Catch an ExecError\" << endl;\n8     a  =  0.;\n9 }\n\n\nThe output of this script is:\n1 1/0 : d d d\n2   current line  =  3\n3 Exec error :  Div by 0\n4    -- number :1\n5 Catch an ExecError\n\n\n\n\nError handling¶\n 1 // Parameters\n 2 int nn  =  5;\n 3 func f  =  1; //right hand side function\n 4 func g  =  0; //boundary condition function\n 5 \n 6 // Mesh\n 7 mesh Th  =  square(nn, nn);\n 8 \n 9 // Fespace\n10 fespace Vh(Th, P1);\n11 Vh uh, vh;\n12 \n13 // Problem\n14 real cpu  =  clock();\n15 problem laplace (uh, vh, solver = Cholesky, tolpivot = 1e-6)\n16      =  int2d(Th)(\n17           dx(uh)*dx(vh)\n18         + dy(uh)*dy(vh)\n19     )\n20     + int2d(Th)(\n21         - f*vh\n22     )\n23     ;\n24 \n25 try{\n26     cout << \"Try Cholesky\" << endl;\n27 \n28     // Solve\n29     laplace;\n30 \n31     // Plot\n32     plot(uh);\n33 \n34     // Display\n35     cout << \"laplacian Cholesky \" << nn << \", x_\" << nn << \" : \" << -cpu+clock() << \" s, max  =  \" << uh[].max << endl;\n36 }\n37 catch(...) { //catch all error\n38     cout << \" Catch cholesky PB \" << endl;\n39 }\n\n\nThe output of this script is:\n1 Try Cholesky\n2 ERREUR choleskypivot (35) =  -6.43929e-15 < 1e-06\n3   current line  =  29\n4 Exec error : FATAL ERREUR dans ./../femlib/MatriceCreuse_tpl.hpp\n5 cholesky line:\n6    -- number :688\n7  catch an erreur in  solve   = >  set  sol  =  0 !!!!!!!\n8  Catch cholesky PB\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Parallelization\n\t\t\tNext topic: Bibliography \n\t\t\n\t","l":"examples/developers.html"},"22":{"t":"Finite Element","p":"\n\t\t\n   \nFinite Element¶\n\nPeriodic 3D¶\n 1 load \"msh3\"\n 2 load \"medit\"\n 3 \n 4 // Parameters\n 5 searchMethod = 1; // More safe seach algo\n 6 real a  =  1, d  =  0.5, h  =  0.5;\n 7 int nnb  =  7, nni  =  10;\n 8 int nz  =  3;\n 9 func zmin  =  0;\n10 func zmax  =  h;\n11 \n12 // Mesh 2D\n13 border b1(t = 0.5, -0.5){x = a*t; y = -a/2; label = 1;}\n14 border b2(t = 0.5, -0.5){x = a/2; y = a*t; label = 2;}\n15 border b3(t = 0.5, -0.5){x = a*t; y = a/2; label = 3;}\n16 border b4(t = 0.5, -0.5){x = -a/2; y = a*t; label = 4;}\n17 border i1(t = 0, 2.*pi){x = d/2*cos(t); y = -d/2*sin(t); label = 7;}\n18 mesh Th  =  buildmesh(b1(-nnb) + b3(nnb) + b2(-nnb) + b4(nnb) + i1(nni));\n19 \n20 { // Cleaning the memory correctly\n21     int[int] old2new(0:Th.nv-1);\n22     fespace Vh2(Th, P1);\n23     Vh2 sorder  =  x + y;\n24     sort(sorder[], old2new);\n25     int[int] new2old  =  old2new^-1; // Inverse permutation\n26     Th  =  change(Th, renumv = new2old);\n27     sorder[]  =  0:Th.nv-1;\n28 }\n29 {\n30     fespace Vh2(Th, P1);\n31     Vh2 nu;\n32     nu[]  =  0:Th.nv-1;\n33     plot(nu, cmm = \"nu = \", wait = true);\n34 }\n35 \n36 // Mesh 3D\n37 int[int] rup  =  [0, 5], rlow  =  [0, 6], rmid  =  [1, 1, 2, 2, 3, 3, 4, 4, 7, 7], rtet  =  [0, 41];\n38 mesh3 Th3  =  buildlayers(Th, nz, zbound = [zmin, zmax],\n39     reftet = rtet, reffacemid = rmid, reffaceup = rup, reffacelow = rlow);\n40 for(int i  =  1; i < =  6; ++i)\n41     cout << \" int \" << i << \" : \" << int2d(Th3,i)(1.) << \" \" << int2d(Th3,i)(1./area) << endl;\n42 \n43 plot(Th3, wait = true);\n44 medit(\"Th3\", Th3);\n45 \n46 fespace Vh(Th3, P2, periodic = [[1, x, z], [3, x, z], [2, y, z], [4, y, z], [5, x, y], [6, x, y]]);\n\n\n\n\n\nFig. 206 Periodic mesh¶\n\n\n\n\nLagrange multipliers¶\n 1 // Parameters\n 2 func f  =  1 + x - y;\n 3 \n 4 // Mesh\n 5 mesh Th  =  square(10, 10);\n 6 \n 7 // Fespace\n 8 fespace Vh(Th, P1);\n 9 int n  =  Vh.ndof;\n10 int n1  =  n+1;\n11 Vh uh, vh;\n12 \n13 // Problem\n14 varf va (uh, vh)\n15      =  int2d(Th)(\n16           dx(uh)*dx(vh)\n17         + dy(uh)*dy(vh)\n18     )\n19     ;\n20 \n21 varf vL (uh, vh)  =  int2d(Th)(f*vh);\n22 varf vb (uh, vh)  =  int2d(Th)(1.*vh);\n23 \n24 matrix A  =  va(Vh, Vh);\n25 real[int] b  =  vL(0, Vh);\n26 real[int] B  =  vb(0, Vh);\n27 \n28 // Block matrix\n29 matrix AA  =  [ [ A, B ], [ B', 0 ] ];\n30 set(AA, solver = sparsesolver);\n31 \n32 real[int] bb(n+1), xx(n+1), b1(1), l(1);\n33 b1  =  0;\n34 // Builds the right hand side block\n35 bb  =  [b, b1];\n36 \n37 // Solve\n38 xx  =  AA^-1 * bb;\n39 \n40 // Set values\n41 [uh[],l]  =  xx;\n42 \n43 // Display\n44 cout << \" l  =  \" << l(0) << \" , b(u, 1)  = \" << B'*uh[] << endl;\n45 \n46 // Plot\n47 plot(uh);\n\n\n\n\n\nFig. 207 Result¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Mesh Generation\n\t\t\tNext topic: Visualization \n\t\t\n\t","l":"examples/finite-element.html"},"23":{"t":"Examples","p":"\n\t\t\n   \nExamples¶\n\n\n\n\n\t\t\n\t\t\t Previous topic: Whispering gallery modes\n\t\t\tNext topic: Misc \n\t\t\n\t","l":"examples/index.html"},"24":{"t":"Mesh Generation","p":"\n\t\t\n   \nMesh Generation¶\n\nSquare mesh¶\n 1 mesh Th0  =  square(10 ,10);\n 2 \n 3 mesh Th1  =  square(4, 5);\n 4 \n 5 real x0  =  1.2;\n 6 real x1  =  1.8;\n 7 real y0  =  0;\n 8 real y1  =  1;\n 9 int n  =  5;\n10 real m  =  20;\n11 mesh Th2  =  square(n, m, [x0+(x1-x0)*x, y0+(y1-y0)*y]);\n12 \n13 for (int i  =  0; i < 5; ++i){\n14    int[int] labs  =  [11, 12, 13, 14];\n15    mesh Th3  =  square(3, 3, flags = i, label = labs, region = 10);\n16    plot(Th3, wait = 1, cmm = \"square flags  =  \"+i );\n17 }\n\n\n\n\nMesh adaptation¶\n 1 // Parameters\n 2 real eps  =  0.0001;\n 3 real h  =  1;\n 4 real hmin  =  0.05;\n 5 func f  =  10.0*x^3 + y^3 + h*atan2(eps, sin(5.0*y)-2.0*x);\n 6 \n 7 // Mesh\n 8 mesh Th  =  square(5, 5, [-1+2*x, -1+2*y]);\n 9 \n10 // Fespace\n11 fespace Vh(Th,P1);\n12 Vh fh  =  f;\n13 plot(fh);\n14 \n15 // Adaptmesh\n16 for (int i  =  0; i < 2; i++){\n17    Th  =  adaptmesh(Th, fh);\n18    fh  =  f; //old mesh is deleted\n19    plot(Th, fh, wait = true);\n20 }\n\n\n\n\n\n\nFig. 186 Initial mesh¶\n\n\n\n\n\nFig. 187 Adapted mesh¶\n\n\nMesh adaptation\n\n\nMesh adaptation for the Poisson’s problem¶\n 1 // Parameters\n 2 real error  =  0.1;\n 3 \n 4 // Mesh\n 5 border ba(t = 0, 1){x = t; y = 0; label = 1;}\n 6 border bb(t = 0, 0.5){x = 1; y = t; label = 1;}\n 7 border bc(t = 0, 0.5){x = 1-t; y = 0.5; label = 1;}\n 8 border bd(t = 0.5, 1){x = 0.5; y = t; label = 1;}\n 9 border be(t = 0.5, 1){x = 1-t; y = 1; label = 1;}\n10 border bf(t = 0, 1){x = 0; y = 1-t; label = 1;}\n11 mesh Th  =  buildmesh(ba(6) + bb(4) + bc(4) + bd(4) + be(4) + bf(6));\n12 \n13 // Fespace\n14 fespace Vh(Th, P1);\n15 Vh u, v;\n16 \n17 // Function\n18 func f  =  1;\n19 \n20 // Problem\n21 problem Poisson(u, v, solver = CG, eps = 1.e-6)\n22     =  int2d(Th)(\n23         dx(u)*dx(v)\n24       + dy(u)*dy(v)\n25    )\n26    - int2d(Th)(\n27         f*v\n28    )\n29    + on(1, u = 0);\n30 \n31 // Adaptmesh loop\n32 for (int i  =  0; i < 4; i++){\n33    Poisson;\n34    Th  =  adaptmesh(Th, u, err = error);\n35    error  =  error/2;\n36 }\n37 \n38 // Plot\n39 plot(u);\n\n\n\n\n\n\nFig. 188 Initial mesh¶\n\n\n\n\n\nFig. 189 Adapted mesh¶\n\n\n\n\n\nFig. 190 Solution on adapted mesh¶\n\n\nMesh adaptation (Poisson)\n\n\nUniform mesh adaptation¶\n1 mesh Th  =  square(2, 2); // The initial mesh\n2 plot(Th, wait = true);\n3 \n4 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000);\n5 plot(Th, wait = true);\n6 \n7 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000); // More than one time due to the\n8 Th  =  adaptmesh(Th, 1./30., IsMetric = 1, nbvx = 10000); // adaptation bound `maxsubdiv = `\n9 plot(Th, wait = true);\n\n\n\n\n\n\nFig. 191 Initial mesh¶\n\n\n\n\n\nFig. 192 Adapted mesh¶\n\n\nUniform mesh adaptation\n\n\nBorders¶\n 1 {\n 2    int upper  =  1;\n 3    int others  =  2;\n 4    int inner  =  3;\n 5 \n 6    border C01(t = 0, 1){x = 0; y = -1+t; label = upper;}\n 7    border C02(t = 0, 1){x = 1.5-1.5*t; y = -1; label = upper;}\n 8    border C03(t = 0, 1){x = 1.5; y = -t; label = upper;}\n 9    border C04(t = 0, 1){x = 1+0.5*t; y = 0; label = others;}\n10    border C05(t = 0, 1){x = 0.5+0.5*t; y = 0; label = others;}\n11    border C06(t = 0, 1){x = 0.5*t; y = 0; label = others;}\n12    border C11(t = 0, 1){x = 0.5; y = -0.5*t; label = inner;}\n13    border C12(t = 0, 1){x = 0.5+0.5*t; y = -0.5; label = inner;}\n14    border C13(t = 0, 1){x = 1; y = -0.5+0.5*t; label = inner;}\n15 \n16    int n  =  10;\n17    plot(C01(-n) + C02(-n) + C03(-n) + C04(-n) + C05(-n)\n18       + C06(-n) + C11(n) + C12(n) + C13(n), wait = true);\n19 \n20    mesh Th  =  buildmesh(C01(-n) + C02(-n) + C03(-n) + C04(-n) + C05(-n)\n21       + C06(-n) + C11(n) + C12(n) + C13(n));\n22 \n23    plot(Th, wait = true);\n24 \n25    cout << \"Part 1 has region number \" << Th(0.75, -0.25).region << endl;\n26    cout << \"Part 2 has redion number \" << Th(0.25, -0.25).region << endl;\n27 }\n28 \n29 {\n30    border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n31    border b(t = 0, 2*pi){x = 0.3+0.3*cos(t); y = 0.3*sin(t); label = 2;}\n32    plot(a(50) + b(30)); //to see a plot of the border mesh\n33    mesh Thwithouthole  =  buildmesh(a(50) + b(30));\n34    mesh Thwithhole  =  buildmesh(a(50) + b(-30));\n35    plot(Thwithouthole);\n36    plot(Thwithhole);\n37 }\n38 \n39 {\n40    real r = 1;\n41    border a(t = 0, 2*pi){x = r*cos(t); y = r*sin(t); label = 1;}\n42    r = 0.3;\n43    border b(t = 0, 2*pi){x = r*cos(t); y = r*sin(t); label = 1;}\n44    //  mesh Thwithhole  =  buildmesh(a(50) + b(-30)); // do not do this because the two\n45    // circles have the same radius  =  $0.3$\n46 }\n\n\n\n\n\n\nFig. 193 Mesh with two regions¶\n\n\n\n\n\nFig. 194 Mesh without a hole¶\n\n\n\n\n\nFig. 195 Mesh with a hole¶\n\n\nBorders\n\n\nChange¶\n 1 verbosity = 3;\n 2 \n 3 // Mesh\n 4 mesh Th1  =  square(10, 10);\n 5 mesh Th2  =  square(20, 10, [x+1, y]);\n 6 \n 7 int[int] r1 = [2, 0];\n 8 plot(Th1, wait = true);\n 9 \n10 Th1  =  change(Th1, label = r1); // Change edges' label from 2 to 0\n11 plot(Th1, wait = true);\n12 \n13 int[int] r2 = [4, 0];\n14 Th2  =  change(Th2, label = r2); // Change edges' label from 4 to 0\n15 plot(Th2, wait = true);\n16 \n17 mesh Th  =  Th1 + Th2; // 'gluing together' Th1 and Th2 meshes\n18 cout << \"nb lab  =  \" << int1d(Th1,1,3,4)(1./lenEdge)+int1d(Th2,1,2,3)(1./lenEdge)\n19    << \"  =  =  \" << int1d(Th,1,2,3,4)(1./lenEdge) << \"  =  =  \" << ((10+20)+10)*2 << endl;\n20 plot(Th, wait = true);\n21 \n22 fespace Vh(Th, P1);\n23 Vh u, v;\n24 \n25 macro Grad(u) [dx(u),dy(u)] // Definition of a macro\n26 \n27 solve P(u, v)\n28     =  int2d(Th)(\n29         Grad(u)'*Grad(v)\n30    )\n31    -int2d(Th)(\n32         v\n33    )\n34    + on(1, 3, u = 0)\n35    ;\n36 \n37 plot(u, wait = 1);\n\n\n\n\n\nFig. 196 Result¶\n\n\n\n\nCube¶\n 1 load \"msh3\"\n 2 \n 3 int[int] l6  =  [37, 42, 45, 40, 25, 57];\n 4 int r11  =  11;\n 5 mesh3 Th  =  cube(4, 5, 6, [x*2-1, y*2-1, z*2-1], label = l6, flags  = 3, region = r11);\n 6 \n 7 cout << \"Volume  =  \" << Th.measure << \", border area  =  \" << Th.bordermeasure << endl;\n 8 \n 9 int err  =  0;\n10 for(int i  =  0; i < 100; ++i){\n11    real s  =  int2d(Th,i)(1.);\n12    real sx  =  int2d(Th,i)(x);\n13    real sy  =  int2d(Th,i)(y);\n14    real sz  =  int2d(Th,i)(z);\n15 \n16    if(s){\n17       int ix  =  (sx/s+1.5);\n18       int iy  =  (sy/s+1.5);\n19       int iz  =  (sz/s+1.5);\n20       int ii  =  (ix + 4*(iy+1) + 16*(iz+1) );\n21       //value of ix,iy,iz  = > face min 0, face max 2, no face 1\n22       cout << \"Label  =  \" << i << \", s  =  \" << s << \" \" << ix << iy << iz << \" : \" << ii << endl;\n23       if( i ! =  ii ) err++;\n24    }\n25 }\n26 real volr11  =  int3d(Th,r11)(1.);\n27 cout << \"Volume region  =  \" << 11 << \": \" << volr11 << endl;\n28 if((volr11 - Th.measure )>1e-8) err++;\n29 plot(Th, fill = false);\n30 cout << \"Nb err  =  \" << err << endl;\n31 assert(err =  = 0);\n\n\n\n\n\nFig. 197 Cube¶\n\n\n\n\nEmpty mesh¶\n 1 {\n 2    border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n 3    mesh Th  =  buildmesh(a(20));\n 4    Th  =  emptymesh(Th);\n 5    plot(Th);\n 6 }\n 7 {\n 8    mesh Th  =  square(10, 10);\n 9    int[int] ssd(Th.nt);\n10    // Builds the pseudo region numbering\n11    for(int i  =  0; i < ssd.n; i++){\n12       int iq  =  i/2; // Because we have 2 triangles per quad\n13       int ix  =  iq%10;\n14       int iy  =  iq/10;\n15       ssd[i]  =  1 + (ix> = 5) + (iy> = 5)*2;\n16    }\n17    // Builds an emtpy mesh with all edges that satisfy e = T1 cap T2 and ssd[T1] ! =  ssd[T2]\n18    Th  =  emptymesh(Th, ssd);\n19    // Plot\n20    plot(Th);\n21 }\n\n\n\n\n\n\nFig. 198 Empty square¶\n\n\n\n\n\nFig. 199 Empty diamond¶\n\n\nEmpty mesh\n\n\n3 points¶\n 1 // Square for Three-Point Bend Specimens fixed on Fix1, Fix2\n 2 // It will be loaded on Load\n 3 real a  =  1, b  =  5, c  =  0.1;\n 4 int n  =  5, m  =  b*n;\n 5 border Left(t = 0, 2*a){x = -b; y = a-t;}\n 6 border Bot1(t = 0, b/2-c){x = -b+t; y = -a;}\n 7 border Fix1(t = 0, 2*c){x = -b/2-c+t; y = -a;}\n 8 border Bot2(t = 0, b-2*c){x = -b/2+c+t; y = -a;}\n 9 border Fix2(t = 0, 2*c){x = b/2-c+t; y = -a;}\n10 border Bot3(t = 0, b/2-c){x = b/2+c+t; y = -a;}\n11 border Right(t = 0, 2*a){x = b; y = -a+t;}\n12 border Top1(t = 0, b-c){x = b-t; y = a;}\n13 border Load(t = 0, 2*c){x = c-t; y = a;}\n14 border Top2(t = 0, b-c){x = -c-t; y = a;}\n15 \n16 mesh Th  =  buildmesh(Left(n) + Bot1(m/4) + Fix1(5) + Bot2(m/2)\n17    + Fix2(5) + Bot3(m/4) + Right(n) + Top1(m/2) + Load(10) + Top2(m/2));\n18 plot(Th, bw = true);\n\n\n\n\n\nFig. 200 3 Points¶\n\n\n\n\nBezier¶\n 1 // A cubic Bezier curve connecting two points with two control points\n 2 func real bzi(real p0, real p1, real q1, real q2, real t){\n 3    return p0*(1-t)^3 + q1*3*(1-t)^2*t + q2*3*(1-t)*t^2 + p1*t^3;\n 4 }\n 5 \n 6 real[int] p00  =  [0, 1], p01  =  [0, -1], q00  =  [-2, 0.1], q01  =  [-2, -0.5];\n 7 real[int] p11  =  [1,-0.9], q10  =  [0.1, -0.95], q11 = [0.5, -1];\n 8 real[int] p21  =  [2, 0.7], q20  =  [3, -0.4], q21  =  [4, 0.5];\n 9 real[int] q30  =  [0.5, 1.1], q31  =  [1.5, 1.2];\n10 border G1(t = 0, 1){\n11    x = bzi(p00[0], p01[0], q00[0], q01[0], t);\n12    y = bzi(p00[1], p01[1], q00[1], q01[1], t);\n13 }\n14 border G2(t = 0, 1){\n15    x = bzi(p01[0], p11[0], q10[0], q11[0], t);\n16    y = bzi(p01[1], p11[1], q10[1], q11[1], t);\n17 }\n18 border G3(t = 0, 1){\n19    x = bzi(p11[0], p21[0], q20[0], q21[0], t);\n20    y = bzi(p11[1], p21[1], q20[1], q21[1], t);\n21 }\n22 border G4(t = 0, 1){\n23    x = bzi(p21[0], p00[0], q30[0], q31[0], t);\n24    y = bzi(p21[1], p00[1], q30[1], q31[1], t);\n25 }\n26 int m  =  5;\n27 mesh Th  =  buildmesh(G1(2*m) + G2(m) + G3(3*m) + G4(m));\n28 plot(Th, bw = true);\n\n\n\n\n\nFig. 201 Bezier¶\n\n\n\n\nBuild layer mesh¶\n 1 load \"msh3\"\n 2 load \"tetgen\"\n 3 load \"medit\"\n 4 \n 5 // Parameters\n 6 int C1  =  99;\n 7 int C2  =  98;\n 8 \n 9 // 2D mesh\n10 border C01(t = 0, pi){x = t; y = 0; label = 1;}\n11 border C02(t = 0, 2*pi){ x = pi; y = t; label = 1;}\n12 border C03(t = 0, pi){ x = pi-t; y = 2*pi; label = 1;}\n13 border C04(t = 0, 2*pi){ x = 0; y = 2*pi-t; label = 1;}\n14 \n15 border C11(t = 0, 0.7){x = 0.5+t; y = 2.5; label = C1;}\n16 border C12(t = 0, 2){x = 1.2; y = 2.5+t; label = C1;}\n17 border C13(t = 0, 0.7){x = 1.2-t; y = 4.5; label = C1;}\n18 border C14(t = 0, 2){x = 0.5; y = 4.5-t; label = C1;}\n19 \n20 border C21(t = 0, 0.7){x = 2.3+t; y = 2.5; label = C2;}\n21 border C22(t = 0, 2){x = 3; y = 2.5+t; label = C2;}\n22 border C23(t = 0, 0.7){x = 3-t; y = 4.5; label = C2;}\n23 border C24(t = 0, 2){x = 2.3; y = 4.5-t; label = C2;}\n24 \n25 mesh Th  =  buildmesh(C01(10) + C02(10) + C03(10) + C04(10)\n26    + C11(5) + C12(5) + C13(5) + C14(5)\n27    + C21(-5) + C22(-5) + C23(-5) + C24(-5));\n28 \n29 mesh Ths  =  buildmesh(C01(10) + C02(10) + C03(10) + C04(10)\n30    + C11(5) + C12(5) + C13(5) + C14(5));\n31 \n32 // Construction of a box with one hole and two regions\n33 func zmin  =  0.;\n34 func zmax  =  1.;\n35 int MaxLayer  =  10;\n36 \n37 func XX  =  x*cos(y);\n38 func YY  =  x*sin(y);\n39 func ZZ  =  z;\n40 \n41 int[int] r1  =  [0, 41], r2  =  [98, 98, 99, 99, 1, 56];\n42 int[int] r3  =  [4, 12]; // Change upper surface mesh's triangles labels\n43 // generated by the 2D mesh's triangles Th\n44 // from label 4 to label 12\n45 int[int] r4  =  [4, 45]; // Change lower surface mesh's triangles labels\n46 // generated by the 2D mesh's triangles Th\n47 // from label 4 to label 45\n48 \n49 mesh3 Th3  =  buildlayers(Th, MaxLayer, zbound = [zmin, zmax], region = r1,\n50    labelmid = r2, labelup = r3, labeldown = r4);\n51 medit(\"box 2 regions 1 hole\", Th3);\n52 \n53 // Construction of a sphere with TetGen\n54 func XX1  =  cos(y)*sin(x);\n55 func YY1  =  sin(y)*sin(x);\n56 func ZZ1  =  cos(x);\n57 \n58 real[int] domain  =  [0., 0., 0., 0, 0.001];\n59 string test  =  \"paACQ\";\n60 cout << \"test  =  \" << test << endl;\n61 mesh3 Th3sph  =  tetgtransfo(Ths, transfo = [XX1, YY1, ZZ1],\n62    switch = test, nbofregions = 1, regionlist = domain);\n63 medit(\"sphere 2 regions\", Th3sph);\n\n\n\n\n\n\nFig. 202 Box with a hole¶\n\n\n\n\n\nFig. 203 Sphere¶\n\n\nBuild layer mesh\n\n\nSphere¶\n 1 // Parameter\n 2 real hh  =  0.1;\n 3 \n 4 // Mesh 2D\n 5 mesh Th  =  square(10, 20, [x*pi-pi/2, 2*y*pi]); // ]-pi/2, pi/2[X]0, 2pi[\n 6 // A parametrization of a sphere\n 7 func f1  =  cos(x)*cos(y);\n 8 func f2  =  cos(x)*sin(y);\n 9 func f3  =  sin(x);\n10 // Partial derivative of the parametrization DF\n11 func f1x  =  sin(x)*cos(y);\n12 func f1y  =  -cos(x)*sin(y);\n13 func f2x  =  -sin(x)*sin(y);\n14 func f2y  =  cos(x)*cos(y);\n15 func f3x  =  cos(x);\n16 func f3y  =  0;\n17 //M  =  DF^t DF\n18 func m11  =  f1x^2 + f2x^2 + f3x^2;\n19 func m21  =  f1x*f1y + f2x*f2y + f3x*f3y;\n20 func m22  =  f1y^2 + f2y^2 + f3y^2;\n21 \n22 // Periodic condition\n23 func perio  =  [[4, y], [2, y], [1, x], [3, x]];\n24 \n25 // Mesh adaptation\n26 real vv  =  1/square(hh);\n27 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, inquire = 1, periodic = perio);\n28 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n29 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n30 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n31 \n32 // Sphere\n33 mesh3 Th3  =  movemesh23(Th, transfo = [f1, f2, f3]);\n34 plot(Th3);\n\n\n\n\n\n\nFig. 204 Initial mesh¶\n\n\n\n\n\nFig. 205 Sphere¶\n\n\nSphere\n\n\n\n\n\t\t\n\t\t\t Previous topic: Misc\n\t\t\tNext topic: Finite Element \n\t\t\n\t","l":"examples/mesh-generation.html"},"25":{"t":"Misc","p":"\n\t\t\n   \nMisc¶\n\nPoisson’s Equation¶\n 1 // Parameters\n 2 int nn  =  20;\n 3 real L  =  1.;\n 4 real H  =  1.;\n 5 real l  =  0.5;\n 6 real h  =  0.5;\n 7 \n 8 func f  =  1.;\n 9 func g  =  0.;\n10 \n11 int NAdapt  =  10;\n12 \n13 // Mesh\n14 border b1(t = 0, L){x = t; y = 0;};\n15 border b2(t = 0, h){x = L; y = t;};\n16 border b3(t = L, l){x = t; y = h;};\n17 border b4(t = h, H){x = l; y = t;};\n18 border b5(t = l, 0){x = t; y = H;};\n19 border b6(t = H, 0){x = 0; y = t;};\n20 \n21 mesh Th  =  buildmesh(b1(nn*L) + b2(nn*h) + b3(nn*(L-l)) + b4(nn*(H-h)) + b5(nn*l) + b6(nn*H));\n22 \n23 // Fespace\n24 fespace Vh(Th, P1); // Change P1 to P2 to test P2 finite element\n25 Vh u, v;\n26 \n27 // Macro\n28 macro grad(u) [dx(u), dy(u)] //\n29 \n30 // Problem\n31 problem Poisson (u, v, solver = CG, eps = -1.e-6)\n32     =  int2d(Th)(\n33         grad(u)' * grad(v)\n34    )\n35    + int2d(Th)(\n36         f * v\n37    )\n38    + on(b1, b2, b3, b4, b5, b6, u = g)\n39    ;\n40 \n41 // Mesh adaptation iterations\n42 real error  =  0.1;\n43 real coef  =  0.1^(1./5.);\n44 for (int i  =  0; i < NAdapt; i++){\n45    // Solve\n46    Poisson;\n47 \n48    // Plot\n49    plot(Th, u);\n50 \n51    // Adaptmesh\n52    Th  =  adaptmesh(Th, u, inquire = 1, err = error);\n53    error  =  error * coef;\n54 }\n\n\n\n\n\n\nFig. 181 Adapted mesh¶\n\n\n\n\n\nFig. 182 Solution on adapted mesh¶\n\n\nPoisson\n\n\nPoisson’s equation 3D¶\n 1 load \"tetgen\"\n 2 \n 3 // Parameters\n 4 real hh  =  0.1;\n 5 func ue  =  2.*x*x + 3.*y*y + 4.*z*z + 5.*x*y + 6.*x*z + 1.;\n 6 func f =  -18.;\n 7 \n 8 // Mesh\n 9 mesh Th  =  square(10, 20, [x*pi-pi/2, 2*y*pi]); // ]-pi/2, pi/2[X]0,2pi[\n10 func f1  =  cos(x)*cos(y);\n11 func f2  =  cos(x)*sin(y);\n12 func f3  =  sin(x);\n13 func f1x  =  sin(x)*cos(y);\n14 func f1y  =  -cos(x)*sin(y);\n15 func f2x  =  -sin(x)*sin(y);\n16 func f2y  =  cos(x)*cos(y);\n17 func f3x  =  cos(x);\n18 func f3y  =  0;\n19 func m11  =  f1x^2 + f2x^2 + f3x^2;\n20 func m21  =  f1x*f1y + f2x*f2y + f3x*f3y;\n21 func m22  =  f1y^2 + f2y^2 + f3y^2;\n22 func perio  =  [[4, y], [2, y], [1, x], [3, x]];\n23 real vv  =  1/square(hh);\n24 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n25 Th  =  adaptmesh(Th, m11*vv, m21*vv, m22*vv, IsMetric = 1, periodic = perio);\n26 plot(Th);\n27 \n28 real[int] domain  =  [0., 0., 0., 1, 0.01];\n29 mesh3 Th3  =  tetgtransfo(Th, transfo = [f1, f2, f3], nbofregions = 1, regionlist = domain);\n30 plot(Th3);\n31 \n32 border cc(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n33 mesh Th2  =  buildmesh(cc(50));\n34 \n35 // Fespace\n36 fespace Vh(Th3, P23d);\n37 Vh u, v;\n38 Vh uhe  =  ue;\n39 cout << \"uhe min: \" << uhe[].min << \" - max: \" << uhe[].max << endl;\n40 cout << uhe(0.,0.,0.) << endl;\n41 \n42 fespace Vh2(Th2, P2);\n43 Vh2 u2, u2e;\n44 \n45 // Macro\n46 macro Grad3(u) [dx(u), dy(u), dz(u)] //\n47 \n48 // Problem\n49 problem Lap3d (u, v, solver = CG)\n50      =  int3d(Th3)(\n51           Grad3(v)' * Grad3(u)\n52     )\n53     - int3d(Th3)(\n54           f * v\n55     )\n56     + on(0, 1, u = ue)\n57     ;\n58 \n59 // Solve\n60 Lap3d;\n61 cout << \"u min: \" << u[]. min << \" - max: \" << u[].max << endl;\n62 \n63 // Error\n64 real err  =  int3d(Th3)(square(u-ue));\n65 cout << int3d(Th3)(1.) << \"  =  \" << Th3.measure << endl;\n66 Vh d  =  ue - u;\n67 cout << \" err  =  \" << err << \" - diff l^intfy  =  \" << d[].linfty << endl;\n68 \n69 // Plot\n70 u2  =  u;\n71 u2e  =  ue;\n72 plot(u2, wait = true);\n73 plot(u2, u2e,wait = true);\n\n\n\n\n\nFig. 183 Iso-surfaces of the solution¶\n\n\n\n\nStokes Equation on a cube¶\n 1 load \"msh3\"\n 2 load \"medit\" // Dynamically loaded tools for 3D\n 3 \n 4 // Parameters\n 5 int nn  =  8;\n 6 \n 7 // Mesh\n 8 mesh Th0  =  square(nn, nn);\n 9 int[int] rup  =  [0, 2];\n10 int[int] rdown  =  [0, 1];\n11 int[int] rmid  =  [1, 1, 2, 1, 3, 1, 4, 1];\n12 real zmin  =  0, zmax  =  1;\n13 mesh3 Th  =  buildlayers(Th0, nn, zbound = [zmin, zmax],\n14     reffacemid = rmid, reffaceup = rup, reffacelow = rdown);\n15 \n16 medit(\"c8x8x8\", Th); // 3D mesh visualization with medit\n17 \n18 // Fespaces\n19 fespace Vh2(Th0, P2);\n20 Vh2 ux, uz, p2;\n21 \n22 fespace VVh(Th, [P2, P2, P2, P1]);\n23 VVh [u1, u2, u3, p];\n24 VVh [v1, v2, v3, q];\n25 \n26 // Macro\n27 macro Grad(u) [dx(u), dy(u), dz(u)] //\n28 macro div(u1,u2,u3) (dx(u1) + dy(u2) + dz(u3)) //\n29 \n30 // Problem (directly solved)\n31 solve vStokes ([u1, u2, u3, p], [v1, v2, v3, q])\n32      =  int3d(Th, qforder = 3)(\n33           Grad(u1)' * Grad(v1)\n34         + Grad(u2)' * Grad(v2)\n35         + Grad(u3)' * Grad(v3)\n36         - div(u1, u2, u3) * q\n37         - div(v1, v2, v3) * p\n38         + 1e-10 * q * p\n39     )\n40     + on(2, u1 = 1., u2 = 0, u3 = 0)\n41     + on(1, u1 = 0, u2 = 0, u3 = 0)\n42     ;\n43 \n44 // Plot\n45 plot(p, wait = 1, nbiso = 5); // 3D visualization of pressure isolines\n46 \n47 // See 10 plan of the velocity in 2D\n48 for(int i  =  1; i < 10; i++){\n49     // Cut plane\n50     real yy  =  i/10.;\n51     // 3D to 2D interpolation\n52     ux  =  u1(x,yy,y);\n53     uz  =  u3(x,yy,y);\n54     p2  =  p(x,yy,y);\n55     // Plot\n56     plot([ux, uz], p2, cmm = \"cut y  =  \"+yy, wait =  1);\n57 }\n\n\n\n\n\n\nFig. 184 Solution¶\n\n\n\n\n\nFig. 185 Associated mesh¶\n\n\nStokes\n\n\nCavity¶\n 1 //Parameters\n 2 int m  =  300;\n 3 real L  =  1;\n 4 real rho  =  500.;\n 5 real mu  =  0.1;\n 6 \n 7 real uin  =  1;\n 8 func fx  =  0;\n 9 func fy  =  0;\n10 int[int] noslip  =  [1, 2, 4];\n11 int[int] inflow  =  [3];\n12 \n13 real dt  =  0.1;\n14 real T  =  50;\n15 \n16 real eps  =  1e-3;\n17 \n18 //Macros\n19 macro div(u) (dx(u#x) + dy(u#y))//\n20 macro grad(u) [dx(u), dy(u)]//\n21 macro Grad(u) [grad(u#x), grad(u#y)]//\n22 \n23 //Time\n24 real cpu;\n25 real tabcpu;\n26 \n27 //mesh\n28 border C1(t  =  0, L){ x  =  t; y  =  0; label  =  1; }\n29 border C2(t  =  0, L){ x  =  L; y  =  t; label  =  2; }\n30 border C3(t  =  0, L){ x  =  L-t; y  =  L; label  =  3; }\n31 border C4(t  =  0, L){ x  =  0; y  =  L-t; label  =  4; }\n32 mesh th  =  buildmesh( C1(m) + C2(m) + C3(m) + C4(m) );\n33 \n34 fespace UPh(th, [P2,P2,P1]);\n35 UPh [ux, uy, p];\n36 UPh [uhx, uhy, ph];\n37 UPh [upx, upy, pp];\n38 \n39 //Solve\n40 varf navierstokes([ux, uy, p], [uhx, uhy, ph])\n41    =  int2d(th)(\n42       rho/dt* [ux, uy]'* [uhx, uhy]\n43     + mu* (Grad(u):Grad(uh))\n44     - p* div(uh)\n45     - ph* div(u)\n46     - 1e-10 *p*ph\n47     )\n48 \n49   + int2d(th) (\n50       [fx, fy]' * [uhx, uhy]\n51     + rho/dt* [convect([upx, upy], -dt, upx), convect([upx, upy], -dt, upy)]'* [uhx, uhy]\n52     )\n53 \n54   + on(noslip, ux = 0, uy = 0)\n55   + on(inflow, ux = uin, uy = 0)\n56   ;\n57 \n58 //Initialization\n59 [ux, uy, p] = [0, 0, 0];\n60 \n61 matrix<real> NS  =  navierstokes(UPh, UPh, solver = sparsesolver);\n62 real[int] NSrhs  =  navierstokes(0, UPh);\n63 \n64 //Time loop\n65 for(int j  =  0; j < T/dt; j++){\n66   [upx, upy, pp] = [ux, uy, p];\n67 \n68   NSrhs  =  navierstokes(0, UPh);\n69   ux[]  =  NS^-1 * NSrhs;\n70 \n71   plot( [ux,uy], p, wait = 0, cmm = j);\n72 }\n73 \n74 //CPU\n75 cout << \" CPU  =  \" << clock()-cpu << endl ;\n76 tabcpu  =  clock()-cpu;\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Examples\n\t\t\tNext topic: Mesh Generation \n\t\t\n\t","l":"examples/misc.html"},"26":{"t":"Parallelization","p":"\n\t\t\n   \nParallelization¶\n\nMPI-GMRES 2D¶\nTo launch this script, use for example:\n1 ff-mpirun -np 12 MPIGMRES2D.edp -d 1 -k 1 -gmres 2 -n 50\n\n\n  1 //usage :\n  2 //ff-mpirun [mpi parameter] MPIGMRES2d.edp [-glut ffglut] [-n N] [-k K] [-d D] [-ns] [-gmres [0|1]\n  3 //arguments:\n  4 //-glut ffglut : to see graphicaly the process\n  5 //-n N: set the mesh cube split NxNxN\n  6 //-d D: set debug flag D must be one for mpiplot\n  7 //-k K: to refined by K all element\n  8 //-ns: remove script dump\n  9 //-gmres\n 10 //0: use iterative schwarz algo.\n 11 //1: Algo GMRES on residu of schwarz algo\n 12 //2: DDM GMRES\n 13 //3: DDM GMRES with coarse grid preconditionner (Good one)\n 14 \n 15 load \"MPICG\"\n 16 load \"medit\"\n 17 load \"metis\"\n 18 include \"getARGV.idp\"\n 19 include \"MPIplot.idp\"\n 20 include \"MPIGMRESmacro.idp\"\n 21 \n 22 searchMethod  =  0; //more safe seach algo (warning can be very expensive in case of lot of ouside point)\n 23 assert(version > =  3.11); //need at least v3.11\n 24 real[int] ttt(10);\n 25 int ittt = 0;\n 26 macro settt {ttt[ittt++]  =  mpiWtime();}//\n 27 \n 28 // Arguments\n 29 verbosity  =  getARGV(\"-vv\", 0);\n 30 int vdebug  =  getARGV(\"-d\", 1);\n 31 int ksplit  =  getARGV(\"-k\", 3);\n 32 int nloc  =  getARGV(\"-n\", 10);\n 33 string sff  =  getARGV(\"-p\", \"\");\n 34 int gmres  =  getARGV(\"-gmres\", 2);\n 35 bool dplot  =  getARGV(\"-dp\", 0);\n 36 int nC  =  getARGV(\"-N\", max(nloc/10, 4));\n 37 \n 38 if (mpirank =  = 0 && verbosity){\n 39     cout << \"ARGV: \";\n 40     for (int i  =  0; i < ARGV.n; ++i)\n 41         cout << ARGV[i] << \" \";\n 42     cout << endl;\n 43 }\n 44 \n 45 if(mpirank =  = 0 && verbosity)\n 46 cout << \" vdebug: \" << vdebug << \", kspilt \"<< ksplit << \", nloc \"<< nloc << \", sff \"<< sff << \".\" << endl;\n 47 \n 48 // Parameters\n 49 int withplot  =  0;\n 50 bool withmetis  =  1;\n 51 bool RAS  =  1;\n 52 string sPk  =  \"P2-2gd\";\n 53 func Pk  =  P2;\n 54 int sizeoverlaps  =  1; //size of overlap\n 55 int[int] l111  =  [1, 1, 1, 1]; //mesh labels\n 56 \n 57 // MPI function\n 58 func bool plotMPIall(mesh &Th, real[int] &u, string cm){\n 59     if(vdebug)\n 60         PLOTMPIALL(mesh, Pk, Th, u, {cmm = cm, nbiso = 20, fill = 1, dim = 3, value = 1});\n 61     return 1;\n 62 }\n 63 \n 64 // MPI\n 65 mpiComm comm(mpiCommWorld,0,0); //trick : make a no split mpiWorld\n 66 \n 67 int npart  =  mpiSize(comm); //total number of partion\n 68 int ipart  =  mpiRank(comm); //current partition number\n 69 \n 70 int njpart  =  0; //Number of part with intersection (a jpart) with ipart without ipart\n 71 int[int] jpart(npart); //list of jpart\n 72 if(ipart =  = 0)\n 73     cout << \" Final N  =  \" << ksplit*nloc << \", nloc  =  \" << nloc << \", split  =  \" << ksplit << endl;\n 74 settt\n 75 \n 76 // Mesh\n 77 mesh Thg  =  square(nloc, nloc, label = l111);\n 78 mesh ThC  =  square(nC, nC, label = l111);// Coarse mesh\n 79 \n 80 mesh Thi, Thin; //with overlap, without olverlap\n 81 \n 82 // Fespace\n 83 fespace Phg(Thg, P0);\n 84 Phg part;\n 85 \n 86 fespace Vhg(Thg, P1);\n 87 Vhg unssd; //boolean function: 1 in the subdomain, 0 elswhere\n 88 \n 89 fespace VhC(ThC, P1); // of the coarse problem\n 90 \n 91 // Partitioning\n 92 {\n 93     int[int] nupart(Thg.nt);\n 94     nupart  =  0;\n 95     if (npart > 1 && ipart  =  =  0)\n 96         metisdual(nupart, Thg, npart);\n 97 \n 98     broadcast(processor(0, comm), nupart);\n 99     for(int i  =  0; i < nupart.n; ++i)\n100         part[][i]  =  nupart[i];\n101 }\n102 \n103 if (withplot > 1)\n104     plot(part, fill = 1, cmm = \"dual\", wait = 1);\n105 \n106 // Overlapping partition\n107 Phg suppi  =  abs(part-ipart) < 0.1;\n108 \n109 Thin  =  trunc(Thg, suppi>0, label = 10); // non-overlapping mesh, interfaces have label 10\n110 int nnn  =  sizeoverlaps*2;// to be sure\n111 AddLayers(Thg, suppi[], nnn, unssd[]); //see above! suppi and unssd are modified\n112 unssd[] * =  nnn; //to put value nnn a 0\n113 real nnn0  =  nnn - sizeoverlaps + 0.001;\n114 Thi  =  trunc(Thg, unssd>nnn0, label = 10); //overlapping mesh, interfaces have label 10\n115 \n116 settt\n117 \n118 // Fespace\n119 fespace Vhi(Thi,P1);\n120 int npij  =  npart;\n121 Vhi[int] pij(npij); //local partition of unit + pii\n122 Vhi pii;\n123 \n124 real nnn1  =  +0.001;\n125 {\n126     /*\n127     construction of the partition of the unit,\n128     let phi_i P1 FE function 1 on Thin and zero ouside of Thi and positive\n129     the partition is build with\n130     p_i  =  phi_i/ \\sum phi_i\n131 \n132     to build the partition of one domain i\n133     we nned to find all j such that supp(phi_j) \\cap supp(phi_j) is not empty\n134     < = > int phi_j\n135     */\n136     //build a local mesh of thii such that all computation of the unit partition are\n137     //exact in thii\n138     mesh Thii  =  trunc(Thg, unssd>nnn1, label = 10); //overlapping mesh, interfaces have label 10\n139 \n140     {\n141         //find all j mes (supp(p_j) cap supp(p_i)) >0\n142         //compute all phi_j on Thii\n143         //remark: supp p_i include in Thi\n144 \n145         // Fespace\n146         fespace Phii(Thii, P0);\n147         fespace Vhii(Thii, P1);\n148         Vhi sumphi  =  0;\n149         Vhii phii  =  0;\n150 \n151         jpart  =  0;\n152         njpart  =  0;\n153         int nlayer  =  RAS ? 1 : sizeoverlaps;\n154         if (ipart  =  =  0)\n155             cout << \"nlayer  =  \" << nlayer << endl;\n156         pii  =  max(unssd-nnn+nlayer, 0.)/nlayer;\n157         if(dplot)\n158             plot(pii, wait = 1, cmm = \" 0000\");\n159         sumphi[] + =  pii[];\n160         if(dplot)\n161             plot(sumphi, wait = 1, cmm = \" summ 0000\");\n162 \n163         real epsmes  =  1e-10*Thii.area;\n164         for (int i  =  0; i < npart; ++i)\n165             if (i ! =  ipart){\n166             Phii suppii  =  abs(i-part) < 0.2;\n167             if (suppii[].max > 0.5){\n168                 AddLayers(Thii, suppii[], nlayer, phii[]);\n169                 assert(phii[].min > =  0);\n170                 real interij  =  int2d(Thi)(phii);\n171                 if (interij > epsmes){\n172                     pij[njpart]  =  abs(phii);\n173                     if(vdebug > 2)\n174                         cout << \" ***** \" << int2d(Thi)(real(pij[njpart])<0) << \" \" <<pij[njpart][].min << \" \" << phii[].min << endl;\n175                     assert(int2d(Thi)(real(pij[njpart]) < 0)  =  =  0);\n176                     if(dplot)\n177                         plot(pij[njpart], wait = 1, cmm = \" j  =  \"+ i + \" \" + njpart);\n178                     sumphi[] + =  pij[njpart][];\n179                     if(dplot)\n180                         plot(sumphi, wait = 1, cmm = \" sum j  =  \"+ i + \" \" + njpart);\n181                     jpart[njpart++]  =  i;\n182                 }\n183             }\n184         }\n185 \n186         if(dplot)\n187             plot(sumphi, wait = 1, dim = 3, cmm = \"sum \", fill = 1);\n188         pii[]  =  pii[] ./ sumphi[];\n189         for (int j  =  0; j < njpart; ++j)\n190             pij[j][]  =  pij[j][] ./ sumphi[];\n191         jpart.resize(njpart);\n192         for (int j  =  0; j < njpart; ++j)\n193             assert(pij[j][].max < =  1);\n194         {\n195             cout << ipart << \" number of jpart \" << njpart << \" : \";\n196             for (int j  =  0; j < njpart; ++j)\n197                 cout << jpart[j] << \" \";\n198             cout << endl;\n199         }\n200         sumphi[]  =  pii[];\n201         for (int j  =  0; j < njpart; ++j)\n202             sumphi[] + =  pij[j][];\n203         if(vdebug > 2)\n204             cout << \"sum min \" << sumphi[].min << \" \" << sumphi[].max << endl;\n205         assert(sumphi[].min > 1.-1e-6 && sumphi[].max < 1.+1e-6);\n206     }\n207 } //Thii is remove here\n208 // end of the construction of the local partition of the unity ...\n209 // on Thi\n210 if (ipart  =  =  0)\n211     cout << \"End build partition\" << endl;\n212 \n213 // Computation of number of intersection\n214 //here pii and the pij is the local partition of the unit on\n215 //Thi (mesh with overlap)\n216 if ( dplot){\n217     plot(Thi, wait = 1);\n218     for(int j  =  0; j < njpart; ++j)\n219         plot(pij[j], cmm = \" j = \"+j, wait = 1);\n220 }\n221 \n222 //Partition of the unity on Thi\n223 //computation of message\n224 //all j > we have to receive\n225 //data on intersection of the support of pij[0] and pij[j]\n226 settt\n227 \n228 if(vdebug)\n229     plotMPIall(Thi, pii[], \"pi_i\");\n230 \n231 mesh[int] aThij(njpart);\n232 matrix Pii;\n233 matrix[int] sMj(njpart); //M of send to j\n234 matrix[int] rMj(njpart); //M to recv from j\n235 fespace Whi(Thi, Pk);\n236 mesh Thij  =  Thi;\n237 fespace Whij(Thij, Pk);//\n238 \n239 //construction of the mesh intersect i,j part\n240 for(int jp  =  0; jp < njpart; ++jp)\n241     aThij[jp]  =  trunc(Thi, pij[jp] > 1e-6, label = 10); //mesh of the supp of pij\n242 \n243 for(int jp  =  0; jp < njpart; ++jp)\n244     aThij[jp]  =  trunc(aThij[jp], 1, split = ksplit);\n245 \n246 Thi  =  trunc(Thi, 1, split = ksplit);\n247 \n248 settt\n249 \n250 if (ipart  =  =  0)\n251     cout << \"End build mesh intersection\" << endl;\n252 \n253 // Construction of transfert matrix\n254 {\n255     Whi wpii  =  pii;\n256     Pii  =  wpii[];\n257     for(int jp  =  0; jp < njpart; ++jp){\n258         int j  =  jpart[jp];\n259         Thij  =  aThij[jp];\n260         matrix I  =  interpolate(Whij, Whi); //Whji <- Whi\n261         sMj[jp]  =  I*Pii; //Whi -> s Whij\n262         rMj[jp]  =  interpolate(Whij, Whi, t = 1); //Whji -> Whi\n263         if(vdebug > 10){\n264             {Whi uuu = 1; Whij vvv = -1; vvv[]+ = I*uuu[]; cout << jp << \" %%% \" << vvv[].linfty << endl; assert(vvv[].linfty < 1e-6);}\n265             {Whi uuu = 1; Whij vvv = -1; vvv[]+ = rMj[jp]'*uuu[]; cout << jp << \" ### \" << vvv[].linfty << endl; assert(vvv[].linfty < 1e-6);}\n266         }\n267     }\n268 }\n269 if (ipart  =  =  0)\n270     cout << \"End build transfert matrix\" << endl;\n271 \n272 // Allocate array of send and recv data\n273 InitU(njpart, Whij, Thij, aThij, Usend) //initU(n, Vh, Th, aTh, U)\n274 InitU(njpart, Whij, Thij, aThij, Vrecv)\n275 if (ipart  =  =  0)\n276     cout << \"End init data for send/revc\" << endl;\n277 \n278 Whi ui, vi;\n279 \n280 func bool Update(real[int] &ui, real[int] &vi){\n281     for(int j  =  0; j < njpart; ++j)\n282         Usend[j][]  =  sMj[j]*ui;\n283     SendRecvUV(comm, jpart, Usend, Vrecv)\n284     vi  =  Pii*ui;\n285     for(int j  =  0; j < njpart; ++j)\n286         vi + =  rMj[j]*Vrecv[j][];\n287     return true;\n288 }\n289 \n290 // Definition of the Problem\n291 func G  =  x*0.1;\n292 func F  =  1.;\n293 macro grad(u) [dx(u),dy(u)] //\n294 varf vBC (U, V)  =  on(1, U = G);\n295 varf vPb (U, V)  =  int2d(Thi)(grad(U)'*grad(V)) + int2d(Thi)(F*V) + on(10, U = 0) + on(1, U = G);\n296 varf vPbC (U, V)  =  int2d(ThC)(grad(U)'*grad(V)) + on(1, U = 0);\n297 varf vPbon (U, V)  =  on(10, U = 1) + on(1, U = 1);\n298 varf vPbon10only (U, V)  =  on(10, U = 1) + on(1, U = 0);\n299 //remark the order is important we want 0 part on 10 and 1\n300 \n301 matrix Ai  =  vPb(Whi, Whi, solver = sparsesolver);\n302 matrix AC, Rci, Pci;\n303 \n304 if (mpiRank(comm)  =  =  0)\n305     AC  =  vPbC(VhC, VhC, solver = sparsesolver);\n306 \n307 Pci  =  interpolate(Whi, VhC);\n308 Rci  =  Pci'*Pii;\n309 \n310 real[int] onG10  =  vPbon10only(0, Whi);\n311 real[int] onG  =  vPbon(0, Whi);\n312 real[int] Bi = vPb(0, Whi);\n313 \n314 int kiter  =  -1;\n315 \n316 func bool CoarseSolve(real[int] &V, real[int] &U, mpiComm &comm){\n317     //solving the coarse probleme\n318     real[int] Uc(Rci.n), Bc(Uc.n);\n319     Uc  =  Rci*U;\n320     mpiReduce(Uc, Bc, processor(0, comm), mpiSUM);\n321     if (mpiRank(comm)  =  =  0)\n322         Uc  =  AC^-1*Bc;\n323     broadcast(processor(0, comm), Uc);\n324     V  =  Pci*Uc;\n325 }\n326 \n327 func real[int] DJ (real[int] &U){\n328     ++kiter;\n329     real[int] V(U.n);\n330     V  =  Ai*U;\n331     V  =  onG10 ? 0.: V; //remove internal boundary\n332     return V;\n333 }\n334 \n335 func real[int] PDJ (real[int] &U){\n336     real[int] V(U.n);\n337 \n338     real[int] b  =  onG10 ? 0. : U;\n339     V  =  Ai^-1*b;\n340     Update(V, U);\n341     return U;\n342 }\n343 \n344 func real[int] PDJC (real[int] &U){\n345     real[int] V(U.n);\n346     CoarseSolve(V, U, comm);\n347     V  =  -V; //-C2*Uo\n348     U + =  Ai*V; //U  =  (I-A C2) Uo\n349     real[int] b  =  onG10 ? 0. : U;\n350     U  =  Ai^-1*b; // (C1( I -A C2) Uo\n351     V  =  U -V;\n352     Update(V, U);\n353     return U;\n354 }\n355 \n356 func real[int] DJ0(real[int] &U){\n357     ++kiter;\n358     real[int] V(U.n);\n359     real[int] b  =  onG .* U;\n360     b  =  onG ? b : Bi ;\n361     V  =  Ai^-1*b;\n362     Update(V, U);\n363     V - =  U;\n364     return V;\n365 }\n366 \n367 Whi u  =  0, v;\n368 { //verification\n369     Whi u  =  1, v;\n370     Update(u[], v[]);\n371     u[] - =  v[];\n372     assert(u[].linfty < 1e-6);\n373 }\n374 \n375 settt\n376 u[]  =  vBC(0, Whi, tgv = 1); //set u with tgv BC value\n377 \n378 real epss  =  1e-6;\n379 int rgmres  =  0;\n380 if (gmres  =  =  1){\n381     rgmres  =  MPIAffineGMRES(DJ0, u[], veps = epss, nbiter = 300, comm = comm, dimKrylov = 100, verbosity = ipart ? 0: 50);\n382     real[int] b  =  onG .* u[];\n383     b  =  onG ? b : Bi;\n384     v[]  =  Ai^-1*b;\n385     Update(v[], u[]);\n386 }\n387 else if (gmres  =  =  2)\n388     rgmres  =  MPILinearGMRES(DJ, precon = PDJ, u[], Bi, veps = epss, nbiter = 300, comm = comm, dimKrylov = 100, verbosity = ipart ? 0: 50);\n389 else if (gmres  =  =  3)\n390     rgmres  =  MPILinearGMRES(DJ, precon = PDJC, u[], Bi, veps = epss, nbiter = 300, comm = comm, dimKrylov = 100, verbosity = ipart ? 0: 50);\n391 else //algo Shwarz for demo\n392     for(int iter  =  0; iter < 10; ++iter){\n393         real[int] b  =  onG .* u[];\n394         b  =  onG ? b : Bi ;\n395         v[]  =  Ai^-1*b;\n396 \n397         Update(v[], u[]);\n398         if(vdebug)\n399             plotMPIall(Thi, u[], \"u-\"+iter);\n400         v[] - =  u[];\n401 \n402         real err  =  v[].linfty;\n403         real umax  =  u[].max;\n404         real[int] aa  =  [err, umax], bb(2);\n405         mpiAllReduce(aa, bb, comm, mpiMAX);\n406         real errg  =  bb[0];\n407         real umaxg  =  bb[1];\n408 \n409         if (ipart  =  =  0)\n410             cout << ipart << \" err  =  \" << errg << \" u. max \" << umaxg << endl;\n411         if (errg < 1e-5) break;\n412     }\n413 \n414 if (vdebug)\n415     plotMPIall(Thi, u[], \"u-final\");\n416 \n417 settt\n418 \n419 real errg  =  1, umaxg;\n420 {\n421     real umax  =  u[].max, umaxg;\n422     real[int] aa  =  [umax], bb(1);\n423     mpiAllReduce(aa, bb, comm, mpiMAX);\n424     errg  =  bb[0];\n425     if (ipart  =  =  0)\n426         cout << \"umax global  =  \" << bb[0] << \" Wtime  =  \" << (ttt[ittt-1]-ttt[ittt-2]) << \" s \" << \" \" << kiter << endl;\n427 }\n428 \n429 if (sff ! =  \"\"){\n430     ofstream ff(sff+\".txt\", append);\n431     cout << \" ++++ \";\n432     cout << mpirank << \"/\" << mpisize << \" k = \" << ksplit << \" n =  \" << nloc << \" \" << sizeoverlaps << \" it =  \" << kiter;\n433     for (int i  =  1; i < ittt; ++i)\n434         cout << \" \" << ttt[i]-ttt[i-1] << \" \";\n435     cout << epss << \" \" << Ai.nbcoef << \" \" << Ai.n << endl;\n436 \n437     /*\n438     1 mpirank\n439     2 mpisize\n440     3 ksplit\n441     4 nloc\n442     5 sizeoverlaps\n443     6 kiter\n444     7 mesh & part build\n445     8 build the partion\n446     9 build mesh, transfere , and the fine mesh ..\n447     10 build the matrix, the trans matrix, factorizatioon\n448     11 GMRES\n449     */\n450 \n451     ff << mpirank << \" \" << mpisize << \" \" << sPk << \" \";\n452     ff << ksplit << \" \" << nloc << \" \" << sizeoverlaps << \" \" << kiter;\n453     for (int i  =  1; i < ittt; ++i)\n454         ff << \" \" << ttt[i]-ttt[i-1] << \" \";\n455     ff << epss << \" \" << Ai.nbcoef << \" \" << Ai.n << \" \" << gmres << endl;\n456 }\n\n\n\n\n\nFig. 220 Results¶\n\n\n\n\nMPI-GMRES 3D¶\n\nTodo\ntodo\n\n\n\nDirect solvers¶\n 1 load \"MUMPS_FreeFem\"\n 2 //default solver: real-> MUMPS, complex -> MUMPS\n 3 load \"real_SuperLU_DIST_FreeFem\"\n 4 default solver: real-> SuperLU_DIST, complex -> MUMPS\n 5 load \"real_pastix_FreeFem\"\n 6 //default solver: real-> pastix, complex -> MUMPS\n 7 \n 8 // Solving with pastix\n 9 {\n10     matrix A  = \n11         [[1, 2, 2, 1, 1],\n12         [ 2, 12, 0, 10 , 10],\n13         [ 2, 0, 1, 0, 2],\n14         [ 1, 10, 0, 22, 0.],\n15         [ 1, 10, 2, 0., 22]];\n16 \n17     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n18     b  =  A*xx;\n19     cout << \"b  =  \" << b << endl;\n20     cout << \"xx  =  \" << xx << endl;\n21 \n22     set(A, solver = sparsesolver, datafilename = \"ffpastix_iparm_dparm.txt\");\n23     cout << \"solve\" << endl;\n24     x  =  A^-1*b;\n25     cout << \"b  =  \" << b << endl;\n26     cout << \"x  =  \" << endl;\n27     cout << x << endl;\n28     di  =  xx - x;\n29     if (mpirank  =  =  0){\n30         cout << \"x-xx  =  \" << endl;\n31         cout << \"Linf  =  \" << di.linfty << \", L2  =  \" << di.l2 << endl;\n32     }\n33 }\n34 \n35 // Solving with SuperLU_DIST\n36 realdefaulttoSuperLUdist();\n37 //default solver: real-> SuperLU_DIST, complex -> MUMPS\n38 {\n39     matrix A  = \n40         [[1, 2, 2, 1, 1],\n41         [ 2, 12, 0, 10 , 10],\n42         [ 2, 0, 1, 0, 2],\n43         [ 1, 10, 0, 22, 0.],\n44         [ 1, 10, 2, 0., 22]];\n45 \n46     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n47     b  =  A*xx;\n48     cout << \"b  =  \" << b << endl;\n49     cout << \"xx  =  \" << xx << endl;\n50 \n51     set(A, solver = sparsesolver, datafilename = \"ffsuperlu_dist_fileparam.txt\");\n52     cout << \"solve\" << endl;\n53     x  =  A^-1*b;\n54     cout << \"b  =  \" << b << endl;\n55     cout << \"x  =  \" << endl;\n56     cout << x << endl;\n57     di  =  xx - x;\n58     if (mpirank  =  =  0){\n59         cout << \"x-xx  =  \" << endl;\n60         cout << \"Linf  =  \" << di.linfty << \", L2  =  \" << di.l2 << endl;\n61     }\n62 }\n63 \n64 // Solving with MUMPS\n65 defaulttoMUMPS();\n66 //default solver: real-> MUMPS, complex -> MUMPS\n67 {\n68     matrix A  = \n69         [[1, 2, 2, 1, 1],\n70         [ 2, 12, 0, 10 , 10],\n71         [ 2, 0, 1, 0, 2],\n72         [ 1, 10, 0, 22, 0.],\n73         [ 1, 10, 2, 0., 22]];\n74 \n75     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n76     b  =  A*xx;\n77     cout << \"b  =  \" << b << endl;\n78     cout << \"xx  =  \" << xx << endl;\n79 \n80     set(A, solver = sparsesolver, datafilename = \"ffmumps_fileparam.txt\");\n81     cout << \"solving solution\" << endl;\n82     x  =  A^-1*b;\n83     cout << \"b  =  \" << b << endl;\n84     cout << \"x  =  \" << endl;\n85     cout << x << endl;\n86     di  =  xx - x;\n87     if (mpirank  =  =  0){\n88         cout << \"x-xx  =  \" << endl;\n89         cout << \"Linf  =  \" << di.linfty << \", L2 \" << di.l2 << endl;\n90     }\n91 }\n\n\n\n\nSolver MUMPS¶\n  1 load \"MUMPS_FreeFem\"\n  2 \n  3 // Parameters\n  4 int[int] ICNTL(40); //declaration of ICNTL parameter for MUMPS\n  5 \n  6 //get value of ICNTL from file\n  7 if (mpirank  =  =  0){\n  8     ifstream ff(\"ffmumps_fileparam.txt\");\n  9     string line;\n 10     getline(ff, line);\n 11     getline(ff, line);\n 12     for (int iii  =  0; iii < 40; iii++){\n 13         ff >> ICNTL[iii];\n 14         getline(ff, line);\n 15     }\n 16 }\n 17 \n 18 broadcast(processor(0), ICNTL);\n 19 \n 20 // Given data of MUMPS solver in array lparams(SYM, PAR, ICNTL)\n 21 // There is no symmetric storage for a matrix associated with a sparse solver.\n 22 // Therefore, the matrix will be considered unsymmetric for parallel sparse solver even if symmetric.\n 23 {\n 24     // Problem\n 25     int SYM  =  0;\n 26     int PAR  =  1;\n 27     matrix A  = \n 28         [\n 29             [40, 0, 45, 0, 0],\n 30             [0, 12, 0, 0, 0],\n 31             [0, 0, 40, 0, 0],\n 32             [12, 0, 0, 22, 0],\n 33             [0, 0, 20, 0, 22]\n 34         ];\n 35 \n 36     // Construction of integer parameter for MUMPS\n 37     int[int] MumpsLParams(42);\n 38     MumpsLParams[0]  =  SYM;\n 39     MumpsLParams[1]  =  PAR;\n 40     for (int ii  =  0; ii < 40; ii++)\n 41         MumpsLParams[ii+2]  =  ICNTL[ii]; //ICNTL begin with index 0 here\n 42 \n 43     real[int] xx  =  [1, 32, 45, 7, 2], x(5), b(5), di(5);\n 44     b  =  A*xx;\n 45     if (mpirank  =  =  0)\n 46         cout << \"xx  =  \" << xx << endl;\n 47 \n 48     set(A, solver = sparsesolver, lparams = MumpsLParams); //we take the default value for CNTL MUMPS parameter\n 49 \n 50     // Solve\n 51     if (mpirank  =  =  0)\n 52         cout << \"Solve\" << endl;\n 53     x  =  A^-1*b;\n 54     if (mpirank  =  =  0)\n 55         cout << \"b  =  \" << b << endl;\n 56     if (mpirank  =  =  0)\n 57         cout << \"x  =  \" << endl; cout << x << endl;\n 58     di  =  xx-x;\n 59     if (mpirank  =  =  0){\n 60         cout << \"x-xx  =  \" << endl;\n 61         cout << \"Linf  =  \" << di.linfty << \", L2  =  \" << di.l2 << endl;\n 62     }\n 63 }\n 64 \n 65 // Read parameter of MUMPS solver in file ffmumps_fileparam.txt\n 66 {\n 67     // Problem\n 68     matrix A  = \n 69         [\n 70             [40, 0, 45, 0, 0],\n 71             [0, 12, 0, 0 , 0],\n 72             [0, 0, 40, 0, 0],\n 73             [12, 0, 0, 22, 0],\n 74             [0, 0, 20, 0, 22]\n 75         ];\n 76 \n 77     real[int] xx  =  [1, 32, 45, 7000, 2], x(5), b(5), di(5);\n 78     b  =  A*xx;\n 79     if (mpirank  =  =  0){\n 80         cout << \"b  =  \" << b << endl;\n 81         cout << \"xx  =  \" << xx << endl;\n 82     }\n 83 \n 84     set(A, solver = sparsesolver, datafilename = \"ffmumps_fileparam.txt\");\n 85 \n 86     // Solve\n 87     if (mpirank  =  =  0)\n 88         cout << \"Solve\" << endl;\n 89     x  =  A^-1*b;\n 90 \n 91     if (mpirank  =  =  0){\n 92         cout << \"b  =  \" << b << endl;\n 93         cout << \"x  =  \" << x << endl;\n 94     }\n 95     di  =  xx-x;\n 96     if (mpirank  =  =  0){\n 97         cout << \"x-xx  =  \" << endl;\n 98         cout << \"Linf  =  \" << di.linfty << \", L2  =  \" << di.l2 << endl;\n 99     }\n100 }\n\n\n\n\nSolver superLU_DIST¶\n\nTodo\nwrite code (SuperLU_DIST seems to have a bug)\n\n\n\nSolver PaStiX¶\n\nTodo\nwrite code (PaStiX seems to have a bug)\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Algorithms & Optimizations\n\t\t\tNext topic: Developers \n\t\t\n\t","l":"examples/parallelization.html"},"27":{"t":"Visualization","p":"\n\t\t\n   \nVisualization¶\n\nPlot¶\n 1 mesh Th  =  square(5,5);\n 2 fespace Vh(Th, P1);\n 3 \n 4 // Plot scalar and vectorial FE function\n 5 Vh uh = x*x+y*y, vh = -y^2+x^2;\n 6 plot(Th, uh, [uh, vh], value = true, wait = true);\n 7 \n 8 // Zoom on box defined by the two corner points [0.1,0.2] and [0.5,0.6]\n 9 plot(uh, [uh, vh], bb = [[0.1, 0.2], [0.5, 0.6]],\n10     wait = true, grey = true, fill = true, value = true);\n11 \n12 // Compute a cut\n13 int n  =  10;\n14 real[int] xx(10), yy(10);\n15 for (int i  =  0; i < n; i++){\n16     x  =  i/real(n);\n17     y  =  i/real(n);\n18     xx[i]  =  i;\n19     yy[i]  =  uh; // Value of uh at point (i/10., i/10.)\n20 }\n21 plot([xx, yy], wait = true);\n22 \n23 { // File for gnuplot\n24     ofstream gnu(\"plot.gp\");\n25     for (int i  =  0; i < n; i++)\n26         gnu << xx[i] << \" \" << yy[i] << endl;\n27 }\n28 \n29 // Calls the gnuplot command, waits 5 seconds and generates a postscript plot (UNIX ONLY)\n30 exec(\"echo 'plot \\\"plot.gp\\\" w l \\n pause 5 \\n set term postscript \\n set output \\\"gnuplot.eps\\\" \\n replot \\n quit' | gnuplot\");\n\n\n\n\n\n\nFig. 208 First plot¶\n\n\n\n\n\nFig. 209 Second plot¶\n\n\n\n\n\nFig. 210 Gnuplot¶\n\n\nPlot\n\n\nHSV¶\n 1 // From: http://en.wikipedia.org/wiki/HSV_color_space\n 2 // The HSV (Hue, Saturation, Value) model defines a color space\n 3 // in terms of three constituent components:\n 4 // HSV color space as a color wheel\n 5 // Hue, the color type (such as red, blue, or yellow):\n 6 // Ranges from 0-360 (but normalized to 0-100% in some applications like here)\n 7 // Saturation, the \"vibrancy\" of the color: Ranges from 0-100%\n 8 // The lower the saturation of a color, the more \"grayness\" is present\n 9 // and the more faded the color will appear.\n10 // Value, the brightness of the color: Ranges from 0-100%\n11 \n12 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n13 \n14 fespace Vh(Th, P1);\n15 Vh uh = 2-x*x-y*y;\n16 \n17 real[int] colorhsv = [ // Color hsv model\n18     4./6., 1 , 0.5, // Dark blue\n19     4./6., 1 , 1, // Blue\n20     5./6., 1 , 1, // Magenta\n21     1, 1. , 1, // Red\n22     1, 0.5 , 1 // Light red\n23     ];\n24  real[int] viso(31);\n25 \n26  for (int i  =  0; i < viso.n; i++)\n27     viso[i]  =  i*0.1;\n28 \n29  plot(uh, viso = viso(0:viso.n-1), value = true, fill = true, wait = true, hsv = colorhsv);\n\n\n\n\n\nFig. 211 Result¶\n\n\n\n\nMedit¶\n 1 load \"medit\"\n 2 \n 3 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n 4 \n 5 fespace Vh(Th, P1);\n 6 Vh u = 2-x*x-y*y;\n 7 \n 8 medit(\"u\", Th, u);\n 9 \n10 // Old way\n11 savemesh(Th, \"u\", [x, y, u*.5]); // Saves u.points and u.faces file\n12 // build a u.bb file for medit\n13 {\n14     ofstream file(\"u.bb\");\n15     file << \"2 1 1 \" << u[].n << \" 2 \\n\";\n16     for (int j  =  0; j < u[].n; j++)\n17         file << u[][j] << endl;\n18 }\n19 // Calls medit command\n20 exec(\"ffmedit u\");\n21 // Cleans files on unix-like OS\n22 exec(\"rm u.bb u.faces u.points\");\n\n\n\n\n\n\nFig. 212 2D plot¶\n\n\n\n\n\nFig. 213 Plot with elevation¶\n\n\nMedit\n\n\nParaview¶\n 1 load \"iovtk\"\n 2 \n 3 mesh Th  =  square(10, 10, [2*x-1, 2*y-1]);\n 4 \n 5 fespace Vh(Th, P1);\n 6 Vh u = 2-x*x-y*y;\n 7 \n 8 int[int] Order  =  [1];\n 9 string DataName  =  \"u\";\n10 savevtk(\"u.vtu\", Th, u, dataname = DataName, order = Order);\n\n\n\n\n\nFig. 214 Result¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Finite Element\n\t\t\tNext topic: Algorithms & Optimizations \n\t\t\n\t","l":"examples/visualization.html"},"28":{"t":"Welcome to FreeFEM documentation","p":"\n\t\t\n   \nWelcome to FreeFEM documentation¶\n\n\n\n\n\t\t\n\t\t\tNext topic: Introduction \n\t\t\n\t","l":"index.html"},"29":{"t":"Authors","p":"\n\t\t\n   \nAuthors¶\n\n\n\n\n\nFrédéric Hecht\n\n\n\nProfessor at Laboratoire Jacques Louis Lions\n(LJLL), Sorbonne University, Paris\n\nfrederic.hecht@sorbonne-universite.fr\n\nhttps://www.ljll.math.upmc.fr/hecht/\n\n\n\n\n\n\n\n\nSylvain Auliac\n\n\n\nFormer PhD student at LJLL, optimization interface with\nnlopt,\nipopt,\ncmaes, …\n\nhttps://www.ljll.math.upmc.fr/auliac/\n\n\n\n\n\n\n\n\nOlivier Pironneau\n\n\n\nProfessor of numerical analysis at the Paris VI university and at\nLJLL, numerical methods in fluid\n\nMember of the Institut Universitaire de\nFrance and Academie des\nSciences\n\nhttps://www.ljll.math.upmc.fr/pironneau/\n\n\n\n\n\n\n\n\nJacques Morice\n\n\n\nFormer Post-Doc at LJLL, three dimensions mesh generation and\ncoupling with\nmedit\n\n\n\n\n\n\n\n\nAntoine Le Hyaric\n\n\n\nCNRS research engineer at Laboratoire Jacques Louis\nLions, expert in\nsoftware engineering for scientific applications, electromagnetics\nsimulations, parallel computing and three-dimensionsal visualization\n\nhttps://www.ljll.math.upmc.fr/lehyaric/\n\n\n\n\n\n\n\n\nKohji Ohtsuka\n\n\n\nProfessor at Hiroshima Kokusai Gakuin\nUniversity, Japan and chairman of the\nWorld Scientific and Engineering Academy and\nSociety, Japan. Fracture dynamic, modeling\nand computing\n\nhttps://sites.google.com/a/comfos.org/comfos/\n\n\n\n\n\n\n\n\nPierre-Henri Tournier\n\n\n\nCNRS research engineer at Laboratoire Jacques Louis\nLions (LJLL), Sorbonne University, Paris\n\n\n\n\n\n\n\n\nPierre Jolivet\n\n\n\nCNRS researcher, MPI interface with PETSc, HPDDM, …\n\nhttp://jolivet.perso.enseeiht.fr/\n\n\n\n\n\n\n\n\nFrédéric Nataf\n\n\n\nCNRS senior researcher at Laboratoire Jacques Louis\nLions (LJLL), Sorbonne University, Paris\n\nhttps://www.ljll.math.upmc.fr/nataf/\n\n\n\n\n\n\n\n\nSimon Garnotel\n\n\n\nReasearch engineer at Airthium\n\nhttps://github.com/sgarnotel\n\n\n\n\n\n\n\n\nKarla Pérez\n\n\n\nDeveloper, Airthium internship\n\nhttps://github.com/karlaprzbr\n\n\n\n\n\n\n\n\nLoan Cannard\n\n\n\nWeb designer, Airthium internship\n\nhttps://www.linkedin.com/in/loancannard\n\n\n\nAnd all the dedicated Github contributors\n\n\n\n\t\t\n\t\t\t Previous topic: Citation\n\t\t\tNext topic: Contributing \n\t\t\n\t","l":"introduction/authors.html"},"30":{"t":"Citation","p":"\n\t\t\n   \nCitation¶\n\nIf you use FreeFEM, please cite the following reference in your work:¶\n\nBibTeX¶\n 1 @article{MR3043640,\n 2   AUTHOR  =  {Hecht, F.},\n 3   TITLE  =  {New development in FreeFem++},\n 4   JOURNAL  =  {J. Numer. Math.},\n 5   FJOURNAL  =  {Journal of Numerical Mathematics},\n 6   VOLUME  =  {20}, YEAR  =  {2012},\n 7   NUMBER  =  {3-4}, PAGES  =  {251--265},\n 8   ISSN  =  {1570-2820},\n 9   MRCLASS  =  {65Y15},\n10   MRNUMBER  =  {3043640},\n11   URL  =  {https://freefem.org/}\n12 }\n\n\n\n\nAPA¶\n1 Hecht, F. (2012). New development in FreeFem++. Journal of numerical mathematics, 20(3-4), 251-266.\n\n\n\n\nISO690¶\n1 HECHT, Frédéric. New development in FreeFem++. Journal of numerical mathematics, 2012, vol. 20, no 3-4, p. 251-266.\n\n\n\n\nMLA¶\n1 Hecht, Frédéric. \"New development in FreeFem++.\" Journal of numerical mathematics 20.3-4 (2012): 251-266.\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: History\n\t\t\tNext topic: Authors \n\t\t\n\t","l":"introduction/citation.html"},"31":{"t":"Contributing","p":"\n\t\t\n   \nContributing¶\n\nBug report¶\n\nConcerning the FreeFEM documentation¶\nOpen an Issue on FreeFem-doc repository.\n\n\nConcerning the FreeFEM compilation or usage¶\nOpen an Issue on FreeFem-sources repository.\n\n\n\nImprove content¶\nAsk one of the contributors for Collaborator Access or make a Pull Request.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Authors\n\t\t\tNext topic: Learning by Examples \n\t\t\n\t","l":"introduction/contributing.html"},"32":{"t":"Download","p":"\n\t\t\n   \nDownload¶\n\nLatest binary packages¶\nFreeFEM v4.6 runs under macOS, Ubuntu, and 64-bit Windows.\n\n\n\n\n\n\n\n\nOperating System\nFreeFEM Version\nSize\nDate\n\n\n\nmacOS 10.10.5 or higher\n4.5\n412 MB\nFeb 11, 2020\n\nUbuntu 16.04 or higher\n4.6\n212 MB\nMar 02, 2020\n\n64-bit Windows             | 4.6           |  185 MB\nMar 02, 2020\n\nDocker image\n4.6\n487 MB\nMar 02, 2020\n\nSource 4.6\n4.6\n12.4 MB\nMar 02, 2020\n\nprevious releases\n-\n-\n-\n\n\n\nThe source code is available on the FreeFEM GitHub Repository.\n\nNote\nThe support ended for all releases under Windows 32 bits.\n\n\n\n\n\n\n\nSyntax highlighters¶\n\n\n\n\n\n\n\nLexer type\nVersion\nDescription\n\n\n\nEmacs\n0.3\nfreefem-mode.el\n\nTextmate 2\n1.0\nFreeFem.tmbundle\n\nGedit\n1.0\nffpp.lang\n\nAtom\n0.3\nlanguage-freefem or via the Atom package manager\n\nPygments\n1.0\nfreefem.py\n\nVim\n0.1\nedp.vim\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Installation guide\n\t\t\tNext topic: History \n\t\t\n\t","l":"introduction/download.html"},"33":{"t":"History","p":"\n\t\t\n   \nHistory¶\n\nThe project has evolved from MacFem, PCfem, written in Pascal.\nThe first C version lead to freefem 3.4; it offered mesh adaptivity on a single mesh only.\nA thorough rewriting in C++ led to freefem+ (freefem+ 1.2.10 was its last release), which included interpolation over multiple meshes (functions defined on one mesh can be used on any other mesh); this software is no longer maintained but is still in use because it handles a problem description using the strong form of the PDEs.\nImplementing the interpolation from one unstructured mesh to another was not easy because it had to be fast and non-diffusive; for each point, one had to find the containing triangle.\nThis is one of the basic problems of computational geometry (see [PREPARATA1985] for example).\nDoing it in a minimum number of operations was the challenge.\nOur implementation is \\(\\mathcal{O}(n log n)\\) and based on a quadtree.\nThis version also grew out of hand because of the evolution of the template syntax in C++.\nWe have been working for a few years now on FreeFEM , entirely re-written again in C++ with a thorough usage of template and generic programming for coupled systems of unknown size at compile time.\nLike all versions of freefem, it has a high level user friendly input language which is not too far from the mathematical writing of the problems.\nThe freefem language allows for a quick specification of any partial differential system of equations.\nThe language syntax of FreeFEM is the result of a new design which makes use of the STL [STROUSTRUP2000], templates, and bison for its implementation; more details can be found in [HECHT2002].\nThe outcome is a versatile software in which any new finite elements can be included in a few hours; but a recompilation is then necessary.\nTherefore the library of finite elements available in FreeFEM will grow with the version number and with the number of users who program more new elements.\nSo far we have discontinuous \\(P_0\\) elements,linear \\(P_1\\) and quadratic \\(P_2\\) Lagrangian elements, discontinuous \\(P_1\\) and Raviart-Thomas elements and a few others like bubble elements.\n\n\n\n\n\n\nThe development of FreeFEM through more than 30 years\n\n\n\n1987\n\nMacFem/PCFem the old ones (O. Pironneau in Pascal) no free.\n\n1992\n\nFreeFem rewrite in C++ (P1,P0 one mesh ) O. Pironneau, D. Bernardi, F.Hecht (mesh adaptation , bamg) , C. Prudhomme .\n\n1996\n\nFreeFem+ rewrite in C++ (P1,P0 more mesh) O. Pironneau, D. Bernardi, F.Hecht (algebra of function).\n\n1998\n\nFreeFem++ rewrite with an other finite element kernel and an new language F. Hecht, O. Pironneau, K.Ohtsuka.\n\n1999\n\nFreeFem 3d (S. Del Pino),  a fist 3d version base on fictitious domaine method.\n\n2008\n\nFreeFem++ v3 use a new finite element kernel multidimensionnels: 1d,2d,3d…\n\n2014\n\nFreeFem++ v3.34 parallel version\n\n2017\n\nFreeFem++ v3.57 parallel version\n\n2018\n\nFreeFem++ v4: New matrix type, Surface element, New Parallel tools …\n\n\n\n\n\t\t\n\t\t\t Previous topic: Download\n\t\t\tNext topic: Citation \n\t\t\n\t","l":"introduction/history.html"},"34":{"t":"Introduction","p":"\n\t\t\n   \n\n\n\n\n\n\n  FreeFEM  \n Fourth edition, Version 4.8 \n\n\n\n\n\n      \n        Frédéric Hecht  \n\n            Laboratoire Jacques-Louis Lions, Sorbonne University, Paris\n      \n      \n  \n     The user manual is available \n  \n      \n      \n      \n    \n      The FreeFEM v3 PDF is archived (not up to date)\n    \n    \n      Official version (English)\n      Spanish version, by Eliseo Chacón Vera \n      Chinese version (中文) \n              Japanese version, by Kohji Ohtsuka\n    \n  \n\n\n\n\n\n\n\nIntroduction¶\nFreeFEM is a partial differential equation solver for non-linear multi-physics systems in 1D, 2D, 3D and 3D border domains (surface and curve).\nProblems involving partial differential equations from several branches of physics, such as fluid-structure interactions, require interpolations of data on several meshes and their manipulation within one program.\nFreeFEM includes a fast interpolation algorithm and a language for the manipulation of data on multiple meshes.\nFreeFEM is written in C++ and its language is a C++ idiom.\n\n\n\n\nFreeFEM currently interfaces to the following libraries:\n\nARPACK\nBLAS\nOpenBLAS\nFFTW 3.3.2\nIpopt 3.12.4\nGmm++ 4.2\nfreeYams\nMETIS\n\n\nParMETIS\nMmg\nmshmet\nMUMPS\nNLopt 2.2.4\nScaLAPACK\nScotch\nSuiteSparse\n\n\nSuperLU\nTetGen\nPETSc\nSLEPc\nHTool\nHPDDM\nBemTool\nParMmg\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\t\t\n\t\t\t Previous topic: Welcome to FreeFEM documentation\n\t\t\tNext topic: Version 4.5: new features \n\t\t\n\t","l":"introduction/index.html"},"35":{"t":"Installation guide","p":"\n\t\t\n   \nInstallation guide¶\nTo use FreeFEM, two installation methods are available: user access (binary package) and access developers (from the source code).\nFollow the section corresponding to your type of installation.\n\nNote\nSince the version 4.5, FreeFEM relese provides with the last version of PETSc.\n\n\n\n\n\n\nUsing binary package¶\nFirst, open the following web page download page and choose your platform: Linux, MacOS or Windows.\n\nNote\nBinary packages are available for Microsoft Windows, MacOS and some Linux distributions. Since the release 4.5, FreeFEM binaries provide with the current version of PETSc.\n\nInstall FreeFEM by double-clicking on the appropriate file. Under Linux and MacOS the install directory is one of the following /usr/local/bin, /usr/local/share/freefem++, /usr/local/lib/ff++\n\nWindows installation¶\n\nNote\nThe windows package is build for Window 7 64bits. The support ended for all releases under Windows 32 bits since the V4.\n\nFirst download the windows installation executable, then double click to install FreeFEM.\nInstall MSMPI for parallel version under window64 MS MPI V10.1.2, and install both msmpisdk.msi and MSMpiSetup.exe.\nIn most cases just answer yes (or type return) to all questions.\nOtherwise in the Additional Task windows, check the box “Add application directory to your system path.” This is required otherwise the program ffglut.exe will not be found.\nBy now you should have two new icons on your desktop:\n\nFreeFem++ (VERSION).exe, the freefem++ application.\nFreeFem++ (VERSION) Examples, a link to the freefem++ examples folder.\n\nwhere (VERSION) is the version of the files (for example 4.5).\nBy default, the installed files are in C:\\Programs Files\\FreeFem++. In this directory, you have all the .dll files and other applications: FreeFem++-nw.exe, ffglut.exe, … The syntax for the command-line tools are the same as those of FreeFem.exe.\nTo use FreeFEM binaries under Windows, two methods are possible:\n\nUse the FreeFEM launcher (launchff++.exe)\n\nWarning: if you launch FreeFEM without filename script by double-clicking, your get a error due (it is bug of usage GetOpenFileName in win64).\n\nIn shell terminal (cmd, powershell, bash, … ):\n\nTo launch sequential version:\n\n1 C:\\>\"Program Files (x86)\\FreeFem++\\FreeFem++.exe\" <mySequentialScript.edp>\n\n\n\nTo launch parallel version:\n\n1 C:\\>\"Program Files\\Microsoft MPI\\Bin\\mpiexec.exe\" -n <nbProcs> C:\\>\"Program Files (x86)\\FreeFem++\\FreeFem++-mpi.exe\" <myParallelScript.edp>\n\n\n\n\n\n\nmacOS X installation¶\nDownload the macOS X binary version file, extract all the files by double clicking on the icon of the file, go the the directory and put the FreeFem++.app application in the /Applications directory.\nIf you want terminal access to FreeFEM just copy the file FreeFem++ in a directory of your $PATH shell environment variable.\n\n\nUbuntu installation¶\n\nNote\nThe Debian package is built for Ubuntu 16.04\n\nBeforehand, install the following dependances libraries using the apt tool:\n1 sudo apt-get install libgsl-dev libhdf5-dev\n2              liblapack-dev libopenmpi-dev freeglut3-dev\n\n\nDownload the package FreeFEM .deb, install it by the command\n1 dpkg -i FreeFEM_VERSION_Ubuntu_withPETSc_amd64.deb\n\n\nFreeFEM is directly available in your terminal by the command “FreeFem++”.\n\n\nArch AUR package¶\nAn up-to-date package of FreeFEM for Arch is available on the Archlinux user repository.\nTo install it:\n1 git clone https://aur.archlinux.org/freefem++-git.git\n2 cd freefem++-git\n3 makepkg -si\n\n\n\nNote\nThanks to Stephan Husmann\n\n\n\nFedora installation¶\nPackages are available in the\nFedora Repositories,\nand they are managed by the\nFedora SciTech special interest group.\nThe packages are usually recent builds, but may not be the latest released version.\nYou can install them using the dnf tool, for both the serial and parallel (MPI)\nversions. :\n1 sudo dnf install freefem++\n2 sudo dnf install freefem++-openmpi\n3 sudo dnf install freefem++-mpich\n\n\nFreeFEM is directly available in your terminal by the command “FreeFem++”.\nTo use the OpenMPI version, in your terminal first load the OpenMPI module,\nfor example using\n1 module load mpi/openmpi-x86_64\n\n\nand then the command “FreeFem++-mpi_openmpi” will be available in your\nterminal. To use the MPICH version, in your terminal first load the MPICH\nmodule using\n1 module load mpi/mpich-x86_64\n\n\nand then the command “FreeFem++-mpi_mpich” will be available in your\nterminal.\n\n\n\nCompiling source code¶\n\nVarious versions of FreeFEM are possible:\nsequential and without plugins (contains in 3rdparty)\nparallel with plugins (and with PETSc).\n\n\n\nNote\nWe advise you to use the package manager for macOS Homebrew to get the different packages required avalaible here\n\n\n\n\n\nCompilation on OSX (> = 10.13)¶\n\nInstall Xcode, Xcode Command Line tools and Xcode Additional Tools from the Apple website\nInstall gfortran from Homebrew\n1  brew cask install gfortran\n\n\n\n\n\nNote\nIf you have installed gcc via brew, gfortran comes with it and you do not need this line\n\n\nTo use FreeFEM parallel version, install openmpi  or  mpich\n1  # to install openmpi\n2  curl -L https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz --output openmpi-4.0.1.tar.gz\n3  tar xf openmpi-4.0.1\n4  cd openmpi-4.0.1/\n5  # to install mpich\n6  curl -L http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz --output mpich-3.3.2.tar.gz\n7  tar xf mpich-3.3.2\n8  cd mpich-3.3.2\n\n\n4  # with brew gcc gfortran compilers\n5  ./configure CC = clang CXX = clang++ FC = gfortran-9 F77 = gfortran-9 --prefix = /where/you/want/to/have/files/installed\n6 \n7  # with LLVM gcc and brew gfortran compilers\n8  ./configure CC = gcc-9 CXX = g++-9 FC = gfortran-9 F77 = gfortran-9 --prefix = /where/you/want/to/have/files/installed\n\n\n5  make -j<nbProcs>\n6  make -j<nbProcs> install\n\n\n\nInstall the minimal libraries for FreeFEM\n1 brew install m4 git flex bison\n\n\n\nIf you want build your own configure according your system, install autoconf and automake from Homebrew (optional, see note in step 10)\n1 brew install autoconf automake\n\n\n\nTo use FreeFEM with its plugins, install from Homebrew suitesparse, hdf5, cmake, wget\n1 brew install suitesparse hdf5 cmake wget\n\n\n\nInstall gsl\n1 curl -O http://mirror.cyberbits.eu/gnu/gsl/gsl-2.5.tar.gz\n2 tar zxvf gsl-2.5.tar.gz\n3 cd gsl-2.5\n4 ./configure\n5 make -j<nbProcs>\n6 make -j<nbProcs> install --prefix = /where/you/want/to/have/files/installed\n\n\n\nDownload the latest Git for Mac installer git and the FreeFEM source from the repository\n1 git clone https://github.com/FreeFem/FreeFem-sources.git\n\n\n\nConfigure your source code\n1  cd FreeFem-sources\n2  autoreconf -i\n\n\n\nNote\nif your autoreconf version is too old, do tar zxvf AutoGeneratedFile.tar.gz\n\n\nfollowing your compilers\n\n3 // with brew gcc gfortran compilers\n4 ./configure --enable-download CC = clang CXX = clang++ F77 = gfortran-9\n5     FC = gfortran-9 --prefix = /where/you/want/to/have/files/installed\n6 \n7 // with LLVM gcc and brew gfortran compilers\n8 ./configure --enable-download CC = clang CXX = clang++ F77 = gfortran-9\n9     FC = gfortran-9 --prefix = /where/you/want/to/have/files/installed\n\n\n\nDownload the 3rd party packages to use FreeFEM plugins\n\n\n1 ./3rdparty/getall -a\n\n\n\nNote\nAll the third party packages have their own licence\n\n\n\nIf you want use PETSc/SLEPc and HPDDM (High Performance Domain Decomposition Methods)\n\n\n1 cd 3rdparty/ff-petsc\n2 make petsc-slepc // add SUDO = sudo if your installation directory is the default /usr/local\n3 cd -\n4 ./reconfigure\n\n\n\n\nBuild your FreeFEM library and executable\n\n\n1 make -j<nbProcs>\n2 make -j<nbProcs> check\n\n\n\nNote\nmake check is optional, but advised to check the validity of your FreeFEM build\n\n\n\n\nInstall the FreeFEM apllicationmake install // add SUDO = sudo might be necessary\n\n\n\n\n\n\nNote\nit isn’t necessary to execute this last command, FreeFEM executable is avalaible here your_installation/src/nw/FreeFem++ and mpi executable here your_installation/src/mpi/ff-mpirun.\n\n\n\n\nCompilation on Ubuntu¶\n\nInstall the following packages on your system\n1 sudo apt-get update && sudo apt-get upgrade\n2 sudo apt-get install cpp freeglut3-dev g++ gcc gfortran \\\n3     m4 make patch pkg-config wget python unzip \\\n4     liblapack-dev libhdf5-dev libgsl-dev \\\n5     autoconf automake autotools-dev bison flex gdb git cmake\n6 \n7 # mpich is required for the FreeFEM parallel computing version\n8 sudo apt-get install mpich\n\n\n\nWarning\nIn the oldest distribution of Ubuntu, libgsl-dev does not exist, use libgsl2-dev instead\n\n\nDownload FreeFEM source from the repository\n1 git clone https://github.com/FreeFem/FreeFem-sources.git\n\n\n\nAutoconf\n1 cd FreeFem-sources\n2 autoreconf -i\n\n\n\nNote\nif your autoreconf version is too old, do tar zxvf AutoGeneratedFile.tar.gz\n\n\nConfigure\n1 ./configure --enable-download --enable-optim\n2     --prefix = /where/you/want/to/have/files/installed\n\n\n\nNote\nTo see all the options, type ./configure --help\n\n\nDownload the 3rd party packages\n1 ./3rdparty/getall -a\n\n\n\nNote\nAll the third party packages have their own licence\n\n\nIf you want use PETSc/SLEPc and HPDDM (High Performance Domain Decomposition Methods) for massively parallel computing\n1 cd 3rdparty/ff-petsc\n2 make petsc-slepc // add SUDO = sudo if your installation directory is the default /usr/local\n3 cd -\n4 ./reconfigure\n\n\n\nBuild your FreeFEM library and executable\n1 make -j<nbProcs>\n2 make -j<nbProcs> check\n\n\n\nNote\nmake check is optional, but advised to check the validity of your FreeFEM build\n\n\nInstall the executable\n1 make install\n\n\n\nNote\nit isn’t necessary to execute this last command, FreeFEM executable is avalaible here your_installation/src/nw/FreeFem++ and mpi executable here your_installation/src/mpi/ff-mpirun\n\n\n\n\n\nCompilation on Arch Linux¶\n\nWarning\nAs Arch is in rolling release, the following information can be quickly outdated !\n\n\nWarning\nFreeFEM fails to compile using the newest version of gcc 8.1.0, use an older one instead.\n\n\nInstall the following dependencies:\n1 pacman -Syu\n2 pacman -S git openmpi gcc-fortran wget python\n3     freeglut m4 make patch gmm\n4     blas lapack hdf5 gsl fftw arpack suitesparse\n5     gnuplot autoconf automake bison flex gdb\n6     valgrind cmake texlive-most\n\n\n\nDownload the FreeFEM source from the repository\n1 git clone https://github.com/FreeFem/FreeFem-sources.git\n\n\n\nAutoconf\n1 cd FreeFem-sources\n2 autoreconf -i\n\n\n\nConfigure\n1 ./configure --enable-download --enable-optim\n\n\n\nNote\nTo see all the options, type ./configure --help\n\n\nDownload the packages\n1 ./3rdparty/getall -a\n\n\n\nNote\nAll the third party packages have their own licence\n\n\nIf you want use HPDDM (High Performance Domain Decomposition Methods) for massively parallel computing, install PETSc/SLEPc\n1 cd 3rdparty/ff-petsc\n2 make petsc-slepc SUDO = sudo\n3 cd -\n4 ./reconfigure\n\n\n\nCompile the FreeFEM source\n1 make\n\n\n\nNote\nIf your computer has many threads, you can run make in parallel using make -j16 for 16 threads, for example.\n\n\nNote\nOptionally, check the compilation with make check\n\n\nInstall the FreeFEM application\n1 sudo make install\n\n\n\n\n\n\nCompilation on Fedora¶\n\nInstall the following packages on your system\n 1 sudo dnf update\n 2 sudo dnf install freeglut-devel gcc-gfortran gcc-c++ gcc \\\n 3                   m4 make wget python2 python3 unzip \\\n 4                   lapack-devel hdf5-devel gsl gsl-devel \\\n 5                   autoconf automake bison flex gdb git cmake\n 6 \n 7 # MPICH or OpenMPI is required for the FreeFEM parallel computing version\n 8 sudo dnf install mpich-devel\n 9 sudo dnf install openmpi-devel\n10 \n11 # Then load one of the modules, for example\n12 module load mpi/mpich-x86_64\n13 # or\n14 module load mpi/openmpi-x86_64\n\n\n\nDownload FreeFEM source from the repository\n1 git clone https://github.com/FreeFem/FreeFem-sources.git\n\n\n\nAutoconf\n1 cd FreeFem-sources\n2 autoreconf -i\n\n\n\nNote\nif your autoreconf version is too old, do tar zxvf AutoGeneratedFile.tar.gz\n\n\nConfigure\n1 ./configure --enable-download --enable-optim\n2     --prefix = /where/you/want/to/have/files/installed\n\n\n\nNote\nTo see all the options, type ./configure --help\n\n\nDownload the 3rd party packages\n1 ./3rdparty/getall -a\n\n\n\nNote\nAll the third party packages have their own licence\n\n\nIf you want use PETSc/SLEPc and HPDDM (High Performance Domain Decomposition Methods) for massively parallel computing\n1 cd 3rdparty/ff-petsc\n2 make petsc-slepc // add SUDO = sudo if your installation directory is the default /usr/local\n3 cd -\n4 ./reconfigure\n\n\n\nBuild your FreeFEM library and executable\n1 make -j<nbProcs>\n2 make -j<nbProcs> check\n\n\n\nNote\nmake check is optional, but advised to check the validity of your FreeFEM build\n\n\nInstall the executable\n1 make install\n\n\n\nNote\nit isn’t necessary to execute this last command, FreeFEM executable is avalaible here your_installation/src/nw/FreeFem++ and mpi executable here your_installation/src/mpi/ff-mpirun\n\n\n\n\n\nCompilation on Linux with Intel software tools¶\nFollow the guide\n\n\nCompilation on Windows¶\n\nWarning\nThe support ended for all releases under Windows 32 bits since the V4.\nWe assume your development machine is 64-bit, and you want your compiler to target 64-bit windows by default.\n\n\nInstall the Microsoft MPI v10.1.2 (archived) (msmpisdk.msi and MSMpiSetup.exe)\nDownload msys2-x86_64-latest.exe (x86_64 version) and run it.\nInstall the version control system Git for Windows\n\n4. In the MSYS2 shell, execute the following.\nHint: if you right click the title bar, go to Options -> Keys and tick “Ctrl+Shift+letter shortcuts” you can use Ctrl+Shift+V to paste in the MSYS shell.\n\n1 pacman -Syuu\n\n\n\nClose the MSYS2 shell once you’re asked to. There are now 3 MSYS subsystems installed: MSYS2, MinGW32 and MinGW64.\nThey can respectively be launched from C:devmsys64msys2.exe, C:devmsys64mingw32.exe and C:devmsys64mingw64.exe\nReopen MSYS2 (doesn’t matter which version, since we’re merely installing packages).\nRepeatedly run the following command until it says there are no further updates. You might have to restart your shell again.\n\n1 pacman -Syuu\n\n\n\n\nNow that MSYS2 is fully up-to-date, install the following dependancies\n\nfor 64 bit systems:\n\n1 pacman -S autoconf make automake-wrapper bison git \\\n2   mingw-w64-x86_64-freeglut mingw-w64-x86_64-toolchain \\\n3   mingw-w64-x86_64-openblas patch python perl pkg-config pkgfile \\\n4   rebase tar time tzcode unzip which mingw-w64-x86_64-libmicroutils \\\n5   --ignore mingw-w64-x86_64-gcc-ada --ignore mingw-w64-x86_64-gcc-objc \\\n6   --ignore mingw-w64-x86_64-gdb mingw-w64-x86_64-cmake --noconfirm\n\n\n\nfor 32 bit systems (FreeFEM lower than version 4):\n\n1 pacman -S autoconf automake-wrapper bash bash-completion \\\n2   bison bsdcpio bsdtar bzip2 coreutils curl dash file filesystem \\\n3   findutils flex gawk gcc gcc-fortran gcc-libs grep gzip inetutils \\\n4   info less lndir make man-db git mingw-w64-i686-freeglut \\\n5   mingw-w64-i686-toolchain mingw-w64-i686-gsl mingw-w64-i686-hdf5 \\\n6   mingw-w64-i686-openblas mintty msys2-keyring msys2-launcher-git \\\n7   msys2-runtime ncurses pacman pacman-mirrors pactoys-git patch pax-git \\\n8   perl pkg-config pkgfile rebase sed tar tftp-hpa time tzcode unzip \\\n9   util-linux which\n\n\n\nOpen a MingW64 terminal (or MingW32 for old 32 bit FreeFEM version) and compile the FreeFEM source\n1 git clone https://github.com/FreeFem/FreeFem-sources\n2 cd FreeFem-sources\n3 autoreconf -i\n4 ./configure --enable-generic --enable-optim \\\n5   --enable-download --enable-maintainer-mode \\\n6   CXXFLAGS = -mtune = generic CFLAGS = -mtune = generic \\\n7   FFLAGS = -mtune = generic --enable-download --disable-hips\n8           --prefix = /where/you/want/to/have/files/installed\n\n\n\nIf you want use HPDDM (High Performance Domain Decomposition Methods) for massively parallel computing, install PETSc/SLEPc\n1 cd 3rdparty/ff-petsc\n2 make petsc-slepc SUDO = sudo\n3 cd -\n4 ./reconfigure\n\n\n\nDownload the 3rd party packages and build your FreeFEM library and executable\n1 ./3rdparty/getall -a\n2 make\n3 make check\n4 make install\n\n\n\nNote\nThe FreeFEM executable (and some other like ffmedit, …) are in C:\\msys64\\mingw64\\bin (or C:\\msys32\\mingw32\\bin).\n\n\n\n\n\n\nFreeFEM continuous integration¶\nThe Inria Jenkins platform is used for the CI/CD integration of the source code.\nCompilation results of the develop branch by OS type and configuration of FreeFEM are here\n\n\n\n\n\n\n\n\n\n\nBranch\nLinux 16.04\nLinux 18.04\nMacOS 10.10.5\nMacOS 10.13.5\nWindows 7\n\n\n\nDevelop\n\n\n\n\n\n\nDevelop\nmpich and PETSc/SLEPc\n\n\n\n\n\nMSMPI V10.1.2\n\nDevelop\nopenmpi and PETSc/SLEPc\n\n\n\n\n\n\n\n\n\n\nEnvironment variables and init file¶\nFreeFEM reads a user’s init file named freefem++.pref to initialize global variables: verbosity, includepath, loadpath.\n\nNote\nThe variable verbosity changes the level of internal printing (0: nothing unless there are syntax errors, 1: few, 10: lots, etc. …), the default value is 2.\nThe included files are found in the includepath list and the load files are found in the loadpath list.\n\nThe syntax of the file is:\n1 verbosity  =  5\n2 loadpath + =  \"/Library/FreeFem++/lib\"\n3 loadpath + =  \"/Users/hecht/Library/FreeFem++/lib\"\n4 includepath + =  \"/Library/FreeFem++/edp\"\n5 includepath + =  \"/Users/hecht/Library/FreeFem++/edp\"\n6 # This is a comment\n7 load + =  \"funcTemplate\"\n8 load + =  \"myfunction\"\n9 load + =  \"MUMPS_seq\"\n\n\nThe possible paths for this file are\n\nunder Unix and MacOs\n\n1 /etc/freefem++.pref\n2 $(HOME)/.freefem++.pref\n3 freefem++.pref\n\n\n\nunder windows\n\n1 freefem++.pref\n\n\nWe can also use shell environment variables to change verbosity and the search rule before the init files.\n1 export FF_VERBOSITY = 50\n2 export FF_INCLUDEPATH = \"dir;;dir2\"\n3 export FF_LOADPATH = \"dir;;dir3\"\n\n\n\nNote\nThe separator between directories must be “;” and not “:” because “:” is used under Windows.\n\n\nNote\nTo show the list of init of FreeFEM , do\n1 export FF_VERBOSITY = 100;\n2 ./FreeFem++-nw\n\n\n\n\n\n\n\n\n\nColoring Syntax FreeFem++¶\n\nAtom¶\nIn order to get the syntax highlighting in Atom, you have to install the FreeFEM language support.\nYou can do it directly in Atom: Edit -> Preferences -> Install, and search for language-freefem-offical.\nTo launch scripts directly from Atom, you have to install the atom-runner package. Once installed, modify the Atom configuration file (Edit -> Config…) to have something like that:\n1 \"*\":\n2    ...\n3 \n4    runner:\n5       extensions:\n6          edp: \"FreeFem++\"\n7       scopes:\n8          \"Freefem++\": \"FreeFem++\"\n\n\nReboot Atom, and use Alt+R to run a FreeFem++ script.\n\n\nGedit¶\nIn order to get the syntax highlighting in Gedit, you have to downlaod the Gedit parser and copy it in /usr/share/gtksourceview-3.0/language-specs/.\n\n\nTextmate 2, an editor under macOS¶\nTo use the coloring FreeFEM syntax with the Textmate 2 editor on Mac 10.7 or better, download from macromates.com and download the textmate freefem++ syntax here (version june 2107). To install this parser, unzip Textmate2-ff++.zip and follow the explanation given in file How_To.rtf.\nrom www.freefem.org/ff++/Textmate2-ff++.zip (version june 2107) unzip Textmate2-\n\n\nNotepad++,an editor under windows¶\nRead and follow the instruction, FREEFEM++ COLOR SYNTAX OF WINDOWS .\n\n\nEmacs editor¶\nFor emacs editor you can download ff++-mode.el .\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Version 4.5: new features\n\t\t\tNext topic: Download \n\t\t\n\t","l":"introduction/installation.html"},"36":{"t":"Version 4.5: new features","p":"\n\t\t\n   \nVersion 4.5: new features¶\n\n\n\n\n\nRelease, binaries packages¶\n\nSince the version 4.5, the FreeFEM binary packages provides with a compiled PETSc library.\nFreeFEM is now interfaced with ParMmg.\n\n\n\nNew meshes and FEM border¶\nAfter Surface FEM, Line FEM is possible with a new mesh type meshL, P0 P1 P2 P1dc FE, basic FEM, mesh generation.\nThis new development allows to treat a 1d problem, such as a problem described on a 3d curve.\n\nAbstract about Line FEM in FreeFEM.\n\nnew meshL type, refer to the section The type meshL in 3 dimension\n\nnew type of surface mesh: meshL\nthe functionalities on the meshL type, it is necessary to load the plugin ”msh3”.\ngenerator of meshL segment, define multi border and buildmesh function.\nbasic transformation are avalaible: movemesh, trunc, extract, checkmesh, change, AddLayers, glue of meshL.\nIt is possible to build the underlying meshL from a meshS with the function buildBdMesh: ThS = buildBdMesh(ThS) builds the boundary domain associated to the meshS ThS and extract it by the command meshL ThL = ThS. Gamma.\n\n\n\nnew finite element space with curve finite element type\n\n\n\nFESpace P0 P1, P2, P1dc Lagrange finite elements and possible to add a custumed finite element with the classical method (like a plugin).\n\n\n\nas in the standard 2d, 3d, surface 3d case, the variational problem associated to surface PDE can be defined by using the keywords\n\nproblem\nvarf to access to matrix and RHS vector\navailable operators are int1d, on and the operator int0d to define a Neumann boundary condition\n\n\nvisualisation tools\n\nplot with plot of ffglut, medit meshes meshL and solutions\n2d or 3d view, with in 3d the option to visualize the elememt Normals at element (touch ‘T’) and the deformed domain according to it (touch ‘2’).\nloading, saving of meshes and solution at FreeFEM’s format\n\n“.mesh”  mesh format file of Medit (P. Frey LJLL)\n“.msh” for mesh and “.sol” data solution at freefem format\n“.msh” data file of Gmsh (Mesh generator) (load  “gmsh”)\nvtk format for meshes and solutions (load “iovtk” and use the “.vtu” extension)\n\n\n\n\n\n\n\n\nBoundary Element Method¶\nAllows to define and solve a 2d/3d BEM formulation and rebuild the associated potential.\nThe document is in construction.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Introduction\n\t\t\tNext topic: Installation guide \n\t\t\n\t","l":"introduction/new-features.html"},"37":{"t":"Compressible Neo-Hookean materials","p":"\n\t\t\n   \nCompressible Neo-Hookean materials¶\nAuthor: Alex Sadovsky\n\nNotation¶\nIn what follows, the symbols \\(\\mathbf{u}, \\bF, \\bB, \\bC, \\stress\\) denote, respectively, the displacement field, the deformation gradient, the left Cauchy-Green strain tensor \\(\\bB  =  \\bF \\bF^T\\), the right Cauchy-Green strain tensor \\(\\bC  = \\bF^T \\bF\\), and the Cauchy stress tensor.\nWe also introduce the symbols \\(I_1 : =  \\tr \\bC\\) and \\(J : =  \\det\\bF\\).\nUse will be made of the identity:\n\n\\[{\\p J \\over \\p \\bC}  =  J \\bC^{-1}\\]\nThe symbol \\(\\Id\\) denotes the identity tensor.\nThe symbol \\(\\Omega_{0}\\) denotes the reference configuration of the body to be deformed.\nThe unit volume in the reference (resp., deformed) configuration is denoted \\(dV\\) (resp., \\(dV_{0}\\)); these two are related by:\n\n\\[dV  =  J dV_{0},\\]\nwhich allows an integral over \\(\\Omega\\) involving the Cauchy stress \\(\\bT\\) to be rewritten as an integral of the Kirchhoff stress \\(\\kappa  =  J \\bT\\) over \\(\\Omega_{0}\\).\n\n\nRecommended References¶\nFor an exposition of nonlinear elasticity and of the underlying linear and tensor algebra, see [OGDEN1984].\nFor an advanced mathematical analysis of the Finite Element Method, see [RAVIART1998].\n\n\nA Neo-Hookean Compressible Material¶\nConstitutive Theory and Tangent Stress Measures\nThe strain energy density function is given by:\n\n\\[W  =  {\\mu \\over 2}(I_1 - \\tr \\Id - 2 \\ln J)\\]\n(see [HORGAN2004], formula (12)).\nThe corresponding 2nd Piola-Kirchoff stress tensor is given by:\n\n\\[\\bS_{n} : =  {\\p W \\over \\p\\bE} (\\bF_{n})\n = \n\\mu (\\Id - \\bC^{-1})\\]\nThe Kirchhoff stress, then, is:\n\n\\[\\kappa\n =  \\bF \\bS \\bF^{T}\n =  \\mu (\\bB - \\Id)\\]\nThe tangent Kirchhoff stress tensor at \\(\\bF_{n}\\) acting on \\(\\delta \\bF_{n+1}\\) is, consequently:\n\n\\[{\\p \\kappa \\over \\p \\bF} (\\bF_{n}) \\delta \\bF_{n+1}\n = \n\\mu\n\\left[\n\\bF_{n} (\\delta \\bF_{n+1})^T\n+\n\\delta \\bF_{n+1} (\\bF_{n})^T\n\\right]\\]\nThe Weak Form of the BVP in the Absence of Body (External) Forces\nThe \\(\\Omega_0\\) we are considering is an elliptical annulus, whose boundary consists of two concentric ellipses (each allowed to be a circle as a special case), with the major axes parallel.\nLet \\(P\\) denote the dead stress load (traction) on a portion \\(\\partial \\Omega_0^{t}\\) ( =  the inner ellipse) of the boundary \\(\\partial \\Omega_0\\).\nOn the rest of the boundary, we prescribe zero displacement.\nThe weak formulation of the boundary value problem is:\n\n\\[\\begin{split}\\arr{lll}\n0\n&  =  &\n\\int_{\\Omega_0}\n\\kappa[\\bF]\n\\:\n:\n\\:\n\\left\\{\n(\\Grad \\otimes \\mathbf{w}) (\\bF)^{-1}\n\\right\\}\\\\\n& - & \\int_{\\p \\Omega_0^{t}} P \\cdot \\hat{N}_0\\\\\n\\rra\\end{split}\\]\nFor brevity, in the rest of this section we assume \\(P  =  0\\).\nThe provided FreeFEM code, however, does not rely on this assumption and allows for a general value and direction of \\(P\\).\nGiven a Newton approximation \\(\\mathbf{u}_n\\) of the displacement field \\(\\mathbf{u}\\) satisfying the BVP, we seek the correction \\(\\delta \\mathbf{u}_{n+1}\\) to obtain a better approximation:\n\n\\[\\mathbf{u}_{n+1}  =  \\mathbf{u}_{n} + \\delta \\mathbf{u}_{n+1}\\]\nby solving the weak formulation:\n\n\\[\\begin{split}\\arr{lll}\n    0 & = & \\int_{\\Omega_0}\\kappa[\\bF_{n} + \\delta \\bF_{n+1}]\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w}) (\\bF_{n} + \\delta\\bF_{n+1})^{-1}\\right\\}- \\int_{\\p \\Omega_0} P \\cdot \\hat{N}_0\\\\\n    & = & \\int_{\\Omega_0}\\left\\{\\kappa[\\bF_{n}] + {\\p \\kappa \\over \\p \\bF}[\\bF_{n}]\\delta \\bF_{n+1}\\right\\}\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w})(\\bF_{n} + \\delta \\bF_{n+1})^{-1}\\right\\}\\\\\n    & = & \\int_{\\Omega_0}\\left\\{\\kappa[\\bF_{n}] + {\\p \\kappa \\over \\p \\bF}[\\bF_{n}]\\delta \\bF_{n+1}\\right\\}\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w}) (\\bF_{n}^{-1} + \\bF_{n}^{-2} \\delta \\bF_{n+1})\\right\\}\\\\\n    \\\\\n    & = & \\int_{\\Omega_0}\\kappa[\\bF_{n}]\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w})\\bF_{n}^{-1}\\right\\}\\\\\n    &-& \\int_{\\Omega_0}\\kappa[\\bF_{n}]\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w})(\\bF_{n}^{-2} \\delta \\bF_{n+1})\\right\\}\\\\\n    &+& \\int_{\\Omega_0}\\left\\{{\\p \\kappa \\over \\p \\bF}[\\bF_{n}]\\delta \\bF_{n+1}\\right\\}\\: :\\: \\left\\{(\\Grad \\otimes \\mathbf{w})\n\\bF_{n}^{-1}\n\\right\\}\n\\\\\n\\rra\n\\quad\n\\mbox{for all test functions} \\mathbf{w},\\end{split}\\]\nwhere we have taken:\n\n\\[\\delta \\bF_{n+1}  =  \\Grad \\otimes \\delta \\mathbf{u}_{n+1}\\]\n\nNote\nContrary to standard notational use, the symbol \\(\\delta\\) here bears no variational context.\nBy \\(\\delta\\) we mean simply an increment in the sense of Newton’s Method.\nThe role of a variational virtual displacement here is played by \\(\\mathbf{w}\\).\n\n\n\nAn Approach to Implementation in FreeFEM¶\nIntroducing the code-like notation, where a string in \\(< >\\)’s is to be read as one symbol, the individual components of the tensor:\n\n\\[<TanK>\n : = \n{\\p \\kappa \\over \\p \\bF}[\\bF_{n}]\n\\delta \\bF_{n+1}\\]\nwill be implemented as the macros \\(<TanK11>\\), \\(<TanK12>\\), …\nThe individual components of the tensor quantities:\n\n\\[\\bD_{1} : = \n\\bF_{n} (\\delta \\bF_{n+1})^T\n+\n\\delta \\bF_{n+1} (\\bF_{n})^T,\\]\n\n\\[\\bD_{2} : = \n\\bF_{n}^{-T} \\delta \\bF_{n+1},\\]\n\n\\[\\bD_{3} : = \n(\\Grad \\otimes \\mathbf{w})\n\\bF_{n}^{-2} \\delta \\bF_{n+1},\\]\nand\n\n\\[\\bD_{4} : = \n(\\Grad \\otimes \\mathbf{w})\n\\bF_{n}^{-1},\\]\nwill be implemented as the macros:\n\n\\[\\begin{split}\\arr{l}\n<d1Aux11>, <d1Aux12>, \\quad \\ldots \\quad, <d1Aux22>,\\\\\n<d2Aux11>, <d2Aux12>, \\quad \\ldots \\quad, <d2Aux22>\\\\\n<d3Aux11>, <d3Aux12>, \\quad \\ldots \\quad, <d3Aux22>\\\\\n<d4Aux11>, <d4Aux12>, \\quad \\ldots \\quad, <d4Aux22>\\\\\n\\rra,\\end{split}\\]\nrespectively.\nIn the above notation, the tangent Kirchhoff stress term becomes\n\n\\[{\\p \\kappa \\over \\p \\bF} (\\bF_{n})\n\\: \\delta \\bF_{n+1}\n = \n\\mu\n\\: \\bD_{1}\\]\nwhile the weak BVP formulation acquires the form:\n\n\\[\\begin{split}\\arr{lll}\n0 &  =  &\n\\int_{\\Omega_0}\n\\kappa[\\bF_{n}]\n\\:\n:\n\\:\n\\bD_{4}\n\\\\\n&-&\n\\int_{\\Omega_0}\n\\kappa[\\bF_{n}]\n\\:\n:\n\\:\n\\bD_{3}\n\\\\\n&+&\n\\int_{\\Omega_0}\n\\left\\{\n{\\p \\kappa \\over \\p \\bF}[\\bF_{n}]\n\\delta \\bF_{n+1}\n\\right\\}\n\\:\n:\n\\:\n\\bD_{4}\n\\\\\n\\rra\n\\quad\n\\mbox{for all test functions} \\mathbf{w}\\end{split}\\]\n  1 // Macro\n  2 //Macros for the gradient of a vector field (u1, u2)\n  3 macro grad11(u1, u2) (dx(u1)) //\n  4 macro grad21(u1, u2) (dy(u1)) //\n  5 macro grad12(u1, u2) (dx(u2)) //\n  6 macro grad22(u1, u2) (dy(u2)) //\n  7 \n  8 //Macros for the deformation gradient\n  9 macro F11(u1, u2) (1.0 + grad11(u1, u2)) //\n 10 macro F12(u1, u2) (0.0 + grad12(u1, u2)) //\n 11 macro F21(u1, u2) (0.0 + grad21(u1, u2)) //\n 12 macro F22(u1, u2) (1.0 + grad22(u1, u2)) //\n 13 \n 14 //Macros for the incremental deformation gradient\n 15 macro dF11(varu1, varu2) (grad11(varu1, varu2)) //\n 16 macro dF12(varu1, varu2) (grad12(varu1, varu2)) //\n 17 macro dF21(varu1, varu2) (grad21(varu1, varu2)) //\n 18 macro dF22(varu1, varu2) (grad22(varu1, varu2)) //\n 19 \n 20 //Macro for the determinant of the deformation gradient\n 21 macro J(u1, u2) (\n 22       F11(u1, u2)*F22(u1, u2)\n 23     - F12(u1, u2)*F21(u1, u2)\n 24 ) //\n 25 \n 26 //Macros for the inverse of the deformation gradient\n 27 macro Finv11 (u1, u2) (\n 28       F22(u1, u2) / J(u1, u2)\n 29 ) //\n 30 macro Finv22 (u1, u2) (\n 31       F11(u1, u2) / J(u1, u2)\n 32 ) //\n 33 macro Finv12 (u1, u2) (\n 34     - F12(u1, u2) / J(u1, u2)\n 35 ) //\n 36 macro Finv21 (u1, u2) (\n 37     - F21(u1, u2) / J(u1, u2)\n 38 ) //\n 39 \n 40 //Macros for the square of the inverse of the deformation gradient\n 41 macro FFinv11 (u1, u2) (\n 42       Finv11(u1, u2)^2\n 43     + Finv12(u1, u2)*Finv21(u1, u2)\n 44 ) //\n 45 \n 46 macro FFinv12 (u1, u2) (\n 47       Finv12(u1, u2)*(Finv11(u1, u2)\n 48     + Finv22(u1, u2))\n 49 ) //\n 50 \n 51 macro FFinv21 (u1, u2) (\n 52       Finv21(u1, u2)*(Finv11(u1, u2)\n 53     + Finv22(u1, u2))\n 54 ) //\n 55 \n 56 macro FFinv22 (u1, u2) (\n 57       Finv12(u1, u2)*Finv21(u1, u2)\n 58     + Finv22(u1, u2)^2\n 59 ) //\n 60 \n 61 //Macros for the inverse of the transpose of the deformation gradient\n 62 macro FinvT11(u1, u2) (Finv11(u1, u2)) //\n 63 macro FinvT12(u1, u2) (Finv21(u1, u2)) //\n 64 macro FinvT21(u1, u2) (Finv12(u1, u2)) //\n 65 macro FinvT22(u1, u2) (Finv22(u1, u2)) //\n 66 \n 67 //The left Cauchy-Green strain tensor\n 68 macro B11(u1, u2) (\n 69       F11(u1, u2)^2 + F12(u1, u2)^2\n 70 )//\n 71 \n 72 macro B12(u1, u2) (\n 73       F11(u1, u2)*F21(u1, u2)\n 74     + F12(u1, u2)*F22(u1, u2)\n 75 )//\n 76 \n 77 macro B21(u1, u2) (\n 78       F11(u1, u2)*F21(u1, u2)\n 79     + F12(u1, u2)*F22(u1, u2)\n 80 )//\n 81 \n 82 macro B22(u1, u2)(\n 83       F21(u1, u2)^2 + F22(u1, u2)^2\n 84 )//\n 85 \n 86 //The macros for the auxiliary tensors (D0, D1, D2, ...): Begin\n 87 //The tensor quantity D0  =  F{n} (delta F{n+1})^T\n 88 macro d0Aux11 (u1, u2, varu1, varu2) (\n 89       dF11(varu1, varu2) * F11(u1, u2)\n 90     + dF12(varu1, varu2) * F12(u1, u2)\n 91 )//\n 92 \n 93 macro d0Aux12 (u1, u2, varu1, varu2) (\n 94       dF21(varu1, varu2) * F11(u1, u2)\n 95     + dF22(varu1, varu2) * F12(u1, u2)\n 96 )//\n 97 \n 98 macro d0Aux21 (u1, u2, varu1, varu2) (\n 99       dF11(varu1, varu2) * F21(u1, u2)\n100     + dF12(varu1, varu2) * F22(u1, u2)\n101 )//\n102 \n103 macro d0Aux22 (u1, u2, varu1, varu2) (\n104       dF21(varu1, varu2) * F21(u1, u2)\n105     + dF22(varu1, varu2) * F22(u1, u2)\n106 )//\n107 \n108 ///The tensor quantity D1  =  D0 + D0^T\n109 macro d1Aux11 (u1, u2, varu1, varu2) (\n110       2.0 * d0Aux11 (u1, u2, varu1, varu2)\n111 )//\n112 \n113 macro d1Aux12 (u1, u2, varu1, varu2) (\n114       d0Aux12 (u1, u2, varu1, varu2)\n115     + d0Aux21 (u1, u2, varu1, varu2)\n116 )//\n117 \n118 macro d1Aux21 (u1, u2, varu1, varu2) (\n119       d1Aux12 (u1, u2, varu1, varu2)\n120 )//\n121 \n122 macro d1Aux22 (u1, u2, varu1, varu2)(\n123       2.0 * d0Aux22 (u1, u2, varu1, varu2)\n124 )//\n125 \n126 ///The tensor quantity D2  =  F^{-T}_{n} dF_{n+1}\n127 macro d2Aux11 (u1, u2, varu1, varu2) (\n128       dF11(varu1, varu2) * FinvT11(u1, u2)\n129     + dF21(varu1, varu2) * FinvT12(u1, u2)\n130 )//\n131 \n132 macro d2Aux12 (u1, u2, varu1, varu2) (\n133       dF12(varu1, varu2) * FinvT11(u1, u2)\n134     + dF22(varu1, varu2) * FinvT12(u1, u2)\n135 )//\n136 \n137 macro d2Aux21 (u1, u2, varu1, varu2) (\n138       dF11(varu1, varu2) * FinvT21(u1, u2)\n139     + dF21(varu1, varu2) * FinvT22(u1, u2)\n140 )//\n141 \n142 macro d2Aux22 (u1, u2, varu1, varu2) (\n143       dF12(varu1, varu2) * FinvT21(u1, u2)\n144     + dF22(varu1, varu2) * FinvT22(u1, u2)\n145 )//\n146 \n147 ///The tensor quantity D3  =  F^{-2}_{n} dF_{n+1}\n148 macro d3Aux11 (u1, u2, varu1, varu2, w1, w2) (\n149       dF11(varu1, varu2) * FFinv11(u1, u2) * grad11(w1, w2)\n150     + dF21(varu1, varu2) * FFinv12(u1, u2) * grad11(w1, w2)\n151     + dF11(varu1, varu2) * FFinv21(u1, u2) * grad12(w1, w2)\n152     + dF21(varu1, varu2) * FFinv22(u1, u2) * grad12(w1, w2)\n153 )//\n154 \n155 macro d3Aux12 (u1, u2, varu1, varu2, w1, w2) (\n156       dF12(varu1, varu2) * FFinv11(u1, u2) * grad11(w1, w2)\n157     + dF22(varu1, varu2) * FFinv12(u1, u2) * grad11(w1, w2)\n158     + dF12(varu1, varu2) * FFinv21(u1, u2) * grad12(w1, w2)\n159     + dF22(varu1, varu2) * FFinv22(u1, u2) * grad12(w1, w2)\n160 )//\n161 \n162 macro d3Aux21 (u1, u2, varu1, varu2, w1, w2) (\n163       dF11(varu1, varu2) * FFinv11(u1, u2) * grad21(w1, w2)\n164     + dF21(varu1, varu2) * FFinv12(u1, u2) * grad21(w1, w2)\n165     + dF11(varu1, varu2) * FFinv21(u1, u2) * grad22(w1, w2)\n166     + dF21(varu1, varu2) * FFinv22(u1, u2) * grad22(w1, w2)\n167 )//\n168 \n169 macro d3Aux22 (u1, u2, varu1, varu2, w1, w2) (\n170       dF12(varu1, varu2) * FFinv11(u1, u2) * grad21(w1, w2)\n171     + dF22(varu1, varu2) * FFinv12(u1, u2) * grad21(w1, w2)\n172     + dF12(varu1, varu2) * FFinv21(u1, u2) * grad22(w1, w2)\n173     + dF22(varu1, varu2) * FFinv22(u1, u2) * grad22(w1, w2)\n174 )//\n175 \n176 ///The tensor quantity D4  =  (grad w) * Finv\n177 macro d4Aux11 (w1, w2, u1, u2) (\n178       Finv11(u1, u2)*grad11(w1, w2)\n179     + Finv21(u1, u2)*grad12(w1, w2)\n180 )//\n181 \n182 macro d4Aux12 (w1, w2, u1, u2) (\n183       Finv12(u1, u2)*grad11(w1, w2)\n184     + Finv22(u1, u2)*grad12(w1, w2)\n185 )//\n186 \n187 macro d4Aux21 (w1, w2, u1, u2) (\n188       Finv11(u1, u2)*grad21(w1, w2)\n189     + Finv21(u1, u2)*grad22(w1, w2)\n190 )//\n191 \n192 macro d4Aux22 (w1, w2, u1, u2) (\n193       Finv12(u1, u2)*grad21(w1, w2)\n194     + Finv22(u1, u2)*grad22(w1, w2)\n195 )//\n196 //The macros for the auxiliary tensors (D0, D1, D2, ...): End\n197 \n198 //The macros for the various stress measures: BEGIN\n199 //The Kirchhoff stress tensor\n200 macro StressK11(u1, u2) (\n201       mu * (B11(u1, u2) - 1.0)\n202 )//\n203 \n204 //The Kirchhoff stress tensor\n205 macro StressK12(u1, u2) (\n206       mu * B12(u1, u2)\n207 )//\n208 \n209 //The Kirchhoff stress tensor\n210 macro StressK21(u1, u2) (\n211       mu * B21(u1, u2)\n212 )//\n213 \n214 //The Kirchhoff stress tensor\n215 macro StressK22(u1, u2) (\n216       mu * (B22(u1, u2) - 1.0)\n217 )//\n218 \n219 //The tangent Kirchhoff stress tensor\n220 macro TanK11(u1, u2, varu1, varu2) (\n221       mu * d1Aux11(u1, u2, varu1, varu2)\n222 )//\n223 \n224 macro TanK12(u1, u2, varu1, varu2) (\n225       mu * d1Aux12(u1, u2, varu1, varu2)\n226 )//\n227 \n228 macro TanK21(u1, u2, varu1, varu2) (\n229       mu * d1Aux21(u1, u2, varu1, varu2)\n230 )//\n231 \n232 macro TanK22(u1, u2, varu1, varu2) (\n233       mu * d1Aux22(u1, u2, varu1, varu2)\n234 )//\n235 //The macros for the stress tensor components: END\n236 \n237 // Parameters\n238 real mu  =  5.e2; //Elastic coefficients (kg/cm^2)\n239 real D  =  1.e3; //(1 / compressibility)\n240 real Pa  =  -3.e2; //Stress loads\n241 \n242 real InnerRadius  =  1.e0; //The wound radius\n243 real OuterRadius  =  4.e0; //The outer (truncated) radius\n244 real tol  =  1.e-4; //Tolerance (L^2)\n245 real InnerEllipseExtension  =  1.e0; //Extension of the inner ellipse ((major axis) - (minor axis))\n246 \n247 int m  =  40, n  =  20;\n248 \n249 // Mesh\n250 border InnerEdge(t = 0, 2.*pi){x = (1.0 + InnerEllipseExtension)*InnerRadius*cos(t); y = InnerRadius*sin(t); label = 1;}\n251 border OuterEdge(t = 0, 2.*pi){x = (1.0 + 0.0*InnerEllipseExtension)*OuterRadius*cos(t); y = OuterRadius*sin(t); label = 2;}\n252 mesh Th  =  buildmesh(InnerEdge(-m) + OuterEdge(n));\n253 int bottom  =  1, right  =  2, upper  =  3, left  =  4;\n254 plot(Th);\n255 \n256 // Fespace\n257 fespace Wh(Th, P1dc);\n258 fespace Vh(Th, [P1, P1]);\n259 Vh [w1, w2], [u1n,u2n], [varu1, varu2];\n260 Vh [ehat1x, ehat1y], [ehat2x, ehat2y];\n261 Vh [auxVec1, auxVec2]; //The individual elements of the total 1st Piola-Kirchoff stress\n262 Vh [ef1, ef2];\n263 \n264 fespace Sh(Th, P1);\n265 Sh p, ppp;\n266 Sh StrK11, StrK12, StrK21, StrK22;\n267 Sh u1, u2;\n268 \n269 // Problem\n270 varf vfMass1D(p, q)  =  int2d(Th)(p*q);\n271 matrix Mass1D  =  vfMass1D(Sh, Sh, solver = CG);\n272 \n273 p[]  =  1;\n274 ppp[]  =  Mass1D * p[];\n275 \n276 real DomainMass  =  ppp[].sum;\n277 cout << \"DomainMass  =  \" << DomainMass << endl;\n278 \n279 varf vmass ([u1, u2], [v1, v2], solver = CG)\n280      =  int2d(Th)( (u1*v1 + u2*v2) / DomainMass );\n281 \n282 matrix Mass  =  vmass(Vh, Vh);\n283 \n284 matrix Id  =  vmass(Vh, Vh);\n285 \n286 //Define the standard Euclidean basis functions\n287 [ehat1x, ehat1y]  =  [1.0, 0.0];\n288 [ehat2x, ehat2y]  =  [0.0, 1.0];\n289 \n290 real ContParam, dContParam;\n291 \n292 problem neoHookeanInc ([varu1, varu2], [w1, w2], solver = LU)\n293      =  int2d(Th, qforder = 1)(\n294         - (\n295               StressK11 (u1n, u2n) * d3Aux11(u1n, u2n, varu1, varu2, w1, w2)\n296             + StressK12 (u1n, u2n) * d3Aux12(u1n, u2n, varu1, varu2, w1, w2)\n297             + StressK21 (u1n, u2n) * d3Aux21(u1n, u2n, varu1, varu2, w1, w2)\n298             + StressK22 (u1n, u2n) * d3Aux22(u1n, u2n, varu1, varu2, w1, w2)\n299         )\n300         + TanK11 (u1n, u2n, varu1, varu2) * d4Aux11(w1, w2, u1n, u2n)\n301         + TanK12 (u1n, u2n, varu1, varu2) * d4Aux12(w1, w2, u1n, u2n)\n302         + TanK21 (u1n, u2n, varu1, varu2) * d4Aux21(w1, w2, u1n, u2n)\n303         + TanK22 (u1n, u2n, varu1, varu2) * d4Aux22(w1, w2, u1n, u2n)\n304     )\n305     + int2d(Th, qforder = 1)(\n306           StressK11 (u1n, u2n) * d4Aux11(w1, w2, u1n, u2n)\n307         + StressK12 (u1n, u2n) * d4Aux12(w1, w2, u1n, u2n)\n308         + StressK21 (u1n, u2n) * d4Aux21(w1, w2, u1n, u2n)\n309         + StressK22 (u1n, u2n) * d4Aux22(w1, w2, u1n, u2n)\n310     )\n311     //Choose one of the following two boundary conditions involving Pa:\n312     // Load vectors normal to the boundary:\n313     - int1d(Th, 1)(\n314           Pa * (w1*N.x + w2*N.y)\n315     )\n316     //Load vectors tangential to the boundary:\n317     //- int1d(Th, 1)(\n318     //    Pa * (w1*N.y - w2*N.x)\n319     //)\n320     + on(2, varu1 = 0, varu2 = 0)\n321     ;\n322 \n323 //Auxiliary variables\n324 matrix auxMat;\n325 \n326 // Newton's method\n327 ContParam  =  0.;\n328 dContParam  =  0.01;\n329 \n330 //Initialization:\n331 [varu1, varu2]  =  [0., 0.];\n332 [u1n, u2n]  =  [0., 0.];\n333 real res  =  2. * tol;\n334 real eforceres;\n335 int loopcount  =  0;\n336 int loopmax  =  45;\n337 \n338 // Iterations\n339 while (loopcount < =  loopmax && res > =  tol){\n340     loopcount ++;\n341     cout << \"Loop \" << loopcount << endl;\n342 \n343     // Solve\n344     neoHookeanInc;\n345 \n346     // Update\n347     u1  =  varu1;\n348     u2  =  varu2;\n349 \n350     // Residual\n351     w1[]  =  Mass*varu1[];\n352     res  =  sqrt(w1[]' * varu1[]); //L^2 norm of [varu1, varu2]\n353     cout << \" L^2 residual  =  \" << res << endl;\n354 \n355     // Newton\n356     u1n[] + =  varu1[];\n357 \n358     // Plot\n359     plot([u1n,u2n], cmm = \"displacement\");\n360 }\n361 \n362 // Plot\n363 plot(Th, wait = true);\n364 \n365 // Movemesh\n366 mesh Th1  =  movemesh(Th, [x+u1n, y+u2n]);\n367 \n368 // Plot\n369 plot(Th1, wait = true);\n370 plot([u1n,u2n]);\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Non-linear elasticity\n\t\t\tNext topic: Whispering gallery modes \n\t\t\n\t","l":"models/compressible-neo-hookean-materials.html"},"38":{"t":"Domain decomposition","p":"\n\t\t\n   \nDomain decomposition¶\nWe present three classic examples of domain decomposition technique: first, Schwarz algorithm with overlapping, second Schwarz algorithm without overlapping (also call Shur complement), and last we show to use the conjugate gradient to solve the boundary problem of the Shur complement.\n\nSchwarz overlapping¶\nTo solve:\n\n\\[-\\Delta u  = f,\\;\\mbox{in}\\;\\Omega = \\Omega_1\\cup\\Omega_2\\quad u|_\\Gamma = 0\\]\nthe Schwarz algorithm runs like this:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta u^{n+1}_1& = &f\\;\\mbox{in}\\;\\Omega_1\\quad\n    u^{n+1}_1|_{\\Gamma_1} = u^n_2\\\\\n    -\\Delta u^{n+1}_2& = &f\\;\\mbox{in}\\;\\Omega_2\\quad\n    u^{n+1}_2|_{\\Gamma_2} = u^n_1\n\\end{array}\\end{split}\\]\nwhere \\(\\Gamma_i\\) is the boundary of \\(\\Omega_i\\) and on the condition that \\(\\Omega_1\\cap\\Omega_2\\neq\\emptyset\\) and that \\(u_i\\) are zero at iteration 1.\nHere we take \\(\\Omega_1\\) to be a quadrangle, \\(\\Omega_2\\) a disk and we apply the algorithm starting from zero.\n\n\n\nFig. 165 The 2 overlapping mesh TH and th¶\n\n\n\nTip\nSchwarz overlapping\n 1 // Parameters\n 2 int inside  = 2; //inside boundary\n 3 int outside  =  1; //outside boundary\n 4 int n  =  4;\n 5 \n 6 // Mesh\n 7 border a(t = 1, 2){x = t; y = 0; label = outside;}\n 8 border b(t = 0, 1){x = 2; y = t; label = outside;}\n 9 border c(t = 2, 0){x = t; y = 1; label = outside;}\n10 border d(t = 1, 0){x = 1-t; y = t; label = inside;}\n11 border e(t = 0, pi/2){x = cos(t); y = sin(t); label = inside;}\n12 border e1(t = pi/2, 2*pi){x = cos(t); y = sin(t); label = outside;}\n13 mesh th  =  buildmesh(a(5*n) + b(5*n) + c(10*n) + d(5*n));\n14 mesh TH  =  buildmesh(e(5*n) + e1(25*n));\n15 plot(th, TH, wait = true); //to see the 2 meshes\n16 \n17 // Fespace\n18 fespace vh(th, P1);\n19 vh u = 0, v;\n20 \n21 fespace VH(TH, P1);\n22 VH U, V;\n23 \n24 // Problem\n25 int i  =  0;\n26 problem PB (U, V, init = i, solver = Cholesky)\n27     =  int2d(TH)(\n28          dx(U)*dx(V)\n29        + dy(U)*dy(V)\n30    )\n31    + int2d(TH)(\n32        - V\n33    )\n34    + on(inside, U = u)\n35    + on(outside, U = 0)\n36    ;\n37 \n38 problem pb (u, v, init = i, solver = Cholesky)\n39     =  int2d(th)(\n40          dx(u)*dx(v)\n41        + dy(u)*dy(v)\n42    )\n43    + int2d(th)(\n44        - v\n45    )\n46    + on(inside, u = U)\n47    + on(outside, u = 0)\n48    ;\n49 \n50 // Calculation loop\n51 for (i  =  0 ; i < 10; i++){\n52    // Solve\n53    PB;\n54    pb;\n55 \n56    // Plot\n57    plot(U, u, wait = true);\n58 }\n\n\n\n\n\n\nFig. 166 Isovalues of the solution at iteration 0¶\n\n\n\n\n\nFig. 167 Isovalues of the solution at iteration 0¶\n\n\nSchwarz overlapping\n\n\n\nSchwarz non overlapping Scheme¶\nTo solve:\n\n\\[-\\Delta u  = f\\;\\mbox{in}\\;\\Omega = \\Omega_1\\cup\\Omega_2\\quad u|_\\Gamma = 0\\]\nthe Schwarz algorithm for domain decomposition without overlapping runs like this\n\n\n\nFig. 168 The two none overlapping mesh TH and th¶\n\n\nLet introduce \\(\\Gamma_i\\) is common the boundary of \\(\\Omega_1\\) and \\(\\Omega_2\\) and \\(\\Gamma_e^i =  \\partial \\Omega_i \\setminus \\Gamma_i\\).\nThe problem find \\(\\lambda\\) such that \\((u_1|_{\\Gamma_i} = u_2|_{\\Gamma_i})\\) where \\(u_i\\) is solution of the following Laplace problem:\n\n\\[-\\Delta u_i = f\\;\\mbox{in}\\;\\Omega_i\\quad\nu_i|_{\\Gamma_i} = \\lambda \\quad\nu_i|_{\\Gamma_e^i}  =  0\\]\nTo solve this problem we just make a loop with upgrading \\(\\lambda\\) with\n\n\\[\\lambda  =  \\lambda {\\pm} \\frac{(u_1-u_2)}{2}\\]\nwhere the sign \\(+\\) or \\(-\\) of \\({\\pm}\\) is choose to have convergence.\n\nTip\nSchwarz non-overlapping\n 1 // Parameters\n 2 int inside  =  2; int outside  =  1; int n  =  4;\n 3 \n 4 // Mesh\n 5 border a(t = 1, 2){x = t; y = 0; label = outside;};\n 6 border b(t = 0, 1){x = 2; y = t; label = outside;};\n 7 border c(t = 2, 0){x = t; y = 1; label = outside;};\n 8 border d(t = 1, 0){x = 1-t; y = t; label = inside;};\n 9 border e(t = 0, 1){x = 1-t; y = t; label = inside;};\n10 border e1(t = pi/2, 2*pi){x = cos(t); y = sin(t); label = outside;};\n11 mesh th  =  buildmesh(a(5*n) + b(5*n) + c(10*n) + d(5*n));\n12 mesh TH  =  buildmesh(e(5*n) + e1(25*n));\n13 plot(th, TH, wait = true);\n14 \n15 // Fespace\n16 fespace vh(th, P1);\n17 vh u = 0, v;\n18 vh lambda = 0;\n19 \n20 fespace VH(TH, P1);\n21 VH U, V;\n22 \n23 // Problem\n24 int i  =  0;\n25 problem PB (U, V, init = i, solver = Cholesky)\n26      =  int2d(TH)(\n27           dx(U)*dx(V)\n28         + dy(U)*dy(V)\n29     )\n30     + int2d(TH)(\n31         - V\n32     )\n33     + int1d(TH, inside)(\n34           lambda*V\n35     )\n36     + on(outside, U =  0 )\n37     ;\n38 \n39 problem pb (u, v, init = i, solver = Cholesky)\n40      =  int2d(th)(\n41           dx(u)*dx(v)\n42         + dy(u)*dy(v)\n43     )\n44     + int2d(th)(\n45         - v\n46     )\n47     + int1d(th, inside)(\n48         - lambda*v\n49     )\n50     + on(outside, u = 0)\n51     ;\n52 \n53 for (i  =  0; i < 10; i++){\n54     // Solve\n55     PB;\n56     pb;\n57     lambda  =  lambda - (u-U)/2;\n58 \n59     // Plot\n60     plot(U,u,wait = true);\n61 }\n62 \n63 // Plot\n64 plot(U, u);\n\n\n\n\n\n\nFig. 169 Isovalues of the solution at iteration 0 without overlapping¶\n\n\n\n\n\nFig. 170 Isovalues of the solution at iteration 9 without overlapping¶\n\n\n\n\n\nSchwarz conjuguate gradient¶\nTo solve \\(-\\Delta u  = f \\;\\mbox{in}\\;\\Omega = \\Omega_1\\cup\\Omega_2\\quad u|_\\Gamma = 0\\) the Schwarz algorithm for domain decomposition without overlapping runs like this\nLet introduce \\(\\Gamma_i\\) is common the boundary of \\(\\Omega_1\\) and \\(\\Omega_2\\) and \\(\\Gamma_e^i =  \\partial \\Omega_i \\setminus \\Gamma_i\\).\nThe problem find \\(\\lambda\\) such that \\((u_1|_{\\Gamma_i} = u_2|_{\\Gamma_i})\\) where \\(u_i\\) is solution of the following Laplace problem:\n\n\\[-\\Delta u_i = f\\;\\mbox{in}\\;\\Omega_i\\quad\nu_i|_{\\Gamma_i} = \\lambda \\quad\nu_i|_{\\Gamma_e^i}  =  0\\]\nThe version of this example uses the Shur complement.\nThe problem on the border is solved by a conjugate gradient method.\n\nTip\nSchwarz conjugate gradient\nFirst, we construct the two domains:\n 1 // Parameters\n 2 int inside  =  2; int outside  =  1; int n  =  4;\n 3 \n 4 // Mesh\n 5 border Gamma1(t = 1, 2){x = t; y = 0; label = outside;}\n 6 border Gamma2(t = 0, 1){x = 2; y = t; label = outside;}\n 7 border Gamma3(t = 2, 0){x = t; y = 1; label = outside;}\n 8 border GammaInside(t = 1, 0){x = 1-t; y = t; label = inside;}\n 9 border GammaArc(t = pi/2, 2*pi){x = cos(t); y = sin(t); label = outside;}\n10 mesh Th1  =  buildmesh(Gamma1(5*n) + Gamma2(5*n) + GammaInside(5*n) + Gamma3(5*n));\n11 mesh Th2  =  buildmesh(GammaInside(-5*n) + GammaArc(25*n));\n12 plot(Th1, Th2);\n\n\nNow, define the finite element spaces:\n1 // Fespace\n2 fespace Vh1(Th1, P1);\n3 Vh1 u1, v1;\n4 Vh1 lambda;\n5 Vh1 p = 0;\n6 \n7 fespace Vh2(Th2,P1);\n8 Vh2 u2, v2;\n\n\n\nNote\nIt is impossible to define a function just on a part of boundary, so the \\(\\lambda\\) function must be defined on the all domain \\(\\Omega_1\\) such as:\n1 Vh1 lambda;\n\n\n\nThe two Poisson’s problems:\n 1 problem Pb1 (u1, v1, init = i, solver = Cholesky)\n 2      =  int2d(Th1)(\n 3           dx(u1)*dx(v1)\n 4         + dy(u1)*dy(v1)\n 5     )\n 6     + int2d(Th1)(\n 7         - v1\n 8     )\n 9     + int1d(Th1, inside)(\n10           lambda*v1\n11     )\n12     + on(outside, u1 = 0)\n13     ;\n14 \n15 problem Pb2 (u2, v2, init = i, solver = Cholesky)\n16      =  int2d(Th2)(\n17           dx(u2)*dx(v2)\n18         + dy(u2)*dy(v2)\n19     )\n20     + int2d(Th2)(\n21         - v2\n22     )\n23     + int1d(Th2, inside)(\n24         - lambda*v2\n25     )\n26     + on(outside, u2 = 0)\n27     ;\n\n\nAnd, we define a border matrix, because the \\(\\lambda\\) function is none zero inside the domain \\(\\Omega_1\\):\n1 varf b(u2, v2, solver = CG)  =  int1d(Th1, inside)(u2*v2);\n2 matrix B  =  b(Vh1, Vh1, solver = CG);\n\n\nThe boundary problem function,\n\n\\[\\lambda \\longrightarrow \\int_{\\Gamma_i }(u_1-u_2) v_{1}\\]\n 1 // Boundary problem function\n 2 func real[int] BoundaryProblem (real[int] &l){\n 3    lambda[]  =  l; //make FE function form l\n 4    Pb1;\n 5    Pb2;\n 6    i++; //no refactorization i ! =  0\n 7    v1  =  -(u1-u2);\n 8    lambda[]  =  B*v1[];\n 9    return lambda[];\n10 }\n\n\n\nNote\nThe difference between the two notations v1 and v1[] is: v1 is the finite element function and v1[] is the vector in the canonical basis of the finite element function v1.\n\n1 // Solve\n2 real cpu = clock();\n3 LinearCG(BoundaryProblem, p[], eps = 1.e-6, nbiter = 100);\n4 //compute the final solution, because CG works with increment\n5 BoundaryProblem(p[]); //solve again to have right u1, u2\n6 \n7 // Display & Plot\n8 cout << \" -- CPU time schwarz-gc:\" << clock()-cpu << endl;\n9 plot(u1, u2);\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Variational Inequality\n\t\t\tNext topic: Fluid-structure coupled problem \n\t\t\n\t","l":"models/domain-decomposition.html"},"39":{"t":"Eigen value problems","p":"\n\t\t\n   \nEigen value problems¶\nThis section depends on your installation of FreeFEM; you need to have compiled ARPACK.\nThis tool is available in FreeFEM if the word eigenvalue appears in line Load:, like:\n1 -- FreeFem++ v*.** (date *** *** ** **:**:** CET ****)\n2  file : ***.edp\n3  Load: lg_fem lg_mesh eigenvalue\n\n\nThis tool is based on arpack++, the object-oriented version of ARPACK eigenvalue package [LEHOUCQ1998].\nThe function EigenValue computes the generalized eigenvalue of \\(A u  =  \\lambda B u\\).\nThe Shift-invert method is used by default, with sigma  = \\(\\sigma\\) the shift of the method.\nThe matrix \\(OP\\) is defined with \\(A - \\sigma B\\).\nThe return value is the number of converged eigenvalues (can be greater than the number of requested eigenvalues nev = )\n1 int k  =  EigenValue(OP, B, nev = Nev, sigma = Sigma);\n\n\nwhere the matrix \\(OP =  A - \\sigma B\\) with a solver and boundary condition, and the matrix \\(B\\).\nThere is also a functional interface:\n1 int k  =  EigenValue(n, FOP1, FB, nev = Nev, sigma = Sigma);\n\n\nwhere \\(n\\) is the size of the problem, and the operators are now defined through functions, defining respectively the matrix product of \\(OP^{-1}\\) and \\(B\\), as in\n1 int n  =  OP1.n;\n2 func real[int] FOP1(real[int] & u){ real[int] Au  =  OP^-1*u; return Au; }\n3 func real[int] FB(real[int] & u){ real[int] Au  =  B*u; return Au; }\n\n\nIf you want finer control over the method employed in ARPACK, you can specify which mode ARPACK will work with (mode =  , see ARPACK documentation [LEHOUCQ1998]). The operators necessary for the chosen mode can be passed through the optional parameters A = , A1 = , B = , B1 = , (see below).\n\nmode = 1: Regular mode for solving \\(A u  =  \\lambda u\\)\n1 int k  =  EigenValue(n, A = FOP, mode = 1, nev = Nev);\n\n\nwhere the function FOP defines the matrix product of A\n\nmode = 2: Regular inverse mode for solving \\(A u  =  \\lambda B u\\)\n1 int k  =  EigenValue(n, A = FOP, B = FB, B1 = FB1, mode = 2, nev = Nev);\n\n\nwhere the functions FOP, FB and FB1 define respectively the matrix product of \\(A\\), \\(B\\) and \\(B^{-1}\\)\n\nmode = 3: Shift-invert mode for solving \\(A u  =  \\lambda B u\\)\n1 int k  =  EigenValue(n, A1 = FOP1, B = FB, mode = 3, sigma = Sigma, nev = Nev);\n\n\nwhere the functions FOP1 and FB define respectively the matrix product of \\(OP^{-1}  =  (A - \\sigma B)^{-1}\\) and \\(B\\)\n\n\nYou can also specify which subset of eigenvalues you want to compute (which = ).\nThe default value is which = \"LM\", for eigenvalues with largest magnitude.\n\"SM\" is for smallest magnitude, \"LA\" for largest algebraic value, \"SA\" for smallest algebraic value, and \"BE\" for both ends of the spectrum.\nRemark: For complex problems, you need to use the keyword complexEigenValue instead of EigenValue when passing operators through functions.\n\nNote\nBoundary condition and Eigenvalue Problems\nThe locking (Dirichlet) boundary condition is make with exact penalization so we put 1e30 = tgv on the diagonal term of the locked degree of freedom (see Finite element chapter). So take Dirichlet boundary condition just on \\(A\\) and not on \\(B\\) because we solve \\(w = OP^{-1}*B*v\\).\nIf you put locking (Dirichlet) boundary condition on \\(B\\) matrix (with key work on) you get small spurious modes \\((10^{-30})\\), due to boundary condition, but if you forget the locking boundary condition on \\(B\\) matrix (no keywork on) you get huge spurious \\((10^{30})\\) modes associated to these boundary conditons. We compute only small mode, so we get the good one in this case.\n\n\nsym =  The problem is symmetric (all the eigen value are real)\nnev =  The number desired eigenvalues (nev) close to the shift.\nvalue =  The array to store the real part of the eigenvalues\nivalue =  The array to store the imaginary part of the eigenvalues\nvector =  The FE function array to store the eigenvectors\nrawvector =  An array of type real[int,int] to store eigenvectors by column.\nFor real non symmetric problems, complex eigenvectors are given as two consecutive vectors, so if eigenvalue \\(k\\) and \\(k+1\\) are complex conjugate eigenvalues, the \\(k\\)th vector will contain the real part and the \\(k+1\\)th vector the imaginary part of the corresponding complex conjugate eigenvectors.\n\ntol =  The relative accuracy to which eigenvalues are to be determined;\nsigma =  The shift value;\nmaxit =  The maximum number of iterations allowed;\nncv =  The number of Arnoldi vectors generated at each iteration of ARPACK;\nmode =  The computational mode used by ARPACK (see above);\nwhich =  The requested subset of eigenvalues (see above).\n\n\nTip\nLaplace eigenvalue\nIn the first example, we compute the eigenvalues and the eigenvectors of the Dirichlet problem on square \\(\\Omega = ]0,\\pi[^2\\).\nThe problem is to find: \\(\\lambda\\), and \\(\\nabla u_{\\lambda}\\) in \\(\\mathbb{R}{\\times} H^1_0(\\Omega)\\)\n\n\\[\\int_\\Omega \\nabla u_{\\lambda} \\nabla v  =  \\lambda \\int_\\Omega u v \\quad \\forall v \\in H^1_0(\\Omega)\\]\nThe exact eigenvalues are \\(\\lambda_{n,m}  = (n^2+m^2), (n,m)\\in {\\mathbb{N}_*}^2\\) with the associated eigenvectors are \\(u_{{m,n}} = \\sin(nx)*\\sin(my)\\).\nWe use the generalized inverse shift mode of the arpack++ library, to find 20 eigenvalues and eigenvectors close to the shift value \\(\\sigma = 20\\).\n 1 // Parameters\n 2 verbosity = 0;\n 3 real sigma  =  20; //value of the shift\n 4 int nev  =  20; //number of computed eigen value close to sigma\n 5 \n 6 // Mesh\n 7 mesh Th  =  square(20, 20, [pi*x, pi*y]);\n 8 \n 9 // Fespace\n10 fespace Vh(Th, P2);\n11 Vh u1, u2;\n12 \n13 // Problem\n14 // OP  =  A - sigma B ; // the shifted matrix\n15 varf op (u1, u2)\n16      =  int2d(Th)(\n17           dx(u1)*dx(u2)\n18         + dy(u1)*dy(u2)\n19         - sigma* u1*u2\n20     )\n21     + on(1, 2, 3, 4, u1 = 0)\n22     ;\n23 \n24 varf b ([u1], [u2])  =  int2d(Th)(u1*u2); //no boundary condition\n25 \n26 matrix OP  =  op(Vh, Vh, solver = Crout, factorize = 1); //crout solver because the matrix in not positive\n27 matrix B  =  b(Vh, Vh, solver = CG, eps = 1e-20);\n28 \n29 // important remark:\n30 // the boundary condition is make with exact penalization:\n31 // we put 1e30 = tgv on the diagonal term of the lock degree of freedom.\n32 // So take Dirichlet boundary condition just on $a$ variational form\n33 // and not on $b$ variational form.\n34 // because we solve $ w = OP^-1*B*v $\n35 \n36 // Solve\n37 real[int] ev(nev); //to store the nev eigenvalue\n38 Vh[int] eV(nev); //to store the nev eigenvector\n39 \n40 int k  =  EigenValue(OP, B, sym = true, sigma = sigma, value = ev, vector = eV,\n41     tol = 1e-10, maxit = 0, ncv = 0);\n42 \n43 // Display & Plot\n44 for (int i  =  0; i < k; i++){\n45     u1  =  eV[i];\n46     real gg  =  int2d(Th)(dx(u1)*dx(u1) + dy(u1)*dy(u1));\n47     real mm  =  int2d(Th)(u1*u1) ;\n48     cout << \"lambda[\" << i << \"]  =  \" << ev[i] << \", err =  \" << int2d(Th)(dx(u1)*dx(u1) + dy(u1)*dy(u1) - (ev[i])*u1*u1) << endl;\n49     plot(eV[i], cmm = \"Eigen Vector \"+i+\" value  = \"+ev[i], wait = true, value = true);\n50 }\n\n\nThe output of this example is:\n 1 lambda[0]  =  5.0002, err =  -1.46519e-11\n 2 lambda[1]  =  8.00074, err =  -4.05158e-11\n 3 lambda[2]  =  10.0011, err =  2.84925e-12\n 4 lambda[3]  =  10.0011, err =  -7.25456e-12\n 5 lambda[4]  =  13.002, err =  -1.74257e-10\n 6 lambda[5]  =  13.0039, err =  1.22554e-11\n 7 lambda[6]  =  17.0046, err =  -1.06274e-11\n 8 lambda[7]  =  17.0048, err =  1.03883e-10\n 9 lambda[8]  =  18.0083, err =  -4.05497e-11\n10 lambda[9]  =  20.0096, err =  -2.21678e-13\n11 lambda[10]  =  20.0096, err =  -4.16212e-14\n12 lambda[11]  =  25.014, err =  -7.42931e-10\n13 lambda[12]  =  25.0283, err =  6.77444e-10\n14 lambda[13]  =  26.0159, err =  3.19864e-11\n15 lambda[14]  =  26.0159, err =  -4.9652e-12\n16 lambda[15]  =  29.0258, err =  -9.99573e-11\n17 lambda[16]  =  29.0273, err =  1.38242e-10\n18 lambda[17]  =  32.0449, err =  1.2522e-10\n19 lambda[18]  =  34.049, err =  3.40213e-11\n20 lambda[19]  =  34.0492, err =  2.41751e-10\n\n\n\n\n\n\nFig. 157 Isovalue of 11th eigenvector \\(u_{4,3}-u_{3,4}\\)¶\n\n\n\n\n\nFig. 158 Isovalue of 12th eigenvector \\(u_{4,3}+u_{3,4}\\)¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Non-linear static problems\n\t\t\tNext topic: Evolution problems \n\t\t\n\t","l":"models/eigen-value-problems.html"},"40":{"t":"Elasticity","p":"\n\t\t\n   \nElasticity¶\nConsider an elastic plate with undeformed shape \\(\\Omega\\times ]-h,h[\\) in \\(\\mathbb{R}^3\\), \\(\\Omega\\subset\\mathbb{R}^2\\).\nBy the deformation of the plate, we assume that a point \\(P(x_1,x_2,x_3)\\) moves to \\({\\cal P}(\\xi_1,\\xi_2,\\xi_3)\\).\nThe vector \\(\\mathbf{u} = (u_1,u_2,u_3) = (\\xi_1-x_1,\\xi_2-x_2,\\xi_3-x_3)\\) is called the displacement vector.\nBy the deformation, the line segment \\(\\overline{\\mathbf{x},\\mathbf{x}+\\tau\\Delta\\mathbf{x}}\\) moves approximately to \\(\\overline{\\mathbf{x}+\\mathbf{u}(\\mathbf{x}),\\mathbf{x}+\\tau\\Delta\\mathbf{x} +\\mathbf{u}(\\mathbf{x}+\\tau\\Delta\\mathbf{x})}\\) for small \\(\\tau\\), where \\(\\mathbf{x} = (x_1,x_2,x_3),\\, \\Delta\\mathbf{x}  = (\\Delta x_1,\\Delta x_2,\\Delta x_3)\\).\nWe now calculate the ratio between two segments:\n\n\\[\\eta(\\tau) = \\tau^{-1}|\\Delta\\mathbf{x}|^{-1}\n\\left(|\\mathbf{u}(\\mathbf{x}+\\tau\\Delta\\mathbf{x})\n-\\mathbf{u}(\\mathbf{x})+\\tau\\Delta\\mathbf{x}|-\\tau|\\Delta\\mathbf{x}|\\right)\\]\nthen we have (see e.g. [NECAS2017], p.32)\n\n\\[\\lim_{\\tau\\to 0}\\eta(\\tau) = (1+2e_{ij}\\nu_i\\nu_j)^{1/2}-1,\n\\quad 2e_{ij} = \\frac{\\partial u_k}{\\partial x_i}\\frac{\\partial u_k}{\\partial x_j}+\\left(\\frac{\\partial u_i}{\\partial x_j}+\n\\frac{\\partial u_j}{\\partial x_i}\\right)\\]\nwhere \\(\\nu_i = \\Delta x_i|\\Delta\\mathbf{x}|^{-1}\\).\nIf the deformation is small, then we may consider that:\n\n\\[(\\partial u_k/\\partial x_i)(\\partial u_k/\\partial x_i)\\approx 0\\]\nand the following is called small strain tensor:\n\n\\[\\varepsilon_{ij}(u) = \\frac{1}{2}\\left(\\frac{\\partial u_i}{\\partial x_j}+\n\\frac{\\partial u_j}{\\partial x_i}\\right)\\]\nThe tensor \\(e_{ij}\\) is called finite strain tensor.\nConsider the small plane \\(\\Delta \\Pi(\\mathbf{x})\\) centered at \\(\\mathbf{x}\\) with the unit normal direction \\(\\mathbf{n} = (n_1,n_2,n_3)\\), then the surface on \\(\\Delta \\Pi(\\mathbf{x})\\) at \\(\\mathbf{x}\\) is:\n\n\\[(\\sigma_{1j}(\\mathbf{x})n_j, \\sigma_{2j}(\\mathbf{x})n_j, \\sigma_{3j}(\\mathbf{x})n_j)\\]\nwhere \\(\\sigma_{ij}(\\mathbf{x})\\) is called stress tensor at \\(\\mathbf{x}\\).\nHooke’s law is the assumption of a linear relation between \\(\\sigma_{ij}\\) and \\(\\varepsilon_{ij}\\) such as:\n\n\\[\\sigma_{ij}(\\mathbf{x}) = c_{ijkl}(\\mathbf{x})\\varepsilon_{ij}(\\mathbf{x})\\]\nwith the symmetry \\(c_{ijkl} = c_{jikl}, c_{ijkl} = c_{ijlk}, c_{ijkl} = c_{klij}\\).\nIf Hooke’s tensor \\(c_{ijkl}(\\mathbf{x})\\) do not depend on the choice of coordinate system, the material is called isotropic at \\(\\mathbf{x}\\).\nIf \\(c_{ijkl}\\) is constant, the material is called homogeneous.\nIn homogeneous isotropic case, there is Lamé constants \\(\\lambda, \\mu\\) (see e.g. [NECAS2017], p.43) satisfying\n\n\\[\\sigma_{ij} = \\lambda\\delta_{ij}\\textrm{div}\\mathbf{u}+2\\mu \\varepsilon_{ij}\\]\nwhere \\(\\delta_{ij}\\) is Kronecker’s delta.\nWe assume that the elastic plate is fixed on \\(\\Gamma_D\\times ]-h,h[,\\, \\Gamma_D\\subset \\partial\\Omega\\).\nIf the body force \\(\\mathbf{f} = (f_1,f_2,f_3)\\) is given in \\(\\Omega\\times]-h,h[\\) and surface force \\(\\mathbf{g}\\) is given in \\(\\Gamma_N\\times]-h,h[, \\Gamma_N = \\partial\\Omega\\setminus\\overline{\\Gamma_D}\\), then the equation of equilibrium is given as follows:\n\n(45)¶\\[\\begin{split}\\begin{array}{rcl}\n    -\\partial_j \\sigma_{ij}& = &f_i~~\\textrm{in }\\Omega\\times ]-h,h[,\\quad\n    i = 1,2,3\\\\\n    \\sigma_{ij}n_j& = &g_i~~\\textrm{on }\\Gamma_N\\times ]-h,h[,\\quad\n    u_i = 0~~\\textrm{on }\\Gamma_D\\times ]-h,h[,\\quad i = 1,2,3\n\\end{array}\\end{split}\\]\nWe now explain the plain elasticity.\n\nPlain strain:\nOn the end of plate, the contact condition \\(u_3 = 0,\\, g_3 = \\) is satisfied.\nIn this case, we can suppose that \\(f_3 = g_3 = u_3 = 0\\) and \\(\\mathbf{u}(x_1,x_2,x_3) = \\overline{u}(x_1,x_2)\\) for all \\(-h<x_3<h\\).\n\nPlain stress:\nThe cylinder is assumed to be very thin and subjected to no load on the ends \\(x_3 = \\pm h\\), that is,\n\n\\[\\sigma_{3i} = 0,\\quad x_3 = \\pm h,\\quad i~1,2,3\\]\nThe assumption leads that \\(\\sigma_{3i} = 0\\) in \\(\\Omega\\times ]-h,h[\\) and \\(\\mathbf{u}(x_1,x_2,x_3) = \\overline{u}(x_1,x_2)\\) for all \\(-h<x_3<h\\).\n\nGeneralized plain stress:\nThe cylinder is subjected to no load at \\(x_3 = \\pm h\\).\nIntroducing the mean values with respect to thickness,\n\n\\[\\overline{u}_i(x_1,x_2) = \\frac{1}{2h}\\int_{-h}^h{u(x_1,x_2,x_3)dx_3}\\]\nand we derive \\(\\overline{u}_3\\equiv 0\\).\nSimilarly we define the mean values \\(\\overline{f},\\overline{g}\\) of the body force and surface force as well as the mean values \\(\\overline{\\varepsilon}_{ij}\\) and \\(\\overline{\\sigma}_{ij}\\) of the components of stress and strain, respectively.\n\n\nIn what follows we omit the overlines of \\(\\overline{u}, \\overline{f},\\overline{g}, \\overline{\\varepsilon}_{ij}\\) and \\(\\overline{\\varepsilon}_{ij}\\).\nThen we obtain similar equation of equilibrium given in (45) replacing \\(\\Omega\\times ]-h,h[\\) with \\(\\Omega\\) and changing \\(i = 1,2\\).\nIn the case of plane stress, \\(\\sigma_{ij} = \\lambda^* \\delta_{ij}\\textrm{div}u+2\\mu\\varepsilon_{ij}, \\lambda^* = (2\\lambda \\mu)/(\\lambda+\\mu)\\).\nThe equations of elasticity are naturally written in variational form for the displacement vector \\(\\mathbf{u}(\\mathbf{x})\\in V\\) as:\n\n\\[\\int_\\Omega [2\\mu\\epsilon_{ij}(\\mathbf{u})\\epsilon_{ij}(\\mathbf{v})\n+\\lambda \\epsilon_{ii}(\\mathbf{u})\\epsilon_{jj}(\\mathbf{v})]\n = \\int_\\Omega \\mathbf{f}\\cdot \\mathbf{v} +\\int_\\Gamma \\mathbf{g}\\cdot \\mathbf{v},\n\\forall \\mathbf{v}\\in V\\]\nwhere \\(V\\) is the linear closed subspace of \\(H^1(\\Omega)^2\\).\n\nTip\nBeam\nConsider an elastic plate with the undeformed rectangle shape \\(]0,10[\\times ]0,2[\\).\nThe body force is the gravity force \\(\\mathbf{f}\\) and the boundary force \\(\\mathbf{g}\\) is zero on lower and upper side.\nOn the two vertical sides of the beam are fixed.\n 1 // Parameters\n 2 real E  =  21.5;\n 3 real sigma  =  0.29;\n 4 real gravity  =  -0.05;\n 5 \n 6 // Mesh\n 7 border a(t = 2, 0){x = 0; y = t; label = 1;}\n 8 border b(t = 0, 10){x = t; y = 0; label = 2;}\n 9 border c(t = 0, 2){ x = 10; y = t; label = 1;}\n10 border d(t = 0, 10){ x = 10-t; y = 2; label = 3;}\n11 mesh th  =  buildmesh(b(20) + c(5) + d(20) + a(5));\n12 \n13 // Fespace\n14 fespace Vh(th, [P1, P1]);\n15 Vh [uu, vv];\n16 Vh [w, s];\n17 \n18 // Macro\n19 real sqrt2  =  sqrt(2.);\n20 macro epsilon(u1, u2) [dx(u1), dy(u2), (dy(u1)+dx(u2))/sqrt2] //\n21 macro div(u,v) (dx(u) + dy(v)) //\n22 \n23 // Problem\n24 real mu  =  E/(2*(1+sigma));\n25 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n26 solve Elasticity ([uu, vv], [w, s])\n27      =  int2d(th)(\n28           lambda*div(w,s)*div(uu,vv)\n29         + 2.*mu*( epsilon(w,s)'*epsilon(uu,vv) )\n30     )\n31     + int2d(th)(\n32         - gravity*s\n33     )\n34     + on(1, uu = 0, vv = 0)\n35 ;\n36 \n37 // Plot\n38 plot([uu, vv], wait = true);\n39 plot([uu,vv], wait = true, bb = [[-0.5, 2.5], [2.5, -0.5]]);\n40 \n41 // Movemesh\n42 mesh th1  =  movemesh(th, [x+uu, y+vv]);\n43 plot(th1, wait = true);\n\n\n\n\nTip\nBeam 3D\nConsider elastic box with the undeformed parallelepiped shape \\(]0,5[\\times ]0,1[\\times]0,1[\\).\nThe body force is the gravity force \\(\\mathbf{f}\\) and the boundary force \\(\\mathbf{g}\\) is zero on all face except one the one vertical left face where the beam is fixed.\n 1 include \"cube.idp\"\n 2 \n 3 // Parameters\n 4 int[int] Nxyz  =  [20, 5, 5];\n 5 real [int, int] Bxyz  =  [[0., 5.], [0., 1.], [0., 1.]];\n 6 int [int, int] Lxyz  =  [[1, 2], [2, 2], [2, 2]];\n 7 \n 8 real E  =  21.5e4;\n 9 real sigma  =  0.29;\n10 real gravity  =  -0.05;\n11 \n12 // Mesh\n13 mesh3 Th  =  Cube(Nxyz, Bxyz, Lxyz);\n14 \n15 // Fespace\n16 fespace Vh(Th, [P1, P1, P1]);\n17 Vh [u1, u2, u3], [v1, v2, v3];\n18 \n19 // Macro\n20 real sqrt2  =  sqrt(2.);\n21 macro epsilon(u1, u2, u3) [\n22     dx(u1), dy(u2), dz(u3),\n23     (dz(u2) + dy(u3))/sqrt2,\n24     (dz(u1) + dx(u3))/sqrt2,\n25     (dy(u1) + dx(u2))/sqrt2] //\n26 macro div(u1, u2, u3) (dx(u1) + dy(u2) + dz(u3)) //\n27 \n28 // Problem\n29 real mu  =  E/(2*(1+sigma));\n30 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n31 \n32 solve Lame ([u1, u2, u3], [v1, v2, v3])\n33      =  int3d(Th)(\n34           lambda*div(u1, u2, u3)*div(v1, v2, v3)\n35         + 2.*mu*( epsilon(u1, u2, u3)'*epsilon(v1, v2, v3) )\n36     )\n37     - int3d(Th)(\n38           gravity*v3\n39     )\n40     + on(1, u1 = 0, u2 = 0, u3 = 0)\n41     ;\n42 \n43 // Display\n44 real dmax  =  u1[].max;\n45 cout << \"max displacement  =  \" << dmax << endl;\n46 \n47 // Movemesh\n48 real coef  =  0.1/dmax;\n49 int[int] ref2  =  [1, 0, 2, 0];\n50 mesh3 Thm  =  movemesh3(Th, transfo = [x+u1*coef, y+u2*coef, z+u3*coef], label = ref2);\n51 Thm  =  change(Thm, label = ref2);\n52 \n53 // Plot\n54 plot(Th, Thm, wait = true, cmm = \"coef amplification  =  \"+coef);\n\n\n\n\n\nFig. 148 3d Beam deformed and undeformed box¶\n\n\n\n\nFracture Mechanics¶\nConsider the plate with the crack whose undeformed shape is a curve \\(\\Sigma\\) with the two edges \\(\\gamma_1,\\, \\gamma_2\\).\nWe assume the stress tensor \\(\\sigma_{ij}\\) is the state of plate stress regarding \\((x,y)\\in \\Omega_{\\Sigma} = \\Omega\\setminus \\Sigma\\).\nHere \\(\\Omega\\) stands for the undeformed shape of elastic plate without crack.\nIf the part \\(\\Gamma_N\\) of the boundary \\(\\partial\\Omega\\) is fixed and a load \\({\\cal L} = (\\mathbf{f},\\mathbf{g})\\in L^2(\\Omega)^2\\times L^2(\\Gamma_N)^2\\) is given, then the displacement \\(\\mathbf{u}\\) is the minimizer of the potential energy functional:\n\n\\[{\\cal E}(\\mathbf{v};{\\cal L},\\Omega_{\\Sigma})\n = \\int_{\\Omega_{\\Sigma}}\n\\{w(x,\\mathbf{v})-\\mathbf{f}\\cdot \\mathbf{v}\\}\n-\\int_{\\Gamma_N}\\mathbf{g}\\cdot \\mathbf{v}\\]\nover the functional space \\(V(\\Omega_{\\Sigma})\\),\n\n\\[V(\\Omega_{\\Sigma})\n = \\left\\{ \\mathbf{v}\\in H^1(\\Omega_{\\Sigma})^2;\\;\n\\mathbf{v} = 0\\quad \\hbox{ on }\n\\Gamma_D = \\partial\\Omega\\setminus\\overline{\\Gamma_N}\\right\\},\\]\nwhere \\(w(x,\\mathbf{v}) = \\sigma_{ij}(\\mathbf{v})\\varepsilon_{ij}(\\mathbf{v})/2\\),\n\n\\[\\sigma_{ij}(\\mathbf{v}) = C_{ijkl}(x)\\varepsilon_{kl}(\\mathbf{v}),\\quad\n\\varepsilon_{ij}(\\mathbf{v}) = (\\partial v_i/\\partial x_j+\n\\partial v_j/\\partial x_i)/2,\n\\qquad (C_{ijkl}:\\quad \\hbox{Hooke's tensor}).\\]\nIf the elasticity is homogeneous isotropic, then the displacement \\(\\mathbf{u}(x)\\) is decomposed in an open neighborhood \\(U_k\\) of \\(\\gamma_k\\) as in (see e.g. [OHTSUKA2000])\n\n(46)¶\\[\\mathbf{u}(x)  = \n\\sum_{l = 1}^2 K_l(\\gamma_k) r_k^{1/2} S^C_{kl}(\\theta_k)\n+ \\mathbf{u}_{k,R}(x)\n\\quad \\mbox{for }x\\in \\Omega_{\\Sigma}\\cap U_k,\\, k = 1,2\\]\nwith \\(\\mathbf{u}_{k,R} \\in H^2(\\Omega_\\Sigma\\cap U_k)^2\\), where \\(U_k,\\, k = 1,2\\) are open neighborhoods of \\(\\gamma_k\\) such that \\(\\partial L_1\\cap U_1 = \\gamma_1,\\, \\partial L_m\\cap U_2 = \\gamma_2\\), and\n\n\\[\\begin{split}\\begin{array}{rcl}\n    S^C_{k1}(\\theta_k) &  =  & \\frac 1 {4\\mu} \\frac 1 {(2\\pi)^{1/2}}\n        \\left[ \\begin{array}{c}\n        [2\\kappa-1]\\cos(\\theta_k/2)-\\cos(3\\theta_k/2)\\\\\n        -[2\\kappa+1]\\sin(\\theta_k/2)+\\sin(3\\theta_k/2)\n        \\end{array}\\right],\\\\\n    S^C_{k2}(\\theta_k) &  =  & \\frac 1 {4\\mu} \\frac 1 {(2\\pi)^{1/2}}\n        \\left[ \\begin{array}{c}\n        -[2\\kappa-1]\\sin(\\theta_k/2)+3\\sin(3\\theta_k/2)\\\\\n        -[2\\kappa+1]\\cos(\\theta_k/2)+\\cos(3\\theta_k/2)\n        \\end{array}\\right]. \\nonumber\n\\end{array}\\end{split}\\]\nwhere \\(\\mu\\) is the shear modulus of elasticity, \\(\\kappa = 3-4\\nu\\) (\\(\\nu\\) is the Poisson’s ratio) for plane strain and \\(\\kappa = \\frac {3-\\nu} {1+\\nu}\\) for plane stress.\nThe coefficients \\(K_1(\\gamma_i)\\) and \\(K_2(\\gamma_i),\\) which are important parameters in fracture mechanics, are called stress intensity factors of the opening mode (mode I) and the sliding mode (mode II), respectively.\nFor simplicity, we consider the following simple crack\n\n\\[\\Omega = \\{(x,y):\\; -1<x<1, -1<y<1\\},\\qquad\n\\Sigma = \\{(x,y):\\; -1\\le x\\le 0, y = 0\\}\\]\nwith only one crack tip \\(\\gamma = (0,0)\\).\nUnfortunately, FreeFEM cannot treat crack, so we use the modification of the domain with U-shape channel (see U-shape example, Fig. 85) with \\(d = 0.0001\\).\nThe undeformed crack \\(\\Sigma\\) is approximated by\n\n\\[\\Sigma_d  =  \\{(x,y):\\; -1\\le x\\le -10*d, -d\\le y\\le d\\} \\cup\\{(x,y):\\; -10*d\\le x\\le 0, -d+0.1*x\\le y\\le d-0.1*x\\}\\]\nand \\(\\Gamma_D = \\)R in U-shape example, Fig. 85.\nIn this example, we use three technique:\n\nFast Finite Element Interpolator from the mesh Th to Zoom for the scale-up of near \\(\\gamma\\).\nAfter obtaining the displacement vector \\(\\mathbf{u} = (u,v)\\), we shall watch the deformation of the crack near \\(\\gamma\\) as follows,\n1 mesh Plate  =  movemesh(Zoom, [x+u, y+v]);\n2 plot(Plate);\n\n\n\nAdaptivity is an important technique here, because a large singularity occurs at \\(\\gamma\\) as shown in (46).\n\nThe first example creates mode I deformation by the opposed surface force on B and T in the vertical direction of \\(\\Sigma\\), and the displacement is fixed on R.\nIn a laboratory, fracture engineers use photoelasticity to make stress field visible, which shows the principal stress difference\n\n\\[\\sigma_1-\\sigma_2 = \\sqrt{(\\sigma_{11}-\\sigma_{22})^2+4\\sigma_{12}^2}\\]\nwhere \\(\\sigma_1\\) and \\(\\sigma_2\\) are the principal stresses.\nIn opening mode, the photoelasticity make symmetric pattern concentrated at \\(\\gamma\\).\n\nTip\nCrack Opening, \\(K_2(\\gamma) = 0\\)\n 1 //Parameters\n 2 real d  =  0.0001; int n  =  5; real cb  =  1, ca  =  1, tip  =  0.0;\n 3 \n 4 real E  =  21.5;\n 5 real sigma  =  0.29;\n 6 \n 7 // Mesh\n 8 border L1(t = 0, ca-d){x = -cb; y = -d-t;}\n 9 border L2(t = 0, ca-d){x = -cb; y = ca-t;}\n10 border B(t = 0, 2){x = cb*(t-1); y = -ca;}\n11 border C1(t = 0, 1){x = -ca*(1-t)+(tip-10*d)*t; y = d;}\n12 border C21(t = 0, 1){x = (tip-10*d)*(1-t)+tip*t; y = d*(1-t);}\n13 border C22(t = 0, 1){x = (tip-10*d)*t+tip*(1-t); y = -d*t;}\n14 border C3(t = 0, 1){x = (tip-10*d)*(1-t)-ca*t; y = -d;}\n15 border C4(t = 0, 2*d){x = -ca; y = -d+t;}\n16 border R(t = 0, 2){x = cb; y = cb*(t-1);}\n17 border T(t = 0, 2){x = cb*(1-t); y = ca;}\n18 mesh Th  =  buildmesh(L1(n/2) + L2(n/2) + B(n)\n19     + C1(n) + C21(3) + C22(3) + C3(n) + R(n) + T(n));\n20 plot(Th, wait = true);\n21 \n22 cb = 0.1; ca = 0.1;\n23 mesh Zoom  =  buildmesh(L1(n/2) + L2(n/2) + B(n) + C1(n)\n24     + C21(3) + C22(3) + C3(n) + R(n) + T(n));\n25 plot(Zoom, wait = true);\n26 \n27 // Fespace\n28 fespace Vh(Th, [P2, P2]);\n29 Vh [u, v];\n30 Vh [w, s];\n31 \n32 fespace zVh(Zoom, P2);\n33 zVh Sx, Sy, Sxy, N;\n34 \n35 // Problem\n36 real mu  =  E/(2*(1+sigma));\n37 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n38 solve Problem ([u, v], [w, s])\n39      =  int2d(Th)(\n40           2*mu*(dx(u)*dx(w) + ((dx(v)+dy(u))*(dx(s)+dy(w)))/4)\n41         + lambda*(dx(u) + dy(v))*(dx(w) + dy(s))/2\n42     )\n43     -int1d(Th, T)(\n44           0.1*(1-x)*s\n45     )\n46     +int1d(Th, B)(\n47           0.1*(1-x)*s\n48     )\n49     +on(R, u = 0, v = 0)\n50     ;\n51 \n52 // Loop\n53 for (int i  =  1; i < =  5; i++){\n54     mesh Plate  =  movemesh(Zoom, [x+u, y+v]); //deformation near gamma\n55     Sx  =  lambda*(dx(u) + dy(v)) + 2*mu*dx(u);\n56     Sy  =  lambda*(dx(u) + dy(v)) + 2*mu*dy(v);\n57     Sxy  =  mu*(dy(u) + dx(v));\n58     N  =  0.1*1*sqrt((Sx-Sy)^2 + 4*Sxy^2); //principal stress difference\n59     if (i  =  =  1){\n60         plot(Plate, bw = 1);\n61         plot(N, bw = 1);\n62     }\n63     else if (i  =  =  5){\n64         plot(Plate, bw = 1);\n65         plot(N, bw = 1);\n66         break;\n67     }\n68 \n69     // Adaptmesh\n70     Th  =  adaptmesh(Th, [u, v]);\n71 \n72     // Solve\n73     Problem;\n74 }\n\n\n\n\n\n\nFig. 149 Crack open displacement (COD) on the first mesh¶\n\n\n\n\n\nFig. 150 Principal stress difference on the first mesh¶\n\n\n\n\n\nFig. 151 COD on the last adaptive mesh¶\n\n\n\n\n\nFig. 152 Principal stress difference on the last adaptive mesh¶\n\n\n\nIt is difficult to create mode II deformation by the opposed shear force on B and T that is observed in a laboratory.\nSo we use the body shear force along \\(\\Sigma\\), that is, the \\(x\\)-component \\(f_1\\) of the body force \\(\\mathbf{f}\\) is given by\n\n\\[f_1(x,y) = H(y-0.001)*H(0.1-y)-H(-y-0.001)*H(y+0.1)\\]\nwhere \\(H(t) = 1\\) if \\(t>0\\); \\( =  0\\) if \\(t<0\\).\n\nTip\nCrack Sliding, \\(K_2(\\gamma) = 0\\)\n 1 // Parameters\n 2 real d  =  0.0001; int n  =  5; real cb  =  1, ca  =  1, tip  =  0.0;\n 3 \n 4 real E  =  21.5;\n 5 real sigma  =  0.29;\n 6 \n 7 // Mesh\n 8 border L1(t = 0, ca-d){x = -cb; y = -d-t;}\n 9 border L2(t = 0, ca-d){x = -cb; y = ca-t;}\n10 border B(t = 0, 2){x = cb*(t-1); y = -ca;}\n11 border C1(t = 0, 1){x = -ca*(1-t)+(tip-10*d)*t; y = d;}\n12 border C21(t = 0, 1){x = (tip-10*d)*(1-t)+tip*t; y = d*(1-t);}\n13 border C22(t = 0, 1){x = (tip-10*d)*t+tip*(1-t); y = -d*t;}\n14 border C3(t = 0, 1){x = (tip-10*d)*(1-t)-ca*t; y = -d;}\n15 border C4(t = 0, 2*d){x = -ca; y = -d+t;}\n16 border R(t = 0, 2){x = cb; y = cb*(t-1);}\n17 border T(t = 0, 2){x = cb*(1-t); y = ca;}\n18 mesh Th  =  buildmesh(L1(n/2) + L2(n/2) + B(n)\n19     + C1(n) + C21(3) + C22(3) + C3(n) + R(n) + T(n));\n20 plot(Th, wait = true);\n21 \n22 cb = 0.1; ca = 0.1;\n23 mesh Zoom  =  buildmesh(L1(n/2) + L2(n/2) + B(n) + C1(n)\n24     + C21(3) + C22(3) + C3(n) + R(n) + T(n));\n25 plot(Zoom, wait = true);\n26 \n27 // Fespace\n28 fespace Vh(Th, [P2, P2]);\n29 Vh [u, v];\n30 Vh [w, s];\n31 \n32 fespace zVh(Zoom, P2);\n33 zVh Sx, Sy, Sxy, N;\n34 \n35 fespace Vh1(Th,P1);\n36 Vh1 fx  =  ((y>0.001)*(y<0.1))-((y<-0.001)*(y>-0.1));\n37 \n38 // Problem\n39 real mu  =  E/(2*(1+sigma));\n40 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n41 solve Problem ([u, v], [w, s])\n42      =  int2d(Th)(\n43           2*mu*(dx(u)*dx(w) + ((dx(v) + dy(u))*(dx(s)+ dy(w)))/4)\n44         + lambda*(dx(u) + dy(v))*(dx(w) + dy(s))/2\n45     )\n46     -int2d(Th)(\n47           fx*w\n48     )\n49     +on(R, u = 0, v = 0)\n50     ;\n51 \n52 // Loop\n53 for (int i  =  1; i < =  3; i++){\n54     mesh Plate  =  movemesh(Zoom, [x+u, y+v]); //deformation near gamma\n55     Sx  =  lambda*(dx(u) + dy(v)) + 2*mu*dx(u);\n56     Sy  =  lambda*(dx(u) + dy(v)) + 2*mu*dy(v);\n57     Sxy  =  mu*(dy(u) + dx(v));\n58     N  =  0.1*1*sqrt((Sx-Sy)^2 + 4*Sxy^2); //principal stress difference\n59     if (i  =  =  1){\n60         plot(Plate, bw = 1);\n61         plot(N, bw = 1);\n62     }\n63     else if (i  =  =  3) {\n64         plot(Plate, bw = 1);\n65         plot(N, bw = 1);\n66         break;\n67     }\n68 \n69     // Adaptmesh\n70     Th = adaptmesh(Th, [u, v]);\n71 \n72     // Solve\n73     Problem;\n74 }\n\n\n\n\n\n\nFig. 153 COD on the first mesh¶\n\n\n\n\n\nFig. 154 Principal stress difference in the first mesh¶\n\n\n\n\n\nFig. 155 COD on the last adaptive mesh¶\n\n\n\n\n\nFig. 156 Principal stress difference on the last adaptive mesh¶\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Static problems\n\t\t\tNext topic: Non-linear static problems \n\t\t\n\t","l":"models/elasticity.html"},"41":{"t":"Evolution problems","p":"\n\t\t\n   \nEvolution problems¶\nFreeFEM also solves evolution problems such as the heat equation:\n\n(47)¶\\[\\begin{split}\\begin{array}{rcll}\n    \\frac{\\p u}{\\p t}-\\mu\\Delta u & = & f & \\textrm{ in }\\Omega\\times ]0,T[\\\\\n    u(\\mathbf{x},0) & = & u_0(\\mathbf{x}) & \\textrm{ in }\\Omega\\\\\n    \\left(\\p u/\\p n\\right)(\\mathbf{x},t) & = & 0 & \\textrm{ on }\\p\\Omega\\times ]0,T[\n\\end{array}\\end{split}\\]\nwith a positive viscosity coefficient \\(\\mu\\) and homogeneous Neumann boundary conditions.\nWe solve (47) by FEM in space and finite differences in time.\nWe use the definition of the partial derivative of the solution in the time derivative:\n\n\\[\\frac{\\p u}{\\p t}(x,y,t)  =  \\lim_{\\tau \\to 0}\\frac{u(x,y,t)-u(x,y,t-\\tau )}{\\tau }\\]\nwhich indicates that \\(u^m(x,y) = u(x,y,m\\tau )\\) will satisfy approximatively:\n\n\\[\\frac{\\p u}{\\p t}(x,y,m\\tau )\\simeq \\frac{u^m(x,y)-u^{m-1}(x,y)}{\\tau }\\]\nThe time discretization of heat equation (47) is as follows, \\(\\forall m = 0,\\cdots,[T/\\tau ]\\):\n\n\\[\\begin{split}\\begin{array}{rcll}\n    \\frac{u^{m+1}-u^{m}}{\\tau }-\\mu\\Delta u^{m+1} & = & f^{m+1} & \\textrm{ in }\\Omega\\\\\n    u^0(\\mathbf{x}) & = & u_0(\\mathbf{x}) & \\textrm{ in }\\Omega\\\\\n    \\p u^{m+1}/\\p n(\\mathbf{x}) & = & 0 & \\textrm{ on }\\p\\Omega\n\\end{array}\\end{split}\\]\nwhich is so-called backward Euler method for (47).\nTo obtain the variational formulation, multiply with the test function \\(v\\) both sides of the equation:\n\n\\[\\int_{\\Omega}\\{u^{m+1}v-\\tau \\Delta u^{m+1}v\\} = \\int_{\\Omega}\\{u^m+\\tau f^{m+1}\\}v\\]\nBy the divergence theorem, we have:\n\n\\[\\int_{\\Omega}\\{u^{m+1}v+\\tau\\nabla u^{m+1}\\cdot \\nabla v\\}\n-\\int_{\\p\\Omega} \\tau \\left( \\p u^{m+1}/\\p n\\right) v\n = \\int_{\\Omega }\\{u^mv+\\tau f^{m+1}v\\}\\]\nBy the boundary condition \\(\\p u^{m+1}/\\p n = 0\\), it follows that:\n\n(48)¶\\[\\int_{\\Omega} \\{u^{m+1}v+\\tau \\nabla u^{m+1}\\cdot \\nabla v\\}\n-\\int_{\\Omega }\\{u^mv+\\tau f^{m+1}v\\}\n = 0\\]\nUsing the identity just above, we can calculate the finite element approximation \\(u_h^m\\) of \\(u^m\\) in a step-by-step manner with respect to \\(t\\).\n\nTip\nExample\nWe now solve the following example with the exact solution \\(u(x,y,t) = tx^4\\), \\(\\Omega  =  ]0,1[^2\\).\n\n\\[\\begin{split}\\begin{array}{rcll}\n    \\frac{{\\p u}}{{\\p t}} - \\mu \\Delta u & = & x^4 - \\mu 12tx^2 & \\textrm{ in }\\Omega\\times ]0,3[\\\\\n    u(x,y,0) & = & 0 & \\textrm{ on }\\Omega\\\\\n    \\left. u \\right|_{\\p\\Omega} & = & t*x^4\n\\end{array}\\end{split}\\]\n 1 // Parameters\n 2 real dt  =  0.1;\n 3 real mu  =  0.01;\n 4 \n 5 // Mesh\n 6 mesh Th  =  square(16, 16);\n 7 \n 8 // Fespace\n 9 fespace Vh(Th, P1);\n10 Vh u, v, uu, f, g;\n11 \n12 // Problem\n13 problem dHeat (u, v)\n14      =  int2d(Th)(\n15           u*v\n16         + dt*mu*(dx(u)*dx(v) + dy(u)*dy(v))\n17     )\n18     + int2d(Th)(\n19         - uu*v\n20         - dt*f*v\n21     )\n22     + on(1, 2, 3, 4, u = g)\n23     ;\n24 \n25 // Time loop\n26 real t  =  0;\n27 uu  =  0;\n28 for (int m  =  0; m < =  3/dt; m++){\n29     // Update\n30     t  =  t+dt;\n31     f  =  x^4 - mu*t*12*x^2;\n32     g  =  t*x^4;\n33     uu  =  u;\n34 \n35     // Solve\n36     dHeat;\n37 \n38     // Plot\n39     plot(u, wait = true);\n40     cout << \"t = \" << t << \" - L^2-Error = \" << sqrt(int2d(Th)((u-t*x^4)^2)) << endl;\n41 }\n\n\nIn the last statement, the \\(L^2\\)-error \\(\\left(\\int_{\\Omega}\\left| u-tx^4\\right|^2\\right)^{1/2}\\) is calculated at \\(t = m\\tau, \\tau  = 0.1\\). At \\(t = 0.1\\), the error is 0.000213269. The errors increase with \\(m\\) and 0.00628589 at \\(t = 3\\).\nThe iteration of the backward Euler (48) is made by for loop.\n\nNote\nThe stiffness matrix in the loop is used over and over again.\nFreeFEM support reuses of stiffness matrix.\n\n\n\nMathematical Theory on Time Difference Approximations.¶\nIn this section, we show the advantage of implicit schemes.\nLet \\(V, H\\) be separable Hilbert space and \\(V\\) is dense in \\(H\\).\nLet \\(a\\) be a continuous bilinear form over \\(V \\times V\\) with coercivity and symmetry.\nThen \\(\\sqrt{a(v,v)}\\) become equivalent to the norm \\(\\| v\\|\\) of \\(V\\).\nProblem Ev(f,Omega): For a given \\(f\\in L^2(0,T;V'),\\, u^0\\in H\\)\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\frac{d}{dt}(u(t),v)+a(u(t),v)& = &( f(t),v)\\qquad \\forall v\\in V,\\quad a.e. \\, t\\in [0,T]\\\\\n    u(0)& = &u^0\\nonumber\n\\end{array}\\end{split}\\]\nwhere \\(V'\\) is the dual space of \\(V\\).\nThen, there is an unique solution \\(u\\in L^{\\infty}(0,T;H)\\cap L^2(0,T;V)\\).\nLet us denote the time step by \\(\\tau>0\\), \\(N_T = [T/\\tau]\\).\nFor the discretization, we put \\(u^n  =  u(n\\tau)\\) and consider the time difference for each \\(\\theta\\in [0,1]\\)\n\n(49)¶\\[\\begin{split}\\begin{array}{rcl}\n    \\frac{1}{\\tau}\\left( u_h^{n+1}-u_h^n,\\phi_i\\right) +a\\left( u_h^{n+\\theta},\\phi_i\\right)& = &\\langle f^{n+\\theta},\\phi_i\\rangle\\\\\n    i = 1,&\\cdots&, m,\\quad n = 0,\\cdots, N_T\\nonumber\\\\\n    u_h^{n+\\theta}& = &\\theta u_h^{n+1}+(1-\\theta)u_h^n,\\\\\n    f^{n+\\theta}& = &\\theta f^{n+1}+(1-\\theta)f^n\\nonumber\n\\end{array}\\end{split}\\]\nFormula (49) is the forward Euler scheme if \\(\\theta = 0\\), Crank-Nicolson scheme if \\(\\theta = 1/2\\), the backward Euler scheme if \\(\\theta = 1\\).\nUnknown vectors \\(u^n = (u_h^1,\\cdots,u_h^M)^T\\) in\n\n\\[u_h^n(x) = u^n_1\\phi_1(x)+\\cdots+u^n_m\\phi_m(x),\\quad u^n_1,\\cdots,u^n_m\\in \\R\\]\nare obtained from solving the matrix\n\n(50)¶\\[\\begin{split}(M+\\theta\\tau A)u^{n+1} = \\{M-(1-\\theta)\\tau A\\}u^n\n+\\tau\\left\\{\\theta f^{n+1}+(1-\\theta)f^n\\right\\}\\\\\nM = (m_{ij}),\\quad m_{ij} = (\\phi_j,\\phi_i),\\qquad\nA = (a_{ij}),\\quad a_{ij} = a(\\phi_j,\\phi_i)\\nonumber\\end{split}\\]\nRefer [TABATA1994], pp.70–75 for solvability of (50). The stability of (50) is in [TABATA1994], Theorem 2.13:\nLet \\(\\{\\mathcal{T}_h\\}_{h\\downarrow 0}\\) be regular triangulations (see Regular Triangulation).\nThen there is a number \\(c_0>0\\) independent of \\(h\\) such that,\n\n\\[\\begin{split}|u_h^n|^2\\le\n\\left\\{\n\\begin{array}{lr}\n\\frac{1}{\\delta}\\left\\{\n|u^0_h|^2+\\tau \\sum_{k = 0}^{n-1}\\|f^{k+\\theta}\\|^2_{V_h'}\n\\right\\}&\\theta\\in [0,1/2)\\\\\n|u^0_h|^2+\\tau \\sum_{k = 0}^{n-1}\\|f^{k+\\theta}\\|^2_{V_h'}&\\theta\\in [1/2,1]\n\\end{array}\n\\right.\\end{split}\\]\nif the following are satisfied:\n\nWhen \\(\\theta\\in [0,1/2)\\), then we can take a time step \\(\\tau\\) in such a way that\n\n\n\\[\\tau <\\frac{2(1-\\delta)}{(1-2\\theta)c_0^2}h^2\\]\nfor arbitrary \\(\\delta\\in (0,1)\\).\n\n\nWhen \\(1/2\\leq \\theta\\leq 1\\), we can take \\(\\tau\\) arbitrary.\n\n\nTip\nExample\n 1 // Parameters\n 2 real tau  =  0.1; real\n 3 theta  =  0.;\n 4 \n 5 // Mesh\n 6 mesh Th  =  square(12, 12);\n 7 \n 8 // Fespace\n 9 fespace Vh(Th, P1);\n10 Vh u, v, oldU;\n11 Vh f1, f0;\n12 \n13 fespace Ph(Th, P0);\n14 Ph h  =  hTriangle; // mesh sizes for each triangle\n15 \n16 // Function\n17 func real f (real t){\n18     return x^2*(x-1)^2 + t*(-2 + 12*x - 11*x^2 - 2*x^3 + x^4);\n19 }\n20 \n21 // File\n22 ofstream out(\"err02.csv\"); //file to store calculations\n23 out << \"mesh size  =  \" << h[].max << \", time step  =  \" << tau << endl;\n24 for (int n  =  0; n < 5/tau; n++)\n25     out << n*tau << \",\";\n26 out << endl;\n27 \n28 // Problem\n29 problem aTau (u, v)\n30      =  int2d(Th)(\n31           u*v\n32         + theta*tau*(dx(u)*dx(v) + dy(u)*dy(v) + u*v)\n33     )\n34     - int2d(Th)(\n35           oldU*v\n36         - (1-theta)*tau*(dx(oldU)*dx(v) + dy(oldU)*dy(v) + oldU*v)\n37     )\n38     - int2d(Th)(\n39           tau*(theta*f1 + (1-theta)*f0)*v\n40     )\n41     ;\n42 \n43 // Theta loop\n44 while (theta < =  1.0){\n45     real t  =  0;\n46     real T  =  3;\n47     oldU  =  0;\n48     out << theta << \",\";\n49     for (int n  =  0; n < T/tau; n++){\n50         // Update\n51         t  =  t + tau;\n52         f0  =  f(n*tau);\n53         f1  =  f((n+1)*tau);\n54 \n55         // Solve\n56         aTau;\n57         oldU  =  u;\n58 \n59         // Plot\n60         plot(u);\n61 \n62         // Error\n63         Vh uex  =  t*x^2*(1-x)^2; //exact solution  =  tx^2(1-x)^2\n64         Vh err  =  u - uex; // err  =  FE-sol - exact\n65         out << abs(err[].max)/abs(uex[].max) << \",\";\n66     }\n67     out << endl;\n68     theta  =  theta + 0.1;\n69 }\n\n\n\n\n\nFig. 159 \\(\\max_{x\\in\\Omega}\\vert u_h^n(\\theta)-u_{ex}(n\\tau)\\vert\\max_{x\\in\\Omega}\\vert u_{ex}(n\\tau)\\vert at n = 0,1,\\cdots,29\\)¶\n\n\nWe can see in Fig. 159 that \\(u_h^n(\\theta)\\) become unstable at \\(\\theta = 0.4\\), and figures are omitted in the case \\(\\theta<0.4\\).\n\n\n\nConvection¶\nThe hyperbolic equation\n\n(51)¶\\[\\p_t u +\\mathbf{\\alpha} \\cdot \\nabla u = f;\\ \\textrm{ for a vector-valued function }\\mathbf{\\alpha}\\]\nappears frequently in scientific problems, for example in the Navier-Stokes equations, in the Convection-Diffusion equation, etc.\nIn the case of 1-dimensional space, we can easily find the general solution \\((x,t)\\mapsto u(x,t) = u^0(x-\\alpha t)\\) of the following equation, if \\(\\alpha\\) is constant,\n\n(52)¶\\[\\begin{split}\\begin{array}{rcl}\n    \\p_t u +\\alpha\\p_x u & = & 0\\\\\n    u(x,0) & = & u^0(x),\n\\end{array}\\end{split}\\]\nbecause \\(\\p_t u +\\alpha\\p_x u = -\\alpha\\dot{u}^0+a\\dot{u}^0 = 0\\), where \\(\\dot{u}^0 = du^0(x)/dx\\).\nEven if \\(\\alpha\\) is not constant, the construction works on similar principles.\nOne begins with the ordinary differential equation (with the convention that \\(\\alpha\\) is prolonged by zero apart from \\((0,L)\\times (0,T)\\)):\n\n\\[\\dot{X}(\\tau ) = +\\alpha(X(\\tau ),\\tau ),\\ \\tau \\in (0,t)\\quad X(t) = x\\]\nIn this equation \\(\\tau\\) is the variable and \\(x,t\\) are parameters, and we denote the solution by \\(X_{x,t}(\\tau )\\).\nThen it is noticed that \\((x,t)\\rightarrow v(X(\\tau),\\tau)\\) in \\(\\tau = t\\) satisfies the equation\n\n\\[\\p _{t}v+\\alpha\\p _{x}v = \\p _{t}X\\dot{v}+a\\p _{x}X\\dot{v}%\n = 0\\]\nand by the definition \\(\\p _{t}X = \\dot{X} = +\\alpha\\) and \\(\\p_{x}X = \\p _{x}x\\) in \\(\\tau = t\\), because if \\(\\tau  = t\\) we have \\(X(\\tau ) = x\\).\nThe general solution of (52) is thus the value of the boundary condition in \\(X_{x, t}(0)\\), that is to say \\(u(x,t) = u^{0}(X_{x,t}(0))\\) where \\(X_{x,t}(0)\\) is on the \\(x\\) axis, \\(u(x,t) = u^{0}(X_{x,t}(0))\\) if \\(X_{x,t}(0)\\) is on the axis of \\(t\\).\nIn higher dimension \\(\\Omega \\subset R^{d},~d = 2,3\\), the equation for the convection is written\n\n\\[\\p _{t}u+\\mathbf{\\alpha}\\cdot \\nabla u = 0\\hbox{ in }\\Omega \\times (0,T)\\]\nwhere \\(\\mathbf{a}(x,t)\\in \\R^{d}\\).\nFreeFEM implements the Characteristic-Galerkin method for convection operators.\nRecall that the equation (51) can be discretized as\n\n\\[\\frac{Du}{Dt}  =  f\\;\\;\\textrm{i.e. }\\frac{du}{dt}\\left( {X(t),t} \\right)  =  f\\left(X( t ),t \\right)\\textrm{ where }\\frac{dX}{dt}( t )  =  \\mathbf{\\alpha}( {X(t),t})\\]\nwhere \\(D\\) is the total derivative operator.\nSo a good scheme is one step of backward convection by the method of Characteristics-Galerkin\n\n(53)¶\\[\\frac{1}{{\\tau }}\\left(u^{m + 1}(x) - u^m(X^m(x))\\right)  =  f^m (x)\\]\nwhere \\(X^m (x)\\) is an approximation of the solution at \\(t  =  m\\tau\\) of the ordinary differential equation\n\n\\[\\frac{d\\mathbf{X}}{dt}(t)  =  \\mathbf{\\alpha}^m(\\mathbf{X}(t)), \\mathbf{X}((m + 1)\\tau)  =  x.\\]\nwhere \\(\\mathbf{\\alpha}^m(x) = (\\alpha_1(x,m\\tau ),\\alpha_2(x,m\\tau))\\).\nBecause, by Taylor’s expansion, we have\n\n(54)¶\\[\\begin{split}\\begin{array}{rcl}\n    u^m(\\mathbf{X}(m\\tau ))& = &\n    u^m(\\mathbf{X}((m+1)\\tau )) -\n    \\tau \\sum_{i = 1}^d \\frac{\\p u^m}{\\p x_i}(\\mathbf{X}((m+1)\\tau ))\n    \\frac{\\p X_i}{\\p t}((m+1)\\tau )\n    +o(\\tau )\\nonumber\\\\\n    & = &u^m(x)-\\tau \\mathbf{\\alpha}^m(x)\\cdot \\nabla u^m(x)+o(\\tau )\n\\end{array}\\end{split}\\]\nwhere \\(X_i(t)\\) are the i-th component of \\(\\mathbf{X}(t)\\), \\(u^m(x) = u(x,m\\tau )\\) and we used the chain rule and \\(x = \\mathbf{X}((m+1)\\tau )\\).\nFrom (54), it follows that\n\n\\[u^m(X^m(x)) = u^m(x)-\\tau \\mathbf{\\alpha}^m(x)\\cdot \\nabla u^m(x)+o(\\tau )\\]\nAlso we apply Taylor’s expansion for \\(t \\rightarrow u^m(x-\\mathbf{\\alpha}^m(x)t),0\\le t\\le \\tau\\), then\n\n\\[u^m(x-\\mathbf{\\alpha}\\tau ) = u^m(x)-\\tau \\mathbf{\\alpha}^m(x)\\cdot \\nabla u^m(x)+o(\\tau ).\\]\nPutting\nconvect\\(\\left( {\\mathbf{\\alpha},-\\tau ,u^m } \\right)\\approx u^m \\left(x - \\mathbf{\\alpha}^m\\tau \\right)\\)\nwe can get the approximation\n\\(u^m \\left( {X^m( x )} \\right) \\approx\\) convect \\(\\left( {[a_1^m ,a_2^m],-\\tau ,u^m } \\right)\\) by \\(X^m \\approx x \\mapsto x- \\tau [a_1^m(x) ,a_2^m(x)]\\)\nA classical convection problem is that of the “rotating bell” (quoted from [LUCQUIN1998], p.16).\nLet \\(\\Omega\\) be the unit disk centered at 0, with its center rotating with speed \\(\\alpha_1  =  y,\\, \\alpha_2  =  -x\\).\nWe consider the problem (51) with \\(f = 0\\) and the initial condition \\(u(x,0) = u^0(x)\\), that is, from (53)\n\\(u^{m + 1}(x)  =  u^m(X^m(x))\\approx\\) convect\\((\\mathbf{\\alpha},-\\tau ,u^m)\\)\nThe exact solution is \\(u(x, t)  =  u(\\mathbf{X}(t))\\) where \\(\\mathbf{X}\\) equals \\(x\\) rotated around the origin by an angle \\(\\theta  =  -t\\) (rotate in clockwise).\nSo, if \\(u^0\\) in a 3D perspective looks like a bell, then \\(u\\) will have exactly the same shape, but rotated by the same amount.\nThe program consists in solving the equation until \\(T  =  2\\pi\\), that is for a full revolution and to compare the final solution with the initial one; they should be equal.\n\nTip\nConvect\n 1 // Parameters\n 2 real dt  =  0.17;\n 3 \n 4 // Mesh\n 5 border C(t = 0, 2*pi){x = cos(t); y = sin(t);}\n 6 mesh Th  =  buildmesh(C(70));\n 7 \n 8 // Fespace\n 9 fespace Vh(Th, P1);\n10 Vh u0;\n11 Vh a1  =  -y, a2  =  x; //rotation velocity\n12 Vh u;\n13 \n14 // Initialization\n15 u  =  exp(-10*((x-0.3)^2 +(y-0.3)^2));\n16 \n17 // Time loop\n18 real t  =  0.;\n19 for (int m  =  0; m < 2*pi/dt; m++){\n20     // Update\n21     t + =  dt;\n22     u0  =  u;\n23 \n24     // Convect\n25     u  =  convect([a1, a2], -dt, u0); //u^{m+1} = u^m(X^m(x))\n26 \n27     // Plot\n28     plot(u, cmm = \" t = \"+t+\", min = \"+u[].min+\", max = \"+u[].max);\n29 }\n\n\n\nNote\nThe scheme convect is unconditionally stable, then the bell become lower and lower (the maximum of \\(u^{37}\\) is \\(0.406\\) as shown in Fig. 160.\n\n\n\n\n\nFig. 160 \\(u^0 = e^{-10((x-0.3)^2 +(y-0.3)^2)}\\)¶\n\n\n\n\n\nFig. 161 The bell at \\(t = 6.29\\)¶\n\n\n\n\n\n2D Black-Scholes equation for an European Put option¶\nIn mathematical finance, an option on two assets is modeled by a Black-Scholes equations in two space variables, (see for example [WILMOTT1995] or [ACHDOU2005]).\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\p _t u &+& \\frac{{\\left( {\\sigma _1 x } \\right)^2 }}{2}\\frac{{\\p ^2 u}}{{\\p x^2 }} + \\frac{{\\left( {\\sigma _2 y } \\right)^2 }}{2}\\frac{{\\p ^2 u}}{{\\p y^2 }} \\\\\n    &&{\\rm{ }} + \\rho x y \\frac{{\\p ^2 u}}{{\\p x \\p y }} + rS_1 \\frac{{\\p u}}{{\\p x }} + rS_2 \\frac{{\\p u}}{{\\p y }} - rP  =  0 \\nonumber\n\\end{array}\\end{split}\\]\nwhich is to be integrated in \\(\\left( {0,T} \\right) \\times \\R^ + \\times \\R^ +\\) subject to, in the case of a put\n\n\\[u\\left( {x , y ,T} \\right)  =  \\left( {K - \\max \\left( {x ,y } \\right)} \\right)^+\\]\nBoundary conditions for this problem may not be so easy to device.\nAs in the one dimensional case the PDE contains boundary conditions on the axis \\(x_1  =  0\\) and on the axis \\(x_2  =  0\\), namely two one dimensional Black-Scholes equations driven respectively by the data \\(u\\left( {0, + \\infty ,T} \\right)\\) and \\(u\\left( { + \\infty ,0,T} \\right)\\).\nThese will be automatically accounted for because they are embedded in the PDE.\nSo if we do nothing in the variational form (i.e. if we take a Neumann boundary condition at these two axis in the strong form) there will be no disturbance to these.\nAt infinity in one of the variable, as in 1D, it makes sense to impose \\(u = 0\\).\nWe take\n\n\\[\\sigma _1   =  0.3,\\;\\;\\sigma _2   =  0.3,\\;\\;\\rho   =  0.3,\\;\\;r  =  0.05,\\;\\;K  =  40,\\;\\;T  =  0.5\\]\nAn implicit Euler scheme is used and a mesh adaptation is done every 10 time steps.\nTo have an unconditionally stable scheme, the first order terms are treated by the Characteristic Galerkin method, which, roughly, approximates\n\n\\[\\frac{{\\p u}}{{\\p t}} + a_1 \\frac{{\\p u}}{{\\p x}} + a_2 \\frac{{\\p u}}{{\\p y}} \\approx \\frac{1}{{\\tau }}\\left( {u^{n + 1} \\left( x \\right) - u^n \\left( {x - \\mathbf{\\alpha}\\tau } \\right)} \\right)\\]\n\nTip\nBlack-Scholes\n 1 // Parameters\n 2 int m  =  30; int L  =  80; int LL  =  80; int j  =  100; real sigx  =  0.3; real sigy  =  0.3; real rho  =  0.3; real r  =  0.05; real K  =  40; real dt  =  0.01;\n 3 \n 4 // Mesh\n 5 mesh th  =  square(m, m, [L*x, LL*y]);\n 6 \n 7 // Fespace\n 8 fespace Vh(th, P1);\n 9 Vh u  =  max(K-max(x,y),0.);\n10 Vh xveloc, yveloc, v, uold;\n11 \n12 // Time loop\n13 for (int n  =  0; n*dt < =  1.0; n++){\n14     // Mesh adaptation\n15     if (j > 20){\n16         th  =  adaptmesh(th, u, verbosity = 1, abserror = 1, nbjacoby = 2,\n17         err = 0.001, nbvx = 5000, omega = 1.8, ratio = 1.8, nbsmooth = 3,\n18         splitpbedge = 1, maxsubdiv = 5, rescaling = 1);\n19         j  =  0;\n20         xveloc  =  -x*r + x*sigx^2 + x*rho*sigx*sigy/2;\n21         yveloc  =  -y*r + y*sigy^2 + y*rho*sigx*sigy/2;\n22         u  =  u;\n23     }\n24 \n25     // Update\n26     uold  =  u;\n27 \n28     // Solve\n29     solve eq1(u, v, init = j, solver = LU)\n30          =  int2d(th)(\n31               u*v*(r+1/dt)\n32             + dx(u)*dx(v)*(x*sigx)^2/2\n33             + dy(u)*dy(v)*(y*sigy)^2/2\n34             + (dy(u)*dx(v) + dx(u)*dy(v))*rho*sigx*sigy*x*y/2\n35         )\n36         - int2d(th)(\n37               v*convect([xveloc, yveloc], dt, uold)/dt\n38         )\n39         + on(2, 3, u = 0)\n40         ;\n41 \n42     // Update\n43     j  =  j+1;\n44 };\n45 \n46 // Plot\n47 plot(u, wait = true, value = true);\n\n\nResults are shown on Fig. 162 and Fig. 163.\n\n\n\n\nFig. 162 The adapted triangulation¶\n\n\n\n\n\nFig. 163 The level line of the European basquet put option¶\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Eigen value problems\n\t\t\tNext topic: Navier-Stokes equations \n\t\t\n\t","l":"models/evolution-problems.html"},"42":{"t":"Fluid-structure coupled problem","p":"\n\t\t\n   \nFluid-structure coupled problem¶\nThis problem involves the Lamé system of elasticity and the Stokes system for viscous fluids with velocity \\(\\mathbf{u}\\) and pressure \\(p\\):\n\n\\[\\begin{split}\\begin{array}{rcll}\n    -\\Delta\\mathbf{u} + \\mathbf{\\nabla} p & = & 0 & \\hbox{ in }\\Omega\\\\\n    \\nabla\\cdot\\mathbf{u} & = & 0 & \\hbox{ in }\\Omega\\\\\n    \\mathbf{u} & = & \\mathbf{u}_\\Gamma & \\hbox{ on }\\Gamma = \\partial\\Omega\n\\end{array}\\end{split}\\]\nwhere \\(u_\\Gamma\\) is the velocity of the boundaries.\nThe force that the fluid applies to the boundaries is the normal stress\n\n\\[\\mathbf{h}  = (\\nabla\\mathbf{u} +\\nabla\\mathbf{u}^T)\\mathbf{n} -p\\mathbf{n}\\]\nElastic solids subject to forces deform: a point in the solid at (x,y) goes to (X,Y) after.\nWhen the displacement vector \\(\\mathbf{v} = (v_1,v_2)  =  (X-x, Y-y)\\) is small, Hooke’s law relates the stress tensor \\(\\sigma\\) inside the solid to the deformation tensor \\(\\epsilon\\):\n\n\\[\\sigma_{ij}  =  \\lambda \\delta_{ij} \\nabla.\\mathbf{v} + 2\\mu\\epsilon_{ij},\n\\,\n\\epsilon_{ij}  =  {1\\over 2}({\\partial v_i\\over\\partial x_j} + {\\partial v_j\\over\\partial x_i} )\\]\nwhere \\(\\delta\\) is the Kronecker symbol and where \\(\\lambda\\), \\(\\mu\\) are two constants describing the material mechanical properties in terms of the modulus of elasticity, and Young’s modulus.\nThe equations of elasticity are naturally written in variational form for the displacement vector \\(v(x)\\in V\\) as:\n\n\\[\\int_\\Omega \\left[2\\mu\\epsilon_{ij}(\\mathbf{v})\\epsilon_{ij}(\\mathbf{w})\n+\\lambda \\epsilon_{ii}(v)\\epsilon_{jj}(\\mathbf{w})\\right]\n = \\int_\\Omega \\mathbf{g}\\cdot \\mathbf{w} +\\int_\\Gamma \\mathbf{h}\\cdot \\mathbf{w},%\\`{u}\n\\forall \\mathbf{w}\\in V\\]\nThe data are the gravity force \\(\\mathbf{g}\\) and the boundary stress \\(\\mathbf{h}\\).\n\nTip\nFluide-structure\nIn our example, the Lamé system and the Stokes system are coupled by a common boundary on which the fluid stress creates a displacement of the boundary and hence changes the shape of the domain where the Stokes problem is integrated.\nThe geometry is that of a vertical driven cavity with an elastic lid.\nThe lid is a beam with weight so it will be deformed by its own weight and by the normal stress due to the fluid reaction.\nThe cavity is the \\(10 \\times 10\\) square and the lid is a rectangle of height \\(l = 2\\).\nA beam sits on a box full of fluid rotating because the left vertical side has velocity one.\nThe beam is bent by its own weight, but the pressure of the fluid modifies the bending.\nThe bending displacement of the beam is given by \\((uu, vv)\\) whose solution is given as follows.\n 1 // Parameters\n 2 int bottombeam  =  2; //label of bottombeam\n 3 real E  =  21.5;\n 4 real sigma  =  0.29;\n 5 real gravity  =  -0.05;\n 6 real coef  =  0.2;\n 7 \n 8 // Mesh (solid)\n 9 border a(t = 2, 0){x = 0; y = t; label = 1;}\n10 border b(t = 0, 10){x = t; y = 0; label = bottombeam;}\n11 border c(t = 0, 2){x = 10; y = t; label = 1;}\n12 border d(t = 0, 10){x = 10-t; y = 2; label = 3;}\n13 mesh th  =  buildmesh(b(20) + c(5) + d(20) + a(5));\n14 \n15 // Fespace (solid)\n16 fespace Vh(th, P1);\n17 Vh uu, w, vv, s;\n18 \n19 // Macro\n20 real sqrt2  =  sqrt(2.);\n21 macro epsilon(u1, u2) [dx(u1), dy(u2), (dy(u1)+dx(u2))/sqrt2] //\n22 macro div(u1, u2) (dx(u1) + dy(u2)) //\n23 \n24 // Problem (solid)\n25 real mu  =  E/(2*(1+sigma));\n26 real lambda  =  E*sigma/((1+sigma)*(1-2*sigma));\n27 solve Elasticity([uu, vv], [w, s])\n28      =  int2d(th)(\n29           lambda*div(w,s)*div(uu,vv)\n30         + 2.*mu*(epsilon(w,s)'*epsilon(uu,vv))\n31     )\n32     + int2d(th)(\n33         - gravity*s\n34     )\n35     + on(1, uu = 0, vv = 0)\n36     ;\n37 \n38 plot([uu, vv], wait = true);\n39 mesh th1  =  movemesh(th, [x+uu, y+vv]);\n40 plot(th1, wait = true);\n\n\nThen Stokes equation for fluids at low speed are solved in the box below the beam, but the beam has deformed the box (see border h):\n1 // Mesh (fluid)\n2 border e(t = 0, 10){x = t; y = -10; label =  1;}\n3 border f(t = 0, 10){x = 10; y = -10+t ; label =  1;}\n4 border g(t = 0, 10){x = 0; y = -t; label =  2;}\n5 border h(t = 0, 10){x = t; y = vv(t,0)*( t> = 0.001 )*(t < =  9.999); label = 3;}\n6 mesh sh  =  buildmesh(h(-20) + f(10) + e(10) + g(10));\n7 plot(sh, wait = true);\n\n\nWe use the Uzawa conjugate gradient to solve the Stokes problem like in Navier-Stokes equations.\n 1 // Fespace (fluid)\n 2 fespace Xh(sh, P2);\n 3 Xh u1, u2;\n 4 Xh bc1;\n 5 Xh brhs;\n 6 Xh bcx = 0, bcy = 1;\n 7 \n 8 fespace Mh(sh, P1);\n 9 Mh p, ppp;\n10 \n11 // Problem (fluid)\n12 varf bx (u1, q)  =  int2d(sh)(-(dx(u1)*q));\n13 varf by (u1, q)  =  int2d(sh)(-(dy(u1)*q));\n14 varf Lap (u1, u2)\n15      =  int2d(sh)(\n16           dx(u1)*dx(u2)\n17         + dy(u1)*dy(u2)\n18     )\n19     + on(2, u1 = 1)\n20     + on(1, 3, u1 = 0)\n21     ;\n22 \n23 bc1[]  =  Lap(0, Xh);\n24 \n25 matrix A  =  Lap(Xh, Xh, solver = CG);\n26 matrix Bx  =  bx(Xh, Mh);\n27 matrix By  =  by(Xh, Mh);\n28 \n29 \n30 func real[int] divup (real[int] & pp){\n31     int verb  =  verbosity;\n32     verbosity  =  0;\n33     brhs[]  =  Bx'*pp;\n34     brhs[] + =  bc1[] .*bcx[];\n35     u1[]  =  A^-1*brhs[];\n36     brhs[]  =  By'*pp;\n37     brhs[] + =  bc1[] .*bcy[];\n38     u2[]  =  A^-1*brhs[];\n39     ppp[]  =  Bx*u1[];\n40     ppp[] + =  By*u2[];\n41     verbosity  =  verb;\n42     return ppp[];\n43 }\n\n\ndo a loop on the two problems\n1 // Coupling loop\n2 for(int step  =  0; step < 10; ++step){\n3     // Solve (fluid)\n4     LinearCG(divup, p[], eps = 1.e-3, nbiter = 50);\n5     divup(p[]);\n\n\nNow the beam will feel the stress constraint from the fluid:\n1 // Forces\n2 Vh sigma11, sigma22, sigma12;\n3 Vh uu1 = uu, vv1 = vv;\n4 \n5 sigma11([x+uu, y+vv])  =  (2*dx(u1) - p);\n6 sigma22([x+uu, y+vv])  =  (2*dy(u2) - p);\n7 sigma12([x+uu, y+vv])  =  (dx(u1) + dy(u2));\n\n\nwhich comes as a boundary condition to the PDE of the beam:\n 1 // Solve (solid)\n 2 solve Elasticity2 ([uu, vv], [w, s], init = step)\n 3  =  int2d(th)(\n 4       lambda*div(w,s)*div(uu,vv)\n 5     + 2.*mu*(epsilon(w,s)'*epsilon(uu,vv))\n 6 )\n 7 + int2d(th)(\n 8     - gravity*s\n 9 )\n10 + int1d(th, bottombeam)(\n11     - coef*(sigma11*N.x*w + sigma22*N.y*s + sigma12*(N.y*w+N.x*s))\n12 )\n13 + on(1, uu = 0, vv = 0)\n14 ;\n15 \n16 // Plot\n17 plot([uu, vv], wait = 1);\n18 \n19 // Error\n20 real err  =  sqrt(int2d(th)((uu-uu1)^2 + (vv-vv1)^2));\n21 cout << \"Erreur L2  =  \" << err << endl;\n\n\nNotice that the matrix generated by Elasticity2 is reused (see init = i).\nFinally we deform the beam:\n1 // Movemesh\n2 th1  =  movemesh(th, [x+0.2*uu, y+0.2*vv]);\n3 plot(th1, wait = true);\n\n\nFluid velocity and pressure, displacement vector of the structure and displaced geometry in the fluid-structure interaction of a soft side and a driven cavity are shown Fig. 171, Fig. 172 and Fig. 173\n\n\n\nFig. 171 Velocity and pressure¶\n\n\n\n\n\n\nFig. 172 Displacement¶\n\n\n\n\n\nFig. 173 Moved mesh¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Domain decomposition\n\t\t\tNext topic: Transmission problem \n\t\t\n\t","l":"models/fluid-structure-coupled-problem.html"},"43":{"t":"Free boundary problems","p":"\n\t\t\n   \nFree boundary problems¶\nThe domain \\(\\Omega\\) is defined with:\n 1 // Parameters\n 2 real L  =  10; //length\n 3 real hl  =  2.1; //left height\n 4 real hr  =  0.35; //right height\n 5 int n  =  4;\n 6 \n 7 // Mesh\n 8 border a(t = 0, L){x = t; y = 0;}; //bottom: Gamma_a\n 9 border b(t = 0, hr){x = L; y = t;}; //right: Gamma_b\n10 border f(t = L, 0){x = t; y = t*(hr-hl)/L+hl;}; //free surface: Gamma_f\n11 border d(t = hl, 0){x = 0; y = t;}; // left: Gamma_d\n12 mesh Th  =  buildmesh(a(10*n) + b(6*n) + f(8*n) + d(3*n));\n13 plot(Th);\n\n\n\n\n\nFig. 177 The mesh of the domain \\(\\Omega\\)¶\n\n\nThe free boundary problem is:\nFind \\(u\\) and \\(\\Omega\\) such that:\n\n\\[\\begin{split}\\left\\{\n\\begin{array}{rcll}\n   -\\Delta u & = & 0 & \\mbox{ in }\\Omega\\\\\n   u & = & y & \\mbox{ on }\\Gamma_b\\\\\n   \\partial u \\over \\partial n & = & 0 & \\mbox{ on }\\Gamma_d\\cup\\Gamma_a\\\\\n   \\partial u \\over \\partial n & = & {q \\over K} n_x & \\mbox{ on }\\Gamma_f\\\\\n   u & = & y & \\mbox{ on }\\Gamma_f\n\\end{array}\n\\right.\\end{split}\\]\nWe use a fixed point method;\n\\(\\Omega^0  =  \\Omega\\)\nIn two step, fist we solve the classical following problem:\n\n\\[\\begin{split}\\left\\{\n\\begin{array}{rcll}\n    -\\Delta u & = & 0 & \\mbox{ in }\\Omega^n\\\\\n    u & = & y & \\mbox{ on }\\Gamma^n_b\\\\\n    \\partial u \\over \\partial n & = & 0 & \\mbox{ on }\\Gamma^n_d\\cup\\Gamma^n_a\\\\\n    u & = & y & \\mbox{ on }\\Gamma^n_f\n\\end{array}\n\\right.\\end{split}\\]\nThe variational formulation is:\nFind \\(u\\) on \\(V = H^1(\\Omega^n)\\), such than \\(u = y\\) on \\(\\Gamma^n_b\\) and \\(\\Gamma^n_f\\)\n\n\\[\\int_{\\Omega^n}\\nabla u \\nabla u'  =  0,\\ \\forall u' \\in V \\mbox{ with } u'  = 0 \\mbox{ on }\\Gamma^n_b \\cup \\Gamma^n_f\\]\nAnd secondly to construct a domain deformation \\(\\mathcal{F}(x,y) = [x,y-v(x,y)]\\) where \\(v\\) is solution of the following problem:\n\n\\[\\begin{split}\\left\\{\n\\begin{array}{rcll}\n    -\\Delta v & = & 0 & \\mbox{ in }\\Omega^n\\\\\n    v & = & 0 & \\mbox{ on }\\Gamma^n_a\\\\\n    \\partial v \\over \\partial n & = & 0 & \\mbox{ on }\\Gamma^n_b\\cup\\Gamma^n_d\\\\\n    \\partial v \\over \\partial n & = & {\\partial u \\over \\partial n} - {q\\over K} n_x & \\mbox{ on }\\Gamma^n_f\n\\end{array}\n\\right.\\end{split}\\]\nThe variational formulation is:\nFind \\(v\\) on \\(V\\), such than \\(v = 0\\) on \\(\\Gamma^n_a\\):\n\n\\[\\int_{\\Omega^n} \\nabla v \\nabla v'  =  \\int_{\\Gamma_f^n}({\\partial u \\over \\partial n} - { q\\over K} n_x )v',\\ \\quad \\forall v' \\in V \\mbox{ with } v'  = 0 \\mbox{ on }\\Gamma^n_a\\]\nFinally the new domain \\(\\Omega^{n+1}  =  \\mathcal{F}(\\Omega^n)\\)\n\nTip\nFree boundary\nThe FreeFEM implementation is:\n 1 // Parameters\n 2 real L  =  10; //length\n 3 real hr  =  2.1; //left height\n 4 real hl  =  0.35; //right height\n 5 int n  =  4;\n 6 \n 7 real q  =  0.02; //incoming flow\n 8 real K  =  0.5; //permeability\n 9 \n10 // Mesh\n11 border a(t = 0, L){x = t; y = 0;}; //bottom: Gamma_a\n12 border b(t = 0, hr){x = L; y = t;}; //right: Gamma_b\n13 border f(t = L, 0){x = t; y = t*(hr-hl)/L+hl;}; //free surface: Gamma_f\n14 border d(t = hl, 0){x = 0; y = t;}; // left: Gamma_d\n15 mesh Th  =  buildmesh(a(10*n) + b(6*n) + f(8*n) + d(3*n));\n16 plot(Th);\n17 \n18 // Fespace\n19 fespace Vh(Th, P1);\n20 Vh u, v;\n21 Vh uu, vv;\n22 \n23 // Problem\n24 problem Pu (u, uu, solver = CG)\n25      =  int2d(Th)(\n26           dx(u)*dx(uu)\n27         + dy(u)*dy(uu)\n28     )\n29     + on(b, f, u = y)\n30     ;\n31 \n32 problem Pv (v, vv, solver = CG)\n33      =  int2d(Th)(\n34           dx(v)*dx(vv)\n35         + dy(v)*dy(vv)\n36     )\n37     + on(a, v = 0)\n38     + int1d(Th, f)(\n39           vv*((q/K)*N.y - (dx(u)*N.x + dy(u)*N.y))\n40     )\n41     ;\n42 \n43 // Loop\n44 int j  =  0;\n45 real errv  =  1.;\n46 real erradap  =  0.001;\n47 while (errv > 1e-6){\n48     // Update\n49     j++;\n50 \n51     // Solve\n52     Pu;\n53     Pv;\n54 \n55     // Plot\n56     plot(Th, u, v);\n57 \n58     // Error\n59     errv  =  int1d(Th, f)(v*v);\n60 \n61     // Movemesh\n62     real coef  =  1.;\n63     real mintcc  =  checkmovemesh(Th, [x, y])/5.;\n64     real mint  =  checkmovemesh(Th, [x, y-v*coef]);\n65 \n66     if (mint < mintcc || j%10 =  = 0){ //mesh too bad  = > remeshing\n67         Th  =  adaptmesh(Th, u, err = erradap);\n68         mintcc  =  checkmovemesh(Th, [x, y])/5.;\n69     }\n70 \n71     while (1){\n72         real mint  =  checkmovemesh(Th, [x, y-v*coef]);\n73 \n74         if (mint > mintcc) break;\n75 \n76         cout << \"min |T|  =  \" << mint << endl;\n77         coef / =  1.5;\n78     }\n79 \n80     Th = movemesh(Th, [x, y-coef*v]);\n81 \n82     // Display\n83     cout << endl << j << \" - errv  =  \" << errv << endl;\n84 }\n85 \n86 // Plot\n87 plot(Th);\n88 plot(u, wait = true);\n\n\n\n\n\n\nFig. 178 The final solution on the new domain \\(\\Omega^{72}\\)¶\n\n\n\n\n\nFig. 179 The adapted mesh of the domain \\(\\Omega^{72}\\)¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Transmission problem\n\t\t\tNext topic: Non-linear elasticity \n\t\t\n\t","l":"models/free-boundary-problems.html"},"44":{"t":"Mathematical Models","p":"\n\t\t\n   \nMathematical Models¶\nSummary:\nThis chapter goes deeper into a number of problems that FreeFEM can solve.\nIt is a complement to the Tutorial part which was only an introduction.\nUsers are invited to contribute to make this models database grow.\n\n\n\n\n\t\t\n\t\t\t Previous topic: External libraries\n\t\t\tNext topic: Static problems \n\t\t\n\t","l":"models/index.html"},"45":{"t":"Navier-Stokes equations","p":"\n\t\t\n   \nNavier-Stokes equations¶\nThe Stokes equations are: for a given \\(\\mathbf{f}\\in L^2(\\Omega)^2\\):\n\n(55)¶\\[\\begin{split}\\left.\\begin{array}{cl}\n    -\\Delta \\mathbf{u}+\\nabla p &  = \\mathbf{f} \\\\\n    \\nabla\\cdot \\mathbf{u} & = 0\n\\end{array}\\right\\}\\quad \\hbox{ in }\\Omega\\end{split}\\]\nwhere \\(\\mathbf{u} = (u_1,u_2)\\) is the velocity vector and \\(p\\) the pressure.\nFor simplicity, let us choose Dirichlet boundary conditions on the velocity, \\(\\mathbf{u} = \\mathbf{u}_{\\Gamma}\\) on \\(\\Gamma\\).\nIn [TEMAM1977], Theorem 2.2, there is a weak form of (55):\nFind \\(\\mathbf{v} = (v_1,v_2)\\in \\mathbf{V}(\\Omega)\\):\n\n\\[\\mathbf{V}(\\Omega) = \\{\\mathbf{w}\\in H^1_0(\\Omega)^2|\\; \\textrm{div}\\mathbf{w} = 0\\}\\]\nwhich satisfy:\n\n\\[\\sum_{i = 1}^2\\int_{\\Omega}\\nabla u_i\\cdot \\nabla v_i = \\int_{\\Omega}\\mathbf{f}\\cdot \\mathbf{w}\n\\quad \\textrm{for all }v\\in V\\]\nHere it is used the existence \\(p\\in H^1(\\Omega)\\) such that \\(\\mathbf{u} = \\nabla p\\), if:\n\n\\[\\int_{\\Omega}\\mathbf{u}\\cdot \\mathbf{v} = 0\\quad \\textrm{for all }\\mathbf{v}\\in V\\]\nAnother weak form is derived as follows: We put:\n\n\\[\\mathbf{V} = H^1_0(\\Omega)^2;\\quad\nW = \\left\\{q\\in L^2(\\Omega)\\left|\\; \\int_{\\Omega}q = 0\\right.\\right\\}\\]\nBy multiplying the first equation in (55) with \\(v\\in V\\) and the second with \\(q\\in W\\), subsequent integration over \\(\\Omega\\), and an application of Green’s formula, we have:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\int_{\\Omega}\\nabla\\mathbf{u}\\cdot \\nabla\\mathbf{v}-\\int_{\\Omega}\\textrm{div}\\mathbf{v}\\, p\n    & = &\\int_{\\Omega}\\mathbf{f}\\cdot\\mathbf{v}\\\\\n    \\int_{\\Omega}\\textrm{div}\\mathbf{u}\\, q& = &0\n\\end{array}\\end{split}\\]\nThis yields the weak form of (55):\nFind \\((\\mathbf{u},p)\\in \\mathbf{V}\\times W\\) such that:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    a(\\mathbf{u},\\mathbf{v})+b(\\mathbf{v},p)& = &(\\mathbf{f},\\mathbf{v})\\\\\n    b(\\mathbf{u},q)& = &0\n\\end{array}\\end{split}\\]\nfor all \\((\\mathbf{v},q)\\in V\\times W\\), where:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    a(\\mathbf{u},\\mathbf{v})& = &\\int_{\\Omega}\\nabla \\mathbf{u}\\cdot \\nabla\\mathbf{v}\n     = \\sum_{i = 1}^2\\int_{\\Omega}\\nabla u_i\\cdot \\nabla v_i\\\\\n    b(\\mathbf{u},q)& = &-\\int_{\\Omega}\\textrm{div}\\mathbf{u}\\, q\n\\end{array}\\end{split}\\]\nNow, we consider finite element spaces \\(\\mathbf{V}_h\\subset \\mathbf{V}\\) and \\(W_h\\subset W\\), and we assume the following basis functions:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    &&\\mathbf{V}_h = V_h\\times V_h,\\quad\n    V_h = \\{v_h|\\; v_h = v_1\\phi_1+\\cdots +v_{M_V}\\phi_{M_V}\\},\\\\\n    &&W_h = \\{q_h|\\; q_h = q_1\\varphi_1+\\cdots +q_{M_W}\\varphi_{M_W}\\}\n\\end{array}\\end{split}\\]\nThe discrete weak form is: Find \\((\\mathbf{u}_{h},p_{h}) \\in \\mathbf{V}_{h} \\times W_{h}\\) such that:\n\n(56)¶\\[\\begin{split}\\begin{array}{cll}\n    a(\\mathbf{u}_h,\\mathbf{v}_h)+b(\\mathbf{v}_h,p) & =  (\\mathbf{f},\\mathbf{v}_h) ,\n    &\\forall \\mathbf{v}_{h} \\in \\mathbf{V}_{h} \\\\\n    b(\\mathbf{u}_h,q_h)& =  0,\n    &\\forall q_{h} \\in W_{h}\n\\end{array}\\end{split}\\]\n\nNote\nAssume that:\n\nThere is a constant \\(\\alpha_h>0\\) such that:\n\n\n\\[a(\\mathbf{v}_h,\\mathbf{v}_h)\\ge \\alpha\\| \\mathbf{v}_h\\|_{1,\\Omega}^2\\quad \\textrm{for all }\\mathbf{v}_h\\in Z_h\\]\nwhere:\n\n\\[Z_h = \\{\\mathbf{v}_h\\in \\mathbf{V}_h|\\; b(\\mathbf{w}_h,q_h) = 0\\quad \\textrm{for all }q_h\\in W_h\\}\\]\n\n\nThere is a constant \\(\\beta_h>0\\) such that:\n\n\n\\[\\sup_{\\mathbf{v}_h\\in \\mathbf{V}_h}\\frac{b(\\mathbf{v}_h,q_h)}{\\| \\mathbf{v}_h\\|_{1,\\Omega}}\n\\ge \\beta_h\\| q_h\\|_{0,\\Omega}\\quad \\textrm{for all }q_h\\in W_h\\]\nThen we have an unique solution \\((\\mathbf{u}_h,p_h)\\) of (56) satisfying:\n\n\\[\\| \\mathbf{u}-\\mathbf{u}_h\\|_{1,\\Omega}+\\| p-p_h\\|_{0,\\Omega}\n\\le C\\left(\n\\inf_{\\mathbf{v}_h\\in \\mathbf{V}_h}\\| u-v_h\\|_{1,\\Omega}\n+\\inf_{q_h\\in W_h}\\| p-q_h\\|_{0,\\Omega}\\right)\\]\nwith a constant \\(C>0\\) (see e.g. [ROBERTS1993], Theorem 10.4).\n\n\n\n\nLet us denote that:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    A& = &(A_{ij}),\\, A_{ij} = \\int_{\\Omega}\\nabla \\phi_j\\cdot \\nabla \\phi_i\\qquad\n    i,j = 1,\\cdots,M_{\\mathbf{V}}\\\\\n    \\mathbf{B}& = &(Bx_{ij},By_{ij}),\\,\n    Bx_{ij} = -\\int_{\\Omega}\\p \\phi_j/\\p x\\, \\varphi_i\\qquad\n    By_{ij} = -\\int_{\\Omega}\\p \\phi_j/\\p y\\, \\varphi_i\\nonumber\\\\\n    &&\\qquad i = 1,\\cdots,M_W;j = 1,\\cdots,M_V\\nonumber\n\\end{array}\\end{split}\\]\nthen (56) is written by:\n\n\\[\\begin{split}\\left(\n\\begin{array}{cc}\n    \\mathbf{A}&\\mathbf{\\mathbf{B}}^*\\\\\n    \\mathbf{B}&0\n\\end{array}\n\\right)\n\\left(\n\\begin{array}{cc}\n    \\mathbf{U}_h\\\\\n    \\{p_h\\}\n\\end{array}\n\\right)\n = \n\\left(\n\\begin{array}{cc}\n    \\mathbf{F}_h\\\\\n    0\n\\end{array}\n\\right)\\end{split}\\]\nwhere:\n\n\\[\\begin{split}&\\mathbf{A} = \\left(\n\\begin{array}{cc}\nA&0\\\\\n0&A\n\\end{array}\n\\right)\n\\qquad\n\\mathbf{B}^* = \\left\\{\n\\begin{array}{c}\nBx^T\\\\\nBy^T\n\\end{array}\n\\right\\}\n\\qquad\n\\mathbf{U}_h = \\left\\{\n\\begin{array}{c}\n\\{u_{1,h}\\}\\\\\n\\{u_{2,h}\\}\n\\end{array}\n\\right\\}\n\\qquad\n\\mathbf{F}_h = \\left\\{\n\\begin{array}{c}\n\\{\\textstyle{\\int_{\\Omega}f_1\\phi_i}\\}\\\\\n\\{\\textstyle{\\int_{\\Omega}f_2\\phi_i}\\}\n\\end{array}\n\\right\\}\\end{split}\\]\nPenalty method: This method consists of replacing (56) by a more regular problem:\nFind \\((\\mathbf{v}_h^{\\epsilon},p_h^{\\epsilon})\\in \\mathbf{V}_h\\times \\tilde{W}_{h}\\) satisfying:\n\n(57)¶\\[\\begin{split}\\begin{array}{cll}\n    a(\\mathbf{u}_h^\\epsilon,\\mathbf{v}_h)+b(\\mathbf{v}_h,p_h^{\\epsilon}) & =  (\\mathbf{f},\\mathbf{v}_h) ,\n    &\\forall \\mathbf{v}_{h} \\in \\mathbf{V}_{h} \\\\\n    b(\\mathbf{u}_h^{\\epsilon},q_h)-\\epsilon(p_h^{\\epsilon},q_h)& =  0,\n    &\\forall q_{h} \\in \\tilde{W}_{h}\n\\end{array}\\end{split}\\]\nwhere \\(\\tilde{W}_h\\subset L^2(\\Omega)\\).\nFormally, we have:\n\n\\[\\textrm{div}\\mathbf{u}_h^{\\epsilon} = \\epsilon p_h^{\\epsilon}\\]\nand the corresponding algebraic problem:\n\n\\[\\begin{split}\\left(\n\\begin{array}{cc}\n\\mathbf{A}&B^*\\\\\nB&-\\epsilon I\n\\end{array}\n\\right)\n\\left(\n\\begin{array}{cc}\n\\mathbf{U}_h^{\\epsilon}\\\\\n\\{p_h^{\\epsilon}\\}\n\\end{array}\n\\right)\n = \n\\left(\n\\begin{array}{cc}\n\\mathbf{F}_h\\\\\n0\n\\end{array}\n\\right)\\end{split}\\]\n\nNote\nWe can eliminate \\(p_h^\\epsilon = (1/\\epsilon)BU_h^{\\epsilon}\\) to obtain:\n\n(58)¶\\[(A+(1/\\epsilon)B^*B)\\mathbf{U}_h^{\\epsilon} = \\mathbf{F}_h^{\\epsilon}\\]\nSince the matrix \\(A+(1/\\epsilon)B^*B\\) is symmetric, positive-definite, and sparse, (58) can be solved by known technique.\nThere is a constant \\(C>0\\) independent of \\(\\epsilon\\) such that:\n\n\\[\\|\\mathbf{u}_h-\\mathbf{u}_h^\\epsilon\\|_{1,\\Omega}+\n\\|p_h-p_h^{\\epsilon}\\|_{0,\\Omega}\\le C\\epsilon\\]\n(see e.g. [ROBERTS1993], 17.2)\n\n\nTip\nCavity\nThe driven cavity flow problem is solved first at zero Reynolds number (Stokes flow) and then at Reynolds 100.\nThe velocity pressure formulation is used first and then the calculation is repeated with the stream function vorticity formulation.\nWe solve the driven cavity problem by the penalty method (57) where \\(\\mathbf{u}_{\\Gamma}\\cdot \\mathbf{n} = 0\\) and \\(\\mathbf{u}_{\\Gamma}\\cdot \\mathbf{s} = 1\\) on the top boundary and zero elsewhere (\\(\\mathbf{n}\\) is the unit normal to \\(\\Gamma\\), and \\(\\mathbf{s}\\) the unit tangent to \\(\\Gamma\\)).\nThe mesh is constructed by:\n1 mesh Th  =  square(8, 8);\n\n\nWe use a classical Taylor-Hood element technique to solve the problem:\nThe velocity is approximated with the \\(P_{2}\\) FE (\\(X_{h}\\) space), and the pressure is approximated with the \\(P_{1}\\) FE (\\(M_{h}\\) space), where:\n\n\\[X_{h}  =  \\left\\{ \\mathbf{v} \\in H^{1}(]0,1[^2) \\left|\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{2}\\right.\\right\\}\\]\nand:\n\n\\[M_{h}  =  \\left\\{ v \\in H^{1}(]0,1[^2) \\left|\\; \\forall K \\in \\mathcal{T}_{h}\\quad v_{|K} \\in P_{1} \\right.\\right\\}\\]\nThe FE spaces and functions are constructed by:\n1 fespace Xh(Th, P2); //definition of the velocity component space\n2 fespace Mh(Th, P1); //definition of the pressure space\n3 Xh u2, v2;\n4 Xh u1, v1;\n5 Mh p, q;\n\n\nThe Stokes operator is implemented as a system-solve for the velocity \\((u1,u2)\\) and the pressure \\(p\\).\nThe test function for the velocity is \\((v1,v2)\\) and \\(q\\) for the pressure, so the variational form (56) in freefem language is:\n 1 solve Stokes (u1, u2, p, v1, v2, q, solver = Crout)\n 2      =  int2d(Th)(\n 3         (\n 4             dx(u1)*dx(v1)\n 5             + dy(u1)*dy(v1)\n 6             + dx(u2)*dx(v2)\n 7             + dy(u2)*dy(v2)\n 8         )\n 9         - p*q*(0.000001)\n10         - p*dx(v1) - p*dy(v2)\n11         - dx(u1)*q - dy(u2)*q\n12     )\n13     + on(3, u1 = 1, u2 = 0)\n14     + on(1, 2, 4, u1 = 0, u2 = 0)\n15     ;\n\n\nEach unknown has its own boundary conditions.\nIf the streamlines are required, they can be computed by finding \\(\\psi\\) such that \\(rot\\psi = u\\) or better:\n\n\\[-\\Delta\\psi = \\nabla\\times u\\]\n 1 Xh psi, phi;\n 2 \n 3 solve streamlines (psi, phi)\n 4      =  int2d(Th)(\n 5           dx(psi)*dx(phi)\n 6         + dy(psi)*dy(phi)\n 7     )\n 8     + int2d(Th)(\n 9         - phi*(dy(u1) - dx(u2))\n10     )\n11     + on(1, 2, 3, 4, psi = 0)\n12     ;\n\n\nNow the Navier-Stokes equations are solved:\n\n\\[{\\p {u}\\over\\p t} +u\\cdot\\nabla u-\\nu \\Delta u+\\nabla p = 0, \\nabla\\cdot u = 0\\]\nwith the same boundary conditions and with initial conditions \\(u = 0\\).\nThis is implemented by using the convection operator convect for the term \\({\\p u\\over\\p t} +u\\cdot\\nabla u\\), giving a discretization in time\n\n\\[\\begin{split}\\begin{array}{cl}\n    \\frac{1}{\\tau } (u^{n+1}-u^n\\circ X^n) -\\nu\\Delta u^{n+1} + \\nabla p^{n+1} & = 0,\\\\\n    \\nabla\\cdot u^{n+1} & =  0\n\\end{array}\\end{split}\\]\nThe term \\(u^n\\circ X^n(x)\\approx u^n(x-u^n(x)\\tau )\\) will be computed by the operator convect, so we obtain:\n 1 int i = 0;\n 2 real alpha = 1/dt;\n 3 problem NS (u1, u2, p, v1, v2, q, solver = Crout, init = i)\n 4      =  int2d(Th)(\n 5           alpha*(u1*v1 + u2*v2)\n 6         + nu * (\n 7               dx(u1)*dx(v1) + dy(u1)*dy(v1)\n 8             + dx(u2)*dx(v2) + dy(u2)*dy(v2)\n 9         )\n10         - p*q*(0.000001)\n11         - p*dx(v1) - p*dy(v2)\n12         - dx(u1)*q - dy(u2)*q\n13     )\n14     + int2d(Th)(\n15         - alpha*convect([up1,up2],-dt,up1)*v1\n16         - alpha*convect([up1,up2],-dt,up2)*v2\n17     )\n18     + on(3, u1 = 1, u2 = 0)\n19     + on(1, 2, 4,u1 = 0, u2 = 0)\n20     ;\n21 \n22 // Time loop\n23 for (i  =  0; i < =  10; i++){\n24     // Update\n25     up1  =  u1;\n26     up2  =  u2;\n27 \n28     // Solve\n29     NS;\n30 \n31     // Plot\n32     if (!(i % 10))\n33     plot(coef = 0.2, cmm = \"[u1,u2] and p\", p, [u1, u2]);\n34 }\n\n\nNotice that the stiffness matrices are reused (keyword init = i)\nThe complete script is available in cavity example.\n\n\nUzawa Algorithm and Conjugate Gradients¶\nWe solve Stokes problem without penalty.\nThe classical iterative method of Uzawa is described by the algorithm (see e.g. [ROBERTS1993], 17.3, [GLOWINSKI1979], 13 or [GLOWINSKI1985], 13):\n\nInitialize: Let \\(p_h^0\\) be an arbitrary chosen element of \\(L^2(\\Omega)\\).\nCalculate :math:`mathbf{u}_h`: Once \\(p_h^n\\) is known, \\(\\mathbf{v}_h^n\\) is the solution of:\n\n\n\\[\\mathbf{u}_h^n  =  A^{-1}(\\mathbf{f}_h-\\mathbf{B}^*p_h^n)\\]\n\n\nAdvance :math:`p_h`: Let \\(p_h^{n+1}\\) be defined by;\n\n\n\\[p_h^{n+1} = p_h^n+\\rho_n\\mathbf{B}\\mathbf{u}_h^n\\]\n\n\n\nThere is a constant \\(\\alpha>0\\) such that \\(\\alpha\\le \\rho_n\\le 2\\) for each \\(n\\), then \\(\\mathbf{u}_h^n\\) converges to the solution \\(\\mathbf{u}_h\\), and then \\(B\\mathbf{v}_h^n\\to 0\\) as \\(n\\to \\infty\\) from the Advance \\(p_h\\). This method in general converges quite slowly.\nFirst we define mesh, and the Taylor-Hood approximation.\nSo \\(X_{h}\\) is the velocity space, and \\(M_{h}\\) is the pressure space.\n\nTip\nStokes Uzawa\n 1 // Mesh\n 2 mesh Th  =  square(10, 10);\n 3 \n 4 // Fespace\n 5 fespace Xh(Th, P2);\n 6 Xh u1, u2;\n 7 Xh bc1, bc2;\n 8 Xh b;\n 9 \n10 fespace Mh(Th, P1);\n11 Mh p;\n12 Mh ppp; //ppp is a working pressure\n13 \n14 // Problem\n15 varf bx (u1, q)  =  int2d(Th)(-(dx(u1)*q));\n16 varf by (u1, q)  =  int2d(Th)(-(dy(u1)*q));\n17 varf a (u1, u2)\n18  =  int2d(Th)(\n19           dx(u1)*dx(u2)\n20         + dy(u1)*dy(u2)\n21     )\n22     + on(3, u1 = 1)\n23     + on(1, 2, 4, u1 = 0) ;\n24 //remark: put the on(3,u1 = 1) before on(1,2,4,u1 = 0)\n25 //because we want zero on intersection\n26 \n27 matrix A  =  a(Xh, Xh, solver = CG);\n28 matrix Bx  =  bx(Xh, Mh); //B = (Bx, By)\n29 matrix By  =  by(Xh, Mh);\n30 \n31 bc1[]  =  a(0,Xh); //boundary condition contribution on u1\n32 bc2  =  0; //no boundary condition contribution on u2\n33 \n34 //p_h^n -> B A^-1 - B^* p_h^n  =  -div u_h\n35 //is realized as the function divup\n36 func real[int] divup (real[int] & pp){\n37     //compute u1(pp)\n38     b[]  =  Bx'*pp;\n39     b[] * =  -1;\n40     b[] + =  bc1[];\n41     u1[]  =  A^-1*b[];\n42     //compute u2(pp)\n43     b[]  =  By'*pp;\n44     b[] * =  -1;\n45     b[] + =  bc2[];\n46     u2[]  =  A^-1*b[];\n47     //u^n  =  (A^-1 Bx^T p^n, By^T p^n)^T\n48     ppp[]  =  Bx*u1[]; //ppp  =  Bx u_1\n49     ppp[] + =  By*u2[]; //+ By u_2\n50 \n51     return ppp[] ;\n52 }\n53 \n54 // Initialization\n55 p = 0; //p_h^0  =  0\n56 LinearCG(divup, p[], eps = 1.e-6, nbiter = 50); //p_h^{n+1}  =  p_h^n + B u_h^n\n57 // if n> 50 or |p_h^{n+1} - p_h^n| < =  10^-6, then the loop end\n58 divup(p[]); //compute the final solution\n59 \n60 plot([u1, u2], p, wait = 1, value = true, coef = 0.1);\n\n\n\n\n\nNSUzawaCahouetChabart.edp¶\nIn this example we solve the Navier-Stokes equation past a cylinder with the Uzawa algorithm preconditioned by the Cahouet-Chabart method (see [GLOWINSKI2003] for all the details).\nThe idea of the preconditioner is that in a periodic domain, all differential operators commute and the Uzawa algorithm comes to solving the linear operator \\(\\nabla. ( (\\alpha Id + \\nu \\Delta)^{-1} \\nabla\\), where \\(Id\\) is the identity operator.\nSo the preconditioner suggested is \\(\\alpha \\Delta^{-1} + \\nu Id\\).\nTo implement this, we do:\n\nTip\nNS Uzawa Cahouet Chabart\n  1 // Parameters\n  2 verbosity  =  0;\n  3 real D  =  0.1;\n  4 real H  =  0.41;\n  5 real cx0  =  0.2;\n  6 real cy0  =  0.2; //center of cylinder\n  7 real xa  =  0.15;\n  8 real ya  =  0.2;\n  9 real xe  =  0.25;\n 10 real ye  =  0.2;\n 11 int nn  =  15;\n 12 \n 13 //TODO\n 14 real Um  =  1.5; //max velocity (Rey 100)\n 15 real nu  =  1e-3;\n 16 \n 17 func U1  =  4.*Um*y*(H-y)/(H*H); //Boundary condition\n 18 func U2  =  0.;\n 19 real T = 2;\n 20 real dt  =  D/nn/Um; //CFL  =  1\n 21 real epspq  =  1e-10;\n 22 real eps  =  1e-6;\n 23 \n 24 // Variables\n 25 func Ub  =  Um*2./3.;\n 26 real alpha  =  1/dt;\n 27 real Rey  =  Ub*D/nu;\n 28 real t  =  0.;\n 29 \n 30 // Mesh\n 31 border fr1(t = 0, 2.2){x = t; y = 0; label = 1;}\n 32 border fr2(t = 0, H){x = 2.2; y = t; label = 2;}\n 33 border fr3(t = 2.2, 0){x = t; y = H; label = 1;}\n 34 border fr4(t = H, 0){x = 0; y = t; label = 1;}\n 35 border fr5(t = 2*pi, 0){x = cx0+D*sin(t)/2; y = cy0+D*cos(t)/2; label = 3;}\n 36 mesh Th  =  buildmesh(fr1(5*nn) + fr2(nn) + fr3(5*nn) + fr4(nn) + fr5(-nn*3));\n 37 \n 38 // Fespace\n 39 fespace Mh(Th, [P1]);\n 40 Mh p;\n 41 \n 42 fespace Xh(Th, [P2]);\n 43 Xh u1, u2;\n 44 \n 45 fespace Wh(Th, [P1dc]);\n 46 Wh w; //vorticity\n 47 \n 48 // Macro\n 49 macro grad(u) [dx(u), dy(u)] //\n 50 macro div(u1, u2) (dx(u1) + dy(u2)) //\n 51 \n 52 // Problem\n 53 varf von1 ([u1, u2, p], [v1, v2, q])\n 54      =  on(3, u1 = 0, u2 = 0)\n 55     + on(1, u1 = U1, u2 = U2)\n 56     ;\n 57 \n 58 //remark : the value 100 in next varf is manualy fitted, because free outlet.\n 59 varf vA (p, q)  = \n 60     int2d(Th)(\n 61           grad(p)' * grad(q)\n 62     )\n 63     + int1d(Th, 2)(\n 64           100*p*q\n 65     )\n 66     ;\n 67 \n 68 varf vM (p, q)\n 69      =  int2d(Th, qft = qf2pT)(\n 70           p*q\n 71     )\n 72     + on(2, p = 0)\n 73     ;\n 74 \n 75 varf vu ([u1], [v1])\n 76      =  int2d(Th)(\n 77           alpha*(u1*v1)\n 78         + nu*(grad(u1)' * grad(v1))\n 79     )\n 80     + on(1, 3, u1 = 0)\n 81     ;\n 82 \n 83 varf vu1 ([p], [v1])  =  int2d(Th)(p*dx(v1));\n 84 varf vu2 ([p], [v1])  =  int2d(Th)(p*dy(v1));\n 85 \n 86 varf vonu1 ([u1], [v1])  =  on(1, u1 = U1) + on(3, u1 = 0);\n 87 varf vonu2 ([u1], [v1])  =  on(1, u1 = U2) + on(3, u1 = 0);\n 88 \n 89 matrix pAM  =  vM(Mh, Mh, solver = UMFPACK);\n 90 matrix pAA  =  vA(Mh, Mh, solver = UMFPACK);\n 91 matrix AU  =  vu(Xh, Xh, solver = UMFPACK);\n 92 matrix B1  =  vu1(Mh, Xh);\n 93 matrix B2  =  vu2(Mh, Xh);\n 94 \n 95 real[int] brhs1  =  vonu1(0, Xh);\n 96 real[int] brhs2  =  vonu2(0, Xh);\n 97 \n 98 varf vrhs1(uu, vv)  =  int2d(Th)(convect([u1, u2], -dt, u1)*vv*alpha) + vonu1;\n 99 varf vrhs2(v2, v1)  =  int2d(Th)(convect([u1, u2], -dt, u2)*v1*alpha) + vonu2;\n100 \n101 // Uzawa function\n102 func real[int] JUzawa (real[int] & pp){\n103     real[int] b1  =  brhs1; b1 + =  B1*pp;\n104     real[int] b2  =  brhs2; b2 + =  B2*pp;\n105     u1[]  =  AU^-1 * b1;\n106     u2[]  =  AU^-1 * b2;\n107     pp  =  B1'*u1[];\n108     pp + =  B2'*u2[];\n109     pp  =  -pp;\n110     return pp;\n111 }\n112 \n113 // Preconditioner function\n114 func real[int] Precon (real[int] & p){\n115     real[int] pa  =  pAA^-1*p;\n116     real[int] pm  =  pAM^-1*p;\n117     real[int] pp  =  alpha*pa + nu*pm;\n118     return pp;\n119 }\n120 \n121 // Initialization\n122 p  =  0;\n123 \n124 // Time loop\n125 int ndt  =  T/dt;\n126 for(int i  =  0; i < ndt; ++i){\n127     // Update\n128     brhs1  =  vrhs1(0, Xh);\n129     brhs2  =  vrhs2(0, Xh);\n130 \n131     // Solve\n132     int res  =  LinearCG(JUzawa, p[], precon = Precon, nbiter = 100, verbosity = 10, veps = eps);\n133     assert(res =  = 1);\n134     eps  =  -abs(eps);\n135 \n136     // Vorticity\n137     w  =  -dy(u1) + dx(u2);\n138     plot(w, fill = true, wait = 0, nbiso = 40);\n139 \n140     // Update\n141     dt  =  min(dt, T-t);\n142     t + =  dt;\n143     if(dt < 1e-10*T) break;\n144 }\n145 \n146 // Plot\n147 plot(w, fill = true, nbiso = 40);\n148 \n149 // Display\n150 cout << \"u1 max  =  \" << u1[].linfty\n151     << \", u2 max  =  \" << u2[].linfty\n152     << \", p max  =  \" << p[].max << endl;\n\n\n\nWarning\nStop test of the conjugate gradient\nBecause we start from the previous solution and the end the previous solution is close to the final solution, don’t take a relative stop test to the first residual, take an absolute stop test (negative here).\n\n\n\n\nFig. 164 The vorticity at Reynolds number 100 a time 2s with the Cahouet-Chabart method.¶\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Evolution problems\n\t\t\tNext topic: Variational Inequality \n\t\t\n\t","l":"models/navier-stokes-equations.html"},"46":{"t":"Non-linear elasticity","p":"\n\t\t\n   \nNon-linear elasticity¶\nThe nonlinear elasticity problem is: find the displacement \\((u_{1},u_{2})\\) minimizing \\(J\\):\n\n\\[\\min J(u_{1},u_{2})  =  \\int_{\\Omega} f(F2) - \\int_{\\Gamma_{p}} P_{a} \\, u_{2}\\]\nwhere \\(F2(u_{1},u_{2})  =  A(E[u_{1},u_{2}],E[u_{1},u_{2}])\\) and \\(A(X,Y)\\) is bilinear symmetric positive form with respect two matrix \\(X,Y\\).\nwhere \\(f\\) is a given \\(\\mathcal{C}^2\\) function, and \\(E[u_{1},u_{2}]  =  (E_{ij})_{i = 1,2,\\,j = 1,2}\\) is the Green-Saint Venant deformation tensor defined with:\n\n\\[E_{ij}  =  0.5 \\big( ( \\p_i u_j + \\p_j u_i ) + \\sum_k \\p_i u_k {\\times} \\p_j u_k \\big)\\]\nDenote \\(\\mathbf{u} = (u_{1},u_{2})\\), \\(\\mathbf{v} = (v_{1},v_{2})\\), \\(\\mathbf{w} = (w_{1},w_{2})\\).\nSo, the differential of \\(J\\) is:\n\n\\[DJ(\\mathbf{u})(\\mathbf{v})  =  \\int DF2(\\mathbf{u})(\\mathbf{v}) \\;f'(F2(\\mathbf{u}))) - \\int_{\\Gamma_{p}} P_{a} v_{2}\\]\nwhere \\(DF2(\\mathbf{u})(\\mathbf{v})  =  2 \\; A(DE[\\mathbf{u}](\\mathbf{v}),E[\\mathbf{u}])\\) and \\(DE\\) is the first differential of \\(E\\).\nThe second order differential is:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    D^2 J(\\mathbf{u})((\\mathbf{v}),(\\mathbf{w})) & = & \\displaystyle\\int DF2(\\mathbf{u})(\\mathbf{v}) \\; DF2(\\mathbf{u})(\\mathbf{w}) \\; f''(F2(\\mathbf{u}))) \\\\\n    &+& \\displaystyle\\int \\; D^2F2(\\mathbf{u})(\\mathbf{v},\\mathbf{w}) \\; f'(F2(\\mathbf{u})))\n\\end{array}\\end{split}\\]\nwhere:\n\n\\[D^2F2(\\mathbf{u})(\\mathbf{v},\\mathbf{w})  =  2 \\; A(\\;D^2E[\\mathbf{u}](\\mathbf{v},\\mathbf{w})\\;,\\;E[\\mathbf{u}]\\;) + 2 \\; A(\\;DE[\\mathbf{u}](\\mathbf{v})\\;,DE[\\mathbf{u}](\\mathbf{w})\\;) .\\]\nand \\(D^{2}E\\) is the second differential of \\(E\\).\nSo all notations can be define with macro:\n 1  macro EL(u, v) [dx(u), (dx(v)+dy(u)), dy(v)] //is [epsilon_11, 2epsilon_12, epsilon_22]\n 2 \n 3  macro ENL(u, v) [\n 4      (dx(u)*dx(u) + dx(v)*dx(v))*0.5,\n 5      (dx(u)*dy(u) + dx(v)*dy(v)),\n 6      (dy(u)*dy(u) + dy(v)*dy(v))*0.5\n 7  ] //\n 8 \n 9  macro dENL(u, v, uu, vv) [\n10      (dx(u)*dx(uu) + dx(v)*dx(vv)),\n11      (dx(u)*dy(uu) + dx(v)*dy(vv) + dx(uu)*dy(u) + dx(vv)*dy(v)),\n12      (dy(u)*dy(uu) + dy(v)*dy(vv))\n13  ] //\n14 \n15  macro E(u, v) (EL(u,v) + ENL(u,v)) //is [E_11, 2E_12, E_22]\n16  macro dE(u, v, uu, vv) (EL(uu, vv) + dENL(u, v, uu, vv)) //\n17  macro ddE(u, v, uu, vv, uuu, vvv) dENL(uuu, vvv, uu, vv) //\n18  macro F2(u, v) (E(u, v)'*A*E(u, v)) //\n19  macro dF2(u, v, uu, vv) (E(u, v)'*A*dE(u, v, uu, vv)*2.) //\n20  macro ddF2(u, v, uu, vv, uuu, vvv) (\n21      (dE(u, v, uu, vv)'*A*dE(u, v, uuu, vvv))*2.\n22      + (E(u, v)'*A*ddE(u, v, uu, vv, uuu, vvv))*2.\n23  ) //\n\n\nThe Newton Method is:\nchoose \\(n = 0\\),and \\(u_0,v_0\\) the initial displacement\n\nloop:\n\nfind \\((du,dv)\\) : solution of\n\n\\[D^2J(u_n,v_n)((w,s),(du,dv))  =  DJ(u_n,v_n)(w,s) , \\quad \\forall w,s\\]\n\n\\(un  =  un - du,\\quad vn  = vn - dv\\)\nuntil \\((du,dv)\\) small is enough\n\n\n\nThe way to implement this algorithm in FreeFEM is use a macro tool to implement \\(A\\) and \\(F2\\), \\(f\\), \\(f'\\),\\(f''\\).\nA macro is like in ccp preprocessor of C++, but this begin by macro and the end of the macro definition is before the comment //.\nIn this case the macro is very useful because the type of parameter can be change.\nAnd it is easy to make automatic differentiation.\n\n\n\nFig. 180 The deformed domain¶\n\n\n  1 // Macro\n  2 macro EL(u, v) [dx(u), (dx(v)+dy(u)), dy(v)] //is [epsilon_11, 2epsilon_12, epsilon_22]\n  3 \n  4 macro ENL(u, v) [\n  5     (dx(u)*dx(u) + dx(v)*dx(v))*0.5,\n  6     (dx(u)*dy(u) + dx(v)*dy(v)),\n  7     (dy(u)*dy(u) + dy(v)*dy(v))*0.5\n  8     ] //\n  9 \n 10 macro dENL(u, v, uu, vv) [\n 11     (dx(u)*dx(uu) + dx(v)*dx(vv)),\n 12     (dx(u)*dy(uu) + dx(v)*dy(vv) + dx(uu)*dy(u) + dx(vv)*dy(v)),\n 13     (dy(u)*dy(uu) + dy(v)*dy(vv))\n 14     ] //\n 15 \n 16 macro E(u, v) (EL(u,v) + ENL(u,v)) //is [E_11, 2E_12, E_22]\n 17 macro dE(u, v, uu, vv) (EL(uu, vv) + dENL(u, v, uu, vv)) //\n 18 macro ddE(u, v, uu, vv, uuu, vvv) dENL(uuu, vvv, uu, vv) //\n 19 macro F2(u, v) (E(u, v)'*A*E(u, v)) //\n 20 macro dF2(u, v, uu, vv) (E(u, v)'*A*dE(u, v, uu, vv)*2.) //\n 21 macro ddF2(u, v, uu, vv, uuu, vvv) (\n 22       (dE(u, v, uu, vv)'*A*dE(u, v, uuu, vvv))*2.\n 23     + (E(u, v)'*A*ddE(u, v, uu, vv, uuu, vvv))*2.\n 24     ) //\n 25 \n 26 macro f(u) ((u)*(u)*0.25) //\n 27 macro df(u) ((u)*0.5) //\n 28 macro ddf(u) (0.5) //\n 29 \n 30 // Parameters\n 31 real mu  =  0.012e5; //kg/cm^2\n 32 real lambda  =  0.4e5; //kg/cm^2\n 33 real Pa  =  1e2;\n 34 \n 35 // sigma  =  2 mu E + lambda tr(E) Id\n 36 // A(u,v)  =  sigma(u):E(v)\n 37 //\n 38 // ( a b )\n 39 // ( b c )\n 40 //\n 41 // tr*Id : (a,b,c) -> (a+c,0,a+c)\n 42 // so the associed matrix is:\n 43 // ( 1 0 1 )\n 44 // ( 0 0 0 )\n 45 // ( 1 0 1 )\n 46 \n 47 real a11  =  2*mu + lambda;\n 48 real a22  =  mu; //because [0, 2*t12, 0]' A [0, 2*s12,0]  =  2*mu*(t12*s12 + t21*s21)  =  4*mu*t12*s12\n 49 real a33  =  2*mu + lambda;\n 50 real a12  =  0;\n 51 real a13  =  lambda;\n 52 real a23  =  0;\n 53 // symetric part\n 54 real a21  =  a12;\n 55 real a31  =  a13;\n 56 real a32  =  a23;\n 57 \n 58 //the matrix A\n 59 func A  =  [[a11, a12, a13], [a21, a22, a23], [a31, a32, a33]];\n 60 \n 61 // Mesh\n 62 int n  =  30;\n 63 int m  =  10;\n 64 mesh Th  =  square(n, m, [x, .3*y]); //label: 1 bottom, 2 right, 3 up, 4 left;\n 65 int bottom  =  1, right  =  2, upper  =  3, left  =  4;\n 66 plot(Th);\n 67 \n 68 // Fespace\n 69 fespace Wh(Th, P1dc);\n 70 Wh e2, fe2, dfe2, ddfe2;\n 71 \n 72 fespace Vh(Th, [P1, P1]);\n 73 Vh [uu, vv]  =  [0, 0], [w, s], [un, vn]  =  [0, 0];\n 74 \n 75 fespace Sh(Th, P1);\n 76 Sh u1, v1;\n 77 \n 78 // Problem\n 79 varf vmass ([uu, vv], [w, s], solver = CG)  =  int2d(Th)(uu*w + vv*s);\n 80 matrix M  =  vmass(Vh, Vh);\n 81 problem NonLin([uu, vv], [w, s], solver = LU)\n 82      =  int2d(Th, qforder = 1)( //(D^2 J(un))\n 83            dF2(un, vn, uu, vv)*dF2(un, vn, w, s)*ddfe2\n 84         + ddF2(un, vn, uu, vv, w, s)*ddfe2\n 85     )\n 86     - int1d(Th, upper)(\n 87           Pa*s\n 88     )\n 89     - int2d(Th, qforder = 1)( //(D J(un))\n 90           dF2(un, vn, w, s)*dfe2\n 91     )\n 92     + on(right, left, uu = 0, vv = 0)\n 93     ;\n 94 \n 95 // Newton's method\n 96 for (int i  =  0; i < 10; i++){\n 97     cout << \"Loop \" << i << endl;\n 98 \n 99     // Update\n100     e2  =  F2(un, vn);\n101     dfe2  =  df(e2) ;\n102     ddfe2  =  ddf(e2);\n103     cout << \"e2 max  =  \" <<e2[].max << \", min  =  \" << e2[].min << endl;\n104     cout << \"de2 max  =  \"<< dfe2[].max << \", min  =  \" << dfe2[].min << endl;\n105     cout << \"dde2 max  =  \"<< ddfe2[].max << \", min  =  \" << ddfe2[].min << endl;\n106 \n107     // Solve\n108     NonLin;\n109     w[]   =  M*uu[];\n110 \n111     // Residual\n112     real res  =  sqrt(w[]' * uu[]); //L^2 norm of [uu, vv]\n113     cout << \" L^2 residual  =  \" << res << endl;\n114 \n115     // Update\n116     v1  =  vv;\n117     u1  =  uu;\n118     cout << \"u1 min  =  \" <<u1[].min << \", u1 max  =  \" << u1[].max << endl;\n119     cout << \"v1 min  =  \" <<v1[].min << \", v2 max  =  \" << v1[].max << endl;\n120 \n121     // Plot\n122     plot([uu, vv], wait = true, cmm = \"uu, vv\");\n123 \n124     // Update\n125     un[] - =  uu[];\n126     plot([un, vn], wait = true, cmm = \"displacement\");\n127 \n128     if (res < 1e-5) break;\n129 }\n130 \n131 // Plot\n132 plot([un, vn], wait = true);\n133 \n134 // Movemesh\n135 mesh th1  =  movemesh(Th, [x+un, y+vn]);\n136 \n137 // Plot\n138 plot(th1, wait = true);\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Free boundary problems\n\t\t\tNext topic: Compressible Neo-Hookean materials \n\t\t\n\t","l":"models/non-linear-elasticity.html"},"47":{"t":"Non-linear static problems","p":"\n\t\t\n   \nNon-linear static problems¶\nHere we propose to solve the following non-linear academic problem of minimization of a functional:\n\n\\[J(u)  =  \\int_\\Omega \\frac{1}{2} f(|\\nabla u|^2) - u*b\\]\nwhere \\(u\\) is function of \\(H^1_0(\\Omega)\\) and \\(f\\) defined by:\n\n\\[f(x)  =  a*x + x-ln(1+x),\\ f'(x)  =  a+\\frac{x}{1+x},\\ f''(x)  =  \\frac{1}{(1+x)^2}\\]\n\nNewton-Raphson algorithm¶\nNow, we solve the Euler problem \\(\\nabla J (u)  =  0\\) with Newton-Raphson algorithm, that is:\n\n\\[u^{n+1}  =  u^n - ( \\nabla^2 J (u^{n}))^{-1}*\\nabla J(u^n)\\]\n 1 // Parameters\n 2 real a  =  0.001;\n 3 func b  =  1.;\n 4 \n 5 // Mesh\n 6 mesh Th  =  square(10, 10);\n 7 Th  =  adaptmesh(Th, 0.05, IsMetric = 1, splitpbedge = 1);\n 8 plot(Th, wait = true);\n 9 \n10 // Fespace\n11 fespace Vh(Th, P1);\n12 Vh u = 0;\n13 Vh v, w;\n14 \n15 fespace Ph(Th, P1dc);\n16 Ph alpha; //to store |nabla u|^2\n17 Ph dalpha ; //to store 2f''(|nabla u|^2)\n18 \n19 // Function\n20 func real f (real u){\n21     return u*a + u - log(1.+u);\n22 }\n23 func real df (real u){\n24     return a +u/(1.+u);\n25 }\n26 func real ddf (real u){\n27     return 1. / ((1.+u)*(1.+u));\n28 }\n29 \n30 // Problem\n31 //the variational form of evaluate dJ  =  nabla J\n32 //dJ  =  f'()*(dx(u)*dx(vh) + dy(u)*dy(vh))\n33 varf vdJ (uh, vh)\n34      =  int2d(Th)(\n35           alpha*(dx(u)*dx(vh) + dy(u)*dy(vh))\n36         - b*vh\n37     )\n38     + on(1, 2, 3, 4, uh = 0)\n39     ;\n40 \n41 //the variational form of evaluate ddJ  =  nabla^2 J\n42 //hJ(uh,vh)  =  f'()*(dx(uh)*dx(vh) + dy(uh)*dy(vh))\n43 //  + 2*f''()(dx(u)*dx(uh) + dy(u)*dy(uh)) * (dx(u)*dx(vh) + dy(u)*dy(vh))\n44 varf vhJ (uh, vh)\n45      =  int2d(Th)(\n46           alpha*(dx(uh)*dx(vh) + dy(uh)*dy(vh))\n47         + dalpha*(dx(u)*dx(vh) + dy(u)*dy(vh))*(dx(u)*dx(uh) + dy(u)*dy(uh))\n48     )\n49     + on(1, 2, 3, 4, uh = 0)\n50     ;\n51 \n52 // Newton algorithm\n53 for (int i  =  0; i < 100; i++){\n54     // Compute f' and f''\n55     alpha  =  df(dx(u)*dx(u) + dy(u)*dy(u));\n56     dalpha  =  2*ddf(dx(u)*dx(u) + dy(u)*dy(u));\n57 \n58     // nabla J\n59     v[] =  vdJ(0, Vh);\n60 \n61     // Residual\n62     real res  =  v[]'*v[];\n63     cout << i << \" residu^2  =  \" << res << endl;\n64     if( res < 1e-12) break;\n65 \n66     // HJ\n67     matrix H  =  vhJ(Vh, Vh, factorize = 1, solver = LU);\n68 \n69     // Newton\n70     w[]  =  H^-1*v[];\n71     u[] - =  w[];\n72 }\n73 \n74 // Plot\n75 plot (u, wait = true, cmm = \"Solution with Newton-Raphson\");\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Elasticity\n\t\t\tNext topic: Eigen value problems \n\t\t\n\t","l":"models/non-linear-static-problems.html"},"48":{"t":"Static problems","p":"\n\t\t\n   \nStatic problems¶\n\nSoap Film¶\nOur starting point here will be the mathematical model to find the shape of soap film which is glued to the ring on the \\(xy-\\)plane:\n\n\\[C = \\{(x,y);\\;x = \\cos t,\\,y = \\sin t,\\,0\\leq t\\leq 2\\pi \\}\\]\nWe assume the shape of the film is described by the graph \\((x,y,u(x,y))\\) of the vertical displacement \\(u(x,y)\\, (x^2+y^2<1)\\) under a vertical pressure \\(p\\) in terms of force per unit area and an initial tension \\(\\mu\\) in terms of force per unit length.\nConsider the “small plane” ABCD, A:\\((x,y,u(x,y))\\), B:\\((x,y,u(x+\\delta x,y))\\), C:\\((x,y,u(x+\\delta x,y+\\delta y))\\) and D:\\((x,y,u(x,y+\\delta y))\\).\nDenote by \\(\\vec{n}(x,y) = (n_x(x,y),n_y(x,y),n_z(x,y))\\) the normal vector of the surface \\(z = u(x,y)\\).\nWe see that the vertical force due to the tension \\(\\mu\\) acting along the edge AD is \\(-\\mu n_x(x,y)\\delta y\\) and the the vertical force acting along the edge AD is:\n\n\\[\\mu n_x(x+\\delta x,y)\\delta y\\simeq \\mu\\left(n_x(x,y)+\\frac{\\p n_x}{\\p x}\\delta x\\right)(x,y)\\delta y\\]\n\n\n\nSimilarly, for the edges AB and DC we have:\n\n\\[-\\mu n_y(x,y)\\delta x,\\quad\\mu\\left(n_y(x,y)+\\p n_y/\\p y\\right)(x,y)\\delta x\\]\nThe force in the vertical direction on the surface ABCD due to the tension \\(\\mu\\) is given by:\n\n\\[\\mu\\left(\\p n_x/\\p x\\right)\\delta x\\delta y+T\\left(\\p n_y/\\p y\\right)\\delta y\\delta x\\]\nAssuming small displacements, we have:\n\n\\[\\begin{split}\\begin{array}{rcccl}\n    \\nu_x& = &(\\p u/\\p x)/\\sqrt{1+(\\p u/\\p x)^2+(\\p u/\\p y)^2}&\\simeq& \\p u/\\p x,\\\\\n    \\nu_y& = &(\\p u/\\p y)/\\sqrt{1+(\\p u/\\p x)^2+(\\p u/\\p y)^2}&\\simeq& \\p u/\\p y\n\\end{array}\\end{split}\\]\nLetting \\(\\delta x\\to dx,\\, \\delta y\\to dy\\), we have the equilibrium of the vertical displacement of soap film on ABCD by \\(p\\):\n\n\\[\\mu dx dy\\p^2 u/\\p x^2 +\\mu dx dy\\p^2 u/\\p y^2 + p dx dy  =  0\\]\nUsing the Laplace operator \\(\\Delta  =  \\p^2 /\\p x^2 + \\p^2 /\\p y^2\\), we can find the virtual displacement write the following:\n\n\\[-\\Delta u  =  f\\quad \\mbox{in }\\Omega\\]\nwhere \\(f = p/\\mu\\), \\(\\Omega  = \\{(x,y);\\;x^{2}+y^{2}<1\\}\\).\nPoisson’s equation appears also in electrostatics taking the form of \\(f = \\rho / \\epsilon\\) where \\(\\rho\\) is the charge density, \\(\\epsilon\\) the dielectric constant and \\(u\\) is named as electrostatic potential.\nThe soap film is glued to the ring \\(\\p \\Omega  = C\\), then we have the boundary condition:\n\n\\[u = 0\\quad \\mbox{on }\\p \\Omega\\]\nIf the force is gravity, for simplify, we assume that \\(f = -1\\).\n 1 // Parameters\n 2 int nn  =  50;\n 3 func f  =  -1;\n 4 func ue  =  (x^2+y^2-1)/4; //ue: exact solution\n 5 \n 6 // Mesh\n 7 border a(t = 0, 2*pi){x = cos(t); y = sin(t); label = 1;}\n 8 mesh disk  =  buildmesh(a(nn));\n 9 plot(disk);\n10 \n11 // Fespace\n12 fespace femp1(disk, P1);\n13 femp1 u, v;\n14 \n15 // Problem\n16 problem laplace (u, v)\n17      =  int2d(disk)( //bilinear form\n18         dx(u)*dx(v)\n19         + dy(u)*dy(v)\n20     )\n21     - int2d(disk)( //linear form\n22         f*v\n23     )\n24     + on(1, u = 0) //boundary condition\n25     ;\n26 \n27 // Solve\n28 laplace;\n29 \n30 // Plot\n31 plot (u, value = true, wait = true);\n32 \n33 // Error\n34 femp1 err  =  u - ue;\n35 plot(err, value = true, wait = true);\n36 \n37 cout << \"error L2  =  \" << sqrt( int2d(disk)(err^2) )<< endl;\n38 cout << \"error H10  =  \" << sqrt( int2d(disk)((dx(u)-x/2)^2) + int2d(disk)((dy(u)-y/2)^2) )<< endl;\n39 \n40 /// Re-run with a mesh adaptation ///\n41 \n42 // Mesh adaptation\n43 disk  =  adaptmesh(disk, u, err = 0.01);\n44 plot(disk, wait = true);\n45 \n46 // Solve\n47 laplace;\n48 plot (u, value = true, wait = true);\n49 \n50 // Error\n51 err  =  u - ue; //become FE-function on adapted mesh\n52 plot(err, value = true, wait = true);\n53 \n54 cout << \"error L2  =  \" << sqrt( int2d(disk)(err^2) )<< endl;\n55 cout << \"error H10  =  \" << sqrt( int2d(disk)((dx(u)-x/2)^2) + int2d(disk)((dy(u)-y/2)^2) )<< endl;\n\n\n\n\n\nFig. 134 Isovalue of \\(u\\)¶\n\n\n\n\n\nFig. 135 A side view of \\(u\\)¶\n\n\nIn the 37th line, the \\(L^2\\)-error estimation between the exact solution \\(u_e\\),\n\n\\[\\|u_h - u_e\\|_{0,\\Omega} = \\left(\\int_{\\Omega}|u_h-u_e|^2\\, \\d x\\d y\\right)^{1/2}\\]\nand in the following line, the \\(H^1\\)-error seminorm estimation:\n\n\\[|u_h - u_e|_{1,\\Omega} = \\left(\\int_{\\Omega}|\\nabla u_h-\\nabla u_e|^2\\, \\d x\\d y\\right)^{1/2}\\]\nare done on the initial mesh.\nThe results are \\(\\|u_h - u_e\\|_{0,\\Omega} = 0.000384045,\\, |u_h - u_e|_{1,\\Omega} = 0.0375506\\).\nAfter the adaptation, we have \\(\\|u_h - u_e\\|_{0,\\Omega} = 0.000109043,\\, |u_h - u_e|_{1,\\Omega} = 0.0188411\\).\nSo the numerical solution is improved by adaptation of mesh.\n\n\nElectrostatics¶\nWe assume that there is no current and a time independent charge distribution.\nThen the electric field \\(\\mathbf{E}\\) satisfies:\n\n(42)¶\\[\\begin{split}\\begin{array}{rcl}\n    \\mathrm{div}\\mathbf{E} & = & \\rho/\\epsilon\\\\\n    \\mathrm{curl}\\mathbf{E} & = & 0\n\\end{array}\\end{split}\\]\nwhere \\(\\rho\\) is the charge density and \\(\\epsilon\\) is called the permittivity of free space.\nFrom the equation (42) We can introduce the electrostatic potential such that \\(\\mathbf{E} = -\\nabla \\phi\\).\nThen we have Poisson’s equation \\(-\\Delta \\phi = f\\), \\(f = -\\rho/\\epsilon\\).\nWe now obtain the equipotential line which is the level curve of \\(\\phi\\), when there are no charges except conductors \\(\\{C_i\\}_{1,\\cdots,K}\\).\nLet us assume \\(K\\) conductors \\(C_1,\\cdots,C_K\\) within an enclosure \\(C_0\\).\nEach one is held at an electrostatic potential \\(\\varphi_i\\).\nWe assume that the enclosure \\(C0\\) is held at potential 0.\nIn order to know \\(\\varphi(x)\\) at any point \\(x\\) of the domain \\(\\Omega\\), we must solve:\n\n\\[-\\Delta \\varphi  = 0\\quad \\textrm{ in }\\Omega\\]\nwhere \\(\\Omega\\) is the interior of \\(C_0\\) minus the conductors \\(C_i\\), and \\(\\Gamma\\) is the boundary of \\(\\Omega\\), that is \\(\\sum_{i = 0}^N C_i\\).\nHere \\(g\\) is any function of \\(x\\) equal to \\(\\varphi_i\\) on \\(C_i\\) and to 0 on \\(C_0\\).\nThe boundary equation is a reduced form for:\n\n\\[\\varphi  = \\varphi_{i}\\;\\text{on }C_{i},\\;i = 1...N,\\varphi  = 0\\;\\text{on }C_{0}.\\]\nFirst we give the geometrical informations; \\(C_0 = \\{(x,y);\\; x^2+y^2 = 5^2\\}\\), \\(C_1 = \\{(x,y):\\;\\frac{1}{0.3^2}(x-2)^2+\\frac{1}{3^2}y^2 = 1\\}\\), \\(C_2 = \\{(x,y):\\; \\frac{1}{0.3^2}(x+2)^2+\\frac{1}{3^2}y^2 = 1\\}\\).\nLet \\(\\Omega\\) be the disk enclosed by \\(C_0\\) with the elliptical holes enclosed by \\(C_1\\) and \\(C_2\\).\nNote that \\(C_0\\) is described counterclockwise, whereas the elliptical holes are described clockwise, because the boundary must be oriented so that the computational domain is to its left.\n 1 // Mesh\n 2 border C0(t = 0, 2*pi){x = 5*cos(t); y = 5*sin(t);}\n 3 border C1(t = 0, 2*pi){x = 2+0.3*cos(t); y = 3*sin(t);}\n 4 border C2(t = 0, 2*pi){x = -2+0.3*cos(t); y = 3*sin(t);}\n 5 \n 6 mesh Th  =  buildmesh(C0(60) + C1(-50) + C2(-50));\n 7 plot(Th);\n 8 \n 9 // Fespace\n10 fespace Vh(Th, P1);\n11 Vh uh, vh;\n12 \n13 // Problem\n14 problem Electro (uh, vh)\n15      =  int2d(Th)( //bilinear\n16         dx(uh)*dx(vh)\n17         + dy(uh)*dy(vh)\n18     )\n19     + on(C0, uh = 0) //boundary condition on C_0\n20     + on(C1, uh = 1) //+1 volt on C_1\n21     + on(C2, uh = -1) //-1 volt on C_2\n22     ;\n23 \n24 // Solve\n25 Electro;\n26 plot(uh);\n\n\n\n\n\n\nFig. 136 Disk with two elliptical holes¶\n\n\n\n\n\nFig. 137 Equipotential lines where \\(C_1\\) is located in right hand side¶\n\n\n\n\nAerodynamics¶\nLet us consider a wing profile \\(S\\) in a uniform flow.\nInfinity will be represented by a large circle \\(\\Gamma_{\\infty}\\).\nAs previously, we must solve:\n\n(43)¶\\[\\Delta \\varphi = 0\\quad\\textrm{in }\\Omega,\n\\quad \\varphi|_S = c,\\quad\n\\varphi|_{\\Gamma_{\\infty}} = u_{\\infty 1x}-u_{\\infty2x}\\]\nwhere \\(\\Omega\\) is the area occupied by the fluid, \\(u_{\\infty}\\) is the air speed at infinity, \\(c\\) is a constant to be determined so that \\(\\p_n\\varphi\\) is continuous at the trailing edge \\(P\\) of \\(S\\) (so-called Kutta-Joukowski condition).\nLift is proportional to \\(c\\).\nTo find \\(c\\) we use a superposition method.\nAs all equations in (43) are linear, the solution \\(\\varphi_c\\) is a linear function of \\(c\\)\n\n\\[\\varphi_c  =  \\varphi_0 + c\\varphi_1\\]\nwhere \\(\\varphi_0\\) is a solution of (43) with \\(c  =  0\\) and \\(\\varphi_1\\) is a solution with \\(c  =  1\\) and zero speed at infinity.\nWith these two fields computed, we shall determine \\(c\\) by requiring the continuity of \\(\\p \\varphi /\\p n\\) at the trailing edge.\nAn equation for the upper surface of a NACA0012 (this is a classical wing profile in aerodynamics; the rear of the wing is called the trailing edge) is:\n\n\\[y  =  0.17735\\sqrt{x} - 0.075597x - 0.212836x^2 + 0.17363x^3 - 0.06254x^4\\]\nTaking an incidence angle \\(\\alpha\\) such that \\(\\tan \\alpha  =  0.1\\), we must solve:\n\n\\[-\\Delta\\varphi  =  0\\qquad \\textrm{in }\\Omega, \\quad \\varphi|_{\\Gamma_1}  =  y - 0.1x,\\quad \\varphi |_{\\Gamma_2}  =  c\\]\nwhere \\(\\Gamma_2\\) is the wing profile and \\(\\Gamma_1\\) is an approximation of infinity.\nOne finds \\(c\\) by solving:\n\n\\[\\begin{split}\\begin{array}{ccccccc}\n    -\\Delta\\varphi_0 & =  0 &\\textrm{in }\\Omega&,\\qquad \\varphi_0|_{\\Gamma_1} & =  y - 0.1x&, \\quad \\varphi_0|_{\\Gamma_2} & =  0,\\\\\n    -\\Delta\\varphi_1 & =  0 &\\textrm{in }\\Omega&, \\qquad \\varphi_1|_{\\Gamma_1} & =  0&, \\quad \\varphi_1|_{\\Gamma_2} & =  1\n\\end{array}\\end{split}\\]\nThe solution \\(\\varphi  =  \\varphi_0+c\\varphi_1\\) allows us to find \\(c\\) by writing that \\(\\p_n\\varphi\\) has no jump at the trailing edge \\(P  =  (1, 0)\\).\nWe have \\(\\p n\\varphi -(\\varphi (P^+)-\\varphi (P))/\\delta\\) where \\(P^+\\) is the point just above \\(P\\) in the direction normal to the profile at a distance \\(\\delta\\).\nThus the jump of \\(\\p_n\\varphi\\) is \\((\\varphi_0|_{P^+} +c(\\varphi_1|_{P^+} -1))+(\\varphi_0|_{P^-} +c(\\varphi_1|_{P^-} -1))\\) divided by \\(\\delta\\) because the normal changes sign between the lower and upper surfaces. Thus\n\n\\[c  =  -\\frac{\\varphi_0|_{P^+} + \\varphi_0|_{P^-}}\n{(\\varphi_1|_{P^+} + \\varphi_1|_{P^-} - 2)} ,\\]\nwhich can be programmed as:\n\n\\[c  =  -\\frac{\\varphi_0(0.99, 0.01) + \\varphi_0(0.99,-0.01)}\n{(\\varphi_1(0.99, 0.01) + \\varphi_1(0.99,-0.01) - 2)} .\\]\n 1 // Mesh\n 2 border a(t = 0, 2*pi){x = 5*cos(t); y = 5*sin(t);}\n 3 border upper(t = 0, 1) {\n 4     x = t;\n 5     y = 0.17735*sqrt(t)-0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4);\n 6 }\n 7 border lower(t = 1, 0) {\n 8     x = t;\n 9     y = -(0.17735*sqrt(t) - 0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4));\n10 }\n11 border c(t = 0, 2*pi){x = 0.8*cos(t)+0.5; y = 0.8*sin(t);}\n12 \n13 mesh Zoom  =  buildmesh(c(30) + upper(35) + lower(35));\n14 mesh Th  =  buildmesh(a(30) + upper(35) + lower(35));\n15 \n16 // Fespace\n17 fespace Vh(Th, P2);\n18 Vh psi0, psi1, vh;\n19 \n20 fespace ZVh(Zoom, P2);\n21 \n22 // Problem\n23 solve Joukowski0(psi0, vh)\n24      =  int2d(Th)(\n25         dx(psi0)*dx(vh)\n26         + dy(psi0)*dy(vh)\n27     )\n28     + on(a, psi0 = y-0.1*x)\n29     + on(upper, lower, psi0 = 0)\n30     ;\n31 \n32 plot(psi0);\n33 \n34 solve Joukowski1(psi1,vh)\n35      =  int2d(Th)(\n36         dx(psi1)*dx(vh)\n37         + dy(psi1)*dy(vh)\n38     )\n39     + on(a, psi1 = 0)\n40     + on(upper, lower, psi1 = 1);\n41 \n42 plot(psi1);\n43 \n44 //continuity of pressure at trailing edge\n45 real beta  =  psi0(0.99,0.01) + psi0(0.99,-0.01);\n46 beta  =  -beta / (psi1(0.99,0.01) + psi1(0.99,-0.01)-2);\n47 \n48 Vh psi  =  beta*psi1 + psi0;\n49 plot(psi);\n50 \n51 ZVh Zpsi  =  psi;\n52 plot(Zpsi, bw = true);\n53 \n54 ZVh cp  =  -dx(psi)^2 - dy(psi)^2;\n55 plot(cp);\n56 \n57 ZVh Zcp  =  cp;\n58 plot(Zcp, nbiso = 40);\n\n\n\n\n\n\nFig. 138 Isovalue of \\(cp  =  -(\\p_x\\psi)^2 - (\\p_y\\psi)^2\\)¶\n\n\n\n\n\nFig. 139 Zooming of \\(cp\\)¶\n\n\n\n\nError estimation¶\nThere are famous estimation between the numerical result \\(u_h\\) and the exact solution \\(u\\) of the Poisson’s problem:\nIf triangulations \\(\\{\\mathcal{T}_h\\}_{h\\downarrow 0}\\) is regular (see Regular Triangulation), then we have the estimates:\n\n(44)¶\\[\\begin{split}\\begin{array}{rcl}\n    |\\nabla u - \\nabla u_h|_{0,\\Omega} &\\le& C_1h \\\\\n    \\|u - u_h\\|_{0,\\Omega} &\\le& C_2h^2\n\\end{array}\\end{split}\\]\nwith constants \\(C_1,\\, C_2\\) independent of \\(h\\), if \\(u\\) is in \\(H^2(\\Omega)\\).\nIt is known that \\(u\\in H^2(\\Omega)\\) if \\(\\Omega\\) is convex.\nIn this section we check (44).\nWe will pick up numericall error if we use the numerical derivative, so we will use the following for (44).\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\int_{\\Omega}|\\nabla u - \\nabla u_h|^2\\, \\d x\\d y & = &\\int_{\\Omega}\\nabla u\\cdot \\nabla(u - 2u_h)\\, \\d x\\d y+ \\int_{\\Omega}\\nabla u_h\\cdot \\nabla u_h\\, \\d x\\d y\\\\\n    & = &\\int_{\\Omega}f(u-2u_h)\\, \\d x\\d y+\\int_{\\Omega}fu_h\\, \\d x\\d y\n\\end{array}\\end{split}\\]\nThe constants \\(C_1,\\, C_2\\) are depend on \\(\\mathcal{T}_h\\) and \\(f\\), so we will find them by FreeFEM.\nIn general, we cannot get the solution \\(u\\) as a elementary functions even if spetical functions are added.\nInstead of the exact solution, here we use the approximate solution \\(u_0\\) in \\(V_h(\\mathcal{T}_h,P_2),\\, h\\sim 0\\).\n 1 // Parameters\n 2 func f  =  x*y;\n 3 \n 4 //Mesh\n 5 mesh Th0  =  square(100, 100);\n 6 \n 7 // Fespace\n 8 fespace V0h(Th0, P2);\n 9 V0h u0, v0;\n10 \n11 // Problem\n12 solve Poisson0 (u0, v0)\n13      =  int2d(Th0)(\n14         dx(u0)*dx(v0)\n15         + dy(u0)*dy(v0)\n16     )\n17     - int2d(Th0)(\n18         f*v0\n19     )\n20     + on(1, 2, 3, 4, u0 = 0)\n21     ;\n22 plot(u0);\n23 \n24 // Error loop\n25 real[int] errL2(10), errH1(10);\n26 for (int i  =  1; i < =  10; i++){\n27     // Mesh\n28     mesh Th  =  square(5+i*3,5+i*3);\n29 \n30     // Fespace\n31     fespace Vh(Th, P1);\n32     Vh u, v;\n33     fespace Ph(Th, P0);\n34     Ph h  =  hTriangle; //get the size of all triangles\n35 \n36     // Problem\n37     solve Poisson (u, v)\n38          =  int2d(Th)(\n39             dx(u)*dx(v)\n40             + dy(u)*dy(v)\n41         )\n42         - int2d(Th)(\n43             f*v\n44         )\n45         + on(1, 2, 3, 4, u = 0)\n46         ;\n47 \n48     // Error\n49     V0h uu  =  u; //interpolate solution on first mesh\n50     errL2[i-1]  =  sqrt( int2d(Th0)((uu - u0)^2) )/h[].max^2;\n51     errH1[i-1]  =  sqrt( int2d(Th0)(f*(u0 - 2*uu + uu)) )/h[].max;\n52 }\n53 \n54 // Display\n55 cout << \"C1  =  \" << errL2.max << \"(\"<<errL2.min<<\")\" << endl;\n56 cout << \"C2  =  \" << errH1.max << \"(\"<<errH1.min<<\")\" << endl;\n\n\nWe can guess that \\(C_1 = 0.0179253(0.0173266)\\) and \\(C_2 = 0.0729566(0.0707543)\\), where the numbers inside the parentheses are minimum in calculation.\n\n\nPeriodic Boundary Conditions¶\nWe now solve the Poisson equation:\n\n\\[-\\Delta u  =  sin(x+\\pi/4.)*cos(y+\\pi/4.)\\]\non the square \\(]0,2\\pi[^2\\) under bi-periodic boundary condition \\(u(0,y) = u(2\\pi,y)\\) for all \\(y\\) and \\(u(x,0) = u(x,2\\pi)\\) for all \\(x\\).\nThese boundary conditions are achieved from the definition of the periodic finite element space.\n 1 // Parameters\n 2 func f  =  sin(x+pi/4.)*cos(y+pi/4.); //right hand side\n 3 \n 4 // Mesh\n 5 mesh Th  =  square(10, 10, [2*x*pi, 2*y*pi]);\n 6 \n 7 // Fespace\n 8 //defined the fespace with periodic condition\n 9 //label: 2 and 4 are left and right side with y the curve abscissa\n10 //       1 and 2 are bottom and upper side with x the curve abscissa\n11 fespace Vh(Th, P2, periodic = [[2, y], [4, y], [1, x], [3, x]]);\n12 Vh uh, vh;\n13 \n14 // Problem\n15 problem laplace (uh, vh)\n16      =  int2d(Th)(\n17         dx(uh)*dx(vh)\n18         + dy(uh)*dy(vh)\n19     )\n20     + int2d(Th)(\n21         - f*vh\n22     )\n23     ;\n24 \n25 // Solve\n26 laplace;\n27 \n28 // Plot\n29 plot(uh, value = true);\n\n\n\n\n\nFig. 140 The isovalue of solution \\(u\\) with periodic boundary condition¶\n\n\nThe periodic condition does not necessarily require parallel boundaries.\nThe following example give such example.\n\nTip\nPeriodic boundary conditions - non-parallel boundaries\n 1 // Parameters\n 2 int n  =  10;\n 3 real r  =  0.25;\n 4 real r2  =  1.732;\n 5 func f  =  (y+x+1)*(y+x-1)*(y-x+1)*(y-x-1);\n 6 \n 7 // Mesh\n 8 border a(t = 0, 1){x = -t+1; y = t; label = 1;};\n 9 border b(t = 0, 1){x = -t; y = 1-t; label = 2;};\n10 border c(t = 0, 1){x = t-1; y = -t; label = 3;};\n11 border d(t = 0, 1){x = t; y = -1+t; label = 4;};\n12 border e(t = 0, 2*pi){x = r*cos(t); y = -r*sin(t); label = 0;};\n13 mesh Th  =  buildmesh(a(n) + b(n) + c(n) + d(n) + e(n));\n14 plot(Th, wait = true);\n15 \n16 // Fespace\n17 //warning for periodic condition:\n18 //side a and c\n19 //on side a (label 1) $ x \\in [0,1] $ or $ x-y\\in [-1,1] $\n20 //on side c (label 3) $ x \\in [-1,0]$ or $ x-y\\in[-1,1] $\n21 //so the common abscissa can be respectively $x$ and $x+1$\n22 //or you can can try curviline abscissa $x-y$ and $x-y$\n23 //1 first way\n24 //fespace Vh(Th, P2, periodic = [[2, 1+x], [4, x], [1, x], [3, 1+x]]);\n25 //2 second way\n26 fespace Vh(Th, P2, periodic = [[2, x+y], [4, x+y], [1, x-y], [3, x-y]]);\n27 Vh uh, vh;\n28 \n29 // Problem\n30 real intf  =  int2d(Th)(f);\n31 real mTh  =  int2d(Th)(1);\n32 real k  =   intf / mTh;\n33 problem laplace (uh, vh)\n34      =  int2d(Th)(\n35         dx(uh)*dx(vh)\n36         + dy(uh)*dy(vh)\n37     )\n38     + int2d(Th)(\n39         (k-f)*vh\n40     )\n41     ;\n42 \n43 // Solve\n44 laplace;\n45 \n46 // Plot\n47 plot(uh, wait = true);\n\n\n\n\n\nFig. 141 The isovalue of solution \\(u\\) for \\(\\Delta u  =  ((y+x)^{2}+1)((y-x)^{2}+1) - k\\), in \\(\\Omega\\) and \\(\\p_{n} u  = 0\\) on hole, and with two periodic boundary condition on external border¶\n\n\n\nAn other example with no equal border, just to see if the code works.\n\nTip\nPeriodic boundary conditions - non-equal border\n 1 // Macro\n 2 //irregular boundary condition to build border AB\n 3 macro LINEBORDER(A, B, lab)\n 4     border A#B(t = 0,1){ real t1 = 1.-t;\n 5     x = A#x*t1+B#x*t;\n 6     y = A#y*t1+B#y*t;\n 7     label = lab; } //EOM\n 8 // compute \\||AB|\\| A = (ax,ay) et B  = (bx,by)\n 9 macro dist(ax, ay, bx, by)\n10     sqrt(square((ax)-(bx)) + square((ay)-(by))) //EOM\n11 macro Grad(u) [dx(u), dy(u)] //EOM\n12 \n13 // Parameters\n14 int n  =  10;\n15 real Ax  =  0.9, Ay  =  1;\n16 real Bx  =  2, By  =  1;\n17 real Cx  =  2.5, Cy  =  2.5;\n18 real Dx  =  1, Dy  =  2;\n19 real gx  =  (Ax+Bx+Cx+Dx)/4.;\n20 real gy  =  (Ay+By+Cy+Dy)/4.;\n21 \n22 // Mesh\n23 LINEBORDER(A,B,1)\n24 LINEBORDER(B,C,2)\n25 LINEBORDER(C,D,3)\n26 LINEBORDER(D,A,4)\n27 mesh Th = buildmesh(AB(n)+BC(n)+CD(n)+DA(n),fixedborder = 1);\n28 \n29 // Fespace\n30 real l1  =  dist(Ax,Ay,Bx,By);\n31 real l2  =  dist(Bx,By,Cx,Cy);\n32 real l3  =  dist(Cx,Cy,Dx,Dy);\n33 real l4  =  dist(Dx,Dy,Ax,Ay);\n34 func s1  =  dist(Ax,Ay,x,y)/l1; //absisse on AB  =  ||AX||/||AB||\n35 func s2  =  dist(Bx,By,x,y)/l2; //absisse on BC  =  ||BX||/||BC||\n36 func s3  =  dist(Cx,Cy,x,y)/l3; //absisse on CD  =  ||CX||/||CD||\n37 func s4  =  dist(Dx,Dy,x,y)/l4; //absisse on DA  =  ||DX||/||DA||\n38 verbosity  =  6; //to see the abscisse value of the periodic condition\n39 fespace Vh(Th, P1, periodic = [[1, s1], [3, s3], [2, s2], [4, s4]]);\n40 verbosity  =  1; //reset verbosity\n41 Vh u, v;\n42 \n43 real cc  =  0;\n44 cc  =  int2d(Th)((x-gx)*(y-gy)-cc)/Th.area;\n45 cout << \"compatibility  =  \" << int2d(Th)((x-gx)*(y-gy)-cc) <<endl;\n46 \n47 // Problem\n48 solve Poisson (u, v)\n49      =  int2d(Th)(\n50         Grad(u)'*Grad(v)\n51         + 1e-10*u*v\n52     )\n53     -int2d(Th)(\n54         10*v*((x-gx)*(y-gy)-cc)\n55     )\n56     ;\n57 \n58 // Plot\n59 plot(u, value = true);\n\n\n\n\nTip\nPeriodic boundry conditions - Poisson cube-balloon\n 1 load \"msh3\" load \"tetgen\" load \"medit\"\n 2 \n 3 // Parameters\n 4 real hs  =  0.1; //mesh size on sphere\n 5 int[int] N  =  [20, 20, 20];\n 6 real [int,int] B  =  [[-1, 1], [-1, 1], [-1, 1]];\n 7 int [int,int] L  =  [[1, 2], [3, 4], [5, 6]];\n 8 \n 9 real x0  =  0.3, y0  =  0.4, z0  =  06;\n10 func f  =  sin(x*2*pi+x0)*sin(y*2*pi+y0)*sin(z*2*pi+z0);\n11 \n12 // Mesh\n13 bool buildTh  =  0;\n14 mesh3 Th;\n15 try { //a way to build one time the mesh or read it if the file exist\n16     Th  =  readmesh3(\"Th-hex-sph.mesh\");\n17 }\n18 catch (...){\n19     buildTh  =  1;\n20 }\n21 \n22 if (buildTh){\n23     include \"MeshSurface.idp\"\n24 \n25     // Surface Mesh\n26     mesh3 ThH  =  SurfaceHex(N, B, L, 1);\n27     mesh3 ThS  =  Sphere(0.5, hs, 7, 1);\n28 \n29     mesh3 ThHS  =  ThH + ThS;\n30 \n31     real voltet  =  (hs^3)/6.;\n32     real[int] domain  =  [0, 0, 0, 1, voltet, 0, 0, 0.7, 2, voltet];\n33     Th  =  tetg(ThHS, switch = \"pqaAAYYQ\", nbofregions = 2, regionlist = domain);\n34 \n35     savemesh(Th, \"Th-hex-sph.mesh\");\n36 }\n37 \n38 // Fespace\n39 fespace Ph(Th, P0);\n40 Ph reg  =  region;\n41 cout << \" centre  =  \" << reg(0,0,0) << endl;\n42 cout << \" exterieur  =  \" << reg(0,0,0.7) << endl;\n43 \n44 verbosity  =  50;\n45 fespace Vh(Th, P1, periodic = [[3, x, z], [4, x, z], [1, y, z], [2, y, z], [5, x, y], [6, x, y]]);\n46 verbosity  =  1;\n47 Vh uh,vh;\n48 \n49 // Macro\n50 macro Grad(u) [dx(u),dy(u),dz(u)] // EOM\n51 \n52 // Problem\n53 problem Poisson (uh, vh)\n54      =  int3d(Th, 1)(\n55         Grad(uh)'*Grad(vh)*100\n56     )\n57     + int3d(Th, 2)(\n58         Grad(uh)'*Grad(vh)*2\n59     )\n60     + int3d(Th)(\n61         vh*f\n62     )\n63     ;\n64 \n65 // Solve\n66 Poisson;\n67 \n68 // Plot\n69 plot(uh, wait = true, nbiso = 6);\n70 medit(\"uh\", Th, uh);\n\n\n\n\n\n\nFig. 142 View of the surface isovalue of periodic solution \\(uh\\)¶\n\n\n\n\n\nFig. 143 View a the cut of the solution \\(uh\\) with ffmedit¶\n\n\n\n\n\nPoisson Problems with mixed boundary condition¶\nHere we consider the Poisson equation with mixed boundary conditions:\nFor given functions \\(f\\) and \\(g\\), find \\(u\\) such that:\n\n\\[\\begin{split}\\begin{array}{rcll}\n    -\\Delta u & = & f & \\textrm{ in }\\Omega\\\\\n    u & = & g &\\textrm{ on }\\Gamma_D\\\\\n    \\p u/\\p n & = & 0 &\\textrm{ on }\\Gamma_N\n\\end{array}\\end{split}\\]\nwhere \\(\\Gamma_D\\) is a part of the boundary \\(\\Gamma\\) and \\(\\Gamma_N = \\Gamma\\setminus \\overline{\\Gamma_D}\\).\nThe solution \\(u\\) has the singularity at the points \\(\\{\\gamma_1,\\gamma_2\\} = \\overline{\\Gamma_D}\\cap\\overline{\\Gamma_N}\\).\nWhen \\(\\Omega = \\{(x,y);\\; -1<x<1,\\, 0<y<1\\}\\), \\(\\Gamma_N = \\{(x,y);\\; -1\\le x<0,\\, y = 0\\}\\), \\(\\Gamma_D = \\p \\Omega\\setminus \\Gamma_N\\), the singularity will appear at \\(\\gamma_1 = (0,0),\\, \\gamma_2(-1,0)\\), and \\(u\\) has the expression:\n\n\\[u = K_iu_S + u_R,\\, u_R\\in H^2(\\textrm{near }\\gamma_i),\\, i = 1,2\\]\nwith a constants \\(K_i\\).\nHere \\(u_S  =  r_j^{1/2}\\sin(\\theta_j/2)\\) by the local polar coordinate \\((r_j,\\theta_j\\) at \\(\\gamma_j\\) such that \\((r_1,\\theta_1) = (r,\\theta)\\).\nInstead of polar coordinate system \\((r,\\theta)\\), we use that \\(r\\)  =  sqrt (\\(x^2+y^2\\)) and \\(\\theta\\)  =  atan2 (\\(y,x\\)) in FreeFEM.\nAssume that \\(f = -2\\times 30(x^2+y^2)\\) and \\(g = u_e = 10(x^2+y^2)^{1/4}\\sin\\left([\\tan^{-1}(y/x)]/2\\right)+30(x^2y^2)\\), where \\(u_e\\)S is the exact solution.\n 1 // Parameters\n 2 func f  =  -2*30*(x^2+y^2); //given function\n 3 //the singular term of the solution is K*us (K: constant)\n 4 func us  =  sin(atan2(y,x)/2)*sqrt( sqrt(x^2+y^2) );\n 5 real K  =  10.;\n 6 func ue  =  K*us + 30*(x^2*y^2);\n 7 \n 8 // Mesh\n 9 border N(t = 0, 1){x = -1+t; y = 0; label = 1;};\n10 border D1(t = 0, 1){x = t; y = 0; label = 2;};\n11 border D2(t = 0, 1){x = 1; y = t; label = 2;};\n12 border D3(t = 0, 2){x = 1-t; y = 1; label = 2;};\n13 border D4(t = 0, 1){x = -1; y = 1-t; label = 2;};\n14 \n15 mesh T0h  =  buildmesh(N(10) + D1(10) + D2(10) + D3(20) + D4(10));\n16 plot(T0h, wait = true);\n17 \n18 // Fespace\n19 fespace V0h(T0h, P1);\n20 V0h u0, v0;\n21 \n22 //Problem\n23 solve Poisson0 (u0, v0)\n24      =  int2d(T0h)(\n25         dx(u0)*dx(v0)\n26         + dy(u0)*dy(v0)\n27     )\n28     - int2d(T0h)(\n29         f*v0\n30     )\n31     + on(2, u0 = ue)\n32     ;\n33 \n34 // Mesh adaptation by the singular term\n35 mesh Th  =  adaptmesh(T0h, us);\n36 for (int i  =  0; i < 5; i++)\n37 mesh Th  =  adaptmesh(Th, us);\n38 \n39 // Fespace\n40 fespace Vh(Th, P1);\n41 Vh u, v;\n42 \n43 // Problem\n44 solve Poisson (u, v)\n45      =  int2d(Th)(\n46         dx(u)*dx(v)\n47         + dy(u)*dy(v)\n48     )\n49     - int2d(Th)(\n50         f*v\n51     )\n52     + on(2, u = ue)\n53     ;\n54 \n55 // Plot\n56 plot(Th);\n57 plot(u, wait = true);\n58 \n59 // Error in H1 norm\n60 Vh uue  =  ue;\n61 real H1e  =  sqrt( int2d(Th)(dx(uue)^2 + dy(uue)^2 + uue^2) );\n62 Vh err0  =  u0 - ue;\n63 Vh err  =  u - ue;\n64 Vh H1err0  =  int2d(Th)(dx(err0)^2 + dy(err0)^2 + err0^2);\n65 Vh H1err  =  int2d(Th)(dx(err)^2 + dy(err)^2 + err^2);\n66 cout << \"Relative error in first mesh  =  \"<< int2d(Th)(H1err0)/H1e << endl;\n67 cout << \"Relative error in adaptive mesh  =  \"<< int2d(Th)(H1err)/H1e << endl;\n\n\nFrom line 35 to 37, mesh adaptations are done using the base of singular term.\nIn line 61, H1e  =  \\(|u_e|_{1,\\Omega}\\) is calculated.\nIn lines 64 and 65, the relative errors are calculated, that is:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\|u^0_h-u_e\\|_{1,\\Omega}/H1e& = &0.120421\\\\\n    \\|u^a_h-u_e\\|_{1,\\Omega}/H1e& = &0.0150581\n\\end{array}\\end{split}\\]\nwhere \\(u^0_h\\) is the numerical solution in T0h and \\(u^a_h\\) is u in this program.\n\n\nPoisson with mixed finite element¶\nHere we consider the Poisson equation with mixed boundary value problems:\nFor given functions \\(f\\) , \\(g_d\\), \\(g_n\\), find \\(p\\) such that\n\n\\[\\begin{split}\\begin{array}{rcll}\n    -\\Delta p & = & 1 & \\textrm{ in }\\Omega\\\\\n    p & = & g_d & \\textrm{ on }\\Gamma_D\\\\\n    \\p p/\\p n & = & g_n & \\textrm{ on }\\Gamma_N\n\\end{array}\\end{split}\\]\nwhere \\(\\Gamma_D\\) is a part of the boundary \\(\\Gamma\\) and \\(\\Gamma_N = \\Gamma\\setminus \\overline{\\Gamma_D}\\).\nThe mixed formulation is: find \\(p\\) and \\(\\mathbf{u}\\) such that:\n\n\\[\\begin{split}\\begin{array}{rcll}\n    \\nabla p + \\mathbf{u} & = & \\mathbf{0} & \\textrm{ in }\\Omega\\\\\n    \\nabla. \\mathbf{u} & = & f & \\textrm{ in }\\Omega\\\\\n    p & = & g_d & \\textrm{ on }\\Gamma_D\\\\\n    \\p u. n & = & \\mathbf{g}_n.n & \\textrm{ on }\\Gamma_N\n\\end{array}\\end{split}\\]\nwhere \\(\\mathbf{g}_n\\) is a vector such that \\(\\mathbf{g}_n.n  =  g_n\\).\nThe variational formulation is:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\forall \\mathbf{v} \\in \\mathbb{V}_0: & \\int_\\Omega p \\nabla.v + \\mathbf{v} \\mathbf{v} & =  \\int_{\\Gamma_d} g_d \\mathbf{v}.n\\\\\n    \\forall {q} \\in \\mathbb{P}: & \\int_\\Omega q \\nabla.u & =  \\int_\\Omega q f\\nonumber\\\\\n    & \\p u. n & =  \\mathbf{g}_n.n \\quad \\textrm{on }\\Gamma_N\n\\end{array}\\end{split}\\]\nwhere the functional space are:\n\n\\[\\mathbb{P} =  L^2(\\Omega),\n\\qquad\\mathbb{V} =  H(div) = \\{\\mathbf{v}\\in L^2(\\Omega)^2,\\nabla.\\mathbf{v}\\in L^2(\\Omega)\\}\\]\nand:\n\n\\[\\mathbb{V}_0  =  \\{\\mathbf{v}\\in \\mathbb{V};\\quad\\mathbf{v}. n  =  0 \\quad\\mathrm{on }\\;\\;\\Gamma_N\\}\\]\nTo write the FreeFEM example, we have just to choose the finites elements spaces.\nHere \\(\\mathbb{V}\\) space is discretize with Raviart-Thomas finite element RT0 and \\(\\mathbb{P}\\) is discretize by constant finite element P0.\nExample 9.10 LaplaceRT.edp\n 1 // Parameters\n 2 func gd  =  1.;\n 3 func g1n  =  1.;\n 4 func g2n  =  1.;\n 5 \n 6 // Mesh\n 7 mesh Th  =  square(10, 10);\n 8 \n 9 // Fespace\n10 fespace Vh(Th, RT0);\n11 Vh [u1, u2];\n12 Vh [v1, v2];\n13 \n14 fespace Ph(Th, P0);\n15 Ph p, q;\n16 \n17 // Problem\n18 problem laplaceMixte ([u1, u2, p], [v1, v2, q], solver = GMRES, eps = 1.0e-10, tgv = 1e30, dimKrylov = 150)\n19      =  int2d(Th)(\n20         p*q*1e-15 //this term is here to be sure\n21         // that all sub matrix are inversible (LU requirement)\n22         + u1*v1\n23         + u2*v2\n24         + p*(dx(v1)+dy(v2))\n25         + (dx(u1)+dy(u2))*q\n26     )\n27     + int2d(Th) (\n28         q\n29     )\n30     - int1d(Th, 1, 2, 3)(\n31         gd*(v1*N.x +v2*N.y)\n32     )\n33     + on(4, u1 = g1n, u2 = g2n)\n34     ;\n35 \n36 // Solve\n37 laplaceMixte;\n38 \n39 // Plot\n40 plot([u1, u2], coef = 0.1, wait = true, value = true);\n41 plot(p, fill = 1, wait = true, value = true);\n\n\n\n\nMetric Adaptation and residual error indicator¶\nWe do metric mesh adaption and compute the classical residual error indicator \\(\\eta_{T}\\) on the element \\(T\\) for the Poisson problem.\nFirst, we solve the same problem as in a previous example.\n 1 // Parameters\n 2 real[int] viso(21);\n 3 for (int i  =  0; i < viso.n; i++)\n 4 viso[i]  =  10.^(+(i-16.)/2.);\n 5 real error  =  0.01;\n 6 func f  =  (x-y);\n 7 \n 8 // Mesh\n 9 border ba(t = 0, 1.0){x = t; y = 0; label = 1;}\n10 border bb(t = 0, 0.5){x = 1; y = t; label = 2;}\n11 border bc(t = 0, 0.5){x = 1-t; y = 0.5; label = 3;}\n12 border bd(t = 0.5, 1){x = 0.5; y = t; label = 4;}\n13 border be(t = 0.5, 1){x = 1-t; y = 1; label = 5;}\n14 border bf(t = 0.0, 1){x = 0; y = 1-t; label = 6;}\n15 mesh Th  =  buildmesh(ba(6) + bb(4) + bc(4) + bd(4) + be(4) + bf(6));\n16 \n17 // Fespace\n18 fespace Vh(Th, P2);\n19 Vh u, v;\n20 \n21 fespace Nh(Th, P0);\n22 Nh rho;\n23 \n24 // Problem\n25 problem Probem1 (u, v, solver = CG, eps = 1.0e-6)\n26      =  int2d(Th, qforder = 5)(\n27         u*v*1.0e-10\n28         + dx(u)*dx(v)\n29         + dy(u)*dy(v)\n30     )\n31     + int2d(Th, qforder = 5)(\n32         - f*v\n33     )\n34     ;\n\n\nNow, the local error indicator \\(\\eta_{T}\\) is:\n\n\\[\\eta_{T}  = \\left( h_{T}^{2} || f + \\Delta u_{{h}} ||_{L^{2}(T)}^{2} +\\sum_{e\\in \\mathcal{E}_{K}} h_{e} \\,||\\, [ \\frac{\\p u_{h}}{\\p n_{k}}] \\,||^{2}_{L^{2}(e)} \\right)^{\\frac{1}{2}}\\]\nwhere \\(h_{T}\\) is the longest edge of \\(T\\), \\({\\cal E}_T\\) is the set of \\(T\\) edge not on \\(\\Gamma = \\p \\Omega\\), \\(n_{T}\\) is the outside unit normal to \\(K\\), \\(h_{e}\\) is the length of edge \\(e\\), \\([ g ]\\) is the jump of the function \\(g\\) across edge (left value minus right value).\nOf course, we can use a variational form to compute \\(\\eta_{T}^{2}\\), with test function constant function in each triangle.\n 1 // Error\n 2 varf indicator2 (uu, chiK)\n 3      =  intalledges(Th)(\n 4         chiK*lenEdge*square(jump(N.x*dx(u) + N.y*dy(u)))\n 5     )\n 6     + int2d(Th)(\n 7         chiK*square(hTriangle*(f + dxx(u) + dyy(u)))\n 8     )\n 9     ;\n10 \n11 // Mesh adaptation loop\n12 for (int i  =  0; i < 4; i++){\n13     // Solve\n14     Probem1;\n15     cout << u[].min << \" \" << u[].max << endl;\n16     plot(u, wait = true);\n17 \n18     // Error\n19     rho[]  =  indicator2(0, Nh);\n20     rho  =  sqrt(rho);\n21     cout << \"rho  =  min \" << rho[].min << \" max = \" << rho[].max << endl;\n22     plot(rho, fill = true, wait = true, cmm = \"indicator density\", value = true, viso = viso, nbiso = viso.n);\n23 \n24     // Mesh adaptation\n25     plot(Th, wait = true, cmm = \"Mesh (before adaptation)\");\n26     Th  =  adaptmesh(Th, [dx(u), dy(u)], err = error, anisomax = 1);\n27     plot(Th, wait = true, cmm = \"Mesh (after adaptation)\");\n28     u  =  u;\n29     rho  =  rho;\n30     error  =  error/2;\n31 }\n\n\nIf the method is correct, we expect to look the graphics by an almost constant function \\(\\eta\\) on your computer as in Fig. 144 and Fig. 145.\n\n\n\n\nFig. 144 Density of the error indicator with isotropic \\(P_{2}\\) metric¶\n\n\n\n\n\nFig. 145 Density of the error indicator with isotropic \\(P_{2}\\) metric¶\n\n\n\n\nAdaptation using residual error indicator¶\nIn the previous example we compute the error indicator, now we use it, to adapt the mesh.\nThe new mesh size is given by the following formulae:\n\n\\[h_{n+1}(x)  =  \\frac{h_{n}(x)}{f_{n}(\\eta_K(x))}\\]\nwhere \\(\\eta_n(x)\\) is the level of error at point \\(x\\) given by the local error indicator, \\(h_n\\) is the previous “mesh size” field, and \\(f_n\\) is a user function define by \\(f_n  =  min(3,max(1/3,\\eta_n / \\eta_n^* ))\\) where \\(\\eta_n^*  =  mean(\\eta_n) c\\), and \\(c\\) is an user coefficient generally close to one.\nFirst a macro MeshSizecomputation is defined to get a \\(P_1\\) mesh size as the average of edge length.\n 1 // macro the get the current mesh size parameter\n 2 // in:\n 3 // Th the mesh\n 4 // Vh P1 fespace on Th\n 5 // out :\n 6 // h: the Vh finite element finite set to the current mesh size\n 7 macro MeshSizecomputation (Th, Vh, h)\n 8 {\n 9     real[int] count(Th.nv);\n10     /*mesh size (lenEdge  =  integral(e) 1 ds)*/\n11     varf vmeshsizen (u, v)  =  intalledges(Th, qfnbpE = 1)(v);\n12     /*number of edges per vertex*/\n13     varf vedgecount (u, v)  =  intalledges(Th, qfnbpE = 1)(v/lenEdge);\n14     /*mesh size*/\n15     count  =  vedgecount(0, Vh);\n16     h[]  =  0.;\n17     h[]  =  vmeshsizen(0, Vh);\n18     cout << \"count min  =  \" << count.min << \" max  =  \" << count.max << endl;\n19     h[]  =  h[]./count;\n20     cout << \"-- bound meshsize  =  \" << h[].min << \" \" << h[].max << endl;\n21 } //\n\n\nA second macro to re-mesh according to the new mesh size.\n 1 // macro to remesh according the de residual indicator\n 2 // in:\n 3 // Th the mesh\n 4 // Ph P0 fespace on Th\n 5 // Vh P1 fespace on Th\n 6 // vindicator the varf to evaluate the indicator\n 7 // coef on etameam\n 8 macro ReMeshIndicator (Th, Ph, Vh, vindicator, coef)\n 9 {\n10     Vh h = 0;\n11     /*evaluate the mesh size*/\n12     MeshSizecomputation(Th, Vh, h);\n13     Ph etak;\n14     etak[]  =  vindicator(0, Ph);\n15     etak[]  =  sqrt(etak[]);\n16     real etastar =  coef*(etak[].sum/etak[].n);\n17     cout << \"etastar  =  \" << etastar << \" sum  =  \" << etak[].sum << \" \" << endl;\n18 \n19     /*etaK is discontinous*/\n20     /*we use P1 L2 projection with mass lumping*/\n21     Vh fn, sigma;\n22     varf veta(unused, v)  =  int2d(Th)(etak*v);\n23     varf vun(unused, v)  =  int2d(Th)(1*v);\n24     fn[]  =  veta(0, Vh);\n25     sigma[]  =  vun(0, Vh);\n26     fn[]  =  fn[]./ sigma[];\n27     fn  =  max(min(fn/etastar,3.),0.3333);\n28 \n29     /*new mesh size*/\n30     h  =  h / fn;\n31     /*build the mesh*/\n32     Th  =  adaptmesh(Th, IsMetric = 1, h, splitpbedge = 1, nbvx = 10000);\n33 } //\n\n\n 1 // Parameters\n 2 real hinit  =  0.2; //initial mesh size\n 3 func f = (x-y);\n 4 \n 5 // Mesh\n 6 border ba(t = 0, 1.0){x = t; y = 0; label = 1;}\n 7 border bb(t = 0, 0.5){x = 1; y = t; label = 2;}\n 8 border bc(t = 0, 0.5){x = 1-t; y = 0.5; label = 3;}\n 9 border bd(t = 0.5, 1){x = 0.5; y = t; label = 4;}\n10 border be(t = 0.5, 1){x = 1-t; y = 1; label = 5;}\n11 border bf(t = 0.0, 1){x = 0; y = 1-t; label = 6;}\n12 mesh Th  =  buildmesh(ba(6) + bb(4) + bc(4) + bd(4) + be(4) + bf(6));\n13 \n14 // Fespace\n15 fespace Vh(Th, P1); //for the mesh size and solution\n16 Vh h  =  hinit; //the FE function for the mesh size\n17 Vh u, v;\n18 \n19 fespace Ph(Th, P0); //for the error indicator\n20 \n21 //Build a mesh with the given mesh size hinit\n22 Th  =  adaptmesh(Th, h, IsMetric = 1, splitpbedge = 1, nbvx = 10000);\n23 plot(Th, wait = 1);\n24 \n25 // Problem\n26 problem Poisson (u, v)\n27      =  int2d(Th, qforder = 5)(\n28         u*v*1.0e-10\n29         + dx(u)*dx(v)\n30         + dy(u)*dy(v)\n31     )\n32     - int2d(Th, qforder = 5)(\n33         f*v\n34     )\n35     ;\n36 \n37 varf indicator2 (unused, chiK)\n38      =  intalledges(Th)(\n39         chiK*lenEdge*square(jump(N.x*dx(u) + N.y*dy(u)))\n40     )\n41     + int2d(Th)(\n42         chiK*square(hTriangle*(f + dxx(u) + dyy(u)))\n43     )\n44     ;\n45 \n46 // Mesh adaptation loop\n47 for (int i  =  0; i < 10; i++){\n48     u  =  u;\n49 \n50     // Solve\n51     Poisson;\n52     plot(Th, u, wait = true);\n53 \n54     real cc  =  0.8;\n55     if (i > 5) cc = 1;\n56     ReMeshIndicator(Th, Ph, Vh, indicator2, cc);\n57     plot(Th, wait = true);\n58 }\n\n\n\n\n\n\nFig. 146 The error indicator with isotropic \\(P_{1}\\)¶\n\n\n\n\n\nFig. 147 The mesh and isovalue of the solution¶\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Mathematical Models\n\t\t\tNext topic: Elasticity \n\t\t\n\t","l":"models/static-problems.html"},"49":{"t":"Transmission problem","p":"\n\t\t\n   \nTransmission problem¶\nConsider an elastic plate whose displacement change vertically, which is made up of three plates of different materials, welded on each other.\nLet \\(\\Omega_i\\), \\(i = 1,2,3\\) be the domain occupied by \\(i\\)-th material with tension \\(\\mu_i\\) (see Soap film).\nThe computational domain \\(\\Omega\\) is the interior of \\(\\overline{\\Omega_1}\\cup \\overline{\\Omega_2}\\cup \\overline{\\Omega_3}\\).\nThe vertical displacement \\(u(x,y)\\) is obtained from:\n\n(59)¶\\[\\begin{split}\\begin{array}{rcll}\n    -\\mu_i\\Delta u & = & f & \\textrm{ in }\\Omega_i\\\\\n    \\mu_i\\p_n u|_{\\Gamma_{i}} & = & -\\mu_j\\p_n u|_{\\Gamma_{j}} & \\textrm{ on }\\overline{\\Omega_{i}}\\cap\\overline{\\Omega_{j}} \\textrm{ if }1\\le i< j\\le 3\n\\end{array}\\end{split}\\]\nwhere \\(\\p_n u|_{\\Gamma_{i}}\\) denotes the value of the normal derivative \\(\\p_n u\\) on the boundary \\(\\Gamma_i\\) of the domain \\(\\Omega_i\\).\nBy introducing the characteristic function \\(\\chi_i\\) of \\(\\Omega_i\\), that is:\n\n\\[\\chi_i(x) = 1\\ \\textrm{ if }x\\in\\Omega_i;\\\n\\chi_i(x) = 0\\ \\textrm{ if }x\\not\\in\\Omega_i\\]\nwe can easily rewrite (59) to the weak form.\nHere we assume that \\(u = 0\\) on \\(\\Gamma = \\p\\Omega\\).\nTransmission problem: For a given function \\(f\\), find \\(u\\) such that:\n\n\\[a(u,v)  =  \\ell(f,v) \\textrm{ for all }v\\in H^1_0(\\Omega)\\]\n\n\\[\\begin{split}\\begin{array}{rcl}\n    a(u,v) & = & \\int_{\\Omega}\\mu \\nabla u\\cdot \\nabla v\\nonumber\\\\\n    \\ell(f,v) & = & \\int_{\\Omega}fv\\nonumber\n\\end{array}\\end{split}\\]\nwhere \\(\\mu = \\mu_1\\chi_1+\\mu_2\\chi_2+\\mu_3\\chi_3\\).\nHere we notice that \\(\\mu\\) become the discontinuous function.\nThis example explains the definition and manipulation of region, i.e. sub-domains of the whole domain.\nConsider this L-shaped domain with 3 diagonals as internal boundaries, defining 4 sub-domains:\n 1 // Mesh\n 2 border a(t = 0, 1){x = t; y = 0;};\n 3 border b(t = 0, 0.5){x = 1; y = t;};\n 4 border c(t = 0, 0.5){x = 1-t; y = 0.5;};\n 5 border d(t = 0.5, 1){x = 0.5; y = t;};\n 6 border e(t = 0.5, 1){x = 1-t; y = 1;};\n 7 border f(t = 0, 1){x = 0; y = 1-t;};\n 8 border i1(t = 0, 0.5){x = t; y = 1-t;};\n 9 border i2(t = 0, 0.5){x = t; y = t;};\n10 border i3(t = 0, 0.5){x = 1-t; y = t;};\n11 mesh th  =  buildmesh(a(6) + b(4) + c(4) +d(4) + e(4)\n12     + f(6) + i1(6) + i2(6) + i3(6));\n13 \n14 // Fespace\n15 fespace Ph(th, P0); //constant discontinuous functions / element\n16 Ph reg = region; //defined the P0 function associated to region number\n17 \n18 // Plot\n19 plot(reg, fill = true, wait = true, value = true);\n\n\n\n\n\nFig. 174 The function reg¶\n\n\nregion is a keyword of FreeFEM which is in fact a variable depending of the current position (is not a function today, use Ph reg = region; to set a function).\nThis variable value returned is the number of the sub-domain of the current position.\nThis number is defined by buildmesh which scans while building the mesh all its connected component.\nSo to get the number of a region containing a particular point one does:\n1 // Characteristic function\n2 int nupper  =  reg(0.4, 0.9); //get the region number of point (0.4,0.9)\n3 int nlower  =  reg(0.9, 0.1); //get the region number of point (0.4,0.1)\n4 cout << \"nlower  =  \" <<  nlower << \", nupper  =  \" << nupper<< endl;\n5 Ph nu  =  1 + 5*(region =  = nlower) + 10*(region =  = nupper);\n6 \n7 // Plot\n8 plot(nu, fill = true,wait = true);\n\n\n\n\n\nFig. 175 The function nu¶\n\n\nThis is particularly useful to define discontinuous functions such as might occur when one part of the domain is copper and the other one is iron, for example.\nWe this in mind we proceed to solve a Laplace equation with discontinuous coefficients (\\(\\nu\\) is 1, 6 and 11 below).\n 1 // Problem\n 2 solve lap (u, v)\n 3      =  int2d(th)(\n 4           nu*(dx(u)*dx(v) + dy(u)*dy(v))\n 5     )\n 6     + int2d(th)(\n 7         - 1*v\n 8     )\n 9     + on(a, b, c, d, e, f, u = 0)\n10     ;\n11 \n12 // Plot\n13 plot(u);\n\n\n\n\n\nFig. 176 The isovalue of the solution \\(u\\)¶\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Fluid-structure coupled problem\n\t\t\tNext topic: Free boundary problems \n\t\t\n\t","l":"models/transmission-problem.html"},"50":{"t":"Variational Inequality","p":"\n\t\t\n   \nVariational Inequality¶\nWe present, a classical example of variational inequality.\nLet us denote \\(\\mathcal{C}  =  \\{ u\\in H^1_0(\\Omega), u \\le g \\}\\)\nThe problem is:\n\n\\[u  =  arg \\min_{u\\in \\mathcal{C}} J(u)  =  \\frac{1}{2} \\int_\\Omega \\nabla u . \\nabla u - \\int_\\Omega f u\\]\nwhere \\(f\\) and \\(g\\) are given function.\nThe solution is a projection on the convex \\(\\mathcal{C}\\) of \\(f^\\star\\) for the scalar product \\(((v,w))  =  \\int_\\Omega \\nabla v . \\nabla w\\) of \\(H^1_0(\\Omega)\\) where \\(f^\\star\\) is solution of:\n\n\\[(f^\\star, v )  =  \\int_{\\Omega}{f v}, \\forall v \\in H^1_0(`\\Omega)\\]\nThe projection on a convex satisfy clearly \\(\\forall v \\in \\mathcal{C}, \\quad (( u -v , u - \\tilde{f} )) \\leq 0\\), and after expanding, we get the classical inequality:\n\n\\[\\forall v \\in \\mathcal{C}, \\quad \\int_\\Omega \\nabla(u -v) \\nabla u \\leq \\int_\\Omega (u-v) f\\]\nWe can also rewrite the problem as a saddle point problem:\nFind \\(\\lambda, u\\) such that:\n\n\\[\\max_{\\lambda\\in L^2(\\Omega), \\lambda\\geq 0} \\min_{u\\in H^1_0(\\Omega)} \\mathcal{L}(u,\\lambda)  =  \\frac{1}{2} \\int_\\Omega \\nabla u . \\nabla u - \\int_\\Omega f u + \\int_{\\Omega} \\lambda (u-g)^+\\]\nwhere \\(((u-g)^+  =  max(0,u-g)\\).\nThis saddle point problem is equivalent to find \\(u, \\lambda\\) such that:\n\n\\[\\left\\{\n\\begin{array}{cc}\n    \\displaystyle \\int_\\Omega \\nabla u . \\nabla v + \\lambda v^+ \\,d\\omega =  \\int_\\Omega f u , &\\forall v \\in H^1_0(\\Omega) \\cr\n    \\displaystyle \\int_\\Omega \\mu (u-g)^+  =  0 , & \\forall \\mu \\in L^2(\\Omega) , \\mu \\geq 0, \\lambda \\geq 0,\n\\end{array}\\right.\\]\nAn algorithm to solve the previous problem is:\n\nk = 0, and choose \\(\\lambda_0\\) belong \\(H^{-1}(\\Omega)\\)\nLoop on \\(k  =  0, .....\\)\n\nset \\(\\mathcal{I}_{k}  =  \\{ x \\in \\Omega / \\lambda_{k} + c * ( u_{k+1} - g) \\leq 0 \\}\\)\n\\(V_{g,k+1}  =  \\{ v\\in H^1_0(\\Omega) / v  =  g\\) on \\({I}_{k} \\}\\),\n\\(V_{0,k+1}  =  \\{ v\\in H^1_0(\\Omega) / v  =  0\\) on \\({I}_{k} \\}\\),\nFind \\(u_{k+1} \\in V_{g,k+1}\\) and \\(\\lambda_{k+1} \\in H^{-1}(\\Omega)\\) such that\n\n\\[\\left\\{\\begin{array}{cc}\n   \\displaystyle \\int_\\Omega \\nabla u_{k+1}. \\nabla v_{k+1} \\,d\\omega  =  \\int_\\Omega f v_{k+1} , &\\forall v_{k+1} \\in V_{0,k+1} \\cr\n   \\displaystyle <\\lambda_{k+1},v>  =  \\int_\\Omega \\nabla u_{k+1}. \\nabla v - f v \\,d\\omega &\n\\end{array}\\right.\\]\nwhere \\(<,>\\) is the duality bracket between \\(H^{1}_0(\\Omega)\\) and \\(H^{-1}(\\Omega)\\), and \\(c\\) is a penalty constant (large enough).\n\n\n\n\nYou can find all the mathematics about this algorithm in [ITO2003] [HINTERMULLER2002].\nNow how to do that in FreeFEM? The full example is:\n\nTip\nVariational inequality\n 1 load \"medit\"\n 2 \n 3 // Parameters\n 4 real eps  =  1e-5;\n 5 real c  =  1000; //penalty parameter of the algoritm\n 6 real tgv  =  1e30; //a huge value for exact penalization\n 7 func f  =  1; //right hand side function\n 8 func fd  =  0; //Dirichlet boundary condition function\n 9 \n10 // Mesh\n11 mesh Th  =  square(20, 20);\n12 \n13 // Fespace\n14 fespace Vh(Th, P1);\n15 int n  =  Vh.ndof; //number of degree of freedom\n16 Vh uh, uhp; //u^n+1 and u^n\n17 Vh Ik; //to define the set where the containt is reached.\n18 Vh g  =  0.05; //discret function g\n19 Vh lambda  =  0;\n20 \n21 // Problem\n22 varf a (uh, vh)\n23      =  int2d(Th)(\n24           dx(uh)*dx(vh)\n25         + dy(uh)*dy(vh)\n26     )\n27     - int2d(Th)(\n28           f*vh\n29     )\n30     + on(1, 2, 3, 4, uh = fd)\n31     ;\n32 \n33 //the mass Matrix construction\n34 varf vM (uh, vh)  =  int2d(Th)(uh*vh);\n35 \n36 //two versions of the matrix of the problem\n37 matrix A  =  a(Vh, Vh, tgv = tgv, solver = CG); //one changing\n38 matrix AA  =  a(Vh, Vh, solver = CG); //one for computing residual\n39 \n40 matrix M  =  vM(Vh, Vh); //to do a fast computing of L^2 norm : sqrt(u'*(w = M*u))\n41 \n42 real[int] Aiin(n);\n43 real[int] Aii  =  A.diag; //get the diagonal of the matrix\n44 real[int] rhs  =  a(0, Vh, tgv = tgv);\n45 \n46 // Initialization\n47 Ik  =  0;\n48 uhp  =  -tgv;\n49 \n50 // Loop\n51 for(int iter  =  0; iter < 100; ++iter){\n52     // Update\n53     real[int] b  =  rhs; //get a copy of the Right hand side\n54     real[int] Ak(n); //the complementary of Ik ( !Ik  =  (Ik-1))\n55     Ak  =  1.; Ak - =  Ik[];\n56     //adding new locking condition on b and on the diagonal if (Ik  =  = 1 )\n57     b  =  Ik[] .* g[]; b * =  tgv; b - =  Ak .* rhs;\n58     Aiin  =  Ik[] * tgv; Aiin + =  Ak .* Aii; //set Aii =  tgv i in Ik\n59     A.diag  =  Aiin; //set the matrix diagonal\n60     set(A, solver = CG); //important to change preconditioning for solving\n61 \n62     // Solve\n63     uh[]  =  A^-1* b; //solve the problem with more locking condition\n64 \n65     // Residual\n66     lambda[]  =  AA * uh[]; //compute the residual (fast with matrix)\n67     lambda[] + =  rhs; //remark rhs  =  -\\int f v\n68 \n69     Ik  =  (lambda + c*( g- uh)) < 0.; //the new locking value\n70 \n71     // Plot\n72     plot(Ik, wait = true, cmm = \" lock set \", value = true, fill = true);\n73     plot(uh, wait = true, cmm = \"uh\");\n74 \n75     // Error\n76     //trick to compute L^2 norm of the variation (fast method)\n77     real[int] diff(n), Mdiff(n);\n78     diff  =  uh[] - uhp[];\n79     Mdiff  =  M*diff;\n80     real err  =  sqrt(Mdiff'*diff);\n81     cout << \"|| u_{k = 1} - u_{k} ||_2  =  \" << err << endl;\n82 \n83     // Stop test\n84     if(err < eps) break;\n85 \n86     // Update\n87     uhp[]  =  uh[];\n88 }\n89 \n90 // Plot\n91 medit(\"uh\", Th, uh);\n\n\n\nNote\nAs you can see on this example, some vector, or matrix operator are not implemented so a way is to skip the expression and we use operator + = ,  - =  to merge the result.\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Navier-Stokes equations\n\t\t\tNext topic: Domain decomposition \n\t\t\n\t","l":"models/variational-inequality.html"},"51":{"t":"Whispering gallery modes","p":"\n\t\t\n   \nWhispering gallery modes¶\nAuthor: I. S. Grudinin\nIn whispering gallery mode (WGM) resonators, which are typically spheres or disks, electromagnetic field is trapped by total internal reflections from the boundary.\nModes of such resonators are distinguished by compact volume and record high quality factors (Q) in a broad range of frequencies.\nModern applications of such resonators include microwave and optical cavities for atomic clocks, cavity optomechanics, nonlinear and quantum optics.\nAnalytical solutions for WG modes are only available for a limited number of idealized geometries, such as sphere or ellipsoid.\nSince resonator dimensions are typically much larger than optical wavelength, direct application of numerical 3D finite difference time domain (FDTD) or finite element methods (FEM) is not practical.\nIt’s possible to solve the vectorial wave equation by reducing it to a two dimensional case by taking axial symmetry into account.\nSuch reduction leads to a system of 3 equations to be solved in a 2D “\\(\\rho-z\\)” section of a resonator.\nPlease refer to [OXBORROW2007] for a detailed derivation and to [GRUDININ2012] for an example of using FreeFEM to compute WGMs.\n\nWave equation for the WGMs¶\nSince electric field is discontinuous on the surface of a dielectric and magnetic field is typically not, we derive our equations for the magnetic field.\nThe electric field can be easily derived at a later stage from \\(\\vec{E} = \\frac{i}{\\omega\\epsilon_0}\\hat{\\epsilon}^{-1}\\nabla\\times\\vec{H}\\).\nFollowing a standard procedure starting with Maxwell equations we derive a wave equation in a single-axis anisotropic medium such as an optical crystal:\n\n(60)¶\\[\\nabla\\times\\left(\\hat{\\epsilon}^{-1}\\nabla\\times\\vec{H}\\right)-k_0^2\\vec{H}-\\alpha\\nabla\\left(\\nabla\\cdot\\vec{H}\\right) = 0\\]\nHere \\(k_0 = \\omega/c\\) is the wavenumber, \\(\\alpha\\) is the penalty term added to fight spurious FEM solutions.\nFor anisotropic single-axis medium with \\(\\partial\\hat{\\epsilon}/\\partial\\phi = 0\\) in cylindrical system of coordinates we have:\n\n\\[\\begin{split}\\hat{\\epsilon} = \\begin{pmatrix} \\epsilon_{\\rho} & 0 & 0 \\\\ 0 & \\epsilon_{\\rho} & 0 \\\\ 0 & 0 & \\epsilon_z \\end{pmatrix}. \\nonumber\\end{split}\\]\nWe now assume axial symmetry of our electromagnetic fields and insert an imaginary unity in front of the \\(H_{\\phi}\\) to allow all field components to be real numbers and also to account for the phase shift of this component \\(\\vec{H}(\\rho,\\phi,z) = \\left\\{H_{\\rho}(\\rho,z),iH_{\\phi}(\\rho,z),H_z(\\rho,z)\\right\\}\\times e^{im\\phi}\\).\nWe write the wave equation (60) explicitly in cylindrical coordinates, thus obtaining a set of three differential equations for the domain \\(\\Omega\\) given by the resonator’s cross section and some space outside:\n\n(61)¶\\[\\begin{split}\\begin{array}{rcl}\n    A_1\\{{H}_{\\rho}^t,{H}_{\\phi}^t,{H}_{z}^t\\}& = &0\\\\ \\nonumber\n    A_2\\{{H}_{\\rho}^t,{H}_{\\phi}^t,{H}_{z}^t\\}& = &0\\\\ \\nonumber\n    A_3\\{{H}_{\\rho}^t,{H}_{\\phi}^t,{H}_{z}^t\\}& = &0\n\\end{array}\\end{split}\\]\nThe numerical solutions of these equations and boundary conditions can be found with FreeFEM if we write the system in the weak, or integral form.\n\n\nWeak formulation¶\nIn general, to obtain the integral or “weak” statements equivalent to system (61) and boundary conditions we form a scalar dot product between an arbitrary magnetic field test function \\(\\mathbf{H}^t = \\{{H}_{\\rho}^t,{H}_{\\phi}^t,{H}_{z}^t\\}\\) and the components of our vectorial equation \\(A_1,A_2,A_3\\), and integrate over the resonator’s cross section domain \\(\\Omega\\) (and its boundary for the boundary conditions):\n\n\\[\\int\\limits_{\\Omega}(H^t_{\\rho}A_1+H^t_{\\phi}A_2+H^t_{z}A_3)d\\Omega\\]\nWe can reduce the order of partial derivatives in this integral by using the Green’s formula for integration by parts.\nFor example:\n\n\\[\\int\\limits_{\\Omega}H_z^t \\frac{\\partial^2 H_z}{\\partial \\rho^2 }d\\Omega = \n-\\int\\limits_{\\Omega}\\frac{\\partial H_z^t}{\\partial \\rho}\\frac{\\partial H_z}{\\partial \\rho }d\\Omega+\\oint H_z^t\\frac{\\partial H_z}{\\partial \\rho}n_{\\rho}d\\Gamma\\]\nThus converting equations (61) we obtain a large expression for the weak form.\n\n\nA dielectric sphere example with FreeFEM¶\nWe now compute the fundamental mode frequency for a fused silica sphere.\nThe sphere is 36 micrometer in diameter, the refractive index is 1.46, the boundary condition is the magnetic wall (which can actually be omitted as it holds automatically).\n  1 // Parameters\n  2 real radius  =  36; //approximate radius of the cavity\n  3 real yb  =  -10, yt  =  -yb; //window yb = bottom and yt = top coordinates\n  4 real xl  =  radius-5, xr  =  radius+3; //window xl = left and xr = right coordinates\n  5 real angle  =  asin((yt)/radius); //angle of the sphere segment to model in radians\n  6 int Nm  =  60; //number of mesh vertices per border\n  7 real ne  =  1.46; //n_e-extraordinary refractive index (root of permittivity parallel to z-axis, epara)\n  8 real no  =  1.46; //n_o-ordinary refractive index (root of permittivity orthogonal to z-axis, eorto)\n  9 real nm  =  1; //refractive index of surrounding medium (air)\n 10 \n 11 int nev  =  4; // number of eigen values to find\n 12 \n 13 int M  =  213; //azimuthal mode order ~ 2Pi*n*R/lambda\n 14 real alpha  =  1; //penalty term\n 15 \n 16 // Mesh\n 17 border W1l(t = 0, 1){x = xl+(radius*cos(angle)-xl)*(1-t); y = yt; label = 1;}\n 18 border W1r(t = 0, 1){x = xr-(xr-radius*cos(angle))*(t); y = yt; label = 1;}\n 19 border W2(t = 0, 1){x = xr; y = yb+(yt-yb)*t; label = 1;}\n 20 border W3l(t = 0, 1){x = xl+(radius*cos(angle)-xl)*(t); y = yb; label = 1;}\n 21 border W3r(t = 0, 1){x = xr-(xr-radius*cos(angle))*(1-t); y = yb; label = 1;}\n 22 border W4(t = 0, 1){x = xl; y = yt-(yt-yb)*t; label = 1;}\n 23 border S(t = 0, 1){x = radius*cos((t-0.5)*2*angle); y = radius*sin((t-0.5)*2*angle); label = 2;}\n 24 mesh Th  =  buildmesh(W1r(Nm/4) + W1l(Nm/4) + W4(Nm) + W3l(Nm/4) + W3r(Nm/4) + W2(Nm) + S(Nm));\n 25 plot(Th, WindowIndex = 0);\n 26 \n 27 // Fespace\n 28 fespace Ph(Th, P0);\n 29 Ph reg  =  region;\n 30 \n 31 int ncav  =  reg(xl+1, 0); // cavity\n 32 int nair  =  reg(xr-1, 0); //air\n 33 Ph eorto  =  no^2*(region =  = ncav) + nm^2*(region =  = nair); //subdomains for epsilon values inside and outside the resonators\n 34 Ph epara  =  ne^2*(region =  = ncav) + nm^2*(region =  = nair); //subdomains for epsilon values inside and outside the resonators\n 35 \n 36 //supplementary variables to store eigenvectors, defined on mesh Th with P2 elements - Largange quadratic.\n 37 fespace Supp(Th, P2);\n 38 Supp eHsqr;\n 39 \n 40 //3d vector FE space\n 41 fespace Vh(Th, [P2, P2, P2]);\n 42 Vh [Hr, Hphi, Hz], [vHr, vHphi, vHz]; //magnetic field components on Vh space and test functions vH\n 43 \n 44 // Macro\n 45 //boundary condition macros\n 46 macro EWall(Hr, Hphi, Hz) (\n 47       dy(Hr) - dx(Hz) + Hr*N.x + Hz*N.y\n 48     - epara*(Hz*M - dy(Hphi)*x)*N.y\n 49     + eorto*(Hphi - Hr*M+dx(Hphi)*x)*N.x) //\n 50 macro MWall(Hr, Hphi, Hz) (\n 51       Hphi + Hz*N.x - Hr*N.y\n 52     + epara*(Hz*M - dy(Hphi)*x)*N.x\n 53     + eorto*(Hphi - Hr*M+dx(Hphi)*x)*N.y ) //\n 54 \n 55 // Problem\n 56 real sigma  = (M/(ne*radius))^2+2; // value of the shift (k^2), where the modes will be found\n 57 varf b ([Hr, Hphi, Hz], [vHr, vHphi, vHz])\n 58      =  int2d(Th)(\n 59           x*(Hr*vHr+Hphi*vHphi+Hz*vHz)\n 60     )\n 61     ;\n 62 // OP  =  A - sigma B ; // the shifted matrix\n 63 varf op ([Hr, Hphi, Hz], [vHr, vHphi, vHz]) = \n 64     int2d(Th)(\n 65           (\n 66               (eorto*(vHphi*Hphi - M*(vHphi*Hr + Hphi*vHr) + M^2*vHr*Hr) + epara*M^2*vHz*Hz)/x //A/r\n 67             + eorto*(dx(vHphi)*(Hphi - M*Hr) + dx(Hphi)*(vHphi - M*vHr)) - epara*M*(vHz*dy(Hphi) + Hz*dy(vHphi)) //B\n 68             + x*(eorto*dx(vHphi)*dx(Hphi) + epara*((dx(vHz) - dy(vHr))*(dx(Hz) - dy(Hr)) + dy(vHphi)*dy(Hphi))) //C\n 69         )/(eorto*epara)\n 70         + alpha*(\n 71               (vHr*Hr - M*(vHphi*Hr + Hphi*vHr) + M^2*vHphi*Hphi)/x //D/r\n 72             + (dx(vHr) + dy(vHz))*(Hr - M*Hphi) + (vHr - M*vHphi)*(dx(Hr) + dy(Hz)) //E\n 73             + x*(dx(vHr) + dy(vHz))*(dx(Hr) + dy(Hz)) //F\n 74         )\n 75         -sigma*x*(vHr*Hr + vHphi*Hphi + vHz*Hz)\n 76     )\n 77     //electric wall boundary condition on the boundary of computation domain\n 78     +int1d(Th, 1)(\n 79           EWall(Hr, Hphi, Hz)*EWall(vHr, vHphi, vHz)\n 80     )\n 81     ;\n 82 //setting sparce matrices and assigning the solver UMFPACK to solve eigenvalue problem\n 83 matrix B  =  b(Vh, Vh, solver = UMFPACK);\n 84 matrix OP  =  op(Vh, Vh, solver = UMFPACK);\n 85 \n 86 // Solve\n 87 real[int] ev(nev); //to store the nev eigenvalue\n 88 Vh[int] [eHr, eHphi, eHz](nev); //to store the nev eigenvector\n 89 //calling ARPACK on sparce matrices with the assigned solver UMFPACK:\n 90 int k  =  EigenValue(OP, B, sym = true, sigma = sigma, value = ev, vector = eHr, tol = 1e-10, maxit = 0, ncv = 0);\n 91 \n 92 k  =  min(k, nev); //sometimes the number of converged eigen values\n 93                  //can be greater than nev\n 94 \n 95 //file to output mode values\n 96 ofstream f(\"modes.txt\");\n 97 //setting number of digits in the file output\n 98 int nold  =  f.precision(11);\n 99 \n100 // Plot & Save\n101 for (int i  =  0; i < k; i++){\n102     real lambda  =  2*pi/sqrt(ev[i]);\n103     eHsqr  =  (sqrt(eHr[i]^2 + eHphi[i]^2 + eHz[i]^2)); //intensity from magnetic field components\n104     plot(eHsqr, WindowIndex = i, value = 1, nbiso = 20,LabelColors = 1, aspectratio = 1, cmm = \"Mode \"+i+\", lambda = \"+lambda+\", F = \"+(299792.458/lambda));\n105     f << \"Mode \"<< i << \", ka = \" << sqrt(ev[i])*radius << endl;\n106 }\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Compressible Neo-Hookean materials\n\t\t\tNext topic: Examples \n\t\t\n\t","l":"models/whispering-gallery-modes.html"},"52":{"t":"I/O","p":"\n\t\t\n   \nI/O¶\nSee I/O example\nSee File stream example.\n\ncout¶\nStandard C++ output device (default: console).\n1 cout << \"Some text\" << endl;\n\n\n\n\ncin¶\nStandard C++ input device (default: keyboard).\n1 cin >> var;\n\n\n\n\nendl¶\nEnd of line.\n1 cout << \"Some text\" << endl;\n\n\n\n\nifstream¶\nOpen a file in read mode.\n1 ifstream file(\"file.txt\");\n\n\n\nNote\nA file is closed at the end of a block.\n\n\n\nofstream¶\nOpen a file in write mode.\n1 ofstream file(\"file.txt\");\n\n\n\nNote\nA file is closed at the end of a block.\n\n\n\nappend¶\nAppend data to an existing file.\n1 ofstream file(\"file.txt\", append);\n\n\n\n\nbinary¶\nWrite a file in binary.\n1 ofstream file(\"file.btxt\", binary);\n\n\n\n\nseekg¶\nSet the file position.\n1 file.seekg(Pos);\n\n\n\n\ntellg¶\nGet the file position.\n1 int Pos  =  file.tellg();\n\n\n\n\nflush¶\nFlush the buffer of the file.\n1 file.flush\n\n\n\n\ngetline¶\nGet the current line.\n1 string s;\n2 getline(file, s);\n\n\n\n\nOutput format¶\nIn the descriptions below, f is an output stream, for example cout or a ofstream.\nAll this methods, excepted the first, return a stream, so they can be chained:\n1 cout.scientific.showpos << 3 << endl;\n\n\n\nprecision¶\nSet the number of digits printed to the right of the decimal point.\nThis applies to all subsequent floating point numbers written to that output stream.\nHowever, this won’t make floating-point “integers” print with a decimal point.\nIt’s necessary to use fixed for that effect.\n1 int np  =  f.precision(n)\n\n\n\n\nscientific¶\nFormats floating-point numbers in scientific notation\n1 f.scientific\n\n\n\n\nfixed¶\nUsed fixed point notation for floating-point numbers.\nOpposite of scientific.\n1 f.fixed\n\n\n\n\nshowbase¶\nConverts insertions to an external form that can be read according to the C++ lexical conventions for integral constants.\nBy default, showbase is not set.\n1 f.showbase\n\n\n\n\nnoshowbase¶\nUnset showbase flags.\n1 f.noshowbase\n\n\n\n\nshowpos¶\nInserts a plus sign (+) into a decimal conversion of a positive integral value.\n1 f.showpos\n\n\n\n\nnoshowpos¶\nUnset showpos flags.\n1 f.noshowpos\n\n\n\n\ndefault¶\nReset all the previous flags to the default expect precision.\n1 f.default\n\n\n\n\nsetw¶\nBehaves as if member width were called with n as argument on the stream on which it is inserted as a manipulator (it can be inserted on output streams).\n1 f.setw(n)\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Loops\n\t\t\tNext topic: Functions \n\t\t\n\t","l":"references/IO.html"},"53":{"t":"External libraries","p":"\n\t\t\n   \nExternal libraries¶\n\naniso¶\n\nboundaniso¶\n\nTodo\ntodo\n\n\n\n\nBEC¶\n\nBECtrap¶\n\nTodo\ntodo\n\n\n\nGPvortex¶\n\nTodo\ntodo\n\n\n\ndxGPVortex¶\n\nTodo\ntodo\n\n\n\ndyGPVortex¶\n\nTodo\ntodo\n\n\n\n\nBinary I/O¶\n\nLoadVec¶\n\nTodo\ntodo\n\n\n\nLoadFlag¶\n\nTodo\ntodo\n\n\n\nSaveVec¶\n\nTodo\ntodo\n\n\n\nflag¶\n\nTodo\ntodo\n\n\n\n\nbuildlayer¶\n\nbuildlayers¶\n\nTodo\ntodo\n\n\n\n\nClosePoints¶\n\nradiusSearch¶\n\nTodo\ntodo\n\n\n\nVoisinage¶\n\nTodo\ntodo\n\n\n\nneighborhood¶\n\nTodo\ntodo\n\n\n\nClosePoints2¶\n\nTodo\ntodo\n\n\n\nClosePoint¶\n\nTodo\ntodo\n\n\n\nClosePoints1¶\n\nTodo\ntodo\n\n\n\n\nCurvature¶\n\nextractborder¶\nExtract a border of a mesh.\n1 int Res  =  extractborder(Th, Label, Points);\n\n\nParameters:\n\nTh (mesh or mesh3)\nLabel (int) Label of the border to extract\nPoints (real[int, int]) Extracted points Must be allocated as real[int, int] Points(3, 1);\n\nOutput:\n\nRes (real) Length of the extracted border\n\n\n\ncurvature¶\n\nTodo\ntodo\n\n\n\nraxicurvature¶\n\nTodo\ntodo\n\n\n\ncurves¶\n\nTodo\ntodo\n\n\n\nsetecurveabcisse¶\n\nTodo\ntodo\n\n\n\nequiparameter¶\n\nTodo\ntodo\n\n\n\nTresca¶\n\nTodo\ntodo\n\n\n\nVonMises¶\n\nTodo\ntodo\n\n\n\n\ndfft¶\nRefer to the FFTW documentation for more informations.\n\nplandfft¶\n\nTodo\ntodo\n\n\n\nexecute¶\n\nTodo\ntodo\n\n\n\ndelete¶\n\nTodo\ntodo\n\n\n\ndfft¶\n\nTodo\ntodo\n\n\n\nmap¶\n\nTodo\ntodo\n\n\n\n\ndistance¶\nNeed\n1 load \"distance\"\n\n\n\ndistance¶\n1 distance(Th, d, dist, [distmax = DistMax]);\n\n\nParameters:\n\nTh (mesh)\nd\ndist (real[int])\n\nOutput:\n\n\n\n\nTodo\ntodo\n\n\n\ncheckdist¶\n\nTodo\ntodo\n\n\n\n\nDxWriter¶\n\nDxaddmesh¶\n\nTodo\ntodo\n\n\n\nDxaddtimeseries¶\n\nTodo\ntodo\n\n\n\nDxaddsol2ts¶\n\nTodo\ntodo\n\n\n\n\nElement_P1bl¶\n\nexpert¶\n\nTodo\ntodo\n\n\n\n\nexactpartition¶\n\nexactpartition¶\n\nTodo\ntodo\n\n\n\n\nff-AiryBiry¶\n\nairy¶\n\nTodo\ntodo\n\n\n\nbiry¶\n\nTodo\ntodo\n\n\n\n\nff-cmaes¶\n\ncmaes¶\n\nTodo\ntodo\n\n\n\n\nff_gsl_awk¶\nRefer to the GSL documentation for more informations\n\ngslcdfugaussianP¶\nLink to:\n1 gsl_cdf_ugaussian_P(a)\n\n\n\n\ngslcdfugaussianQ¶\nLink to:\n1 gsl_cdf_ugaussian_Q(a)\n\n\n\n\ngslcdfugaussianPinv¶\nLink to:\n1 gsl_cdf_ugaussian_Pinv(a)\n\n\n\n\ngslcdfugaussianQinv¶\nLink to:\n1 gsl_cdf_ugaussian_Qinv(a)\n\n\n\n\ngslcdfgaussianP¶\nLink to:\n1 gsl_cdf_gaussian_P(a, b)\n\n\n\n\ngslcdfgaussianQ¶\nLink to:\n1 gsl_cdf_gaussian_Q(a, b)\n\n\n\n\ngslcdfgaussianPinv¶\nLink to:\n1 gsl_cdf_gaussian_Pinv(a, b)\n\n\n\n\ngslcdfgaussianQinv¶\nLink to:\n1 gsl_cdf_gaussian_Qinv(a, b)\n\n\n\n\ngslcdfgammaP¶\nLink to:\n1 gsl_cdf_gamma_P(a, b, c)\n\n\n\n\ngslcdfgammaQ¶\nLink to:\n1 gsl_cdf_gamma_Q(a, b, c)\n\n\n\n\ngslcdfgammaPinv¶\nLink to:\n1 gsl_cdf_gamma_Pinv(a, b, c)\n\n\n\n\ngslcdfgammaQinv¶\nLink to:\n1 gsl_cdf_gamma_Pinv(a, b, c)\n\n\n\n\ngslcdfcauchyP¶\nLink to:\n1 gsl_cdf_cauchy_P(a, b)\n\n\n\n\ngslcdfcauchyQ¶\nLink to:\n1 gsl_cdf_cauchy_Q(a, b)\n\n\n\n\ngslcdfcauchyPinv¶\nLink to:\n1 gsl_cdf_cauchy_Pinv(a, b)\n\n\n\n\ngslcdfcauchyQinv¶\nLink to:\n1 gsl_cdf_cauchy_Qinv(a, b)\n\n\n\n\ngslcdflaplaceP¶\nLink to:\n1 gsl_cdf_lapalce_P(a, b)\n\n\n\n\ngslcdflaplaceQ¶\nLink to:\n1 gsl_cdf_lapalce_Q(a, b)\n\n\n\n\ngslcdflaplacePinv¶\nLink to:\n1 gsl_cdf_lapalce_Pinv(a, b)\n\n\n\n\ngslcdflaplaceQinv¶\nLink to:\n1 gsl_cdf_lapalce_Qinv(a, b)\n\n\n\n\ngslcdfrayleighP¶\nLink to:\n1 gsl_cdf_rayleigh_P(a, b)\n\n\n\n\ngslcdfrayleighQ¶\nLink to:\n1 gsl_cdf_rayleigh_Q(a, b)\n\n\n\n\ngslcdfrayleighPinv¶\nLink to:\n1 gsl_cdf_rayleigh_Pinv(a, b)\n\n\n\n\ngslcdfrayleighQinv¶\nLink to:\n1 gsl_cdf_rayleigh_Qinv(a, b)\n\n\n\n\ngslcdfchisqP¶\nLink to:\n1 gsl_cdf_chisq_P(a, b)\n\n\n\n\ngslcdfchisqQ¶\nLink to:\n1 gsl_cdf_chisq_Q(a, b)\n\n\n\n\ngslcdfchisqPinv¶\nLink to:\n1 gsl_cdf_chisq_Pinv(a, b)\n\n\n\n\ngslcdfchisqQinv¶\nLink to:\n1 gsl_cdf_chisq_Qinv(a, b)\n\n\n\n\ngslcdfexponentialP¶\nLink to:\n1 gsl_cdf_exponential_P(a, b)\n\n\n\n\ngslcdfexponentialQ¶\nLink to:\n1 gsl_cdf_exponential_Q(a, b)\n\n\n\n\ngslcdfexponentialPinv¶\nLink to:\n1 gsl_cdf_exponential_Pinv(a, b)\n\n\n\n\ngslcdfexponentialQinv¶\nLink to:\n1 gsl_cdf_exponential_Qinv(a, b)\n\n\n\n\ngslcdfexppowP¶\nLink to:\n1 gsl_cdf_exppow_P(a, b, c)\n\n\n\n\ngslcdfexppowQ¶\nLink to:\n1 gsl_cdf_exppow_Q(a, b, c)\n\n\n\n\ngslcdftdistP¶\nLink to:\n1 gsl_cdf_t_dist_P(a, b)\n\n\n\n\ngslcdftdistQ¶\nLink to:\n1 gsl_cdf_t_dist_Q(a, b)\n\n\n\n\ngslcdftdistPinv¶\nLink to:\n1 gsl_cdf_t_dist_Pinv(a, b)\n\n\n\n\ngslcdftdistQinv¶\nLink to:\n1 gsl_cdf_t_dist_Qinv(a, b)\n\n\n\n\ngslcdffdistP¶\nLink to:\n1 gsl_cdf_fdist_P(a, b, c)\n\n\n\n\ngslcdffdistQ¶\nLink to:\n1 gsl_cdf_fdist_Q(a, b, c)\n\n\n\n\ngslcdffdistPinv¶\nLink to:\n1 gsl_cdf_fdist_Pinv(a, b, c)\n\n\n\n\ngslcdffdistQinv¶\nLink to:\n1 gsl_cdf_fdist_Qinv(a, b, c)\n\n\n\n\ngslcdfbetaP¶\nLink to:\n1 gsl_cdf_beta_P(a, b, c)\n\n\n\n\ngslcdfbetaQ¶\nLink to:\n1 gsl_cdf_beta_Q(a, b, c)\n\n\n\n\ngslcdfbetaPinv¶\nLink to:\n1 gsl_cdf_beta_Pinv(a, b, c)\n\n\n\n\ngslcdfbetaQinv¶\nLink to:\n1 gsl_cdf_beta_Qinv(a, b, c)\n\n\n\n\ngslcdfflatP¶\nLink to:\n1 gsl_cdf_flat_P(a, b, c)\n\n\n\n\ngslcdfflatQ¶\nLink to:\n1 gsl_cdf_flat_Q(a, b, c)\n\n\n\n\ngslcdfflatPinv¶\nLink to:\n1 gsl_cdf_flat_Pinv(a, b, c)\n\n\n\n\ngslcdfflatQinv¶\nLink to:\n1 gsl_cdf_flat_Qinv(a, b, c)\n\n\n\n\ngslcdflognormalP¶\nLink to:\n1 gsl_cdf_lognormal_P(a, b, c)\n\n\n\n\ngslcdflognormalQ¶\nLink to:\n1 gsl_cdf_lognormal_Q(a, b, c)\n\n\n\n\ngslcdflognormalPinv¶\nLink to:\n1 gsl_cdf_lognormal_Pinv(a, b, c)\n\n\n\n\ngslcdflognormalQinv¶\nLink to:\n1 gsl_cdf_lognormal_Qinv(a, b, c)\n\n\n\n\ngslcdfgumbel1P¶\nLink to:\n1 gsl_cdf_gumbel1_P(a, b, c)\n\n\n\n\ngslcdfgumbel1Q¶\nLink to:\n1 gsl_cdf_gumbel1_Q(a, b, c)\n\n\n\n\ngslcdfgumbel1Pinv¶\nLink to:\n1 gsl_cdf_gumbel1_Pinv(a, b, c)\n\n\n\n\ngslcdfgumbel1Qinv¶\nLink to:\n1 gsl_cdf_gumbel1_Qinv(a, b, c)\n\n\n\n\ngslcdfgumbel2P¶\nLink to:\n1 gsl_cdf_gumbel2_P(a, b, c)\n\n\n\n\ngslcdfgumbel2Q¶\nLink to:\n1 gsl_cdf_gumbel2_Q(a, b, c)\n\n\n\n\ngslcdfgumbel2Pinv¶\nLink to:\n1 gsl_cdf_gumbel2_Pinv(a, b, c)\n\n\n\n\ngslcdfgumbel2Qinv¶\nLink to:\n1 gsl_cdf_gumbel2_Qinv(a, b, c)\n\n\n\n\ngslcdfweibullP¶\nLink to:\n1 gsl_cdf_weibull_P(a, b, c)\n\n\n\n\ngslcdfweibullQ¶\nLink to:\n1 gsl_cdf_weibull_Q(a, b, c)\n\n\n\n\ngslcdfweibullPinv¶\nLink to:\n1 gsl_cdf_weibull_Pinv(a, b, c)\n\n\n\n\ngslcdfweibullQinv¶\nLink to:\n1 gsl_cdf_weibull_Qinv(a, b, c)\n\n\n\n\ngslcdfparetoP¶\nLink to:\n1 gsl_cdf_pareto_P(a, b, c)\n\n\n\n\ngslcdfparetoQ¶\nLink to:\n1 gsl_cdf_pareto_Q(a, b, c)\n\n\n\n\ngslcdfparetoPinv¶\nLink to:\n1 gsl_cdf_pareto_Pinv(a, b, c)\n\n\n\n\ngslcdfparetoQinv¶\nLink to:\n1 gsl_cdf_pareto_Qinv(a, b, c)\n\n\n\n\ngslcdflogisticP¶\nLink to:\n1 gsl_cdf_logistic_P(a, b)\n\n\n\n\ngslcdflogisticQ¶\nLink to:\n1 gsl_cdf_logistic_Q(a, b)\n\n\n\n\ngslcdflogisticPinv¶\nLink to:\n1 gsl_cdf_logistic_Pinv(a, b)\n\n\n\n\ngslcdflogisticQinv¶\nLink to:\n1 gsl_cdf_logistic_Qinv(a, b)\n\n\n\n\ngslcdfbinomialP¶\nLink to:\n1 gsl_cdf_binomial_P(a, b, c)\n\n\n\n\ngslcdfbinomialQ¶\nLink to:\n1 gsl_cdf_binomial_Q(a, b, c)\n\n\n\n\ngslcdfpoissonP¶\nLink to:\n1 gsl_cdf_poisson_P(a, b)\n\n\n\n\ngslcdfpoissonQ¶\nLink to:\n1 gsl_cdf_poisson_Q(a, b)\n\n\n\n\ngslcdfgeometricP¶\nLink to:\n1 gsl_cdf_geometric_P(a, b)\n\n\n\n\ngslcdfgeometricQ¶\nLink to:\n1 gsl_cdf_geometric_Q(a, b)\n\n\n\n\ngslcdfnegativebinomialP¶\nLink to:\n1 gsl_cdf_negative_binomial_P(a, b, c)\n\n\n\n\ngslcdfnegativebinomialQ¶\nLink to:\n1 gsl_cdf_negative_binomial_Q(a, b, c)\n\n\n\n\ngslcdfpascalP¶\nLink to:\n1 gsl_cdf_pascal_P(a, b, c)\n\n\n\n\ngslcdfpascalQ¶\nLink to:\n1 gsl_cdf_pascal_Q(a, b, c)\n\n\n\n\ngslranbernoullipdf¶\nLink to:\n1 gsl_ran_bernoulli_pdf(a, b)\n\n\n\n\ngslranbeta¶\nLink to:\n1 gsl_ran_beta(a, b, c)\n\n\n\n\ngslranbetapdf¶\nLink to:\n1 gsl_ran_beta_pdf(a, b, c)\n\n\n\n\ngslranbinomialpdf¶\nLink to:\n1 gsl_ran_binomial_pdf(a, b, c)\n\n\n\n\ngslranexponential¶\nLink to:\n1 gsl_ran_exponential(a, b)\n\n\n\n\ngslranexponentialpdf¶\nLink to:\n1 gsl_ran_exponential_pdf(a, b)\n\n\n\n\ngslranexppow¶\nLink to:\n1 gsl_ran_exppow(a, b, c)\n\n\n\n\ngslranexppowpdf¶\nLink to:\n1 gsl_ran_exppow_pdf(a, b, c)\n\n\n\n\ngslrancauchy¶\nLink to:\n1 gsl_ran_cauchy(a, b)\n\n\n\n\ngslrancauchypdf¶\nLink to:\n1 gsl_ran_cauchy_pdf(a, b)\n\n\n\n\ngslranchisq¶\nLink to:\n1 gsl_ran_chisq(a, b)\n\n\n\n\ngslranchisqpdf¶\nLink to:\n1 gsl_ran_chisq_pdf(a, b)\n\n\n\n\ngslranerlang¶\nLink to:\n1 gsl_ran_erlang(a, b, c)\n\n\n\n\ngslranerlangpdf¶\nLink to:\n1 gsl_ran_erlang_pdf(a, b, c)\n\n\n\n\ngslranfdist¶\nLink to:\n1 gsl_ran_fdist(a, b, c)\n\n\n\n\ngslranfdistpdf¶\nLink to:\n1 gsl_ran_fdist_pdf(a, b, c)\n\n\n\n\ngslranflat¶\nLink to:\n1 gsl_ran_flat(a, b, c)\n\n\n\n\ngslranflatpdf¶\nLink to:\n1 gsl_ran_flat_pdf(a, b, c)\n\n\n\n\ngslrangamma¶\nLink to:\n1 gsl_ran_gamma(a, b, c)\n\n\n\n\ngslrangammaint¶\nLink to:\n1 gsl_ran_gamma_int(a, b, c)\n\n\n\n\ngslrangammapdf¶\nLink to:\n1 gsl_ran_gamma_pdf(a, b, c)\n\n\n\n\ngslrangammamt¶\nLink to:\n1 gsl_ran_gamma_mt(a, b, c)\n\n\n\n\ngslrangammaknuth¶\nLink to:\n1 gsl_ran_gamma_knuth(a, b, c)\n\n\n\n\ngslrangaussian¶\nLink to:\n1 gsl_ran_gaussian(a, b)\n\n\n\n\ngslrangaussianratiomethod¶\nLink to:\n1 gsl_ran_gaussian_ratio_method(a, b)\n\n\n\n\ngslrangaussianziggurat¶\nLink to:\n1 gsl_ran_gaussian_ziggurat(a, b)\n\n\n\n\ngslrangaussianpdf¶\nLink to:\n1 gsl_ran_gaussian_pdf(a, b)\n\n\n\n\ngslranugaussian¶\nLink to:\n1 gsl_ran_ugaussian(a)\n\n\n\n\ngslranugaussianratiomethod¶\nLink to:\n1 gsl_ran_ugaussian_ratio_method(a)\n\n\n\n\ngslranugaussianpdf¶\nLink to:\n1 gsl_ran_ugaussian_pdf(a)\n\n\n\n\ngslrangaussiantail¶\nLink to:\n1 gsl_ran_gaussian_tail(a, b, c)\n\n\n\n\ngslrangaussiantailpdf¶\nLink to:\n1 gsl_ran_gaussian_tail_pdf(a, b, c)\n\n\n\n\ngslranugaussiantail¶\nLink to:\n1 gsl_ran_ugaussian_tail(a, b)\n\n\n\n\ngslranugaussiantailpdf¶\nLink to:\n1 gsl_ran_ugaussian_tail_pdf(a, b)\n\n\n\n\ngslranlandau¶\nLink to:\n1 gsl_ran_landau(a)\n\n\n\n\ngslranlandaupdf¶\nLink to:\n1 gsl_ran_landau_pdf(a)\n\n\n\n\ngslrangeometricpdf¶\nLink to:\n1 gsl_ran_geometric_pdf(a, b)\n\n\n\n\ngslrangumbel1¶\nLink to:\n1 gsl_ran_gumbel1(a, b, c)\n\n\n\n\ngslrangumbel1pdf¶\nLink to:\n1 gsl_ran_gumbel1_pdf(a, b, c)\n\n\n\n\ngslrangumbel2¶\nLink to:\n1 gsl_ran_gumbel2(a, b, c)\n\n\n\n\ngslrangumbel2pdf¶\nLink to:\n1 gsl_ran_gumbel2_pdf(a, b, c)\n\n\n\n\ngslranlogistic¶\nLink to:\n1 gsl_ran_logistic(a, b)\n\n\n\n\ngslranlogisticpdf¶\nLink to:\n1 gsl_ran_logistic_pdf(a, b)\n\n\n\n\ngslranlognormal¶\nLink to:\n1 gsl_ran_lognormal(a, b, c)\n\n\n\n\ngslranlognormalpdf¶\nLink to:\n1 gsl_ran_lognormal_pdf(a, b, c)\n\n\n\n\ngslranlogarithmicpdf¶\nLink to:\n1 gsl_ran_logarithmic_pdf(a, b)\n\n\n\n\ngslrannegativebinomialpdf¶\nLink to:\n1 gsl_ran_negative_binomial_pdf(a, b, c)\n\n\n\n\ngslranpascalpdf¶\nLink to:\n1 gsl_ran_pascal_pdf(a, b, c)\n\n\n\n\ngslranpareto¶\nLink to:\n1 gsl_ran_pareto(a, b, c)\n\n\n\n\ngslranparetopdf¶\nLink to:\n1 gsl_ran_pareto_pdf(a, b, c)\n\n\n\n\ngslranpoissonpdf¶\nLink to:\n1 gsl_ran_poisson_pdf(a, b)\n\n\n\n\ngslranrayleigh¶\nLink to:\n1 gsl_ran_rayleigh(a, b)\n\n\n\n\ngslranrayleighpdf¶\nLink to:\n1 gsl_ran_rayleigh_pdf(a, b)\n\n\n\n\ngslranrayleightail¶\nLink to:\n1 gsl_ran_rayleigh_tail(a, b, c)\n\n\n\n\ngslranrayleightailpdf¶\nLink to:\n1 gsl_ran_rayleigh_tail_pdf(a, b, c)\n\n\n\n\ngslrantdist¶\nLink to:\n1 gsl_ran_tdsit(a, b)\n\n\n\n\ngslrantdistpdf¶\nLink to:\n1 gsl_ran_tdsit_pdf(a, b)\n\n\n\n\ngslranlaplace¶\nLink to:\n1 gsl_ran_laplace(a, b)\n\n\n\n\ngslranlaplacepdf¶\nLink to:\n1 gsl_ran_laplace_pdf(a, b)\n\n\n\n\ngslranlevy¶\nLink to:\n1 gsl_ran_levy(a, b, c)\n\n\n\n\ngslranweibull¶\nLink to:\n1 gsl_ran_weibull(a, b, c)\n\n\n\n\ngslranweibullpdf¶\nLink to:\n1 gsl_ran_weibull_pdf(a, b, c)\n\n\n\n\ngslsfairyAi¶\nLink to:\n1 gsl_sf_airy_Ai(a, b)\n\n\n\n\ngslsfairyBi¶\nLink to:\n1 gsl_sf_airy_Bi(a, b)\n\n\n\n\ngslsfairyAiscaled¶\nLink to:\n1 gsl_sf_airy_Ai_scaled(a, b)\n\n\n\n\ngslsfairyBiscaled¶\nLink to:\n1 gsl_sf_airy_Bi_scaled(a, b)\n\n\n\n\ngslsfairyAideriv¶\nLink to:\n1 gsl_sf_airy_Ai_deriv(a, b)\n\n\n\n\ngslsfairyBideriv¶\nLink to:\n1 gsl_sf_airy_Bi_deriv(a, b)\n\n\n\n\ngslsfairyAiderivscaled¶\nLink to:\n1 gsl_sf_airy_Ai_deriv_scaled(a, b)\n\n\n\n\ngslsfairyBiderivscaled¶\nLink to:\n1 gsl_sf_airy_Bi_deriv_scaled(a, b)\n\n\n\n\ngslsfairyzeroAi¶\nLink to:\n1 gsl_sf_airy_Ai(a, b)\n\n\n\n\ngslsfairyzeroBi¶\nLink to:\n1 gsl_sf_airy_aero_Bi(a)\n\n\n\n\ngslsfairyzeroAideriv¶\nLink to:\n1 gsl_sf_airy_aero_Ai_deriv(a)\n\n\n\n\ngslsfairyzeroBideriv¶\nLink to:\n1 gsl_sf_airy_aero_Bi_deriv(a)\n\n\n\n\ngslsfbesselJ0¶\nLink to:\n1 gsl_sf_bessel_J0(a)\n\n\n\n\ngslsfbesselJ1¶\nLink to:\n1 gsl_sf_bessel_J1(a)\n\n\n\n\ngslsfbesselJn¶\nLink to:\n1 gsl_sf_bessel_Jn(a, b)\n\n\n\n\ngslsfbesselY0¶\nLink to:\n1 gsl_sf_bessel_Y0(a)\n\n\n\n\ngslsfbesselY1¶\nLink to:\n1 gsl_sf_bessel_Y1(a)\n\n\n\n\ngslsfbesselYn¶\nLink to:\n1 gsl_sf_bessel_Yn(a, b)\n\n\n\n\ngslsfbesselI0¶\nLink to:\n1 gsl_sf_bessel_I0(a)\n\n\n\n\ngslsfbesselI1¶\nLink to:\n1 gsl_sf_bessel_I1(a)\n\n\n\n\ngslsfbesselIn¶\nLink to:\n1 gsl_sf_bessel_In(a, b)\n\n\n\n\ngslsfbesselI0scaled¶\nLink to:\n1 gsl_sf_bessel_I0_scaled(a)\n\n\n\n\ngslsfbesselI1scaled¶\nLink to:\n1 gsl_sf_bessel_I1_scaled(a)\n\n\n\n\ngslsfbesselInscaled¶\nLink to:\n1 gsl_sf_bessel_In_scaled(a, b)\n\n\n\n\ngslsfbesselK0¶\nLink to:\n1 gsl_sf_bessel_K0(a)\n\n\n\n\ngslsfbesselK1¶\nLink to:\n1 gsl_sf_bessel_K1(a)\n\n\n\n\ngslsfbesselKn¶\nLink to:\n1 gsl_sf_bessel_Kn(a, b)\n\n\n\n\ngslsfbesselK0scaled¶\nLink to:\n1 gsl_sf_bessel_K0_scaled(a)\n\n\n\n\ngslsfbesselK1scaled¶\nLink to:\n1 gsl_sf_bessel_K1_scaled(a)\n\n\n\n\ngslsfbesselKnscaled¶\nLink to:\n1 gsl_sf_bessel_Kn_scaled(a, b)\n\n\n\n\ngslsfbesselj0¶\nLink to:\n1 gsl_sf_bessel_j0(a)\n\n\n\n\ngslsfbesselj1¶\nLink to:\n1 gsl_sf_bessel_j1(a)\n\n\n\n\ngslsfbesselj2¶\nLink to:\n1 gsl_sf_bessel_j2(a)\n\n\n\n\ngslsfbesseljl¶\nLink to:\n1 gsl_sf_bessel_jl(a, b)\n\n\n\n\ngslsfbessely0¶\nLink to:\n1 gsl_sf_bessel_y0(a)\n\n\n\n\ngslsfbessely1¶\nLink to:\n1 gsl_sf_bessel_y0(a)\n\n\n\n\ngslsfbessely2¶\nLink to:\n1 gsl_sf_bessel_y0(a)\n\n\n\n\ngslsfbesselyl¶\nLink to:\n1 gsl_sf_bessel_jl(a, b)\n\n\n\n\ngslsfbesseli0scaled¶\nLink to:\n1 gsl_sf_bessel_i0_scaled(a)\n\n\n\n\ngslsfbesseli1scaled¶\nLink to:\n1 gsl_sf_bessel_i1_scaled(a)\n\n\n\n\ngslsfbesseli2scaled¶\nLink to:\n1 gsl_sf_bessel_i2_scaled(a)\n\n\n\n\ngslsfbesselilscaled¶\nLink to:\n1 gsl_sf_bessel_il_scaled(a, b)\n\n\n\n\ngslsfbesselk0scaled¶\nLink to:\n1 gsl_sf_bessel_k0_scaled(a)\n\n\n\n\ngslsfbesselk1scaled¶\nLink to:\n1 gsl_sf_bessel_k1_scaled(a)\n\n\n\n\ngslsfbesselk2scaled¶\nLink to:\n1 gsl_sf_bessel_k2_scaled(a)\n\n\n\n\ngslsfbesselklscaled¶\nLink to:\n1 gsl_sf_bessel_kl_scaled(a, b)\n\n\n\n\ngslsfbesselJnu¶\nLink to:\n1 gsl_sf_bessel_Jnu(a, b)\n\n\n\n\ngslsfbesselYnu¶\nLink to:\n1 gsl_sf_bessel_Ynu(a, b)\n\n\n\n\ngslsfbesselInuscaled¶\nLink to:\n1 gsl_sf_bessel_Inu_scaled(a, b)\n\n\n\n\ngslsfbesselInu¶\nLink to:\n1 gsl_sf_bessel_Inu(a, b)\n\n\n\n\ngslsfbesselKnuscaled¶\nLink to:\n1 gsl_sf_bessel_Knu_scaled(a, b)\n\n\n\n\ngslsfbesselKnu¶\nLink to:\n1 gsl_sf_bessel_Knu(a, b)\n\n\n\n\ngslsfbessellnKnu¶\nLink to:\n1 gsl_sf_bessel_lnKnu(a, b)\n\n\n\n\ngslsfbesselzeroJ0¶\nLink to:\n1 gsl_sf_bessel_zero_J0(a)\n\n\n\n\ngslsfbesselzeroJ1¶\nLink to:\n1 gsl_sf_bessel_zero_J1(a)\n\n\n\n\ngslsfbesselzeroJnu¶\nLink to:\n1 gsl_sf_bessel_zero_Jnu(a, b)\n\n\n\n\ngslsfclausen¶\nLink to:\n1 gsl_sf_clausen(a)\n\n\n\n\ngslsfhydrogenicR1¶\nLink to:\n1 gsl_sf_hydrogenicR_1(a, b)\n\n\n\n\ngslsfdawson¶\nLink to:\n1 gsl_sf_dawnson(a)\n\n\n\n\ngslsfdebye1¶\nLink to:\n1 gsl_sf_debye_1(a)\n\n\n\n\ngslsfdebye2¶\nLink to:\n1 gsl_sf_debye_2(a)\n\n\n\n\ngslsfdebye3¶\nLink to:\n1 gsl_sf_debye_3(a)\n\n\n\n\ngslsfdebye4¶\nLink to:\n1 gsl_sf_debye_4(a)\n\n\n\n\ngslsfdebye5¶\nLink to:\n1 gsl_sf_debye_5(a)\n\n\n\n\ngslsfdebye6¶\nLink to:\n1 gsl_sf_debye_6(a)\n\n\n\n\ngslsfdilog¶\nLink to:\n1 gsl_sf_dilog(a)\n\n\n\n\ngslsfmultiply¶\nLink to:\n1 gsl_sf_multiply(a, b)\n\n\n\n\ngslsfellintKcomp¶\nLink to:\n1 gsl_sf_ellint_Kcomp(a, b)\n\n\n\n\ngslsfellintEcomp¶\nLink to:\n1 gsl_sf_ellint_Ecomp(a, b)\n\n\n\n\ngslsfellintPcomp¶\nLink to:\n1 gsl_sf_ellint_Pcomp(a, b, c)\n\n\n\n\ngslsfellintDcomp¶\nLink to:\n1 gsl_sf_ellint_Dcomp(a, b)\n\n\n\n\ngslsfellintF¶\nLink to:\n1 gsl_sf_ellint_F(a, b, c)\n\n\n\n\ngslsfellintE¶\nLink to:\n1 gsl_sf_ellint_E(a, b, c)\n\n\n\n\ngslsfellintRC¶\nLink to:\n1 gsl_sf_ellint_RC(a, b, c)\n\n\n\n\ngslsferfc¶\nLink to:\n1 gsl_sf_erfc(a)\n\n\n\n\ngslsflogerfc¶\nLink to:\n1 gsl_sf_log_erfc(a)\n\n\n\n\ngslsferf¶\nLink to:\n1 gsl_sf_erf(a)\n\n\n\n\ngslsferfZ¶\nLink to:\n1 gsl_sf_erf_Z(a)\n\n\n\n\ngslsferfQ¶\nLink to:\n1 gsl_sf_erf_Q(a)\n\n\n\n\ngslsfhazard¶\nLink to:\n1 gsl_sf_hazard(a)\n\n\n\n\ngslsfexp¶\nLink to:\n1 gsl_sf_exp(a)\n\n\n\n\ngslsfexpmult¶\nLink to:\n1 gsl_sf_exp_mult(a, b)\n\n\n\n\ngslsfexpm1¶\nLink to:\n1 gsl_sf_expm1(a)\n\n\n\n\ngslsfexprel¶\nLink to:\n1 gsl_sf_exprel(a)\n\n\n\n\ngslsfexprel2¶\nLink to:\n1 gsl_sf_exprel_2(a)\n\n\n\n\ngslsfexpreln¶\nLink to:\n1 gsl_sf_exprel_n(a, b)\n\n\n\n\ngslsfexpintE1¶\nLink to:\n1 gsl_sf_expint_E1(a)\n\n\n\n\ngslsfexpintE2¶\nLink to:\n1 gsl_sf_expint_E2(a)\n\n\n\n\ngslsfexpintEn¶\nLink to:\n1 gsl_sf_expint_En(a, b)\n\n\n\n\ngslsfexpintE1scaled¶\nLink to:\n1 gsl_sf_expint_E1_scaled(a)\n\n\n\n\ngslsfexpintE2scaled¶\nLink to:\n1 gsl_sf_expint_E1_scaled(a)\n\n\n\n\ngslsfexpintEnscaled¶\nLink to:\n1 gsl_sf_expint_En_scaled(a, b)\n\n\n\n\ngslsfexpintEi¶\nLink to:\n1 gsl_sf_expint_Ei(a)\n\n\n\n\ngslsfexpintEiscaled¶\nLink to:\n1 gsl_sf_expint_Ei_scaled(a)\n\n\n\n\ngslsfShi¶\nLink to:\n1 gsl_sf_Shi(a)\n\n\n\n\ngslsfChi¶\nLink to:\n1 gsl_sf_Chi(a)\n\n\n\n\ngslsfexpint3¶\nLink to:\n1 gsl_sf_expint_3(a)\n\n\n\n\ngslsfSi¶\nLink to:\n1 gsl_sf_Si(a)\n\n\n\n\ngslsfCi¶\nLink to:\n1 gsl_sf_Ci(a)\n\n\n\n\ngslsfatanint¶\nLink to:\n1 gsl_sf_atanint(a)\n\n\n\n\ngslsffermidiracm1¶\nLink to:\n1 gsl_sf_fermi_dirac_m1(a)\n\n\n\n\ngslsffermidirac0¶\nLink to:\n1 gsl_sf_fermi_dirac_0(a)\n\n\n\n\ngslsffermidirac1¶\nLink to:\n1 gsl_sf_fermi_dirac_1(a)\n\n\n\n\ngslsffermidirac2¶\nLink to:\n1 gsl_sf_fermi_dirac_2(a)\n\n\n\n\ngslsffermidiracint¶\nLink to:\n1 gsl_sf_fermi_dirac_int(a, b)\n\n\n\n\ngslsffermidiracmhalf¶\nLink to:\n1 gsl_sf_fermi_dirac_mhalf(a)\n\n\n\n\ngslsffermidirachalf¶\nLink to:\n1 gsl_sf_fermi_dirac_half(a)\n\n\n\n\ngslsffermidirac3half¶\nLink to:\n1 gsl_sf_fermi_dirac_3half(a)\n\n\n\n\ngslsffermidiracinc0¶\nLink to:\n1 gsl_sf_fermi_dirac_inc_0(a, b)\n\n\n\n\ngslsflngamma¶\nLink to:\n1 gsl_sf_lngamma(a)\n\n\n\n\ngslsfgamma¶\nLink to:\n1 gsl_sf_gamma(a)\n\n\n\n\ngslsfgammastar¶\nLink to:\n1 gsl_sf_gammastar(a)\n\n\n\n\ngslsfgammainv¶\nLink to:\n1 gsl_sf_gammainv(a)\n\n\n\n\ngslsftaylorcoeff¶\nLink to:\n1 gsl_sf_taylorcoeff(a, b)\n\n\n\n\ngslsffact¶\nLink to:\n1 gsl_sf_fact(a)\n\n\n\n\ngslsfdoublefact¶\nLink to:\n1 gsl_sf_doublefact(a)\n\n\n\n\ngslsflnfact¶\nLink to:\n1 gsl_sf_lnfact(a)\n\n\n\n\ngslsflndoublefact¶\nLink to:\n1 gsl_sf_lndoublefact(a)\n\n\n\n\ngslsflnchoose¶\nLink to:\n1 gsl_sf_lnchoose(a, b)\n\n\n\n\ngslsfchoose¶\nLink to:\n1 gsl_sf_choose(a, b)\n\n\n\n\ngslsflnpoch¶\nLink to:\n1 gsl_sf_lnpoch(a, b)\n\n\n\n\ngslsfpoch¶\nLink to:\n1 gsl_sf_poch(a, b)\n\n\n\n\ngslsfpochrel¶\nLink to:\n1 gsl_sf_pochrel(a, b)\n\n\n\n\ngslsfgammaincQ¶\nLink to:\n1 gsl_sf_gamma_inc_Q(a, b)\n\n\n\n\ngslsfgammaincP¶\nLink to:\n1 gsl_sf_gamma_inc_P(a, b)\n\n\n\n\ngslsfgammainc¶\nLink to:\n1 gsl_sf_gamma_inc(a, b)\n\n\n\n\ngslsflnbeta¶\nLink to:\n1 gsl_sf_lnbeta(a, b)\n\n\n\n\ngslsfbeta¶\nLink to:\n1 gsl_sf_beta(a, b)\n\n\n\n\ngslsfbetainc¶\nLink to:\n1 gsl_sf_betaçinc(a, b, c)\n\n\n\n\ngslsfgegenpoly1¶\nLink to:\n1 gsl_sf_gegenpoly_1(a, b)\n\n\n\n\ngslsfgegenpoly2¶\nLink to:\n1 gsl_sf_gegenpoly_2(a, b)\n\n\n\n\ngslsfgegenpoly3¶\nLink to:\n1 gsl_sf_gegenpoly_3(a, b)\n\n\n\n\ngslsfgegenpolyn¶\nLink to:\n1 gsl_sf_gegenpoly_n(a, b, c)\n\n\n\n\ngslsfhyperg0F1¶\nLink to:\n1 gsl_sf_hyperg_0F1(a, b)\n\n\n\n\ngslsfhyperg1F1int¶\nLink to:\n1 gsl_sf_hyperg_1F1_inc(a, b, c)\n\n\n\n\ngslsfhyperg1F1¶\nLink to:\n1 gsl_sf_hyperg_1F1(a, b, c)\n\n\n\n\ngslsfhypergUint¶\nLink to:\n1 gsl_sf_hyperg_U_inc(a, b, c)\n\n\n\n\ngslsfhypergU¶\nLink to:\n1 gsl_sf_hyperg_U(a, b, c)\n\n\n\n\ngslsfhyperg2F0¶\nLink to:\n1 gsl_sf_hyperg_U_2F0(a, b, c)\n\n\n\n\ngslsflaguerre1¶\nLink to:\n1 gsl_sf_laguerre_1(a, b)\n\n\n\n\ngslsflaguerre2¶\nLink to:\n1 gsl_sf_laguerre_2(a, b)\n\n\n\n\ngslsflaguerre3¶\nLink to:\n1 gsl_sf_laguerre_3(a, b)\n\n\n\n\ngslsflaguerren¶\nLink to:\n1 gsl_sf_laguerre_n(a, b, c)\n\n\n\n\ngslsflambertW0¶\nLink to:\n1 gsl_sf_lambert_W0(a)\n\n\n\n\ngslsflambertWm1¶\nLink to:\n1 gsl_sf_lambert_Wm1(a)\n\n\n\n\ngslsflegendrePl¶\nLink to:\n1 gsl_sf_legendre_Pl(a, b)\n\n\n\n\ngslsflegendreP1¶\nLink to:\n1 gsl_sf_legendre_P1(a)\n\n\n\n\ngslsflegendreP2¶\nLink to:\n1 gsl_sf_legendre_P2(a)\n\n\n\n\ngslsflegendreP3¶\nLink to:\n1 gsl_sf_legendre_P3(a)\n\n\n\n\ngslsflegendreQ0¶\nLink to:\n1 gsl_sf_legendre_Q0(a)\n\n\n\n\ngslsflegendreQ1¶\nLink to:\n1 gsl_sf_legendre_Q1(a)\n\n\n\n\ngslsflegendreQl¶\nLink to:\n1 gsl_sf_legendre_Ql(a, b)\n\n\n\n\ngslsflegendrePlm¶\nLink to:\n1 gsl_sf_legendre_Plm(a, b, c)\n\n\n\n\ngslsflegendresphPlm¶\nLink to:\n1 gsl_sf_legendre_sphP1m(a, b, c)\n\n\n\n\ngslsflegendrearraysize¶\nLink to:\n1 gsl_sf_legendre_array_size(a, b)\n\n\n\n\ngslsfconicalPhalf¶\nLink to:\n1 gsl_sf_conicalP_half(a, b)\n\n\n\n\ngslsfconicalPmhalf¶\nLink to:\n1 gsl_sf_conicalP_mhalf(a, b)\n\n\n\n\ngslsfconicalP0¶\nLink to:\n1 gsl_sf_conicalP_0(a, b)\n\n\n\n\ngslsfconicalP1¶\nLink to:\n1 gsl_sf_conicalP_1(a, b)\n\n\n\n\ngslsfconicalPsphreg¶\nLink to:\n1 gsl_sf_conicalP_sph_reg(a, b, c)\n\n\n\n\ngslsfconicalPcylreg¶\nLink to:\n1 gsl_sf_conicalP_cyl_reg(a, b, c)\n\n\n\n\ngslsflegendreH3d0¶\nLink to:\n1 gsl_sf_legendre_H3d_0(a, b)\n\n\n\n\ngslsflegendreH3d1¶\nLink to:\n1 gsl_sf_legendre_H3d_1(a, b)\n\n\n\n\ngslsflegendreH3d¶\nLink to:\n1 gsl_sf_legendre_H3d(a, b, c)\n\n\n\n\ngslsflog¶\nLink to:\n1 gsl_sf_log(a)\n\n\n\n\ngslsflogabs¶\nLink to:\n1 gsl_sf_log_abs(a)\n\n\n\n\ngslsflog1plusx¶\nLink to:\n1 gsl_sf_log_1plusx(a)\n\n\n\n\ngslsflog1plusxmx¶\nLink to:\n1 gsl_sf_log_1plusx_mx(a)\n\n\n\n\ngslsfpowint¶\nLink to:\n1 gsl_sf_pow_int(a, b)\n\n\n\n\ngslsfpsiint¶\nLink to:\n1 gsl_sf_psi_int(a)\n\n\n\n\ngslsfpsi¶\nLink to:\n1 gsl_sf_psi(a)\n\n\n\n\ngslsfpsi1piy¶\nLink to:\n1 gsl_sf_psi_1piy(a)\n\n\n\n\ngslsfpsi1int¶\nLink to:\n1 gsl_sf_psi_1_int(a)\n\n\n\n\ngslsfpsi1¶\nLink to:\n1 gsl_sf_psi_1(a)\n\n\n\n\ngslsfpsin¶\nLink to:\n1 gsl_sf_psi_n(a, b)\n\n\n\n\ngslsfsynchrotron1¶\nLink to:\n1 gsl_sf_synchrotron_1(a)\n\n\n\n\ngslsfsynchrotron2¶\nLink to:\n1 gsl_sf_synchrotron_2(a)\n\n\n\n\ngslsftransport2¶\nLink to:\n1 gsl_sf_transport_2(a)\n\n\n\n\ngslsftransport3¶\nLink to:\n1 gsl_sf_transport_3(a)\n\n\n\n\ngslsftransport4¶\nLink to:\n1 gsl_sf_transport_4(a)\n\n\n\n\ngslsftransport5¶\nLink to:\n1 gsl_sf_transport_5(a)\n\n\n\n\ngslsfsin¶\nLink to:\n1 gsl_sf_sin(a)\n\n\n\n\ngslsfcos¶\nLink to:\n1 gsl_sf_cos(a)\n\n\n\n\ngslsfhypot¶\nLink to:\n1 gsl_sf_hypot(a, b)\n\n\n\n\ngslsfsinc¶\nLink to:\n1 gsl_sf_sinc(a)\n\n\n\n\ngslsflnsinh¶\nLink to:\n1 gsl_sf_lnsinh(a)\n\n\n\n\ngslsflncosh¶\nLink to:\n1 gsl_sf_lncosh(a)\n\n\n\n\ngslsfanglerestrictsymm¶\nLink to:\n1 gsl_sf_andle_restrict_symm(a)\n\n\n\n\ngslsfanglerestrictpos¶\nLink to:\n1 gsl_sf_angle_restrict_pos(a)\n\n\n\n\ngslsfzetaint¶\nLink to:\n1 gsl_sf_zeta_int(a)\n\n\n\n\ngslsfzeta¶\nLink to:\n1 gsl_sf_zeta(a)\n\n\n\n\ngslsfzetam1¶\nLink to:\n1 gsl_sf_zetam1(a)\n\n\n\n\ngslsfzetam1int¶\nLink to:\n1 gsl_sf_zetam1_int(a)\n\n\n\n\ngslsfhzeta¶\nLink to:\n1 gsl_sf_hzeta(a, b)\n\n\n\n\ngslsfetaint¶\nLink to:\n1 gsl_sf_eta_int(a)\n\n\n\n\ngslsfeta¶\nLink to:\n1 gsl_sf_eta(a)\n\n\n\n\n\nff-Ipopt¶\nRefer to the Ipopt documentation for more informations.\n\nIPOPT¶\n\nTodo\ntodo\n\n\n\n\nfflapack¶\nRefer to the LAPACK documentation for more informations.\n\ninv¶\n\nTodo\ntodo\n\n\n\ndgeev¶\n\nTodo\ntodo\n\n\n\nzgeev¶\n\nTodo\ntodo\n\n\n\ngeev¶\n\nTodo\ntodo\n\n\n\ngeev¶\n\nTodo\ntodo\n\n\n\ndggev¶\n\nTodo\ntodo\n\n\n\nzggev¶\n\nTodo\ntodo\n\n\n\ndsygvd¶\n\nTodo\ntodo\n\n\n\ndgesdd¶\n\nTodo\ntodo\n\n\n\nzhegv¶\n\nTodo\ntodo\n\n\n\ndsyev¶\n\nTodo\ntodo\n\n\n\nzheev¶\n\nTodo\ntodo\n\n\n\n\nff-mmap-semaphore¶\n\nWait¶\n\nTodo\ntodo\n\n\n\ntrywait¶\n\nTodo\ntodo\n\n\n\nPost¶\n\nTodo\ntodo\n\n\n\nmsync¶\n\nTodo\ntodo\n\n\n\nRead¶\n\nTodo\ntodo\n\n\n\nWrite¶\n\nTodo\ntodo\n\n\n\n\nffnewuoa¶\n\nnewuoa¶\n\nTodo\ntodo\n\n\n\n\nff-NLopt¶\nRefer to the NLOPT documentation for more informations.\n\nnloptDIRECT¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTL¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTLRand¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTScal¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTNoScal¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTLNoScal¶\n\nTodo\ntodo\n\n\n\nnloptDIRECTLRandNoScal¶\n\nTodo\ntodo\n\n\n\nnloptOrigDIRECT¶\n\nTodo\ntodo\n\n\n\nnloptOrigDIRECTL¶\n\nTodo\ntodo\n\n\n\nnloptStoGO¶\n\nTodo\ntodo\n\n\n\nnloptStoGORand¶\n\nTodo\ntodo\n\n\n\nnloptLBFGS¶\n\nTodo\ntodo\n\n\n\nnloptPRAXIS¶\n\nTodo\ntodo\n\n\n\nnloptVar1¶\n\nTodo\ntodo\n\n\n\nnloptVar2¶\n\nTodo\ntodo\n\n\n\nnloptTNewton¶\n\nTodo\ntodo\n\n\n\nnloptTNewtonRestart¶\n\nTodo\ntodo\n\n\n\nnloptTNewtonPrecond¶\n\nTodo\ntodo\n\n\n\nnloptTNewtonPrecondRestart¶\n\nTodo\ntodo\n\n\n\nnloptCRS2¶\n\nTodo\ntodo\n\n\n\nnloptMMA¶\n\nTodo\ntodo\n\n\n\nnloptCOBYLA¶\n\nTodo\ntodo\n\n\n\nnloptNEWUOA¶\n\nTodo\ntodo\n\n\n\nnloptNEWUOABound¶\n\nTodo\ntodo\n\n\n\nnloptNelderMead¶\n\nTodo\ntodo\n\n\n\nnloptSbplx¶\n\nTodo\ntodo\n\n\n\nnloptBOBYQA¶\n\nTodo\ntodo\n\n\n\nnloptISRES¶\n\nTodo\ntodo\n\n\n\nnloptSLSQP¶\n\nTodo\ntodo\n\n\n\nnloptMLSL¶\n\nTodo\ntodo\n\n\n\nnloptMLSLLDS¶\n\nTodo\ntodo\n\n\n\nnloptAUGLAG¶\n\nTodo\ntodo\n\n\n\nnloptAUGLAGEQ¶\n\nTodo\ntodo\n\n\n\n\nffrandom¶\n\nsrandomdev¶\n\nTodo\ntodo\n\n\n\nsrandom¶\n\nTodo\ntodo\n\n\n\nrandom¶\n\nTodo\ntodo\n\n\n\n\nFreeFemQA¶\n\nMeshGenQA¶\n\nTodo\ntodo\n\n\n\n\nfreeyams¶\n\nfreeyams¶\n\nTodo\ntodo\n\n\n\n\ngmsh¶\nNeed\n1 load \"gmsh\"\n\n\nThe gmsh software is available here\n\ngmshload¶\nLoad a 2D mesh build with Gmsh.\n1 mesh Th  =  gmshload(MeshFile, [reftri = RefTri], [renum = Renum]);\n\n\nParameters:\n\nMeshFile (string) Mesh file name\nreftri =  (.. todo:: todo)\nrenum =  (.. todo:: todo)\n\nOutput:\n\nTh (mesh)\n\n\n\ngmshload3¶\nLoad a 3D mesh build with Gmsh.\n1 mesh3 Th  =  gmshload3(MeshFile, [reftet = RefTet], [renum = Renum]);\n\n\nParameters:\n\nMeshFile (string) Mesh file name\nreftet =  (.. todo:: todo)\nrenum =  (.. todo:: todo)\n\nOutput:\n\nTh (mesh3)\n\n\n\nsavegmsh¶\n\nTodo\ntodo\n\n\n\n\ngsl¶\n\ngslpolysolvequadratic¶\n\nTodo\ntodo\n\n\n\ngslpolysolvecubic¶\n\nTodo\ntodo\n\n\n\ngslpolycomplexsolve¶\n\nTodo\ntodo\n\n\n\ngslrnguniform¶\n\nTodo\ntodo\n\n\n\ngslrnguniformpos¶\n\nTodo\ntodo\n\n\n\ngslname¶\n\nTodo\ntodo\n\n\n\ngslrngget¶\n\nTodo\ntodo\n\n\n\ngslrngmin¶\n\nTodo\ntodo\n\n\n\ngslrngmax¶\n\nTodo\ntodo\n\n\n\ngslrngset¶\n\nTodo\ntodo\n\n\n\ngslrngtype¶\n\nTodo\ntodo\n\n\n\n\nilut¶\n\napplyIlutPrecond¶\n\nTodo\ntodo\n\n\n\nmakeIlutPrecond¶\n\nTodo\ntodo\n\n\n\n\niohdf5¶\n\nsavehdf5sol¶\n\nTodo\ntodo\n\n\n\n\niovtk¶\n\nsavevtk¶\nSave mesh or solution in vtk/vtu format.\n1 savevtk(FileName, Th, [Ux, Uy, Uz], p, [dataname = DataName], [withsurfacemesh = WithSurfaceMesh], [order = Order], [floatmesh = FloatMesh], [floatsol = FloatSol], [bin = Bin], [swap = Swap]);\n\n\nParameters:\n\nFileName (string) File name: *.vtk or\n*.vtu\nTh (mesh or mesh3)\n[Ux, Uy, Uz], p (fespace function of vector of fespace functions) Solutions to save, as much as wanted\ndataname =  (string) Name of solutions, seprated by a space\nwithsurfacemesh =  (bool)\n.. todo:: todo\norder =  (int[int]) Order of solutions.\nAvailable: 0 or 1\n\nfloatmesh =  (bool) .. todo:: todo\nfloatsol =  (bool) .. todo:: todo\nbin =  (bool) If true, save file in binary format\nswap (bool) .. todo:: todo\n\nOutput:\n\nNone\n\n\n\nvtkload¶\n\nTodo\ntodo\n\n\n\nvtkload3¶\n\nTodo\ntodo\n\n\n\n\nisoline¶\nNeed\n1 load \"isoline\"\n\n\n\nisoline¶\n1 int N  =  isoline(Th, u, xy, iso = Iso, close = Close, smoothing = Smoothing, ratio = Ratio, eps = Eps, beginend = BeginEnd, file = File);\n\n\n\nTodo\ntodo\n\n\n\nCurve¶\n\nTodo\ntodo\n\n\n\nArea¶\n\nTodo\ntodo\n\n\n\nfindallocalmin¶\n\nTodo\ntodo\n\n\n\n\nlapack¶\n\ninv¶\n\nTodo\ntodo\n\n\n\ndgeev¶\n\nTodo\ntodo\n\n\n\nzgeev¶\n\nTodo\ntodo\n\n\n\ngeev¶\n\nTodo\ntodo\n\n\n\ndggev¶\n\nTodo\ntodo\n\n\n\nzggev¶\n\nTodo\ntodo\n\n\n\ndsygvd¶\n\nTodo\ntodo\n\n\n\ndgesdd¶\n\nTodo\ntodo\n\n\n\nzhegv¶\n\nTodo\ntodo\n\n\n\ndsyev¶\n\nTodo\ntodo\n\n\n\nzheev¶\n\nTodo\ntodo\n\n\n\ndgelsy¶\n\nTodo\ntodo\n\n\n\n\nlgbmo¶\n\nbmo¶\n\nTodo\ntodo\n\n\n\n\nmat_dervieux¶\n\nMatUpWind1¶\n\nTodo\ntodo\n\n\n\n\nmat_psi¶\n\nMatUpWind0¶\n\nTodo\ntodo\n\n\n\n\nmedit¶\n\nmedit¶\n\nTodo\ntodo\n\n\n\nsavesol¶\n\nTodo\ntodo\n\n\n\nreadsol¶\n\nTodo\ntodo\n\n\n\n\nmetis¶\n\nmetisnodal¶\n\nTodo\ntodo\n\n\n\nmetisdual¶\n\nTodo\ntodo\n\n\n\n\nMetricKuate¶\n\nMetricKuate¶\n\nTodo\ntodo\n\n\n\n\nMetricPk¶\n\nMetricPk¶\n\nTodo\ntodo\n\n\n\n\nmmg3d¶\n\nmmg3d¶\n\nTodo\ntodo\n\n\n\n\nmmg3d-v4.0¶\n\nmmg3d¶\n\nTodo\ntodo\n\n\n\n\nmsh3¶\n\nchange¶\n\nTodo\ntodo\n\n\n\nmovemesh23¶\n\nTodo\ntodo\n\n\n\nmovemesh2D3Dsurf¶\n\nTodo\ntodo\n\n\n\nmovemesh3¶\n\nTodo\ntodo\n\n\n\nmovemesh¶\n\nTodo\ntodo\n\n\n\nmovemesh3D¶\n\nTodo\ntodo\n\n\n\ndeplacement¶\n\nTodo\ntodo\n\n\n\ncheckbemesh¶\n\nTodo\ntodo\n\n\n\nbuildlayers¶\n\nTodo\ntodo\n\n\n\nbcube¶\n\nTodo\ntodo\n\n\n\ncube¶\nConstruct a cubic mesh.\n1 mesh3 Th  =  cube(nnX, nnY, nnZ, [X(x), Y(y), Z(z)], [label = Label], [flags = Flags], [region = Region]);\n\n\nParameters:\n\nnnX (int) Number of discretization point along \\(x\\)\nnnY (int) Number of discretization point along \\(y\\)\nnnZ (int) Number of discretization point along \\(z\\)\nX(x) (func) [Optional] Affine function of \\(x\\) to define the length Default: x\nY(y) (func) [Optional] Affine function of \\(y\\) to define the width Default: y\nZ(z) (func) [Optional] Affine function of \\(z\\) to define the height Default: z\nlabel =  (int[int]) [Optional]\nList of surface labels Default: [1, 2, 3, 4, 5, 6]\n\nflags =  (int) [Optional]\nRefer to square\n\nregion =  (int) [Optional]\nRegion number of the cube volume Default: 0\n\n\nOutput:\n\nTh (mesh3) Cube mesh\n\n\n\ntrunc¶\n\nTodo\ntodo\n\n\n\ngluemesh¶\n\nTodo\ntodo\n\n\n\nextract¶\n\nTodo\ntodo\n\n\n\nshowborder¶\n\nTodo\ntodo\n\n\n\ngetborder¶\n\nTodo\ntodo\n\n\n\nAddLayers¶\n\nTodo\ntodo\n\n\n\n\nmshmet¶\n\nmshmet¶\n\nTodo\ntodo\n\n\n\n\nMUMPS¶\n\ndefaulttoMUMPSseq¶\n\nTodo\ntodo\n\n\n\n\nMUMPS_seq¶\n\ndefaulttoMUMPSseq¶\n\nTodo\ntodo\n\n\n\n\nnetgen¶\n\nnetg¶\n\nTodo\ntodo\n\n\n\nnetgstl¶\n\nTodo\ntodo\n\n\n\nnetgload¶\n\nTodo\ntodo\n\n\n\n\nNewSolver¶\n\ndefaulttoUMFPACK¶\n\nTodo\ntodo\n\n\n\n\nPARDISO¶\n\ndefaulttoPARDISO¶\n\nTodo\ntodo\n\n\n\nompsetnumthreads¶\n\nTodo\ntodo\n\n\n\nompgetnumthreads¶\n\nTodo\ntodo\n\n\n\nompgetmaxthreads¶\n\nTodo\ntodo\n\n\n\n\npcm2rnm¶\n\nreadpcm¶\n\nTodo\ntodo\n\n\n\n\npipe¶\n\nflush¶\n\nTodo\ntodo\n\n\n\nsleep¶\n\nTodo\ntodo\n\n\n\nusleep¶\n\nTodo\ntodo\n\n\n\n\nqf11to25¶\n\nQF1d¶\n\nTodo\ntodo\n\n\n\nQF2d¶\n\nTodo\ntodo\n\n\n\nQF3d¶\n\nTodo\ntodo\n\n\n\ntripleQF¶\n\n\n\nscotch¶\n\nscotch¶\n\nTodo\ntodo\n\n\n\n\nshell¶\n\nreaddir¶\n\nTodo\ntodo\n\n\n\nunlink¶\n\nTodo\ntodo\n\n\n\nrmdir¶\n\nTodo\ntodo\n\n\n\ncddir¶\n\nTodo\ntodo\n\n\n\nchdir¶\n\nTodo\ntodo\n\n\n\nbasename¶\n\nTodo\ntodo\n\n\n\ndirname¶\n\nTodo\ntodo\n\n\n\nmkdir¶\n\nTodo\ntodo\n\n\n\nchmod¶\n\nTodo\ntodo\n\n\n\ncpfile¶\n\nTodo\ntodo\n\n\n\nstat¶\n\nTodo\ntodo\n\n\n\nisdir¶\n\nTodo\ntodo\n\n\n\ngetenv¶\n\nTodo\ntodo\n\n\n\nsetenv¶\n\nTodo\ntodo\n\n\n\nunsetenv¶\n\nTodo\ntodo\n\n\n\n\nsplitedges¶\n\nSplitedgeMesh¶\n\nTodo\ntodo\n\n\n\n\nsplitmesh12¶\n\nsplitmesh12¶\n\nTodo\ntodo\n\n\n\n\nsplitmesh3¶\n\nsplitmesh3¶\n\nTodo\ntodo\n\n\n\n\nsplitmesh4¶\n\nsplimesh4¶\n\nTodo\ntodo\n\n\n\n\nsplitmesh6¶\n\nsplitmesh6¶\n\nTodo\ntodo\n\n\n\n\nSuperLu¶\n\ndefaulttoSuperLu¶\n\nTodo\ntodo\n\n\n\n\nsymmetrizeCSR¶\n\nsymmetrizeCSR¶\n\nTodo\ntodo\n\n\n\n\ntetgen¶\nRefer to the Tetgen documentation for more informations.\n\ntetgconvexhull¶\n\nTodo\ntodo\n\n\n\ntetgtransfo¶\n\nTodo\ntodo\n\n\n\ntetg¶\nBuild a 3D mesh from a surface.\n1 mesh3 Th  =  tetg(Th0, [reftet = RefTet], [label = Label], [switch = Switch], [nbofholes = NbOfHoles], [holelist = HoleList], [nbofregions = NbOfRegions], [regionlist = RegionList], [nboffacetcl = NbOfFaceTcl], [facetcl = FaceTcl])\n\n\n\nTodo\ntodo\n\n\n\ntetgreconstruction¶\n\nTodo\ntodo\n\n\n\n\nUMFPACK64¶\n\ndefaulttoUMFPACK64¶\n\nTodo\ntodo\n\n\n\n\nVTK_writer_3d¶\n\nVtkaddmesh¶\n\nTodo\ntodo\n\n\n\nVtkaddscalar¶\n\nTodo\ntodo\n\n\n\n\nVTK_writer¶\n\nVtkaddmesh¶\n\nTodo\ntodo\n\n\n\nVtkaddscalar¶\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Functions\n\t\t\tNext topic: Mathematical Models \n\t\t\n\t","l":"references/external-libraries.html"},"54":{"t":"Functions","p":"\n\t\t\n   \nFunctions¶\n\nabs¶\nReturn the absolute value.\n1 real a  =  abs(b);\n\n\nParameters:\n\nb (int, real, complex, fespace function, real[int] or real[int, int])\n\nOutput:\n\na (int, real, real[int] or real[int, int])\n\n\n\nacos¶\n\\(\\arccos\\) function.\n1 real theta  =  acos(x);\n\n\nParameter:\n\nx (real, real[int] or real[int, int])\n\nOutput:\n\ntheta (real, real[int] or real[int, int])\n\n\n\n\nFig. 123 arccos function¶\n\n\n\n\nacosh¶\n1 real theta  =  acosh(x);\n\n\n\n\\[\\arccosh(x)  =  \\ln\\left(x + \\sqrt{x^2-1}\\right)\\]\nParameter:\n\nx (real)\n\nOutput:\n\ntheta (real)\n\n\n\n\nFig. 124 arccosh function¶\n\n\n\n\nadaptmesh¶\nMesh adaptation function.\n1 mesh Thnew  =  adaptmesh(Th, [fx, fy], hmin = HMin, hmax = HMax, err = Err, errg = ErrG, nbvx = NbVx, nbsmooth = NbSmooth, nbjacoby = NbJacoby, ratio = Ratio, omega = Omega, iso = Iso, abserror = AbsError, cutoff = CutOff, verbosity = Verbosity, inquire = Inquire, splitpbedge = SplitPbEdge, maxsubdiv = MaxSubdiv, rescaling = Rescaling, keepbackvertices = KeepBackVertices, IsMetric = isMetric, power = Power, thetamax = ThetaMax, splitin2 = SplitIn2, metric = Metric, nomeshgeneration = NoMeshGeneration, periodic = Periodic);\n\n\nParameters:\n\nTh (mesh) Mesh to refine\n[fx, fy] (func or fespace function), scalar or vectorial Function to follow for the mesh adaptation\nhmin =  (real) Minimum edge size\nhmax =  (real) Maximum edge size\nerr =  (real) Error level (P1 interpolation)\nerrg =  (real) Relative geometrical error\nnbvx =  (int) Maximum number of vertices\nnbsmooth =  (int) Number of smoothing iterations\nnbjacoby =  (int) Number of iterations for the smoothing procedure\nratio =  (real) Ratio of the triangles\nomega =  (real) Relaxation parameter for the smoothing procedure\niso =  (bool) Isotropic adaptation (if true)\nabserror =  (bool) Error (if true) - Relative error (if false)\ncutoff =  (real) Lower limit of the relative error evaluation\nverbosity =  (real) Verbosity level\ninquire =  (bool) If true, inquire graphically\nsplitpbedge =  (bool) If true, split all internal edges in half\nmaxsubdiv =  (int) Bound the maximum subdivisions\nrescaling =  (bool) Rescale the function in [0, 1]\nkeepbackvertices =  (bool) If true, try to keep vertices of the original mesh\nIsMetric =  (bool) If true, the metric is defined explicitly\npower =  (int) Exponent of the Hessian\nthetamax =  (int) Minimum corner angle (in degree)\nsplitin2 =  (bool) Split all triangles into 4 sub-triangles if true\nmetric =  ([real[int], real[int], real[int]]) Array of 3 real arrays defining the metric\nnomeshgeneration =  (bool) If true, the mesh is not generated\nperiodic =  (real[int, int]) Build an adapted periodic mesh\n\nOutput:\n\nThnew (mesh or mesh3)\n\n\n\nadj¶\nAdjacent triangle of the triangle \\(k\\) by the edge \\(e\\)\n1 int T  =  Th[k].adj(e);\n\n\nParameter:\n\ne (int) Edge number\n\nOutput:\n\nT (int) Triangle number\n\n\n\nAffineCG¶\nAffine conjugate gradient solver\nUsed to solve a problem like \\(Ax = b\\)\n1 int Conv  =  AffineCG(A, x, precon = Precon, nbiter = NbIter, eps = Eps, veps = VEps, stop = Stop);\n\n\nParameters:\n\nA (matrix) Matrix of the problem \\(Ax = b\\)\nx (real[int]) Solution vector\nprecon =  (real[int]) Preconditionning function\nnbiter =  (int) Maximum number of iterations\neps =  (real)\nConvergence criterion\nIf \\(\\varepsilon>0\\): test \\(||A(x)||_p \\leq \\epsilon||A(x_0)||_p\\)\nIf \\(\\varepsilon<0\\): test \\(||A(x)||_p^2 \\leq |\\epsilon|\\)\n\nveps =  (real) Same as eps, but return -eps\nstop =  (func) Convergence criterion as a function\nPrototype is func bool StopFunc (int Iter, real[int] U, real[int] g)\nu: current solution, g: current gradient (not preconditionned)\n\n\nOutput:\n\nConv (int) 0: converged - !0: not converged\n\n\n\nAffineGMRES¶\nAffine GMRES solver\nParameters and output are the same as AffineCG\n\n\narg¶\nReturn the argument of a complex number.\n1 real a  =  arg(c);\n\n\nParameters:\n\nc (complex)\n\nOutput:\n\nr (real)\n\n\n\nasin¶\n\\(\\arcsin\\) function.\n1 real theta  =  asin(x);\n\n\nParameter:\n\nx (real, real[int] or real[int, int])\n\nOutput:\n\ntheta (real, real[int] or real[int, int])\n\n\n\n\nFig. 125 arcsin function¶\n\n\n\n\nasinh¶\n1 real theta  =  asinh(x);\n\n\n\n\\[\\arcsinh(x)  =  \\ln\\left(x + \\sqrt{x^2+1}\\right)\\]\nParameter:\n\nx (real)\n\nOutput:\n\ntheta (real)\n\n\n\n\nFig. 126 arcsinh function¶\n\n\n\n\nassert¶\nVerify if a condition is true (same as C), if not the program stops.\n1 assert(x =  = 0)\n\n\nParameter:\n\nBoolean condition\n\nOutput:\n\nNone\n\n\n\natan¶\n\\(\\arctan\\) function.\n1 real theta  =  atan(x);\n\n\nParameter:\n\nx (real)\n\nOutput:\n\ntheta (real)\n\n\n\n\nFig. 127 arctan function¶\n\n\n\n\natan2¶\n\\(\\displaystyle{\\arctan\\left(\\frac{y}{x}\\right)}\\) function, returning the correct sign for \\(\\theta\\).\n1 real theta  =  atan2(y, x)\n\n\nParameter:\n\nx (real)\n\nOutput:\n\ntheta (real)\n\n\n\natanh¶\n1 real theta  =  atanh(x);\n\n\nParameter:\n\nx (real)\n\nOutput:\n\ntheta (real)\n\n\n\n\nFig. 128 arctanh function¶\n\n\n\n\natoi¶\nConvert a string to an interger.\n1 int a  =  atoi(s);\n\n\nParameter:\n\ns (string)\n\nOutput:\n\na (int)\n\n\n\natof¶\nConvert a string to a real.\n1 real a  =  atof(s);\n\n\nParameter:\n\ns (string)\n\nOutput:\n\na (real)\n\n\n\nBFGS¶\n\nTodo\ntodo\n\n\n\nbuildmesh¶\nBuild a 2D mesh using border elements.\n1 mesh Th  =  buildmesh(b1(nn) + b2(nn) + b3(nn) + b4(nn),[points = Points], ][nbvx = Nbvx], [fixedborder = FixedBorder]);\n\n\nParameters:\n\nb1, b2, b3, b4 (border)\nGeometry border, b1(nn) means b1 border discretized by nn vertices\n\npoints (real[int, int]) [Optional]\nSpecify a set of points\nThe size of Points array is (nbp, 2), containing a set of nbp points with x and y coordinates\n\nnbvx =  (int) [Optional]\nMaximum number of vertices Default: 9000\n\nfixedborder =  (bool) [Optional]\nIf true, mesh generator cannot change the boundary mesh\nDefault: false\n\n\nOutput:\n\nTh (mesh) Resulting mesh\n\n\n\nceil¶\nRound fractions up of \\(x\\).\n1 int c  =  ceil(x);\n\n\nParameter:\n\nx (real)\n\nOutput:\n\nc (int)\n\n\n\nchange¶\nChange a property of a mesh.\n1 int[int] L  =  [0, 1];\n2 Thnew  =  change(Th, label = L);\n\n\nParameters:\n\nTh (mesh) Original mesh\nlabel =  L (int[int]) Pair of old and new label\nregion =  R (int[int]) Pair of old and new region\nflabel =  l (func int) Function of int given the new label\nfregion =  r (func int) Function of int given the new region\n\nOutput:\n\nThnew (mesh) Mesh with changed\nparameters\n\n\n\ncheckmovemesh¶\nCheck a movemesh without mesh generation.\n1 real minT  =  checkmovemesh(Th, [Dx, Dy]);\n\n\nParameters:\nSame as movemesh\nOutput:\n\nminT (real) Minimum triangle area\n\n\n\nchi¶\nCharacteristic function of a mesh.\n1 int IsInMesh  =  chi(Th)(x, y);\n\n\nParameters:\n\nTh (mesh or mesh3)\nx (real) Position \\(x\\)\ny (real) Position \\(y\\)\n\nOutput:\n\nIsInMesh (int) 1 if \\((x,y)\\in\\) Th 0 if\n\\((x,y)\\not\\in\\) Th\n\n\n\nclock¶\nGet the clock in second.\n1 real t  =  clock();\n\n\nParameter:\n\nNone\n\nOutput:\n\nt (real) Current CPU time\n\n\n\ncomplexEigenValue¶\nSame as EigenValue for complex problems.\n\n\nconj¶\nCaculate the conjuguate of a complex number.\n1 complex C1  =  1 + 1i;\n2 complex C2  =  conj(C1);\n\n\nParameter:\n\nC1 (complex) Complex number\n\nOutput:\n\nC2 (complex) Conjuguate of C1\n\n\n\nconvect¶\nCharacteristics Galerkin method.\n1 real cgm  =  convect([Ux, Uy], dt, c);\n2 real cgm  =  convect([Ux, Uy, Uz], dt, c);\n\n\nCompute \\(c\\circ \\mathbf{X}\\) with \\(\\mathbf{X}(\\mathbf{x})  =  \\mathbf{x}_{\\tau}\\) and \\(\\mathbf{x}_{\\tau}\\) is the solution of:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\dot{\\mathbf{x}}_{\\tau} & = & \\mathbf{u}(\\mathbf{x}_{\\tau})\\\\\n    \\mathbf{x}_{\\tau} & = & \\mathbf{x}\n\\end{array}\\end{split}\\]\nParameters:\n\nux (fespace function) Velocity: \\(x\\) component\nuy (fespace function) Velocity: \\(y\\) component\nuz (fespace function) 3D only\nVelocity: \\(z\\) component\n\ndt (real) Time step\nc (fespace function) Function to convect\n\nOutput:\n\ncgm (real) Result\n\n\n\ncopysign¶\nC++ copysign function.\n1 real s  =  copysign(a, b);\n\n\n\n\ncos¶\n\\(\\cos\\) function.\n1 real x  =  cos(theta);\n\n\nParameters:\n\ntheta (real or complex)\n\nOutput:\n\nx (real or complex)\n\n\n\n\nFig. 129 cos function¶\n\n\n\n\ncosh¶\n\\(\\cosh\\) function.\n1 real x  =  cosh(theta);\n\n\n\n\\[\\cosh(x)  =  \\frac{e^x + e^{-x}}{2}\\]\nParameters:\n\ntheta (real)\n\nOutput:\n\nx (real)\n\n\n\ndiffnp¶\nArithmetic useful function.\n1 diffnp(a, b)  =  (a<0)&(0<b) ? (b-a) : 0;\n\n\n\n\ndiffpos¶\nArithmetic useful function.\n1 diffpos(a, b)  =  max(b-a, 0);\n\n\n\n\ndist¶\nArithmetic useful function.\n1 dist(a, b)  =  sqrt(a^2 + b^2);\n2 dist(a, b, c)  =  sqrt(a^2 + b^2 + c^2);\n\n\n\n\ndumptable¶\nShow all types, operators and functions in FreeFEM.\n1 dumptable(out);\n\n\nParameters:\n\nout (ostream) cout of ofstream file.\n\nOutput:\n\nNone\n\n\n\ndx¶\n\\(x\\) derivative.\n1 Uh up  =  dx(u);\n\n\n\n\\[\\frac{\\partial u}{\\partial x}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nup (fespace function)\n\n\n\ndxx¶\n\\(x\\) double derivative.\n1 Uh upp  =  dxx(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial x^2}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndxy¶\n\\(xy\\) derivative.\n1 Uh upp  =  dxy(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial x\\partial y}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndxz¶\n\\(xz\\) derivative.\n1 Uh upp  =  dxz(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial x\\partial z}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndy¶\n\\(y\\) derivative.\n1 Uh up  =  dy(u);\n\n\n\n\\[\\frac{\\partial u}{\\partial y}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndyx¶\n\\(yx\\) derivative.\n1 Uh upp  =  dyx(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial y\\partial x}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndyy¶\n\\(y\\) double derivative.\n1 Uh upp  =  dyy(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial x^2}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndyz¶\n\\(yz\\) derivative.\n1 Uh upp  =  dyz(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial y\\partial z}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndz¶\n\\(z\\) derivative.\n1 Uh up  =  dz(u);\n\n\n\n\\[\\frac{\\partial u}{\\partial z}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndzx¶\n\\(zx\\) derivative.\n1 Uh upp  =  dzx(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial z\\partial x}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndzy¶\n\\(zy\\) derivative.\n1 Uh upp  =  dzy(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial z\\partial y}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\ndzz¶\n\\(z\\) double derivative.\n1 Uh upp  =  dzz(u);\n\n\n\n\\[\\frac{\\partial^2 u}{\\partial z^2}\\]\nParameters:\n\nu (fespace function)\n\nOutput:\n\nupp (fespace function)\n\n\n\nEigenValue¶\nCompute the generalized eigenvalue of \\(Au = \\lambda Bu\\).\nThe shifted-inverse method is used by default with sigma = \\(\\sigma\\), the shift of the method.\nThe function EigenValue can be used for either matrices or functions returning a matrix vector product.\nThe use of the matrix version is shown below.\n1 int k  =  EigenValue(A,B,nev =  , sigma =  );\n\n\nParameters:\n\nA, B: matrices of same size\nnev = n: number of desired eigenvalues given by an integer n\nsym = : the problem is symmetric or not\ntol = : the relative accuracy to which eigenvalues are to be determined\nvalue = : an array to store the real part of the eigenvalues\nivalue = : an array to store the imaginary part of the eigenvalues\nvector = : a Finite Element function array to store the eigenvectors\nsigma = : the shift value\nOther parameters are available for more advanced use: see the ARPACK documentation.\n\nOutput: The output is the number of converged eigenvalues, which can be different than the number of requested eigenvalues given by nev = .\nNote that the eigenvalues and the eigenvectors are stored for further purposes using the parameters value =  and vector = .\n\n\nemptymesh¶\nBuild an empty mesh.\nUseful to handle Lagrange multipliers in mixed and Mortar methods.\n1 mesh eTh  =  emptymesh(Th, ssd);\n\n\nParameters:\n\nTh (mesh) Mesh to empty\nssd (int[int]) Pseudo subregion label\n\nOutput:\n\neTh (mesh) Empty mesh\n\n\n\nerf¶\nThe error function:\n\n\\[erf(x)  =  \\frac{2}{\\sqrt{pi}}\\int_{0}^{x}{\\exp(-t^2)dt}\\]\n1 real err  =  erf(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nerr (real)\n\n\n\nerfc¶\nComplementary of the error function:\n\n\\[erfc(x)  =  1-erf(x)\\]\n1 real errc  =  erfc(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nerr (real)\n\n\n\nexec¶\nExecute an external command.\n1 int v  =  exec(command);\n\n\nParameters:\n\ncommand (string) Command to execute\n\nOutput:\n\nv (int) Value returned by the command\n\n\n\nexit¶\nExit function, equivalent to return.\n1 exit(N);\n\n\nParameters:\n\nN (int) Return value\n\nOutput:\n\nNone\n\n\n\nexp¶\nExponential function.\n1 real a  =  exp(b);\n\n\nParameters:\n\nb (real or complex)\n\nOutput:\n\na (real or complex)\n\n\n\nfdim¶\nPositive difference (cmath function).\n1 real fd  =  fdim(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\nfd (real) If \\(x > y\\), return \\(x-y\\)If \\(x \\leq y\\), return \\(0\\)\n\n\n\nfloor¶\nFloor function.\n1 real a  =  floor(b);\n\n\nReturn the largest integer value not greater than b.\nParameters:\n\nb (real)\n\nOutput:\n\na (real)\n\n\n\nfmax¶\nMaximum (cmath function).\n1 real Max  =  fmax(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\nMax (real)\n\n\n\nfmin¶\nMinimum (cmath function).\n1 real Min  =  fmin(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\nMin (real)\n\n\n\nfmod¶\nRemainder of \\(a/b\\) (cmath function).\n1 real Mod  =  fmod(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\nMod (real)\n\n\n\nimag¶\nImaginary part of a complex number.\n1 complex c  =  1. + 1i;\n2 real Im  =  imag(c);\n\n\n\n\nint1d¶\n1D integral.\n1 int1d(Th, [Label], [qfe = Qfe], [qforder = Qforder])(\n2     ...\n3 )\n\n\nUsed in problem, solve or varf definition to impose a boundary condition only (FreeFEM does not support 1D simulation), or outside to calculate a quantity.\nParameters:\n\nTh (mesh) Mesh where the integral is calculated\nLabel (int) [Optional]\nLabel of the 1D border Default: all borders of the mesh\n\nqfe =  (quadrature formula) [Optional]\nQuadrature formula, see quadrature formulae\n\nqforder =  (quadrature formula) [Optional]\nQuadrature order, see quadrature formulae\n\n\nOutput:\n\nDepending on the situation: In a problem, solve or varf definition: Non relevant.\nOutside: real (example: real l  =  int1d(Th, 1)(1.);).\n\n\n\nWarning\nIn a problem, solve or varf definition, the content of int1d must be a linear or bilinear form.\n\n\n\nint2d¶\n2D integral.\n1 int2d(Th, [Region], [qfe = Qfe], [qforder = Qforder])(\n2     ...\n3 )\n\n\nOr\n1 int2d(Th, [Label], [qfe = Qfe], [qforder = Qforder])(\n2     ...\n3 )\n\n\nUsed in problem, solve or varf definition to: - Calculate integral in 2D simulation - Impose a boundary condition in 3D simulation Or outside to calculate a quantity.\nParameters:\n\nTh (mesh or mesh3) Mesh where the integral is calculated\nRegion (int) [Optional] Label of the 2D region (2D simulation) Default: all regions of the mesh\nLabel (int) [Optional] Label of the 2D border (3D simulation) Default: all borders of the mesh\nqfe =  (quadrature formula) [Optional]\nQuadrature formula, see quadrature formulae\n\nqforder =  (quadrature formula) [Optional]\nQuadrature order, see quadrature formulae\n\n\nOutput:\n\nDepending on the situation: In a problem, solve or varf definition: Non relevant. Outside: real (example: real s  =  int2d(Th, 1)(1.);).\n\n\nWarning\nIn a problem, solve or varf definition, the content of the int2d must be a linear or bilinear form.\n\n\n\nint3d¶\n3D integral.\n1 int3d(Th, [Region], [qfe = Qfe], [qforder = Qforder])(\n2     ...\n3 )\n\n\nUsed in problem, solve or varf definition to calculate integral in 3D simulation, or outside to calculate a quantity.\nParameters:\n\nTh (mesh3) Mesh where the integral is calculated\nRegion (int) [Optional]\nLabel of the 3D region\nDefault: all regions of the mesh\n\nqfe =  (quadrature formula) [Optional]\nQuadrature formula, see quadrature formulae\n\nqforder =  (quadrature formula) [Optional]\nQuadrature order, see quadrature formulae\n\n\nOutput:\n\nDepending on the situation: In a problem, solve or varf definition: Non relevant. Outside: real (example: real v  =  int3d(Th, 1)(1.);).\n\n\nWarning\nIn a problem, solve or varf definition, the content of the int3d must be a linear or bilinear form.\n\n\n\nintalledges¶\nIntegral on all edges.\n1 intalledges(Th, [Region])(\n2     ...\n3 )\n\n\nParameters:\n\nTh (mesh) Mesh where the integral is calculated\nRegion (int) [Optional]\nLabel of the region\nDefault: all regions of the mesh\n\n\nOutput:\n\nNon relevant\n\n\n\nintallfaces¶\nIntergal on all faces.\nSame as intalledges for mesh3.\n\n\ninterpolate¶\nInterpolation operator from a finite element space to another.\n1 matrix I  =  interpolate(Wh, Vh, [inside = Inside], [t = T], [op = Op], [U2Vc = U2VC]);\n\n\nParameters:\n\nWh (fespace) Target finite element space\nVh (fespace) Original finite element space\ninside =  (bool) If true, create a zero extension outside the Vh domain\nt =  (bool) If true, return the transposed matrix\nop =  (int) 0: interpolate the function (default value) 1: interpolate \\(\\partial_x\\) 2: interpolate \\(\\partial_y\\) 3: interpolate \\(\\partial_z\\)\nU2Vc =  (int[int]) Array of the same size of Wh describing which component of Vhis interpolated in Wh\n\nOutput:\n\nI (matrix) Interpolation matrix operator\n\n\n\ninvdiff¶\nArithmetic useful function.\n1 invdiff(a, b)  =  (abs(a-b) < 10^(-30)) ? (a-b) : 1/(a-b)\n2 invdiff(a, b, e)  =  (abs(a-b) < e) ? (a-b) : 1/(a-b)\n\n\n\n\ninvdiffnp¶\nArithmetic useful function.\n1 invdiffnp(a, b)  =  (a<0)&(0<b) ? 1/(b-a) : 0\n\n\n\n\ninvdiffpos¶\nArithmetic useful function.\n1 invdiffpos(a, b)  =  (a<b) ? 1./(b-a) : 0\n\n\n\n\nisInf¶\nThe C++ isInf function.\n1 bool b  =  isInf(a);\n\n\n\n\nisNaN¶\nThe C++ isNan function.\n1 bool b  =  isNaN(a);\n\n\n\n\nisNormal¶\nThe C++ isNormal function.\n\n\nj0¶\nBessel function of first kind, order 0.\n1 real b  =  j0(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nb (real)\n\n\n\nj1¶\nBessel function of first kind, order 1.\n1 real b  =  j1(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nb (real)\n\n\n\njn¶\nBessel function of first kind, order n.\n1 real b  =  jn(n, x);\n\n\n\n\\[J_n(x)  =  \\sum_{p = 0}^{\\infty}\\frac{(1)^p}{p!(n+p)!}\\left(\\frac{x}{2}\\right)^{2p+n}\\]\nParameters:\n\nn (int)\nx (real)\n\nOutput:\n\nb (real)\n\n\n\njump¶\nJump function across an edge.\n1 intalledges(\n2     ... jump(c) ...\n3 )\n\n\nParameters:\n\nc (fespace function) Discontinuous function\n\nOutput:\n\nNon relevant\n\n\n\nLinearCG¶\nLinear CG solver\nParameters and output are the same as AffineCG\n\n\nLinearGMRES¶\nLinear GMRES solver\nParameters and output are the same as AffineCG\n\n\nlgamma¶\nNatural logarithm of the absolute value of the \\(\\Gamma\\) function of \\(x\\).\n1 real lg  =  lgamma(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nlg (real)\n\n\n\nlog¶\nNatural logarithm.\n1 real l  =  log(x);\n\n\nParameters:\n\nx (real or complex)\n\nOutput:\n\nl (real or complex)\n\n\nNote\nComplex value\nFor complex value, the log function is defined as:\n\n\\[\\log(z)  =  \\log(|z|) + i\\arg(z)\\]\n\n\n\nlog10¶\nCommon logarithm.\n1 real l  =  log10(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nl (real)\n\n\n\nlrint¶\nInteger value nearest to \\(x\\).\n1 int l  =  lrint(a);\n\n\nParameters:\n\na (real)\n\nOutput:\n\nl (int)\n\n\n\nlround¶\nRound a value, and return an integer value.\n1 int l  =  lround(a);\n\n\nParameters:\n\na (real)\n\nOutput:\n\nl (int)\n\n\n\nltime¶\nReturn the current time since the Epcoh.\n1 int t  =  ltime();\n\n\nParameter:\n\nNone\n\nOutput:\n\nt (int)\n\n\n\nmax¶\nMaximum value of two, three or four values.\n1 real m  =  max(a, b);\n2 real m  =  max(a, b, c);\n3 real m  =  max(a, b, c, d);\n\n\nParameters:\n\na (int or real)\nb (int or real)\nc (int or real) [Optional]\nd (int or real) [Optional]\n\nOutput:\n\nb (int or real)\n\n\n\nmin¶\nMinimum value of two, three or four values.\n1 real m  =  min(a, b);\n2 real m  =  min(a, b, c);\n3 real m  =  min(a, b, c, d);\n\n\nParameters:\n\na (int or real)\nb (int or real)\nc (int or real) [Optional]\nd (int or real) [Optional]\n\nOutput:\n\nb (int or real)\n\n\n\nmovemesh¶\nMove a mesh.\n1 mesh MovedTh  =  movemesh(Th, [Dx, Dy]);\n2 mesh3 MovedTh  =  movemesh(Th, [Dx, Dy, Dz], [region = Region], [label = Label], [facemerge = FaceMerge], [ptmerge = PtMerge], [orientation = Orientation]);\n\n\nParameters:\n\nTh (mesh of mesh3) Mesh to move\nDx (fespace function) Displacement along \\(x\\)\nDy (fespace function) Displacement along \\(y\\)\nDz (fespace function) 3D only\nDisplacement along \\(z\\)\n\nregion =  (int) [Optional] 3D only\nSet label to tetrahedra\n\nlabel =  (int[int]) [Optional] 3D only\nSet label of faces (see change for more information)\n\nfacemerge =  (int) [Optional] 3D only\nIf equal to 1, some faces can be merged during the mesh moving Default: 1\n\nptmerge =  (real) [Optional] 3D only\nCriteria to define when two points merge\n\norientation =  (int) [Optional] 3D only\nIf equal to 1, allow orientation reverse if tetrahedra is not positive Default: 1\n\n\nOutput:\n\nMovedTh (mesh or mesh3) Moved mesh\n\n\n\nNaN¶\nC++ nan function.\n1 real n  =  NaN([String]);\n\n\nParameters:\n\nString (string) Default: \"\"\n\n\n\nNLCG¶\nNon-linear conjugate gradient.\nParameters and output are the same as AffineCG\n\n\non¶\nDirichlet condition function.\n1 problem (u, v)\n2     ...\n3     + on(Label, u = uD)\n4     ...\n\n\n\nWarning\nUsed only in problem, solve and varf\n\nParameters:\n\nLabel (int or border in 2D)\nBoundary reference where to impose the Dirichlet condition\n\nuD (fespace function, func or real or int)\nDirichlet condition (u is an unknown of the problem)\n\n\nOutput:\n\nNon relevant\n\n\n\nplot¶\nPlot meshes and results.\n1 plot([Th], [u], [[Ux, Uy, Uz]], [wait = Wait], [ps = PS], [coef = Coef], [fill = Fill], cmm = [Cmm], [value = Value], [aspectratio = AspectRatio], [bb = Bb], [nbiso = NbIso], [nbarrow = NbArrow], [viso = VIso], [varrow = VArrow], [bw = Bw], [grey = Grey], [hsv = Hsv], [boundary = Boundary], [dim = Dim], [prev = Prev], [WindowIndex = WI]);\n\n\n\nNote\nOnly one of Th, u or [Ux, Uy] / [Ux, Uy, Uz] is needed for the plot command.\n\nParameters:\n\nTh (mesh or mesh3) Mesh to display\nu (fespace function) Scalar fespace function to display\n[Ux, Uy] / [Ux, Uy, Uz] (fespace function array) Vectorial fespace function to display\n[Ux, Uy] ([real[int], real[int]]) Couple a real array to display a curve\nwait =  (bool) If true, wait before continue\nps =  (string) Name of the file to save the plot (.ps or .eps format)\ncoef =  (real) Arrow size\nfill =  (bool) If true, fill color between isovalue (usable with scalar fespace function only)\ncmm =  (string) Text comment in the graphic window\nvalue =  (bool) If true, show the value scale\naspectratio =  (bool) If true, preserve the aspect ratio\nbb =  ([real[int], real[int]]) Specify a bounding box using two corner points\nnbiso =  (int) Number of isovalues\nnbarrow =  (int) Number of colors of arrows values\nviso =  (real[int]) Specify an array of isovalues\nvarrow =  (real[int]) Specify an array of arrows values color\nbw =  (bool) If true, the plot is in black and white\ngrey =  (bool) If true, the plot is in grey scale\nhsv =  (real[int]) Array of \\(3\\times n\\) values defining HSV color model \\([h_1, s_1, v_1, ..., h_n, s_n, v_n]\\)\nboundary =  (bool) If true, display the boundary of the domain\ndim =  (int) Set the dimension of the plot: 2 or 3\nprev =  (bool) Use the graphic state of the previous state\nWindowIndex =  (int) Specify window index for multiple windows graphics\n\nOutput:\n\nNone\n\nSee the plot section for in-graphic commands.\n\n\npolar¶\nPolar coordinates.\n1 complex p  =  polar(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\np (complex)\n\n\n\npow¶\nPower function.\n1 real p  =  pow(a, b);\n\n\n\\(p = a^b\\)\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\np (real)\n\n\n\nprojection¶\nArithmetic useful function.\n1 real p  =  projection(a, b, x);\n\n\nProjection is equivalent to:\n1 projection(a, b, x)  =  min(max(a, x), b)*(a < b) + min(max(b, x), a)*(1-(a < b));\n\n\nParameters:\n\na (real)\nb (real)\nx (real)\n\nOutput:\n\np (real)\n\n\n\nrandinit¶\nInitialize the state vector by using a seed.\n1 randinit(seed);\n\n\nParameters:\n\nseed (int)\n\nOutput:\n\nNone\n\n\n\nrandint31¶\nGenerate unsigned int (31 bits) random number.\n1 int r  =  randint31();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (int)\n\n\n\nrandint32¶\nGenerate unsigned int (32 bits) random number.\n1 int r  =  randint32();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (int)\n\n\n\nrandreal1¶\nGenerate uniform real in \\([0, 1]\\) (32 bits).\n1 real r  =  randreal1();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (real)\n\n\n\nrandreal2¶\nGenerate uniform real in \\([0, 1)\\) (32 bits).\n1 real r  =  randreal2();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (real)\n\n\n\nrandreal3¶\nGenerate uniform real in \\((0, 1)\\) (32 bits).\n1 real r  =  randreal3();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (real)\n\n\n\nrandres53¶\nGenerate uniform real in \\([0, 1)\\) (53 bits).\n1 real r  =  randres53();\n\n\nParameters:\n\nNone\n\nOutput:\n\nr (real)\n\n\n\nreadmesh¶\nRead a 2D mesh file at different formats (see Mesh Generation).\n1 mesh Th  =  readmesh(MeshFileName);\n\n\nParameters:\n\nMeshFileName (string)\n\nOutput:\n\nTh (mesh)\n\n\n\nreadmesh3¶\nRead a 3D mesh file at different formats (see Mesh Generation).\n1 mesh3 Th  =  readmesh3(MeshFileName);\n\n\nParameters:\n\nMeshFileName (string)\n\nOutput:\n\nTh (mesh3)\n\n\n\nreal¶\nReturn the real part of a complex number.\n1 real r  =  real(c);\n\n\nParameters:\n\nc (complex)\n\nOutput:\n\nr (real)\n\n\n\nrint¶\nInteger value nearest to \\(x\\) (real value).\n1 real r  =  rint(a);\n\n\nParameters:\n\na (real)\n\nOutput:\n\nr (real)\n\n\n\nround¶\nRound a value (real value).\n1 real r  =  round(a);\n\n\nParameters:\n\na (real)\n\nOutput:\n\nr (real)\n\n\n\nsavemesh¶\nSave a 2D or 3D mesh in different formats (see Mesh Generation 2D and Mesh Generation 3D).\n1 savemesh(Th, MeshFileName);\n\n\nParameters:\n\nTh (mesh or mesh3)\nMeshFileName (string)\n\nOutput:\n\nNone\n\n\n\nset¶\nSet a property to a matrix. See matrix.\n\n\nsign¶\nSign of a value.\n1 int s  =  sign(a);\n\n\nParameters:\n\na (real or int)\n\nOutput:\n\ns (int)\n\n\n\nsignbit¶\nC++ signbit function\n1 int s  =  signbit(a);\n\n\n\n\nsin¶\n\\(\\sin\\) function.\n1 real x  =  sin(theta);\n\n\nParameter:\n\ntheta (real or complex)\n\nOutput:\n\nx (real or complex)\n\n\n\n\nFig. 130 sin function¶\n\n\n\n\nsinh¶\n\\(\\sinh\\) function.\n1 real x  =  sinh(theta);\n\n\n\n\\[\\sinh(x)  =  \\frac{e^{x} - e^{-x}}{2}\\]\nParameter:\n\ntheta (real)\n\nOutput:\n\nx (real)\n\n\n\n\nFig. 131 sinh function¶\n\n\n\n\nsort¶\nSort two array in parallel\n1 sort(A, B);\n\n\nParameters:\n\nA (real[int])\nB (int[int])\n\nOutput:\n\nNone\n\nA is sorted in ascending order, B is sorted as A.\n\n\nsplitmesh¶\nSplit mesh triangles according to a function.\n1 Th  =  splitmesh(Th0, f);\n\n\nParameters:\n\nTh0 (mesh)\nf (func or fespace function)\n\nOutput:\n\nTh (mesh)\n\n\n\nsqrt¶\nSquare root\n1 real s  =  sqrt(a);\n\n\nParameter:\n\na (real)\n\nOutput:\n\ns (real)\n\n\n\nsquare¶\n\nSquare of a number.\n\n1 real S  =  square(a);\n\n\nParameter:\n\na (real)\n\nOutput:\n\nS (real)\n\n\nBuild a structured square mesh.\n\n1 mesh Th  =  square(nnX, nnY, [[L*x, H*y]], [flags = Flags], [label = Labels], [region = Region]);\n\n\nParameters:\n\nnnX (int) Discretization along \\(x\\)\nnnY (int) Discretization along \\(y\\)\nL (real) [Optional] Length along \\(x\\)\nH (real) [Optional] Height along \\(y\\)\nflags =  (int) [Optional]\nlabel =  (int[int]) [Optional]\nregion =  (int) [Optional]\n\nStructured mesh type, see Mesh Generation chapter for more information\n\n\n\nOutput:\n\nTh (mesh)\n\n\n\nstoragetotal¶\n1 int total  =  storagetotal();\n\n\n\n\nstorageused¶\n1 int used  =  storageused();\n\n\n\n\nstrtod¶\nC++ strtod function\n1 string text  =  \"10.5\";\n2 real number  =  strtod(text);\n\n\nParameter:\n\ntext (string)\n\nOutput:\n\nnumber (real)\n\n\n\nstrtol¶\nC++ strtol function\n1 string text  =  \"10\";\n2 int number  =  strtol(text);\n3 \n4 int base  =  16;\n5 int number  =  strtol(text, base);\n\n\nParameter:\n\ntext (string)\nbase (int) Base [Optional]\n\nOutput:\n\nnumber (int)\n\n\n\nswap¶\nSwap values.\n1 swap(a, b);\n\n\nParameters:\n\na (real)\nb (real)\n\nOutput:\n\nNone\n\n\n\nsystem¶\nExecute a system command.\n1 int Res  =  system(Command);\n\n\nParameter:\n\nCommand (string) System command\n\nOutput:\n\nRes (int) Value returned by the system command\n\n\nNote\nOn Windows, the full path of the command is needed. For example, to execute ls.exe:\n1 int Res  =  exec(\"C:\\\\cygwin\\\\bin\\\\ls.exe\");\n\n\n\n\n\ntan¶\n\\(\\tan\\) function.\n1 real x  =  tan(theta);\n\n\nParameter:\n\ntheta (real)\n\nOutput:\n\nx (real)\n\n\n\n\nFig. 132 tan function¶\n\n\n\n\ntanh¶\n\\(\\tanh\\) function.\n1 real x  =  tanh(theta);\n\n\nParameter:\n\ntheta (real)\n\nOutput:\n\nx (real)\n\n\n\n\nFig. 133 tanh function¶\n\n\n\n\ntgamma¶\nCalculate the \\(\\Gamma\\) function of \\(x\\).\n1 real tg  =  tgamma(x);\n\n\nParameter:\n\nx (real)\n\nOutput:\n\ntg (real)\n\n\n\ntime¶\nReturn the current time (C++ function).\n1 real t  =  time();\n\n\nParameter:\n\nNone\n\nOutput:\n\nt (real)\n\n\n\ntrace¶\nMatrix trace\n1 real tr  =  trace([[1, 2], [3, 4]]);\n\n\nParameters:\n\nMatrix\n\nOutput:\n\nTrace of the matrix (real)\n\n\n\ntrunc¶\nSplit triangle of a mesh.\n1 mesh Th  =  trunc(Th0, R, [split = Split], [label = Label]);\n\n\nParameters:\n\nTh0 (mesh)\nR (bool or int) Split triangles where R is true or different from 0\nsplit =  (int) [Optional]\nLevel of splitting Default: 1\n\nlabel =  (int) [Optional]\nLabel number of new boundary item Default: 1\n\n\nOutput:\n\nTh (mesh)\n\n\n\ny0¶\nBessel function of second kind, order 0.\n1 real B  =  y0(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nb (real)\n\n\n\ny1¶\nBessel function of second kind, order 1.\n1 real B  =  y1(x);\n\n\nParameters:\n\nx (real)\n\nOutput:\n\nb (real)\n\n\n\nyn¶\nBessel function of second kind, order n.\n1 real B  =  yn(n, x);\n\n\n\n\\[Y_n(x)  =  \\lim_{\\lambda\\rightarrow n}{\\frac{J_{\\lambda}(x)\\cos(\\lambda\\pi)-J_{-\\lambda}(x)}{\\sin(\\lambda\\pi)}}\\]\nParameters:\n\nn (int)\nx (real)\n\nOutput:\n\nb (real)\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: I/O\n\t\t\tNext topic: External libraries \n\t\t\n\t","l":"references/functions.html"},"55":{"t":"Global variables","p":"\n\t\t\n   \nGlobal variables¶\n\narea¶\nArea of the current triangle.\n1 fespace Vh0(Th, P0);\n2 Vh0 A  =  area;\n\n\n\n\nARGV¶\nArray that contains all the command line arguments.\n1 for (int i  =  0; i < ARGV.n; i++)\n2     cout << ARGV[i] << endl;\n\n\nSee Command line arguments example for a complete example.\n\n\nBoundaryEdge¶\nReturn 1 if the current edge is on a boundary, 0 otherwise.\n1 real B  =  int2d(Th)(BoundaryEdge);\n\n\n\n\nCG¶\nConjugate gradient solver.\nUsable in problem and solve definition\n1 problem Laplacian (U, V, solver = CG)  =  ...\n\n\nOr in matrix construction\n1 matrix A  =  vLaplacian(Uh, Uh, solver = CG);\n\n\nOr in set function\n1 set(A, solver = CG);\n\n\n\n\nCholesky¶\nCholesky solver.\n\n\nCrout¶\nCrout solver.\n\n\nedgeOrientation¶\nSign of \\(i-j\\) if the current edge is \\([q_i, q_j]\\).\n1 real S  =  int1d(Th, 1)(edgeOrientation);\n\n\n\n\nfalse¶\nFalse boolean value.\n1 bool b  =  false;\n\n\n\n\nGMRES¶\nGMRES solver (Generalized minimal residual method).\n\n\nhTriangle¶\nSize of the current triangle.\n1 fespace Vh(Th, P0);\n2 Vh h  =  hTriangle;\n\n\n\n\ninclude¶\nInclude an external library.\n1 include \"iovtk\"\n\n\n\n\nInternalEdge¶\nReturn 0 if the current edge is on a boundary, 1 otherwise.\n1 real I  =  int2d(Th)(InternalEdge);\n\n\n\n\nlabel¶\nLabel number of a boundary if the current point is on a boundary, 0 otherwise.\n1 int L  =  Th(xB, yB).label;\n\n\n\n\nlenEdge¶\nLength of the current edge.\nFor an edge \\([q_i, g_j]\\), return \\(|q_i-q_j|\\).\n1 real L  =  int1d(Th, 1)(lenEdge);\n\n\n\n\nload¶\nLoad a script.\n1 load \"Element_P3\"\n\n\n\n\nLU¶\nLU solver.\n\n\nN¶\nOutward unit normal at the current point if it is on a curve defined by a border.\nN.x, N.y, N.z are respectively the \\(x\\), \\(y\\) and \\(z\\) components of the normal.\n1 func Nx  =  N.x;\n2 func Ny  =  N.y;\n3 func Nz  =  N.z;\n\n\n\n\nnTonEdge¶\nNumber of adjacent triangles of the current edge.\n1 real nTE  =  int2d(Th)(nTonEdge);\n\n\n\n\nnuEdge¶\nIndex of the current edge in the triangle.\n1 real nE  =  int2d(Th)(nuEdge);\n\n\n\n\nnuTriangle¶\nIndex of the current triangle.\n1 fespace Vh(Th, P0);\n2 Vh n  =  nuTriangle;\n\n\n\n\nP¶\nCurrent point.\n1 real cx  =  P.x;\n2 real cy  =  P.y;\n3 real cz  =  P.z;\n\n\n\n\npi¶\nPi  =  3.14159.\n1 real Pi  =  pi;\n\n\nThis is a real value.\n\n\nregion¶\nRegion number of the current point. If the point is outside, then region  =  =  notaregion where notaregion is a FreeFEM integer constant.\n1 int R  =  Th(xR, yR).region;\n\n\n\n\nsparsesolver¶\nSparse matrix solver.\n\n\ntrue¶\nTrue boolean value.\n1 bool b  =  true;\n\n\n\n\nverbosity¶\nVerbosity level.\n1 int Verbosity  =  verbosity;\n2 verbosity  =  0;\n\n\n0  =  nothing, 1  =  little information, 10  =  a lot of information, …\nThis is an integer value.\n\n\nversion¶\nFreeFEM version.\n1 cout << version << endl;\n\n\n\n\nvolume¶\nVolume of the current tetrahedra.\n1 fespace Vh0(Th, P0);\n2 Vh0 V  =  volume;\n\n\n\n\nx¶\nThe \\(x\\) coordinate at the current point.\n1 real CurrentX  =  x;\n\n\nThis is a real value.\n\n\ny¶\nThe \\(y\\) coordinate at the current point.\n1 real CurrentY  =  y;\n\n\nThis is a real value.\n\n\nz¶\nThe \\(z\\) coordinate at the current point.\n1 real CurrentZ  =  z;\n\n\nThis is a real value.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Types\n\t\t\tNext topic: Quadrature formulae \n\t\t\n\t","l":"references/global-variables.html"},"56":{"t":"Language references","p":"\n\t\t\n   \nLanguage references¶\nIn essence FreeFEM is a compiler: its language is typed, polymorphic, with exception and reentrant.\nEvery variable must be declared of a certain type, in a declarative statement; each statement are separated from the next by a semicolon ;.\nThe language allows the manipulation of basic types integers (int), reals (real), strings (string), arrays (example: real[int]), bi-dimensional (2D) finite element meshes (mesh), 2D finite element spaces (fespace), analytical functions (func), arrays of finite element functions (func[basic_type]), linear and bilinear operators, sparse matrices, vectors , etc.\nFor example:\n1 int i, n  =  20; //i, n are integer\n2 real[int] xx(n), yy(n); //two array of size n\n3 for (i  =  0; i < 20; i++){ //which can be used in statements such as\n4     xx[i]  =  cos(i*pi/10);\n5     yy[i]  =  sin(i*pi/10);\n6 }\n\n\nThe life of a variable is the current block {...}, except the fespace variable, and the variables local to a block are destroyed at the end of the block as follows.\n\nTip\nExample\n 1 real r  =  0.01;\n 2 mesh Th  =  square(10, 10); //unit square mesh\n 3 fespace Vh(Th, P1); //P1 Lagrange finite element space\n 4 Vh u  =  x + exp(y);\n 5 func f  =  z*x + r*log(y);\n 6 plot(u, wait = true);\n 7 { // new block\n 8     real r  =  2; //not the same r\n 9     fespace Vh(Th, P1); //error because Vh is a global name\n10 }// end of block\n11 //here r back to 0.01\n\n\n\nThe type declarations are mandatory in FreeFEM; in the end this feature is an asset because it is easy to make bugs in a language with many implicit types.\nThe variable name is just an alphanumeric string, the underscore character _ is not allowed, because it will be used as an operator in the future.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Examples\n\t\t\tNext topic: Types \n\t\t\n\t","l":"references/index.html"},"57":{"t":"Loops","p":"\n\t\t\n   \nLoops¶\nSee Loop example.\n\nfor¶\nFor loop.\n1 for (int i  =  0; i < N; ++i){\n2     ...\n3 }\n\n\n\n\nif¶\nIf condition.\n1 if (condition){\n2     ...\n3 }\n4 else{\n5     ...\n6 }\n\n\n\n\nelse¶\nSee if.\n\n\nwhile¶\nWhile loop.\n1 while (condition){\n2     ...\n3 }\n\n\n\n\ncontinue¶\nContinue a loop.\n1 for (int i  =  0; i < N; ++i){\n2     ...\n3     if (condition) continue;\n4     ...\n5 }\n\n\n\n\nbreak¶\nBreak a loop.\n1 while (condition1){\n2     ...\n3     if (condition) break;\n4     ...\n5 }\n\n\n\n\ntry¶\nTry a part of code.\n1 try{\n2     ...\n3 }\n4 catch(...){\n5     ...\n6 }\n\n\nSee Basic error handling example and Error handling example.\n\n\ncatch¶\nCatch an error, see try\n\n\nImplicit loop¶\nArray with one index:\n1 for [i, ai : a]\n\n\nIf real[int] a(10), then i = 0:9 and ai is a reference to a[i].\nArray with two indices or matrix:\n1 for [i, j, aij : a]\n\n\nIf real[int] a(10, 11), then i = 0:9, j = 1:10 and aij is a reference to a(i, j).\nSee Implicit loop example.\n\n\n\n\n\t\t\n\t\t\t Previous topic: Operators\n\t\t\tNext topic: I/O \n\t\t\n\t","l":"references/loops.html"},"58":{"t":"Operators","p":"\n\t\t\n   \nOperators¶\n\nAddition operator +¶\n1 real a  =  1. + 2.;\n\n\nWorks for int, real, complex, string, mesh, mesh3, array.\n\n\nIncrement operator ++¶\nPre-increment:\n1 int i  =  0;\n2 ++i;\n\n\nPost-increment:\n1 int i  =  0;\n2 i++;\n\n\n\n\nSubstraction operator -¶\n1 real a  =  1. - 2.;\n\n\nWorks for int, real, complex, array.\n\n\nDecrement operator –¶\nPre-decrement:\n1 int i  =  0;\n2 --i;\n\n\nPost-decrement:\n1 int i  =  0;\n2 i--;\n\n\n\n\nMultiplication operator *¶\n1 real[int] b;\n2 matrix A\n3 real[int] x  =  A^-1*b;\n\n\nWorks for int, real, complex, array, matrix.\n\n\nEqual operator  = ¶\n1 real a  =  1.;\n\n\n\n\nComparison operator  =  = ¶\n1 real a  =  1.;\n2 real b  =  1.;\n3 \n4 cout << (a  =  =  b) << endl;\n\n\n\n\nComparison operator ! = ¶\n1 real a  =  1.;\n2 real b  =  2.;\n3 \n4 cout << (a ! =  b) << endl;\n\n\n\n\nComparison operator <, < = ¶\n1 real a  =  1.;\n2 real b  =  2.;\n3 \n4 cout << (a < b) << endl;\n5 cout << (a < =  b) << endl;\n\n\n\n\nComparison operator >, > = ¶\n1 real a  =  3.;\n2 real b  =  2.;\n3 \n4 cout << (a > b) << endl;\n5 cout << (a > =  b) << endl;\n\n\n\n\nCompound operator + = , - = , * = , / = ¶\n1 real a  =  1;\n2 a + =  2.;\n3 a - =  1.;\n4 a * =  3.;\n5 a / =  2.;\n\n\n\n\nTerm by term multiplication .*¶\n1 matrix A  =  B .* C;\n\n\n\n\nDivision operator /¶\n1 real a  =  1. / 2.;\n\n\nWorks for int, real, complex.\n\n\nTerm by term division ./¶\n1 matrix A  =  B ./ C;\n\n\n\n\nRemainder from the division %¶\n1 int a  =  1 % 2;\n\n\nWorks for int, real.\n\n\nPower operator ^¶\n1 real a  =  2.^2;\n\n\nWorks for int, real, complex, matrix.\n\n\nInverse of a matrix ^-1¶\n1 real[int] Res  =  A^-1 * b;\n\n\n\nWarning\nThis operator can not be used to directly create a matrix, see Matrix inversion.\n\n\n\nTranspose operator ‘¶\n1 real[int] a  =  b';\n\n\nWorks for array and matrix.\n\nNote\nFor matrix<complex>, the ::freefem`’` operator return the Hermitian tranpose.\n\n\n\nTensor scalar product :¶\n\n\\[A:B  =  \\sum_{i,j}{A_{ij}B_{ij}}\\]\n\n\nC++ arithmetical if expression ? :¶\na ? b : c is equal to b if the a is true, c otherwise.\n\nTip\nExample with int\n1 int a  =  12; int b  =  5;\n2 \n3 cout << a << \" + \" << b << \"  =  \" << a + b << endl;\n4 cout << a << \" - \" << b << \"  =  \" << a - b << endl;\n5 cout << a << \" * \" << b << \"  =  \" << a * b << endl;\n6 cout << a << \" / \" << b << \"  =  \" << a / b << endl;\n7 cout << a << \" % \" << b << \"  =  \" << a % b << endl;\n8 cout << a << \" ^ \" << b << \"  =  \" << a ^ b << endl;\n9 cout << \"( \" << a << \" < \" << b << \" ? \" << a << \" : \" << b << \")  =  \" << (a < b ? a : b) << endl;\n\n\nThe output of this script is:\n12 + 5  =  17\n12 - 5  =  7\n12 * 5  =  60\n12 / 5  =  2\n12 % 5  =  2\n12 ^ 5  =  248832\n( 12 < 5 ? 12 : 5)  =  5\n\n\n\n\nTip\nExample with real\n1 real a  =  qsrt(2.); real b  =  pi;\n2 \n3 cout << a << \" + \" << b << \"  =  \" << a + b << endl;\n4 cout << a << \" - \" << b << \"  =  \" << a - b << endl;\n5 cout << a << \" * \" << b << \"  =  \" << a * b << endl;\n6 cout << a << \" / \" << b << \"  =  \" << a / b << endl;\n7 cout << a << \" % \" << b << \"  =  \" << a % b << endl;\n8 cout << a << \" ^ \" << b << \"  =  \" << a ^ b << endl;\n9 cout << \"( \" << a << \" < \" << b << \" ? \" << a << \" : \" << b << \")  =  \" << (a < b ? a : b) << endl;\n\n\nThe output of this script is:\n1.41421 + 3.14159  =  4.55581\n1.41421 - 3.14159  =  -1.72738\n1.41421 * 3.14159  =  4.44288\n1.41421 / 3.14159  =  0.450158\n1.41421 % 3.14159  =  1\n1.41421 ^ 3.14159  =  2.97069\n\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Quadrature formulae\n\t\t\tNext topic: Loops \n\t\t\n\t","l":"references/operators.html"},"59":{"t":"Quadrature formulae","p":"\n\t\t\n   \nQuadrature formulae¶\nThe quadrature formula is like the following:\n\n\\[\\int_{D}{f(\\boldx)} \\approx \\sum_{\\ell = 1}^{L}{\\omega_\\ell f(\\boldxi_\\ell)}\\]\n\nint1d¶\nQuadrature formula on an edge.\n\nNotations¶\n\\(|D|\\) is the measure of the edge \\(D\\).\nFor a shake of simplicity, we denote:\n\n\\[f(\\boldx)  =  g(t)\\]\nwith \\(0\\leq t\\leq 1\\); \\(\\boldx = (1-t)\\boldx_0+t\\boldx_1\\).\n\n\nqf1pE¶\n1 int1d(Th, qfe = qf1pE)( ... )\n\n\nor\n1 int1d(Th, qforder = 2)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx |D|g\\left(\\frac{1}{2}\\right)\\]\n\n\nqf2pE¶\n1 int1d(Th, qfe = qf2pE)( ... )\n\n\nor\n1 int1d(Th, qforder = 3)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_3\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx \\frac{|D|}{2}\\left(\n      g\\left( \\frac{1+\\sqrt{1/3}}{2} \\right)\n    + g\\left( \\frac{1-\\sqrt{1/3}}{2} \\right)\n\\right)\\]\n\n\nqf3pE¶\n1 int1d(Th, qfe = qf3pE)( ... )\n\n\nor\n1 int1d(Th, qforder = 6)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_5\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx \\frac{|D|}{18}\\left(\n      5g\\left( \\frac{1+\\sqrt{3/5}}{2} \\right)\n    + 8g\\left( \\frac{1}{2} \\right)\n    + 5g\\left( \\frac{1-\\sqrt{3/5}}{2} \\right)\n\\right)\\]\n\n\nqf4pE¶\n1 int1d(Th, qfe = qf4pE)( ... )\n\n\nor\n1 int1d(Th, qforder = 8)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_7\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx \\frac{|D|}{72}\\left(\n      (18-\\sqrt{30})g\\left( \\frac{1-\\frac{\\sqrt{525+70\\sqrt{30}}}{35}}{2} \\right)\n    + (18-\\sqrt{30})g\\left( \\frac{1+\\frac{\\sqrt{525+70\\sqrt{30}}}{35}}{2} \\right)\n    + (18+\\sqrt{30})g\\left( \\frac{1-\\frac{\\sqrt{525-70\\sqrt{30}}}{35}}{2} \\right)\n    + (18+\\sqrt{30})g\\left( \\frac{1+\\frac{\\sqrt{525-70\\sqrt{30}}}{35}}{2} \\right)\n\\right)\\]\n\n\nqf5pE¶\n1 int1d(Th, qfe = qf5pE)( ... )\n\n\nor\n1 int1d(Th, qforder = 10)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_9\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx |D|\\left(\n      \\frac{(332-13\\sqrt{70})}{1800}g\\left( \\frac{1-\\frac{\\sqrt{245+14\\sqrt{70}}}{21}}{2} \\right)\n    + \\frac{(332-13\\sqrt{70})}{1800}g\\left( \\frac{1+\\frac{\\sqrt{245+14\\sqrt{70}}}{21}}{2} \\right)\n    + \\frac{64}{225}g\\left( \\frac{1}{2} \\right)\n    + \\frac{(332+13\\sqrt{70})}{1800}g\\left( \\frac{1-\\frac{\\sqrt{245-14\\sqrt{70}}}{21}}{2} \\right)\n    + \\frac{(332+13\\sqrt{70})}{1800}g\\left( \\frac{1+\\frac{\\sqrt{245-14\\sqrt{70}}}{21}}{2} \\right)\n\\right)\\]\n\n\nqf1pElump¶\n1 int1d(Th, qfe = qf1pElump)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_2\\).\n\n\\[\\int_{D}{f(\\boldx)} \\approx \\frac{|D|}{2}\\left(\n      g\\left( 0 \\right)\n    + g\\left( 1 \\right)\n\\right)\\]\n\n\n\nint2d¶\n\nNote\nComplete formulas are no longer detailed\n\n\nqf1pT¶\n1  int2d(Th, qfe = qf1pT)( ... )\n\n\nor\n1  int2d(Th, qforder = 2)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\nqf2pT¶\n1  int2d(Th, qfe = qf2pT)( ... )\n\n\nor\n1  int2d(Th, qforder = 3)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_2\\).\n\n\nqf5pT¶\n1  int2d(Th, qfe = qf5pT)( ... )\n\n\nor\n1  int2d(Th, qforder = 6)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_5\\).\n\n\nqf1pTlump¶\n1  int2d(Th, qfe = qf1pTlump)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\nqf2pT4P1¶\n1  int2d(Th, qfe = qf2pT4P1)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\nqf7pT¶\n1  int2d(Th, qfe = qf7pT)( ... )\n\n\nor\n1  int2d(Th, qforder = 8)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_7\\).\n\n\nqf9pT¶\n1  int2d(Th, qfe = qf9pT)( ... )\n\n\nor\n1  int2d(Th, qforder = 10)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_9\\).\n\n\n\nint3d¶\n\nqfV1¶\n1  int3d(Th, qfe = qfV1)( ... )\n\n\nor\n1  int3d(Th, qforder = 2)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\nqfV2¶\n1  int3d(Th, qfe = qfV2)( ... )\n\n\nor\n1  int3d(Th, qforder = 3)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_2\\).\n\n\nqfV5¶\n1  int3d(Th, qfe = qfV5)( ... )\n\n\nor\n1  int3d(Th, qforder = 6)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_5\\).\n\n\nqfV1lump¶\n1  int3d(Th, qfe = qfV1lump)( ... )\n\n\nThis quadrature formula is exact on \\(\\mathbb{P}_1\\).\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Global variables\n\t\t\tNext topic: Operators \n\t\t\n\t","l":"references/quadrature-formulae.html"},"60":{"t":"Types","p":"\n\t\t\n   \nTypes¶\n\nStandard types¶\n\nint¶\nInteger value (equivalent to long in C++).\n1 int i  =  0;\n\n\n\n\nbool¶\nBoolean value.\n1 bool b  =  true;\n\n\n\nTip\nThe result of a comparison is a boolean\nbool b  =  (1 < 2);\n\n\n\nreal¶\nReal value (equivalent to double in C++).\n1 real r  =  0.;\n\n\n\n\ncomplex¶\nComplex value (equivalent to two double or complex<double> in C++).\n1 complex c  =  0. + 1i;\n\n\nThe imaginary number \\(i\\) is defined as 1i\n\nTip\nExample\n1 complex a  =  1i, b  =  2 + 3i;\n2 cout << \"a + b  =  \" << a + b << endl;\n3 cout << \"a - b  =  \" << a - b << endl;\n4 cout << \"a*b  =  \" << a*b << endl;\n5 cout << \"a/b  =  \" << a/b << endl;\n\n\nThe output of this script is:\na + b  =  (2,4)\na - b  =  (-2,-2)\na*b  =  (-3,2)\na/b  =  (0.230769,0.153846)\n\n\n\n\nNote\nSee Complex example for a detailed example.\n\n\n\nstring¶\nString value.\n1 string s  =  \"this is a string\";\n\n\n\nNote\nstring value is enclosed within double quotes.\n\nOther types can be concatenate to a string, like:\n1 int i  =  1;\n2 real r  =  1.;\n3 string s  =  \"the int i  =  \" + i +\", the real r  =  \" + r + \", the complex z  =  \" + (1. + 1i);\n\n\nTo append a string in a string at position 4:\n1 s(4:3)  =  \"+++\";\n\n\nTo copy a substring in an other string:\n1 string s2  =  s1(5:10);\n\n\nSee String Example for a complete example.\n\n\n\nMesh design¶\n\nborder¶\nBorder type.\n1 border b(t = 0., 1.){x = cos(2.*pi*t); y = sin(2.*pi*t);}\n\n\nDefine the 2D geometrical border in parametric coordinates.\n\nNote\nLabel\nA label can be defined with the border:\n1 border b(t = 0., 1.){x = cos(2.*pi*t); y = sin(2.*pi*t); label = 1;}\n\n\n\n\nNote\nInner variable\nAn inner variable can be defined inside a border:\n1 border b(t = 0., 1.){real tt = 2.*pi*t; x = cos(tt); y = sin(tt);}\n\n\n\n\nNote\nFrom vector\nA border can be defined from two vectors using P.x and P.y:\n1 border b(t = 0, vectorX.n-1){P.x = vectorX[t]; P.y = vectorY[t];}\n\n\n\n\n\nmesh¶\n2D Mesh type (see Mesh Generation).\n1 mesh Th;\n\n\n\n\nmesh3¶\n3D mesh type (see Mesh Generation).\n1 mesh3 Th;\n\n\n\n\n\nFinite element space design¶\n\nfespace¶\nFinite element space type (see Finite Element).\n1 fespace Uh(Th, P1);\n2 fespace UPh(Th, [P2, P2, P1]);\n\n\nA finite element space is based on a mesh (Th) with an element definition, scalar (P1) or vector ([P2, P2, P1]).\nAvailable finite element space:\nGeneric:\n\nP0 / P03d\nP0Edge\nP1 / P13d\nP1dc\nP1b / P1b3d\nP1bl / P1bl3d\nP1nc\nP2 / P23d\nP2b\nP2dc\nP2h\nRT0 / RT03d\nRT0Ortho\nEdge03d\n\nUsing Element_P3:\n\nP3\n\nUsing Element_P3dc:\n\nP3dc\n\nUsing Element_P4:\n\nP4\n\nUsing Element_P4dc:\n\nP4dc\n\nUsing Element_PkEdge:\n\nP1Edge\nP2Edge\nP3Edge\nP4Edge\nP5Edge\n\nUsing Morlay:\n\nP2Morley\n\nUsing HCT:\n\nHCT\n\nUsing BernardiRaugel:\n\nP2BR\n\nUsing Element_Mixte:\n\nRT1\nRT1Ortho\nRT2\nRT2Ortho\nBDM1\nBDM1Ortho\n\nUsing Element_Mixte3d:\n\nEdge13d\nEdge23d\n\nUsing Element_QF:\n\nFEQF\n\nA finite element function is defined as follow:\n1 fespace Uh(Th, P1);\n2 Uh u;\n3 \n4 fespace UPh(Th, [P2, P2, P1]);\n5 UPh [Ux, Uy, p];\n\n\n\n\n\nMacro design¶\n\nmacro¶\nMacro type.\n1 macro vU() [Ux, Uy] //\n2 macro grad(u) [dx(u), dy(u)] //\n\n\nMacro ends with //.\n\nNote\nMacro concatenation\nYou can use the C concatenation operator ## inside a macro using #.\nIf Ux and Uy are defined as finite element function, you can define:\n1 macro Grad(U) [grad(U#x), grad(U#y)] // End of macro\n\n\n\nSee Macro example\n\n\nNewMacro / EndMacro¶\n\nWarning\nIn developement - Not tested\n\nSet and end a macro\n1 NewMacro grad(u) [dx(u), dy(u)] EndMacro\n\n\n\n\nIFMACRO¶\nCheck if a macro exists and check its value.\n1 IFMACRO(AA) //check if macro AA exists\n2 ...\n3 ENDIFMACRO\n4 \n5 IFMACRO(AA, tt) //check if amcro exists and is equall to tt\n6 ...\n7 ENDIFMACRO\n\n\n\n\nENDIFMACRO¶\n\n\n\nFunctions design¶\n\nfunc¶\nFunction type.\nFunction without parameters (\\(x\\), \\(y\\) and \\(z\\) are implicitly considered):\n1 func f  =  x^2 + y^2;\n\n\n\nNote\nFunction’s type is defined by the expression’s type.\n\nFunction with parameters:\n1 func real f (real var){\n2     return x^2 + y^2 + var^2;\n3 }\n\n\n\n\nElementary functions¶\nClass of basic functions (polynomials, exponential, logarithmic, trigonometric, circular) and the functions obtained from those by the four arithmetic operations\n\n\\[f(x) + g(x),\\, f(x) - g(x),\\, f(x)g(x),\\, f(x)/g(x)\\]\nand by composition \\(f(g(x))\\), each applied a finite number of times.\nIn FreeFEM, all elementary functions can thus be created.\nThe derivative of an elementary function is also an elementary function; however, the indefinite integral of an elementary function cannot always be expressed in terms of elementary functions.\nSee Elementary function example for a complete example.\n\n\nRandom functions¶\nFreeFEM includes the Mersenne Twister random number generator.\nIt is a very fast and accurate random number generator of period \\(2^{219937}-1\\).\nSee randint32(), randint31(), randreal1(), randreal2(), randreal3(), randres53(), randinit(seed).\nIn addition, the ffrandom plugin interface random, srandom and srandomdev functions of the Unix libc library.\nThe range is \\(0 -- 2^{31}-1\\).\n\nNote\nIf srandomdev is not defined, a seed based on the current time is used.\n\ngsl plugin equally allows usage of all random functions of the gsllib, see gsl external library.\n\n\nFE-functions¶\nFinite element functions are also constructed like elementary functions by an arithmetic formula involving elementary functions.\nThe difference is that they are evaluated at declaration time and FreeFEM stores the array of its values at the places associated with he degree of freedom of the finite element type.\nBy opposition, elementary functions are evaluated only when needed.\nHence FE-functions are not defined only by their formula but also by the mesh and the finite element which enter in their definitions.\nIf the value of a FE-function is requested at a point which is not a degree of freedom, an interpolation is used, leading to an interpolation error, while by contrast, an elementary function can be evaluated at any point exactly.\n1 func f  =  x^2*(1+y)^3 + y^2;\n2 mesh Th  =  square(20, 20, [-2+4*x, -2+4*y]); // ]-2, 2[^2\n3 fespace Vh(Th, P1);\n4 Vh fh = f; //fh is the projection of f to Vh (real value)\n5 func zf  =  (x^2*(1+y)^3 + y^2)*exp(x + 1i*y);\n6 Vh<complex> zh  =  zf; //zh is the projection of zf to complex value Vh space\n\n\nThe construction of fh  =  f is explained in Finite Element.\n\nWarning\nThe plot command only works for real or complex FE-functions, not for elementary functions.\n\n\n\n\nProblem design¶\n\nproblem¶\nProblem type.\n1 problem Laplacian (u, uh)  =  ...\n\n\nFreeFEM needs the variational form in the problem definition.\nIn order to solve the problem, just call:\n1 Laplacian;\n\n\n\nNote\nSolver\nA solver can be specified in the problem definition:\n1 problem Laplacian(u, uh, solver = CG)  =  ...\n\n\nThe default solver is sparsesolver or LU if any direct sparse solver is available.\nSolvers are listed in the Global variables section.\n\n\nNote\nStop test\nA criterion \\(\\varepsilon\\) can be defined for iterative methods, like CG for example:\n1 problem Laplacian(u, uh, solver = CG, eps = 1.e-6)  =  ...\n\n\nIf \\(\\varepsilon>0\\), the stop test is:\n\n\\[||Ax-b|| < \\varepsilon\\]\nElse, the stop test is:\n\n\\[||Ax-b|| < \\frac{|\\varepsilon|}{||Ax_0-b||}\\]\n\n\nNote\nReconstruction\nThe keyword init controls the reconstruction of the internal problem matrix.\nIf init is set to false or 0, the matrix is reconstructed et each problem calls (or after a mesh modification), else the previously constructed matrix is used.\n1 problem Laplacian(u, uh, init = 1)  =  ...\n\n\n\n\nNote\nPreconditioning\nA preconditioner can be specified in the problem definition:\n1 problem Laplacian(u, uh, precon = P)  =  ...\n\n\nThe preconditioning function must have a prototype like:\n1 func real[int] P(real[int] &xx);\n\n\n\n\nNote\n“Très grande valeur”\nThe “Très grand valeur” tgv (or Terrible giant value) used to implement the Dirichlet conditions can be modified in the problem definition:\n1 problem Laplacian(u, uh, tgv = 1e30)  =  ...\n\n\nRefere to Problem definition for a description of the Dirichlet condition implementation.\n\n\nNote\nPivot tolerance\nThe tolerance of the pivot in UMFPACK, LU, Crout, Cholesky factorization can be modified in the problem definition:\n1 problem Laplacian(u, uh, solver = LU, tolpivot = 1e-20)  =  ...\n\n\n\n\nNote\nUMFPACK\nTwo specific parameters for the UMFPACK can be modifed:\n\nTolerance of the pivot sym\nstrategy\n\n1 problem Laplacian(u, uh, solver = LU, tolpivotsym = 1e-1, strategy = 0)  =  ...\n\n\nRefer to the UMFPACK website for more informations.\n\n\nNote\ndimKrylov\nDimension of the Krylov space\n\nUsage of problem is detailled in the tutorials.\n\n\nsolve¶\nSolve type.\nIdentical to problem but automatically solved.\nUsage of solve is detailled in the tutorials.\n\n\nvarf¶\nVariational form type.\n1 varf vLaplacian (u, uh)  =  ...\n\n\nDirectly define a variational form.\nThis is the other way to define a problem in order to directly manage matrix and right hang side.\nUsage of varf is detailed in the tutorial.\n\n\n\nArray¶\nAn array stores multiple objects, and there are 2 kinds of arrays:\n\nthe first is similar to vector, i.e. array with integer indices\nthe second is array with string indices\n\nIn the first case, the size of the array must be known at execution time, and implementation is done with the KN<> class and all the vector operator of KN<> are implemented.\nArrays can be set like in Matlab or Scilab with the operator ::, the array generator of a:c is equivalent to a:1:c, and the array set by a:b:c is set to size \\(\\lfloor |(b-a)/c|+1 \\rfloor\\) and the value \\(i\\) is set by \\(a + i (b-a)/c\\).\nThere are int,real, complex array with, in the third case, two operators (.im, .re) to generate the real and imaginary real array from the complex array (without copy).\n\nNote\nQuantiles are points taken at regular intervals from the cumulative distribution function of a random variable.\nHere the array values are random.\nThis statistical function a.quantile(q) computes \\(v\\) from an array \\(a\\) of size \\(n\\) for a given number \\(q\\in ]0,1[\\) such that:\n\n\\[\\#\\{ i / a[i] < v \\} \\sim q*n\\]\nit is equivalent to \\(v  =  a[q*n]\\) when the array \\(a\\) is sorted.\n\nFor example, to declare, fill and display an array of real of size n:\n1 int n  =  5;\n2 real[int] Ai(n);\n3 for (int i  =  0; i < n; i++)\n4     Ai[i]  =  i;\n5 cout << Ai << endl;\n\n\nThe output of this script is:\n5\n      0   1   2   3   4\n\n\nSee the Array example for a complete example.\n\nArray index¶\nArray index can be int or string:\n1 real[int] Ai  =  [1, 1, 0, 0];\n2 real[string] As  =  [1, 1, 0, 0];\n\n\n\n\nArray size¶\nThe size of an array is obtained using the keyword n:\n1 int ArraySize  =  Ai.n;\n\n\n\n\nArray sort¶\nTo sort an array:\n1 Ai.sort;\n\n\n\n\nDouble array¶\nA double array (matrix) can be defined using two indexes:\n1 real[int, int] Aii  =  [[1, 1], [0, 0]];\n\n\nThe two sizes are obtained using the keywords n and m:\n1 int ArraySize1  =  Aii.n;\n2 int ArraySize2  =  Aii.m;\n\n\nThe minimum and maximum values of an array (simple or double) can be obtained using:\n1 real ArrayMin  =  Aii.min;\n2 real ArrayMax  =  Aii.max;\n\n\nTh minimum and maximum position of an array can be obtained using:\n1 int mini  =  Aii.imin;\n2 int minj  =  Aii.jmin;\n3 \n4 int maxi  =  Aii.imax;\n5 int maxj  =  Aii.jmax;\n\n\n\nTip\nAn array can be obtained from a finite element function using:\n1 real[int] aU  =  U[];\n\n\nwhere U is a finite element function.\n\n\n\nArray of FE functions¶\nIt is also possible to make an array of FE functions, with the same syntax, and we can treat them as vector valued function if we need them.\nThe syntax for space or vector finite function is\n 1 int n  =  100; //size of the array.\n 2 Vh[int] wh(n); //real scalar case\n 3 Wh[int] [uh,vh](n); //real vectorial case\n 4 Vh<complex>[int] cwh(n); //complex scalar case\n 5 Wh<complex>[int] [cuh, cvh](n); //complex vectorial case\n 6 [cuh[2], cvh[2]]  =  [x, y]; //set interpolation of index 2\n 7 \n 8 // Array of Array\n 9 real [int][int] V(10);\n10 matrix[int] B(10);\n11 real [int, int][int] A(10);\n\n\n\nTip\nExample\nIn the following example, Poisson’s equation is solved for 3 different given functions \\(f = 1,\\, \\sin(\\pi x)\\cos(\\pi y),\\, |x-1||y-1|\\), whose solutions are stored in an array of FE function.\n 1 // Mesh\n 2 mesh Th  =  square(20, 20, [2*x, 2*y]);\n 3 \n 4 // Fespace\n 5 fespace Vh(Th, P1);\n 6 Vh u, v, f;\n 7 \n 8 // Problem\n 9 problem Poisson (u, v)\n10     =  int2d(Th)(\n11         dx(u)*dx(v)\n12       + dy(u)*dy(v)\n13    )\n14    + int2d(Th)(\n15       - f*v\n16    )\n17    + on(1, 2, 3, 4, u = 0)\n18    ;\n19 \n20 Vh[int] uu(3); //an array of FE function\n21 // Solve problem 1\n22 f  =  1;\n23 Poisson;\n24 uu[0]  =  u;\n25 // Solve problem 2\n26 f  =  sin(pi*x)*cos(pi*y);\n27 Poisson;\n28 uu[1]  =  u;\n29 // Solve problem 3\n30 f  =  abs(x-1)*abs(y-1);\n31 Poisson;\n32 uu[2]  =  u;\n33 \n34 // Plot\n35 for (int i  =  0; i < 3; i++)\n36    plot(uu[i], wait = true);\n\n\nSee FE array example.\n\n\n\nMap arrays¶\n1 real[string] map; //a dynamic array\n2 \n3 map[\"1\"]  =  2.0;\n4 map[2]  =  3.0; //2 is automatically cast to the string \"2\"\n5 \n6 cout << \"map[\\\"1\\\"]  =  \" << map[\"1\"] << endl;\n7 cout << \"map[2]  =  \" << map[2] << endl;\n\n\nIt is just a map of the standard template library so no operations on vector are allowed, except the selection of an item.\n\n\n\nmatrix¶\nDefines a sparse matrix.\nMatrices can be defined like vectors:\n1 matrix A  =  [[1, 2, 3],\n2             [4, 5, 6],\n3             [7, 8, 9]];\n\n\nor using a variational form type (see Finite Element):\n1 matrix Laplacian  =  vLaplacian(Uh, Uh);\n\n\nor from block of matrices:\n1 matrix A1, ..., An;\n2 matrix A  =  [[A1, ...], ..., [..., An]];\n\n\nor using sparse matrix set:\n1 A  =  [I, J, C];\n\n\n\nNote\nI and J are int[int] and C is real[int]. The matrix is defined as:\n\n\\[A  =  \\sum_k{C[k]M_{I[k], J[k]}}\\]\nwhere \\(M_{a, b}  =  \\left(\\delta_{ia}\\delta_{jb}\\right)_{ij}\\)\nI, J and C can be retrieved using [I, J, C]  =  A (arrays are automatically resized).\nThe size of the matrix is n  =  I.max;, m  =  J.max;.\n\nMatrices are designed using templates, so they can be real or complex:\n1 matrix<real> A  =  ...\n2 matrix<complex> Ai  =  ...\n\n\n\nNote\nSolver\nSee problem.\nThe default solver is GMRES.\n1 matrix A  =  vLaplacian(Uh, Uh, solver = sparsesolver);\n\n\nor\n1 set(A , solver = sparsesolver);\n\n\n\n\nNote\nFactorize\nIf true, the factorization is done for LU, Cholesky or Crout.\n1 matrix A  =  vLaplacian(Uh, Uh, solver = LU, factorize = 1);\n\n\nor\n1 set(A , solver = LU, factorize = 1);\n\n\n\n\nNote\nStop test\nSee problem.\n\n\nNote\nTrès grande valeur\nSee problem.\n\n\nNote\nPreconditioning\nSee problem.\n\n\nNote\nPivot tolerance\nSee problem.\n\n\nNote\nUMFPACK\nSee problem.\n\n\nNote\ndimKrylov\nSee problem.\n\n\nNote\ndatafilename\nName of the file containing solver parameters, see Parallel sparse solvers\n\n\nNote\nlparams\nVector of integer parameters for the solver, see Parallel sparse solvers\n\n\nNote\ndparams\nVector of real parameters for the solver, see Parallel sparse solvers\n\n\nNote\nsparams\nString parameters for the solver, see Parallel sparse solvers\n\n\nTip\nTo modify the solver, the stop test,… after the matrix construction, use the set keyword.\n\n\nMatrix size¶\nThe size of a matrix is obtain using:\n1 int NRows  =  A.n;\n2 int NColumns  =  A.m;\n\n\n\n\nMatrix resize¶\nTo resize a matrix, use:\n1 A.resize(n, m);\n\n\n\nWarning\nWhen resizing, all new terms are set to zero.\n\n\n\nMatrix diagonal¶\nThe diagonal of the matrix is obtained using:\n1 real[int] Aii  =  A.diag;\n\n\n\n\nMatrix renumbering¶\n1 int[int] I(15), J(15);\n2 matrix B  =  A;\n3 B  =  A(I, J);\n4 B  =  A(I^-1, J^-1);\n\n\n\n\nComplex matrix¶\nUse .im and .re to get the imaginary and real part of a complex matrix, respectively:\n1 matrix<complex> C  =  ...\n2 matrix R  =  C.re;\n3 matrix I  =  C.im;\n\n\n\n\nDot product / Outer product¶\nThe dot product of two matrices is realized using:\n1 real d  =  A' * B;\n\n\nThe outer product of two matrices is realized using:\n1 matrix C  =  A * B'\n\n\nSee Matrix operations example for a complete example.\n\n\nMatrix inversion¶\nSee Matrix inversion example.\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Language references\n\t\t\tNext topic: Global variables \n\t\t\n\t","l":"references/types.html"},"61":{"t":"A Large Fluid Problem","p":"\n\t\t\n   \nA Large Fluid Problem¶\nA friend of one of us in Auroville-India was building a ramp to access an air conditioned room.\nAs I was visiting the construction site he told me that he expected to cool air escaping by the door to the room to slide down the ramp and refrigerate the feet of the coming visitors.\nI told him “no way” and decided to check numerically.\nThe fluid velocity and pressure are solution of the Navier-Stokes equations with varying density function of the temperature.\nThe geometry is trapezoidal with prescribed inflow made of cool air at the bottom and warm air above and so are the initial conditions; there is free outflow, slip velocity at the top (artificial) boundary and no-slip at the bottom.\nHowever the Navier-Stokes cum temperature equations have a RANS \\(k-\\epsilon\\) model and a Boussinesq approximation for the buoyancy.\nThis comes to :\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\partial_t\\theta+u\\nabla\\theta-\\nabla\\cdot(\\kappa_T^m\\nabla\\theta) & = & 0\\\\\n    \\partial_t u +u\\nabla u -\\nabla\\cdot(\\mu_T\\nabla u) +\\nabla p+ e(\\theta-\\theta_0)\\vec e_2 & = &0\\\\\n    \\nabla\\cdot u & = & 0\\\\\n    \\mu_T & = & c_\\mu\\frac{k^2}\\epsilon\\\\\n    \\kappa_T & = & \\kappa\\mu_T\\\\\n    \\partial_t k + u\\nabla k + \\epsilon -\\nabla\\cdot(\\mu_T\\nabla k) & = & \\frac{\\mu_T}2|\\nabla u+\\nabla u^T|^2\\\\\n    \\partial_t\\epsilon+u\\nabla\\epsilon + c_2\\frac{\\epsilon^2} k -\\frac{c_\\epsilon}{c_\\mu}\\nabla\\cdot (\\mu_T\\nabla\\epsilon) & = & \\frac{c_1}2 k|\\nabla u+\\nabla u^T|^2\\\\\n\\end{array}\\end{split}\\]\nWe use a time discretization which preserves positivity and uses the method of characteristics (\\(X^m(x)\\approx x-u^m(x)\\delta t\\))\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\frac 1{\\delta t}(\\theta^{m+1}-\\theta^m \\circ X^m)-\\nabla\\cdot(\\kappa_T^m\\nabla\\theta^{m+1}) & = & 0\\\\\n    \\frac1{\\delta t}(u^{m+1}-u^m \\circ X^m) -\\nabla\\cdot(\\mu_T^m\\nabla u^{m+1}) +\\nabla p^{m+1}+ e(\\theta^{m+1}-\\theta_0)\\vec e_2 & = & 0\\\\\n    \\nabla\\cdot u^{m+1} & = & 0\\\\\n    \\frac1{\\delta t}(k^{m+1}-k^m \\circ X^m) + k^{m+1}\\frac{\\epsilon^m}{k^m} -\\nabla\\cdot(\\mu_T^m\\nabla k^{m+1}) & = & \\frac{\\mu_T^m}2|\\nabla u^m+{\\nabla u^m}^T|^2\\\\\n    \\frac1{\\delta t}(\\epsilon^{m+1}-\\epsilon^m \\circ X^m) + c_2\\epsilon^{m+1}\\frac{\\epsilon^m} {k^m} -\\frac{c_\\epsilon}{c_\\mu}\\nabla\\dot(\\mu_T^m\\nabla\\epsilon^{m+1}) & = & \\frac{c_1}2 k^m|\\nabla u^m+{\\nabla u^m}^T|^2\\\\\n    \\mu_T ^{m+1} & = & c_\\mu\\frac{{k^{m+1}}^2}{\\epsilon^{m+1}}\\\\\n    \\kappa_T^{m+1} & = & \\kappa\\mu_T^{m+1}\n\\end{array}\\end{split}\\]\nIn variational form and with appropriated boundary conditions the problem is :\n  1 load \"iovtk\"\n  2 \n  3 verbosity = 0;\n  4 \n  5 // Parameters\n  6 int nn  =  15;\n  7 int nnPlus  =  5;\n  8 real l  =  1.;\n  9 real L  =  15.;\n 10 real hSlope  =  0.1;\n 11 real H  =  6.;\n 12 real h  =  0.5;\n 13 \n 14 real reylnods  = 500;\n 15 real beta  =  0.01;\n 16 \n 17 real eps  =  9.81/303.;\n 18 real nu  =  1;\n 19 real numu  =  nu/sqrt(0.09);\n 20 real nuep  =  pow(nu,1.5)/4.1;\n 21 real dt  =  0.;\n 22 \n 23 real Penalty  =  1.e-6;\n 24 \n 25 // Mesh\n 26 border b1(t = 0, l){x = t; y = 0;}\n 27 border b2(t = 0, L-l){x = 1.+t; y = -hSlope*t;}\n 28 border b3(t = -hSlope*(L-l), H){x = L; y = t;}\n 29 border b4(t = L, 0){x = t; y = H;}\n 30 border b5(t = H, h){x = 0; y = t;}\n 31 border b6(t = h, 0){x = 0; y = t;}\n 32 \n 33 mesh Th = buildmesh(b1(nnPlus*nn*l) + b2(nn*sqrt((L-l)^2+(hSlope*(L-l))^2)) + b3(nn*(H + hSlope*(L-l))) + b4(nn*L) + b5(nn*(H-h)) + b6(nnPlus*nn*h));\n 34 plot(Th);\n 35 \n 36 // Fespaces\n 37 fespace Vh2(Th, P1b);\n 38 Vh2 Ux, Uy;\n 39 Vh2 Vx, Vy;\n 40 Vh2 Upx, Upy;\n 41 \n 42 fespace Vh(Th,P1);\n 43 Vh p = 0, q;\n 44 Vh Tp, T = 35;\n 45 Vh k = 0.0001, kp = k;\n 46 Vh ep = 0.0001, epp = ep;\n 47 \n 48 fespace V0h(Th,P0);\n 49 V0h muT = 1;\n 50 V0h prodk, prode;\n 51 Vh kappa = 0.25e-4, stress;\n 52 \n 53 // Macro\n 54 macro grad(u) [dx(u), dy(u)] //\n 55 macro Grad(U) [grad(U#x), grad(U#y)] //\n 56 macro Div(U) (dx(U#x) + dy(U#y)) //\n 57 \n 58 // Functions\n 59 func g  =  (x) * (1-x) * 4;\n 60 \n 61 // Problem\n 62 real alpha  =  0.;\n 63 \n 64 problem Temperature(T, q)\n 65     =  int2d(Th)(\n 66         alpha * T * q\n 67       + kappa* grad(T)' * grad(q)\n 68    )\n 69    + int2d(Th)(\n 70       - alpha*convect([Upx, Upy], -dt, Tp)*q\n 71    )\n 72    + on(b6, T = 25)\n 73    + on(b1, b2, T = 30)\n 74    ;\n 75 \n 76 problem KineticTurbulence(k, q)\n 77     =  int2d(Th)(\n 78         (epp/kp + alpha) * k * q\n 79       + muT* grad(k)' * grad(q)\n 80    )\n 81    + int2d(Th)(\n 82         prodk * q\n 83       - alpha*convect([Upx, Upy], -dt, kp)*q\n 84    )\n 85    + on(b5, b6, k = 0.00001)\n 86    + on(b1, b2, k = beta*numu*stress)\n 87    ;\n 88 \n 89 problem ViscosityTurbulence(ep, q)\n 90     =  int2d(Th)(\n 91         (1.92*epp/kp + alpha) * ep * q\n 92       + muT * grad(ep)' * grad(q)\n 93    )\n 94    + int1d(Th, b1, b2)(\n 95         T * q * 0.001\n 96    )\n 97    + int2d(Th)(\n 98         prode * q\n 99       - alpha*convect([Upx, Upy], -dt, epp)*q\n100    )\n101    + on(b5, b6, ep = 0.00001)\n102    + on(b1, b2, ep = beta*nuep*pow(stress,1.5))\n103    ;\n104 \n105 // Initialization with stationary solution\n106 solve NavierStokes ([Ux, Uy, p], [Vx, Vy, q])\n107     =  int2d(Th)(\n108         alpha * [Ux, Uy]' * [Vx, Vy]\n109       + muT * (Grad(U) : Grad(V))\n110       + p * q * Penalty\n111       - p * Div(V)\n112       - Div(U) * q\n113    )\n114    + int1d(Th, b1, b2, b4)(\n115         Ux * Vx * 0.1\n116    )\n117    + int2d(Th)(\n118         eps * (T-35) * Vx\n119       - alpha*convect([Upx, Upy], -dt, Upx)*Vx\n120       - alpha*convect([Upx, Upy], -dt, Upy)*Vy\n121    )\n122    + on(b6, Ux = 3, Uy = 0)\n123    + on(b5, Ux = 0, Uy = 0)\n124    + on(b1, b4, Uy = 0)\n125    + on(b2, Uy = -Upx*N.x/N.y)\n126    + on(b3, Uy = 0)\n127    ;\n128 \n129 plot([Ux, Uy], p, value = true, coef = 0.2, cmm = \"[Ux, Uy] - p\");\n130 \n131 {\n132    real[int] xx(21), yy(21), pp(21);\n133    for (int i  =  0 ; i < 21; i++){\n134       yy[i]  =  i/20.;\n135       xx[i]  =  Ux(0.5,i/20.);\n136       pp[i]  =  p(i/20.,0.999);\n137    }\n138    cout << \" \" << yy << endl;\n139    plot([xx, yy], wait = true, cmm = \"Ux x = 0.5 cup\");\n140    plot([yy, pp], wait = true, cmm = \"p y = 0.999 cup\");\n141 }\n142 \n143 // Initialization\n144 dt  =  0.1; //probably too big\n145 int nbiter  =  3;\n146 real coefdt  =  0.25^(1./nbiter);\n147 real coefcut  =  0.25^(1./nbiter);\n148 real cut  =  0.01;\n149 real tol  =  0.5;\n150 real coeftol  =  0.5^(1./nbiter);\n151 nu  =  1./reylnods;\n152 \n153 T  =  T - 10*((x<1)*(y<0.5) + (x> = 1)*(y+0.1*(x-1)<0.5));\n154 \n155 // Convergence loop\n156 real T0  =  clock();\n157 for (int iter  =  1; iter < =  nbiter; iter++){\n158    cout << \"Iteration \" << iter << \" - dt  =  \" << dt << endl;\n159    alpha  =  1/dt;\n160 \n161    // Time loop\n162    real t  =  0.;\n163    for (int i  =  0; i < =  500; i++){\n164       t + =  dt;\n165       cout << \"Time step \" << i << \" - t  =  \" << t << endl;\n166 \n167       // Update\n168       Upx  =  Ux;\n169       Upy  =  Uy;\n170       kp  =  k;\n171       epp  =  ep;\n172       Tp  =  max(T, 25); //for beauty only should be removed\n173       Tp  =  min(Tp, 35); //for security only should be removed\n174       kp  =  max(k, 0.0001); epp  =  max(ep, 0.0001); // to be secure: should not be active\n175       muT  =  0.09*kp*kp/epp;\n176 \n177       // Solve NS\n178       NavierStokes;\n179 \n180       // Update\n181       prode  =  -0.126*kp*(pow(2*dx(Ux),2)+pow(2*dy(Uy),2)+2*pow(dx(Uy)+dy(Ux),2))/2;\n182       prodk  =  -prode*kp/epp*0.09/0.126;\n183       kappa  =  muT/0.41;\n184       stress  =  abs(dy(Ux));\n185 \n186       // Solve k-eps-T\n187       KineticTurbulence;\n188       ViscosityTurbulence;\n189       Temperature;\n190 \n191       // Plot\n192       plot(T, value = true, fill = true);\n193       plot([Ux, Uy], p, coef = 0.2, cmm = \" [Ux, Uy] - p\", WindowIndex = 1);\n194 \n195       // Time\n196       cout << \"\\tTime  =  \" << clock()-T0 << endl;\n197    }\n198 \n199    // Check\n200    if (iter > =  nbiter) break;\n201 \n202    // Adaptmesh\n203    Th  =  adaptmesh(Th, [dx(Ux), dy(Ux), dx(Ux), dy(Uy)], splitpbedge = 1, abserror = 0, cutoff = cut, err = tol, inquire = 0, ratio = 1.5, hmin = 1./1000);\n204    plot(Th);\n205 \n206    // Update\n207    dt  =  dt * coefdt;\n208    tol  =  tol * coeftol;\n209    cut  =  cut * coefcut;\n210 }\n211 cout << \"Total Time  =  \" << clock()-T0 << endl;\n\n\n\n\n\n\nFig. 27 Temperature at time step 100¶\n\n\n\n\n\nFig. 28 Velocity at time step 100¶\n\n\n\n\n\nFig. 29 Temperature at time step 200¶\n\n\n\n\n\nFig. 30 Velocity at time step 200¶\n\n\n\n\n\nFig. 31 Temperature at time step 300¶\n\n\n\n\n\nFig. 32 Velocity at time step 300¶\n\n\n\n\n\nFig. 33 Temperature at time step 400¶\n\n\n\n\n\nFig. 34 Velocity at time step 400¶\n\n\n\n\n\nFig. 35 Temperature at time step 500¶\n\n\n\n\n\nFig. 36 Velocity at time step 500¶\n\n\nA large fluid problem\n\n\n\n\t\t\n\t\t\t Previous topic: Newton Method for the Steady Navier-Stokes equations\n\t\t\tNext topic: An Example with Complex Numbers \n\t\t\n\t","l":"tutorials/aLargeFluidProblem.html"},"62":{"t":"Acoustics","p":"\n\t\t\n   \nAcoustics¶\nSummary :\nHere we go to grip with ill posed problems and eigenvalue problems\nPressure variations in air at rest are governed by the wave equation:\n\n\\[{\\partial^2 u \\over \\partial t^2} - c^2 \\Delta u  = 0\\]\nWhen the solution wave is monochromatic (and that depends on the boundary and initial conditions), \\(u\\) is of the form \\(u(x,t) = Re(v(x) e^{ik t})\\) where \\(v\\) is a solution of Helmholtz’s equation:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    k^{2}v + c^{2}\\Delta v & =  0 &\\hbox{ in } \\Omega\\\\\n    \\frac{\\partial v}{\\partial\\boldsymbol{n}}|_\\Gamma & =  g &\n\\end{array}\\end{split}\\]\nwhere \\(g\\) is the source.\nNote the “+” sign in front of the Laplace operator and that \\(k > 0\\) is real.\nThis sign may make the problem ill posed for some values of \\(\\frac c k\\), a phenomenon called “resonance”.\nAt resonance there are non-zero solutions even when \\(g = 0\\).\nSo the following program may or may not work:\n 1 // Parameters\n 2 real kc2  =  1.;\n 3 func g  =  y*(1.-y);\n 4 \n 5 // Mesh\n 6 border a0(t = 0., 1.){x = 5.; y = 1.+2.*t;}\n 7 border a1(t = 0., 1.){x = 5.-2.*t; y = 3.;}\n 8 border a2(t = 0., 1.){x = 3.-2.*t; y = 3.-2.*t;}\n 9 border a3(t = 0., 1.){x = 1.-t; y = 1.;}\n10 border a4(t = 0., 1.){x = 0.; y = 1.-t;}\n11 border a5(t = 0., 1.){x = t; y = 0.;}\n12 border a6(t = 0., 1.){x = 1.+4.*t; y = t;}\n13 \n14 mesh Th  =  buildmesh(a0(20) + a1(20) + a2(20)\n15     + a3(20) + a4(20) + a5(20) + a6(20));\n16 \n17 // Fespace\n18 fespace Vh(Th, P1);\n19 Vh u, v;\n20 \n21 // Solve\n22 solve sound(u, v)\n23     =  int2d(Th)(\n24         u*v * kc2\n25       - dx(u)*dx(v)\n26       - dy(u)*dy(v)\n27    )\n28    - int1d(Th, a4)(\n29         g * v\n30    )\n31    ;\n32 \n33 // Plot\n34 plot(u, wait = 1, ps = \"Sound.eps\");\n\n\nResults are on Fig. 11. But when \\(kc2\\) is an eigenvalue of the problem, then the solution is not unique:\n\nif \\(u_e \\neq 0\\) is an eigen state, then for any given solution \\(u+u_e\\) is another solution.\n\nTo find all the \\(u_e\\) one can do the following :\n 1 // Parameters\n 2 real sigma  =  20; //value of the shift\n 3 \n 4 // Problem\n 5 // OP  =  A - sigma B ; // The shifted matrix\n 6 varf op(u1, u2)\n 7     =  int2d(Th)(\n 8         dx(u1)*dx(u2)\n 9       + dy(u1)*dy(u2)\n10       - sigma* u1*u2\n11    )\n12    ;\n13 \n14 varf b([u1], [u2])\n15     =  int2d(Th)(\n16         u1*u2\n17    )\n18    ; // No Boundary condition see note \\ref{note BC EV}\n19 \n20 matrix OP  =  op(Vh, Vh, solver = Crout, factorize = 1);\n21 matrix B  =  b(Vh, Vh, solver = CG, eps = 1e-20);\n22 \n23 // Eigen values\n24 int nev = 2; // Number of requested eigenvalues near sigma\n25 \n26 real[int] ev(nev);  // To store the nev eigenvalue\n27 Vh[int] eV(nev);    // To store the nev eigenvector\n28 \n29 int k = EigenValue(OP, B, sym = true, sigma = sigma, value = ev, vector = eV,\n30    tol = 1e-10, maxit = 0, ncv = 0);\n31 \n32 cout << ev(0) << \" 2 eigen values \" << ev(1) << endl;\n33 v  =  eV[0];\n34 plot(v, wait = true, ps = \"eigen.eps\");\n\n\n\n\n\n\nFig. 11 Amplitude of an acoustic signal coming from the left vertical wall.¶\n\n\n\n\n\nFig. 12 First eigen state (\\(\\lambda = (k/c)^2 = 14.695\\)) close to \\(15\\) of eigenvalue problem: \\(-\\Delta \\varphi  =  \\lambda\\varphi\\) and \\(\\frac{\\partial \\varphi}{\\partial\\boldsymbol{n}}  =  0\\) on \\(\\Gamma\\)}¶\n\n\nAcoustics\n\n\n\n\t\t\n\t\t\t Previous topic: Heat Exchanger\n\t\t\tNext topic: Thermal Conduction \n\t\t\n\t","l":"tutorials/acoustics.html"},"63":{"t":"An Example with Complex Numbers","p":"\n\t\t\n   \nAn Example with Complex Numbers¶\nIn a microwave oven heat comes from molecular excitation by an electromagnetic field.\nFor a plane monochromatic wave, amplitude is given by Helmholtz’s equation:\n\n\\[\\beta v + \\Delta v  =  0.\\]\nWe consider a rectangular oven where the wave is emitted by part of the upper wall.\nSo the boundary of the domain is made up of a part \\(\\Gamma_1\\) where \\(v = 0\\) and of another part \\(\\Gamma_2 = [c,d]\\) where for instance \\(\\displaystyle v = \\sin\\left(\\pi{y-c\\over c-d}\\right)\\).\nWithin an object to be cooked, denoted by \\(B\\), the heat source is proportional to \\(v^2\\).\nAt equilibrium, one has :\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta\\theta & = & v^2 I_B\\\\\n    \\theta_\\Gamma & = & 0\n\\end{array}\\end{split}\\]\nwhere \\(I_B\\) is \\(1\\) in the object and \\(0\\) elsewhere.\nIn the program below \\(\\beta  =  1/(1-i/2)\\) in the air and \\(2/(1-i/2)\\) in the object (\\(i = \\sqrt{-1}\\)):\n 1 // Parameters\n 2 int nn  =  2;\n 3 real a  =  20.;\n 4 real b  =  20.;\n 5 real c  =  15.;\n 6 real d  =  8.;\n 7 real e  =  2.;\n 8 real l  =  12.;\n 9 real f  =  2.;\n10 real g  =  2.;\n11 \n12 // Mesh\n13 border a0(t = 0, 1){x = a*t; y = 0; label = 1;}\n14 border a1(t = 1, 2){x = a; y = b*(t-1); label = 1;}\n15 border a2(t = 2, 3){ x = a*(3-t); y = b; label = 1;}\n16 border a3(t = 3, 4){x = 0; y = b-(b-c)*(t-3); label = 1;}\n17 border a4(t = 4, 5){x = 0; y = c-(c-d)*(t-4); label = 2;}\n18 border a5(t = 5, 6){x = 0; y = d*(6-t); label = 1;}\n19 \n20 border b0(t = 0, 1){x = a-f+e*(t-1); y = g; label = 3;}\n21 border b1(t = 1, 4){x = a-f; y = g+l*(t-1)/3; label = 3;}\n22 border b2(t = 4, 5){x = a-f-e*(t-4); y = l+g; label = 3;}\n23 border b3(t = 5, 8){x = a-e-f; y = l+g-l*(t-5)/3; label = 3;}\n24 \n25 mesh Th  =  buildmesh(a0(10*nn) + a1(10*nn) + a2(10*nn) + a3(10*nn) +a4(10*nn) + a5(10*nn)\n26    + b0(5*nn) + b1(10*nn) + b2(5*nn) + b3(10*nn));\n27 real meat  =  Th(a-f-e/2, g+l/2).region;\n28 real air =  Th(0.01,0.01).region;\n29 plot(Th, wait = 1);\n30 \n31 // Fespace\n32 fespace Vh(Th, P1);\n33 Vh R = (region-air)/(meat-air);\n34 Vh<complex> v, w;\n35 Vh vr, vi;\n36 \n37 fespace Uh(Th, P1);\n38 Uh u, uu, ff;\n39 \n40 // Problem\n41 solve muwave(v, w)\n42     =  int2d(Th)(\n43         v*w*(1+R)\n44       - (dx(v)*dx(w) + dy(v)*dy(w))*(1 - 0.5i)\n45    )\n46    + on(1, v = 0)\n47    + on(2, v = sin(pi*(y-c)/(c-d)))\n48    ;\n49 \n50 vr  =  real(v);\n51 vi  =  imag(v);\n52 \n53 // Plot\n54 plot(vr, wait = 1, ps = \"rmuonde.ps\", fill = true);\n55 plot(vi, wait = 1, ps = \"imuonde.ps\", fill = true);\n56 \n57 // Problem (temperature)\n58 ff = 1e5*(vr^2 + vi^2)*R;\n59 \n60 solve temperature(u, uu)\n61     =  int2d(Th)(\n62         dx(u)* dx(uu)+ dy(u)* dy(uu)\n63    )\n64    - int2d(Th)(\n65         ff*uu\n66    )\n67    + on(1, 2, u = 0)\n68    ;\n69 \n70 // Plot\n71 plot(u, wait = 1, ps = \"tempmuonde.ps\", fill = true);\n\n\nResults are shown on Fig. 37, Fig. 38 and Fig. 39.\n\n\n\n\nFig. 37 Real part¶\n\n\n\n\n\nFig. 38 Imaginary part¶\n\n\n\n\n\nFig. 39 Temperature¶\n\n\nMicrowave\n\n\n\n\t\t\n\t\t\t Previous topic: A Large Fluid Problem\n\t\t\tNext topic: Optimal Control \n\t\t\n\t","l":"tutorials/complexNumbers.html"},"64":{"t":"The System of elasticity","p":"\n\t\t\n   \nThe System of elasticity¶\nElasticity\nSolid objects deform under the action of applied forces:\na point in the solid, originally at \\((x,y,z)\\) will come to \\((X,Y,Z)\\) after some time; the vector \\(\\mathbf{u} = (u_1,u_2,u_3)  =  (X-x, Y-y, Z-z)\\) is called the displacement.\nWhen the displacement is small and the solid is elastic, Hooke’s law gives a relationship between the stress tensor \\(\\sigma(u) = (\\sigma_{ij}(u) )\\) and the strain tensor \\(\\epsilon(u) = \\epsilon_{ij}(u)\\)\n\n\\[\\sigma_{ij}(u)  =  \\lambda \\delta_{ij} \\nabla.\\mathbf{u}+ 2\\mu\\epsilon_{ij}(u),\\]\nwhere the Kronecker symbol \\(\\delta_{ij}  =  1\\) if \\(i = j\\), \\(0\\) otherwise, with\n\n\\[\\epsilon_{ij}(u)  =  {1\\over 2}({\\partial u_i\\over\\partial x_j} + {\\partial u_j\\over\\partial x_i} ),\\]\nand where \\(\\lambda, \\mu\\) are two constants that describe the mechanical properties of the solid, and are themselves related to the better known constants \\(E\\), Young’s modulus, and \\(\\nu\\), Poisson’s ratio:\n\n\\[\\mu  =  {E\\over 2( 1+\\nu)}, \\quad \\lambda  =  {E\\nu\\over (1+\\nu)(1-2\\nu)}.\\]\nLamé’s system\nLet us consider a beam with axis \\(Oz\\) and with perpendicular section \\(\\Omega\\).\nThe components along \\(x\\) and \\(y\\) of the strain \\({\\bf u}(x)\\) in a section \\(\\Omega\\) subject to forces \\({\\bf f}\\) perpendicular to the axis are governed by:\n\n\\[-\\mu \\Delta {\\bf u} - (\\mu+\\lambda) \\nabla (\\nabla .{\\bf u}) = {\\bf f}~~\\hbox{in}~~\\Omega,\\]\nwhere \\(\\lambda\\) ,\\(\\mu\\) are the Lamé coefficients introduced above.\nRemark, we do not use this equation because the associated variational form does not give the right boundary condition, we simply use:\n\n\\[- div( \\sigma )  =  \\mathbf{f} \\quad \\mbox{in}~~\\Omega\\]\nwhere the corresponding variational form is:\n\n\\[\\int_{\\Omega} \\sigma(u) : \\epsilon(\\mathbf{v})\\;dx - \\int_{\\Omega} \\mathbf{v} f \\;dx  = 0;\\]\nwhere \\(:\\) denotes the tensor scalar product, i.e. \\(a: b  =  \\sum_{i,j} a_{ij}b_{ij}\\).\nSo the variational form can be written as :\n\n\\[\\int_{\\Omega} \\lambda \\nabla.u \\nabla.v + 2 \\mu \\epsilon(\\mathbf{u}):\\epsilon(\\mathbf{v}) \\; dx - \\int_{\\Omega} \\mathbf{v} f \\;dx  = 0;\\]\n\nTip\nConsider an elastic plate with the undeformed rectangle shape \\([0,20]\\times [-1,1]\\).\nThe body force is the gravity force \\(\\mathbf{f}\\) and the boundary force \\(\\mathbf{g}\\) is zero on lower, upper and right sides.\nThe left vertical side of the beam is fixed.\nThe boundary conditions are:\n\n\\[\\begin{split}\\begin{array}{rcll}\n    \\sigma . {\\bf n} & =  \\mathbf{g} & =  0 & \\hbox{ on }\\Gamma_1, \\Gamma_4, \\Gamma_3, \\\\\n    {\\bf u} & =  \\mathbf{0} && \\hbox{ on }\\Gamma_2\n\\end{array}\\end{split}\\]\n\nHere \\({\\bf u} = (u,v)\\) has two components.\nThe above two equations are strongly coupled by their mixed derivatives, and thus any iterative solution on each of the components is risky.\nOne should rather use FreeFEM’s system approach and write:\n 1 // Parameters\n 2 real E  =  21e5;\n 3 real nu  =  0.28;\n 4 \n 5 real f  =  -1;\n 6 \n 7 // Mesh\n 8 mesh Th  =  square(10, 10, [20*x,2*y-1]);\n 9 \n10 // Fespace\n11 fespace Vh(Th, P2);\n12 Vh u, v;\n13 Vh uu, vv;\n14 \n15 // Macro\n16 real sqrt2 = sqrt(2.);\n17 macro epsilon(u1,u2) [dx(u1),dy(u2),(dy(u1)+dx(u2))/sqrt2] //\n18 // The sqrt2 is because we want: epsilon(u1,u2)'* epsilon(v1,v2)  =  epsilon(u): epsilon(v)\n19 macro div(u,v) ( dx(u)+dy(v) ) //\n20 \n21 // Problem\n22 real mu =  E/(2*(1+nu));\n23 real lambda  =  E*nu/((1+nu)*(1-2*nu));\n24 \n25 solve lame([u, v], [uu, vv])\n26     =  int2d(Th)(\n27         lambda * div(u, v) * div(uu, vv)\n28       + 2.*mu * ( epsilon(u,v)' * epsilon(uu,vv) )\n29    )\n30    - int2d(Th)(\n31         f*vv\n32    )\n33    + on(4, u = 0, v = 0)\n34    ;\n35 \n36 // Plot\n37 real coef = 100;\n38 plot([u, v], wait = 1, ps = \"lamevect.eps\", coef = coef);\n39 \n40 // Move mesh\n41 mesh th1  =  movemesh(Th, [x+u*coef, y+v*coef]);\n42 plot(th1,wait = 1,ps = \"lamedeform.eps\");\n43 \n44 // Output\n45 real dxmin  =  u[].min;\n46 real dymin  =  v[].min;\n47 \n48 cout << \" - dep. max x  =  \"<< dxmin << \" y = \" << dymin << endl;\n49 cout << \"   dep. (20, 0)  =  \" << u(20, 0) << \" \" << v(20, 0) << endl;\n\n\nThe output is:\n1 -- square mesh : nb vertices   = 121 ,  nb triangles  =  200 ,  nb boundary edges 40\n2 -- Solve :           min -0.00174137  max 0.00174105\n3          min -0.0263154  max 1.47016e-29\n4 - dep.  max   x  =  -0.00174137 y = -0.0263154\n5    dep.  (20,0)   =  -1.8096e-07 -0.0263154\n6 times: compile 0.010219s, execution 1.5827s\n\n\nSolution of Lamé’s equations for elasticity for a 2D beam deflected by its own weight and clamped by its left vertical side is shown Fig. 19 and Fig. 20.\nResult are shown with a amplification factor equal to 100.\nThe size of the arrow is automatically bound, but the color gives the real length.\n\n\n\n\nFig. 19 Vector¶\n\n\n\n\n\nFig. 20 Deformation¶\n\n\nElasticity\n\n\n\n\t\t\n\t\t\t Previous topic: Pure Convection : The Rotating Hill\n\t\t\tNext topic: The System of Stokes for Fluids \n\t\t\n\t","l":"tutorials/elasticity.html"},"65":{"t":"Classification of partial differential equations","p":"\n\t\t\n   \nClassification of partial differential equations¶\nSummary :\nIt is usually not easy to determine the type of a system.\nYet the approximations and algorithms suited to the problem depend on its type:\n\nFinite Elements compatible (LBB conditions) for elliptic systems\nFinite difference on the parabolic variable and a time loop on each elliptic subsystem of parabolic systems; better stability diagrams when the schemes are implicit in time.\nUpwinding, Petrov-Galerkin, Characteristics-Galerkin, Discontinuous-Galerkin, Finite Volumes for hyperbolic systems plus, possibly, a time loop.\n\nWhen the system changes type, then expect difficulties (like shock discontinuities) !\nElliptic, parabolic and hyperbolic equations\nA partial differential equation (PDE) is a relation between a function of several variables and its derivatives.\n\n\\[F\\left(\\varphi(x),{\\partial\\varphi\\over\\partial\nx_1}(x),\\cdots,{\\partial\\varphi\\over\\partial\nx_d}(x),{\\partial^2\\varphi\\over\\partial\nx^2_1}(x),\\cdots,{\\partial^m\\varphi\\over\\partial x^m_d}(x)\\right)  = \n0,\\quad\\forall x\\in\\Omega\\subset \\mathbb{R}^d\\]\nThe range of \\(x\\) over which the equation is taken, here \\(\\Omega\\), is called the domain of the PDE.\nThe highest derivation index, here \\(m\\), is called the order.\nIf \\(F\\) and \\(\\varphi\\) are vector valued functions, then the PDE is actually a system of PDEs.\nUnless indicated otherwise, here by convention one PDE corresponds to one scalar valued \\(F\\) and \\(\\varphi\\).\nIf \\(F\\) is linear with respect to its arguments, then the PDE is said to be linear.\nThe general form of a second order, linear scalar PDE is\n\n\\[\\alpha\\varphi + a\\cdot\\nabla\\varphi + B :\\nabla(\\nabla\\varphi)  = \nf{\\quad\\hbox{ in }\\quad}\\Omega\\subset \\mathbb{R}^d,\\]\nwhere \\({\\partial^2\\varphi\\over\\partial x_i\\partial x_j}\\) and \\(A:B\\) means \\(\\sum^d_{i,j = 1} a_{ij} b_{ij}.\\),\n\\(f(x),\\alpha(x)\\in \\mathbb{R}\\), \\(a(x)\\in \\mathbb{R}^d\\), \\(B(x)\\in \\mathbb{R}^{d\\times d}\\) are the PDE coefficients.\nIf the coefficients are independent of \\(x\\), the PDE is said to have constant coefficients.\nTo a PDE we associate a quadratic form, by replacing \\(\\varphi\\) by \\(1\\), \\(\\partial\\varphi/\\partial x_i\\) by \\(z_i\\) and \\(\\partial^2\\varphi/\\partial x_i\\partial x_j\\) by \\(z_i z_j\\), where \\(z\\) is a vector in \\(\\mathbb{R}^d\\):\n\n\\[\\alpha + A\\cdot z + z^T Bz  =  f.\\]\nIf it is the equation of an ellipse (ellipsoid if \\(d \\geq 2\\)), the PDE is said to be elliptic; if it is the equation of a parabola or a hyperbola, the PDE is said to be parabolic or hyperbolic.\nIf \\(B \\equiv 0\\), the degree is no longer 2 but 1, and for reasons that will appear more clearly later, the PDE is still said to be hyperbolic.\nThese concepts can be generalized to systems, by studying whether or not the polynomial system \\(P(z)\\) associated with the PDE system has branches at infinity (ellipsoids have no branches at infinity, paraboloids have one, and hyperboloids have several).\nIf the PDE is not linear, it is said to be non-linear.\nThese are said to be locally elliptic, parabolic, or hyperbolic according to the type of the linearized equation.\nFor example, for the non-linear equation\n\n\\[{\\partial^2\\varphi\\over\\partial t^2} - {\\partial\\varphi\\over\\partial x}{\\partial^2\\varphi\\over\\partial x^2}  =  1\\]\nwe have \\(d = 2\\), \\(x_1  =  t\\), \\(x_2  =  x\\) and its linearized form is:\n\n\\[{\\partial^2 u\\over\\partial t^2} - {\\partial u\\over\\partial x}{\\partial^2\\varphi\\over\\partial x^2} - {\\partial\\varphi\\over\\partial x}{\\partial^2 u\\over\\partial x^2}  =  0\\]\nwhich for the unknown \\(u\\) is locally elliptic if \\({\\partial\\varphi\\over\\partial x} < 0\\) and locally hyperbolic if \\({\\partial\\varphi\\over\\partial x} > 0\\).\n\nTip\nLaplace’s equation is elliptic:\n\n\\[\\Delta\\varphi \\equiv {\\partial^2\\varphi\\over\\partial x^2_1}\n    + {\\partial^2\\varphi\\over\\partial x^2_2}\n    + \\cdots\n    + {\\partial^2\\varphi\\over\\partial x^2_d}  =  f,\\ \\forall x\n    \\in \\Omega\\subset \\mathbb{R}^d\\]\n\n\nTip\nThe heat equation is parabolic in \\(Q  =  \\Omega\\times]0,T[\\subset \\mathbb{R}^{d+1}\\):\n\n\\[{\\partial\\varphi\\over\\partial t} - \\mu\\Delta\\varphi  =  f\n    \\ \\forall x\\in\\Omega\\subset \\mathbb{R}^d, \\ \\forall t\\in]0,T[\\]\n\n\nTip\nIf \\(\\mu>0\\), the wave equation is hyperbolic:\n\n\\[{\\partial^2\\varphi\\over\\partial t^2} - \\mu\\Delta\\varphi\n     =  f{\\ \\hbox{ in }\\ } Q.\\]\n\n\nTip\nThe convection diffusion equation is parabolic if \\(\\mu \\neq 0\\) and hyperbolic otherwise:\n\n\\[{\\partial\\varphi\\over\\partial t}\n    + a\\nabla\\varphi\n    - \\mu\\Delta\\varphi\n     =  f\\]\n\n\nTip\nThe biharmonic equation is elliptic:\n\n\\[\\Delta(\\Delta\\varphi)  =  f{\\ \\hbox{ in }\\ }\\Omega.\\]\n\nBoundary conditions\nA relation between a function and its derivatives is not sufficient to define the function.\nAdditional information on the boundary \\(\\Gamma = \\partial\\Omega\\) of \\(\\Omega\\), or on part of \\(\\Gamma\\) is necessary.\nSuch information is called a boundary condition.\nFor example:\n\n\\[\\varphi(x) \\ \\hbox{given},\\ \\forall x\\in \\Gamma,\\]\nis called a Dirichlet boundary condition. The Neumann condition is\n\n\\[{\\partial\\varphi\\over\\partial \\boldsymbol{n}}(x) \\ \\hbox{given on }\\\n\\Gamma \\hbox{ (or } \\boldsymbol{n}\\cdot B\\nabla\\varphi,\\hbox{given on }\\\n\\Gamma\\hbox{ for a general second order PDE)}\\]\nwhere \\(\\boldsymbol{n}\\) is the normal at \\(x\\in\\Gamma\\) directed towards the exterior of \\(\\Omega\\) (by definition \\({\\partial\\varphi\\over\\partial \\boldsymbol{n}} = \\nabla\\varphi\\cdot \\boldsymbol{n}\\)).\nAnother classical condition, called a Robin (or Fourier) condition is written as:\n\n\\[\\varphi(x) + \\beta(x) {\\partial\\varphi\\over\\partial \\boldsymbol{n}}(x) \\ \\hbox{given on}\\ \\Gamma.\\]\nFinding a set of boundary conditions that defines a unique \\(\\varphi\\) is a difficult art.\nIn general, an elliptic equation is well posed (i.e. \\(\\varphi\\) is unique) with one Dirichlet, Neumann or Robin condition on the whole boundary.\nThus, Laplace’s equation is well posed with a Dirichlet or Neumann condition but also with :\n\n\\[\\varphi \\ \\hbox{given on}\\ \\Gamma_1,\\ {\\partial\\varphi\\over\\partial \\boldsymbol{n}} \\ \\hbox{given on}\\ \\Gamma_2, \\ \\Gamma_1\\cup\\Gamma_2  = \\Gamma,\\ {\\dot{\\Gamma_1}\\cap\\dot{\\Gamma_2}}  = \\emptyset.\\]\nParabolic and hyperbolic equations rarely require boundary conditions on all of \\(\\Gamma\\times]0,T[\\).\nFor instance, the heat equation is well posed with :\n\n\\[\\varphi \\ \\hbox{given at}\\ t = 0 \\ \\hbox{and Dirichlet or Neumann or mixed conditions on}\\\n\\partial\\Omega.\\]\nHere \\(t\\) is time so the first condition is called an initial condition.\nThe whole set of conditions is also called Cauchy condition.\nThe wave equation is well posed with :\n\n\\[\\varphi \\ \\hbox{and}\\ {\\partial\\varphi\\over\\partial t} \\\n\\hbox{given at}\\ t = 0\n\\ \\hbox{and Dirichlet or Neumann or mixed conditions on}\\\n\\partial\\Omega.\\]\n\n\n\n\t\t\n\t\t\t Previous topic: Getting started\n\t\t\tNext topic: Membrane \n\t\t\n\t","l":"tutorials/equationsClassification.html"},"66":{"t":"Irrotational Fan Blade Flow and Thermal effects","p":"\n\t\t\n   \nIrrotational Fan Blade Flow and Thermal effects¶\nSummary :\nHere we will learn how to deal with a multi-physics system of PDEs on a complex geometry, with multiple meshes within one problem.\nWe also learn how to manipulate the region indicator and see how smooth is the projection operator from one mesh to another.\nIncompressible flow\nWithout viscosity and vorticity incompressible flows have a velocity given by:\n\n\\[\\begin{split}\\boldsymbol{u} = \\left(\\begin{matrix}{\\partial \\psi \\over \\partial x }\\\\\n-\\partial \\psi \\over \\partial y \\end{matrix}\\right), \\quad\n\\mbox{ where }\\psi\\mbox{ is solution of }\\quad \\Delta \\psi  = 0\\end{split}\\]\nThis equation expresses both incompressibility (\\(\\nabla\\cdot u = 0\\)) and absence of vortex (\\(\\nabla\\times u  = 0\\)).\nAs the fluid slips along the walls, normal velocity is zero, which means that \\(\\psi\\) satisfies:\n\n\\[\\psi \\hbox{ constant on the walls}.\\]\nOne can also prescribe the normal velocity at an artificial boundary, and this translates into non constant Dirichlet data for \\(\\psi\\).\nAirfoil\nLet us consider a wing profile \\(S\\) in a uniform flow.\nInfinity will be represented by a large circle \\(C\\) where the flow is assumed to be of uniform velocity; one way to model this problem is to write:\n\n\\[\\Delta \\psi  = 0 \\hbox{ in } \\Omega, \\qquad\n\\psi |_{S} = -l, \\quad\n\\psi|_{C} =  {\\boldsymbol{u}_\\infty}.\\boldsymbol{x}^\\perp\\]\nwhere \\(\\partial\\Omega = C\\cup S\\) and \\(l\\) is the lift force.\nThe NACA0012 Airfoil\nAn equation for the upper surface of a NACA0012 (this is a classical wing profile in aerodynamics) is:\n\n\\[y  =  0.17735\\sqrt{x}-0.075597x- 0.212836x^2+0.17363x^3-0.06254x^4.\\]\n 1 // Parameters\n 2 int  S  =  99;// wing label\n 3 // u infty\n 4 real theta  =  8*pi/180;// // 1 degree on incidence  = >  lift\n 5 real lift  =  theta*0.151952/0.0872665; //  lift approximation formula\n 6 real  uinfty1 =  cos(theta), uinfty2 =  sin(theta);\n 7 // Mesh\n 8 func naca12  =  0.17735*sqrt(x) - 0.075597*x - 0.212836*(x^2) + 0.17363*(x^3) - 0.06254*(x^4);\n 9 border C(t = 0., 2.*pi){x = 5.*cos(t); y = 5.*sin(t);}\n10 border Splus(t = 0., 1.){x = t; y = naca12; label = S;}\n11 border Sminus(t = 1., 0.){x = t; y = -naca12; label = S;}\n12 mesh Th  =  buildmesh(C(50) + Splus(70) + Sminus(70));\n13 \n14 // Fespace\n15 fespace Xh(Th, P2);\n16 Xh psi, w;\n17 macro grad(u) [dx(u),dy(u)]// def of grad operator\n18 // Solve\n19 solve potential(psi, w)\n20     =  int2d(Th)(\n21         grad(psi)'*grad(w) //  scalar product\n22    )\n23    + on(C, psi  =  [uinfty1,uinfty2]'*[y,-x])\n24    + on(S, psi = -lift) // to get a correct value\n25    ;\n26 \n27 plot(psi, wait = 1);\n\n\nA zoom of the streamlines are shown on Fig. 15.\n\n\n\n\nFig. 15 Zoom around the NACA0012 airfoil showing the streamlines (curve \\(\\psi = \\) constant).\nTo obtain such a plot use the interactive graphic command: “+” and p.¶\n\n\n\n\n\nFig. 16 Temperature distribution at time T = 25 (now the maximum is at 90 instead of 120).¶\n\n\nThe NACA0012 Airfoil\n\nHeat Convection around the airfoil¶\nNow let us assume that the airfoil is hot and that air is there to cool it.\nMuch like in the previous section the heat equation for the temperature \\(v\\) is\n\n\\[\\partial_t v -\\nabla\\cdot(\\kappa\\nabla v) + u\\cdot\\nabla v  = 0,~~v(t = 0) = v_0, ~~\\frac{\\partial v}{\\partial\\boldsymbol{n}}|_{C,u\\cdot n>0} = 0, v|_{C,u\\cdot n<0} = 0\\]\nBut now the domain is outside AND inside \\(S\\) and \\(\\kappa\\) takes a different value in air and in steel.\nFurthermore there is convection of heat by the flow, hence the term \\(u\\cdot\\nabla v\\) above.\nConsider the following, to be plugged at the end of the previous program:\n 1 // Corrected by F. Hecht may 2021\n 2 // Parameters\n 3 real S  =  99;\n 4 \n 5 border C(t = 0, 2*pi){x = 3*cos(t); y = 3*sin(t);} // Label 1,2\n 6 border Splus(t = 0, 1){x = t; y = 0.17735*sqrt(t) - 0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4); label = S;}\n 7 border Sminus(t = 1, 0){x = t; y = -(0.17735*sqrt(t) - 0.075597*t - 0.212836*(t^2) + 0.17363*(t^3) - 0.06254*(t^4)); label = S;}\n 8 mesh Th  =  buildmesh(C(50) + Splus(70) + Sminus(70));\n 9 // Fespace\n10 fespace Vh(Th, P2);\n11 Vh psi, w;\n12 \n13 // Problem\n14 solve potential(psi, w)\n15  =  int2d(Th)(dx(psi)*dx(w)+dy(psi)*dy(w))\n16      + on(C, psi  =  y)\n17      + on(S, psi = 0);\n18 \n19 // Plot\n20 plot(psi, wait = 1);\n21 \n22 /// Thermic\n23 // Parameters\n24 real dt  =  0.005, nbT  =  50;\n25 \n26 // Mesh\n27 border D(t = 0, 2){x = 1+t; y = 0;}\n28 mesh Sh  =  buildmesh(C(25) + Splus(-90) + Sminus(-90) + D(200));\n29 int steel  =  Sh(0.5, 0).region, air  =  Sh(-1, 0).region;\n30 // Change label to put BC on In flow\n31 // Fespace\n32 fespace Wh(Sh, P1);\n33 Wh  vv;\n34 \n35 fespace W0(Sh, P0);\n36 W0 k  =  0.01*(region  =  =  air) + 0.1*(region  =  =  steel);\n37 W0 u1  =  dy(psi)*(region  =  =  air), u2  =  -dx(psi)*(region  =  =  air);\n38 Wh v  =  120*(region  =  =  steel), vold;\n39 // set the label to 10 on inflow boundary to inforce the temperature.\n40 Sh  =  change(Sh,flabel  =  (label  =  =  C &&  [u1,u2]'*N<0) ? 10 : label);\n41 int i;\n42 problem thermic(v, vv, init = i, solver = LU)\n43  =  int2d(Sh)(\n44               v*vv/dt + k*(dx(v)*dx(vv) + dy(v)*dy(vv))\n45             + 10*(u1*dx(v) + u2*dy(v))*vv\n46            )\n47 - int2d(Sh)(vold*vv/dt)\n48 + on(10, v =  0);\n49 \n50 \n51 for(i  =  0; i < nbT; i++) {\n52   vold[] =  v[];\n53   thermic;\n54   plot(v);\n55 }\n\n\n\nNote\nHow steel and air are identified by the mesh parameter region which is defined when buildmesh is called and takes an integer value corresponding to each connected component of \\(\\Omega\\);\n\n\nNote\nWe use the change function to put label 10 on inflow boundary, remark the trick to chanhe only label C flabel  =  (label  =  =  C &&  [u1,u2]'*N<0) ? 10 : label\nHow the convection terms are added without upwinding.\nUpwinding is necessary when the Pecley number \\(|u|L/\\kappa\\) is large (here is a typical length scale), The factor 10 in front of the convection terms is a quick way of multiplying the velocity by 10 (else it is too slow to see something).\nThe solver is Gauss’ LU factorization and when init \\(\\neq 0\\) the LU decomposition is reused so it is much faster after the first iteration.\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Thermal Conduction\n\t\t\tNext topic: Pure Convection : The Rotating Hill \n\t\t\n\t","l":"tutorials/fanBlade.html"},"67":{"t":"A Flow with Shocks","p":"\n\t\t\n   \nA Flow with Shocks¶\nCompressible Euler equations should be discretized with Finite Volumes or FEM with flux up-winding scheme but these are not implemented in FreeFEM.\nNevertheless acceptable results can be obtained with the method of characteristics provided that the mean values \\(\\displaystyle \\bar f = \\frac12\\left(f^++f^-\\right)\\) are used at shocks in the scheme, and finally mesh adaptation.\n\n(6)¶\\[\\begin{split}\\begin{array}{rcl}\n    \\partial_t\\rho+\\bar u\\nabla\\rho + \\bar\\rho\\nabla\\cdot u & = & 0\\nonumber\\\\\n    \\bar\\rho( \\partial_t u+\\frac{\\overline{\\rho u}}{\\bar\\rho}\\nabla u +\\nabla p & = & 0\\nonumber\\\\\n    \\partial_t p + \\bar u\\nabla p +(\\gamma-1)\\bar p\\nabla\\cdot u & = & 0\\\\\n\\end{array}\\end{split}\\]\nOne possibility is to couple \\(u,p\\) and then update \\(\\rho\\), i.e.:\n\n(7)¶\\[\\begin{split}\\begin{array}{rcl}\n    \\frac 1{(\\gamma-1)\\delta t\\bar p^m} (p^{m+1}-p^m \\circ X^m) + \\nabla\\cdot u^{m+1} & = & 0\\nonumber\\\\\n    \\frac{\\bar\\rho^m}{\\delta t}(u^{m+1}-u^m \\circ {\\tilde X}^m ) +\\nabla p^{m+1} & = & 0\\nonumber\\\\\n    \\rho^{m+1}  =  \\rho^m \\circ X^m + \\frac{\\bar\\rho^m}{(\\gamma-1)\\bar p^m}(p^{m+1} &-& p^m \\circ X^m)\n\\end{array}\\end{split}\\]\nA numerical result is given on Fig. 42 and the FreeFEM script is\n  1 // Parameters\n  2 verbosity  =  1;\n  3 int anew  =  1;\n  4 int m  =  5;\n  5 real x0  =  0.5;\n  6 real y0  =  0.;\n  7 real rr  =  0.2;\n  8 real dt  =  0.01;\n  9 real u0  =  2.;\n 10 real err0  =  0.00625;\n 11 real pena  =  2.;\n 12 \n 13 // Mesh\n 14 border ccc(t = 0, 2){x = 2-t; y = 1;};\n 15 border ddd(t = 0, 1){x = 0; y = 1-t;};\n 16 border aaa1(t = 0, x0-rr){x = t; y = 0;};\n 17 border cercle(t = pi, 0){x = x0+rr*cos(t); y = y0+rr*sin(t);}\n 18 border aaa2(t = x0+rr, 2){x = t; y = 0;};\n 19 border bbb(t = 0, 1){x = 2; y = t;};\n 20 \n 21  mesh Th;\n 22 if(anew)\n 23    Th  =  buildmesh (ccc(5*m) + ddd(3*m) + aaa1(2*m) + cercle(5*m) + aaa2(5*m) + bbb(2*m));\n 24 else\n 25    Th  =  readmesh(\"Th_circle.mesh\"); plot(Th);\n 26 \n 27 // fespace\n 28 fespace Wh(Th, P1);\n 29 Wh u, v;\n 30 Wh u1, v1;\n 31 Wh uh, vh;\n 32 \n 33 fespace Vh(Th, P1);\n 34 Vh r, rh, r1;\n 35 \n 36 // Macro\n 37 macro dn(u) (N.x*dx(u)+N.y*dy(u)) //\n 38 \n 39 // Initialization\n 40 if(anew){\n 41    u1  =  u0;\n 42    v1  =  0;\n 43    r1  =  1;\n 44 }\n 45 else{\n 46    ifstream g(\"u.txt\"); g >> u1[];\n 47    ifstream gg(\"v.txt\"); gg >> v1[];\n 48    ifstream ggg(\"r.txt\"); ggg >> r1[];\n 49    plot(u1, ps = \"eta.eps\", value = 1, wait = 1);\n 50    err0  =  err0/10;\n 51    dt  =  dt/10;\n 52 }\n 53 \n 54 // Problem\n 55 problem euler(u, v, r, uh, vh, rh)\n 56     =  int2d(Th)(\n 57         (u*uh + v*vh + r*rh)/dt\n 58       + ((dx(r)*uh + dy(r)*vh) - (dx(rh)*u + dy(rh)*v))\n 59    )\n 60    + int2d(Th)(\n 61       - (\n 62            rh*convect([u1,v1],-dt,r1)\n 63          + uh*convect([u1,v1],-dt,u1)\n 64          + vh*convect([u1,v1],-dt,v1)\n 65       )/dt\n 66    )\n 67    +int1d(Th, 6)(\n 68         rh*u\n 69    )\n 70    + on(2, r = 0)\n 71    + on(2, u = u0)\n 72    + on(2, v = 0)\n 73    ;\n 74 \n 75 // Iterations\n 76 int j  =  80;\n 77 for(int k  =  0; k < 3; k++){\n 78    if(k =  = 20){\n 79       err0  =  err0/10;\n 80       dt  =  dt/10;\n 81       j  =  5;\n 82    }\n 83 \n 84    // Solve\n 85    for(int i  =  0; i < j; i++){\n 86       euler;\n 87       u1 = u;\n 88       v1 = v;\n 89       r1 = abs(r);\n 90       cout << \"k  =  \" << k << \" E  =  \" << int2d(Th)(u^2+v^2+r) << endl;\n 91       plot(r, value = 1);\n 92    }\n 93 \n 94    // Mesh adaptation\n 95    Th  =  adaptmesh (Th, r, nbvx = 40000, err = err0, abserror = 1, nbjacoby = 2, omega = 1.8, ratio = 1.8, nbsmooth = 3, splitpbedge = 1, maxsubdiv = 5, rescaling = 1);\n 96    plot(Th);\n 97    u  =  u;\n 98    v  =  v;\n 99    r  =  r;\n100 \n101    // Save\n102    savemesh(Th, \"Th_circle.mesh\");\n103    ofstream f(\"u.txt\"); f << u[];\n104    ofstream ff(\"v.txt\"); ff << v[];\n105    ofstream fff(\"r.txt\"); fff << r[];\n106    r1  =  sqrt(u*u+v*v);\n107    plot(r1, ps = \"mach.eps\", value = 1);\n108    r1  =  r;\n109 }\n\n\n\n\n\nFig. 42 Pressure for a Euler flow around a disk at Mach 2 computed by (7)¶\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Optimal Control\n\t\t\tNext topic: Time dependent schema optimization for heat equations \n\t\t\n\t","l":"tutorials/flowWithShocks.html"},"68":{"t":"Time dependent schema optimization for heat equations","p":"\n\t\t\n   \nTime dependent schema optimization for heat equations¶\nFirst, it is possible to define variational forms, and use this forms to build matrix and vector to make very fast script (4 times faster here).\nFor example solve the ThermalConduction problem, we must solve the temperature equation in \\(\\Omega\\) in a time interval (0,T).\n\n\\[\\begin{split}\\begin{array}{rcll}\n    \\partial_t u -\\nabla\\cdot(\\kappa\\nabla u) & = & 0 &\\hbox{ in } \\Omega\\times(0,T)\\\\\n    u(x,y,0) & = & u_0 + x u_1\\\\\n    u & = & 30 &\\hbox{ on } \\Gamma_{24}\\times(0,T)\\\\\n    \\kappa\\frac{\\partial u}{\\partial n} + \\alpha(u-u_e) & = & 0 &\\hbox{ on } \\Gamma\\times(0,T)\n\\end{array}\\end{split}\\]\nThe variational formulation is in \\(L^2(0,T;H^1(\\Omega))\\); we shall seek \\(u^n\\) satisfying:\n\n\\[\\forall w \\in V_{0};\\ \\int_\\Omega \\frac{u^n-u^{n-1}}{\\delta t} w + \\kappa\\nabla u^n\\nabla w) +\\int_\\Gamma\\alpha(u^n-u_{ue})w = 0\\]\nwhere \\(V_0  =  \\{w\\in H^1(\\Omega)/ w_{|\\Gamma_{24}} = 0\\}\\).\nSo, to code the method with the matrices \\(A = (A_{ij})\\), \\(M = (M_{ij})\\), and the vectors \\(u^n, b^n, b',b\", b_{cl}\\) (notation if \\(w\\) is a vector then \\(w_i\\) is a component of the vector).\n\n\\[\\begin{split}u^n  =  A^{-1} b^n,\n    \\quad b'  =  b_0 + M u^{n-1},\n    \\quad b\" =  \\frac{1}{\\varepsilon} \\; b_{cl} ,\n    \\quad b^n_i  =  \\left\\{\n        \\begin{array}{cl}\n            b''_i & \\mbox{if }\\ i \\in \\Gamma_{24} \\\\\n            b'_i & \\mbox{else }\n        \\end{array}\\right.\n    \\label{eq tgv}\\end{split}\\]\nWhere with \\(\\frac{1}{\\varepsilon}  =  \\mathtt{tgv}  =  10^{30}\\):\n\n\\[\\begin{split}\\begin{array}{rcl}\n    A_{ij} & = &\n      \\left\\{\\begin{array}{cl}\n      \\frac{1}{\\varepsilon} & \\mbox{if } i \\in \\Gamma_{24}, \\mbox{and}\\quad j = i\\\\\n      \\displaystyle{\\int_{\\Omega} w_j w_i / dt + k (\\nabla w_j. \\nabla w_i ) + \\int_{\\Gamma_{13}} \\alpha w_j w_i} & \\mbox{else}\n      \\end{array}\\right.\\\\\n    M_{ij} & = &\n      \\left\\{\\begin{array}{cl}\n      \\frac{1}{\\varepsilon} & \\mbox{if } i \\in \\Gamma_{24}, \\mbox{and}\\quad j = i \\\\\n      \\displaystyle n{\\int_{\\Omega} w_j w_i / dt} & \\mbox{else}\n      \\end{array}\\right. \\\\\n    b_{0,i} & = & n{\\int_{\\Gamma_{13}} \\alpha u_{ue} w_i } \\\\\n    b_{cl} & = & u^{0} \\quad \\mbox{the initial data}\n\\end{array}\\end{split}\\]\nThe Fast version script:\n1 ...\n2 Vh u0 = fu0, u = u0;\n\n\nCreate three variational formulation, and build the matrices \\(A\\),\\(M\\).\n 1 varf vthermic (u, v)\n 2      =  int2d(Th)(\n 3           u*v/dt\n 4         + k*(dx(u)*dx(v) + dy(u)*dy(v))\n 5     )\n 6     + int1d(Th, 1, 3)(\n 7           alpha*u*v\n 8     )\n 9     + on(2,4,u = 1)\n10     ;\n11 \n12 varf vthermic0 (u, v)\n13      =  int1d(Th, 1, 3)(\n14           alpha*ue*v\n15     )\n16     ;\n17 varf vMass (u,v)\n18      =  int2d(Th)(\n19           u*v/dt\n20     )\n21     + on(2, 4, u = 1)\n22     ;\n23 \n24 real tgv  =  1e30;\n25 matrix A  =  vthermic(Vh, Vh, tgv = tgv, solver = CG);\n26 matrix M  =  vMass(Vh, Vh);\n\n\nNow, to build the right hand size; we need 4 vectors.\n 1 real[int] b0  =  vthermic0(0,Vh); //constant part of RHS\n 2 real[int] bcn  =  vthermic(0,Vh); //tgv on Dirichlet part\n 3 real[int] bcl  =  tgv*u0[];   //the Dirichlet B.C. part\n 4 \n 5 // The fast loop\n 6 for(real t  =  0; t < T; t + =  dt){\n 7     real[int] b  =  b0;   //the RHS\n 8     b + =  M*u[]; //add the the time dependent part\n 9     b  =  bcn ? bcl : b; //do $\\forall i$: b[i]  =  bcn[i] ? bcl[i] : b[i];\n10     u[]  =  A^-1*b; //solve linear problem\n11     plot(u);\n12 }\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: A Flow with Shocks\n\t\t\tNext topic: Tutorial to write a transient Stokes solver in matrix form \n\t\t\n\t","l":"tutorials/heatEquationOptimization.html"},"69":{"t":"Heat Exchanger","p":"\n\t\t\n   \nHeat Exchanger¶\nSummary:\nHere we shall learn more about geometry input and triangulation files, as well as read and write operations.\nThe problem Let \\(\\{C_{i}\\}_{1,2}\\), be 2 thermal conductors within an enclosure \\(C_0\\) (see Fig. 8).\n\n\n\nFig. 8 Heat exchanger geometry¶\n\n\nThe first one is held at a constant temperature \\({u} _{1}\\) the other one has a given thermal conductivity \\(\\kappa_2\\) 3 times larger than the one of \\(C_0\\).\nWe assume that the border of enclosure \\(C_0\\) is held at temperature \\(20^\\circ C\\) and that we have waited long enough for thermal equilibrium.\nIn order to know \\({u} (x)\\) at any point \\(x\\) of the domain \\(\\Omega\\), we must solve:\n\n\\[\\nabla\\cdot(\\kappa\\nabla{u})  =  0 \\hbox{ in } \\Omega,\n\\quad {u}_{|\\Gamma}  =  g\\]\nwhere \\(\\Omega\\) is the interior of \\(C_0\\) minus the conductor \\(C_1\\) and \\(\\Gamma\\) is the boundary of \\(\\Omega\\), that is \\(C_0\\cup C_1\\).\nHere \\(g\\) is any function of \\(x\\) equal to \\({u}_i\\) on \\(C_i\\).\nThe second equation is a reduced form for:\n\n\\[{u}  = {u} _{i} \\hbox{ on } C_{i}, \\quad i = 0,1.\\]\nThe variational formulation for this problem is in the subspace \\(H^1_0(\\Omega) \\subset H^1(\\Omega)\\) of functions which have zero traces on \\(\\Gamma\\).\n\n\\[u-g\\in H^1_0(\\Omega): \\int_{\\Omega}{\\nabla u \\nabla v}  =  0\\forall v\\in H^1_0(\\Omega)\\]\nLet us assume that \\(C_0\\) is a circle of radius 5 centered at the origin, \\(C_i\\) are rectangles, \\(C_1\\) being at the constant temperature \\(u_1 = 60^\\circ C\\) (so we can only consider its boundary).\n 1 // Parameters\n 2 int C1 = 99;\n 3 int C2 = 98; //could be anything such that ! = 0 and C1! = C2\n 4 \n 5 // Mesh\n 6 border C0(t = 0., 2.*pi){x = 5.*cos(t); y = 5.*sin(t);}\n 7 \n 8 border C11(t = 0., 1.){x = 1.+t; y = 3.; label = C1;}\n 9 border C12(t = 0., 1.){x = 2.; y = 3.-6.*t; label = C1;}\n10 border C13(t = 0., 1.){x = 2.-t; y = -3.; label = C1;}\n11 border C14(t = 0., 1.){x = 1.; y = -3.+6.*t; label = C1;}\n12 \n13 border C21(t = 0., 1.){x = -2.+t; y = 3.; label = C2;}\n14 border C22(t = 0., 1.){x = -1.; y = 3.-6.*t; label = C2;}\n15 border C23(t = 0., 1.){x = -1.-t; y = -3.; label = C2;}\n16 border C24(t = 0., 1.){x = -2.; y = -3.+6.*t; label = C2;}\n17 \n18 plot(   C0(50) //to see the border of the domain\n19     + C11(5)+C12(20)+C13(5)+C14(20)\n20     + C21(-5)+C22(-20)+C23(-5)+C24(-20),\n21     wait = true, ps = \"heatexb.eps\");\n22 \n23 mesh Th = buildmesh(C0(50)\n24     + C11(5)+C12(20)+C13(5)+C14(20)\n25     + C21(-5)+C22(-20)+C23(-5)+C24(-20));\n26 \n27 plot(Th,wait = 1);\n28 \n29 // Fespace\n30 fespace Vh(Th, P1);\n31 Vh u, v;\n32 Vh kappa = 1 + 2*(x<-1)*(x>-2)*(y<3)*(y>-3);\n33 \n34 // Solve\n35 solve a(u, v)\n36      =  int2d(Th)(\n37           kappa*(\n38               dx(u)*dx(v)\n39             + dy(u)*dy(v)\n40         )\n41     )\n42     +on(C0, u = 20)\n43     +on(C1, u = 60)\n44     ;\n45 \n46 // Plot\n47 plot(u, wait = true, value = true, fill = true, ps = \"HeatExchanger.eps\");\n\n\nNote the following:\n\nC0 is oriented counterclockwise by \\(t\\), while C1 is oriented clockwise and C2 is oriented counterclockwise.\nThis is why C1 is viewed as a hole by buildmesh.\nC1 and C2 are built by joining pieces of straight lines.\nTo group them in the same logical unit to input the boundary conditions in a readable way we assigned a label on the boundaries.\nAs said earlier, borders have an internal number corresponding to their order in the program (check it by adding a cout << C22; above).\nThis is essential to understand how a mesh can be output to a file and re-read (see below).\nAs usual the mesh density is controlled by the number of vertices assigned to each boundary.\nIt is not possible to change the (uniform) distribution of vertices but a piece of boundary can always be cut in two or more parts, for instance C12 could be replaced by C121+C122:\n\n1 // border C12(t = 0.,1.){x = 2.; y = 3.-6.*t; label = C1;}\n2 border C121(t = 0.,0.7){x = 2.; y = 3.-6.*t; label = C1;}\n3 border C122(t = 0.7,1.){x = 2.; y = 3.-6.*t; label = C1;}\n4 ...\n5 buildmesh(.../*+ C12(20) */ + C121(12) + C122(8) + ...);\n\n\n\n\n\n\nFig. 9 Heat exchanger mesh¶\n\n\n\n\n\nFig. 10 Heat exchanger solution¶\n\n\nHeat exchanger\n\nTip\nExercise :\nUse the symmetry of the problem with respect to the x axes.\nTriangulate only one half of the domain, and set homogeneous Neumann conditions on the horizontal axis.\n\nWriting and reading triangulation files Suppose that at the end of the previous program we added the line\n1 savemesh(Th, \"condensor.msh\");\n\n\nand then later on we write a similar program but we wish to read the mesh from that file.\nThen this is how the condenser should be computed:\n 1 // Mesh\n 2 mesh Sh  =  readmesh(\"condensor.msh\");\n 3 \n 4 // Fespace\n 5 fespace Wh(Sh, P1);\n 6 Wh us, vs;\n 7 \n 8 // Solve\n 9 solve b(us, vs)\n10      =  int2d(Sh)(\n11           dx(us)*dx(vs)\n12         + dy(us)*dy(vs)\n13     )\n14     +on(1, us = 0)\n15     +on(99, us = 1)\n16     +on(98, us = -1)\n17     ;\n18 \n19 // Plot\n20 plot(us);\n\n\nNote that the names of the boundaries are lost but either their internal number (in the case of C0) or their label number (for C1 and C2) are kept.\n\n\n\n\t\t\n\t\t\t Previous topic: Membrane\n\t\t\tNext topic: Acoustics \n\t\t\n\t","l":"tutorials/heatExchanger.html"},"70":{"t":"Learning by Examples","p":"\n\t\t\n   \nLearning by Examples¶\n\n\n\n\nThe FreeFEM language is typed, polymorphic and reentrant with macro generation.\nEvery variable must be typed and declared in a statement, that is separated from the next by a semicolon ;.\nThe FreeFEM language is a C++ idiom with something that is more akin to LaTeX.\nFor the specialist, one key guideline is that FreeFEM rarely generates an internal finite element array, this was adopted for speed and consequently FreeFEM could be hard to beat in terms of execution speed, except for the time lost in the interpretation of the language (which can be reduced by a systematic usage of varf and matrix instead of problem).\nThe Development Cycle: Edit–Run/Visualize–Revise\nMany examples and tutorials are given there after and in the examples section.\nIt is better to study them and learn by example.\nIf you are a beginner in the finite element method, you may also have to read a book on variational formulations.\nThe development cycle includes the following steps:\nModeling: From strong forms of PDE to weak forms, one must know the variational formulation to use FreeFEM; one should also have an eye on the reusability of the variational formulation so as to keep the same internal matrices; a typical example is the time dependent heat equation with an implicit time scheme: the internal matrix can be factorized only once and FreeFEM can be taught to do so.\nProgramming: Write the code in FreeFEM language using a text editor such as the one provided in your integrated environment.\nRun: Run the code (here written in file mycode.edp).\nThat can also be done in terminal mode by :\n1 FreeFem++ mycode.edp\n\n\nVisualization: Use the keyword plot directly in mycode.edp to display functions while FreeFEM is running.\nUse the plot-parameter wait = 1 to stop the program at each plot.\nDebugging: A global variable debug (for example) can help as in wait = true to wait = false.\n 1 bool debug  =  true;\n 2 \n 3 border a(t = 0, 2.*pi){x = cos(t); y = sin(t); label = 1;};\n 4 border b(t = 0, 2.*pi){x = 0.8+0.3*cos(t); y = 0.3*sin(t); label = 2;};\n 5 \n 6 plot(a(50) + b(-30), wait = debug); //plot the borders to see the intersection\n 7 //so change (0.8 in 0.3 in b)\n 8 //if debug  =  =  true, press Enter to continue\n 9 \n10 mesh Th  =  buildmesh(a(50) + b(-30));\n11 plot(Th, wait = debug); //plot Th then press Enter\n12 \n13 fespace Vh(Th,P2);\n14 Vh f  =  sin(pi*x)*cos(pi*y);\n15 Vh g  =  sin(pi*x + cos(pi*y));\n16 \n17 plot(f, wait = debug); //plot the function f\n18 plot(g, wait = debug); //plot the function g\n\n\nChanging debug to false will make the plots flow continuously.\nWatching the flow of graphs on the screen (while drinking coffee) can then become a pleasant experience.\nError management\nError messages are displayed in the console window.\nThey are not always very explicit because of the template structure of the C++ code (we did our best!).\nNevertheless they are displayed at the right place.\nFor example, if you forget parenthesis as in:\n1 bool debug  =  true;\n2 mesh Th  =  square(10,10;\n3 plot(Th);\n\n\nthen you will get the following message from FreeFEM:\n 1 2 : mesh Th  =  square(10,10;\n 2 Error line number 2, in file bb.edp, before  token ;\n 3 parse error\n 4 current line  =  2\n 5 syntax error\n 6 current line  =  2\n 7 Compile error : syntax error\n 8 line number :2, ;\n 9 error Compile error : syntax error\n10 line number :2, ;\n11 code  =  1 mpirank: 0\n\n\nIf you use the same symbol twice as in:\n1 real aaa  =  1;\n2 real aaa;\n\n\nthen you will get the message:\n1 2 : real aaa; The identifier aaa exists\n2       the existing type is <Pd>\n3       the new  type is <Pd>\n\n\nIf you find that the program isn’t doing what you want you may also use cout to display in text format on the console window the value of variables, just as you would do in C++.\nThe following example works:\n1 ...\n2 fespace Vh(Th, P1);\n3 Vh u;\n4 cout << u;\n5 matrix A  =  a(Vh, Vh);\n6 cout << A;\n\n\nAnother trick is to comment in and out by using // as in C++.\nFor example:\n1 real aaa  = 1;\n2 // real aaa;\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Contributing\n\t\t\tNext topic: Getting started \n\t\t\n\t","l":"tutorials/index.html"},"71":{"t":"Plotting in Matlab and Octave","p":"\n\t\t\n   \nPlotting in Matlab and Octave¶\n\nOverview¶\nIn order to create a plot of a FreeFEM simulation in Matlab© or Octave two steps are necessary:\n\nThe mesh, the finite element space connectivity and the simulation data must be exported into files\nThe files must be imported into the Matlab / Octave workspace. Then the data can be visualized with the ffmatlib library\n\nThe steps are explained in more detail below using the example of a stripline capacitor.\n\nNote\nFinite element variables must be in P1 or P2. The simulation data can be 2D or 3D.\n\n\n\n2D Problem¶\nConsider a stripline capacitor problem which is also shown in Fig. 52. On the two boundaries (the electrodes) \\(C_{A}\\), \\(C_{K}\\) a Dirichlet condition and on the enclosure \\(C_{B}\\) a Neumann condition is set. The electrostatic potential \\(u\\) between the two electrodes is given by the Laplace equation\n\n\\[\\Delta u(x,y)  =  0\\]\nand the electrostatic field \\(\\mathbf{E}\\) is calculated by\n\n\\[\\mathbf{E}  =  -\\nabla u\\]\n 1 int CA = 3, CK = 4, CB = 5;\n 2 real w2 = 1.0, h = 0.4, d2 = 0.5;\n 3 \n 4 border bottomA(t = -w2,w2){ x = t; y = d2; label = CA;};\n 5 border rightA(t = d2,d2+h){ x = w2; y = t; label = CA;};\n 6 border topA(t = w2,-w2){ x = t; y = d2+h; label = CA;};\n 7 border leftA(t = d2+h,d2){ x = -w2; y = t; label = CA;};\n 8 \n 9 border bottomK(t = -w2,w2){ x = t; y = -d2-h; label = CK;};\n10 border rightK(t = -d2-h,-d2){ x = w2; y = t; label = CK;};\n11 border topK(t = w2,-w2){ x = t; y = -d2; label = CK;};\n12 border leftK(t = -d2,-d2-h){ x = -w2; y = t; label = CK;};\n13 \n14 border enclosure(t = 0,2*pi){x = 5*cos(t); y = 5*sin(t); label = CB;}\n15 \n16 int n = 15;\n17 mesh Th  =  buildmesh(enclosure(3*n)+\n18              bottomA(-w2*n)+topA(-w2*n)+rightA(-h*n)+leftA(-h*n)+\n19              bottomK(-w2*n)+topK(-w2*n)+rightK(-h*n)+leftK(-h*n));\n20 \n21 fespace Vh(Th,P1);\n22 \n23 Vh u,v;\n24 real u0 = 2.0;\n25 \n26 problem Laplace(u,v,solver = LU)  = \n27           int2d(Th)(dx(u)*dx(v) + dy(u)*dy(v))\n28         + on(CA,u = u0)+on(CK,u = 0);\n29 \n30 real error = 0.01;\n31 for (int i = 0;i<1;i++){\n32    Laplace;\n33    Th = adaptmesh(Th,u,err = error);\n34    error = error/2.0;\n35 }\n36 Laplace;\n37 \n38 Vh Ex, Ey;\n39 Ex  =  -dx(u);\n40 Ey  =  -dy(u);\n41 \n42 plot(u,[Ex,Ey],wait = true);\n\n\n\n\nExporting Data¶\nThe mesh is stored with the FreeFEM command savemesh(), while the connectivity of the finite element space and the simulation data are stored with the macro commands ffSaveVh() and ffSaveData(). These two commands are located in the ffmatlib.idp file which is included in the ffmatlib. Therefore, to export the stripline capacitor data the following statement sequence must be added to the FreeFEM code:\n 1 include \"ffmatlib.idp\"\n 2 \n 3 //Save mesh\n 4 savemesh(Th,\"capacitor.msh\");\n 5 //Save finite element space connectivity\n 6 ffSaveVh(Th,Vh,\"capacitor_vh.txt\");\n 7 //Save some scalar data\n 8 ffSaveData(u,\"capacitor_potential.txt\");\n 9 //Save a 2D vector field\n10 ffSaveData2(Ex,Ey,\"capacitor_field.txt\");\n\n\n\n\nImporting Data¶\nThe mesh file can be loaded into the Matlab / Octave workspace using the ffreadmesh() command. A mesh file consists of three main sections:\n\nThe mesh points as nodal coordinates\nA list of boundary edges including boundary labels\nList of triangles defining the mesh in terms of connectivity\n\nThe three data sections mentioned are returned in the variables p, b and t. The finite element space connectivity and the simulation data can be loaded using the ffreaddata() command. Therefore, to load the example data the following statement sequence must be executed in Matlab / Octave:\n 1 %Add ffmatlib to the search path\n 2 addpath('add here the link to the ffmatlib');\n 3 %Load the mesh\n 4 [p,b,t,nv,nbe,nt,labels] = ffreadmesh('capacitor.msh');\n 5 %Load the finite element space connectivity\n 6 vh = ffreaddata('capacitor_vh.txt');\n 7 %Load scalar data\n 8 u = ffreaddata('capacitor_potential.txt');\n 9 %Load 2D vector field data\n10 [Ex,Ey] = ffreaddata('capacitor_field.txt');\n\n\n\n\n2D Plot Examples¶\nffpdeplot() is a plot solution for creating patch, contour, quiver, mesh, border, and region plots of 2D geometries. The basic syntax is:\n1 [handles,varargout]  =  ffpdeplot(p,b,t,varargin)\n\n\nvarargin specifies parameter name / value pairs to control the plot behaviour.\nA table showing all options can be found in the ffmatlib documentation. A small selection of possible plot commands is given as follows:\n\nPlot of the boundary and the mesh:\n\n1 ffpdeplot(p,b,t,'Mesh','on','Boundary','on');\n\n\n\n\n\nFig. 52 Boundary and Mesh¶\n\n\n\nPatch plot (2D map or density plot) including mesh and boundary:\n\n1 ffpdeplot(p,b,t,'VhSeq',vh,'XYData',u,'Mesh','on','Boundary','on', ...\n2           'XLim',[-2 2],'YLim',[-2 2]);\n\n\n\n\n\nFig. 53 Patch Plot with Mesh¶\n\n\n\n3D surf plot:\n\n1 ffpdeplot(p,b,t,'VhSeq',vh,'XYData',u,'ZStyle','continuous', ...\n2           'Mesh','off');\n3 lighting gouraud;\n4 view([-47,24]);\n5 camlight('headlight');\n\n\n\n\n\nFig. 54 3D Surf Plot¶\n\n\n\nContour (isovalue) and quiver (vector field) plot:\n\n1 ffpdeplot(p,b,t,'VhSeq',vh,'XYData',u,'Mesh','off','Boundary','on', ...\n2           'XLim',[-2 2],'YLim',[-2 2],'Contour','on','CColor','b', ...\n3           'XYStyle','off', 'CGridParam',[150, 150],'ColorBar','off', ...\n4           'FlowData',[Ex,Ey],'FGridParam',[24, 24]);\n\n\n\n\n\nFig. 55 Contour and Quiver Plot¶\n\n\nDownload run through example:\nMatlab / Octave file\nFreeFEM script\n\n\n3D Plot Examples¶\n3D problems are handled by the ffpdeplot3D() command, which works similarly to the ffpdeplot() command. In particular in three-dimensions cross sections of the solution can be created. The following example shows a cross-sectional problem of a three-dimensional parallel plate capacitor.\n\n\n\nFig. 56 Slice on a 3D Parallel Plate Capacitor¶\n\n\nDownload run through example:\nMatlab / Octave file\nFreeFEM script\n\n\nReferences¶\n\nOctave\nMatlab\nffmatlib\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Wifi Propagation\n\t\t\tNext topic: Documentation \n\t\t\n\t","l":"tutorials/matlabOctavePlot.html"},"72":{"t":"Membrane","p":"\n\t\t\n   \nMembrane¶\nSummary :\nHere we shall learn how to solve a Dirichlet and/or mixed Dirichlet Neumann problem for the Laplace operator with application to the equilibrium of a membrane under load.\nWe shall also check the accuracy of the method and interface with other graphics packages\nAn elastic membrane \\(\\Omega\\) is attached to a planar rigid support \\(\\Gamma\\), and a force \\(f(x) dx\\) is exerted on each surface element \\(\\text{d}{x} = \\text{d}{x}_1 \\text{d}{x}_2\\).\nThe vertical membrane displacement, \\(\\varphi(x)\\), is obtained by solving Laplace’s equation:\n\n\\[-\\Delta \\varphi  = f ~\\hbox{in}~ \\Omega\\]\nAs the membrane is fixed to its planar support, one has:\n\n\\[\\varphi |_{\\Gamma } = 0\\]\nIf the support wasn’t planar but had an elevation \\(z(x_1,x_2)\\) then the boundary conditions would be of non-homogeneous Dirichlet type.\n\n\\[\\varphi|_{\\Gamma} = z\\]\nIf a part \\(\\Gamma_2\\) of the membrane border \\(\\Gamma\\) is not fixed to the support but is left hanging, then due to the membrane’s rigidity the angle with the normal vector \\(\\boldsymbol{n}\\) is zero; thus the boundary conditions are:\n\n\\[\\varphi|_{\\Gamma_1} = z,~~~~\\frac{\\partial\\varphi}{\\partial\\boldsymbol{n}}|_{\\Gamma_2} = 0\\]\nwhere \\(\\Gamma_1 = \\Gamma-\\Gamma_2\\); recall that \\(\\frac{\\partial\\varphi}{\\partial\\boldsymbol{n}} = \\nabla\\varphi\\cdot \\boldsymbol{n}\\)\nLet us recall also that the Laplace operator \\(\\Delta\\) is defined by:\n\n\\[\\Delta \\varphi  =  {\\partial ^{2}\\varphi \\over \\partial x^{2}_{1} }\n+ {\\partial ^{2}\\varphi \\over \\partial x_{2}^{2} }\\]\n\nTodo\nCheck references\n\nWith such “mixed boundary conditions” the problem has a unique solution (see Dautray-Lions (1988), Strang (1986) and Raviart-Thomas (1983)).\nThe easiest proof is to notice that \\(\\varphi\\) is the state of least energy, i.e.\n\n\\[E(\\phi)  = \\min_{\\varphi-z\\in V} E(v) ,\\quad \\mbox{with} \\quad E(v) = \\int_\\Omega(\\frac12|\\nabla v|^2-fv )\\]\nand where \\(V\\) is the subspace of the Sobolev space \\(H^1(\\Omega)\\) of functions which have zero trace on \\(\\Gamma_1\\).\nRecall that (\\(x\\in\\mathbb{R}^d,~d = 2\\) here):\n\n\\[H^1(\\Omega) = \\{u\\in L^2(\\Omega)~:~\\nabla u\\in (L^2(\\Omega))^d\\}\\]\nCalculus of variation shows that the minimum must satisfy, what is known as the weak form of the PDE or its variational formulation (also known here as the theorem of virtual work)\n\n\\[\\int_\\Omega \\nabla\\varphi\\cdot\\nabla w  =  \\int_\\Omega f w\\quad\\forall w\\in V\\]\nNext an integration by parts (Green’s formula) will show that this is equivalent to the PDE when second derivatives exist.\n\nWarning\nUnlike the previous version Freefem+ which had both weak and strong forms, FreeFEM implements only weak formulations.\nIt is not possible to go further in using this software if you don’t know the weak form (i.e. variational formulation) of your problem: either you read a book, or ask help form a colleague or drop the matter.\nNow if you want to solve a system of PDE like \\(A(u,v) = 0,~ B(u,v) = 0\\) don’t close this manual, because in weak form it is\n\n\n\\[\\int_\\Omega(A(u,v)w_1+B(u,v)w_2) = 0~~\\forall w_1,w_2...\\]\nExample\nLet an ellipse have the length of the semimajor axis \\(a = 2\\), and unitary the semiminor axis.\nLet the surface force be \\(f = 1\\).\nProgramming this case with FreeFEM gives:\n 1 // Parameters\n 2 real theta  =  4.*pi/3.;\n 3 real a  =  2.; //The length of the semimajor axis\n 4 real b  =  1.; //The length of the semiminor axis\n 5 func z  =  x;\n 6 \n 7 // Mesh\n 8 border Gamma1(t = 0., theta){x = a*cos(t); y = b*sin(t);}\n 9 border Gamma2(t = theta, 2.*pi){x = a*cos(t); y = b*sin(t);}\n10 mesh Th  =  buildmesh(Gamma1(100) + Gamma2(50));\n11 \n12 // Fespace\n13 fespace Vh(Th, P2); //P2 conforming triangular FEM\n14 Vh phi, w, f = 1;\n15 \n16 // Solve\n17 solve Laplace(phi, w)\n18      =  int2d(Th)(\n19           dx(phi)*dx(w)\n20         + dy(phi)*dy(w)\n21     )\n22     - int2d(Th)(\n23           f*w\n24     )\n25     + on(Gamma1, phi = z)\n26     ;\n27 \n28 // Plot\n29 plot(phi, wait = true, ps = \"membrane.eps\"); //Plot phi\n30 plot(Th, wait = true, ps = \"membraneTh.eps\"); //Plot Th\n31 \n32 // Save mesh\n33 savemesh(Th,\"Th.msh\");\n\n\nA triangulation is built by the keyword buildmesh.\nThis keyword calls a triangulation subroutine based on the Delaunay test, which first triangulates with only the boundary points, then adds internal points by subdividing the edges.\nHow fine the triangulation becomes is controlled by the size of the closest boundary edges.\nThe PDE is then discretized using the triangular second order finite element method on the triangulation; as was briefly indicated in the previous chapter, a linear system is derived from the discrete formulation whose size is the number of vertices plus the number of mid-edges in the triangulation.\nThe system is solved by a multi-frontal Gauss LU factorization implemented in the package UMFPACK.\nThe keyword plot will display both \\(\\T_h\\) and \\(\\varphi\\) (remove Th if \\(\\varphi\\) only is desired) and the qualifier fill = true replaces the default option (colored level lines) by a full color display.\n1 plot(phi,wait = true,fill = true); //Plot phi with full color display\n\n\nResults are on Fig. 5 and Fig. 6.\n\n\n\n\nFig. 5 Mesh of the ellipse¶\n\n\n\n\n\nFig. 6 Level lines of the membrane deformation¶\n\n\nMembrane\nNext we would like to check the results !\nOne simple way is to adjust the parameters so as to know the solutions.\nFor instance on the unit circle a = 1, \\(\\varphi_e = \\sin(x^2+y^2-1)\\) solves the problem when:\n\n\\[z = 0, f = -4(\\cos(x^2+y^2-1)-(x^2+y^2)\\sin(x^2+y^2-1))\\]\nexcept that on \\(\\Gamma_2\\) \\(\\partial_n\\varphi = 2\\) instead of zero.\nSo we will consider a non-homogeneous Neumann condition and solve:\n\n\\[\\int_\\Omega\\nabla\\varphi\\cdot\\nabla w  =  \\int_\\Omega f w+\\int_{\\Gamma_2}2w\\quad\\forall w\\in V\\]\nWe will do that with two triangulations, compute the \\(L^2\\) error:\n\n\\[\\epsilon  =  \\int_\\Omega|\\varphi-\\varphi_e|^2\\]\nand print the error in both cases as well as the log of their ratio an indication of the rate of convergence.\n 1 //  Parameters\n 2 verbosity  =  0; //to remove all default output\n 3 real theta  =  4.*pi/3.;\n 4 real a = 1.; //the length of the semimajor axis\n 5 real b = 1.; //the length of the semiminor axis\n 6 func f  =  -4*(cos(x^2+y^2-1) - (x^2+y^2)*sin(x^2+y^2-1));\n 7 func phiexact  =  sin(x^2 + y^2 - 1);\n 8 \n 9 // Mesh\n10 border Gamma1(t = 0., theta){x = a*cos(t); y = b*sin(t);}\n11 border Gamma2(t = theta, 2.*pi){x = a*cos(t); y = b*sin(t);}\n12 \n13 // Error loop\n14 real[int] L2error(2); //an array of two values\n15 for(int n  =  0; n < 2; n++){\n16     // Mesh\n17     mesh Th  =  buildmesh(Gamma1(20*(n+1)) + Gamma2(10*(n+1)));\n18 \n19     // Fespace\n20     fespace Vh(Th, P2);\n21     Vh phi, w;\n22 \n23     // Solve\n24     solve Laplace(phi, w)\n25          =  int2d(Th)(\n26               dx(phi)*dx(w)\n27             + dy(phi)*dy(w)\n28         )\n29         - int2d(Th)(\n30               f*w\n31         )\n32         - int1d(Th, Gamma2)(\n33               2*w\n34         )\n35         + on(Gamma1,phi = 0)\n36         ;\n37 \n38     // Plot\n39     plot(Th, phi, wait = true, ps = \"membrane.eps\");\n40 \n41     // Error\n42     L2error[n]  =  sqrt(int2d(Th)((phi-phiexact)^2));\n43 }\n44 \n45 // Display loop\n46 for(int n  =  0; n < 2; n++)\n47     cout << \"L2error \" << n << \"  =  \" << L2error[n] << endl;\n48 \n49 // Convergence rate\n50 cout << \"convergence rate  =  \"<< log(L2error[0]/L2error[1])/log(2.) << endl;\n\n\nThe output is:\n1 L2error 0  =  0.00462991\n2 L2error 1  =  0.00117128\n3 convergence rate  =  1.9829\n4 times: compile 0.02s, execution 6.94s\n\n\nWe find a rate of 1.98 , which is not close enough to the 3 predicted by the theory.\nThe Geometry is always a polygon so we lose one order due to the geometry approximation in \\(O(h^2)\\).\nNow if you are not satisfied with the .eps plot generated by FreeFEM and you want to use other graphic facilities, then you must store the solution in a file very much like in C++.\nIt will be useless if you don’t save the triangulation as well, consequently you must do\n1 {\n2     ofstream ff(\"phi.txt\");\n3     ff << phi[];\n4 }\n5 savemesh(Th,\"Th.msh\");\n\n\nFor the triangulation the name is important: the extension determines the format.\n\n\n\nFig. 7 The 3D version drawn by gnuplot  from a file generated by FreeFEM¶\n\n\nStill that may not take you where you want. Here is an interface with gnuplot (see :   web site link  ) to produce the Fig. 7.\n 1 //to build a gnuplot data file\n 2 {\n 3     ofstream ff(\"graph.txt\");\n 4     for (int i  =  0; i < Th.nt; i++)\n 5     {\n 6         for (int j  =  0; j < 3; j++)\n 7             ff << Th[i][j].x << \" \"<< Th[i][j].y << \" \" << phi[][Vh(i,j)] << endl;\n 8 \n 9         ff << Th[i][0].x << \" \" << Th[i][0].y << \" \" << phi[][Vh(i,0)] << \"\\n\\n\\n\"\n10     }\n11 }\n\n\nWe use the finite element numbering, where Wh(i,j) is the global index of \\(j^{Th}\\) degrees of freedom of triangle number \\(i\\).\nThen open gnuplot and do:\n1 set palette rgbformulae 30,31,32\n2 splot \"graph.txt\" w l pal\n\n\nThis works with P2 and P1, but not with P1nc because the 3 first degrees of freedom of P2 or P2 are on vertices and not with P1nc.\n\n\n\n\t\t\n\t\t\t Previous topic: Classification of partial differential equations\n\t\t\tNext topic: Heat Exchanger \n\t\t\n\t","l":"tutorials/membrane.html"},"73":{"t":"Newton Method for the Steady Navier-Stokes equations","p":"\n\t\t\n   \nNewton Method for the Steady Navier-Stokes equations¶\nThe problem is find the velocity field \\(\\mathbf{u} = (u_i)_{i = 1}^d\\) and the pressure \\(p\\) of a Flow satisfying in the domain \\(\\Omega \\subset \\mathbb{R}^d (d = 2,3)\\):\n\n\\[\\begin{split}\\begin{array}{rcl}\n    (\\mathbf{u}\\cdot\\nabla) \\mathbf{u}-\\nu \\Delta \\mathbf{u}+\\nabla p& = &0\\\\\n    \\nabla\\cdot \\mathbf{u}& = &0\n\\end{array}\\end{split}\\]\nwhere \\(\\nu\\) is the viscosity of the fluid, \\(\\nabla  =  (\\partial_i )_{i = 1}^d\\), the dot product is \\(\\cdot\\), and \\(\\Delta  =  \\nabla\\cdot\\nabla\\) with the same boundary conditions (\\(\\mathbf{u}\\) is given on \\(\\Gamma\\)).\nThe weak form is find \\(\\mathbf{u}, p\\) such that for \\(\\forall \\mathbf{v}\\) (zero on \\(\\Gamma\\)), and \\(\\forall q\\):\n\n\\[\\int_\\Omega  ((\\mathbf{u}\\cdot\\nabla) \\mathbf{u} ). \\mathbf{v} + \\nu \\nabla \\mathbf{u}:\\nabla \\mathbf{v}\n- p \\nabla\\cdot \\mathbf{v} - q \\nabla\\cdot \\mathbf{u}  =  0\\]\nThe Newton Algorithm to solve nonlinear problem is:\nFind \\(u\\in V\\) such that \\(F(u) = 0\\) where \\(F : V \\mapsto V\\).\n\nchoose \\(u_0\\in \\mathbb{R}^n\\) , ;\nfor ( \\(i  = 0\\); \\(i\\) < niter; \\(i  =  i+1\\))\n\nsolve \\(DF(u_i) w_i  =  F(u_i)\\);\n\\(u_{i+1}  =  u_i - w_i\\);\n\n\n\nbreak \\(|| w_i|| < \\varepsilon\\).\nWhere \\(DF(u)\\) is the differential of \\(F\\) at point \\(u\\), this is a linear application such that:\n\n\\[F(u+\\delta)  =  F(u) + DF(u) \\delta + o(\\delta)\\]\nFor Navier Stokes, \\(F\\) and \\(DF\\) are:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    F(\\mathbf{u},p) & = & \\int_\\Omega((\\mathbf{u}\\cdot\\nabla) \\mathbf{u} ). \\mathbf{v} + \\nu \\nabla \\mathbf{u}:\\nabla \\mathbf{v}\n    - p \\nabla\\cdot \\mathbf{v} - q \\nabla\\cdot \\mathbf{u}\\\\\n    DF(\\mathbf{u},p)(\\mathbf{\\delta u} ,\\delta p) & = & \\int_\\Omega ((\\mathbf{\\delta u}\\cdot\\nabla) \\mathbf{u} ). \\mathbf v + ((\\mathbf{u}\\cdot\\nabla) \\mathbf{\\delta u} ). \\mathbf{v} \\\\\n    &+& \\nu \\nabla \\mathbf{\\delta u}:\\nabla \\mathbf{v} - \\delta p \\nabla\\cdot \\mathbf{v} - q \\nabla\\cdot \\mathbf{\\delta u}\n\\end{array}\\end{split}\\]\nSo the Newton algorithm become:\n  1 // Parameters\n  2 real R  =  5.;\n  3 real L  =  15.;\n  4 \n  5 real nu  =  1./50.;\n  6 real nufinal  =  1/200.;\n  7 real cnu  =  0.5;\n  8 \n  9 real eps  =  1e-6;\n 10 \n 11 verbosity  =  0;\n 12 \n 13 // Mesh\n 14 border cc(t = 0, 2*pi){x = cos(t)/2.; y = sin(t)/2.; label = 1;}\n 15 border ce(t = pi/2, 3*pi/2){x = cos(t)*R; y = sin(t)*R; label = 1;}\n 16 border beb(tt = 0, 1){real t = tt^1.2; x = t*L; y = -R; label = 1;}\n 17 border beu(tt = 1, 0){real t = tt^1.2; x = t*L; y = R; label = 1;}\n 18 border beo(t = -R, R){x = L; y = t; label = 0;}\n 19 border bei(t = -R/4, R/4){x = L/2; y = t; label = 0;}\n 20 mesh Th  =  buildmesh(cc(-50) + ce(30) + beb(20) + beu(20) + beo(10) + bei(10));\n 21 plot(Th);\n 22 \n 23 //bounding box for the plot\n 24 func bb  =  [[-1,-2],[4,2]];\n 25 \n 26 // Fespace\n 27 fespace Xh(Th, P2);\n 28 Xh u1, u2;\n 29 Xh v1,v2;\n 30 Xh du1,du2;\n 31 Xh u1p,u2p;\n 32 \n 33 fespace Mh(Th,P1);\n 34 Mh p;\n 35 Mh q;\n 36 Mh dp;\n 37 Mh pp;\n 38 \n 39 // Macro\n 40 macro Grad(u1,u2) [dx(u1), dy(u1), dx(u2),dy(u2)] //\n 41 macro UgradV(u1,u2,v1,v2) [[u1,u2]'*[dx(v1),dy(v1)],\n 42                         [u1,u2]'*[dx(v2),dy(v2)]] //\n 43 macro div(u1,u2) (dx(u1) + dy(u2)) //\n 44 \n 45 // Initialization\n 46 u1  =  (x^2+y^2) > 2;\n 47 u2  =  0;\n 48 \n 49 // Viscosity loop\n 50 while(1){\n 51     int n;\n 52     real err = 0;\n 53     // Newton loop\n 54     for (n  =  0; n < 15; n++){\n 55         // Newton\n 56         solve Oseen ([du1, du2, dp], [v1, v2, q])\n 57              =  int2d(Th)(\n 58                     nu * (Grad(du1,du2)' * Grad(v1,v2))\n 59                 + UgradV(du1,du2, u1, u2)' * [v1,v2]\n 60                 + UgradV( u1, u2,du1,du2)' * [v1,v2]\n 61                 - div(du1,du2) * q\n 62                 - div(v1,v2) * dp\n 63                 - 1e-8*dp*q //stabilization term\n 64             )\n 65             - int2d(Th) (\n 66                     nu * (Grad(u1,u2)' * Grad(v1,v2))\n 67                 + UgradV(u1,u2, u1, u2)' * [v1,v2]\n 68                 - div(u1,u2) * q\n 69                 - div(v1,v2) * p\n 70             )\n 71             + on(1, du1 = 0, du2 = 0)\n 72             ;\n 73 \n 74         u1[] - =  du1[];\n 75         u2[] - =  du2[];\n 76         p[] - =  dp[];\n 77 \n 78         real Lu1 = u1[].linfty, Lu2 = u2[].linfty, Lp = p[].linfty;\n 79         err  =  du1[].linfty/Lu1 + du2[].linfty/Lu2 + dp[].linfty/Lp;\n 80 \n 81         cout << n << \" err  =  \" << err << \" \" << eps << \" rey  =  \" << 1./nu << endl;\n 82         if(err < eps) break; //converge\n 83         if( n>3 && err > 10.) break; //blowup\n 84     }\n 85 \n 86     if(err < eps){  //converge: decrease $\\nu$ (more difficult)\n 87         // Plot\n 88         plot([u1, u2], p, wait = 1, cmm = \" rey  =  \" + 1./nu , coef = 0.3, bb = bb);\n 89 \n 90         // Change nu\n 91         if( nu  =  =  nufinal) break;\n 92         if( n < 4) cnu  =  cnu^1.5; //fast converge  = > change faster\n 93         nu  =  max(nufinal, nu* cnu); //new viscosity\n 94 \n 95         // Update\n 96         u1p  =  u1;\n 97         u2p  =  u2;\n 98         pp  =  p;\n 99     }\n100     else{   //blowup: increase $\\nu$ (more simple)\n101         assert(cnu< 0.95); //the method finally blowup\n102 \n103         // Recover nu\n104         nu  =  nu/cnu;\n105         cnu =  cnu^(1./1.5); //no conv.  = > change lower\n106         nu  =  nu* cnu; //new viscosity\n107         cout << \" restart nu  =  \" << nu << \" Rey  =  \" << 1./nu << \" (cnu  =  \" << cnu << \" ) \\n\";\n108 \n109         // Recover a correct solution\n110         u1  =  u1p;\n111         u2  =  u2p;\n112         p  =  pp;\n113     }\n114 }\n\n\n\nNote\nWe use a trick to make continuation on the viscosity \\(\\nu\\), because the Newton method blowup owe start with the final viscosity \\(\\nu\\).\n\\(\\nu\\) is gradually increased to the desired value.\n\n\n\n\n\nFig. 25 Mesh¶\n\n\n\n\n\nFig. 26 Velocity and pressure¶\n\n\nNaver-Stokes newton\n\n\n\n\t\t\n\t\t\t Previous topic: A projection algorithm for the Navier-Stokes equations\n\t\t\tNext topic: A Large Fluid Problem \n\t\t\n\t","l":"tutorials/navierStokesNewton.html"},"74":{"t":"A projection algorithm for the Navier-Stokes equations","p":"\n\t\t\n   \nA projection algorithm for the Navier-Stokes equations¶\nSummary :\nFluid flows require good algorithms and good triangultions. We show here an example of a complex algorithm and or first example of mesh adaptation.\nAn incompressible viscous fluid satisfies:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\partial_t \\mathbf{u} + \\mathbf{u}\\cdot\\nabla\\mathbf{u} + \\nabla p - \\nu\\Delta\\mathbf{u} & =  0 &\\hbox{ in } \\Omega\\times ]0,T[\\\\\n    \\nabla\\cdot\\mathbf{u} & =  0 &\\hbox{ in } \\Omega\\times ]0,T[\\\\\n    \\mathbf{u}|_{t = 0} & =  \\mathbf{u}^0\\\\\n    \\mathbf{u}|_\\Gamma & =  \\mathbf{u}_\\Gamma\n\\end{array}\\end{split}\\]\nA possible algorithm, proposed by Chorin, is:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    {1\\over \\delta t}[\\mathbf{u}^{m+1} - \\mathbf{u}^mo\\mathbf{X}^m] + \\nabla p^m -\\nu\\Delta \\mathbf{u}^m & = & 0\\\\\n    \\mathbf{u}|_\\Gamma & = & \\mathbf{u}_\\Gamma\\\\\n    \\nu \\partial_n \\mathbf{u}|_{\\Gamma_{out}} & = &0\n\\end{array}\\end{split}\\]\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta p^{m+1} & =  -\\nabla\\cdot \\mathbf{u}^mo\\mathbf{X}^m &\\\\\n    \\partial_n p^{m+1} & =  0 &\\mbox{ on } \\Gamma\\\\\n    p^{m+1} & =  0 &\\mbox{ on } \\Gamma_{out}\n\\end{array}\\end{split}\\]\nwhere \\(\\mathbf{u}o\\mathbf{X}(x)  =  \\mathbf{u}(\\mathbf{x}-\\mathbf{u}(\\mathbf{x})\\delta t)\\) since \\(\\partial_t \\mathbf{u} + \\mathbf{u}\\cdot\\nabla \\mathbf{u}\\) is approximated by the method of characteristics, as in the previous section.\nWe use the Chorin’s algorithm with free boundary condition at outlet (i.e. \\(p = 0,\\nu \\partial_n u  =  0\\)), to compute a correction, q, to the pressure.\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta q & =  \\nabla\\cdot\\mathbf{u}&\\\\\n    q & =  0 \\mbox{ on } &\\Gamma_{out}\n\\end{array}\\end{split}\\]\nand define\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\mathbf{u}^{m+1} & = & \\tilde{\\mathbf{u}} + P \\nabla q\\delta t\\\\\n    p^{m+1} & = & p^m-q\n\\end{array}\\end{split}\\]\nwhere \\(\\tilde{\\mathbf{u}}\\) is the \\((\\mathbf{u}^{m+1}, v^{m+1})\\) of Chorin’s algorithm, and where \\(P\\) is the \\(L^2\\) projection with mass lumping ( a sparse matrix).\nThe backward facing step\nThe geometry is that of a channel with a backward facing step so that the inflow section is smaller than the outflow section.\nThis geometry produces a fluid recirculation zone that must be captured correctly.\nThis can only be done if the triangulation is sufficiently fine, or well adapted to the flow.\n\nNote\nThere is a technical difficulty in the example: the output B.C.\nHere we put \\(p = 0\\) and \\(\\nu \\partial_n u  =  0\\).\n\n  1 // Parameters\n  2 verbosity  =  0;\n  3 int nn  =  1;\n  4 real nu  =  0.0025;\n  5 real dt  =  0.2;\n  6 real epsv  =  1e-6;\n  7 real epsu  =  1e-6;\n  8 real epsp  =  1e-6;\n  9 \n 10 // Mesh\n 11 border a0(t = 1, 0){x = -2; y = t; label = 1;}\n 12 border a1(t = -2, 0){x = t; y = 0; label = 2;}\n 13 border a2(t = 0, -0.5){x = 0; y = t; label = 2;}\n 14 border a3(t = 0, 1){x = 18*t^1.2; y = -0.5; label = 2;}\n 15 border a4(t = -0.5, 1){x = 18; y = t; label = 3;}\n 16 border a5(t = 1, 0){x = -2+20*t; y = 1; label = 4;}\n 17 \n 18 mesh Th  =  buildmesh(a0(3*nn) + a1(20*nn) + a2(10*nn) + a3(150*nn) + a4(5*nn) + a5(100*nn));\n 19 plot(Th);\n 20 \n 21 // Fespace\n 22 fespace Vh(Th, P1);\n 23 Vh w;\n 24 Vh u = 0, v = 0;\n 25 Vh p = 0;\n 26 Vh q = 0;\n 27 \n 28 // Definition of Matrix dtMx and dtMy\n 29 matrix dtM1x, dtM1y;\n 30 \n 31 // Macro\n 32 macro BuildMat()\n 33 {   /* for memory managenemt */\n 34     varf vM(unused, v)  =  int2d(Th)(v);\n 35     varf vdx(u, v)  =  int2d(Th)(v*dx(u)*dt);\n 36     varf vdy(u, v)  =  int2d(Th)(v*dy(u)*dt);\n 37 \n 38     real[int] Mlump  =  vM(0, Vh);\n 39     real[int] one(Vh.ndof); one  =  1;\n 40     real[int] M1  =  one ./ Mlump;\n 41     matrix dM1  =  M1;\n 42     matrix Mdx  =  vdx(Vh, Vh);\n 43     matrix Mdy  =  vdy(Vh, Vh);\n 44     dtM1x  =  dM1*Mdx;\n 45     dtM1y  =  dM1*Mdy;\n 46 } //\n 47 \n 48 // Build matrices\n 49 BuildMat\n 50 \n 51 // Time iterations\n 52 real err  =  1.;\n 53 real outflux  =  1.;\n 54 for(int n  =  0; n < 300; n++){\n 55     // Update\n 56     Vh uold = u, vold = v, pold = p;\n 57 \n 58     // Solve\n 59     solve pb4u (u, w, init = n, solver = CG, eps = epsu)\n 60          =  int2d(Th)(\n 61               u*w/dt\n 62             + nu*(dx(u)*dx(w) + dy(u)*dy(w))\n 63         )\n 64         -int2d(Th)(\n 65                 convect([uold, vold], -dt, uold)/dt*w\n 66             - dx(p)*w\n 67         )\n 68         + on(1, u = 4*y*(1-y))\n 69         + on(2, 4, u = 0)\n 70         ;\n 71 \n 72     plot(u);\n 73 \n 74     solve pb4v (v, w, init = n, solver = CG, eps = epsv)\n 75          =  int2d(Th)(\n 76               v*w/dt\n 77             + nu*(dx(v)*dx(w) + dy(v)*dy(w))\n 78         )\n 79         -int2d(Th)(\n 80                 convect([uold,vold],-dt,vold)/dt*w\n 81             - dy(p)*w\n 82         )\n 83         +on(1, 2, 3, 4, v = 0)\n 84         ;\n 85 \n 86     solve pb4p (q, w, solver = CG, init = n, eps = epsp)\n 87          =  int2d(Th)(\n 88               dx(q)*dx(w)+dy(q)*dy(w)\n 89         )\n 90         - int2d(Th)(\n 91               (dx(u)+ dy(v))*w/dt\n 92         )\n 93         + on(3, q = 0)\n 94         ;\n 95 \n 96     //to have absolute epsilon in CG algorithm.\n 97     epsv  =  -abs(epsv);\n 98     epsu  =  -abs(epsu);\n 99     epsp  =  -abs(epsp);\n100 \n101     p  =  pold-q;\n102     u[] + =  dtM1x*q[];\n103     v[] + =  dtM1y*q[];\n104 \n105     // Mesh adaptation\n106     if (n%50  =  =  49){\n107         Th  =  adaptmesh(Th, [u, v], q, err = 0.04, nbvx = 100000);\n108         plot(Th, wait = true);\n109         BuildMat // Rebuild mat.\n110     }\n111 \n112     // Error & Outflux\n113     err  =  sqrt(int2d(Th)(square(u-uold)+square(v-vold))/Th.area);\n114     outflux  =  int1d(Th)([u,v]'*[N.x,N.y]);\n115     cout << \" iter \" << n << \" Err L2  =  \" << err << \" outflux  =  \" << outflux << endl;\n116     if(err < 1e-3) break;\n117 }\n118 \n119 // Verification\n120 assert(abs(outflux)< 2e-3);\n121 \n122 // Plot\n123 plot(p, wait = 1, ps = \"NSprojP.eps\");\n124 plot(u, wait = 1, ps = \"NSprojU.eps\");\n\n\nRannacher’s projection algorithm: result on an adapted mesh, Fig. 22, showing the pressure, Fig. 23, and the horizontal velocity Fig. 24 for a Reynolds number of 400 where mesh adaptation is done after 50 iterations on the first mesh.\n\n\n\n\nFig. 22 Adapted mesh¶\n\n\n\n\n\nFig. 23 Pressure¶\n\n\n\n\n\nFig. 24 Velocity¶\n\n\nNavier-Stokes projection\n\n\n\n\t\t\n\t\t\t Previous topic: The System of Stokes for Fluids\n\t\t\tNext topic: Newton Method for the Steady Navier-Stokes equations \n\t\t\n\t","l":"tutorials/navierStokesProjection.html"},"75":{"t":"Optimal Control","p":"\n\t\t\n   \nOptimal Control¶\nThanks to the function BFGS it is possible to solve complex nonlinear optimization problem within FreeFEM.\nFor example consider the following inverse problem\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\min_{b, c, d\\in R}J & = & \\int_E(u-u_d)^2\\\\\n    -\\nabla(\\kappa(b, c, d)\\cdot\\nabla u) & = & 0\\\\\n    u|_\\Gamma & = & u_\\Gamma\n\\end{array}\\end{split}\\]\nwhere the desired state \\(u_d\\), the boundary data \\(u_\\Gamma\\) and the observation set \\(E\\subset\\Omega\\) are all given.\nFurthermore let us assume that:\n\n\\[\\kappa(x) = 1+bI_B(x)+cI_C(x)+dI_D(x)\\quad\\forall x\\in\\Omega\\]\nwhere \\(B,C,D\\) are separated subsets of \\(\\Omega\\).\nTo solve this problem by the quasi-Newton BFGS method we need the derivatives of \\(J\\) with respect to \\(b,c,d\\).\nWe self explanatory notations, if \\(\\delta b,\\delta c,\\delta d\\) are variations of \\(b,c,d\\) we have:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\delta J &\\approx& 2\\int_E(u-u_d)\\delta u\\\\\n    -\\nabla(\\kappa\\cdot\\nabla\\delta u) &\\approx& \\nabla(\\delta\\kappa\\cdot\\nabla u)\\\\\n    \\delta u|_\\Gamma & = & 0\n\\end{array}\\end{split}\\]\nObviously \\(J'_b\\) is equal to \\(\\delta J\\) when \\(\\delta b = 1,\\delta c = 0,\\delta d = 0\\), and so on for \\(J'_c\\) and \\(J'_d\\).\nAll this is implemented in the following program:\n 1 // Mesh\n 2 border aa(t = 0, 2*pi){x = 5*cos(t); y = 5*sin(t);};\n 3 border bb(t = 0, 2*pi){x = cos(t); y = sin(t);};\n 4 border cc(t = 0, 2*pi){x = -3+cos(t); y = sin(t);};\n 5 border dd(t = 0, 2*pi){x = cos(t); y  = -3+sin(t);};\n 6 \n 7 mesh th  =  buildmesh(aa(70) + bb(35) + cc(35) + dd(35));\n 8 \n 9 // Fespace\n10 fespace Vh(th, P1);\n11 Vh Ib = ((x^2+y^2)<1.0001),\n12    Ic = (((x+3)^2+ y^2)<1.0001),\n13    Id = ((x^2+(y+3)^2)<1.0001),\n14    Ie = (((x-1)^2+ y^2)< = 4),\n15    ud, u, uh, du;\n16 \n17 // Problem\n18 real[int] z(3);\n19 problem A(u, uh)\n20     =  int2d(th)(\n21         (1+z[0]*Ib+z[1]*Ic+z[2]*Id)*(dx(u)*dx(uh) + dy(u)*dy(uh))\n22    )\n23    + on(aa, u = x^3-y^3)\n24    ;\n25 \n26 // Solve\n27 z[0] = 2; z[1] = 3; z[2] = 4;\n28 A;\n29 ud  =  u;\n30 \n31 ofstream f(\"J.txt\");\n32 func real J(real[int] & Z){\n33    for (int i  =  0; i < z.n; i++)\n34       z[i]  = Z[i];\n35    A;\n36    real s  =  int2d(th)(Ie*(u-ud)^2);\n37    f << s << \" \";\n38    return s;\n39 }\n40 \n41 // Problem BFGS\n42 real[int] dz(3), dJdz(3);\n43 problem B (du, uh)\n44     =  int2d(th)(\n45         (1+z[0]*Ib+z[1]*Ic+z[2]*Id)*(dx(du)*dx(uh) + dy(du)*dy(uh))\n46    )\n47    + int2d(th)(\n48         (dz[0]*Ib+dz[1]*Ic+dz[2]*Id)*(dx(u)*dx(uh) + dy(u)*dy(uh))\n49    )\n50    +on(aa, du = 0)\n51    ;\n52 \n53 func real[int] DJ(real[int] &Z){\n54    for(int i  =  0; i < z.n; i++){\n55       for(int j  =  0; j < dz.n; j++)\n56          dz[j]  =  0;\n57       dz[i]  =  1;\n58       B;\n59       dJdz[i]  =  2*int2d(th)(Ie*(u-ud)*du);\n60    }\n61    return dJdz;\n62 }\n63 \n64 real[int] Z(3);\n65 for(int j  =  0; j < z.n; j++)\n66    Z[j] = 1;\n67 \n68 BFGS(J, DJ, Z, eps = 1.e-6, nbiter = 15, nbiterline = 20);\n69 cout << \"BFGS: J(z)  =  \" << J(Z) << endl;\n70 for(int j  =  0; j < z.n; j++)\n71    cout << z[j] << endl;\n72 \n73 // Plot\n74 plot(ud, value = 1, ps = \"u.eps\");\n\n\nIn this example the sets \\(B,C,D,E\\) are circles of boundaries \\(bb,cc,dd,ee\\) and the domain \\(\\Omega\\) is the circle of boundary \\(aa\\).\nThe desired state \\(u_d\\) is the solution of the PDE for \\(b = 2,c = 3,d = 4\\). The unknowns are packed into array \\(z\\).\n\nNote\nIt is necessary to recopy \\(Z\\) into \\(z\\) because one is a local variable while the other one is global.\n\nThe program found \\(b = 2.00125,c = 3.00109,d = 4.00551\\).\nFig. 40 and Fig. 41 show \\(u\\) at convergence and the successive function evaluations of \\(J\\).\n\n\n\n\nFig. 40 Level line of \\(u\\).¶\n\n\n\n\n\nFig. 41 Successive evaluations of \\(J\\) by BFGS (5 values above 500 have been removed for readability)¶\n\n\nOptimal control\nNote that an adjoint state could have been used.\nDefine \\(p\\) by:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\nabla\\cdot(\\kappa\\nabla p) & = & 2I_E(u-u_d)\\\\\n    p|_\\Gamma & = & 0\n\\end{array}\\end{split}\\]\nConsequently:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\delta J & = & -\\int_{\\Omega}(\\nabla\\cdot(\\kappa\\nabla p))\\delta u\\nonumber\\\\\n    & = & \\int_\\Omega(\\kappa\\nabla p\\cdot\\nabla\\delta u)\\\\\n    & = &-\\int_\\Omega(\\delta\\kappa\\nabla p\\cdot\\nabla u)\n\\end{array}\\end{split}\\]\nThen the derivatives are found by setting \\(\\delta b = 1, \\delta c = \\delta d = 0\\) and so on:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    J'_b& = &-\\int_B \\nabla p\\cdot\\nabla u\\\\\n    J'_c& = &-\\int_C \\nabla p\\cdot\\nabla u\\\\\n    J'_d& = &-\\int_D \\nabla p\\cdot\\nabla u\n\\end{array}\\end{split}\\]\n\nNote\nAs BFGS stores an \\(M\\times M\\) matrix where \\(M\\) is the number of unknowns, it is dangerously expensive to use this method when the unknown \\(x\\) is a Finite Element Function.\nOne should use another optimizer such as the NonLinear Conjugate Gradient NLCG (also a key word of FreeFEM).\n\n\n\n\n\t\t\n\t\t\t Previous topic: An Example with Complex Numbers\n\t\t\tNext topic: A Flow with Shocks \n\t\t\n\t","l":"tutorials/optimalControl.html"},"76":{"t":"Getting started","p":"\n\t\t\n   \nGetting started¶\nFor a given function \\(f(x,y)\\), find a function \\(u(x,y)\\) satisfying :\n\n(1)¶\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta u(x,y) & =  f(x,y) & \\mbox{ for all }(x,y)\\mbox{ in }\\Omega\\\\\n    u(x,y) & =  0 & \\mbox{ for all }(x,y)\\mbox{ on }\\partial\\Omega\n\\end{array}\\end{split}\\]\nHere \\(\\partial\\Omega\\) is the boundary of the bounded open set \\(\\Omega\\subset\\mathbb{R}^2\\) and \\(\\Delta u  =  \\frac{\\partial^2 u}{\\partial x^2 } + \\frac{\\partial^2 u}{\\partial y^2}\\).\nWe will compute \\(u\\) with \\(f(x,y) = xy\\) and \\(\\Omega\\) the unit disk. The boundary \\(C = \\partial\\Omega\\) is defined as:\n\n\\[C = \\{(x,y)|\\; x = \\cos(t),\\, y = \\sin(t),\\, 0\\le t\\le 2\\pi\\}\\]\n\nNote\nIn FreeFEM, the domain \\(\\Omega\\) is assumed to be described by the left side of its boundary.\n\nThe following is the FreeFEM program which computes \\(u\\):\n 1 // Define mesh boundary\n 2 border C(t = 0, 2*pi){x = cos(t); y = sin(t);}\n 3 \n 4 // The triangulated domain Th is on the left side of its boundary\n 5 mesh Th  =  buildmesh(C(50));\n 6 \n 7 // The finite element space defined over Th is called here Vh\n 8 fespace Vh(Th, P1);\n 9 Vh u, v;// Define u and v as piecewise-P1 continuous functions\n10 \n11 // Define a function f\n12 func f =  x*y;\n13 \n14 // Get the clock in second\n15 real cpu = clock();\n16 \n17 // Define the PDE\n18 solve Poisson(u, v, solver = LU)\n19      =  int2d(Th)(    // The bilinear part\n20           dx(u)*dx(v)\n21         + dy(u)*dy(v)\n22     )\n23     - int2d(Th)(    // The right hand side\n24           f*v\n25     )\n26     + on(C, u = 0);   // The Dirichlet boundary condition\n27 \n28 // Plot the result\n29 plot(u);\n30 \n31 // Display the total computational time\n32 cout << \"CPU time  =  \" << (clock()-cpu) << endl;\n\n\nAs illustrated in Fig. 2, we can see the isovalue of \\(u\\) by using FreeFEM plot command (see line 29 above).\n\n\n\n\nFig. 1 Mesh Th by buildmesh(C(50))¶\n\n\n\n\n\nFig. 2 Isovalue by plot(u)¶\n\n\nPoisson’s equation\n\nNote\nThe qualifier solver = LU (line 18) is not required and by default a multi-frontal LU is used.\nThe lines containing clock are equally not required.\n\n\nTip\nNote how close to the mathematics FreeFEM language is.\nLines 19 to 24 correspond to the mathematical variational equation:\n\n\\[\\int_{T_h}\n(\n   \\frac{\\partial u}{\\partial x}\\frac{\\partial v}{\\partial x}\n   + \\frac{\\partial u}{\\partial y}\\frac{\\partial v}{\\partial y}\n)\\text{d} x \\text{d} y\n =  \\int_{T_h}f v\\text{d} x\\text{d} y\\]\nfor all \\(v\\) which are in the finite element space \\(V_h\\) and zero on the boundary \\(C\\).\n\n\nTip\nChange P1 into P2 and run the program.\n\nThis first example shows how FreeFEM executes with no effort all the usual steps required by the finite element method (FEM).\nLet’s go through them one by one.\nOn the line 2:\nThe boundary \\(\\Gamma\\) is described analytically by a parametric equation for \\(x\\) and for \\(y\\).\nWhen \\(\\Gamma = \\sum_{j = 0}^J \\Gamma_j\\) then each curve \\(\\Gamma_j\\) must be specified and crossings of \\(\\Gamma_j\\) are not allowed except at end points.\nThe keyword label can be added to define a group of boundaries for later use (boundary conditions for instance).\nHence the circle could also have been described as two half circle with the same label:\n1 border Gamma1(t = 0, pi){x = cos(t); y = sin(t); label = C};\n2 border Gamma2(t = pi, 2.*pi){x = cos(t); y = sin(t); label = C};\n\n\nBoundaries can be referred to either by name (Gamma1 for example) or by label (C here) or even by its internal number here 1 for the first half circle and 2 for the second (more examples are in Meshing Examples).\nOn the line 5\nThe triangulation \\(\\mathcal{T}_h\\) of \\(\\Omega\\) is automatically generated by buildmesh(C(50)) using 50 points on C as in Fig. 1.\nThe domain is assumed to be on the left side of the boundary which is implicitly oriented by the parametrization. So an elliptic hole can be added by typing:\n1 border C(t = 2.*pi, 0){x = 0.1+0.3*cos(t); y = 0.5*sin(t);};\n\n\nIf by mistake one had written:\n1 border C(t = 0, 2.*pi){x = 0.1+0.3*cos(t); y = 0.5*sin(t);};\n\n\nthen the inside of the ellipse would be triangulated as well as the outside.\n\nNote\nAutomatic mesh generation is based on the Delaunay-Voronoi algorithm.\nRefinement of the mesh are done by increasing the number of points on \\(\\Gamma\\), for example buildmesh(C(100)), because inner vertices are determined by the density of points on the boundary.\nMesh adaptation can be performed also against a given function f by calling adaptmesh(Th,f).\n\nNow the name \\(\\mathcal{T}_h\\) (Th in FreeFEM) refers to the family \\(\\{T_k\\}_{k = 1,\\cdots,n_t}\\) of triangles shown in Fig. 1.\nTraditionally \\(h\\) refers to the mesh size, \\(n_t\\) to the number of triangles in \\(\\mathcal{T}_h\\) and \\(n_v\\) to the number of vertices, but it is seldom that we will have to use them explicitly.\nIf \\(\\Omega\\) is not a polygonal domain, a “skin” remains between the exact domain \\(\\Omega\\) and its approximation \\(\\Omega_h = \\cup_{k = 1}^{n_t}T_k\\).\nHowever, we notice that all corners of \\(\\Gamma_h  =  \\partial\\Omega_h\\) are on \\(\\Gamma\\).\nOn line 8:\nA finite element space is, usually, a space of polynomial functions on elements, triangles here only, with certain matching properties at edges, vertices etc. Here fespace Vh(Th, P1) defines \\(V_h\\) to be the space of continuous functions which are affine in \\(x,y\\) on each triangle of \\(T_h\\).\nAs it is a linear vector space of finite dimension, basis can be found.\nThe canonical basis is made of functions, called the hat function \\(\\phi_k\\), which are continuous piecewise affine and are equal to 1 on one vertex and 0 on all others. A typical hat function is shown on Fig. 4.\n\n\n\n\nFig. 3 mesh Th¶\n\n\n\n\n\nFig. 4 Graph of \\(\\phi_1\\) (left) and \\(\\phi_6\\) (right)¶\n\n\nHat functions\n\nNote\nThe easiest way to define \\(\\phi_k\\) is by making use of the barycentric coordinates \\(\\lambda_i(x,y),~i = 1,2,3\\) of a point \\(q = (x,y)\\in T\\), defined by \\(\\sum_i\\lambda_i = 1,~~~\\sum_i\\lambda_i\\vec q^i = \\vec q\\) where \\(q^i,~i = 1,2,3\\) are the 3 vertices of \\(T\\).\nThen it is easy to see that the restriction of \\(\\phi_k\\) on \\(T\\) is precisely \\(\\lambda_k\\).\n\nThen:\n\n(2)¶\\[V_h(\\mathcal{T}_h,P_1) = \\left\\{w(x,y)\\left|\\; w(x,y) = \\sum_{k = 1}^{M}w_k\\phi_k(x,y),\\, w_k\\textrm{ are real numbers}\\right.\\right\\}\\]\nwhere \\(M\\) is the dimension of \\(V_h\\), i.e. the number of vertices.\nThe \\(w_k\\) are called the degrees of freedom of \\(w\\) and \\(M\\) the number of degree of freedom.\nIt is said also that the nodes of this finite element method are the vertices.\nSetting the problem\nOn line 9, Vh u, v declares that \\(u\\) and \\(v\\) are approximated as above, namely:\n\n(3)¶\\[u(x,y)\\simeq u_h(x,y) = \\sum_{k = 0}^{M-1} u_k\\phi_k(x,y)\\]\nOn the line 12, the right hand side f is defined analytically using the keyword func.\nLine 18 to 26 define the bilinear form of equation (1) and its Dirichlet boundary conditions.\nThis variational formulation is derived by multiplying (1) by \\(v(x,y)\\) and integrating the result over \\(\\Omega\\):\n\n\\[-\\int_{\\Omega}v\\Delta u \\,\\text{d} x\\text{d} y  =  \\int_{\\Omega} vf\\, \\text{d} x\\text{d} y\\]\nThen, by Green’s formula, the problem is converted into finding \\(u\\) such that\n\n\\[a(u,v) - \\ell(f,v)  =  0 \\quad \\forall v \\mbox{ satisfying }v = 0\\mbox{ on }\\partial\\Omega.\\]\nwith:\n\n(4)¶\\[\\begin{split}\\begin{array}{rcl}\n    a(u,v) & = & \\int_{\\Omega}\\nabla u\\cdot \\nabla v \\,\\text{d} x\\text{d} y\\\\\n    \\ell(f,v) & = & \\int_{\\Omega}fv\\, \\text{d} x\\text{d} y\n\\end{array}\\end{split}\\]\nIn FreeFEM the Poisson problem can be declared only as in:\n1 Vh u,v; problem Poisson(u,v)  =  ...\n\n\nand solved later as in:\n1 Poisson; //the problem is solved here\n\n\nor declared and solved at the same time as in:\n1 Vh u,v; solve Poisson(u,v)  =  ...\n\n\nand (4) is written with dx(u) \\( = \\partial u/\\partial x\\), dy(u) \\( = \\partial u/\\partial y\\) and:\n\\(\\displaystyle{\\int_{\\Omega}\\nabla u\\cdot \\nabla v\\, \\text{d} x\\text{d} y \\longrightarrow}\\)\nint2d(Th)( dx(u)*dx(v) + dy(u)*dy(v) )\n\\(\\displaystyle{\\int_{\\Omega}fv\\, \\text{d} x\\text{d} y \\longrightarrow}\\)\nint2d(Th)( f*v ) (Notice here, \\(u\\) is unused)\n\nWarning\nIn FreeFEM bilinear terms and linear terms should not be under the same integral indeed to construct the linear systems FreeFEM finds out which integral contributes to the bilinear form by checking if both terms, the unknown (here u) and test functions (here v) are present.\n\nSolution and visualization\nOn line 15, the current time in seconds is stored into the real-valued variable cpu.\nLine 18, the problem is solved.\nLine 29, the visualization is done as illustrated in Fig. 2.\n(see Plot for zoom, postscript and other commands).\nLine 32, the computing time (not counting graphics) is written on the console. Notice the C++-like syntax; the user needs not study C++ for using FreeFEM, but it helps to guess what is allowed in the language.\nAccess to matrices and vectors\nInternally FreeFEM will solve a linear system of the type\n\n(5)¶\\[\\sum_{j = 0}^{M-1} A_{ij}u_j - F_i = 0 ,\\quad i = 0,\\cdots,M-1;\\qquad\nF_i = \\int_{\\Omega}f\\phi_i\\, \\text{d} x\\text{d} y\\]\nwhich is found by using (3) and replacing \\(v\\) by \\(\\phi_i\\) in (4).\nThe Dirichlet conditions are implemented by penalty, namely by setting \\(A_{ii} = 10^{30}\\) and \\(F_i = 10^{30}*0\\) if \\(i\\) is a boundary degree of freedom.\n\nNote\nThe number \\(10^{30}\\) is called tgv (très grande valeur or very high value in english) and it is generally possible to change this value, see the item :freefem`solve, tgv = `\n\nThe matrix \\(A = (A_{ij})\\) is called stiffness matrix.\nIf the user wants to access \\(A\\) directly he can do so by using (see section Variational form, Sparse matrix, PDE data vector for details).\n1 varf a(u,v)\n2      =  int2d(Th)(\n3           dx(u)*dx(v)\n4         + dy(u)*dy(v)\n5     )\n6     + on(C, u = 0)\n7     ;\n8 matrix A  =  a(Vh, Vh); //stiffness matrix\n\n\nThe vector \\(F\\) in (5) can also be constructed manually:\n1 varf l(unused,v)\n2      =  int2d(Th)(\n3           f*v\n4     )\n5     + on(C, unused = 0)\n6     ;\n7 Vh F;\n8 F[]  =  l(0,Vh); //F[] is the vector associated to the function F\n\n\nThe problem can then be solved by:\n1 u[]  =  A^-1*F[]; //u[] is the vector associated to the function u\n\n\n\nNote\nHere u and F are finite element function, and u[] and F[] give the array of value associated (u[] \\(\\equiv (u_i)_{i = 0,\\dots,M-1}\\) and F[] \\(\\equiv (F_i)_{i = 0,\\dots,M-1}\\)).\nSo we have:\n\n\\[\\mathtt{u}(x,y)  =  \\sum_{i = 0}^{M-1} \\mathtt{u[][}i\\mathtt{]} \\phi_i(x,y) ,\n\\qquad \\mathtt{F}(x,y)  =  \\sum_{i = 0}^{M-1} \\mathtt{F[][}i\\mathtt{]} \\phi_i(x,y)\\]\nwhere \\(\\phi_i, i = 0...,,M-1\\) are the basis functions of Vh like in equation :eq: equation3, and \\(M  =  \\mathtt{Vh.ndof}\\) is the number of degree of freedom (i.e. the dimension of the space Vh).\n\nThe linear system (5) is solved by UMFPACK unless another option is mentioned specifically as in:\n1 Vh u, v;\n2 problem Poisson(u, v, solver = CG)  =  int2d(...\n\n\nmeaning that Poisson is declared only here and when it is called (by simply writing Poisson;) then (5) will be solved by the Conjugate Gradient method.\n\n\n\n\t\t\n\t\t\t Previous topic: Learning by Examples\n\t\t\tNext topic: Classification of partial differential equations \n\t\t\n\t","l":"tutorials/poisson.html"},"77":{"t":"Pure Convection : The Rotating Hill","p":"\n\t\t\n   \nPure Convection : The Rotating Hill¶\nSummary:\nHere we will present two methods for upwinding for the simplest convection problem.\nWe will learn about Characteristics-Galerkin and Discontinuous-Galerkin Finite Element Methods.\nLet \\(\\Omega\\) be the unit disk centered at \\((0,0)\\); consider the rotation vector field\n\n\\[\\mathbf{u}  =  [u1,u2], \\qquad u_1  =  y,\\quad u_2  =  -x\\]\nPure convection by \\(\\mathbf{u}\\) is\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\partial_t c + \\mathbf{u}.\\nabla c & =  0 &\\hbox{ in } \\Omega\\times(0,T)\\\\\n    c (t = 0) & =  c ^0 &\\hbox{ in } \\Omega.\n\\end{array}\\end{split}\\]\nThe exact solution \\(c(x_t,t)\\) at time \\(t\\) en point \\(x_t\\) is given by:\n\n\\[c(x_t,t) = c^0(x,0)\\]\nwhere \\(x_t\\) is the particle path in the flow starting at point \\(x\\) at time \\(0\\). So \\(x_t\\) are solutions of\n\n\\[\\dot{x_t}  =  u(x_t), \\quad\\ x_{t = 0}  = x , \\quad\\mbox{where}\\quad \\dot{x_t}  =  \\frac{\\text{d} ( x_t }{\\text{d} t}\\]\nThe ODE are reversible and we want the solution at point \\(x\\) at time \\(t\\) ( not at point \\(x_t\\)) the initial point is \\(x_{-t}\\), and we have\n\n\\[c(x,t) = c^0(x_{-t},0)\\]\nThe game consists in solving the equation until \\(T = 2\\pi\\), that is for a full revolution and to compare the final solution with the initial one; they should be equal.\n\nSolution by a Characteristics-Galerkin Method¶\nIn FreeFEM there is an operator called convect([u1,u2], dt, c) which compute \\(c\\circ X\\) with \\(X\\) is the convect field defined by \\(X(x) =  x_{dt}\\) and where \\(x_\\tau\\) is particule path in the steady state velocity field \\(\\mathbf{u} = [u1,u2]\\) starting at point \\(x\\) at time \\(\\tau = 0\\), so \\(x_\\tau\\) is solution of the following ODE:\n\n\\[\\dot{x}_\\tau  =  u(x_\\tau), {x}_{\\tau = 0} = x.\\]\nWhen \\(\\mathbf{u}\\) is piecewise constant; this is possible because \\(x_\\tau\\) is then a polygonal curve which can be computed exactly and the solution exists always when \\(\\mathbf{u}\\) is divergence free; convect returns \\(c(x_{df}) = C\\circ X\\).\n 1 // Parameters\n 2 real dt  =  0.17;\n 3 \n 4 // Mesh\n 5 border C(t = 0., 2.*pi) {x = cos(t); y = sin(t);};\n 6 mesh Th  =  buildmesh(C(100));\n 7 \n 8 // Fespace\n 9 fespace Uh(Th, P1);\n10 Uh cold, c  =  exp(-10*((x-0.3)^2 +(y-0.3)^2));\n11 Uh u1  =  y, u2  =  -x;\n12 \n13 // Time loop\n14 real t  =  0;\n15 for (int m  =  0; m < 2.*pi/dt; m++){\n16     t + =  dt;\n17     cold  =  c;\n18     c  =  convect([u1, u2], -dt, cold);\n19     plot(c, cmm = \" t = \"+t +\", min = \"+c[].min+\", max = \"+c[].max);\n20 }\n\n\n\nNote\n3D plots can be done by adding the qualifyer dim = 3 to the plot instruction.\n\nThe method is very powerful but has two limitations:\n\nit is not conservative\nit may diverge in rare cases when \\(|\\mathbf{u}|\\) is too small due to quadrature error.\n\n\n\nSolution by Discontinuous-Galerkin FEM¶\nDiscontinuous Galerkin methods take advantage of the discontinuities of \\(c\\) at the edges to build upwinding.\nThere are may formulations possible.\nWe shall implement here the so-called dual-\\(P_1^{DC}\\) formulation (see [ERN2006]):\n\n\\[\\int_\\Omega(\\frac{c^{n+1}-c^n}{\\delta t} +u\\cdot\\nabla c)w\n+\\int_E(\\alpha|n\\cdot u|-\\frac 12 n\\cdot u)[c]w\n = \\int_{E_\\Gamma^-}|n\\cdot u| cw~~~\\forall w\\]\nwhere \\(E\\) is the set of inner edges and \\(E_\\Gamma^-\\) is the set of boundary edges where \\(u\\cdot n<0\\) (in our case there is no such edges).\nFinally \\([c]\\) is the jump of \\(c\\) across an edge with the convention that \\(c^+\\) refers to the value on the right of the oriented edge.\n 1 // Parameters\n 2 real al = 0.5;\n 3 real dt  =  0.05;\n 4 \n 5 // Mesh\n 6 border C(t = 0., 2.*pi) {x = cos(t); y = sin(t);};\n 7 mesh Th  =  buildmesh(C(100));\n 8 \n 9 // Fespace\n10 fespace Vh(Th,P1dc);\n11 Vh w, ccold, v1  =  y, v2  =  -x, cc  =  exp(-10*((x-0.3)^2 +(y-0.3)^2));\n12 \n13 // Macro\n14 macro n() (N.x*v1 + N.y*v2) // Macro without parameter\n15 \n16 // Problem\n17 problem Adual(cc, w)\n18      =  int2d(Th)(\n19           (cc/dt+(v1*dx(cc)+v2*dy(cc)))*w\n20     )\n21     + intalledges(Th)(\n22           (1-nTonEdge)*w*(al*abs(n)-n/2)*jump(cc)\n23     )\n24     - int2d(Th)(\n25           ccold*w/dt\n26     )\n27     ;\n28 \n29 // Time iterations\n30 for (real t  =  0.; t < 2.*pi; t + =  dt){\n31     ccold  =  cc;\n32     Adual;\n33     plot(cc, fill = 1, cmm = \"t = \"+t+\", min = \"+cc[].min+\", max = \"+ cc[].max);\n34 }\n35 \n36 // Plot\n37 real [int] viso  =  [-0.2, -0.1, 0., 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1., 1.1];\n38 plot(cc, wait = 1, fill = 1, ps = \"ConvectCG.eps\", viso = viso);\n39 plot(cc, wait = 1, fill = 1, ps = \"ConvectDG.eps\", viso = viso);\n\n\n\nNote\nNew keywords: intalledges to integrate on all edges of all triangles\n\n\\[\\mathtt{intalledges}(\\mathtt{Th}) \\equiv \\sum_{T\\in\\mathtt{Th}}\\int_{\\partial T }\\]\n\n(so all internal edges are see two times), nTonEdge which is one if the triangle has a boundary edge and two otherwise, jump to implement \\([c]\\).\nResults of both methods are shown on Fig. 17 nad Fig. 18 with identical levels for the level line; this is done with the plot-modifier viso.\nNotice also the macro where the parameter \\(\\mathbf{u}\\) is not used (but the syntax needs one) and which ends with a //; it simply replaces the name n by (N.x*v1+N.y*v2).\nAs easily guessed N.x,N.y is the normal to the edge.\n\n\n\n\nFig. 17 The rotating hill after one revolution with Characteristics-Galerkin¶\n\n\n\n\n\nFig. 18 The rotating hill after one revolution with Discontinuous \\(P_1\\) Galerkin¶\n\n\nRotating hill\nNow if you think that DG is too slow try this:\n 1 // Mesh\n 2 border C(t = 0., 2.*pi) {x = cos(t); y = sin(t);};\n 3 mesh Th  =  buildmesh(C(100));\n 4 \n 5 fespace Vh(Th,P1);//P1,P2,P0,P1dc,P2dc, uncond stable\n 6 \n 7 Vh vh,vo,u1  =  y, u2  =  -x, v  =  exp(-10*((x-0.3)^2 +(y-0.3)^2));\n 8 real dt  =  0.03,t = 0, tmax = 2*pi, al = 0.5, alp = 200;\n 9 \n10 problem  A(v,vh)  =  int2d(Th)(v*vh/dt-v*(u1*dx(vh)+u2*dy(vh)))\n11   + intalledges(Th)(vh*(mean(v)*(N.x*u1+N.y*u2)\n12                    +alp*jump(v)*abs(N.x*u1+N.y*u2)))\n13   + int1d(Th,1)(((N.x*u1+N.y*u2)>0)*(N.x*u1+N.y*u2)*v*vh)\n14   - int2d(Th)(vo*vh/dt);\n15 \n16 varf  Adual(v,vh)  =  int2d(Th)((v/dt+(u1*dx(v)+u2*dy(v)))*vh)\n17   + intalledges(Th)((1-nTonEdge)*vh*(al*abs(N.x*u1+N.y*u2)\n18                              -(N.x*u1+N.y*u2)/2)*jump(v));\n19 \n20 varf rhs(vo,vh) =  int2d(Th)(vo*vh/dt);\n21 \n22 real[int] viso = [-0.1,0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.1];\n23 \n24 matrix AA = Adual(Vh,Vh,solver = GMRES);\n25 matrix BB = rhs(Vh,Vh);\n26 \n27 for ( t = 0; t< tmax ; t+ = dt)\n28 {\n29    vo[] = v[];\n30    vh[] = BB*vo[];\n31    v[] = AA^-1*vh[];\n32    plot(v,fill = 0,viso = viso,cmm = \" t = \"+t + \", min = \" + v[].min + \", max = \" +  v[].max);\n33 };\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Irrotational Fan Blade Flow and Thermal effects\n\t\t\tNext topic: The System of elasticity \n\t\t\n\t","l":"tutorials/rotatingHill.html"},"78":{"t":"The System of Stokes for Fluids","p":"\n\t\t\n   \nThe System of Stokes for Fluids¶\nIn the case of a flow invariant with respect to the third coordinate (two-dimensional flow), flows at low Reynolds number (for instance micro-organisms) satisfy,\n\n\\[\\begin{split}\\begin{array}{rcl}\n    -\\Delta \\mathbf{u} + \\nabla p & = & 0\\\\\n    \\nabla\\cdot \\mathbf{u} & = & 0\n\\end{array}\\end{split}\\]\nwhere \\(\\mathbf{u} = (u_1,u_2)\\) is the fluid velocity and \\(p\\) its pressure.\nThe driven cavity is a standard test.\nIt is a box full of liquid with its lid moving horizontally at speed one.\nThe pressure and the velocity must be discretized in compatible fintie element spaces for the LBB conditions to be satisfied:\n\n\\[\\sup_{p\\in P_h}\\frac{(\\mathbf{u},\\nabla p)}{|p|}\\geq \\beta|\\mathbf{u}|~~~\\forall \\mathbf{u}\\in U_h\\]\n 1 // Parameters\n 2 int nn  =  30;\n 3 \n 4 // Mesh\n 5 mesh Th  =  square(nn, nn);\n 6 \n 7 // Fespace\n 8 fespace Uh(Th, P1b);\n 9 Uh u, v;\n10 Uh uu, vv;\n11 \n12 fespace Ph(Th, P1);\n13 Ph p, pp;\n14 \n15 // Problem\n16 solve stokes ([u, v, p], [uu, vv, pp])\n17      =  int2d(Th)(\n18           dx(u)*dx(uu)\n19         + dy(u)*dy(uu)\n20         + dx(v)*dx(vv)\n21         + dy(v)*dy(vv)\n22         + dx(p)*uu\n23         + dy(p)*vv\n24         + pp*(dx(u) + dy(v))\n25         - 1e-10*p*pp\n26     )\n27     + on(1, 2, 4, u = 0, v = 0)\n28     + on(3, u = 1, v = 0)\n29     ;\n30 \n31 // Plot\n32 plot([u, v], p, wait = 1);\n\n\n\nNote\nWe add a stabilization term \\(\\bf{-10e-10*p*pp}\\) to fix the constant part of the pressure.\n\nResults are shown on Fig. 21.\n\n\n\nFig. 21 Solution of Stokes’ equations for the driven cavity problem, showing the velocity field and the pressure level lines.¶\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: The System of elasticity\n\t\t\tNext topic: A projection algorithm for the Navier-Stokes equations \n\t\t\n\t","l":"tutorials/stokes.html"},"79":{"t":"Thermal Conduction","p":"\n\t\t\n   \nThermal Conduction¶\nSummary :\nHere we shall learn how to deal with a time dependent parabolic problem.\nWe shall also show how to treat an axisymmetric problem and show also how to deal with a nonlinear problem\nHow air cools a plate\nWe seek the temperature distribution in a plate \\((0,Lx)\\times(0,Ly)\\times(0,Lz)\\) of rectangular cross section \\(\\Omega = (0,6)\\times(0,1)\\); the plate is surrounded by air at temperature \\(u_e\\) and initially at temperature \\(u = u_0+\\frac x L u_1\\).\nIn the plane perpendicular to the plate at \\(z = Lz/2\\), the temperature varies little with the coordinate \\(z\\); as a first approximation the problem is 2D.\nWe must solve the temperature equation in \\(\\Omega\\) in a time interval (0,T).\n\n\\[\\begin{split}\\begin{array}{rcl}\n    \\partial_t u -\\nabla\\cdot(\\kappa\\nabla u) & =  0 & \\hbox{ in } \\Omega\\times(0,T)\\\\\n    u(x,y,0) & =  u_0+x u_1 &\\\\\n    \\kappa\\frac{\\partial u}{\\partial \\boldsymbol{n}} +\\alpha(u-u_e) & =  0 & \\hbox{ on } \\Gamma\\times(0,T)\n\\end{array}\\end{split}\\]\nHere the diffusion \\(\\kappa\\) will take two values, one below the middle horizontal line and ten times less above, so as to simulate a thermostat.\nThe term \\(\\alpha(u-u_e)\\) accounts for the loss of temperature by convection in air.\nMathematically this boundary condition is of Fourier (or Robin, or mixed) type.\nThe variational formulation is in \\(L^2(0,T;H^1(\\Omega))\\); in loose terms and after applying an implicit Euler finite difference approximation in time; we shall seek \\(u^n(x,y)\\) satisfying for all \\(w\\in H^1(\\Omega)\\):\n\n\\[\\int_\\Omega(\\frac{u^n-u^{n-1}}{\\delta t} w + \\kappa\\nabla u^n\\nabla w) +\\int_\\Gamma\\alpha(u^n-u_ue)w = 0\\]\n 1 // Parameters\n 2 func u0  =  10. + 90.*x/6.;\n 3 func k  =  1.8*(y<0.5) + 0.2;\n 4 real ue  =  25.;\n 5 real alpha = 0.25;\n 6 real T = 5.;\n 7 real dt = 0.1 ;\n 8 \n 9 // Mesh\n10 mesh Th  =  square(30, 5, [6.*x,y]);\n11 \n12 // Fespace\n13 fespace Vh(Th, P1);\n14 Vh u = u0, v, uold;\n15 \n16 // Problem\n17 problem thermic(u, v)\n18      =  int2d(Th)(\n19           u*v/dt\n20         + k*(\n21               dx(u) * dx(v)\n22             + dy(u) * dy(v)\n23         )\n24     )\n25     + int1d(Th, 1, 3)(\n26           alpha*u*v\n27     )\n28     - int1d(Th, 1, 3)(\n29           alpha*ue*v\n30     )\n31     - int2d(Th)(\n32           uold*v/dt\n33     )\n34     + on(2, 4, u = u0)\n35     ;\n36 \n37 // Time iterations\n38 ofstream ff(\"thermic.dat\");\n39 for(real t  =  0; t < T; t + =  dt){\n40     uold  =  u; //equivalent to u^{n-1}  =  u^n\n41     thermic; //here the thermic problem is solved\n42     ff << u(3., 0.5) << endl;\n43     plot(u);\n44 }\n\n\n\nNote\nWe must separate by hand the bilinear part from the linear one.\n\n\nNote\nThe way we store the temperature at point (3, 0.5) for all times in file thermic.dat.\nShould a one dimensional plot be required (you can use gnuplot tools), the same procedure can be used. For instance to print \\(x\\mapsto \\frac{\\partial u}{\\partial y}(x,0.9)\\) one would do:\n1 for(int i  =  0; i < 20; i++)\n2    cout << dy(u)(6.0*i/20.0,0.9) << endl;\n\n\n\nResults are shown on Fig. 13 and Fig. 14.\n\n\n\n\nFig. 13 Temperature at \\(t = 4.9\\).¶\n\n\n\n\n\nFig. 14 Decay of temperature versus time at \\(x = 3, y = 0.5\\)¶\n\n\nThermal conduction\n\nAxisymmetry: 3D Rod with circular section¶\nLet us now deal with a cylindrical rod instead of a flat plate.\nFor simplicity we take \\(\\kappa = 1\\).\nIn cylindrical coordinates, the Laplace operator becomes (\\(r\\) is the distance to the axis, \\(z\\) is the distance along the axis, \\(\\theta\\) polar angle in a fixed plane perpendicular to the axis):\n\n\\[\\Delta u  =  {1\\over r}\\partial _r(r\\partial _r u) + {1\\over r^2}\\partial ^2_{\\theta\\theta} u\n + \\partial ^2_{z z}.\\]\nSymmetry implies that we loose the dependence with respect to \\(\\theta\\); so the domain \\(\\Omega\\) is again a rectangle \\(]0,R[\\times]0,|[\\) .\nWe take the convention of numbering of the edges as in square() (1 for the bottom horizontal …); the problem is now:\n\n\\[\\begin{split}\\begin{array}{rcl}\n    r\\partial_t u-\\partial _r(r\\partial _r u) - \\partial _z(r\\partial _z u) & =  0 &\\hbox{ in } \\Omega\\\\\n    u(t = 0) & =  u_0 + \\frac z{L_z} (u_1-u)&\\\\\n    u|_{\\Gamma_4} & =  u_0&\\\\\n    u|_{\\Gamma_2} & =  u_1&\\\\\n    \\alpha(u-u_e) + {\\partial u\\over \\partial\\boldsymbol{n}} |_{\\Gamma_1\\cup\\Gamma_3} & =  0&\n\\end{array}\\end{split}\\]\nNote that the PDE has been multiplied by \\(r\\).\nAfter discretization in time with an implicit scheme, with time steps dt, in the FreeFEM syntax \\(r\\) becomes \\(x\\) and \\(z\\) becomes \\(y\\) and the problem is:\n 1 problem thermaxi(u, v)\n 2      =  int2d(Th)(\n 3           (u*v/dt + dx(u)*dx(v) + dy(u)*dy(v))*x\n 4     )\n 5     + int1d(Th, 3)(\n 6           alpha*x*u*v\n 7     )\n 8     - int1d(Th, 3)(\n 9           alpha*x*ue*v\n10     )\n11     - int2d(Th)(\n12           uold*v*x/dt\n13     )\n14     + on(2, 4, u = u0);\n\n\n\nNote\nThe bilinear form degenerates at \\(x = 0\\).\nStill one can prove existence and uniqueness for \\(u\\) and because of this degeneracy no boundary conditions need to be imposed on \\(\\Gamma_1\\).\n\n\n\nA Nonlinear Problem : Radiation¶\nHeat loss through radiation is a loss proportional to the absolute temperature to the fourth power (Stefan’s Law).\nThis adds to the loss by convection and gives the following boundary condition:\n\n\\[\\kappa{\\partial u\\over \\partial\\boldsymbol{n}} +\\alpha(u-u_e) + c[(u + 273)^4 - (u_e+273)^4]  =  0\\]\nThe problem is nonlinear, and must be solved iteratively with fixed-point iteration\nwhere \\(m\\) denotes the iteration index, a semi-linearization of the radiation condition gives\n\n\\[{\\partial u^{m+1}\\over \\partial\\boldsymbol{n}} + \\alpha(u^{m+1}-u_e)+ c(u^{m+1}-u_e)\n(u^m+u_e +546) ((u^m + 273)^2 + (u_e+273)^2)  =  0,\\]\nbecause we have the identity \\(a^4 - b^4  =  (a-b)(a+b)(a^2+b^2)\\).\nThe iterative process will work with \\(v = u-u_e\\).\n 1 ...\n 2 // Mesh\n 3 fespace Vh(Th, P1);\n 4 Vh vold, w, v = u0-ue, b,vp;\n 5 \n 6 // Problem\n 7 problem thermradia(v, w)\n 8      =  int2d(Th)(\n 9           v*w/dt\n10         + k*(dx(v) * dx(w) + dy(v) * dy(w))\n11     )\n12     + int1d(Th, 1, 3)(\n13           b*v*w\n14     )\n15     - int2d(Th)(\n16           vold*w/dt\n17     )\n18     + on(2, 4, v = u0-ue)\n19     ;\n20 \n21 verbosity = 0; // to remove spurious FREEfem print\n22 for (real t = 0;t<T;t+ = dt){\n23   vold[]  =  v[];// just copy DoF's, faster than interpolation pv = v;\n24   for (int m  =  0; m < 5; m++) {\n25     vp[] = v[];// save previous state of commute error\n26     b  =  alpha + rad * (v + 2*uek) * ((v+uek)^2 + uek^2);\n27     thermradia;\n28     vp[]- = v[];\n29     real err  =  vp[].linfty;// error value\n30     cout << \" time \" << t << \" iter \" << m << \" err  =  \"<< vp[].linfty << endl;\n31     if( err < 1e-5) break; // if error is enough  small break fixed-point loop\n32     }\n33   }\n34 v[] + =  ue;//  add a constant to all DoF's of v\n35 \n36 plot(v);\n\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Acoustics\n\t\t\tNext topic: Irrotational Fan Blade Flow and Thermal effects \n\t\t\n\t","l":"tutorials/thermalConduction.html"},"80":{"t":"Tutorial to write a transient Stokes solver in matrix form","p":"\n\t\t\n   \nTutorial to write a transient Stokes solver in matrix form¶\nConsider the following script to solve a time dependent Stokes problem in a cavity\n 1 // Parameters\n 2 real nu  =  0.1;\n 3 real T = 1.;\n 4 real dt  =  0.1;\n 5 \n 6 // Mesh\n 7 mesh Th  =  square(10, 10);\n 8 \n 9 // Fespace\n10 fespace Vh(Th, P2)\n11 Vh u, v;\n12 Vh uu, vv;\n13 Vh uold = 0, vold = 0;\n14 \n15 fespace Qh(Th, P1);\n16 Qh p;\n17 Qh pp;\n18 \n19 // Problem\n20 problem stokes (u, v, p, uu, vv, pp)\n21      =  int2d(Th)(\n22           (u*uu+v*vv)/dt\n23         + nu*(dx(u)*dx(uu) + dy(u)*dy(uu) + dx(v)*dx(vv) + dy(v)*dy(vv))\n24         - p*pp*1.e-6\n25         - p*(dx(uu) + dy(vv))\n26         - pp*(dx(u) + dy(v))\n27     )\n28     - int2d(Th)(\n29           (uold*uu+vold*vv)/dt\n30     )\n31     + on(1, 2, 4, u = 0, v = 0)\n32     + on(3, u = 1, v = 0)\n33     ;\n34 \n35 // Time loop\n36 int m, M  =  T/dt;\n37 for(m  =  0; m < M; m++){\n38     stokes;\n39     uold  =  u;\n40     vold  =  v;\n41 }\n42 \n43 // Plot\n44 plot(p, [u, v], value = true, wait = true, cmm = \"t = \"+m*dt);\n\n\nEvery iteration is in fact of the form \\(A[u,v,p]  =  B[uold,vold,pold] + b\\) where \\(A,B\\) are matrices and \\(b\\) is a vector containing the boundary conditions.\n\\(A,B,b\\) are constructed by:\n 1 fespace Xh(Th, [P2, P2, P1]);\n 2 varf aa ([u, v, p], [uu, vv, pp])\n 3      =  int2d(Th)(\n 4           (u*uu+v*vv)/dt\n 5         + nu*(dx(u)*dx(uu) + dy(u)*dy(uu) + dx(v)*dx(vv) + dy(v)*dy(vv))\n 6         - p*pp*1.e-6\n 7         - p*(dx(uu) + dy(vv))\n 8         - pp*(dx(u) + dy(v))\n 9     )\n10     + on(1, 2, 4, u = 0, v = 0)\n11     + on(3, u = 1, v = 0)\n12     ;\n13 \n14 varf bb ([uold, vold, pold], [uu, vv, pp])\n15      =  int2d(Th)(\n16           (uold*uu+vold*vv)/dt\n17     )\n18     //+ on(1, 2, 4, uold = 0, vold = 0)\n19     //+ on(3, uold = 1, vold = 0)\n20     ;\n21 \n22 varf bcl ([uold, vold, pold], [uu, vv, pp])\n23      =  on(1, 2, 4, uold = 0, vold = 0)\n24     + on(3, uold = 1, vold = 0)\n25     ;\n26 \n27 matrix A  =  aa(Xh, Xh, solver = UMFPACK);\n28 matrix B  =  bb(Xh, Xh);\n29 real[int] b  =  bcl(0, Xh);\n\n\nNote that the boundary conditions are not specified in \\(bb\\).\nRemoving the comment // would cause the compiler to multiply the diagonal terms corresponding to a Dirichlet degree of freedom by a very large term (tgv); if so \\(b\\) would not be needed, on the condition that \\(uold = 1\\) on boundary 3 initially.\nNote also that b has a tgv on the Dirichlet nodes, by construction, and so does A.\nThe loop will then be:\n1 real[int] sol(Xh.ndof), aux(Xh.ndof);\n2 for (m  =  0; m < M; m++){\n3     aux  =  B*sol; aux + =  b;\n4     sol  =  A^-1 * aux;\n5 }\n\n\nThere is yet a difficulty with the initialization of sol and with the solution from sol.\nFor this we need a temporary vector in \\(X_h\\) and here is a solution:\n1 Xh [w1, w2, wp]  =  [uold, vold, pp];\n2 sol  =  w1[]; //cause also the copy of w2 and wp\n3 for (m  =  0; m < M; m++){\n4     aux  =  B*sol; aux + =  b;\n5     sol  =  A^-1 * aux;\n6 }\n7 w1[] = sol; u = w1; v =  w2; p = wp;\n8 plot(p, [u, v], value = true, wait = true, cmm = \"t = \"+m*dt);\n\n\nThe freefem team agrees that the line sol = w1[]; is mysterious as it copies also w2 and wp into sol.\nStructured data such as vectors of \\(X_h\\) here cannot be written component by component.\nHence w1 = u is not allowed.\n\n\n\n\t\t\n\t\t\t Previous topic: Time dependent schema optimization for heat equations\n\t\t\tNext topic: Wifi Propagation \n\t\t\n\t","l":"tutorials/timeDependentStokes.html"},"81":{"t":"Wifi Propagation","p":"\n\t\t\n   \nWifi Propagation¶\n\nSummary¶\nIn this tutorial, we will study the wifi signal power in a flat.\nAn awesome flat is especially designed for the experiment, with 2 walls:\n\n\n\nFig. 43 Flat¶\n\n\nEven if the flat seems small enough to be covered by wifi everywhere, it is still interesting to study where the signal’s power is the lowest.\nWe will study where to put the hotspot to get the best coverage, and as we’re a bit lazy we will only put it next to the left wall.\n\n\nPhysics¶\nIn a nutshell, the Wifi is a electromagnetic wave that contains a signal : Internet data.\nElectromagnetic waves are well know by physicists and are ruled by the 4 Maxwell equations which give you the solution for E, the electrical field, and B, the magnetic field, in space but also in time.\nWe don’t care about the time here, because the signal period is really short so our internet quality will not change with time.\nWithout time, we’re looking for stationaries solutions, and the Maxwell equations can be simplified to one equation, the Helmholtz one :\n\n\\[\\nabla^{2}E + \\frac{k^{2}}{n^{2}}E  =  0\\]\nWhere k is the angular wavenumber of the wifi signal, and n the refractive index of the material the wave is in.\nIndeed, the main point of this study is the impact of walls on the signal’s power, where the n is different from air (where it is 1).\nIn walls, the refractive index is a complex number in which the two parts have a physic interpretation:\n\nThe real part defines the reflexion of the wall (the amount of signal that doesn’t pass).\nThe imaginary part defines the absorption of the wall (the amount that disappears).\n\nThe wifi hotspot (simulated by a simple circle) will be the boundary condition, with a non null value for our electrical field.\n\n\nCoding¶\n\nThe domain¶\nIn order to create the domain of experimentation, we need to create border objects, like this :\n 1 real a  =  40, b  =  40, c  =  0.5;\n 2 border a00(t = 0, 1) {x = a*t; y = 0; label = 1;}\n 3 border a10(t = 0, 1) {x = a; y = b*t; label = 1;}\n 4 border a20(t = 1, 0) {x = a*t; y = b; label = 1;}\n 5 border a30(t = 1, 0) {x = 0; y = b*t; label = 1;}\n 6 border a01(t = 0, 1) {x = c+(a-c*2)*t; y = c; label = 1;}\n 7 border a11(t = 0, 1) {x = a-c; y = c+(b-c*2)*t; label = 1;}\n 8 border a21(t = 1, 0) {x = c+(a-c*2)*t; y = b-c; label = 1;}\n 9 border a31(t = 1, 0) {x = c; y = c+(b-c*2)*t; label = 1;}\n10 \n11 real p  =  5, q  =  20, d  =  34, e  =  1;\n12 border b00(t = 0, 1) {x = p+d*t; y = q; label = 3;}\n13 border b10(t = 0, 1) {x = p+d; y = q+e*t; label = 3;}\n14 border b20(t = 1, 0) {x = p+d*t; y = q+e; label = 3;}\n15 border b30(t = 1, 0) {x = p; y = q+e*t; label = 3;}\n16 \n17 real r  =  30, s  = 1 , j  =  1, u  =  15;\n18 border c00(t = 0, 1) {x = r+j*t; y = s; label = 3;}\n19 border c10(t = 0, 1) {x = r+j; y = s+u*t; label = 3;}\n20 border c20(t = 1, 0) {x = r+j*t; y = s+u; label = 3;}\n21 border c30(t = 1, 0) {x = r; y = s+u*t; label = 3;}\n\n\n\n\nLet’s create a mesh¶\n1 int n = 13;\n2 mesh Sh  =  buildmesh(a00(10*n) + a10(10*n) + a20(10*n) + a30(10*n)\n3     + a01(10*n) + a11(10*n) + a21(10*n) + a31(10*n)\n4     + b00(5*n) + b10(5*n) + b20(5*n) + b30(5*n)\n5     + c00(5*n) + c10(5*n) + c20(5*n) + c30(5*n));\n6 plot(Sh, wait = 1);\n\n\nSo we are creating a mesh, and plotting it :\n\n\n\nFig. 44 Mesh¶\n\n\nThere is currently no wifi hotspot, and as we want to resolve the equation for a multiple number of position next to the left wall, let’s do a for loop:\n1 int bx;\n2 for (bx  =  1; bx < =  7; bx++){\n3     border C(t = 0, 2*pi){x = 2+cos(t); y = bx*5+sin(t); label = 2;}\n4 \n5     mesh Th  =  buildmesh(a00(10*n) + a10(10*n) + a20(10*n) + a30(10*n)\n6         + a01(10*n) + a11(10*n) + a21(10*n) + a31(10*n) + C(10)\n7         + b00(5*n) + b10(5*n) + b20(5*n) + b30(5*n)\n8         + c00(5*n) + c10(5*n) + c20(5*n) + c30(5*n));\n\n\nThe border C is our hotspot and as you can see a simple circle.\nTh is our final mesh, with all borders and the hotspot.\nLet’s resolve this equation !\n 1 fespace Vh(Th, P1);\n 2 func real wall() {\n 3    if (Th(x,y).region  =  =  Th(0.5,0.5).region || Th(x,y).region  =  =  Th(7,20.5).region || Th(x,y).region  =  =  Th(30.5,2).region) { return 1; }\n 4    else { return 0; }\n 5 }\n 6 \n 7 Vh<complex> v,w;\n 8 \n 9 randinit(900);\n10 Vh wallreflexion  =  randreal1();\n11 Vh<complex> wallabsorption  =  randreal1()*0.5i;\n12 Vh k  =  6;\n13 \n14 cout << \"Reflexion of walls min/max: \" << wallreflexion[].min << \" \" << wallreflexion[].max << \"\\n\";\n15 cout << \"Absorption of walls min/max: \" << wallabsorption[].min << \" \"<<   wallabsorption[].max << \"\\n\";\n16 \n17 problem muwave(v,w)  = \n18     int2d(Th)(\n19           (v*w*k^2)/(1+(wallreflexion+wallabsorption)*wall())^2\n20         - (dx(v)*dx(w)+dy(v)*dy(w))\n21     )\n22     + on(2, v = 1)\n23     ;\n24 \n25 muwave;\n26 Vh vm  =  log(real(v)^2 + imag(v)^2);\n27 plot(vm, wait = 1, fill = true, value = 0, nbiso = 65);\n28 }\n\n\nA bit of understanding here :\n\nThe fespace keyword defines a finite elements space, no need to know more here.\nThe function wall return 0 if in air and 1 if in a wall (x and y are global variables).\nFor this example, random numbers are used for the reflexion and the absorption.\nThe problem is defined with problem and we solve it by calling it.\n\nFinally, I plotted the \\(\\log\\) of the module of the solution v to see the signal’s power, and here we are :\n\n\n\nFig. 45 Solution¶\n\n\nBeautiful isn’t it ? This is the first position for the hotspot, but there are 6 others, and the electrical field is evolving depending on the position.\nYou can see the other positions here :\n\n\n\n\nFig. 46 Point 2¶\n\n\n\n\n\nFig. 47 Point 3¶\n\n\n\n\n\nFig. 48 Point 4¶\n\n\n\n\n\nFig. 49 Point 5¶\n\n\n\n\n\nFig. 50 Point 6¶\n\n\n\n\n\nFig. 51 Point 7¶\n\n\nWifi propagation\n\n\n\n\n\n\t\t\n\t\t\t Previous topic: Tutorial to write a transient Stokes solver in matrix form\n\t\t\tNext topic: Plotting in Matlab and Octave \n\t\t\n\t","l":"tutorials/wifiPropagation.html"}};
const PREVIEW_PAGEDATA = [{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{}];